float SignalValueObject.floatValue.getter(double a1)
{
  return a1;
}

BOOL SignalValueObject.BOOLValue.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 0xFFFFFFFFFFFFFFFELL;
}

void PhoneAppSelectionSignalsGatherer.buildMetrics(person:phoneCallNLIntent:candidateAppBundleIds:selectedAppId:signalMap:phoneAppSelectionSignalsGathererType:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v42 = v4;
  uint64_t v43 = v5;
  uint64_t v41 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_4();
  uint64_t v19 = v18 - v17;
  id v20 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEvent) init];
  if (!v20)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    v21 = (void *)OUTLINED_FUNCTION_25_0(v27, (uint64_t)static Logger.siriPhone);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_8_2(v28))
    {
      v29 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v29);
      OUTLINED_FUNCTION_1_3(&dword_0, v30, v31, "#PhoneAppSelectionSignalsGatherer: failed to generate top-level SELF message");
      OUTLINED_FUNCTION_6();
    }
    goto LABEL_18;
  }
  v21 = v20;
  id v22 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEventMetadata) init];
  if (!v22)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    v33 = OUTLINED_FUNCTION_25_0(v32, (uint64_t)static Logger.siriPhone);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_14_2(v34))
    {
      v35 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_28_14(v35);
      OUTLINED_FUNCTION_24_1(&dword_0, v36, v37, "#PhoneAppSelectionSignalsGatherer: failed to generate event metadata");
      OUTLINED_FUNCTION_6();
    }
LABEL_17:

LABEL_18:
    goto LABEL_19;
  }
  v23 = v22;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_uuid, v13);
  id v24 = SISchemaUUID.__allocating_init(nsuuid:)();
  [v23 setInferenceId:v24];

  [v21 setEventMetadata:v23];
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v1 + 208))(v12, v10, v8, v41, v42, v43, v3 & 1);
  if (!v25)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    v33 = OUTLINED_FUNCTION_25_0(v38, (uint64_t)static Logger.siriPhone);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v33, v39))
    {

      goto LABEL_19;
    }
    v40 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_0, v33, v39, "PhoneAppSelectionSignalsGatherer error on building appSelectionGroundTruth object", v40, 2u);
    OUTLINED_FUNCTION_6();

    goto LABEL_17;
  }
  v26 = (void *)v25;
  [v21 setCommsAppSelectionGroundTruthGenerated:v25];

LABEL_19:
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneAppSelectionSignalsGatherer.getIsResolvedContactInApp(phoneCallNLIntent:appBundleId:)(void *a1)
{
  uint64_t v1 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v2 = *(uint64_t (**)(uint64_t))(v1 + 24);
  uint64_t v3 = OUTLINED_FUNCTION_47_19();
  uint64_t v4 = *(void *)(v2(v3) + 16);
  swift_bridgeObjectRelease();
  if (v4 != 1)
  {
    char v15 = 0;
    return v15 & 1;
  }
  uint64_t v5 = OUTLINED_FUNCTION_47_19();
  uint64_t result = v2(v5);
  if (*(void *)(result + 16))
  {
    outlined init with copy of SignalProviding(result + 32, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v7 = v20;
    uint64_t v8 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v9 = SiriPhoneContact.getVocabularyAppsBundleSet()(v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t v10 = OUTLINED_FUNCTION_7_14();
    if (((static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(v10, v11) & 1) != 0
       || (uint64_t v12 = OUTLINED_FUNCTION_7_14(),
           (static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(v12, v13) & 1) != 0))
      && (specialized Set.contains(_:)(0x73746361746E6F43, 0xE800000000000000, v9), (v14 & 1) != 0))
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v16 = OUTLINED_FUNCTION_7_14();
      specialized Set.contains(_:)(v16, v17, v9);
      char v15 = v18;
    }
    swift_bridgeObjectRelease();
    return v15 & 1;
  }
  __break(1u);
  return result;
}

uint64_t PhoneAppSelectionSignalsGatherer.deinit()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = OUTLINED_FUNCTION_69_2();
  v2(v1);

  return v0;
}

uint64_t PhoneAppSelectionSignalsGatherer.__deallocating_deinit()
{
  PhoneAppSelectionSignalsGatherer.deinit();

  return swift_deallocClassInstance();
}

void *SignalValueObject.unsetValueInt.unsafeMutableAddressor()
{
  return &static SignalValueObject.unsetValueInt;
}

void SignalValueObject.doubleValue.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

PhoneCallFlowDelegatePlugin::PhoneAppSelectionSignalsGathererType_optional __swiftcall PhoneAppSelectionSignalsGathererType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneAppSelectionSignalsGathererType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneAppSelectionSignalsGathererType_appNameSpecifiedByUser;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneAppSelectionSignalsGathererType_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t PhoneAppSelectionSignalsGathererType.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000017;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneAppSelectionSignalsGathererType(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneAppSelectionSignalsGathererType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneAppSelectionSignalsGathererType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneAppSelectionSignalsGathererType(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneAppSelectionSignalsGathererType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneAppSelectionSignalsGathererType@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneAppSelectionSignalsGathererType_optional *a2@<X8>)
{
  result.value = PhoneAppSelectionSignalsGathererType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneAppSelectionSignalsGathererType@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PhoneAppSelectionSignalsGathererType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2D4C9C()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t partial apply for closure #1 in PhoneAppSelectionSignalsGatherer.execute(person:phoneCallNLIntent:candidateAppBundleIds:selectedAppId:phoneAppSelectionSignalsGathererType:)(uint64_t a1)
{
  return closure #1 in PhoneAppSelectionSignalsGatherer.execute(person:phoneCallNLIntent:candidateAppBundleIds:selectedAppId:phoneAppSelectionSignalsGathererType:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32, *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(unsigned char *)(v1 + 96));
}

void outlined bridged method (mbnn) of @objc INFERENCESchemaINFERENCECommsAppSelectionGroundTruthGenerated.inferenceCommsAppSelectionTrainingAppDependentSignals.setter(uint64_t a1, void *a2)
{
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INFERENCESchemaINFERENCECommsAppSelectionTrainingAppDependentSignals);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setInferenceCommsAppSelectionTrainingAppDependentSignals:isa];
}

unint64_t lazy protocol witness table accessor for type PhoneAppSelectionSignalsGathererType and conformance PhoneAppSelectionSignalsGathererType()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneAppSelectionSignalsGathererType and conformance PhoneAppSelectionSignalsGathererType;
  if (!lazy protocol witness table cache variable for type PhoneAppSelectionSignalsGathererType and conformance PhoneAppSelectionSignalsGathererType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneAppSelectionSignalsGathererType and conformance PhoneAppSelectionSignalsGathererType);
  }
  return result;
}

uint64_t ObjC metadata update function for PhoneAppSelectionSignalsGatherer()
{
  return type metadata accessor for PhoneAppSelectionSignalsGatherer();
}

uint64_t type metadata accessor for PhoneAppSelectionSignalsGatherer()
{
  uint64_t result = type metadata singleton initialization cache for PhoneAppSelectionSignalsGatherer;
  if (!type metadata singleton initialization cache for PhoneAppSelectionSignalsGatherer) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for PhoneAppSelectionSignalsGatherer()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SignalValueObject(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SignalValueObject(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SignalValueObject()
{
  return &type metadata for SignalValueObject;
}

unsigned char *storeEnumTagSinglePayload for PhoneAppSelectionSignalsGathererType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2D5008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneAppSelectionSignalsGathererType()
{
  return &type metadata for PhoneAppSelectionSignalsGathererType;
}

uint64_t OUTLINED_FUNCTION_0_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized Dictionary.subscript.getter(a1, (a2 - 32) | 0x8000000000000000, v2, v3);
}

uint64_t OUTLINED_FUNCTION_7_65@<X0>(uint64_t a1@<X8>)
{
  return specialized Dictionary.subscript.getter(0xD000000000000036, (a1 - 32) | 0x8000000000000000, v1, v2);
}

id OUTLINED_FUNCTION_8_75(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_9_61@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v3 - 104);
  return specialized Dictionary.subscript.getter(a1, (a2 - 32) | 0x8000000000000000, v5, v2);
}

uint64_t OUTLINED_FUNCTION_10_50()
{
  return specialized Dictionary.subscript.getter(v0, v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_11_53()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_12_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_41()
{
  return outlined destroy of UsoBuilderOptions?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_39()
{
  return swift_allocObject();
}

unint64_t OUTLINED_FUNCTION_26_29()
{
  return 0xD000000000000037;
}

void OUTLINED_FUNCTION_28_30()
{
  __swift_destroy_boxed_opaque_existential_1(v0 - 200);
  specialized Array.append<A>(contentsOf:)();
}

uint64_t OUTLINED_FUNCTION_31_25()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_33_20(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_37_22()
{
  return swift_bridgeObjectRetain();
}

uint64_t *OUTLINED_FUNCTION_43_20@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 168) = a1;
  return __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 200));
}

uint64_t OUTLINED_FUNCTION_44_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45_18@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(void *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_47_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_13()
{
  return PhoneAppSelectionSignalsGatherer.areKeysEqual(appId:mappingKey:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_54_14()
{
  return outlined destroy of UsoBuilderOptions?(v0, v1);
}

PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::Properties_optional __swiftcall PostCallInquiryAnswerCallCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PostCallInquiryAnswerCallCATsSimple.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PostCallInquiryAnswerCallCATsSimple_Properties_offerFollowUpIntent;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PostCallInquiryAnswerCallCATsSimple_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t PostCallInquiryAnswerCallCATs.Properties.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD00000000000002DLL;
  }
  else {
    return 0xD00000000000002FLL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PostCallInquiryAnswerCallCATsSimple.Properties(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PostCallInquiryAnswerCallCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PostCallInquiryAnswerCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PostCallInquiryAnswerCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PostCallInquiryAnswerCallCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = PostCallInquiryAnswerCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PostCallInquiryAnswerCallCATsSimple.Properties@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PostCallInquiryAnswerCallCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PostCallInquiryAnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)PostCallInquiryAnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:));
}

uint64_t PostCallInquiryAnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_10_1(v2, (uint64_t)"incomingCallConcept");
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneIncomingCall();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  OUTLINED_FUNCTION_19_2();
  unint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *unint64_t v4 = v0;
  v4[1] = PostCallInquiryAnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:);
  uint64_t v5 = OUTLINED_FUNCTION_11_6(0xD00000000000002FLL);
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *unsigned int v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::IntentHandledResponseDialogIds_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::IntentHandledResponseDialogIds_optional)v3;
  }
}

PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t PostCallInquiryAnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)PostCallInquiryAnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:));
}

uint64_t PostCallInquiryAnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)()
{
  uint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_10_1(v2, (uint64_t)"incomingCallConcept");
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneIncomingCall();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  OUTLINED_FUNCTION_19_2();
  unint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  unint64_t v5 = lazy protocol witness table accessor for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds();
  *unint64_t v4 = v0;
  v4[1] = PostCallInquiryAnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:);
  return v7(0xD00000000000002FLL, 0x80000000004907E0, v2, &type metadata for PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *unint64_t v4 = v3;
  unint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *unsigned int v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

uint64_t PostCallInquiryAnswerCallCATsSimple.offerFollowUpIntent(followUpOfferType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493CD0;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  unsigned int v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v8 + 32))();
  }
  uint64_t v9 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v1 + 48) = v9;
  *uint64_t v9 = v1;
  v9[1] = PhoneCallControlCATsSimple.unsupportedCallControl(unsupportedReason:);
  uint64_t v10 = OUTLINED_FUNCTION_11_6(v3 + 28);
  return v12(v10);
}

BOOL PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t PostCallInquiryAnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, unint64_t, uint64_t, ValueMetadata *, unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493CD0;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  unsigned int v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v8 + 32))();
  }
  uint64_t v9 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v1 + 48) = v9;
  uint64_t v10 = lazy protocol witness table accessor for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds();
  *uint64_t v9 = v1;
  v9[1] = PhoneCallControlCATsSimple.callControl(callControlAction:);
  return v12(v3 + 28, 0x8000000000490810, v4, &type metadata for PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds, v10);
}

unint64_t lazy protocol witness table accessor for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

uint64_t PostCallInquiryAnswerCallCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return PostCallInquiryAnswerCallCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t PostCallInquiryAnswerCallCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10 - 8);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t PostCallInquiryAnswerCallCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t PostCallInquiryAnswerCallCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type PostCallInquiryAnswerCallCATsSimple.Properties and conformance PostCallInquiryAnswerCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.Properties and conformance PostCallInquiryAnswerCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.Properties and conformance PostCallInquiryAnswerCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATsSimple.Properties and conformance PostCallInquiryAnswerCallCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for PostCallInquiryAnswerCallCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for PostCallInquiryAnswerCallCATsSimple;
  if (!type metadata singleton initialization cache for PostCallInquiryAnswerCallCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for PostCallInquiryAnswerCallCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for PostCallInquiryAnswerCallCATsSimple()
{
  return type metadata accessor for PostCallInquiryAnswerCallCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for PostCallInquiryAnswerCallCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2D6410);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for PostCallInquiryAnswerCallCATsSimple.Properties()
{
}

unsigned char *storeEnumTagSinglePayload for PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2D6510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for PostCallInquiryAnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2D65E0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for PostCallInquiryAnswerCallCATsSimple.OfferFollowUpIntentDialogIds()
{
}

uint64_t IdiomKeyedHintHistory.get(device:)(void *a1)
{
  return Dictionary.subscript.getter();
}

uint64_t IdiomKeyedHintHistory.set(device:hintHistory:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = type metadata accessor for Optional();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = (int)DeviceState.idiom.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v8, a2, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v5);
  v11[1] = v9;
  type metadata accessor for Dictionary();
  return Dictionary.subscript.setter();
}

uint64_t IdiomKeyedHintHistory.description.getter()
{
  return 0;
}

uint64_t static IdiomKeyedHintHistory.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Dictionary<>.== infix(_:_:)(a1, a2, &type metadata for Int, a3, &protocol witness table for Int, *(void *)(a4 + 24));
}

uint64_t IdiomKeyedHintHistory.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x70614D6D6F696469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t IdiomKeyedHintHistory.CodingKeys.stringValue.getter()
{
  return 0x70614D6D6F696469;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance IdiomKeyedHintHistory<A>.CodingKeys()
{
  return CallingIntentContinueInAppStrategy.shouldCheckResponseModeToOutputIntentHandledDialog.getter();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance IdiomKeyedHintHistory<A>.CodingKeys()
{
  return SharedNeedsValueContext.NeedsValueCase.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance IdiomKeyedHintHistory<A>.CodingKeys()
{
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance IdiomKeyedHintHistory<A>.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance IdiomKeyedHintHistory<A>.CodingKeys()
{
  return IdiomKeyedHintHistory.CodingKeys.stringValue.getter();
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance IdiomKeyedHintHistory<A>.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = IdiomKeyedHintHistory.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance IdiomKeyedHintHistory<A>.CodingKeys()
{
  return AnnounceVoicemailDirectAction.CodingKeys.intValue.getter();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance IdiomKeyedHintHistory<A>.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CallingIntentContinueInAppStrategy.shouldCheckResponseModeToOutputIntentHandledDialog.getter();
  *a1 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance IdiomKeyedHintHistory<A>.CodingKeys(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance IdiomKeyedHintHistory<A>.CodingKeys(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t IdiomKeyedHintHistory.encode(to:)(void *a1)
{
  type metadata accessor for IdiomKeyedHintHistory.CodingKeys();
  swift_getWitnessTable();
  type metadata accessor for KeyedEncodingContainer();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Dictionary();
  swift_getWitnessTable();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  uint64_t v3 = OUTLINED_FUNCTION_26_7();
  return v4(v3);
}

uint64_t type metadata accessor for IdiomKeyedHintHistory.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void *IdiomKeyedHintHistory.init(from:)(void *a1)
{
  type metadata accessor for IdiomKeyedHintHistory.CodingKeys();
  swift_getWitnessTable();
  type metadata accessor for KeyedDecodingContainer();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v3);
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();
  Dictionary.init(dictionaryLiteral:)();
  swift_bridgeObjectRelease();
  char v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    type metadata accessor for Dictionary();
    swift_getWitnessTable();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v6 = OUTLINED_FUNCTION_26_7();
    v7(v6);
    char v4 = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

uint64_t protocol witness for SiriPhoneDefaultsCodable.init() in conformance IdiomKeyedHintHistory<A>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = IdiomKeyedHintHistory.init()(*(void *)(a1 + 16));
  *a2 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance IdiomKeyedHintHistory<A>()
{
  return IdiomKeyedHintHistory.description.getter();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance IdiomKeyedHintHistory<A>(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static IdiomKeyedHintHistory.__derived_struct_equals(_:_:)(*a1, *a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

void *protocol witness for Decodable.init(from:) in conformance IdiomKeyedHintHistory<A>@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = IdiomKeyedHintHistory.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance IdiomKeyedHintHistory<A>(void *a1)
{
  return IdiomKeyedHintHistory.encode(to:)(a1);
}

uint64_t instantiation function for generic protocol witness table for IdiomKeyedHintHistory<A>(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for IdiomKeyedHintHistory<A>(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for IdiomKeyedHintHistory()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for IdiomKeyedHintHistory.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2D70BCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t base witness table accessor for Equatable in IdiomKeyedHintHistory<A>.CodingKeys()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for CustomDebugStringConvertible in IdiomKeyedHintHistory<A>.CodingKeys()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for CustomStringConvertible in IdiomKeyedHintHistory<A>.CodingKeys()
{
  return swift_getWitnessTable();
}

uint64_t PhoneCallNotificationFlowStrategy.makeNotificationBody(_:)(void (*a1)(void))
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self sharedInstance];
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = v6;
  type metadata accessor for PhoneCallFlowDelegatePlugin();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v9 = [self bundleForClass:ObjCClassFromMetadata];
  static Locale.current.getter();
  uint64_t v10 = Locale.identifier.getter();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24[4] = v10;
  v24[5] = v12;
  v24[2] = 45;
  v24[3] = 0xE100000000000000;
  v24[0] = 95;
  v24[1] = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v13 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = outlined bridged method (mbbnbnb) of @objc AFLocalization.localizedString(forKey:table:bundle:languageCode:)(0xD000000000000015, 0x8000000000499490, 0xD000000000000010, 0x80000000004994B0, (uint64_t)v9, v13, v15, v7);
  uint64_t v18 = v17;

  if (v18)
  {
    ((void (*)(uint64_t, uint64_t, void))a1)(v16, v18, 0);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_4:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "Could not localize the personal domain activity notification", v23, 2u);
      swift_slowDealloc();
    }

    lazy protocol witness table accessor for type LocalizationError and conformance LocalizationError();
    swift_allocError();
    a1();
    return swift_errorRelease();
  }
}

unint64_t lazy protocol witness table accessor for type LocalizationError and conformance LocalizationError()
{
  unint64_t result = lazy protocol witness table cache variable for type LocalizationError and conformance LocalizationError;
  if (!lazy protocol witness table cache variable for type LocalizationError and conformance LocalizationError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalizationError and conformance LocalizationError);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LocalizationError and conformance LocalizationError;
  if (!lazy protocol witness table cache variable for type LocalizationError and conformance LocalizationError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalizationError and conformance LocalizationError);
  }
  return result;
}

uint64_t protocol witness for PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody(_:) in conformance PhoneCallNotificationFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 80))();
}

uint64_t protocol witness for PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody() in conformance PhoneCallNotificationFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody() in conformance PhoneCallNotificationFlowStrategy;
  return PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody()(a1, a2);
}

{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  uint64_t v10 = *v3;
  id v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    id v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t type metadata accessor for PhoneCallNotificationFlowStrategy()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LocalizationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2D77BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationError()
{
  return &type metadata for LocalizationError;
}

uint64_t static Transformer<>.transformer(callGroupTransformer:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallGroupConversationFilter?);
  return Transformer.init(transform:)();
}

void closure #1 in static Transformer<>.transformer(callGroupTransformer:)(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v46)(long long *__return_ptr, long long *);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  Class v56;
  objc_class *v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  Class isa;
  void *v78;
  uint64_t (*v79)(void, void);
  uint64_t v80;
  uint64_t v81;
  id v82;
  long long v83;
  uint64_t v84;
  uint64_t v85;
  long long v86;
  long long v87;
  uint64_t v88;
  void *v89;

  v75 = a1;
  v74 = a2;
  uint64_t v4 = (void *)a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v4);
  uint64_t v7 = *(uint64_t (**)(void, void))(v5 + 24);
  v78 = v6;
  v79 = v7;
  v81 = v5;
  v82 = v4;
  v80 = v5 + 24;
  uint64_t v8 = v7(v4, v5);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v8 + 32;
    while (1)
    {
      outlined init with copy of SignalProviding(v10, (uint64_t)&v83);
      __swift_project_boxed_opaque_existential_1(&v83, v84);
      uint64_t v11 = OUTLINED_FUNCTION_1_81();
      __int16 v13 = v12(v11);
      if ((v13 & 0xFF00) != 0x200 && v13 == 0) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
      v10 += 40;
      if (!--v9) {
        goto LABEL_8;
      }
    }
    outlined init with take of AppSelectionSignalComponent(&v83, (uint64_t)&v86);
  }
  else
  {
LABEL_8:
    v88 = 0;
    v86 = 0u;
    v87 = 0u;
  }
  swift_bridgeObjectRelease();
  v73 = a3;
  if (*((void *)&v87 + 1))
  {
    __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
    Class isa = SiriPhoneContact.toINPerson()().super.isa;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
  }
  else
  {
    outlined destroy of SiriPhoneContact?((uint64_t)&v86);
    Class isa = 0;
  }
  uint64_t v15 = OUTLINED_FUNCTION_2_97();
  uint64_t v17 = v16(v15);
  unint64_t v18 = v17;
  uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
  v89 = _swiftEmptyArrayStorage;
  uint64_t v20 = *(void *)(v17 + 16);
  if (v20)
  {
    unint64_t v21 = 0;
    uint64_t v22 = v17 + 32;
    while (v21 < *(void *)(v18 + 16))
    {
      outlined init with copy of SignalProviding(v22, (uint64_t)&v86);
      __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
      uint64_t v23 = OUTLINED_FUNCTION_1_81();
      __int16 v25 = v24(v23);
      if ((v25 & 0xFF00) != 0x200 && v25 == 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
      }
      else
      {
        outlined init with take of AppSelectionSignalComponent(&v86, (uint64_t)&v83);
        uint64_t v27 = v89;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v27 = v89;
        }
        unint64_t v28 = v27[2];
        if (v28 >= v27[3] >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v19 = v84;
        uint64_t v29 = v85;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v83, v84);
        OUTLINED_FUNCTION_1();
        __chkstk_darwin(v30);
        uint64_t v32 = (char *)&v72 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v33 + 16))(v32);
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, (uint64_t)v32, (uint64_t *)&v89, v19, v29);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
      }
      ++v21;
      v22 += 40;
      if (v20 == v21)
      {
        os_log_type_t v34 = v89;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_51:
    swift_bridgeObjectRetain();
    v52 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v52) {
      goto LABEL_52;
    }
LABEL_47:
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v19 & 0xC000000000000001) == 0, v19);
    if ((v19 & 0xC000000000000001) != 0) {
      v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      v50 = *(id *)(v19 + 32);
    }
    v51 = (unint64_t)v50;
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  os_log_type_t v34 = _swiftEmptyArrayStorage;
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v35 = v34[2];
  if (v35)
  {
    *(void *)&v83 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v36 = (uint64_t)(v34 + 4);
    do
    {
      outlined init with copy of SignalProviding(v36, (uint64_t)&v86);
      __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
      SiriPhoneContact.toINPerson()();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v36 += 40;
      --v35;
    }
    while (v35);
    unint64_t v18 = v83;
    swift_release();
  }
  else
  {
    swift_release();
    unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v37 = OUTLINED_FUNCTION_2_97();
  uint64_t v39 = v38(v37);
  uint64_t v40 = *(void *)(v39 + 16);
  if (!v40)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
    goto LABEL_42;
  }
  uint64_t v41 = v39 + 32;
  while (1)
  {
    outlined init with copy of SignalProviding(v41, (uint64_t)&v86);
    uint64_t v42 = *((void *)&v87 + 1);
    uint64_t v43 = v88;
    __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
    __int16 v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 368))(v42, v43);
    if ((v44 & 0xFF00) != 0x200) {
      break;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
LABEL_39:
    v41 += 40;
    if (!--v40) {
      goto LABEL_40;
    }
  }
  __int16 v45 = v44;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
  if ((v45 & 0x100) == 0) {
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = 1;
LABEL_42:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  v46 = (void (*)(long long *__return_ptr, long long *))Transformer.transform.getter();
  v47 = v75[3];
  v48 = v75[4];
  __swift_project_boxed_opaque_existential_1(v75, v47);
  *(void *)&v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 136))(v47, v48);
  v49 = v76;
  v46(&v83, &v86);
  if (v49)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v19 = v83;
  if (!(void)v83) {
    goto LABEL_53;
  }
  if ((unint64_t)v83 >> 62) {
    goto LABEL_51;
  }
  if (*(void *)((char *)&dword_10 + (v83 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_47;
  }
LABEL_52:
  swift_bridgeObjectRelease();
LABEL_53:
  v51 = 0;
LABEL_54:
  if (isa) {
    goto LABEL_59;
  }
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v53 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v53 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
  }
  if (v53 | v51)
  {
LABEL_59:
    v55 = objc_allocWithZone((Class)NSNumber);
    v56 = isa;
    v57 = isa;
    v58 = [v55 initWithBool:v20];
    objc_allocWithZone((Class)INCallGroupConversationFilter);
    v59 = (id)v51;
    v54 = @nonobjc INCallGroupConversationFilter.init(__caller:participants:matchCallerAndParticipantsExactly:callGroup:)(v56, v18, v58, (void *)v51);
  }
  else
  {
    swift_bridgeObjectRelease();
    v54 = 0;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  v60 = type metadata accessor for Logger();
  __swift_project_value_buffer(v60, (uint64_t)static Logger.siriPhone);
  v61 = v54;
  v62 = Logger.logObject.getter();
  v63 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = swift_slowAlloc();
    *(void *)&v86 = swift_slowAlloc();
    *(_DWORD *)v64 = 136315394;
    v82 = (id)v51;
    *(void *)&v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallGroupConversationFilter?>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallGroupConversationFilter?>.Type);
    v65 = String.init<A>(describing:)();
    v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, (uint64_t *)&v86);
    OUTLINED_FUNCTION_39_5(v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2080;
    *(void *)&v83 = v54;
    v68 = v61;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallGroupConversationFilter?);
    v69 = String.init<A>(describing:)();
    v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, (uint64_t *)&v86);
    OUTLINED_FUNCTION_39_5(v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v62, v63, "%s --> %s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  *v73 = v54;
}

uint64_t sub_2D8150()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void partial apply for closure #1 in static Transformer<>.transformer(callGroupTransformer:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>)
                 - 8);
  closure #1 in static Transformer<>.transformer(callGroupTransformer:)(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

id @nonobjc INCallGroupConversationFilter.init(__caller:participants:matchCallerAndParticipantsExactly:callGroup:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  if (a2)
  {
    type metadata accessor for INPerson();
    v9.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  id v10 = [v5 initWithCaller:a1 participants:v9.super.isa matchCallerAndParticipantsExactly:a3 callGroup:a4];

  return v10;
}

uint64_t outlined destroy of SiriPhoneContact?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_81()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_97()
{
  return *(void *)(v0 - 176);
}

void *UnsupportedCallControlIntentOutputProvider.__allocating_init(intent:sharedGlobals:callControlCats:unsupportedCats:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(v8 + 3));
  v8[8] = a3;
  v8[9] = a4;
  return v8;
}

void *UnsupportedCallControlIntentOutputProvider.init(intent:sharedGlobals:callControlCats:unsupportedCats:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(v4 + 3));
  v4[8] = a3;
  v4[9] = a4;
  return v4;
}

uint64_t UnsupportedCallControlIntentOutputProvider.makeSimpleOutputFlowAsync()()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 16))(v10, v1, v2);
  uint64_t v3 = v11;
  uint64_t v4 = v12;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v10, v11);
  v9[3] = v3;
  v9[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  swift_retain();
  uint64_t v7 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7;
}

uint64_t closure #1 in UnsupportedCallControlIntentOutputProvider.makeSimpleOutputFlowAsync()(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a2 + 128) + **(int **)(*(void *)a2 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t partial apply for closure #1 in UnsupportedCallControlIntentOutputProvider.makeSimpleOutputFlowAsync()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in UnsupportedCallControlIntentOutputProvider.makeSimpleOutputFlowAsync()(v3, v0);
}

uint64_t UnsupportedCallControlIntentOutputProvider.makeOutput()()
{
  OUTLINED_FUNCTION_1_0();
  v1[31] = v2;
  v1[32] = v0;
  type metadata accessor for DialogPhase();
  v1[33] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v1[34] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[35] = v4;
  v1[36] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SpeakableString();
  v1[37] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[38] = v6;
  v1[39] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  void *v39;
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t (*v43)(uint64_t);
  uint64_t v44;

  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 120))(v2, v3);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
    uint64_t v7 = OUTLINED_FUNCTION_16_2();
    v8(v7);
    __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
    uint64_t v9 = OUTLINED_FUNCTION_16_2();
    v10(v9);
    uint64_t v11 = v0[15];
    uint64_t v12 = v0[16];
    __swift_project_boxed_opaque_existential_1(v0 + 12, v11);
    __int16 v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
    uint64_t v14 = v0[32];
    if (v13)
    {
      uint64_t v15 = *(void *)(v14 + 16);
      PhoneCallControlNLIntent.Verb.description.getter(*(unsigned char *)(v15 + 16));
      v16._countAndFlagsBits = 58;
      v16._object = (void *)0xE100000000000000;
      String.append(_:)(v16);
      uint64_t v17 = *(unsigned __int8 *)(v15 + 17);
      if (v17 == 5)
      {
        unint64_t v18 = 0;
        uint64_t v19 = 0xE000000000000000;
      }
      else
      {
        unint64_t v18 = PhoneCallControlNLIntent.Target.description.getter(v17);
        uint64_t v19 = v31;
      }
      uint64_t v33 = v0[39];
      uint64_t v32 = v0[40];
      os_log_type_t v34 = v0[37];
      uint64_t v35 = v0[38];
      uint64_t v36 = v0[32];
      uint64_t v37 = v19;
      String.append(_:)(*(Swift::String *)&v18);
      swift_bridgeObjectRelease();
      String.toSpeakableString.getter();
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void **)(v36 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v32, v33, v34);
      __swift_storeEnumTagSinglePayload(v32, 0, 1, v34);
      uint64_t v43 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for PhoneCallControlCATsSimple
                                                        + *v38
                                                        + 48)
                                            + **(int **)(class metadata base offset for PhoneCallControlCATsSimple
                                                       + *v38
                                                       + 48));
      uint64_t v39 = (void *)swift_task_alloc();
      v0[44] = v39;
      *uint64_t v39 = v0;
      v39[1] = UnsupportedCallControlIntentOutputProvider.makeOutput();
      id v24 = v0[40];
      __int16 v25 = v43;
    }
    else
    {
      v26 = *(void **)(v14 + 72);
      type metadata accessor for SirikitDeviceState();
      __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
      uint64_t v27 = OUTLINED_FUNCTION_16_2();
      v28(v27);
      uint64_t v29 = SirikitDeviceState.__allocating_init(from:)();
      v0[46] = v29;
      uint64_t v42 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for UnsupportedFlowCATsSimple
                                                        + *v26
                                                        + 96)
                                            + **(int **)(class metadata base offset for UnsupportedFlowCATsSimple
                                                       + *v26
                                                       + 96));
      uint64_t v30 = (void *)swift_task_alloc();
      v0[47] = v30;
      *uint64_t v30 = v0;
      v30[1] = UnsupportedCallControlIntentOutputProvider.makeOutput();
      id v24 = v29;
      __int16 v25 = v42;
    }
  }
  else
  {
    uint64_t v20 = v0[41];
    unint64_t v21 = v0[37];
    uint64_t v22 = *(void **)(v0[32] + 64);
    PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.rawValue.getter();
    String.toSpeakableString.getter();
    __swift_storeEnumTagSinglePayload(v20, 0, 1, v21);
    uint64_t v41 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for PhoneCallControlCATsSimple
                                                      + *v22
                                                      + 16)
                                          + **(int **)(class metadata base offset for PhoneCallControlCATsSimple
                                                     + *v22
                                                     + 16));
    uint64_t v23 = (void *)swift_task_alloc();
    v0[42] = v23;
    uint8_t *v23 = v0;
    v23[1] = UnsupportedCallControlIntentOutputProvider.makeOutput();
    id v24 = v0[41];
    __int16 v25 = v41;
  }
  return v25(v24);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  v3[22] = v1;
  v3[23] = v2;
  v3[24] = v0;
  uint64_t v5 = *(void *)(v4 + 328);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v8 + 344) = v0;
  swift_task_dealloc();
  outlined destroy of SpeakableString?(v5);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  v3[25] = v1;
  v3[26] = v2;
  v3[27] = v0;
  uint64_t v5 = *(void *)(v4 + 320);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v8 + 360) = v0;
  swift_task_dealloc();
  outlined destroy of SpeakableString?(v5);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  v2[28] = v1;
  v2[29] = v4;
  v2[30] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  v3[48] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = v1[36];
  uint64_t v3 = v1[35];
  uint64_t v4 = v1[34];
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_18_3();

  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_6_68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_18_3();
  uint64_t v0 = OUTLINED_FUNCTION_15_42();
  v1(v0);
  OUTLINED_FUNCTION_6_68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_18_3();
  swift_release();
  OUTLINED_FUNCTION_6_68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t UnsupportedCallControlIntentOutputProvider.makeOutput()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *(void **)(v10 + 184);
  uint64_t v12 = OUTLINED_FUNCTION_1_82();
  v13(v12);
  OUTLINED_FUNCTION_10_51();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_13_16(v14, (__n128)xmmword_46A030);
  *(void *)(v10 + 400) = v28;
  id v15 = v11;
  static DialogPhase.completion.getter();
  OUTLINED_FUNCTION_12_44();
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_11_54(v16);
  *uint64_t v17 = v18;
  v17[1] = UnsupportedCallControlIntentOutputProvider.makeOutput();
  uint64_t v19 = OUTLINED_FUNCTION_2_98();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  __n128 *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  uint64_t v11 = OUTLINED_FUNCTION_15_42();
  v12(v11);
  __int16 v13 = *(void **)(v10 + 208);
  uint64_t v14 = OUTLINED_FUNCTION_1_82();
  v15(v14);
  OUTLINED_FUNCTION_10_51();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v16 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_13_16(v16, (__n128)xmmword_46A030);
  *(void *)(v10 + 400) = v30;
  uint64_t v17 = v13;
  static DialogPhase.completion.getter();
  OUTLINED_FUNCTION_12_44();
  uint64_t v18 = swift_task_alloc();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_11_54(v18);
  *uint64_t v19 = v20;
  v19[1] = UnsupportedCallControlIntentOutputProvider.makeOutput();
  uint64_t v21 = OUTLINED_FUNCTION_2_98();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  __n128 *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  uint64_t v11 = *(void **)(v10 + 232);
  uint64_t v12 = OUTLINED_FUNCTION_1_82();
  v13(v12);
  OUTLINED_FUNCTION_10_51();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_13_16(v14, (__n128)xmmword_46A030);
  *(void *)(v10 + 400) = v28;
  id v15 = v11;
  static DialogPhase.completion.getter();
  OUTLINED_FUNCTION_12_44();
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_11_54(v16);
  *uint64_t v17 = v18;
  v17[1] = UnsupportedCallControlIntentOutputProvider.makeOutput();
  uint64_t v19 = OUTLINED_FUNCTION_2_98();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
}

uint64_t specialized UnsupportedAction.toSpeakableString.getter()
{
  return String.toSpeakableString.getter();
}

{
  return String.toSpeakableString.getter();
}

{
  uint64_t vars8;

  String.toSpeakableString.getter();

  return swift_bridgeObjectRelease();
}

uint64_t specialized UnsupportedAction.toSpeakableString.getter(char a1)
{
  ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter(a1);
  String.toSpeakableString.getter();

  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in UnsupportedCallControlIntentOutputProvider.makeOutput()()
{
  return OutputGenerationManifest.listenAfterSpeaking.setter();
}

uint64_t UnsupportedCallControlIntentOutputProvider.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return v0;
}

uint64_t UnsupportedCallControlIntentOutputProvider.__deallocating_deinit()
{
  UnsupportedCallControlIntentOutputProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsupportedCallControlIntentOutputProvider()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_1_82()
{
  uint64_t v2 = *(void *)(v0 + 256);
  *(void *)(v0 + 392) = v1;
  uint64_t v3 = *(void *)(v2 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), v3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_2_98()
{
  return *(void *)(v0 + 248);
}

uint64_t OUTLINED_FUNCTION_6_68()
{
  return swift_task_dealloc();
}

void *OUTLINED_FUNCTION_10_51()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 160));
}

uint64_t OUTLINED_FUNCTION_11_54(uint64_t result)
{
  *(void *)(v1 + 408) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_44()
{
  return OutputGenerationManifest.init(dialogPhase:_:)();
}

uint64_t OUTLINED_FUNCTION_15_42()
{
  return *(void *)(v0 + 312);
}

uint64_t CallingIntentContinueInAppStrategy.__allocating_init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  CallingIntentContinueInAppStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)(a1, a2, a3);
  return v6;
}

unint64_t specialized SiriPhoneHintGenerator.generateHint()()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 24;
  __swift_project_boxed_opaque_existential_1((void *)v0 + 3, *((void *)v0 + 6));
  uint64_t v3 = OUTLINED_FUNCTION_27_29();
  v4(v3);
  __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
  char v5 = dispatch thunk of DeviceState.isHomePod.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  if ((v5 & 1) == 0) {
    return 0;
  }
  __swift_project_boxed_opaque_existential_1(v2, *((void *)v1 + 6));
  uint64_t v6 = OUTLINED_FUNCTION_27_29();
  v7(v6);
  uint64_t v8 = *((void *)&v22 + 1);
  uint64_t v9 = v23;
  __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
  uint64_t v10 = *v1;
  uint64_t v25 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdiomKeyedHintHistory<OneTimeHintHistory>);
  unint64_t v12 = lazy protocol witness table accessor for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>();
  SiriPhoneDefaultsProviding.getOrDefault<A>(key:defaultValue:)(v10, (uint64_t)&v25, v8, v11, v9, v12, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  uint64_t v13 = v26;
  unint64_t v14 = specialized OneTimeHintGenerator<>.chooseHintIdentifier(history:)(v26);
  if (v15)
  {
    unint64_t v16 = v14;
    outlined init with copy of HangUpTipGenerator((uint64_t)v1, (uint64_t)&v21);
    uint64_t v17 = swift_allocObject();
    long long v18 = v22;
    *(_OWORD *)(v17 + 16) = v21;
    *(_OWORD *)(v17 + 32) = v18;
    long long v19 = v24;
    *(_OWORD *)(v17 + 48) = v23;
    *(_OWORD *)(v17 + 64) = v19;
    *(void *)(v17 + 80) = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v16;
}

uint64_t specialized updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = result;
    uint64_t v6 = a2[1];
    uint64_t v5 = a2[2];
    swift_bridgeObjectRetain();
    lazy protocol witness table accessor for type String and conformance String();
    lazy protocol witness table accessor for type String and conformance String();
    for (i = (uint64_t *)(v4 + 40); ; i += 2)
    {
      uint64_t v9 = *(i - 1);
      uint64_t v8 = *i;
      v21[0] = v9;
      v21[1] = v8;
      v24[0] = v6;
      v24[1] = v5;
      swift_bridgeObjectRetain();
      if (BidirectionalCollection<>.starts<A>(with:)()) {
        break;
      }
      swift_bridgeObjectRelease();
      if (!--v3) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = specialized OneTimeHintGenerator<>.makeUpdatedHintHistory(dialogIdentifier:previousHistory:)(v9, v8, a3);
    swift_bridgeObjectRelease();
    v24[0] = v10;
    uint64_t v11 = a2[6];
    uint64_t v12 = a2[7];
    __swift_project_boxed_opaque_existential_1(a2 + 3, v11);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 64))(v21, v11, v12);
    uint64_t v13 = v22;
    uint64_t v14 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v15 = *(void (**)(uint64_t, void *, uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 16);
    uint64_t v16 = *(unsigned __int8 *)a2;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdiomKeyedHintHistory<OneTimeHintHistory>);
    unint64_t v18 = lazy protocol witness table accessor for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>();
    v15(v16, v24, v17, v18, v13, v14);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  return result;
}

uint64_t CallingIntentContinueInAppStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)(long long *a1, uint64_t a2, uint64_t a3)
{
  static UnlockDevicePolicy.default.getter();
  *(void *)(v3 + direct field offset for CallingIntentContinueInAppStrategy.additionalCommands) = _swiftEmptyArrayStorage;
  outlined init with take of AppSelectionSignalComponent(a1, v3 + 16);
  *(void *)(v3 + 56) = a2;
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[7] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for IntentResolutionRecord();
  v1[8] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[9] = v5;
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  v1[12] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[13] = v7;
  v1[14] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void (*v1)(void);
  id v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_12_20();
  v1();
  uint64_t v2 = *(id *)(v0 + 32);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((char *)&dword_10 + (*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                                  + (*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_12_2();
  return v4(v3);
}

{
  void (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_12_20();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  v60 = v12;
  v12[2] = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12[9] + 16);
  v13(v12[11], v12[5], v12[8]);
  if (swift_dynamicCast())
  {
    uint64_t v15 = v12[13];
    uint64_t v14 = v12[14];
    uint64_t v16 = v12[12];
    uint64_t v17 = v12[7];
    __swift_storeEnumTagSinglePayload(v17, 0, 1, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v17, v16);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    long long v19 = (void *)Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v20))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_25_4(&dword_0, v21, v22, "#CallingIntentContinueInAppStrategy: Building launch app command for INStartCallIntent");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v23 = v12[14];
    uint64_t v24 = v12[6];

    uint64_t v25 = swift_task_alloc();
    v12[15] = v25;
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v24;
    uint64_t v26 = (void *)swift_task_alloc();
    v12[16] = v26;
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    void *v26 = v12;
    v26[1] = CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:);
    OUTLINED_FUNCTION_11_1();
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v27, v28, v29, 0xD000000000000040, v30, v31, v25, v32, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v33 = v12[7];
    __swift_storeEnumTagSinglePayload(v33, 1, 1, v12[12]);
    outlined destroy of UUID?(v33, &demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v34 = v12[10];
    uint64_t v35 = v12[8];
    uint64_t v36 = v12[5];
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    v13(v34, v36, v35);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      os_log_type_t type = v39;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      buf = v40;
      uint64_t v41 = (void *)IntentResolutionRecord.intent.getter();
      id v42 = [v41 typeName];

      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v45 = v44;

      v12[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v46 = OUTLINED_FUNCTION_42_20();
      v47(v46);
      _os_log_impl(&dword_0, v38, type, "#CallingIntentContinueInAppStrategy: Building launch app command for %s", buf, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      uint64_t v48 = OUTLINED_FUNCTION_42_20();
      v49(v48);
    }

    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    IntentResolutionRecord.app.getter();
    v50 = (void *)IntentResolutionRecord.intent.getter();
    v51 = (void *)IntentResolutionRecord.intentResponse.getter();
    v52 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();

    swift_release();
    id v53 = v52;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((char *)&dword_10 + (v12[2] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                      + (v12[2] & 0xFFFFFFFFFFFFFF8)) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = OUTLINED_FUNCTION_12_2();
    return v55(v54);
  }
}

uint64_t CallingIntentContinueInAppStrategy.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  type metadata accessor for UnlockDevicePolicy();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v1();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CallingIntentContinueInAppStrategy.deviceState.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t CallingIntentContinueInAppStrategy.additionalCommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CallingIntentContinueInAppStrategy.additionalCommands.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + direct field offset for CallingIntentContinueInAppStrategy.additionalCommands);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*CallingIntentContinueInAppStrategy.additionalCommands.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t CallingIntentContinueInAppStrategy.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_38_20();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v2 = OUTLINED_FUNCTION_41_17();
  return v3(v2);
}

uint64_t CallingIntentContinueInAppStrategy.makeContinueInAppResponse(intentResolutionRecord:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_38_20();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v2 = OUTLINED_FUNCTION_41_17();
  return v3(v2);
}

uint64_t CallingIntentContinueInAppStrategy.makePromptForDeviceUnlock()()
{
  OUTLINED_FUNCTION_1_0();
  v1[12] = v2;
  v1[13] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[14] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for TemplatingText();
  v1[15] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[16] = v5;
  v1[17] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for TemplatingSection();
  v1[18] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[19] = v7;
  v1[20] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for TemplatingResult();
  v1[21] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[22] = v9;
  v1[23] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_85((void *)(v0[13] + 16), v0[13]);
  v2(v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = CallingIntentContinueInAppStrategy.makePromptForDeviceUnlock();
  uint64_t v4 = v0[23];
  return static ResponseTemplates.unlockDeviceSegue(deviceState:)(v4, v0 + 2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 16;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v7 + 200) = v0;
  swift_task_dealloc();
  outlined destroy of UUID?(v4, &demangling cache variable for type metadata for DeviceState?);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t (*v14)(void);
  uint64_t v15;

  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIAddDialogs);
  unint64_t result = TemplatingResult.sections.getter();
  if (*(void *)(result + 16))
  {
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v9 = *(uint64_t **)(v0 + 96);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v2, result + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v4);
    swift_bridgeObjectRelease();
    TemplatingSection.content.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    TemplatingText.text.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v8);
    TemplatingResult.templateIdentifier.getter();
    uint64_t v10 = SAUIAddDialogs.init(dialogString:templateIdentifier:)();
    uint64_t v11 = type metadata accessor for NLContextUpdate();
    OUTLINED_FUNCTION_93_3(v11);
    uint64_t v12 = type metadata accessor for AceOutput();
    *(_OWORD *)(v0 + 72) = 0u;
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    v9[3] = v12;
    v9[4] = (uint64_t)&protocol witness table for AceOutput;
    __swift_allocate_boxed_opaque_existential_1(v9);
    OUTLINED_FUNCTION_96();
    static AceOutputHelper.makeAceOutput(addDialogs:nlContextUpdate:additionalCommands:flowActivity:)();

    outlined destroy of UUID?(v0 + 56, &demangling cache variable for type metadata for FlowActivity?);
    outlined destroy of UUID?(v7, &demangling cache variable for type metadata for NLContextUpdate?);
    OUTLINED_FUNCTION_11();
    v13();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v14();
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  v1[60] = v2;
  v1[61] = v0;
  v1[59] = v4;
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v5;
  v1[62] = v5;
  uint64_t v6 = type metadata accessor for Locale();
  v1[63] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[64] = v7;
  v1[65] = OUTLINED_FUNCTION_35();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ResponseMode();
  v1[68] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[69] = v10;
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v11);
  v1[73] = OUTLINED_FUNCTION_35();
  uint64_t v12 = type metadata accessor for OutputGenerationManifest();
  v1[74] = v12;
  OUTLINED_FUNCTION_19_0(v12);
  v1[75] = v13;
  v1[76] = OUTLINED_FUNCTION_35();
  uint64_t v16 = (uint64_t (*)(uint64_t, void))(*(void *)(v17 + 240) + **(int **)(v17 + 240));
  uint64_t v14 = (void *)swift_task_alloc();
  v1[77] = v14;
  *uint64_t v14 = v1;
  v14[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
  return v16(v3, 0);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 648) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 656) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[53] = v1;
  v2[54] = v4;
  v2[55] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v7 + 768) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  char v7;
  char v8;
  void *v9;
  void *v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;

  OUTLINED_FUNCTION_30_12();
  if (*(unsigned char *)(v0 + 868) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 488);
    uint64_t v2 = v1[5];
    uint64_t v3 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 224))(v2, v3);
    OUTLINED_FUNCTION_23();
    (*(void (**)(void))(v4 + 128))();
    swift_release();
  }
  uint64_t v5 = OUTLINED_FUNCTION_3_85((void *)(*(void *)(v0 + 488) + 16), *(void *)(v0 + 488));
  v6(v5);
  OUTLINED_FUNCTION_25_28();
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_1(v0 + 360);
  uint64_t v9 = *(void **)(v0 + 744);
  uint64_t v10 = *(void **)(v0 + 736);
  if (v8)
  {
    static ResponseMode.voiceOnly.getter();
    OutputGenerationManifest.responseMode.setter();
  }

  OUTLINED_FUNCTION_16_44(*(void *)(v0 + 432));
  v11();
  *(void *)(v0 + 816) = SirikitDeviceState.__allocating_init(from:)();
  if (v10)
  {
    OUTLINED_FUNCTION_33_21();
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 1;
  }
  uint64_t v13 = *(void *)(v0 + 528);
  uint64_t v14 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v13, v12, 1, v14);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 824) = v15;
  *uint64_t v15 = v0;
  v15[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
  uint64_t v16 = OUTLINED_FUNCTION_23_34();
  return v17(v16);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[56] = v1;
  v2[57] = v4;
  v2[58] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v7 + 800) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v10;

  OUTLINED_FUNCTION_30_12();
  swift_release();
  OUTLINED_FUNCTION_16_44(v0[57]);
  v2();
  v0[102] = SirikitDeviceState.__allocating_init(from:)();
  if (v1)
  {
    OUTLINED_FUNCTION_33_21();
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = v0[66];
  uint64_t v5 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v4, v3, 1, v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[103] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
  uint64_t v7 = OUTLINED_FUNCTION_23_34();
  return v8(v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 528);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v9 + 832) = v8;
  *(void *)(v9 + 840) = v0;
  swift_task_dealloc();
  outlined destroy of UUID?(v5, &demangling cache variable for type metadata for SpeakableString?);
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  void (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_12_20();
  v1();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  OUTLINED_FUNCTION_10_52();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v2();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_30_12();
  uint64_t v1 = *(void **)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = *(void *)(v0 + 600);
  uint64_t v8 = *(void *)(v0 + 592);
  uint64_t v9 = *(void *)(v0 + 608);
  uint64_t v5 = *(void *)(v0 + 536);

  outlined consume of HintInstance?(v3, v2);
  swift_release();
  swift_release();
  outlined destroy of UUID?(v5, &demangling cache variable for type metadata for SpeakableString?);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v8);
  OUTLINED_FUNCTION_2_99();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v6();
}

uint64_t CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  *(void *)(v13 + 624) = v15;
  swift_task_dealloc();
  if (v10)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_15_43();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_15_43();
    return _swift_task_switch(v25, v26, v27);
  }
}

{
  void *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  OUTLINED_FUNCTION_18_3();
  *(void *)(v10[79] + 32) = v10[82];
  specialized Array._endMutation()();
  OUTLINED_FUNCTION_28_31();
  uint64_t v11 = OUTLINED_FUNCTION_30_24();
  v12(v11);
  __swift_project_boxed_opaque_existential_1(v10 + 10, v10[13]);
  uint64_t v13 = (void *)swift_task_alloc();
  v10[107] = v13;
  *uint64_t v13 = v10;
  v13[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
  uint64_t v14 = OUTLINED_FUNCTION_20_36();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  void *v12;
  void (*v13)(void *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_30_12();
  uint64_t v11 = v10[85];
  if (v11)
  {
    uint64_t v12 = (void *)v10[104];
    uint64_t v13 = (void (*)(void *))v10[86];
    uint64_t v14 = v10[84];
    swift_bridgeObjectRetain();
    swift_retain();
    HintInstance.updateHintHistory(_:)(v12, v14, v11, v13);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = v10[85];
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v16 = v10[104];
  uint64_t v17 = (void *)v10[101];
  uint64_t v18 = v10[84];
  uint64_t v33 = v10[67];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_469DA0;
  *(void *)(v19 + 32) = v17;
  *(void *)(v19 + 40) = v16;
  specialized Array._endMutation()();
  uint64_t v20 = v17;
  outlined consume of HintInstance?(v18, v15);
  swift_release();
  swift_release();

  outlined destroy of UUID?(v33, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_28_31();
  uint64_t v21 = OUTLINED_FUNCTION_30_24();
  v22(v21);
  __swift_project_boxed_opaque_existential_1(v10 + 10, v10[13]);
  uint64_t v23 = (void *)swift_task_alloc();
  v10[107] = v23;
  uint8_t *v23 = v10;
  v23[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
  uint64_t v24 = OUTLINED_FUNCTION_20_36();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t (*v14)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  *(void *)(*(void *)(v10 + 632) + 16) = 0;
  swift_release();
  uint64_t v11 = OUTLINED_FUNCTION_96();
  v12(v11);
  OUTLINED_FUNCTION_2_99();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_43();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = OUTLINED_FUNCTION_35_24();
  uint64_t v12 = v10[76];
  uint64_t v13 = v10[75];
  uint64_t v14 = v10[74];
  uint64_t v15 = v10[67];
  outlined consume of HintInstance?(v11, v16);
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of UUID?(v15, &demangling cache variable for type metadata for SpeakableString?);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  OUTLINED_FUNCTION_2_99();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_43();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

{
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = (void *)v10[101];
  uint64_t v12 = OUTLINED_FUNCTION_35_24();
  uint64_t v13 = v10[76];
  uint64_t v14 = v10[75];
  uint64_t v15 = v10[74];
  uint64_t v16 = v10[67];
  outlined consume of HintInstance?(v12, v17);
  swift_release();
  swift_release();

  outlined destroy of UUID?(v16, &demangling cache variable for type metadata for SpeakableString?);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  OUTLINED_FUNCTION_2_99();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_43();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
}

void CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:)()
{
  uint64_t v1 = *(void *)(v0 + 624);
  uint64_t v2 = *(void *)(v0 + 496);
  static DialogPhase.completion.getter();
  *(void *)(swift_task_alloc() + 16) = v1;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  type metadata accessor for IntentResolutionRecord();
  uint64_t v4 = IntentResolutionRecord.intent.getter();
  uint64_t v5 = *(void *)(v2 + 96);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 64))(v3, v5);
  unint64_t v8 = v7;

  LOBYTE(v4) = specialized Optional<A>.isNilOrEmpty.getter(v6, v8);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = (void *)Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v23))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_25_4(&dword_0, v24, v25, "#CallingIntentContinueInAppStrategy: Calling intentHandledResponseWithFaceTimeLink");
      OUTLINED_FUNCTION_6();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v26 = swift_allocObject();
    *(void *)(v0 + 632) = v26;
    *(_OWORD *)(v26 + 16) = xmmword_46A030;
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 640) = v27;
    *uint64_t v27 = v0;
    v27[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
    OUTLINED_FUNCTION_12_45();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v9 = *(void *)(v0 + 488);
  v106 = (void *)(v9 + 16);
  uint64_t v108 = v9;
  __swift_project_boxed_opaque_existential_1((void *)(v9 + 16), *(void *)(v9 + 40));
  uint64_t v10 = OUTLINED_FUNCTION_3_35();
  uint64_t v109 = v3;
  if (v11(v10))
  {
    uint64_t v12 = *(void *)(v0 + 576);
    uint64_t v13 = *(void *)(v0 + 568);
    uint64_t v14 = *(void *)(v0 + 552);
    uint64_t v15 = *(void *)(v0 + 544);
    CurrentRequest.responseMode.getter();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v13, v15);
    if (ResponseMode.isDisplayMode()())
    {
      uint64_t v16 = OUTLINED_FUNCTION_3_85(v106, v108);
      v17(v16);
      OUTLINED_FUNCTION_25_28();
      char v19 = v18;
      __swift_destroy_boxed_opaque_existential_1(v0 + 200);
      if ((v19 & 1) == 0 && !CallingIntentContinueInAppStrategy.isBusinessRedirectCall()())
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v85 = type metadata accessor for Logger();
        __swift_project_value_buffer(v85, (uint64_t)static Logger.siriPhone);
        v86 = (void *)Logger.logObject.getter();
        os_log_type_t v87 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_18(v87))
        {
          *(_WORD *)swift_slowAlloc() = 0;
          OUTLINED_FUNCTION_25_4(&dword_0, v88, v89, "#CallingIntentContinueInAppStrategy device on display mode: skipping dialog and submitting post dialog commands");
          OUTLINED_FUNCTION_6();
        }
        uint64_t v90 = *(void *)(v0 + 608);
        uint64_t v91 = *(void *)(v0 + 600);
        uint64_t v92 = *(void *)(v0 + 592);
        uint64_t v93 = *(void *)(v0 + 576);
        uint64_t v94 = *(void *)(v0 + 552);
        uint64_t v95 = *(void *)(v0 + 544);
        v96 = *(uint64_t **)(v0 + 472);

        memset(v114, 0, sizeof(v114));
        uint64_t v115 = 0;
        v96[3] = type metadata accessor for AceOutput();
        v96[4] = (uint64_t)&protocol witness table for AceOutput;
        __swift_allocate_boxed_opaque_existential_1(v96);
        AceOutput.init(commands:flowActivity:)();
        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v95);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
        OUTLINED_FUNCTION_10_52();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_12_45();
        __asm { BRAA            X1, X16 }
      }
    }
    OUTLINED_FUNCTION_12_20();
    v20();
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v0 + 512);
  uint64_t v111 = *(void *)(v0 + 520);
  uint64_t v112 = *(void *)(v0 + 504);
  uint64_t v31 = *(void *)(v0 + 488);
  uint64_t v32 = type metadata accessor for PhoneStartCallIntent(0);
  uint64_t v33 = (void *)IntentResolutionRecord.intent.getter();
  uint64_t v104 = v5;
  *(void *)(v0 + 664) = specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)(v33, 0, v32, v109, (__CFString *)v5);
  outlined init with copy of SignalProviding((uint64_t)v106, v0 + 40);
  *(unsigned char *)(v0 + 16) = 1;
  *(void *)(v0 + 24) = 0xD000000000000013;
  *(void *)(v0 + 32) = 0x800000000048E2A0;
  *(void *)(v0 + 672) = specialized SiriPhoneHintGenerator.generateHint()();
  *(void *)(v0 + 680) = v34;
  *(void *)(v0 + 688) = v35;
  *(void *)(v0 + 696) = v36;
  outlined destroy of HangUpTipGenerator(v0 + 16);
  uint64_t v37 = *(void *)(v108 + 40);
  uint64_t v38 = *(void *)(v108 + 48);
  __swift_project_boxed_opaque_existential_1(v106, v37);
  (*(void (**)(uint64_t, uint64_t))(v38 + 168))(v37, v38);
  uint64_t v39 = *(void *)(v0 + 144);
  uint64_t v40 = *(void (***)(void, void, void, void))(v0 + 152);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 120), v39);
  uint64_t v41 = IntentResolutionRecord.app.getter();
  id v42 = *(void (**)(void))(*(void *)v31 + 144);
  uint64_t v43 = *(void *)v31 + 144;
  *(void *)(v0 + 704) = v42;
  *(void *)(v0 + 712) = v43 & 0xFFFFFFFFFFFFLL | 0xFEF0000000000000;
  v105 = v42;
  v42();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 160), *(void *)(v0 + 184));
  dispatch thunk of DeviceState.siriLocale.getter();
  v40[2](v41, v111, v39, v40);
  uint64_t v45 = v44;
  swift_release();
  uint64_t v46 = v112;
  uint64_t v113 = v30 + 8;
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v111, v46);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  uint64_t v47 = *(void *)(v0 + 536);
  if (v45)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    uint64_t v48 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v47, 0, 1, v48);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_93_3(v49);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  IntentResolutionRecord.app.getter();
  uint64_t v50 = App.appIdentifier.getter();
  uint64_t v52 = v51;
  swift_release();
  if (v52)
  {
    if (v50 != 0xD000000000000010 || v52 != 0x8000000000495A40) {
      _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 720) = type metadata accessor for SirikitDeviceState();
  ((void (*)(_OWORD *__return_ptr))v105)(v114);
  id v53 = (void *)SirikitDeviceState.__allocating_init(from:)();
  *(void *)(v0 + 728) = v53;
  uint64_t v54 = (void *)IntentResolutionRecord.intent.getter();
  *(void *)(v0 + 736) = v54;
  self;
  uint64_t v55 = swift_dynamicCastObjCClass();
  if (v55)
  {
    uint64_t v40 = (void (**)(void, void, void, void))v55;
    v56 = v53;
    v57 = (void *)IntentResolutionRecord.intentResponse.getter();
    *(void *)(v0 + 744) = v57;
    self;
    uint64_t v58 = swift_dynamicCastObjCClass();
    if (v58)
    {
      id v53 = (void *)v58;
      unint64_t v59 = v57;
      LOBYTE(v39) = static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v40, v53);

      if (v39)
      {
        uint64_t v60 = v0 + 280;
        uint64_t v113 = v0 + 320;
        uint64_t v61 = *(void *)(v108 + 40);
        uint64_t v62 = *(void *)(v108 + 48);
        __swift_project_boxed_opaque_existential_1(v106, v61);
        (*(void (**)(uint64_t, uint64_t))(v62 + 224))(v61, v62);
        OUTLINED_FUNCTION_23();
        LOBYTE(v39) = (*(uint64_t (**)(uint64_t))(v63 + 120))(1);
        *(unsigned char *)(v0 + 868) = v39 & 1;
        swift_release();
        if (one-time initialization token for siriPhone == -1) {
          goto LABEL_28;
        }
        goto LABEL_66;
      }
    }

    id v53 = v56;
  }
  else
  {
    v57 = v54;
  }

  v72 = (void *)IntentResolutionRecord.intent.getter();
  unint64_t v59 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v104 + 8) + 8) + 8))(v109);

  if (!v59)
  {
    v81 = _swiftEmptyArrayStorage;
    goto LABEL_62;
  }
  *(void *)&v114[0] = _swiftEmptyArrayStorage;
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    if (v60) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v60 = *(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v60)
    {
LABEL_37:
      v105 = (void (*)(void))v53;
      type metadata accessor for PhonePerson(0);
      if (v60 < 1)
      {
        __break(1u);
LABEL_66:
        swift_once();
LABEL_28:
        uint64_t v64 = type metadata accessor for Logger();
        __swift_project_value_buffer(v64, (uint64_t)static Logger.siriPhone);
        v65 = Logger.logObject.getter();
        os_log_type_t v66 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v65, v66))
        {
          char v67 = v39;
          v68 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v68 = 67109120;
          *(_DWORD *)(v0 + 864) = v67 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl(&dword_0, v65, v66, "#CallingIntentContinueInAppStrategy is emergency confirmation reprompt: %{BOOL}d", v68, 8u);
          OUTLINED_FUNCTION_6();
        }
        uint64_t v69 = *(void *)(v0 + 488);

        *(void *)(v0 + 752) = *(void *)(v69 + 56);
        id v70 = (id)v59;
        uint64_t v71 = swift_retain();
        ((void (*)(uint64_t))v105)(v71);
        LOBYTE(v69) = static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v40, v53);
        outlined init with copy of SignalProviding(v60, v113);
        if (v69) {
          static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(v40, v113);
        }
        __swift_destroy_boxed_opaque_existential_1(v113);

        __swift_destroy_boxed_opaque_existential_1(v60);
        swift_retain();
        v82 = (void *)swift_task_alloc();
        *(void *)(v0 + 760) = v82;
        void *v82 = v0;
        v82[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
        OUTLINED_FUNCTION_12_45();
        __asm { BRAA            X6, X16 }
      }
      uint64_t v73 = 0;
      uint64_t v110 = v0;
      v74 = (void *)(v0 + 240);
      unint64_t v107 = v59 & 0xC000000000000001;
      unint64_t v75 = v59;
      do
      {
        if (v107) {
          id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v76 = *(id *)(v59 + 8 * v73 + 32);
        }
        v77 = v76;
        uint64_t v78 = *(void *)(v110 + 520);
        static Device.current.getter();
        __swift_project_boxed_opaque_existential_1(v74, *(void *)(v110 + 264));
        dispatch thunk of DeviceState.siriLocale.getter();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
        uint64_t v79 = static PhonePerson.make(phonePerson:options:locale:)(v77, 0, v78);
        OUTLINED_FUNCTION_12_20();
        v80();

        if (v79)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((char *)&dword_10 + (*(void *)&v114[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (*(void *)&v114[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        ++v73;
        unint64_t v59 = v75;
      }
      while (v60 != v73);
      swift_bridgeObjectRelease();
      v81 = *(void **)&v114[0];
      uint64_t v0 = v110;
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRelease();
  v81 = _swiftEmptyArrayStorage;
LABEL_61:
  swift_bridgeObjectRelease();
LABEL_62:
  uint64_t v99 = *(void *)(v0 + 488);
  type metadata accessor for PhonePersonList.Builder();
  uint64_t v100 = swift_allocObject();
  *(void *)(v100 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  *(void *)(v100 + 16) = v81;
  swift_bridgeObjectRelease();
  type metadata accessor for PhonePersonList();
  swift_allocObject();
  *(void *)(v0 + 776) = PhonePersonList.init(builder:)(v100);
  *(void *)(v0 + 784) = *(void *)(v99 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  IntentResolutionRecord.app.getter();
  App.isFirstParty()();
  swift_release();
  CallingIntentContinueInAppStrategy.shouldPrintDialogOnDisplayMode()();
  v101 = (void *)swift_task_alloc();
  *(void *)(v0 + 792) = v101;
  void *v101 = v0;
  v101[1] = CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:);
  OUTLINED_FUNCTION_12_45();
  __asm { BRAA            X8, X16 }
}

BOOL CallingIntentContinueInAppStrategy.isBusinessRedirectCall()()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  OUTLINED_FUNCTION_23();
  (*(void (**)(uint64_t *__return_ptr))(v3 + 232))(&v6);
  swift_release();
  if (v7[3] == 1)
  {
    outlined destroy of UUID?((uint64_t)&v6, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v10 = 0;
LABEL_5:
    outlined destroy of UUID?((uint64_t)&v8, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    return 0;
  }
  outlined init with copy of PhoneCallNLIntent?((uint64_t)v7, (uint64_t)&v8);
  outlined destroy of TransformationResult((uint64_t)&v6);
  if (!*((void *)&v9 + 1)) {
    goto LABEL_5;
  }
  outlined init with take of AppSelectionSignalComponent(&v8, (uint64_t)&v6);
  __swift_project_boxed_opaque_existential_1(&v6, v7[2]);
  OUTLINED_FUNCTION_115();
  Swift::Bool v4 = PhoneCallNLIntent.isBusinessRedirectCall()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
  return v4;
}

BOOL CallingIntentContinueInAppStrategy.shouldPrintDialogOnDisplayMode()()
{
  uint64_t v1 = type metadata accessor for ResponseMode();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(v8, v9);
  BOOL v11 = v10;
  if (v10)
  {
    CurrentRequest.responseMode.getter();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v5, v1);
    BOOL v11 = ResponseMode.isDisplayMode()() && CallingIntentContinueInAppStrategy.isBusinessRedirectCall()();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  return v11;
}

uint64_t CallingIntentContinueInAppStrategy.authenticationPolicy.getter()
{
  type metadata accessor for UnlockDevicePolicy();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = OUTLINED_FUNCTION_115();

  return v1(v0);
}

uint64_t key path setter for CallingIntentContinueInAppStrategy.additionalCommands : <A, B>CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 160);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t closure #1 in CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:)()
{
  return OutputGenerationManifest.additionalCommands.setter();
}

uint64_t closure #1 in CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = a3;
  uint64_t v4 = type metadata accessor for CATOption();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  IntentResolutionRecord.app.getter();
  uint64_t v8 = (void *)IntentResolutionRecord.intent.getter();
  uint64_t v9 = (void *)IntentResolutionRecord.intentResponse.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)static BiomeEventSender.instance;
  type metadata accessor for UnsupportedFlowCATs();
  id v13 = v12;
  static CATOption.defaultMode.getter();
  CATWrapper.__allocating_init(options:globals:)();
  specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s27PhoneCallFlowDelegatePlugin34CallingIntentContinueInAppStrategyC22makePostDialogCommands22intentResolutionRecord16dialogTemplatingSaySo13SABaseCommandCG07SiriKitC00gqR0Vyxq_G_AA05Startb3CatT7ServiceCSgtYaKFyScCySo019SAIntentGroupLaunchj4WithG0Cs5Error_pGXEfU_ys6ResultOyARsAS_pGYucATcfu_yAWYucfu0_(void *a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    id v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t CallingIntentContinueInAppStrategy.__deallocating_deinit()
{
  CallingIntentContinueInAppStrategy.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ContinueInAppAutoPunchOutFlowStrategyAsync.requireUnlock(intentResolutionRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))() & 1;
}

uint64_t protocol witness for ContinueInAppAutoPunchOutFlowStrategyAsync.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 192)
                                                + **(int **)(**(void **)v2 + 192));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 200)
                                                + **(int **)(**(void **)v2 + 200));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.authenticationPolicy.getter in conformance CallingIntentContinueInAppStrategy<A, B>()
{
  type metadata accessor for UnlockDevicePolicy();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = OUTLINED_FUNCTION_115();

  return v1(v0);
}

uint64_t protocol witness for UnlockDeviceFlowStrategyAsync.makePromptForDeviceUnlock() in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 216) + **(int **)(**(void **)v1 + 216));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(a1);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance CallingIntentContinueInAppStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentContinueInAppStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for Flow.onAsync(input:) in conformance RedirectToCompanionFlow;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t partial apply for closure #1 in CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1)
{
  return closure #1 in CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t partial apply for closure #1 in CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:)()
{
  return closure #1 in CallingIntentContinueInAppStrategy.makeIntentHandledOutput(intentResolutionRecord:)();
}

uint64_t outlined consume of HintInstance?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t base witness table accessor for ContinueInAppDialogFlowStrategyAsync in CallingIntentContinueInAppStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for UnlockDeviceFlowStrategyAsync in CallingIntentContinueInAppStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in CallingIntentContinueInAppStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for ContinueInAppFlowStrategy in CallingIntentContinueInAppStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t sub_2DE620@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_2DE670()
{
  return 24;
}

__n128 sub_2DE67C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t type metadata completion function for CallingIntentContinueInAppStrategy()
{
  uint64_t result = type metadata accessor for UnlockDevicePolicy();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CallingIntentContinueInAppStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t specialized updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()(uint64_t a1, void *a2, uint64_t *a3)
{
  return specialized updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()(a1, a2, *a3);
}

uint64_t sub_2DE768()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t partial apply for specialized updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()(uint64_t a1)
{
  return specialized updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()(a1, (void *)(v1 + 16), (uint64_t *)(v1 + 80));
}

uint64_t sub_2DE7BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 80) | 7;
  OUTLINED_FUNCTION_11();
  v2();
  uint64_t v3 = OUTLINED_FUNCTION_96();

  return _swift_deallocObject(v3, v4, v1);
}

uint64_t OUTLINED_FUNCTION_2_99()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3_85@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a2 + 40);
  __swift_project_boxed_opaque_existential_1(a1, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_10_52()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_16_44(uint64_t a1@<X8>)
{
  *(void *)(v1 + 808) = a1;
}

uint64_t OUTLINED_FUNCTION_20_36()
{
  return *(void *)(v0 + 472);
}

uint64_t OUTLINED_FUNCTION_23_34()
{
  return v0;
}

void *OUTLINED_FUNCTION_28_31()
{
  *(void *)(v1 + 848) = v0;
  return __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v1 + 488) + 16), *(void *)(*(void *)(v1 + 488) + 40));
}

uint64_t OUTLINED_FUNCTION_30_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_21()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_35_24()
{
  return *(void *)(v0 + 672);
}

uint64_t OUTLINED_FUNCTION_41_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_20()
{
  return v0;
}

void *ContactGroupResolver.findGroups(query:config:)()
{
  uint64_t v0 = type metadata accessor for ContactGroup();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = ContactGroupResolver.findGroups(query:config:)();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v6 = v21;
    uint64_t v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v7 = v1 + 16;
    uint64_t v8 = v9;
    unint64_t v10 = v4 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v16 = v4;
    uint64_t v17 = v11;
    do
    {
      v8(v3, v10, v0);
      uint64_t v21 = v6;
      unint64_t v12 = v6[2];
      if (v12 >= v6[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      uint64_t v19 = v0;
      uint64_t v20 = &protocol witness table for ContactGroup;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
      v8((char *)boxed_opaque_existential_1, (unint64_t)v3, v0);
      uint64_t v14 = v21;
      v21[2] = v12 + 1;
      outlined init with take of AppSelectionSignalComponent(&v18, (uint64_t)&v14[5 * v12 + 4]);
      (*(void (**)(char *, uint64_t))(v7 - 8))(v3, v0);
      uint64_t v6 = v21;
      v10 += v17;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

uint64_t protocol witness for ContactGroupResult.id.getter in conformance ContactGroup()
{
  return ContactGroup.id.getter();
}

uint64_t protocol witness for ContactGroupResult.name.getter in conformance ContactGroup()
{
  return ContactGroup.name.getter();
}

uint64_t protocol witness for ContactGroupResult.bundleId.getter in conformance ContactGroup()
{
  return ContactGroup.bundleId.getter();
}

uint64_t AnyIntentResolver.resolve(skIntent:nlIntent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnyIntentResolver.resolve(skIntent:nlIntent:));
}

uint64_t AnyIntentResolver.resolve(skIntent:nlIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 48) + **(int **)(v0[4] + 48));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = AnyIntentResolver.resolve(skIntent:nlIntent:);
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return v5(v3, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_44();
  uint64_t v3 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  if (!v1) {
    uint64_t v5 = v0;
  }
  return v6(v5);
}

uint64_t SKIntentResolver.toAnyIntentResolver()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v10 = *(void (**)(void))(v5 + 16);
  OUTLINED_FUNCTION_8_76();
  v10();
  swift_getAssociatedTypeWitness();
  type metadata accessor for AnyIntentResolver();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    long long v12 = v16;
    *(_OWORD *)a2 = v15;
    *(_OWORD *)(a2 + 16) = v12;
    long long v13 = v18;
    *(_OWORD *)(a2 + 32) = v17;
    *(_OWORD *)(a2 + 48) = v13;
  }
  else
  {
    uint64_t v14 = type metadata accessor for Optional();
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    (*(void (**)(long long *, uint64_t))(*(void *)(v14 - 8) + 8))(&v15, v14);
    OUTLINED_FUNCTION_8_76();
    v10();
    return AnyIntentResolver.init<A>(_:)((uint64_t)v9, a1, (uint64_t *)a2);
  }
  return result;
}

uint64_t type metadata accessor for AnyIntentResolver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SKIntentResolver.run(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SKIntentResolver.run(skIntent:nlIntent:));
}

uint64_t SKIntentResolver.run(skIntent:nlIntent:)()
{
  OUTLINED_FUNCTION_9_62();
  if (v1())
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 40) + 24)
                                                                    + **(int **)(*(void *)(v0 + 40) + 24));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v2;
    *uint64_t v2 = v0;
    v2[1] = SKIntentResolver.run(skIntent:nlIntent:);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 16);
    return v9(v6, v4, v5, v3);
  }
  else
  {
    unint64_t v10 = *(uint64_t (**)(id))(v0 + 8);
    id v8 = *(id *)(v0 + 16);
    return v10(v8);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_44();
  uint64_t v3 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  if (!v1) {
    uint64_t v5 = v0;
  }
  return v6(v5);
}

uint64_t AnyIntentResolver.shouldRunResolver(skIntent:nlIntent:)()
{
  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t AnyIntentResolver.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  a3[3] = a2;
  __swift_allocate_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  (*(void (**)(void))(v8 + 16))();
  uint64_t v9 = OUTLINED_FUNCTION_1_22();
  a3[4] = (uint64_t)implicit closure #1 in AnyIntentResolver.init<A>(_:)(v9, v10, v11, v12);
  a3[5] = v13;
  uint64_t v14 = OUTLINED_FUNCTION_1_22();
  long long v18 = implicit closure #3 in AnyIntentResolver.init<A>(_:)(v14, v15, v16, v17);
  uint64_t v20 = v19;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  a3[6] = (uint64_t)v18;
  a3[7] = v20;
  return result;
}

uint64_t AnyIntentResolver.description.getter()
{
  outlined init with copy of Any(v0, (uint64_t)v2);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any.Type);
  return String.init<A>(describing:)();
}

uint64_t (*implicit closure #1 in AnyIntentResolver.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return partial apply for implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
}

void *implicit closure #3 in AnyIntentResolver.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return &async function pointer to partial apply for implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
}

uint64_t implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24) + **(int **)(a6 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v11;
  *uint64_t v11 = v6;
  v11[1] = implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v13(a1, a2, a5, a6);
}

uint64_t implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_44();
  uint64_t v3 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  if (!v1) {
    uint64_t v5 = v0;
  }
  return v6(v5);
}

uint64_t AnyIntentResolver.unbox<A>(as:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  outlined init with copy of Any(v3, (uint64_t)&v8);
  int v6 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a2, v6 ^ 1u, 1, a1);
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance AnyIntentResolver<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance AnyIntentResolver<A>;
  return AnyIntentResolver.resolve(skIntent:nlIntent:)(a1, a2);
}

uint64_t destroy for AnyIntentResolver(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AnyIntentResolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for AnyIntentResolver(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *assignWithTake for AnyIntentResolver(_OWORD *a1, _OWORD *a2)
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyIntentResolver(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyIntentResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  OUTLINED_FUNCTION_1_44();
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = partial apply for implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1, a2, v10, v6, v7, v8);
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_44();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  return v4(v0);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:)()
{
  OUTLINED_FUNCTION_1_44();
  OUTLINED_FUNCTION_9_62();
  return v0() & 1;
}

double protocol witness for CustomCanvasModel.init(serializedData:) in conformance PhoneContactHeader@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return specialized CustomCanvasModel<>.init(serializedData:)(a1, a2, a3);
}

double specialized CustomCanvasModel<>.init(serializedData:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  outlined consume of Data._Representation(a1, a2);
  swift_release();
  if (!v3)
  {
    double result = *(double *)&v8;
    *(_OWORD *)a3 = v8;
    *(_OWORD *)(a3 + 16) = v9;
    *(_OWORD *)(a3 + 32) = v10;
    *(void *)(a3 + 48) = v11;
    *(void *)(a3 + 56) = v12;
    *(unsigned char *)(a3 + 64) = v13;
  }
  return result;
}

uint64_t CustomCanvasModel<>.init(serializedData:)(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t specialized static CustomCanvasModel<>.name.getter()
{
  return String.init<A>(describing:)();
}

uint64_t static CustomCanvasModel<>.name.getter()
{
  return String.init<A>(describing:)();
}

uint64_t protocol witness for CATSerializable.serializedData() in conformance PhoneContactHeader()
{
  memcpy(__dst, v0, sizeof(__dst));
  return specialized CustomCanvasModel<>.serializedData()();
}

uint64_t specialized CustomCanvasModel<>.serializedData()()
{
  memcpy(__dst, v0, sizeof(__dst));
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
  uint64_t v1 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v1;
}

uint64_t CustomCanvasModel<>.serializedData()()
{
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  uint64_t v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v0;
}

uint64_t static USOSerializedGraph.fromTaskBuilders(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  __chkstk_darwin(v0 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2 - v1;
  UsoBuilderOptions.init(longhandDefinedValues:)();
  uint64_t v4 = type metadata accessor for UsoBuilderOptions();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v4);
  static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
  outlined destroy of UsoBuilderOptions?(v3);
  uint64_t v5 = static USOSerializedGraph.fromGraph(_:)();
  swift_release();
  return v5;
}

uint64_t static USOSerializedGraph.fromGraph(_:)()
{
  uint64_t v0 = type metadata accessor for PhoneError();
  uint64_t v1 = __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  Graph.protobufGraphSiriNl(vocabManager:)();
  uint64_t v10 = static USOSerializedGraph.fromProto(protoGraph:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  return v10;
}

uint64_t RecipientSlotTemplating.init(deviceState:catFamily:startCallCatFamily:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = outlined init with take of AppSelectionSignalComponent(a1, a4);
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

uint64_t RecipientSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                     + **(void **)(v6 + 40)
                                                     + 480))(a5, a6);
}

uint64_t RecipientSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a8;
  uint64_t v12 = type metadata accessor for Locale();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for INPerson();
  if (swift_dynamicCast()) {
    id v17 = (id)v23[5];
  }
  else {
    id v17 = [a5 recipient];
  }
  long long v18 = *(void **)(v8 + 40);
  type metadata accessor for PhonePerson(0);
  static Device.current.getter();
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v19 = static PhonePerson.make(phonePerson:options:locale:)(v17, 0, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs + *v18 + 128))(v19, a7, v22);

  return swift_release();
}

uint64_t RecipientSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v9 + 48);
  uint64_t v15 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v14 + 256))(v13, a8, a9);
  return outlined destroy of SpeakableString?((uint64_t)v13);
}

uint64_t RecipientSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                     + **(void **)(v9 + 40)
                                                     + 1024))(a8, a9);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:) in conformance RecipientSlotTemplating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return RecipientSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(a1, a2, a3, a4, a5, 0, a7, a8, a9);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:) in conformance RecipientSlotTemplating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return RecipientSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t destroy for RecipientSlotTemplating(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for RecipientSlotTemplating(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for RecipientSlotTemplating(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RecipientSlotTemplating(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipientSlotTemplating(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipientSlotTemplating(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipientSlotTemplating()
{
  return &type metadata for RecipientSlotTemplating;
}

uint64_t PhonePersonWithAliasesList.Builder.build()()
{
  type metadata accessor for PhonePersonWithAliasesList();
  swift_allocObject();
  uint64_t v0 = swift_retain();
  return PhonePersonList.init(builder:)(v0);
}

uint64_t PhonePersonWithAliasesList.__allocating_init(builder:)(uint64_t a1)
{
  return PhonePersonList.init(builder:)(a1);
}

uint64_t type metadata accessor for PhonePersonWithAliasesList()
{
  return self;
}

unint64_t static PhonePersonWithAliasesList.catTypeName.getter()
{
  return 0xD00000000000001BLL;
}

double PhonePersonWithAliasesList.getProperty(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4 = a1 == 0x68744F664F6D756ELL && a2 == 0xEB00000000737265;
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    PhonePersonWithAliasesListProperties<>.numOfOthers.getter();
    if (v9)
    {
      double result = 0.0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    else
    {
      *(void *)(a3 + 24) = &type metadata for Double;
      *(void *)a3 = v7;
    }
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000499620 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    char v10 = specialized PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter();
    *(void *)(a3 + 24) = &type metadata for Bool;
    *(unsigned char *)a3 = v10 & 1;
  }
  else
  {
    return PhonePersonList.getProperty(_:)(a1, a2, a3);
  }
  return result;
}

void PhonePersonWithAliasesListProperties<>.numOfOthers.getter()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  }
  if (__OFSUB__(v2, 2)) {
    __break(1u);
  }
}

uint64_t specialized PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter()
{
  swift_retain();
  unint64_t v1 = swift_bridgeObjectRetain();
  char v2 = specialized Sequence.allSatisfy(_:)(v1, v0);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t PhonePersonWithAliasesList.__allocating_init(from:)(uint64_t a1)
{
  return PhonePersonWithAliasesList.init(from:)(a1);
}

uint64_t PhonePersonWithAliasesList.init(from:)(uint64_t a1)
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v4);
  uint64_t v2 = PhonePersonList.init(from:)(v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t PhonePersonWithAliasesList.__deallocating_deinit()
{
  EligibleAppFinder.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhonePersonWithAliasesList.Builder()
{
  return self;
}

uint64_t specialized closure #1 in PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SpeakableString();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SpeakableString?, SpeakableString?));
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  DialogPerson.familyName.getter();
  unint64_t v18 = *(void *)(a2 + 24);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
  }
  if (v19 < 1)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v3);
  }
  else
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v18 & 0xC000000000000001) == 0);
    if ((v18 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    DialogPerson.familyName.getter();
    swift_release();
  }
  uint64_t v20 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of SpeakableString?((uint64_t)v17, (uint64_t)v8);
  outlined init with copy of SpeakableString?((uint64_t)v15, v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v3) == 1)
  {
    uint64_t v21 = &demangling cache variable for type metadata for SpeakableString?;
    outlined destroy of SubmitCommandError?((uint64_t)v15, &demangling cache variable for type metadata for SpeakableString?);
    outlined destroy of SubmitCommandError?((uint64_t)v17, &demangling cache variable for type metadata for SpeakableString?);
    if (__swift_getEnumTagSinglePayload(v20, 1, v3) == 1)
    {
      char v22 = -1;
    }
    else
    {
      uint64_t v21 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
      char v22 = 0;
    }
  }
  else
  {
    os_log_type_t v23 = v12;
    outlined init with copy of SpeakableString?((uint64_t)v8, (uint64_t)v12);
    if (__swift_getEnumTagSinglePayload(v20, 1, v3) == 1)
    {
      outlined destroy of SubmitCommandError?((uint64_t)v15, &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of SubmitCommandError?((uint64_t)v17, &demangling cache variable for type metadata for SpeakableString?);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
      char v22 = 0;
      uint64_t v21 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
    }
    else
    {
      uint64_t v24 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v28, v20, v3);
      lazy protocol witness table accessor for type SpeakableString and conformance SpeakableString();
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v27 = v23;
      uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v24, v3);
      uint64_t v21 = &demangling cache variable for type metadata for SpeakableString?;
      outlined destroy of SubmitCommandError?((uint64_t)v15, &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of SubmitCommandError?((uint64_t)v17, &demangling cache variable for type metadata for SpeakableString?);
      v25(v27, v3);
    }
  }
  outlined destroy of SubmitCommandError?((uint64_t)v8, v21);
  return v22 & 1;
}

uint64_t static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(void *a1, void *a2)
{
  closure #1 in static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(a1, a2, &v3, &v4);
  return v4;
}

uint64_t closure #1 in static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = (uint64_t)static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(a1, a2);
  if (v4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v9, v10, "#ThirdPartyCallKitLaunchAppBuilder Error building LaunchApp for 3P redial/callback: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t result = swift_willThrow();
    *a3 = v4;
  }
  else
  {
    *a4 = result;
  }
  return result;
}

void *static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PhoneError();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v7 = [a2 userActivity];
    if (v7 && (uint64_t v8 = v7, v9 = [v7 interaction], v8, v9))
    {
      id v10 = [v9 intent];
    }
    else
    {
      id v10 = 0;
    }
    id v11 = [a2 userActivity];
    id v12 = [v11 interaction];

    id v13 = [v12 intentResponse];
    id v14 = INStartCallIntentResponse.thirdPartyCallKitCallBackBundleId.getter();
    unint64_t v16 = v15;
  }
  else
  {
    id v14 = 0;
    unint64_t v16 = 0;
    id v13 = 0;
    id v10 = 0;
  }
  swift_bridgeObjectRetain();
  char v17 = specialized Optional<A>.isNilOrEmpty.getter((uint64_t)v14, v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    swift_allocError();
    PhoneError.logged()(v18);
    outlined destroy of PhoneError((uint64_t)v6);
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      char v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "userActivity launchId is valid for ThirdPartyCallKitCallBack request", v22, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for App();
    App.__allocating_init(appIdentifier:)();
    if (v10)
    {
      os_log_type_t v23 = v10;
      id v24 = v10;
    }
    else
    {
      id v24 = a1;
      os_log_type_t v23 = 0;
    }
    type metadata accessor for SAIntentGroupLaunchAppWithIntent();
    id v25 = v23;
    a1 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();

    id v26 = v25;
    swift_retain_n();
    id v27 = v26;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v28, v29))
    {
      id v42 = a1;
      id v43 = v13;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v46 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v41 = v31;
      if (v10)
      {
        id v32 = objc_msgSend(v27, "typeName", v41);
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v10 = v34;
      }
      else
      {
        uint64_t v33 = 0;
      }
      uint64_t v44 = v33;
      id v45 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v35 = String.init<A>(describing:)();
      uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v44 = App.appIdentifier.getter();
      id v45 = v37;
      uint64_t v38 = String.init<A>(describing:)();
      uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v28, v29, "#StartCallRCHFlowDelegate ThirdPartyCallKitCallBack LaunchApp intentType: %s, appId: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      return v42;
    }
    else
    {

      swift_release_n();
    }
  }
  return a1;
}

void static ThirdPartyCallKitLaunchAppBuilder.validateLaunchId(userActivityLaunchId:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneError();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  LOBYTE(a1) = specialized Optional<A>.isNilOrEmpty.getter(a1, a2);
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    swift_allocError();
    PhoneError.logged()(v7);
    outlined destroy of PhoneError((uint64_t)v6);
    swift_willThrow();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    id v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_0, v9, v10, "userActivity launchId is valid for ThirdPartyCallKitCallBack request", v11, 2u);
      swift_slowDealloc();
    }
  }
}

ValueMetadata *type metadata accessor for ThirdPartyCallKitLaunchAppBuilder()
{
  return &type metadata for ThirdPartyCallKitLaunchAppBuilder;
}

uint64_t static CallEmergencyResourceDirectInvocation.invocation(for:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467710;
  *(void *)(inited + 32) = 0xD00000000000001FLL;
  *(void *)(inited + 40) = 0x8000000000499710;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  return Parse.DirectInvocation.init(identifier:userData:)();
}

void *CallEmergencyResourceDirectInvocation.identifier.unsafeMutableAddressor()
{
  return &static CallEmergencyResourceDirectInvocation.identifier;
}

unint64_t static CallEmergencyResourceDirectInvocation.identifier.getter()
{
  return 0xD00000000000003FLL;
}

void *CallEmergencyResourceDirectInvocation.payloadKey.unsafeMutableAddressor()
{
  return &static CallEmergencyResourceDirectInvocation.payloadKey;
}

unint64_t static CallEmergencyResourceDirectInvocation.payloadKey.getter()
{
  return 0xD00000000000001FLL;
}

ValueMetadata *type metadata accessor for CallEmergencyResourceDirectInvocation()
{
  return &type metadata for CallEmergencyResourceDirectInvocation;
}

uint64_t ActionableCallControlFlow.init(state:sharedGlobals:action:phoneCallControlCATsSimple:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  outlined init with take of ActionableCallControlFlow.State(a2, v4 + 16);
  *(unsigned char *)(v4 + 56) = a3;
  *(void *)(v4 + 64) = a4;
  outlined init with take of ActionableCallControlFlow.State(a1, v4 + 72);
  return v4;
}

uint64_t ActionableCallControlFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  outlined destroy of ActionableCallControlFlow.State(v0 + 72);
  return v0;
}

uint64_t outlined destroy of ActionableCallControlFlow.State(uint64_t a1)
{
  return a1;
}

uint64_t ActionableCallControlFlow.state.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return outlined init with copy of ActionableCallControlFlow.State(v1 + 72, a1);
}

uint64_t outlined init with copy of ActionableCallControlFlow.State(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ActionableCallControlFlow.state.setter(uint64_t a1)
{
  swift_beginAccess();
  outlined assign with take of ActionableCallControlFlow.State(a1, v1 + 72);
  return swift_endAccess();
}

uint64_t (*ActionableCallControlFlow.state.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t ActionableCallControlFlow.__allocating_init(sharedGlobals:action:phoneCallControlCATsSimple:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  outlined init with copy of SiriPhoneContact();
  uint64_t v7 = (*(uint64_t (**)(_OWORD *, unsigned char *, uint64_t, uint64_t))(v3 + 144))(v10, v9, a2, a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v7;
}

uint64_t static ActionableCallControlFlow.ActionableCallControlFlowError.unsupportedHoldAction(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  return static ActionableCallControlFlow.ActionableCallControlFlowError.unsupportedHoldAction(_:)(a1, (uint64_t)&type metadata for ActionableCallControlFlow.UnsupportedHoldActionReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedHoldActionReason and conformance ActionableCallControlFlow.UnsupportedHoldActionReason, a2);
}

uint64_t static ActionableCallControlFlow.ActionableCallControlFlowError.unsupportedSwitchToFaceTimeAction(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  return static ActionableCallControlFlow.ActionableCallControlFlowError.unsupportedHoldAction(_:)(a1, (uint64_t)&type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason, a2);
}

uint64_t static ActionableCallControlFlow.ActionableCallControlFlowError.unsupportedHoldAction(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + 24) = a2;
  uint64_t result = a3();
  *(void *)(a4 + 32) = result;
  *(unsigned char *)a4 = a1;
  *(unsigned char *)(a4 + 40) = 1;
  return result;
}

uint64_t UnsupportedAction.toSpeakableString.getter()
{
  return swift_bridgeObjectRelease();
}

uint64_t UnsupportedAction.typeName.getter()
{
  return String.init<A>(describing:)();
}

uint64_t UnsupportedAction.description.getter()
{
  uint64_t v3 = UnsupportedAction.typeName.getter();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  dispatch thunk of RawRepresentable.rawValue.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t ActionableCallControlFlow.ActionableCallControlFlowError.description.getter()
{
  outlined init with copy of ActionableCallControlFlow.ActionableCallControlFlowError(v0, (uint64_t)v14);
  unint64_t v1 = 0xD00000000000001ELL;
  switch(v15)
  {
    case 1:
      outlined init with take of ActionableCallControlFlow.State((uint64_t)v14, (uint64_t)&v11);
      _StringGuts.grow(_:)(25);
      v4._object = (void *)0x8000000000499770;
      v4._countAndFlagsBits = 0xD000000000000016;
      String.append(_:)(v4);
      __swift_project_boxed_opaque_existential_1(&v11, v13);
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      v5._countAndFlagsBits = 41;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      unint64_t v1 = 0;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
      break;
    case 2:
      uint64_t v6 = v14[0];
      uint64_t v7 = (void *)v14[1];
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000016;
      unint64_t v12 = 0x8000000000499750;
      v8._countAndFlagsBits = v6;
      v8._object = v7;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = 41;
      v9._object = (void *)0xE100000000000000;
      String.append(_:)(v9);
      goto LABEL_5;
    case 3:
      return v1;
    default:
      char v2 = v14[0];
      _StringGuts.grow(_:)(40);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000026;
      unint64_t v12 = 0x8000000000499790;
      v3._countAndFlagsBits = PhoneCallControlAction.description.getter(v2);
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
LABEL_5:
      unint64_t v1 = v11;
      break;
  }
  return v1;
}

uint64_t outlined init with copy of ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t static ActionableCallControlFlow.ActionableCallControlFlowError.unsupportedAction(_:)@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ActionableCallControlFlow.UnsupportedActionReason;
  unint64_t result = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason();
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 1;
  return result;
}

unint64_t static ActionableCallControlFlow.ActionableCallControlFlowError.unsupportedSpeakerPhoneAction(_:)@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason;
  unint64_t result = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason();
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 1;
  return result;
}

BOOL ActionableCallControlFlow.UnsupportedActionReason.init(rawValue:)()
{
  return ActionableCallControlFlow.UnsupportedActionReason.init(rawValue:)();
}

{
  void *v0;
  void *v1;
  Swift::OpaquePointer v2;
  Swift::String v3;
  Swift::Int v4;

  OUTLINED_FUNCTION_4_5();
  v2._rawValue = v1;
  v3._object = v0;
  Swift::String v4 = _findStringSwitchCase(cases:string:)(v2, v3);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance ActionableCallControlFlow.UnsupportedActionReason@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = ActionableCallControlFlow.UnsupportedActionReason.init(rawValue:)();
  *a1 = result;
  return result;
}

BOOL ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason.init(rawValue:)()
{
  return ActionableCallControlFlow.UnsupportedActionReason.init(rawValue:)();
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason.init(rawValue:)();
  *a1 = result;
  return result;
}

PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedHoldActionReason_optional __swiftcall ActionableCallControlFlow.UnsupportedHoldActionReason.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  v2._object = v1;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ActionableCallControlFlow.UnsupportedHoldActionReason.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedHoldActionReason_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedHoldActionReason_optional)v3;
  }
}

uint64_t ActionableCallControlFlow.UnsupportedHoldActionReason.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x726F707075736E75;
  }
  if (a1 == 1) {
    return 0xD000000000000017;
  }
  return 0xD000000000000016;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionableCallControlFlow.UnsupportedHoldActionReason(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ActionableCallControlFlow.UnsupportedHoldActionReason()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ActionableCallControlFlow.UnsupportedHoldActionReason(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ActionableCallControlFlow.UnsupportedHoldActionReason(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedHoldActionReason_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ActionableCallControlFlow.UnsupportedHoldActionReason@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedHoldActionReason_optional *a2@<X8>)
{
  result.value = ActionableCallControlFlow.UnsupportedHoldActionReason.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ActionableCallControlFlow.UnsupportedHoldActionReason@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ActionableCallControlFlow.UnsupportedHoldActionReason.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for UnsupportedAction.toSpeakableString.getter in conformance ActionableCallControlFlow.UnsupportedHoldActionReason()
{
  return specialized UnsupportedAction.toSpeakableString.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ActionableCallControlFlow.UnsupportedHoldActionReason()
{
  return specialized UnsupportedAction.description.getter(*v0);
}

PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedSwitchToFaceTimeReason_optional __swiftcall ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  v2._object = v1;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return (PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedSwitchToFaceTimeReason_optional)10;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedSwitchToFaceTimeReason_optional)v3;
  }
}

unint64_t ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000028;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000021;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedSwitchToFaceTimeReason_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ActionableCallControlFlow::UnsupportedSwitchToFaceTimeReason_optional *a2@<X8>)
{
  result.value = ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for UnsupportedAction.toSpeakableString.getter in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason()
{
  return specialized UnsupportedAction.toSpeakableString.getter(*v0);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason()
{
  return specialized UnsupportedAction.description.getter(*v0);
}

unint64_t ActionableCallControlFlow.State.description.getter()
{
  outlined init with copy of ActionableCallControlFlow.State(v0, (uint64_t)v6);
  unint64_t v1 = 0x6C616974696E692ELL;
  switch(v7)
  {
    case 0:
      return v1;
    case 1:
      unint64_t v1 = 0x6D726F667265702ELL;
      break;
    case 2:
      unint64_t v1 = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t v1 = 0x7373696D7369642ELL;
      break;
    default:
      outlined init with take of ActionableCallControlFlow.State((uint64_t)v6, (uint64_t)v5);
      _StringGuts.grow(_:)(36);
      v2._countAndFlagsBits = 0xD000000000000021;
      v2._object = (void *)0x80000000004997E0;
      String.append(_:)(v2);
      __swift_project_boxed_opaque_existential_1(v5, v5[3]);
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      v3._countAndFlagsBits = 41;
      v3._object = (void *)0xE100000000000000;
      String.append(_:)(v3);
      unint64_t v1 = 0;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      break;
  }
  return v1;
}

uint64_t static ActionableCallControlFlow.State.== infix(_:_:)()
{
  unint64_t v0 = ActionableCallControlFlow.State.description.getter();
  uint64_t v2 = v1;
  if (v0 == ActionableCallControlFlow.State.description.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t ActionableCallControlFlow.sharedGlobals.getter()
{
  return outlined init with copy of SiriPhoneContact();
}

uint64_t key path setter for ActionableCallControlFlow.state : ActionableCallControlFlow(uint64_t a1, uint64_t a2)
{
  outlined init with copy of ActionableCallControlFlow.State(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 120))(v4);
}

uint64_t ActionableCallControlFlow.__allocating_init(state:sharedGlobals:action:phoneCallControlCATsSimple:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  ActionableCallControlFlow.init(state:sharedGlobals:action:phoneCallControlCATsSimple:)(a1, a2, a3, a4);
  return v8;
}

uint64_t ActionableCallControlFlow.execute(completion:)()
{
  type metadata accessor for ActionableCallControlFlow();
  lazy protocol witness table accessor for type ActionableCallControlFlow and conformance ActionableCallControlFlow(&lazy protocol witness table cache variable for type ActionableCallControlFlow and conformance ActionableCallControlFlow, v0, (void (*)(uint64_t))type metadata accessor for ActionableCallControlFlow);
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t ActionableCallControlFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 264) = a1;
  *(void *)(v2 + 272) = v1;
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t ActionableCallControlFlow.execute()()
{
  v114 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v111 = v0 + 8;
  uint64_t v110 = (uint64_t)(v0 + 18);
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (char *)v0[34];
  if (v4)
  {
    uint64_t v6 = OUTLINED_FUNCTION_14_0();
    v112[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    v0[2] = *(void *)v5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionableCallControlFlow.Type);
    uint64_t v7 = String.init<A>(describing:)();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_3();
    *(_WORD *)(v6 + 12) = 2080;
    unint64_t v9 = PhoneCallControlAction.description.getter(v5[56]);
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v11 = OUTLINED_FUNCTION_65_3();
    *(_WORD *)(v6 + 22) = 2080;
    (*(void (**)(uint64_t))(*(void *)v5 + 112))(v11);
    unint64_t v12 = ActionableCallControlFlow.State.description.getter();
    unint64_t v14 = v13;
    outlined destroy of ActionableCallControlFlow.State((uint64_t)(v0 + 2));
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, v112);
    LOBYTE(v12) = v3;
    char v15 = v0 + 2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_3();
    _os_log_impl(&dword_0, v2, (os_log_type_t)v12, "#%s executing for action=%s in state=%s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    char v15 = v0 + 2;
    swift_release_n();
  }

  unint64_t v16 = v0 + 23;
  OUTLINED_FUNCTION_31_26();
  (*(void (**)(void))(v17 + 112))();
  switch(v0[16])
  {
    case 0:
      uint64_t v18 = OUTLINED_FUNCTION_13_41();
      v19(v18);
      uint64_t v20 = OUTLINED_FUNCTION_23_35();
      uint64_t v22 = v21(v20);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      os_log_type_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      BOOL v25 = os_log_type_enabled(v23, v24);
      if (v22)
      {
        if (v25)
        {
          id v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v26 = 0;
          OUTLINED_FUNCTION_6();
        }

        OUTLINED_FUNCTION_34_19();
        long long v113 = xmmword_467740;
      }
      else
      {
        if (v25)
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v63 = 0;
          OUTLINED_FUNCTION_6();
        }

        *(void *)&long long v113 = &type metadata for ActionableCallControlFlow.UnsupportedActionReason;
        *((void *)&v113 + 1) = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason();
      }
      OUTLINED_FUNCTION_30_25();
      v64();
      goto LABEL_45;
    case 1:
      uint64_t v36 = OUTLINED_FUNCTION_13_41();
      v37(v36);
      uint64_t v38 = OUTLINED_FUNCTION_23_35();
      uint64_t v40 = v39(v38);
      if (v40)
      {
        uint64_t v42 = v40;
        uint64_t v43 = v41;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
        OUTLINED_FUNCTION_31_26();
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v44 + 152))(v112, v42, v43);
        OUTLINED_FUNCTION_31_26();
        OUTLINED_FUNCTION_30_25();
        v75();
        static ExecuteResponse.ongoing(requireInput:)();
        swift_unknownObjectRelease();
        goto LABEL_46;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      swift_retain_n();
      v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.debug.getter();
      BOOL v67 = os_log_type_enabled(v65, v66);
      v68 = (void *)v0[34];
      uint64_t v109 = v0;
      if (v67)
      {
        uint64_t v69 = (_DWORD *)OUTLINED_FUNCTION_47();
        v112[0] = OUTLINED_FUNCTION_14_0();
        *uint64_t v69 = 136315138;
        v0[2] = *v68;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionableCallControlFlow.Type);
        uint64_t v70 = String.init<A>(describing:)();
        v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, v112);
        uint64_t v72 = (uint64_t)v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_65_3();
        OUTLINED_FUNCTION_25_14(&dword_0, v73, v74, "#ActionableCallControl executing %s found no active call.");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        uint64_t v72 = (uint64_t)v15;
        OUTLINED_FUNCTION_65_3();
      }

      lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
      uint64_t v76 = swift_allocError();
      uint64_t v78 = v77;
      *(void *)(v77 + 24) = &type metadata for ActionableCallControlFlow.UnsupportedActionReason;
      *(void *)(v77 + 32) = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason();
      *(unsigned char *)(v78 + 40) = 1;
      swift_willThrow();
      *unint64_t v16 = v76;
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      if (!swift_dynamicCast()) {
        goto LABEL_36;
      }
      if (*((unsigned char *)v109 + 56))
      {
        if (*((unsigned char *)v109 + 56) == 1)
        {
          swift_errorRelease();
          outlined init with take of ActionableCallControlFlow.State(v72, v110);
          outlined init with copy of SiriPhoneContact();
          swift_retain_n();
          uint64_t v79 = Logger.logObject.getter();
          os_log_type_t v80 = static os_log_type_t.error.getter();
          BOOL v81 = os_log_type_enabled(v79, v80);
          uint64_t v82 = v109[34];
          if (v81)
          {
            uint64_t v83 = OUTLINED_FUNCTION_14_0();
            v112[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v83 = 136315650;
            v109[32] = *(void *)v82;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionableCallControlFlow.Type);
            uint64_t v84 = String.init<A>(describing:)();
            v109[32] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85, v112);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v83 + 12) = 2080;
            unint64_t v86 = PhoneCallControlAction.description.getter(*(unsigned char *)(v82 + 56));
            v109[32] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v86, v87, v112);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v83 + 22) = 2080;
            __swift_project_boxed_opaque_existential_1(v111, v109[11]);
            uint64_t v88 = dispatch thunk of CustomStringConvertible.description.getter();
            v109[32] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v89, v112);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
            _os_log_impl(&dword_0, v79, v80, "#ActionableCallControlFlow of type %s -- unsupported action %s on current call. Reason: %s.", (uint8_t *)v83, 0x20u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }
          else
          {
            swift_release_n();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
          }

          outlined init with copy of SiriPhoneContact();
          OUTLINED_FUNCTION_31_26();
          OUTLINED_FUNCTION_30_25();
          v105();
          __swift_destroy_boxed_opaque_existential_1(v110);
        }
        else
        {
          outlined destroy of ActionableCallControlFlow.ActionableCallControlFlowError(v72);
LABEL_36:
          swift_errorRelease();
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v99 = Logger.logObject.getter();
          os_log_type_t v100 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v99, v100))
          {
            v101 = (uint8_t *)OUTLINED_FUNCTION_47();
            v112[0] = OUTLINED_FUNCTION_14_0();
            *(_DWORD *)v101 = 136315138;
            swift_getErrorValue();
            uint64_t v102 = Error.localizedDescription.getter();
            v109[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v102, v103, v112);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl(&dword_0, v99, v100, "#ActionableCallControlFlow encountered error: %s", v101, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
          }

          OUTLINED_FUNCTION_34_19();
          long long v113 = xmmword_472040;
          OUTLINED_FUNCTION_31_26();
          OUTLINED_FUNCTION_30_25();
          v104();
        }
      }
      else
      {
        swift_errorRelease();
        char v90 = *((unsigned char *)v109 + 16);
        swift_retain_n();
        uint64_t v91 = Logger.logObject.getter();
        os_log_type_t v92 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v93 = swift_slowAlloc();
          v112[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v93 = 136315394;
          OUTLINED_FUNCTION_21_35();
          v109[8] = v94;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionableCallControlFlow.Type);
          uint64_t v95 = String.init<A>(describing:)();
          v109[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v95, v96, v112);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_43_0();
          *(_WORD *)(v93 + 12) = 2080;
          unint64_t v97 = PhoneCallControlAction.description.getter(v90);
          v109[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v97, v98, v112);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v91, v92, "#ActionableCallControlFlow of type %s called with unsupported action %s", (uint8_t *)v93, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
          OUTLINED_FUNCTION_43_0();
        }

        OUTLINED_FUNCTION_34_19();
        long long v113 = xmmword_472040;
        OUTLINED_FUNCTION_31_26();
        (*(void (**)(uint64_t *))(v106 + 120))(v112);
      }
      swift_errorRelease();
LABEL_45:
      static ExecuteResponse.ongoing(requireInput:)();
LABEL_46:
      OUTLINED_FUNCTION_47_0();
      return v107();
    case 2:
      id v45 = (void *)v0[34];
      OUTLINED_FUNCTION_34_19();
      long long v113 = xmmword_472040;
      OUTLINED_FUNCTION_30_25();
      v46();
      uint64_t v47 = v45[5];
      uint64_t v48 = v45[6];
      __swift_project_boxed_opaque_existential_1(v45 + 2, v47);
      (*(void (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
      uint64_t v49 = v0[5];
      uint64_t v50 = v0[7];
      __swift_project_boxed_opaque_existential_1(v15, v49);
      v0[11] = v49;
      v0[12] = v50;
      __swift_allocate_boxed_opaque_existential_1(v111);
      OUTLINED_FUNCTION_46_14();
      v51();
      type metadata accessor for SimpleOutputFlowAsync();
      swift_allocObject();
      swift_retain();
      uint64_t v52 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      v0[2] = v52;
      static ExecuteResponse.ongoing<A>(next:)();
      goto LABEL_20;
    case 3:
      swift_retain_n();
      id v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (_DWORD *)OUTLINED_FUNCTION_47();
        v112[0] = OUTLINED_FUNCTION_14_0();
        *uint64_t v55 = 136315138;
        OUTLINED_FUNCTION_21_35();
        v0[2] = v56;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionableCallControlFlow.Type);
        uint64_t v57 = (uint64_t)v15;
        uint64_t v58 = String.init<A>(describing:)();
        v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_43_0();
        OUTLINED_FUNCTION_25_14(&dword_0, v60, v61, "#ActionableCallControlFlow pushing DismissSiriFlow on behalf of %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        OUTLINED_FUNCTION_43_0();

        uint64_t v57 = (uint64_t)v15;
      }
      outlined init with copy of SiriPhoneContact();
      type metadata accessor for DismissSiriFlow();
      uint64_t v62 = swift_allocObject();
      outlined init with take of ActionableCallControlFlow.State(v57, v62 + 16);
      v0[2] = v62;
      lazy protocol witness table accessor for type ActionableCallControlFlow and conformance ActionableCallControlFlow((unint64_t *)&lazy protocol witness table cache variable for type DismissSiriFlow and conformance DismissSiriFlow, 255, (void (*)(uint64_t))type metadata accessor for DismissSiriFlow);
      static ExecuteResponse.complete<A>(next:)();
      goto LABEL_20;
    default:
      id v27 = (void *)v0[34];
      outlined init with take of ActionableCallControlFlow.State((uint64_t)v15, (uint64_t)(v0 + 23));
      OUTLINED_FUNCTION_34_19();
      long long v113 = xmmword_472040;
      OUTLINED_FUNCTION_30_25();
      v28();
      uint64_t v29 = v27[5];
      uint64_t v30 = v27[6];
      __swift_project_boxed_opaque_existential_1(v27 + 2, v29);
      (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
      uint64_t v31 = v0[5];
      uint64_t v32 = v0[7];
      __swift_project_boxed_opaque_existential_1(v15, v31);
      v0[11] = v31;
      v0[12] = v32;
      __swift_allocate_boxed_opaque_existential_1(v111);
      OUTLINED_FUNCTION_46_14();
      v33();
      outlined init with copy of SiriPhoneContact();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v27;
      outlined init with take of ActionableCallControlFlow.State(v110, v34 + 24);
      type metadata accessor for SimpleOutputFlowAsync();
      swift_allocObject();
      swift_retain();
      uint64_t v35 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      v0[2] = v35;
      static ExecuteResponse.ongoing<A>(next:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 23));
LABEL_20:
      swift_release();
      goto LABEL_46;
  }
}

uint64_t closure #1 in ActionableCallControlFlow.execute()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:)();
}

uint64_t ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[31] = v2;
  v1[32] = v0;
  v1[30] = v3;
  uint64_t v4 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v4);
  v1[33] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v1[34] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[35] = v6;
  v1[36] = OUTLINED_FUNCTION_35();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[17] = v1;
  v2[18] = v4;
  v2[19] = v0;
  OUTLINED_FUNCTION_24_6();
  *uint64_t v5 = *v1;
  *(void *)(v6 + 336) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_6();
  outlined destroy of SpeakableString?(*(void *)(v7 + 320));
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[20] = v1;
  v2[21] = v4;
  v2[22] = v0;
  OUTLINED_FUNCTION_24_6();
  *uint64_t v5 = *v1;
  *(void *)(v6 + 352) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_6();
  outlined destroy of SpeakableString?(*(void *)(v7 + 312));
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[23] = v1;
  v2[24] = v4;
  v2[25] = v0;
  OUTLINED_FUNCTION_24_6();
  *uint64_t v5 = *v1;
  *(void *)(v6 + 368) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_6();
  outlined destroy of SpeakableString?(*(void *)(v7 + 304));
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[26] = v1;
  v2[27] = v4;
  v2[28] = v0;
  OUTLINED_FUNCTION_24_6();
  *uint64_t v5 = *v1;
  *(void *)(v6 + 384) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_6();
  outlined destroy of SpeakableString?(*(void *)(v7 + 296));
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:)()
{
  outlined init with copy of SiriPhoneContact();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UnsupportedAction);
  if (swift_dynamicCast())
  {
    uint64_t v1 = OUTLINED_FUNCTION_1_83();
    v2(v1);
    uint64_t v3 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_8_77(v3);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[41] = v4;
    *uint64_t v4 = v0;
    v4[1] = ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:);
    OUTLINED_FUNCTION_17_32(v0[40]);
    OUTLINED_FUNCTION_27_3();
    __asm { BRAA            X2, X16 }
  }
  if (OUTLINED_FUNCTION_40_20())
  {
    uint64_t v7 = OUTLINED_FUNCTION_1_83();
    v8(v7);
    uint64_t v9 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_8_77(v9);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[43] = v10;
    *uint64_t v10 = v0;
    v10[1] = ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:);
    OUTLINED_FUNCTION_17_32(v0[39]);
    OUTLINED_FUNCTION_27_3();
    __asm { BRAA            X2, X16 }
  }
  if (OUTLINED_FUNCTION_40_20())
  {
    uint64_t v13 = OUTLINED_FUNCTION_1_83();
    v14(v13);
    uint64_t v15 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_8_77(v15);
    unint64_t v16 = (void *)swift_task_alloc();
    v0[45] = v16;
    *unint64_t v16 = v0;
    v16[1] = ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:);
    OUTLINED_FUNCTION_17_32(v0[38]);
    OUTLINED_FUNCTION_27_3();
    __asm { BRAA            X2, X16 }
  }
  if (OUTLINED_FUNCTION_40_20())
  {
    uint64_t v19 = OUTLINED_FUNCTION_1_83();
    v20(v19);
    uint64_t v21 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_8_77(v21);
    uint64_t v22 = (void *)swift_task_alloc();
    v0[47] = v22;
    *uint64_t v22 = v0;
    v22[1] = ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:);
    OUTLINED_FUNCTION_17_32(v0[37]);
    OUTLINED_FUNCTION_27_3();
    __asm { BRAA            X2, X16 }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  outlined init with copy of SiriPhoneContact();
  id v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v34 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v28 = 136315138;
    __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[29] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
    _os_log_impl(&dword_0, v26, v27, "#ActionableCallControlFlow makeUnsupportedActionOnCallOutput unrecognized unsupported action reason %s", v28, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  }

  lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
  swift_allocError();
  *(_OWORD *)uint64_t v31 = 0u;
  *(_OWORD *)(v31 + 16) = 0u;
  *(void *)(v31 + 32) = 0;
  *(unsigned char *)(v31 + 40) = 3;
  swift_willThrow();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_27_3();
  __asm { BRAA            X1, X16 }
}

#error "2E497C: call analysis failed (funcsize=60)"

#error "2E4B70: call analysis failed (funcsize=60)"

#error "2E4D64: call analysis failed (funcsize=60)"

#error "2E4F58: call analysis failed (funcsize=60)"

uint64_t ActionableCallControlFlow.makeUnsupportedActionOnCallOutput(unsupportedActionReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_6_69(v10 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_31_1();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_6_69(v10 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_31_1();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_6_69(v10 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_31_1();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_6_69(v10 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_31_1();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t closure #2 in ActionableCallControlFlow.execute()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return ActionableCallControlFlow.makeCallControlOutput()();
}

uint64_t ActionableCallControlFlow.makeCallControlOutput()()
{
  OUTLINED_FUNCTION_1_0();
  v1[7] = v2;
  v1[8] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[9] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v4);
  v1[10] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v1[11] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[12] = v6;
  v1[13] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  uint64_t v1 = v0[9];
  uint64_t v2 = v0[8];
  static DialogPhase.summary.getter();
  OUTLINED_FUNCTION_19_34();
  uint64_t v3 = *(void **)(v2 + 64);
  PhoneCallControlAction.rawValue.getter(*(unsigned char *)(v2 + 56));
  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v4);
  uint64_t v8 = (uint64_t (*)(uint64_t))(*(void *)(*v3 + class metadata base offset for PhoneCallControlCATsSimple)
                                       + **(int **)(*v3 + class metadata base offset for PhoneCallControlCATsSimple));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  *uint64_t v5 = v0;
  v5[1] = ActionableCallControlFlow.makeCallControlOutput();
  uint64_t v6 = v0[9];
  return v8(v6);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t ActionableCallControlFlow.makeCallControlOutput()(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  *(void *)(v5 + 120) = v1;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v4 + 72);
  if (!v1) {
    *(void *)(v5 + 128) = a1;
  }
  outlined destroy of SpeakableString?(v7);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t ActionableCallControlFlow.makeCallControlOutput()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = (void *)v10[16];
  uint64_t v12 = OUTLINED_FUNCTION_2_57((void *)(v10[8] + 16));
  v13(v12);
  __swift_project_boxed_opaque_existential_1(v10 + 2, v10[5]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_16_5(v14, (__n128)xmmword_46A030);
  v10[17] = a10;
  id v15 = v11;
  uint64_t v16 = (void *)swift_task_alloc();
  v10[18] = v16;
  *uint64_t v16 = v10;
  v16[1] = ActionableCallControlFlow.makeCallControlOutput();
  OUTLINED_FUNCTION_30_2();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t ActionableCallControlFlow.executeAction(currentCall:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000055, 0x8000000000499810, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v1, v2, "#ActionableCallControlFlow %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
  swift_allocError();
  *(void *)uint64_t v4 = 0xD00000000000001BLL;
  *(void *)(v4 + 8) = 0x8000000000499870;
  *(unsigned char *)(v4 + 40) = 2;
  return swift_willThrow();
}

uint64_t ActionableCallControlFlow.__deallocating_deinit()
{
  ActionableCallControlFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.execute(completion:) in conformance ActionableCallControlFlow()
{
  return ActionableCallControlFlow.execute(completion:)();
}

uint64_t protocol witness for Flow.execute() in conformance ActionableCallControlFlow(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return ActionableCallControlFlow.execute()(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance ActionableCallControlFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ActionableCallControlFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason()
{
  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason()
{
  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason);
  }
  return result;
}

uint64_t type metadata accessor for ActionableCallControlFlow()
{
  return self;
}

uint64_t lazy protocol witness table accessor for type ActionableCallControlFlow and conformance ActionableCallControlFlow(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #2 in ActionableCallControlFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #2 in ActionableCallControlFlow.execute()();
}

uint64_t sub_2E5FD0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #1 in ActionableCallControlFlow.execute()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in ActionableCallControlFlow.execute()();
}

uint64_t outlined destroy of ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t a1)
{
  return a1;
}

uint64_t instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedActionReason(void *a1, uint64_t a2, uint64_t a3)
{
  return instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedActionReason(a1, a2, a3, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedActionReason and conformance ActionableCallControlFlow.UnsupportedActionReason);
}

uint64_t instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason(void *a1, uint64_t a2, uint64_t a3)
{
  return instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedActionReason(a1, a2, a3, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason);
}

uint64_t instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedHoldActionReason(void *a1, uint64_t a2, uint64_t a3)
{
  return instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedActionReason(a1, a2, a3, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedHoldActionReason and conformance ActionableCallControlFlow.UnsupportedHoldActionReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedHoldActionReason and conformance ActionableCallControlFlow.UnsupportedHoldActionReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedHoldActionReason and conformance ActionableCallControlFlow.UnsupportedHoldActionReason);
}

uint64_t instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason(void *a1, uint64_t a2, uint64_t a3)
{
  return instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedActionReason(a1, a2, a3, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
}

uint64_t instantiation function for generic protocol witness table for ActionableCallControlFlow.UnsupportedActionReason(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

uint64_t sub_2E65E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 112))();
}

uint64_t destroy for ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)result + 3;
  }
  if (v1 == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else if (v1 == 1)
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t initializeWithCopy for ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 40) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v3 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 40) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v5 == 1)
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v7 = *a2;
      long long v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      if (v5 != 1)
      {
        if (v5)
        {
          long long v7 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v7;
          *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        }
        else
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(unsigned char *)(a1 + 40) = 0;
        }
        return a1;
      }
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      LOBYTE(v5) = 1;
    }
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActionableCallControlFlow.ActionableCallControlFlowError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

void type metadata accessor for ActionableCallControlFlow.ActionableCallControlFlowError()
{
}

void type metadata accessor for ActionableCallControlFlow.UnsupportedActionReason()
{
}

unsigned char *storeEnumTagSinglePayload for ActionableCallControlFlow.UnsupportedActionReason(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2E6A7CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason()
{
}

unsigned char *storeEnumTagSinglePayload for ActionableCallControlFlow.UnsupportedHoldActionReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2E6B7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ActionableCallControlFlow.UnsupportedHoldActionReason()
{
}

unsigned char *storeEnumTagSinglePayload for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2E6C7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

void type metadata accessor for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason()
{
}

uint64_t destroy for ActionableCallControlFlow.State(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t initializeWithCopy for ActionableCallControlFlow.State(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for ActionableCallControlFlow.State(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for ActionableCallControlFlow.State(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionableCallControlFlow.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActionableCallControlFlow.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 3;
    }
  }
  return result;
}

uint64_t getEnumTag for ActionableCallControlFlow.State(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double destructiveInjectEnumTag for ActionableCallControlFlow.State(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for ActionableCallControlFlow.State()
{
}

uint64_t OUTLINED_FUNCTION_1_83()
{
  unint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_4_74()
{
  return *(void *)(v0 + 240);
}

uint64_t OUTLINED_FUNCTION_6_69(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_8_77(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
}

uint64_t OUTLINED_FUNCTION_10_53(uint64_t a1)
{
  *(void *)(v1 + 392) = v2;
  __swift_destroy_boxed_opaque_existential_1(a1);
  return static DialogPhase.summary.getter();
}

uint64_t OUTLINED_FUNCTION_13_41()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v2);
  return v2;
}

void *OUTLINED_FUNCTION_15_44()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 120));
}

uint64_t OUTLINED_FUNCTION_17_32@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_19_34()
{
  return OutputGenerationManifest.init(dialogPhase:_:)();
}

uint64_t OUTLINED_FUNCTION_23_35()
{
  uint64_t v2 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return v2;
}

void OUTLINED_FUNCTION_29_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 400) = a10;
}

uint64_t OUTLINED_FUNCTION_43_21()
{
  return v0 + 16;
}

void *HangUpDirectAction.identifier.unsafeMutableAddressor()
{
  return &static HangUpDirectAction.identifier;
}

uint64_t static HangUpDirectInvocationFlowFactory.makeHangUpFlow(sharedGlobals:)(void *a1)
{
  void (*v5)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  long long v18[2];
  void v19[4];
  long long v20;
  void v21[4];
  uint64_t v22;
  unsigned char v23[16];
  uint64_t v24;
  unsigned char __dst[184];

  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  memcpy(__dst, &static PhoneCallFeatureFlags.instance, 0xB0uLL);
  type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject();
  v21[1] = &type metadata for PhoneCallFeatureFlags;
  v21[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v20 = swift_allocObject();
  memcpy((void *)(v20 + 16), __dst, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v20, inited + 16);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  unsigned int v5 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8);
  outlined retain of PhoneCallFeatureFlags((uint64_t)__dst);
  v5(v19, v3, v4);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v19, (uint64_t)&v20);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t v24 = *((void *)&v20 + 1);
  long long v6 = v20;
  outlined release of Set<String>((uint64_t)&v24);
  outlined init with take of String?((uint64_t)v21, (uint64_t)v23);
  outlined release of String?((uint64_t)v23);
  uint64_t v22 = v21[3];
  outlined release of Set<String>((uint64_t)&v22);
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v19);
  type metadata accessor for HangUpCallRCHFlowDelegate();
  long long v7 = swift_allocObject();
  outlined init with copy of SignalProviding((uint64_t)v19, v7 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals);
  BaseRCHFlowDelegate.init()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  long long v8 = [objc_allocWithZone((Class)INHangUpCallIntent) init];
  uint64_t v9 = swift_retain();
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v9, 0);
  swift_release();
  static PhoneCallFlowFactory.makeHangUpCallRCHFlow(delegate:intent:app:sharedGlobals:)();
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 40))(v19, v12, v13);
  __swift_project_boxed_opaque_existential_1(v19, v19[3]);
  type metadata accessor for SiriKitEvent();
  if (one-time initialization token for emptyHangUpCallIntent != -1) {
    swift_once();
  }
  uint64_t v14 = [(id)static PhoneCallIntentClassNames.emptyHangUpCallIntent typeName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v18);
  id v15 = swift_allocObject();
  *(void *)(v15 + 16) = v6;
  outlined init with take of AppSelectionSignalComponent(v18, v15 + 24);
  swift_retain();
  SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
  dispatch thunk of SiriKitEventSending.send(_:)();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  v19[0] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
  lazy protocol witness table accessor for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>();
  uint64_t v16 = Flow.eraseToAnyFlow()();
  swift_release();

  swift_release();
  swift_release();
  return v16;
}

unint64_t static HangUpDirectAction.identifier.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t closure #1 in static HangUpDirectInvocationFlowFactory.makeHangUpFlow(sharedGlobals:)(uint64_t a1, uint64_t a2, void *a3)
{
  swift_retain();
  dispatch thunk of SiriKitEvent.SiriKitEventBuilder.app.setter();
  uint64_t v4 = a3[3];
  uint64_t v5 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 120))(v7, v4, v5);
  static PhoneDomainContextMetricsUtils.populatePhoneDomainContextForHangUpDirectInvocation(callStateProvider:)(v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter();
}

uint64_t sub_2E7630()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_2E76E8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #1 in static HangUpDirectInvocationFlowFactory.makeHangUpFlow(sharedGlobals:)(uint64_t a1)
{
  return closure #1 in static HangUpDirectInvocationFlowFactory.makeHangUpFlow(sharedGlobals:)(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

unint64_t lazy protocol witness table accessor for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>;
  if (!lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>);
  }
  return result;
}

ValueMetadata *type metadata accessor for HangUpDirectAction()
{
  return &type metadata for HangUpDirectAction;
}

ValueMetadata *type metadata accessor for HangUpDirectInvocationFlowFactory()
{
  return &type metadata for HangUpDirectInvocationFlowFactory;
}

uint64_t DestinationTypeSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                     + **(void **)(v6 + 40)
                                                     + 1376))(a5, a6);
}

uint64_t DestinationTypeSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for INCallDestinationType(0);
  if (swift_dynamicCast()) {
    uint64_t v17 = v25[1];
  }
  else {
    uint64_t v17 = (*(uint64_t (**)(void))(*(void *)(a9 + 32) + 16))(*(void *)(a9 + 16));
  }
  uint64_t v18 = *(void **)(v9 + 40);
  if (v17)
  {
    uint64_t BackingType = INCallDestinationTypeGetBackingType();
    switch((int)BackingType)
    {
      case 1:
        uint64_t v20 = @"NORMAL_DESTINATION";
        goto LABEL_13;
      case 2:
        uint64_t v20 = @"EMERGENCY_DESTINATION";
        goto LABEL_13;
      case 3:
        uint64_t v20 = @"VOICEMAIL_DESTINATION";
        goto LABEL_13;
      case 4:
        uint64_t v20 = @"REDIAL_DESTINATION";
        goto LABEL_13;
      case 5:
        uint64_t v20 = @"CALL_BACK_DESTINATION";
LABEL_13:
        uint64_t v21 = v20;
        break;
      default:
        uint64_t v20 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        break;
    }
    uint64_t v22 = v20;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  SpeakableString.init(print:speak:)();
  uint64_t v23 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v18 + 96))(v15, a7, a8);
  return outlined destroy of SpeakableString?((uint64_t)v15);
}

uint64_t DestinationTypeSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_69(a1, a2, a3, a4, a5, a6, a7, a8);
  return (*(uint64_t (**)(uint64_t))(class metadata base offset for StartCallCATs + v9 + 448))(v8);
}

uint64_t DestinationTypeSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_69(a1, a2, a3, a4, a5, a6, a7, a8);
  return (*(uint64_t (**)(uint64_t))(class metadata base offset for StartCallCATs + v9 + 1888))(v8);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:) in conformance DestinationTypeSlotTemplating<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return DestinationTypeSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:) in conformance DestinationTypeSlotTemplating<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return DestinationTypeSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(a1, a2, a3, a4, a5, 0, a7, a8);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:) in conformance DestinationTypeSlotTemplating<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return DestinationTypeSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t type metadata accessor for DestinationTypeSlotTemplating()
{
  return __swift_instantiateGenericMetadata();
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATPatternsIdentifiers_optional __swiftcall AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_AnnounceGroupFaceTimeInviteCATPatternsIdentifiers_readGroupFaceTimeInviteAnnouncement;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_AnnounceGroupFaceTimeInviteCATPatternsIdentifiers_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATPatternsIdentifiers_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceGroupFaceTimeInviteCATPatternsIdentifiers@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATPatternsIdentifiers_optional *a2@<X8>)
{
  result.value = AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.confirmAction.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(v1, a1, &demangling cache variable for type metadata for SpeakableString?);
}

uint64_t AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.rejectAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(0);
  return outlined init with copy of SpeakableString?(v1 + *(int *)(v3 + 20), a1, &demangling cache variable for type metadata for SpeakableString?);
}

uint64_t type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters);
}

uint64_t AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.rejectAction.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(0) + 20);

  return outlined assign with take of SpeakableString?(a1, v3);
}

Swift::Void (__swiftcall *AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.rejectAction.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.asKeyValuePairs()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_467720;
  uint64_t v10 = (uint64_t *)(v9 + 48);
  strcpy((char *)(v9 + 32), "confirmAction");
  *(_WORD *)(v9 + 46) = -4864;
  outlined init with copy of SpeakableString?(v1, (uint64_t)v8, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v8, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }
  else
  {
    *(void *)(v9 + 72) = v11;
    __swift_allocate_boxed_opaque_existential_1(v10);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v12 + 32))();
  }
  strcpy((char *)(v9 + 80), "rejectAction");
  *(unsigned char *)(v9 + 93) = 0;
  *(_WORD *)(v9 + 94) = -5120;
  uint64_t v13 = type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(0);
  outlined init with copy of SpeakableString?(v1 + *(int *)(v13 + 20), (uint64_t)v6, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v11) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v6, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v9 + 96) = 0u;
    *(_OWORD *)(v9 + 112) = 0u;
  }
  else
  {
    *(void *)(v9 + 120) = v11;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 96));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v14 + 32))();
  }
  return v9;
}

uint64_t AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(0) + 20);

  return __swift_storeEnumTagSinglePayload(v3, 1, 1, v2);
}

uint64_t AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.init(confirmAction:rejectAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with take of SpeakableString?(a1, a3);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(0) + 20);

  return outlined init with take of SpeakableString?(a2, v5);
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.burstIndex.getter()
{
  return *(void *)v0;
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.burstIndex.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.messagesGroupName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t GroupFaceTimeInviteAnnouncementParameters = type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0);
  return outlined init with copy of SpeakableString?(v1 + *(int *)(GroupFaceTimeInviteAnnouncementParameters + 24), a1, &demangling cache variable for type metadata for SpeakableString?);
}

uint64_t type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters);
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.messagesGroupName.setter(uint64_t a1)
{
  uint64_t v3 = v1
     + *(int *)(type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0)
              + 24);

  return outlined assign with take of SpeakableString?(a1, v3);
}

Swift::Void (__swiftcall *AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.messagesGroupName.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.numberOfParticipants.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0)
                            + 28));
}

void AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.numberOfParticipants.setter()
{
  uint64_t GroupFaceTimeInviteAnnouncementParameters = type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0);
  OUTLINED_FUNCTION_7_66(*(int *)(GroupFaceTimeInviteAnnouncementParameters + 28));
}

Swift::Void (__swiftcall *AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.numberOfParticipants.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.numberOfParticipantsNotAnnounced.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0)
                            + 32));
}

void AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.numberOfParticipantsNotAnnounced.setter()
{
  uint64_t GroupFaceTimeInviteAnnouncementParameters = type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0);
  OUTLINED_FUNCTION_7_66(*(int *)(GroupFaceTimeInviteAnnouncementParameters + 32));
}

Swift::Void (__swiftcall *AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.numberOfParticipantsNotAnnounced.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.participants.getter()
{
  type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0);

  return swift_bridgeObjectRetain();
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.asKeyValuePairs()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6;
  *(_OWORD *)(v6 + 16) = xmmword_472F90;
  *(void *)(v6 + 32) = 0x646E497473727562;
  *(void *)(v6 + 40) = 0xEA00000000007865;
  if (v0[1])
  {
    uint64_t v8 = 0;
    *(void *)(v6 + 56) = 0;
    *(void *)(v6 + 64) = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = *v0;
    uint64_t v8 = &type metadata for Double;
  }
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 72) = v8;
  *(void *)(v6 + 80) = 0x72656C6C6163;
  *(void *)(v6 + 88) = 0xE600000000000000;
  uint64_t v10 = v0[2];
  if (v10)
  {
    uint64_t v11 = type metadata accessor for PhonePerson(0);
    uint64_t v12 = v10;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    *(void *)(v7 + 104) = 0;
    *(void *)(v7 + 112) = 0;
  }
  *(void *)(v7 + 96) = v12;
  *(void *)(v7 + 120) = v11;
  *(void *)(v7 + 128) = 0xD000000000000011;
  *(void *)(v7 + 136) = 0x8000000000497C30;
  uint64_t GroupFaceTimeInviteAnnouncementParameters = (int *)type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0);
  outlined init with copy of SpeakableString?((uint64_t)v0 + GroupFaceTimeInviteAnnouncementParameters[6], v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v5, 1, v14) == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v7 + 144) = 0u;
    *(_OWORD *)(v7 + 160) = 0u;
  }
  else
  {
    *(void *)(v7 + 168) = v14;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 144));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v15 + 32))();
    swift_retain();
  }
  *(void *)(v7 + 176) = 0xD000000000000014;
  *(void *)(v7 + 184) = 0x8000000000497C50;
  uint64_t v16 = (uint64_t *)((char *)v0 + GroupFaceTimeInviteAnnouncementParameters[7]);
  if (v16[1])
  {
    uint64_t v17 = 0;
    *(void *)(v7 + 200) = 0;
    *(void *)(v7 + 208) = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = *v16;
    uint64_t v17 = &type metadata for Double;
  }
  *(void *)(v7 + 192) = v18;
  *(void *)(v7 + 216) = v17;
  *(void *)(v7 + 224) = 0xD000000000000020;
  *(void *)(v7 + 232) = 0x8000000000497C70;
  uint64_t v19 = (uint64_t *)((char *)v0 + GroupFaceTimeInviteAnnouncementParameters[8]);
  if (v19[1])
  {
    uint64_t v20 = 0;
    *(void *)(v7 + 248) = 0;
    *(void *)(v7 + 256) = 0;
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = *v19;
    uint64_t v20 = &type metadata for Double;
  }
  *(void *)(v7 + 240) = v21;
  *(void *)(v7 + 264) = v20;
  strcpy((char *)(v7 + 272), "participants");
  *(unsigned char *)(v7 + 285) = 0;
  *(_WORD *)(v7 + 286) = -5120;
  uint64_t v22 = *(uint64_t *)((char *)v0 + GroupFaceTimeInviteAnnouncementParameters[9]);
  *(void *)(v7 + 312) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  *(void *)(v7 + 288) = v22;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.init(burstIndex:caller:messagesGroupName:numberOfParticipants:numberOfParticipantsNotAnnounced:participants:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  uint64_t GroupFaceTimeInviteAnnouncementParameters = (int *)type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0);
  uint64_t result = outlined init with take of SpeakableString?(a4, a9 + GroupFaceTimeInviteAnnouncementParameters[6]);
  uint64_t v18 = a9 + GroupFaceTimeInviteAnnouncementParameters[7];
  *(void *)uint64_t v18 = a5;
  *(unsigned char *)(v18 + 8) = a6 & 1;
  uint64_t v19 = a9 + GroupFaceTimeInviteAnnouncementParameters[8];
  *(void *)uint64_t v19 = a7;
  *(unsigned char *)(v19 + 8) = a8 & 1;
  *(void *)(a9 + GroupFaceTimeInviteAnnouncementParameters[9]) = a10;
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATPatternsExecutor.offerFollowUpIntent(_:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(0);
  v1[5] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[6] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v8)(unint64_t, unint64_t, uint64_t);
  uint64_t v9;

  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v4);
  __swift_storeEnumTagSinglePayload(v1 + *(int *)(v2 + 20), 1, 1, v4);
  v3(v1);
  uint64_t v5 = AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.asKeyValuePairs()();
  v0[7] = v5;
  uint64_t v6 = (void *)OUTLINED_FUNCTION_9_0();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = AnnounceGroupFaceTimeInviteCATPatternsExecutor.offerFollowUpIntent(_:);
  return v8(0xD00000000000002FLL, 0x80000000004900C0, v5);
}

{
  void *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  outlined destroy of AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(v0[6], (void (*)(void))type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  outlined destroy of AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AnnounceGroupFaceTimeInviteCATPatternsExecutor.offerFollowUpIntent(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1) {
    *(void *)(v5 + 80) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t AnnounceGroupFaceTimeInviteCATPatternsExecutor.readGroupFaceTimeInviteAnnouncement(participants:_:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t GroupFaceTimeInviteAnnouncementParameters = type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(0);
  v1[6] = GroupFaceTimeInviteAnnouncementParameters;
  OUTLINED_FUNCTION_11_0(GroupFaceTimeInviteAnnouncementParameters);
  v1[7] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  int *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t GroupFaceTimeInviteAnnouncement;
  void *v10;
  uint64_t (*v12)(unint64_t, unint64_t, uint64_t);
  uint64_t v13;

  uint64_t v2 = (int *)v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = (void (*)(uint64_t))v0[3];
  uint64_t v4 = v0[2];
  uint64_t v5 = v1 + v2[6];
  uint64_t v6 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
  *(void *)(v1 + 16) = 0;
  uint64_t v7 = v1 + v2[7];
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = v1 + v2[8];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  *(void *)(v1 + v2[9]) = v4;
  swift_bridgeObjectRetain();
  v3(v1);
  GroupFaceTimeInviteAnnouncement = AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters.asKeyValuePairs()();
  v0[8] = GroupFaceTimeInviteAnnouncement;
  uint64_t v10 = (void *)OUTLINED_FUNCTION_9_0();
  v0[9] = v10;
  *uint64_t v10 = v0;
  v10[1] = AnnounceGroupFaceTimeInviteCATPatternsExecutor.readGroupFaceTimeInviteAnnouncement(participants:_:);
  return v12(0xD00000000000003FLL, 0x80000000004900F0, GroupFaceTimeInviteAnnouncement);
}

{
  void *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  outlined destroy of AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(v0[7], (void (*)(void))type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[11];
  return v1(v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  outlined destroy of AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(*(void *)(v0 + 56), (void (*)(void))type metadata accessor for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AnnounceGroupFaceTimeInviteCATPatternsExecutor.readGroupFaceTimeInviteAnnouncement(participants:_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1) {
    *(void *)(v5 + 88) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t outlined destroy of AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t AnnounceGroupFaceTimeInviteCATPatternsExecutor.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return AnnounceGroupFaceTimeInviteCATPatternsExecutor.init(templateDir:options:globals:)(a1, a2);
}

uint64_t AnnounceGroupFaceTimeInviteCATPatternsExecutor.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CATOption();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  outlined init with copy of SpeakableString?(a1, v12 - v11, (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v13 = CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v13;
}

unint64_t lazy protocol witness table accessor for type AnnounceGroupFaceTimeInviteCATPatternsIdentifiers and conformance AnnounceGroupFaceTimeInviteCATPatternsIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATPatternsIdentifiers and conformance AnnounceGroupFaceTimeInviteCATPatternsIdentifiers;
  if (!lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATPatternsIdentifiers and conformance AnnounceGroupFaceTimeInviteCATPatternsIdentifiers)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATPatternsIdentifiers and conformance AnnounceGroupFaceTimeInviteCATPatternsIdentifiers);
  }
  return result;
}

uint64_t protocol witness for AnnounceGroupFaceTimeInviteCATPatternsExecuting.offerFollowUpIntent(_:) in conformance AnnounceGroupFaceTimeInviteCATPatternsExecutor(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**v2
                                                            + class metadata base offset for AnnounceGroupFaceTimeInviteCATPatternsExecutor)
                                                + **(int **)(**v2
                                                           + class metadata base offset for AnnounceGroupFaceTimeInviteCATPatternsExecutor));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for AnnounceGroupFaceTimeInviteCATPatternsExecuting.readGroupFaceTimeInviteAnnouncement(participants:_:) in conformance AnnounceGroupFaceTimeInviteCATPatternsExecutor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(class metadata base offset for AnnounceGroupFaceTimeInviteCATPatternsExecutor + **v3 + 8);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v11(a1, a2, a3);
}

unsigned char *storeEnumTagSinglePayload for AnnounceGroupFaceTimeInviteCATPatternsIdentifiers(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2E93A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnounceGroupFaceTimeInviteCATPatternsIdentifiers()
{
  return &type metadata for AnnounceGroupFaceTimeInviteCATPatternsIdentifiers;
}

uint64_t *initializeBufferWithCopyOfBuffer for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpeakableString();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v7(v5, v4);
  }
  return result;
}

char *initializeWithCopy for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  return a1;
}

char *initializeWithTake for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2E9E24);
}

uint64_t sub_2E9E24()
{
  OUTLINED_FUNCTION_10_54();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);

  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2E9E80);
}

uint64_t sub_2E9E80()
{
  OUTLINED_FUNCTION_10_54();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);

  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

void type metadata completion function for AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v7 = a3[6];
    int v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for SpeakableString();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    int v15 = (char *)v4 + v13;
    uint64_t v16 = (uint64_t)a2 + v13;
    *(void *)int v15 = *(void *)v16;
    v15[8] = *(unsigned char *)(v16 + 8);
    uint64_t v17 = (char *)v4 + v14;
    uint64_t v18 = (uint64_t)a2 + v14;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = *(unsigned char *)(v18 + 8);
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for SpeakableString();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SpeakableString();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  uint64_t v7 = a3[6];
  int v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SpeakableString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v18 = *v17;
  *(unsigned char *)(v16 + 8) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)((char *)a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  *(void *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SpeakableString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2EA7E4);
}

uint64_t sub_2EA7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_10_54();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, v3, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(v4 + *(int *)(a3 + 36));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2EA888);
}

void sub_2EA888(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_10_54();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5 + *(int *)(a4 + 24);
    __swift_storeEnumTagSinglePayload(v11, v4, v4, v10);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 36)) = (v4 - 1);
  }
}

void type metadata completion function for AnnounceGroupFaceTimeInviteReadGroupFaceTimeInviteAnnouncementParameters()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for AnnounceGroupFaceTimeInviteCATPatternsExecutor(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for AnnounceGroupFaceTimeInviteCATPatternsExecutor);
}

uint64_t type metadata completion function for AnnounceGroupFaceTimeInviteCATPatternsExecutor()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for AnnounceGroupFaceTimeInviteCATPatternsExecutor()
{
  return type metadata accessor for AnnounceGroupFaceTimeInviteCATPatternsExecutor(0);
}

void OUTLINED_FUNCTION_7_66(uint64_t a1@<X8>)
{
  uint64_t v4 = v2 + a1;
  *(void *)uint64_t v4 = v3;
  *(unsigned char *)(v4 + 8) = v1 & 1;
}

unint64_t specialized String.init<A>(describing:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppResolutionBeforeResolveFlow.State(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AppResolutionBeforeResolveFlow.State(a1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      unint64_t v6 = 0xD00000000000001CLL;
      goto LABEL_7;
    }
    unint64_t v6 = 0x74656C706D6F632ELL;
  }
  else
  {
    unint64_t v6 = 0x6C616974696E692ELL;
  }
  outlined destroy of AppResolutionBeforeResolveFlow.State((uint64_t)v4, (void (*)(void))type metadata accessor for AppResolutionBeforeResolveFlow.State);
LABEL_7:
  outlined destroy of AppResolutionBeforeResolveFlow.State(a1, (void (*)(void))type metadata accessor for AppResolutionBeforeResolveFlow.State);
  return v6;
}

unint64_t specialized String.init<A>(describing:)(char a1)
{
  unint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000020;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

void *AppResolutionBeforeResolveFlow.__allocating_init(previousTurnIntent:previouslyResolvedApp:sharedGlobals:appFinder:)()
{
  OUTLINED_FUNCTION_11_14();
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(v0, *(void *)(v0 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_75(v2, v7);
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_6_70();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v5;
}

unint64_t AppResolutionBeforeResolveFlow.State.description.getter()
{
  uint64_t v1 = type metadata accessor for AppResolutionBeforeResolveFlow.State(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AppResolutionBeforeResolveFlow.State(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return 0xD00000000000001CLL;
    }
    uint64_t v5 = 0x74656C706D6F632ELL;
  }
  else
  {
    uint64_t v5 = 0x6C616974696E692ELL;
  }
  outlined destroy of AppResolutionBeforeResolveFlow.State((uint64_t)v3, (void (*)(void))type metadata accessor for AppResolutionBeforeResolveFlow.State);
  return v5;
}

void *AppResolutionBeforeResolveFlow.init(previousTurnIntent:previouslyResolvedApp:sharedGlobals:appFinder:)()
{
  OUTLINED_FUNCTION_11_14();
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(void *)(v1 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_75(v3, v8);
  v5(v4);
  unint64_t v6 = OUTLINED_FUNCTION_6_70();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v6;
}

uint64_t AppResolutionBeforeResolveFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t protocol witness for Flow.on(input:) in conformance AppResolutionBeforeResolveFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))() & 1;
}

uint64_t protocol witness for Flow.onAsync(input:) in conformance AppResolutionBeforeResolveFlow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for Flow.onAsync(input:) in conformance AppResolutionBeforeResolveFlow;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t protocol witness for Flow.onAsync(input:) in conformance AppResolutionBeforeResolveFlow()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(v2);
}

uint64_t protocol witness for Flow.execute(completion:) in conformance AppResolutionBeforeResolveFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

void *specialized AppResolutionBeforeResolveFlow.init(previousTurnIntent:previouslyResolvedApp:sharedGlobals:appFinder:)(void *a1, uint64_t a2, long long *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  a5[7] = a6;
  a5[8] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a5 + 4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  a5[2] = a1;
  a5[3] = a2;
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)(a5 + 9));
  uint64_t v14 = (void *)((char *)a5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state);
  *uint64_t v14 = a1;
  v14[1] = a2;
  type metadata accessor for AppResolutionBeforeResolveFlow.State(0);
  swift_storeEnumTagMultiPayload();
  id v15 = a1;
  swift_retain();
  return a5;
}

uint64_t outlined destroy of AppResolutionBeforeResolveFlow.State(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t outlined assign with take of AppResolutionBeforeResolveFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppResolutionBeforeResolveFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2EB364()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t base witness table accessor for Flow in AppResolutionBeforeResolveFlow()
{
  return lazy protocol witness table accessor for type AppResolutionBeforeResolveFlow and conformance AppResolutionBeforeResolveFlow(&lazy protocol witness table cache variable for type AppResolutionBeforeResolveFlow and conformance AppResolutionBeforeResolveFlow, (void (*)(uint64_t))type metadata accessor for AppResolutionBeforeResolveFlow);
}

uint64_t ObjC metadata update function for AppResolutionBeforeResolveFlow()
{
  return type metadata accessor for AppResolutionBeforeResolveFlow(0);
}

uint64_t type metadata completion function for AppResolutionBeforeResolveFlow()
{
  uint64_t result = type metadata accessor for AppResolutionBeforeResolveFlow.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AppResolutionBeforeResolveFlow.State(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = type metadata accessor for AppResolutionFlowResult();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = *a2;
      uint64_t v9 = a2[1];
      *(void *)a1 = v8;
      *((void *)a1 + 1) = v9;
      uint64_t v10 = v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for AppResolutionBeforeResolveFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for AppResolutionFlowResult();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AppResolutionBeforeResolveFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of AppResolutionBeforeResolveFlow.State((uint64_t)a1, (void (*)(void))type metadata accessor for AppResolutionBeforeResolveFlow.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for AppResolutionFlowResult();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata completion function for AppResolutionBeforeResolveFlow.State()
{
  uint64_t result = type metadata accessor for AppResolutionFlowResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *outlined retain of AnnotatedApp?(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

char *OUTLINED_FUNCTION_4_75@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *OUTLINED_FUNCTION_6_70()
{
  return specialized AppResolutionBeforeResolveFlow.init(previousTurnIntent:previouslyResolvedApp:sharedGlobals:appFinder:)(v3, v2, v1, v6, v0, v4, v5);
}

uint64_t ContactNeedsValueFlowStrategy.init(outputProvider:sharedGlobals:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for ContactNeedsValueFlowStrategy() + 36);

  return outlined init with take of AppSelectionSignalComponent(a2, v6);
}

uint64_t type metadata accessor for ContactNeedsValueFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ContactNeedsValueFlowStrategy.actionForInput(_:resolveRecord:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Parse();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  outlined init with copy of SignalProviding(v3 + *(int *)(a3 + 36), (uint64_t)v12);
  Input.parse.getter();
  unsigned __int8 v9 = ContactPromptResponseParser.parseResponse(from:)((uint64_t)v8);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  outlined destroy of ContactPromptResponseParser((uint64_t)v12);
  if (v9 - 1 < 2) {
    return static ActionForInput.cancel()();
  }
  if (v9 == 6) {
    return static ActionForInput.ignore()();
  }
  return static ActionForInput.handle()();
}

uint64_t ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[37] = v2;
  v1[38] = v0;
  v1[35] = v3;
  v1[36] = v4;
  v1[34] = v5;
  v1[39] = type metadata accessor for PhoneError();
  v1[40] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Parse();
  v1[41] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[42] = v7;
  v1[43] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ParameterIdentifier();
  v1[44] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[45] = v9;
  v1[46] = swift_task_alloc();
  return _swift_task_switch(ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:), 0, 0);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  void *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  void *v34;
  os_log_type_t v35;
  _WORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  os_log_type_t v44;
  _WORD *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint8_t *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  os_log_type_t v72;
  _WORD *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  os_log_type_t v78;
  _WORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t WitnessTable;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  void *v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  long long *v107;
  void *v108;
  long long v109;
  long long v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;

  uint64_t v111 = v0;
  unint64_t v107 = (long long *)(v0 + 15);
  uint64_t v2 = v0[45];
  unint64_t v1 = v0[46];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[37];
  v0[47] = *(void *)(v4 + 24);
  v0[48] = *(void *)(v4 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[49] = AssociatedTypeWitness;
  type metadata accessor for ParameterResolutionRecord();
  uint64_t v6 = (void *)ParameterResolutionRecord.intent.getter();
  v0[50] = (uint64_t)v6;
  ParameterResolutionRecord.parameter.getter();
  uint64_t v7 = ParameterIdentifier.multicardinalIndex.getter();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v9) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v7;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  v0[51] = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = v6;
  uint64_t v13 = Logger.logObject.getter();
  uint64_t v14 = static os_log_type_t.debug.getter();
  unint64_t v103 = v12;
  v105 = AssociatedTypeWitness;
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v100 = v10;
    id v15 = (uint8_t *)swift_slowAlloc();
    *(void *)&uint64_t v109 = swift_slowAlloc();
    *(_DWORD *)id v15 = 136315138;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(AssociatedTypeWitness);
    type metadata accessor for INPerson();
    uint64_t v17 = Array.description.getter();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[33] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v13, v14, "#ContactNeedsValueFlowStrategy contacts before parsing NeedsValue prompt response: %s", v15, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    uint64_t v10 = v100;
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  uint64_t v21 = v0[42];
  uint64_t v20 = v0[43];
  uint64_t v22 = v0[41];
  uint64_t v23 = (void *)(v0[38] + *(int *)(v0[37] + 36));
  uint64_t v24 = v23[3];
  uint64_t v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  id v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25);
  Input.parse.getter();
  (*(void (**)(uint64_t))(*(void *)v26 + 192))(v20);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  if (!v0[18])
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)v107);
    uint64_t v43 = (void *)Logger.logObject.getter();
    uint64_t v44 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v44))
    {
      id v45 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v45);
      OUTLINED_FUNCTION_25_4(&dword_0, v46, v47, "#ContactNeedsValueFlowStrategy Received unsupported parse type. Skipping..");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v48 = (_OWORD *)v0[40];

    *uint64_t v48 = xmmword_46A560;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    OUTLINED_FUNCTION_3_76();
    PhoneError.logged()(v49);
    outlined destroy of PhoneError((uint64_t)v48);
    swift_willThrow();

    goto LABEL_21;
  }
  outlined init with take of AppSelectionSignalComponent(v107, (uint64_t)(v0 + 10));
  os_log_type_t v27 = v23[3];
  uint64_t v28 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 80))(v27, v28);
  uint64_t v29 = ParameterResolutionRecord.app.getter();
  uint64_t v108 = v0 + 10;
  unint64_t v30 = (void *)SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)((uint64_t)(v0 + 10), v29, 0, 0, v105);
  v0[52] = (uint64_t)v30;
  swift_release();
  outlined destroy of SKTransformer((uint64_t)(v0 + 20));
  if (!v30)
  {
    uint64_t v50 = v0[40];
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    OUTLINED_FUNCTION_3_76();
    PhoneError.logged()(v51);
    outlined destroy of PhoneError(v50);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
LABEL_22:
    return v52();
  }
  __swift_project_boxed_opaque_existential_1(v108, v0[13]);
  uint64_t v31 = OUTLINED_FUNCTION_3_35();
  uint64_t v33 = *(void *)(v32(v31) + 16);
  swift_bridgeObjectRelease();
  if (v33)
  {
    uint64_t v34 = (void *)Logger.logObject.getter();
    uint64_t v35 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v35))
    {
      uint64_t v36 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v36);
      OUTLINED_FUNCTION_25_4(&dword_0, v37, v38, "#ContactNeedsValueFlowStrategy User provided a group name. Rerun slot resolution.");
      OUTLINED_FUNCTION_6();
    }

    unint64_t v39 = v23[3];
    uint64_t v40 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v39);
    (*(void (**)(uint64_t, uint64_t))(v40 + 88))(v39, v40);
    uint64_t v41 = v0[29];
    __swift_project_boxed_opaque_existential_1(v0 + 25, v0[28]);
    v0[60] = ParameterResolutionRecord.intent.getter();
    v0[61] = ParameterResolutionRecord.app.getter();
    uint64_t v106 = *(void *)(v41 + 8) + **(int **)(v41 + 8);
    uint64_t v42 = (void *)swift_task_alloc();
    v0[62] = (uint64_t)v42;
    *uint64_t v42 = v0;
    v42[1] = ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:);
    long long v113 = v41;
    OUTLINED_FUNCTION_13_42();
    __asm { BRAA            X9, X16 }
  }
  __swift_project_boxed_opaque_existential_1(v108, v0[13]);
  os_log_type_t v54 = OUTLINED_FUNCTION_3_35();
  uint64_t v56 = *(void *)(v55(v54) + 16);
  swift_bridgeObjectRelease();
  if (!v56)
  {
    unint64_t v71 = (void *)Logger.logObject.getter();
    uint64_t v72 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v72))
    {
      uint64_t v73 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v73);
      OUTLINED_FUNCTION_25_4(&dword_0, v74, v75, "#ContactNeedsValueFlowStrategy contacts, resolved persons, and smsGroups were empty at prompt. IntentPromptAnswer = nil, reprompt.");
      OUTLINED_FUNCTION_6();
      uint64_t v76 = v30;
      unint64_t v30 = v71;
      unint64_t v71 = v103;
    }
    else
    {
      uint64_t v76 = v103;
    }

    uint64_t v94 = v0[34];
    uint64_t v95 = type metadata accessor for IntentPromptAnswer();
    unint64_t v96 = v94;
    unint64_t v97 = 1;
LABEL_45:
    __swift_storeEnumTagSinglePayload(v96, v97, 1, v95);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_22;
  }
  uint64_t v57 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  v0[53] = v57;
  uint64_t v58 = *(uint64_t (**)(uint64_t))(v57 + 8);
  v0[54] = (uint64_t)v58;
  v0[55] = (v57 + 8) & 0xFFFFFFFFFFFFLL | 0x11ED000000000000;
  unint64_t v59 = OUTLINED_FUNCTION_11_55();
  uint64_t v60 = v58(v59);
  uint64_t v61 = _swiftEmptyArrayStorage;
  if (v60) {
    uint64_t v61 = (void *)v60;
  }
  v0[30] = (uint64_t)v61;
  v101 = (void (*)(uint64_t, uint64_t))v58;
  uint64_t v102 = v30;
  uint64_t v62 = OUTLINED_FUNCTION_11_55();
  uint64_t v63 = v58(v62);
  ContactNeedsValueFlowStrategy.insertNewContacts(_:into:at:)(v63, v0 + 30, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v0[30], v105, v57);
  swift_bridgeObjectRelease();
  uint64_t v104 = v103;
  uint64_t v64 = Logger.logObject.getter();
  v65 = static os_log_type_t.debug.getter();
  uint64_t v99 = v57;
  if (os_log_type_enabled(v64, v65))
  {
    os_log_type_t v66 = (uint8_t *)swift_slowAlloc();
    *(void *)&uint64_t v109 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v66 = 136315138;
    v101(v105, v57);
    BOOL v67 = v66;
    type metadata accessor for INPerson();
    v68 = Array.description.getter();
    uint64_t v70 = v69;
    swift_bridgeObjectRelease();
    v0[32] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v64, v65, "#ContactNeedsValueFlowStrategy contacts after parsing NeedsValue prompt response: %s", v67, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  __swift_project_boxed_opaque_existential_1(v108, v0[13]);
  if (PhoneCallNLIntent.isBusinessNameCall()())
  {
    uint64_t v77 = (void *)Logger.logObject.getter();
    uint64_t v78 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v78))
    {
      uint64_t v79 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v79);
      OUTLINED_FUNCTION_25_4(&dword_0, v80, v81, "#ContactNeedsValueFlowStrategy NLv4 indicates that contact cannot be resolved on-device. Skipping CRR.");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v82 = ((uint64_t (*)(uint64_t, uint64_t))v101)(v105, v99);
    if (v82)
    {
      uint64_t v83 = v82;
      *((void *)&v110 + 1) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
      *(void *)&uint64_t v109 = v83;
    }
    else
    {
      uint64_t v109 = 0u;
      uint64_t v110 = 0u;
    }
    unint64_t v98 = v0[34];
    IntentPromptAnswer.init(answeredValue:updatedIntent:)();

    uint64_t v95 = type metadata accessor for IntentPromptAnswer();
    unint64_t v96 = v98;
    unint64_t v97 = 0;
    goto LABEL_45;
  }
  ParameterResolutionRecord.app.getter();
  OUTLINED_FUNCTION_13_42();
  static ContactSlotResolver.makeMulticardinalResolver<A>(multicardinalIndex:rchFlowContext:sharedGlobals:)(v84, v85, v86, v87, v88, v89, v90);
  swift_release();
  uint64_t v91 = (void *)swift_task_alloc();
  v0[56] = (uint64_t)v91;
  os_log_type_t v92 = type metadata accessor for AnyIntentResolver();
  v0[57] = v92;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v91 = v0;
  v91[1] = ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:);
  return SKIntentResolver.run(skIntent:nlIntent:)((uint64_t)v104, (uint64_t)v108, v92, WitnessTable);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 464) = v4;
  *(void *)(v2 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:);
  }
  else {
    uint64_t v5 = ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:);
  }
  return _swift_task_switch(v5, 0, 0);
}

{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t (*v19)(void);
  void *v21;
  long long v22;
  long long v23;
  uint64_t v24;
  uint64_t v25;

  uint64_t v24 = v0;
  unint64_t v1 = *(id *)(v0 + 464);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    uint64_t v21 = *(void **)(v0 + 464);
    uint64_t v5 = *(void *)(v0 + 424);
    uint64_t v6 = *(void *)(v0 + 392);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(void *)&uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v4(v6, v5);
    type metadata accessor for INPerson();
    uint64_t v8 = Array.description.getter();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, (uint64_t *)&v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v2, v3, "#ContactNeedsValueFlowStrategy contacts after re-running CRR: %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  uint64_t v11 = (*(uint64_t (**)(void, void))(v0 + 432))(*(void *)(v0 + 392), *(void *)(v0 + 424));
  if (v11)
  {
    uint64_t v12 = v11;
    *((void *)&v23 + 1) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
    *(void *)&uint64_t v22 = v12;
  }
  else
  {
    uint64_t v22 = 0u;
    uint64_t v23 = 0u;
  }
  uint64_t v13 = *(void **)(v0 + 416);
  uint64_t v14 = *(void **)(v0 + 400);
  id v15 = *(void *)(v0 + 272);
  IntentPromptAnswer.init(answeredValue:updatedIntent:)();

  uint64_t v16 = OUTLINED_FUNCTION_12_46();
  v17(v16);
  uint64_t v18 = type metadata accessor for IntentPromptAnswer();
  __swift_storeEnumTagSinglePayload(v15, 0, 1, v18);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v19();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[63] = v5;
  v3[64] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:);
  }
  else
  {
    uint64_t v7 = (void *)v3[60];
    swift_release();

    uint64_t v6 = ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:);
  }
  return _swift_task_switch(v6, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t AssociatedConformanceWitness;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  unint64_t v1 = v0[49];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 25));
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v1)) {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  }
  uint64_t v3 = (void *)v0[52];
  uint64_t v4 = (void *)v0[50];
  uint64_t v5 = v0[34];
  IntentPromptAnswer.init(answeredValue:updatedIntent:)();

  uint64_t v6 = type metadata accessor for IntentPromptAnswer();
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 10));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v7();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  unint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 416);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t (*v4)(void);
  uint64_t v6;

  unint64_t v1 = *(void **)(v0 + 416);

  uint64_t v2 = OUTLINED_FUNCTION_12_46();
  v3(v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

void ContactNeedsValueFlowStrategy.insertNewContacts(_:into:at:)(unint64_t a1, void *a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_8;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_4:
      if (*a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v7 = *(void *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8));
      }
      if (v7 >= a3)
      {
        specialized Array.replaceSubrange<A>(_:with:)(a3, a3, a1);
        return;
      }
    }
  }
  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  oslog = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001DLL, 0x8000000000499A30, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, oslog, v9, "#ContactNeedsValueFlowStrategy %s: Multicardinal index is beyond end of array. Leaving contacts as-is.", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t ContactNeedsValueFlowStrategy.makePromptForValue(resolveRecord:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(ContactNeedsValueFlowStrategy.makePromptForValue(resolveRecord:), 0, 0);
}

uint64_t ContactNeedsValueFlowStrategy.makePromptForValue(resolveRecord:)()
{
  uint64_t v1 = v0[4];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  swift_getAssociatedTypeWitness();
  type metadata accessor for ParameterResolutionRecord();
  uint64_t v4 = ParameterResolutionRecord.app.getter();
  v0[6] = v4;
  uint64_t v5 = ParameterResolutionRecord.intent.getter();
  v0[7] = v5;
  uint64_t v6 = ParameterResolutionRecord.result.getter();
  v0[8] = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 32)
                                                                                     + **(int **)(v2 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = ContactNeedsValueFlowStrategy.makePromptForValue(resolveRecord:);
  uint64_t v8 = v0[2];
  return v10(v8, v4, v5, v6, v3, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(ContactNeedsValueFlowStrategy.makePromptForValue(resolveRecord:), 0, 0);
  }
  else
  {
    uint64_t v7 = *(void **)(v3 + 56);

    swift_release();
    OUTLINED_FUNCTION_6_0();
    return v8();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = *(void **)(v0 + 56);

  swift_release();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.parseValueResponse(input:resolveRecord:) in conformance ContactNeedsValueFlowStrategy<A>()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return ContactNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)();
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.makePromptForValue(resolveRecord:) in conformance ContactNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy;
  return ContactNeedsValueFlowStrategy.makePromptForValue(resolveRecord:)(a1, a2, a3);
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:) in conformance ContactNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:) in conformance ContactNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:) in conformance ContactNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:) in conformance ContactNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t base witness table accessor for ParameterResolutionHandlingAsync in ContactNeedsValueFlowStrategy<A>()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for ContactNeedsValueFlowStrategy()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContactNeedsValueFlowStrategy(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2EDB18);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double storeEnumTagSinglePayload for ContactNeedsValueFlowStrategy(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x2EDD08);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v18 + 8) = 0u;
            *(_OWORD *)(v18 + 24) = 0u;
            *(void *)unint64_t v18 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v18 + 24) = (a2 - 1);
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return result;
  }
}

uint64_t OUTLINED_FUNCTION_11_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_46()
{
  return v0;
}

#error "2EDDF0: call analysis failed (funcsize=39)"

uint64_t CallingIntentNeedsValueFlowStrategy.rePromptCount.setter(uint64_t a1)
{
  uint64_t result = OUTLINED_FUNCTION_36_21();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*CallingIntentNeedsValueFlowStrategy.rePromptCount.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t CallingIntentNeedsValueFlowStrategy.startingOver.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_36_21();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*CallingIntentNeedsValueFlowStrategy.startingOver.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[16] = v2;
  v1[17] = v0;
  v1[14] = v3;
  v1[15] = v4;
  v1[13] = v5;
  uint64_t v6 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v6);
  v1[18] = OUTLINED_FUNCTION_35();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneError?);
  OUTLINED_FUNCTION_11_0(v7);
  v1[19] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for PhoneError();
  v1[20] = v8;
  OUTLINED_FUNCTION_11_0(v8);
  v1[21] = OUTLINED_FUNCTION_28_2();
  v1[22] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  outlined destroy of PhoneError(*(void *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 224) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  outlined destroy of PhoneError(*(void *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  unint64_t v1 = *(void *)(v0 + 176);
  swift_release();
  outlined destroy of PhoneError(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  unint64_t v1 = *(void *)(v0 + 176);
  swift_release();
  outlined destroy of PhoneError(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

#error "2EE520: call analysis failed (funcsize=405)"

uint64_t closure #1 in CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Output, Error>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)a2 + 184))(partial apply for closure #1 in closure #1 in CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:), v8);
  return swift_release();
}

uint64_t closure #1 in closure #1 in CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:)(uint64_t a1)
{
  outlined init with copy of PhoneCallNLIntent?(a1, (uint64_t)v3, &demangling cache variable for type metadata for Result<Output, Error>);
  if (v4)
  {
    v2[0] = *(void *)&v3[0];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Output, Error>);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    outlined init with take of AppSelectionSignalComponent(v3, (uint64_t)v2);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Output, Error>);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidence(resolveRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  OUTLINED_FUNCTION_2();
  v1[5] = v4;
  uint64_t v5 = type metadata accessor for ParameterIdentifier();
  v1[6] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[7] = v6;
  v1[8] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  uint64_t v2 = v0[7];
  unint64_t v1 = v0[8];
  uint64_t v7 = v0[6];
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_94_2();
  v0[9] = ParameterResolutionRecord.app.getter();
  v0[10] = ParameterResolutionRecord.intent.getter();
  ParameterResolutionRecord.parameter.getter();
  ParameterIdentifier.name.getter();
  v0[11] = v3;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v7);
  v0[12] = ParameterResolutionRecord.result.getter();
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v0[13] = v4;
  *uint64_t v4 = v5;
  v4[1] = CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidence(resolveRecord:);
  return CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidenceOutput(app:intent:parameterName:intentResolutionResult:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;

  OUTLINED_FUNCTION_21_21();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  *uint64_t v5 = *v2;
  *(void *)(v4 + 112) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void **)(v1 + 96);
  uint64_t v8 = *(void **)(v1 + 80);
  if (v0)
  {

    swift_bridgeObjectRelease();
    swift_release();
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v9, v10, v11);
  }
  else
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    int v12 = *(uint64_t (**)(void))(v6 + 8);
    return v12();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidenceOutput(app:intent:parameterName:intentResolutionResult:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[11] = v2;
  v1[12] = v0;
  v1[9] = v3;
  v1[10] = v4;
  v1[7] = v5;
  v1[8] = v6;
  v1[6] = v7;
  OUTLINED_FUNCTION_2();
  v1[13] = v8;
  uint64_t v9 = type metadata accessor for OutputGenerationManifest();
  v1[14] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[15] = v10;
  v1[16] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  unint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 152) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  unint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();

  unint64_t v1 = OUTLINED_FUNCTION_96();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v3();
}

uint64_t (*CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidenceOutput(app:intent:parameterName:intentResolutionResult:)())(void *, void)
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_22();
  uint64_t result = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *))(v1 + 320))(v0 + 2);
  if (__OFADD__(*v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = v0[12];
    ++*v3;
    uint64_t v5 = result(v0 + 2, 0);
    if ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 304))(v5) > 2)
    {
      uint64_t v8 = (void *)(class metadata base offset for StartCallCATsSimple + **(void **)(v0[12] + 112) + 448);
      uint64_t v10 = (uint64_t (*)(void))(*v8 + *(int *)*v8);
      uint64_t v9 = (void *)swift_task_alloc();
      v0[18] = v9;
      *uint64_t v9 = v0;
      v9[1] = CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidenceOutput(app:intent:parameterName:intentResolutionResult:);
      return (uint64_t (*)(void *, void))v10();
    }
    else
    {
      swift_task_alloc();
      OUTLINED_FUNCTION_31_2();
      v0[17] = v6;
      *uint64_t v6 = v7;
      v6[1] = CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidenceOutput(app:intent:parameterName:intentResolutionResult:);
      return (uint64_t (*)(void *, void))CallingIntentNeedsValueFlowStrategy.makePromptForNeedsValueOutput(app:intent:parameterName:intentResolutionResult:)();
    }
  }
  return result;
}

uint64_t CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidenceOutput(app:intent:parameterName:intentResolutionResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[19];
  uint64_t v12 = v10[12];
  uint64_t v13 = v10[8];
  default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(*(void *)(v10[13] + 264), *(void *)(v10[13] + 272));
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t, void, void, void, void, void))(v14 + 256))(v13, 0, 0, 0, 0, v15 & 1);
  __swift_project_boxed_opaque_existential_1((void *)(v12 + 184), *(void *)(v12 + 208));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  int v16 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_16_5(v16, (__n128)xmmword_46A030);
  v10[20] = v29;
  id v17 = v11;
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v10[21] = v18;
  *unint64_t v18 = v19;
  v18[1] = CallingIntentNeedsValueFlowStrategy.makeRepromptOnLowConfidenceOutput(app:intent:parameterName:intentResolutionResult:);
  OUTLINED_FUNCTION_54_15();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
}

void *CallingIntentNeedsValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + direct field offset for CallingIntentNeedsValueFlowStrategy.rePromptCount) = 0;
  *(unsigned char *)(v11 + direct field offset for CallingIntentNeedsValueFlowStrategy.startingOver) = 0;
  *(unsigned char *)(v11 + direct field offset for CallingIntentNeedsValueFlowStrategy.isUnsupportedFollowUp) = 0;
  outlined init with copy of SignalProviding(a3, (uint64_t)v26);
  outlined init with copy of SignalProviding(a7, (uint64_t)v25);
  outlined init with copy of SignalProviding(a9, (uint64_t)v24);
  outlined init with copy of SignalProviding(a10, (uint64_t)v23);
  outlined init with copy of SignalProviding(a11, (uint64_t)v22);
  id v17 = CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(a1, a2, (uint64_t)v26, a4, a5, a6, (uint64_t)v25, a8, (uint64_t)v24, (uint64_t)v23, v22);
  __swift_destroy_boxed_opaque_existential_1(a11);
  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v17;
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:) in conformance CallingIntentNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for CallingIntentNeedsValueFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:) in conformance CallingIntentNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 408)
                                                + **(int **)(**(void **)v2 + 408));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:) in conformance CallingIntentNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for CallingIntentNeedsValueFlowStrategy();
  *uint64_t v12 = v6;
  v12[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:) in conformance CallingIntentNeedsValueFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v5 + 400)
                                                                            + **(int **)(**(void **)v5 + 400));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_2EFE10()
{
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_94_2();
  OUTLINED_FUNCTION_39_8();
  unint64_t v2 = (*(void *)(v1 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_11();
  v3();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2);
  uint64_t v4 = OUTLINED_FUNCTION_53_14();

  return _swift_deallocObject(v4, v5, v6);
}

uint64_t outlined init with take of PhoneError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void specialized UnsupportedCallFlowOutputFactory.init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v54 = v35;
  uint64_t v37 = v36;
  uint64_t v52 = v38;
  char v40 = v39;
  uint64_t v41 = type metadata accessor for CATOption();
  uint64_t v42 = OUTLINED_FUNCTION_11_0(v41);
  __chkstk_darwin(v42);
  OUTLINED_FUNCTION_4();
  uint64_t v43 = type metadata accessor for DialogPhase();
  uint64_t v44 = OUTLINED_FUNCTION_11_0(v43);
  __chkstk_darwin(v44);
  OUTLINED_FUNCTION_4();
  v61[3] = type metadata accessor for ResponseFactory();
  v61[4] = &protocol witness table for ResponseFactory;
  v61[0] = v28;
  uint64_t v59 = type metadata accessor for AppInfoBuilder();
  uint64_t v60 = &protocol witness table for AppInfoBuilder;
  *(void *)&long long v58 = a25;
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  *(unsigned char *)(a27 + 24) = v40;
  *(void *)(a27 + 32) = v34;
  *(void *)(a27 + 40) = v30;
  *(void *)(a27 + 16) = v32;
  outlined init with copy of SignalProviding((uint64_t)v61, a27 + 48);
  uint64_t v53 = v37;
  outlined init with copy of SignalProviding(v37, a27 + 88);
  *(void *)(a27 + 128) = v52;
  outlined init with copy of SignalProviding(v37, (uint64_t)&v55);
  type metadata accessor for PhoneCallDisplayTextCATs();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v45 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallCommonCATs();
  static CATOption.defaultMode.getter();
  uint64_t v46 = CATWrapper.__allocating_init(options:globals:)();
  uint64_t v47 = OUTLINED_FUNCTION_18_17();
  type metadata accessor for StartCallCATs();
  static CATOption.defaultMode.getter();
  uint64_t v48 = CATWrapper.__allocating_init(options:globals:)();
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INIntent, INIntentResponse>);
  uint64_t v50 = (void *)swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v51 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0xD000000000000010, 0x800000000048C8D0, &v55, v45, v46, v47, a21, a22, a23, a24, v48, v50);
  uint64_t v56 = v49;
  uint64_t v57 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(void *)&long long v55 = v51;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  __swift_destroy_boxed_opaque_existential_1(v53);
  outlined init with take of AppSelectionSignalComponent(&v55, a27 + 136);
  *(void *)(a27 + 176) = v54;
  outlined init with take of AppSelectionSignalComponent(&v58, a27 + 192);
  *(void *)(a27 + 184) = a26;
  OUTLINED_FUNCTION_26_1();
}

uint64_t partial apply for closure #1 in CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:)(uint64_t a1)
{
  return closure #1 in CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:)(a1, v1);
}

uint64_t base witness table accessor for ParameterResolutionHandlingAsync in CallingIntentNeedsValueFlowStrategy<A>()
{
  return swift_getWitnessTable();
}

uint64_t sub_2F02A4@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 304))();
  *a1 = result;
  return result;
}

uint64_t sub_2F02F4()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t sub_2F0348@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 328))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2F039C()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t type metadata completion function for CallingIntentNeedsValueFlowStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CallingIntentNeedsValueFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2F0A90()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Output, Error>);
  OUTLINED_FUNCTION_39_8();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 80) | 7;
  OUTLINED_FUNCTION_11();
  v2();
  uint64_t v3 = OUTLINED_FUNCTION_96();

  return _swift_deallocObject(v3, v4, v1);
}

uint64_t partial apply for closure #1 in closure #1 in CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Output, Error>);

  return closure #1 in closure #1 in CallingIntentNeedsValueFlowStrategy.makeErrorResponse(error:app:intent:parameter:)(a1);
}

uint64_t outlined init with copy of PhoneCallNLIntent?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v4 = OUTLINED_FUNCTION_7_0();
  v5(v4);
  return a2;
}

uint64_t sub_2F0BE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t _s11SiriKitFlow5InputVACs23CustomStringConvertibleAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_26()
{
  uint64_t v2 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1(*(void **)(v1 - 112), v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_31_27(uint64_t a1)
{
  return SKTransformer.convertToSKIntent<A>(ofType:input:rchFlowContext:)(v1, v2, a1, 0, 0, v1);
}

uint64_t OUTLINED_FUNCTION_36_24(uint64_t a1, uint64_t a2)
{
  return PhoneError.logged()(a2);
}

uint64_t OUTLINED_FUNCTION_53_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58_12()
{
  *(_WORD *)(v0 + 12) = 2112;
  return ParameterResolutionRecord.intent.getter();
}

uint64_t OUTLINED_FUNCTION_63_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_69_8()
{
  return swift_arrayDestroy();
}

__n128 OUTLINED_FUNCTION_71_7(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_72_11()
{
  return 16;
}

void OUTLINED_FUNCTION_75_6(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_77_7()
{
  return v0 + 272;
}

uint64_t OUTLINED_FUNCTION_78_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_80_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_82_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_83_3()
{
  return ParameterResolutionRecord.parameter.getter();
}

uint64_t OUTLINED_FUNCTION_85_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_86_7()
{
  *uint64_t v1 = v2;
  return v0;
}

uint64_t FlowFinder.findFlow(forInvocation:)()
{
  return static FlowLocator.findFlow(forInvocation:)();
}

uint64_t protocol witness for FlowFinding.findFlow(forInvocation:) in conformance FlowFinder()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 80))();
}

uint64_t type metadata accessor for FlowFinder()
{
  return self;
}

void *PersonIntentNode.speechAlternativeConfidenceThreshold.unsafeMutableAddressor()
{
  return &static PersonIntentNode.speechAlternativeConfidenceThreshold;
}

double static PersonIntentNode.speechAlternativeConfidenceThreshold.getter()
{
  return 0.2;
}

void *specialized Sequence<>.max()(uint64_t a1)
{
  __n128 result = specialized _NativeDictionary.makeIterator()(&v17, a1);
  if (v21)
  {
    unint64_t v2 = (v21 - 1) & v21;
    unint64_t v3 = __clz(__rbit64(v21)) | (v20 << 6);
    int64_t v4 = (unint64_t)(v19 + 64) >> 6;
    int64_t v5 = v20;
    goto LABEL_3;
  }
  int64_t v14 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
    int64_t v4 = (unint64_t)(v19 + 64) >> 6;
    if (v14 < v4)
    {
      unint64_t v15 = *(void *)(v18 + 8 * v14);
      int64_t v5 = v20 + 1;
      if (v15)
      {
LABEL_29:
        unint64_t v2 = (v15 - 1) & v15;
        unint64_t v3 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_3:
        uint64_t v6 = *(void *)(v17 + 56);
        double v7 = *(double *)(v6 + 8 * v3);
        if (!v2) {
          goto LABEL_5;
        }
LABEL_4:
        unint64_t v8 = __clz(__rbit64(v2));
        v2 &= v2 - 1;
        unint64_t v9 = v8 | (v5 << 6);
        while (1)
        {
          if (v7 < *(double *)(v6 + 8 * v9)) {
            double v7 = *(double *)(v6 + 8 * v9);
          }
          if (v2) {
            goto LABEL_4;
          }
LABEL_5:
          int64_t v10 = v5 + 1;
          if (__OFADD__(v5, 1)) {
            break;
          }
          if (v10 >= v4) {
            goto LABEL_25;
          }
          unint64_t v11 = *(void *)(v18 + 8 * v10);
          int64_t v12 = v5 + 1;
          if (!v11)
          {
            int64_t v12 = v5 + 2;
            if (v5 + 2 >= v4) {
              goto LABEL_25;
            }
            unint64_t v11 = *(void *)(v18 + 8 * v12);
            if (!v11)
            {
              int64_t v12 = v5 + 3;
              if (v5 + 3 >= v4) {
                goto LABEL_25;
              }
              unint64_t v11 = *(void *)(v18 + 8 * v12);
              if (!v11)
              {
                int64_t v12 = v5 + 4;
                if (v5 + 4 >= v4) {
                  goto LABEL_25;
                }
                unint64_t v11 = *(void *)(v18 + 8 * v12);
                if (!v11)
                {
                  int64_t v12 = v5 + 5;
                  if (v5 + 5 >= v4) {
                    goto LABEL_25;
                  }
                  unint64_t v11 = *(void *)(v18 + 8 * v12);
                  if (!v11)
                  {
                    int64_t v13 = v5 + 6;
                    while (v13 < v4)
                    {
                      unint64_t v11 = *(void *)(v18 + 8 * v13++);
                      if (v11)
                      {
                        int64_t v12 = v13 - 1;
                        goto LABEL_20;
                      }
                    }
LABEL_25:
                    swift_bridgeObjectRetain();
                    swift_release();
                    return *(void **)&v7;
                  }
                }
              }
            }
          }
LABEL_20:
          unint64_t v2 = (v11 - 1) & v11;
          unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
          int64_t v5 = v12;
        }
        __break(1u);
        goto LABEL_44;
      }
      int64_t v5 = v20 + 2;
      if (v20 + 2 < v4)
      {
        unint64_t v15 = *(void *)(v18 + 8 * v5);
        if (v15) {
          goto LABEL_29;
        }
        int64_t v5 = v20 + 3;
        if (v20 + 3 < v4)
        {
          unint64_t v15 = *(void *)(v18 + 8 * v5);
          if (v15) {
            goto LABEL_29;
          }
          int64_t v5 = v20 + 4;
          if (v20 + 4 < v4)
          {
            unint64_t v15 = *(void *)(v18 + 8 * v5);
            if (v15) {
              goto LABEL_29;
            }
            int64_t v5 = v20 + 5;
            if (v20 + 5 < v4)
            {
              unint64_t v15 = *(void *)(v18 + 8 * v5);
              if (v15) {
                goto LABEL_29;
              }
              int64_t v16 = v20 + 6;
              while (v16 < v4)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  int64_t v5 = v16 - 1;
                  goto LABEL_29;
                }
              }
            }
          }
        }
      }
    }
    swift_bridgeObjectRetain();
    outlined release of _NativeDictionary<String, Double>.Iterator((uint64_t)&v17);
    return 0;
  }
LABEL_44:
  __break(1u);
  return result;
}

Swift::String_optional __swiftcall PersonIntentNode.getFilteredAlternativesFullName()()
{
  uint64_t v0 = PersonIntentNode.getFilteredAlternativesFullName()((void (*)(void))&static PersonOntologyNode.personFullNameNode.getter);
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::String_optional __swiftcall PersonIntentNode.getFilteredAlternativesFirstName()()
{
  uint64_t v0 = PersonIntentNode.getFilteredAlternativesFullName()((void (*)(void))&static PersonOntologyNode.personFirstNameNode.getter);
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::String_optional __swiftcall PersonIntentNode.getFilteredAlternativesMiddleName()()
{
  uint64_t v0 = PersonIntentNode.getFilteredAlternativesFullName()((void (*)(void))&static PersonOntologyNode.personMiddleNameNode.getter);
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::String_optional __swiftcall PersonIntentNode.getFilteredAlternativesLastName()()
{
  uint64_t v0 = PersonIntentNode.getFilteredAlternativesFullName()((void (*)(void))&static PersonOntologyNode.personLastNameNode.getter);
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

uint64_t PersonIntentNode.getFilteredAlternativesFullName()(void (*a1)(void))
{
  type metadata accessor for PersonOntologyNode();
  a1();
  uint64_t v2 = static PersonIntentNode.getProcessedNameField(person:terminalNode:)();
  swift_release();
  return v2;
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v4 = v5;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v8, a2);
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1, uint64_t a2)
{
  Swift::Int v5 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_155;
    }
    if (v5)
    {
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v5, 1, a1, a2);
      goto LABEL_132;
    }
    goto LABEL_131;
  }
  Swift::Int v7 = v6;
  uint64_t v135 = v2;
  v126 = specialized static Array._allocateUninitialized(_:)(v5 / 2);
  uint64_t v127 = v5;
  v130 = v8;
  uint64_t v138 = a2;
  v124 = a1;
  if (v5 <= 0)
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
    unint64_t v60 = _swiftEmptyArrayStorage[2];
LABEL_116:
    if (v60 >= 2)
    {
      uint64_t v112 = *v124;
      uint64_t v137 = *v124;
      while (1)
      {
        unint64_t v113 = v60 - 2;
        if (v60 < 2) {
          break;
        }
        if (!v112) {
          goto LABEL_164;
        }
        v133 = v10;
        v114 = v10 + 32;
        uint64_t v115 = *(void *)&v10[16 * v113 + 32];
        uint64_t v116 = *(void *)&v114[16 * v60 - 8];
        v117 = (char *)(v112 + 16 * v115);
        v118 = (char *)(v112 + 16 * *(void *)&v114[16 * v60 - 16]);
        unint64_t v119 = v112 + 16 * v116;
        swift_bridgeObjectRetain();
        specialized _merge<A>(low:mid:high:buffer:by:)(v117, v118, v119, v130, v138);
        if (v135) {
          goto LABEL_113;
        }
        if (v116 < v115) {
          goto LABEL_150;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v133 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v133);
        }
        if (v113 >= *((void *)v133 + 2)) {
          goto LABEL_151;
        }
        v120 = &v133[16 * v113 + 32];
        *(void *)v120 = v115;
        *((void *)v120 + 1) = v116;
        unint64_t v121 = *((void *)v133 + 2);
        if (v60 > v121) {
          goto LABEL_152;
        }
        int64_t v10 = v133;
        memmove(&v133[16 * v60 + 16], &v133[16 * v60 + 32], 16 * (v121 - v60));
        *((void *)v133 + 2) = v121 - 1;
        unint64_t v60 = v121 - 1;
        uint64_t v112 = v137;
        if (v121 <= 2) {
          goto LABEL_129;
        }
      }
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_162:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_163:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_164:
      uint64_t result = swift_bridgeObjectRelease_n();
      __break(1u);
      return result;
    }
LABEL_129:
    swift_bridgeObjectRelease();
    if (v127 < -1) {
      goto LABEL_160;
    }
    v126[2] = 0;
    swift_bridgeObjectRelease();
LABEL_131:
    swift_bridgeObjectRelease();
    goto LABEL_132;
  }
  Swift::Int v125 = v7;
  Swift::Int v9 = 0;
  uint64_t v136 = *a1;
  uint64_t v123 = *a1 + 40;
  int64_t v10 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v11 = v9++;
    if (v9 >= v5)
    {
      uint64_t v24 = v136;
    }
    else
    {
      int64_t v12 = (uint64_t *)(v136 + 16 * v9);
      uint64_t v13 = v12[1];
      int64_t v14 = (uint64_t *)(v136 + 16 * v11);
      uint64_t v15 = v14[1];
      if (*(void *)(a2 + 16))
      {
        uint64_t v16 = *v14;
        uint64_t v17 = *v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(v17, v13);
        a2 = v138;
        double v19 = 0.0;
        double v20 = 0.0;
        if (v21) {
          double v20 = *(double *)(*(void *)(v138 + 56) + 8 * v18);
        }
        if (*(void *)(v138 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v22 = specialized __RawDictionaryStorage.find<A>(_:)(v16, v15);
          if (v23) {
            double v19 = *(double *)(*(void *)(v138 + 56) + 8 * v22);
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v20 = 0.0;
        double v19 = 0.0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int v9 = v11 + 2;
      if (v11 + 2 < v5)
      {
        uint64_t v25 = (uint64_t *)(v123 + 16 * v11);
        while (1)
        {
          uint64_t v26 = *v25;
          uint64_t v27 = *(v25 - 2);
          if (*(void *)(a2 + 16))
          {
            uint64_t v28 = *(v25 - 3);
            uint64_t v29 = *(v25 - 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v30 = specialized __RawDictionaryStorage.find<A>(_:)(v29, v26);
            a2 = v138;
            double v31 = 0.0;
            double v32 = 0.0;
            if (v33) {
              double v32 = *(double *)(*(void *)(v138 + 56) + 8 * v30);
            }
            if (*(void *)(v138 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v34 = specialized __RawDictionaryStorage.find<A>(_:)(v28, v27);
              if (v35) {
                double v31 = *(double *)(*(void *)(v138 + 56) + 8 * v34);
              }
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            double v32 = 0.0;
            double v31 = 0.0;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v19 < v20 == v31 >= v32) {
            break;
          }
          v25 += 2;
          if (++v9 >= v127)
          {
            Swift::Int v5 = v127;
            Swift::Int v9 = v127;
            goto LABEL_28;
          }
        }
        Swift::Int v5 = v127;
      }
LABEL_28:
      uint64_t v24 = v136;
      if (v19 < v20)
      {
        if (v9 < v11) {
          goto LABEL_157;
        }
        if (v11 < v9)
        {
          uint64_t v36 = 16 * v9;
          uint64_t v37 = 16 * v11;
          Swift::Int v38 = v9;
          Swift::Int v39 = v11;
          do
          {
            if (v39 != --v38)
            {
              if (!v136) {
                goto LABEL_163;
              }
              uint64_t v40 = v136 + v36;
              uint64_t v41 = *(void *)(v136 + v37);
              uint64_t v42 = *(void *)(v136 + v37 + 8);
              *(_OWORD *)(v136 + v37) = *(_OWORD *)(v136 + v36 - 16);
              *(void *)(v40 - 16) = v41;
              *(void *)(v40 - 8) = v42;
            }
            ++v39;
            v36 -= 16;
            v37 += 16;
          }
          while (v39 < v38);
        }
      }
    }
    if (v9 < v5)
    {
      if (__OFSUB__(v9, v11)) {
        goto LABEL_154;
      }
      if (v9 - v11 < v125)
      {
        Swift::Int v43 = v11 + v125;
        if (__OFADD__(v11, v125)) {
          goto LABEL_158;
        }
        if (v43 >= v5) {
          Swift::Int v43 = v5;
        }
        if (v43 < v11) {
          goto LABEL_159;
        }
        if (v9 != v43)
        {
          v131 = v10;
          Swift::Int v134 = v11;
          uint64_t v44 = (uint64_t *)(v24 + 16 * v9);
          Swift::Int v128 = v43;
          do
          {
            uint64_t v45 = *(void *)(v24 + 16 * v9 + 8);
            Swift::Int v46 = v134;
            uint64_t v47 = v44;
            do
            {
              uint64_t v49 = *(v47 - 2);
              uint64_t v48 = *(v47 - 1);
              if (*(void *)(a2 + 16))
              {
                uint64_t v50 = *v47;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                unint64_t v51 = specialized __RawDictionaryStorage.find<A>(_:)(v50, v45);
                a2 = v138;
                double v52 = 0.0;
                double v53 = 0.0;
                if (v54) {
                  double v53 = *(double *)(*(void *)(v138 + 56) + 8 * v51);
                }
                if (*(void *)(v138 + 16))
                {
                  swift_bridgeObjectRetain();
                  unint64_t v55 = specialized __RawDictionaryStorage.find<A>(_:)(v49, v48);
                  if (v56) {
                    double v52 = *(double *)(*(void *)(v138 + 56) + 8 * v55);
                  }
                  swift_bridgeObjectRelease();
                }
              }
              else
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                double v53 = 0.0;
                double v52 = 0.0;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v52 >= v53) {
                break;
              }
              if (!v136) {
                goto LABEL_161;
              }
              uint64_t v57 = *v47;
              uint64_t v45 = v47[1];
              *(_OWORD *)uint64_t v47 = *((_OWORD *)v47 - 1);
              *(v47 - 1) = v45;
              *(v47 - 2) = v57;
              v47 -= 2;
              ++v46;
            }
            while (v9 != v46);
            ++v9;
            v44 += 2;
            uint64_t v24 = v136;
          }
          while (v9 != v128);
          Swift::Int v9 = v128;
          int64_t v10 = v131;
          Swift::Int v11 = v134;
        }
      }
    }
    if (v9 < v11) {
      goto LABEL_153;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v59 = *((void *)v10 + 2);
    unint64_t v58 = *((void *)v10 + 3);
    unint64_t v60 = v59 + 1;
    if (v59 >= v58 >> 1) {
      int64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v58 > 1), v59 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v60;
    uint64_t v61 = v10 + 32;
    uint64_t v62 = &v10[16 * v59 + 32];
    *(void *)uint64_t v62 = v11;
    *((void *)v62 + 1) = v9;
    if (v59) {
      break;
    }
    unint64_t v60 = 1;
LABEL_108:
    Swift::Int v5 = v127;
    a2 = v138;
    if (v9 >= v127) {
      goto LABEL_116;
    }
  }
  Swift::Int v129 = v9;
  v132 = v10;
  while (1)
  {
    unint64_t v63 = v60 - 1;
    if (v60 >= 4)
    {
      v68 = &v61[16 * v60];
      uint64_t v69 = *((void *)v68 - 8);
      uint64_t v70 = *((void *)v68 - 7);
      BOOL v74 = __OFSUB__(v70, v69);
      uint64_t v71 = v70 - v69;
      if (v74) {
        goto LABEL_138;
      }
      uint64_t v73 = *((void *)v68 - 6);
      uint64_t v72 = *((void *)v68 - 5);
      BOOL v74 = __OFSUB__(v72, v73);
      uint64_t v66 = v72 - v73;
      char v67 = v74;
      if (v74) {
        goto LABEL_139;
      }
      unint64_t v75 = v60 - 2;
      uint64_t v76 = &v61[16 * v60 - 32];
      uint64_t v78 = *(void *)v76;
      uint64_t v77 = *((void *)v76 + 1);
      BOOL v74 = __OFSUB__(v77, v78);
      uint64_t v79 = v77 - v78;
      if (v74) {
        goto LABEL_140;
      }
      BOOL v74 = __OFADD__(v66, v79);
      uint64_t v80 = v66 + v79;
      if (v74) {
        goto LABEL_142;
      }
      if (v80 >= v71)
      {
        unint64_t v98 = &v61[16 * v63];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v74 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v74) {
          goto LABEL_148;
        }
        BOOL v91 = v66 < v101;
        goto LABEL_97;
      }
    }
    else
    {
      if (v60 != 3)
      {
        uint64_t v92 = *((void *)v10 + 4);
        uint64_t v93 = *((void *)v10 + 5);
        BOOL v74 = __OFSUB__(v93, v92);
        uint64_t v85 = v93 - v92;
        char v86 = v74;
        goto LABEL_91;
      }
      uint64_t v65 = *((void *)v10 + 4);
      uint64_t v64 = *((void *)v10 + 5);
      BOOL v74 = __OFSUB__(v64, v65);
      uint64_t v66 = v64 - v65;
      char v67 = v74;
    }
    if (v67) {
      goto LABEL_141;
    }
    unint64_t v75 = v60 - 2;
    BOOL v81 = &v61[16 * v60 - 32];
    uint64_t v83 = *(void *)v81;
    uint64_t v82 = *((void *)v81 + 1);
    BOOL v84 = __OFSUB__(v82, v83);
    uint64_t v85 = v82 - v83;
    char v86 = v84;
    if (v84) {
      goto LABEL_143;
    }
    unint64_t v87 = &v61[16 * v63];
    uint64_t v89 = *(void *)v87;
    uint64_t v88 = *((void *)v87 + 1);
    BOOL v74 = __OFSUB__(v88, v89);
    uint64_t v90 = v88 - v89;
    if (v74) {
      goto LABEL_145;
    }
    if (__OFADD__(v85, v90)) {
      goto LABEL_147;
    }
    if (v85 + v90 >= v66)
    {
      BOOL v91 = v66 < v90;
LABEL_97:
      if (v91) {
        unint64_t v63 = v75;
      }
      goto LABEL_99;
    }
LABEL_91:
    if (v86) {
      goto LABEL_144;
    }
    uint64_t v94 = &v61[16 * v63];
    uint64_t v96 = *(void *)v94;
    uint64_t v95 = *((void *)v94 + 1);
    BOOL v74 = __OFSUB__(v95, v96);
    uint64_t v97 = v95 - v96;
    if (v74) {
      goto LABEL_146;
    }
    if (v97 < v85) {
      goto LABEL_108;
    }
LABEL_99:
    unint64_t v102 = v63 - 1;
    if (v63 - 1 >= v60)
    {
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    if (!v136) {
      goto LABEL_162;
    }
    unint64_t v103 = &v61[16 * v102];
    uint64_t v104 = *(void *)v103;
    unint64_t v105 = v63;
    uint64_t v106 = &v61[16 * v63];
    uint64_t v107 = *((void *)v106 + 1);
    uint64_t v108 = (char *)(v136 + 16 * *(void *)v103);
    uint64_t v109 = (char *)(v136 + 16 * *(void *)v106);
    swift_bridgeObjectRetain();
    specialized _merge<A>(low:mid:high:buffer:by:)(v108, v109, v136 + 16 * v107, v130, v138);
    if (v135) {
      break;
    }
    if (v107 < v104) {
      goto LABEL_135;
    }
    if (v105 > *((void *)v132 + 2)) {
      goto LABEL_136;
    }
    unint64_t v110 = v105;
    *(void *)unint64_t v103 = v104;
    *(void *)&v61[16 * v102 + 8] = v107;
    unint64_t v111 = *((void *)v132 + 2);
    if (v105 >= v111) {
      goto LABEL_137;
    }
    int64_t v10 = v132;
    uint64_t v135 = 0;
    unint64_t v60 = v111 - 1;
    memmove(v106, v106 + 16, 16 * (v111 - 1 - v110));
    *((void *)v132 + 2) = v111 - 1;
    Swift::Int v9 = v129;
    if (v111 <= 2) {
      goto LABEL_108;
    }
  }
LABEL_113:
  swift_bridgeObjectRelease();
  if (v127 < -1) {
    goto LABEL_156;
  }
  v126[2] = 0;
  swift_bridgeObjectRelease_n();
LABEL_132:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = *a4;
    unint64_t v8 = (uint64_t *)(*a4 + 16 * a3);
    while (2)
    {
      uint64_t v9 = *(void *)(v7 + 16 * v6 + 8);
      uint64_t v10 = a1;
      uint64_t v24 = v8;
      do
      {
        uint64_t v12 = *(v8 - 2);
        uint64_t v11 = *(v8 - 1);
        if (*(void *)(a5 + 16))
        {
          uint64_t v13 = *v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(v13, v9);
          double v15 = 0.0;
          double v16 = 0.0;
          if (v17) {
            double v16 = *(double *)(*(void *)(a5 + 56) + 8 * v14);
          }
          if (*(void *)(a5 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(v12, v11);
            if (v19) {
              double v15 = *(double *)(*(void *)(a5 + 56) + 8 * v18);
            }
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          double v16 = 0.0;
          double v15 = 0.0;
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v15 >= v16) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v21 = *v8;
        uint64_t v9 = v8[1];
        *(_OWORD *)unint64_t v8 = *((_OWORD *)v8 - 1);
        *(v8 - 1) = v9;
        *(v8 - 2) = v21;
        v8 -= 2;
        ++v10;
      }
      while (v6 != v10);
      ++v6;
      unint64_t v8 = v24 + 2;
      if (v6 != a2) {
        continue;
      }
      break;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  unint64_t v8 = a2;
  uint64_t v9 = a1;
  uint64_t v10 = a2 - a1;
  uint64_t v11 = (a2 - a1) / 16;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 16;
  if (v11 >= v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v51 = a4;
    double v31 = &a4[16 * v13];
    if (v9 >= v8 || v12 <= 15)
    {
      double v16 = (uint64_t *)a4;
      unint64_t v14 = &a4[16 * v13];
      goto LABEL_59;
    }
    char v33 = (char *)(a3 - 16);
    unint64_t v14 = v31;
    while (1)
    {
      unint64_t v34 = (uint64_t *)(v14 - 16);
      uint64_t v35 = *((void *)v14 - 1);
      uint64_t v37 = *((void *)v8 - 2);
      uint64_t v36 = *((void *)v8 - 1);
      if (*(void *)(a5 + 16))
      {
        uint64_t v38 = *v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v39 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v35);
        double v40 = 0.0;
        double v41 = 0.0;
        if (v42) {
          double v41 = *(double *)(*(void *)(a5 + 56) + 8 * v39);
        }
        if (*(void *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v43 = specialized __RawDictionaryStorage.find<A>(_:)(v37, v36);
          if (v44) {
            double v40 = *(double *)(*(void *)(a5 + 56) + 8 * v43);
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v41 = 0.0;
        double v40 = 0.0;
      }
      uint64_t v45 = v33 + 16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40 >= v41)
      {
        BOOL v48 = v45 != v14 || v33 >= v14;
        v14 -= 16;
        uint64_t v47 = v51;
        if (!v48) {
          goto LABEL_54;
        }
      }
      else
      {
        BOOL v46 = v45 != v8 || v33 >= v8;
        unint64_t v34 = (uint64_t *)(v8 - 16);
        v8 -= 16;
        uint64_t v47 = v51;
        if (!v46) {
          goto LABEL_54;
        }
      }
      *(_OWORD *)char v33 = *(_OWORD *)v34;
LABEL_54:
      v33 -= 16;
      if (v8 <= v9 || v14 <= v47)
      {
        double v16 = (uint64_t *)v51;
        goto LABEL_59;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 16, a4);
  unint64_t v14 = &a4[16 * v11];
  BOOL v15 = (unint64_t)v8 >= a3 || v10 <= 15;
  double v16 = (uint64_t *)a4;
  if (!v15)
  {
    while (1)
    {
      uint64_t v17 = *((void *)v8 + 1);
      uint64_t v18 = v16[1];
      if (*(void *)(a5 + 16))
      {
        uint64_t v19 = *v16;
        uint64_t v20 = *(void *)v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)(v20, v17);
        double v22 = 0.0;
        double v23 = 0.0;
        if (v24) {
          double v23 = *(double *)(*(void *)(a5 + 56) + 8 * v21);
        }
        if (*(void *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v25 = specialized __RawDictionaryStorage.find<A>(_:)(v19, v18);
          if (v26) {
            double v22 = *(double *)(*(void *)(a5 + 56) + 8 * v25);
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v23 = 0.0;
        double v22 = 0.0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22 < v23) {
        break;
      }
      uint64_t v28 = v16;
      BOOL v27 = v9 == (char *)v16;
      v16 += 2;
      if (!v27) {
        goto LABEL_21;
      }
LABEL_22:
      v9 += 16;
      if (v16 >= (uint64_t *)v14 || (unint64_t)v8 >= a3) {
        goto LABEL_27;
      }
    }
    BOOL v27 = v9 == v8;
    uint64_t v28 = v8;
    v8 += 16;
    if (v27 && v9 < v8) {
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)uint64_t v9 = *v28;
    goto LABEL_22;
  }
LABEL_27:
  unint64_t v8 = v9;
LABEL_59:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)v16, (v14 - (char *)v16) / 16, v8);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t outlined release of _NativeDictionary<String, Double>.Iterator(uint64_t a1)
{
  return a1;
}

void *AddCallParticipantContactSlotResolver.__allocating_init(rchFlowContext:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  unint64_t v8 = (void *)swift_allocObject();
  uint64_t v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(v8 + 5));
  return v8;
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySay27PhoneCallFlowDelegatePlugin04SiriF7Contact_pGSaySo8INPersonCGG_ALs5NeverOTg504_s27fghi25Plugin03AddB30Participantl45SlotResolverC07resolveI08skIntent02nlM0SaySo8m13CGSo05INAddbgY63C_AA0aB8NLIntent_ptYaKFAhA04SiriaH0_p_AHtcACcfu_AhaM_p_AHtcfu0_AH0qgsltU0CTf1cn_n(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v22 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_40;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    uint64_t v6 = v5 >= v4 ? v4 : v5;
    uint64_t v28 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v6 < 0) {
      break;
    }
    uint64_t v19 = v5;
    unint64_t v20 = v3;
    uint64_t v21 = v4;
    if (v6)
    {
      uint64_t v7 = v3 + 32;
      uint64_t v4 = a2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v3 = a2 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v8 = 0;
      while (v6 != v8)
      {
        outlined init with copy of SignalProviding(v7, (uint64_t)v24);
        if (v22)
        {
          swift_bridgeObjectRetain();
          uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v9 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
        }
        if (v8 == v9) {
          goto LABEL_42;
        }
        if (v3)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v8 >= *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_37;
          }
          id v10 = *(id *)(a2 + 8 * v8 + 32);
        }
        uint64_t v11 = v10;
        ++v8;
        outlined init with take of AppSelectionSignalComponent(v24, (uint64_t)v26);
        *((void *)&v27 + 1) = v11;
        AddCallParticipantContactSlotResolver.downgradePartialMatches(contact:skeleton:)(v26, v11);
        outlined destroy of SubmitCommandError?((uint64_t)v26, &demangling cache variable for type metadata for (SiriPhoneContact, INPerson));
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v7 += 40;
        if (v6 == v8) {
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_21:
      unint64_t v3 = v20;
      uint64_t v12 = v21;
      if (v21 <= v19)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v28;
        swift_release();
        return (uint64_t)v17;
      }
      uint64_t v13 = v20 + 40 * v6 + 32;
      while (v6 < v12)
      {
        outlined init with copy of SignalProviding(v13, (uint64_t)v23);
        if (v22)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v14 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
        }
        if (v6 == v14)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
          goto LABEL_35;
        }
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((unint64_t)v6 >= *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_39;
          }
          id v15 = *(id *)(a2 + 8 * v6 + 32);
        }
        double v16 = v15;
        ++v6;
        outlined init with take of AppSelectionSignalComponent(v23, (uint64_t)v24);
        *((void *)&v25 + 1) = v16;
        v26[0] = v24[0];
        v26[1] = v24[1];
        long long v27 = v25;
        AddCallParticipantContactSlotResolver.downgradePartialMatches(contact:skeleton:)(v26, v16);
        outlined destroy of SubmitCommandError?((uint64_t)v26, &demangling cache variable for type metadata for (SiriPhoneContact, INPerson));
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v4 = v28[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v13 += 40;
        uint64_t v12 = v21;
        if (v21 == v6) {
          goto LABEL_35;
        }
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_42:
  swift_release();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __break(1u);
  return result;
}

uint64_t SiriInferenceContactSlotResolver.rchFlowContext.getter()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  unint64_t v3 = (void *)v0[4];
  swift_retain();
  id v4 = v2;
  id v5 = v3;
  return v1;
}

void *AddCallParticipantContactSlotResolver.init(rchFlowContext:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(v4 + 5));
  return v4;
}

uint64_t AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[20] = v2;
  v1[21] = v0;
  v1[19] = v3;
  uint64_t v4 = type metadata accessor for ResolvedSiriKitContact();
  v1[22] = v4;
  v1[23] = *(void *)(v4 - 8);
  v1[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_11_0(v5);
  v1[25] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ContactResolverConfigHashable();
  OUTLINED_FUNCTION_11_0(v6);
  v1[26] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

void AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:)()
{
  unint64_t v87 = v0;
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3) + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "#AddCallParticipantContactSlotResolver user requested group name, which is not supported. Adding placeholder INPersons. This will force the extension to return MultipleContactsUnsupported, because we can only add 1 person at a time.", v8, 2u);
      OUTLINED_FUNCTION_6();
    }

    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    id v9 = objc_allocWithZone((Class)INPersonHandle);
    OUTLINED_FUNCTION_11_1();
    id v13 = @nonobjc INPersonHandle.init(value:type:)(v10, v11, v12);
    Class isa = INPerson.init(personHandle:)((INPersonHandle)v13).super.isa;
    uint64_t v15 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    double v16 = (void *)(v15 & 0xFFFFFFFFFFFFFF8);
    v16[2] = 2;
    char v86 = (void *)v15;
    v16[4] = isa;
    v16[5] = isa;
    uint64_t v17 = isa;
    specialized Array._endMutation()();
    unint64_t v18 = (unint64_t)v86;
  }
  else
  {
    uint64_t v78 = (uint64_t)(v0 + 7);
    unint64_t v20 = _swiftEmptyArrayStorage;
    if (*(void *)(v0[21] + 16))
    {
      uint64_t v21 = App.appIdentifier.getter();
      if (v22)
      {
        uint64_t v23 = v21;
        uint64_t v24 = v22;
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v20 = v25;
        unint64_t v26 = v25[2];
        if (v26 >= v25[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          unint64_t v20 = v73;
        }
        v20[2] = v26 + 1;
        long long v27 = &v20[2 * v26];
        v27[4] = v23;
        v27[5] = v24;
      }
      else
      {
        unint64_t v20 = _swiftEmptyArrayStorage;
      }
    }
    BOOL v81 = v0 + 12;
    uint64_t v83 = (uint64_t)v20;
    uint64_t v80 = v1;
    if (one-time initialization token for emptyAddCallParticipantIntent != -1) {
      swift_once();
    }
    uint64_t v28 = v0[25];
    uint64_t v29 = (uint64_t *)v0[26];
    uint64_t v76 = (void *)v0[19];
    unint64_t v30 = (void *)v0[21];
    uint64_t v77 = (void *)v0[20];
    id v31 = [(id)static PhoneCallIntentClassNames.emptyAddCallParticipantIntent _className];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v74 = v33;
    uint64_t v75 = v32;

    unint64_t v34 = v30 + 5;
    uint64_t v36 = v30[8];
    uint64_t v35 = v30[9];
    __swift_project_boxed_opaque_existential_1(v30 + 5, v36);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v35);
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    dispatch thunk of DeviceState.siriLocale.getter();
    outlined init with copy of SignalProviding((uint64_t)(v30 + 5), v78);
    swift_bridgeObjectRetain();
    ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)(v75, v74, v28, v83, v76, (uint64_t)&protocol witness table for INAddCallParticipantIntent, v78, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    uint64_t v37 = v30[8];
    uint64_t v38 = v30[9];
    __swift_project_boxed_opaque_existential_1(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 96))(v37, v38);
    uint64_t v39 = v0[16];
    __swift_project_boxed_opaque_existential_1(v81, v0[15]);
    double v40 = v1;
    uint64_t v41 = v1[3];
    uint64_t v42 = v1[4];
    __swift_project_boxed_opaque_existential_1(v77, v41);
    (*(void (**)(uint64_t, uint64_t))(v42 + 128))(v41, v42);
    uint64_t v43 = (*(uint64_t (**)(void))(v39 + 16))();
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void *)(v43 + 16);
    if (v44)
    {
      uint64_t v45 = v0[23];
      char v86 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      BOOL v48 = *(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16);
      uint64_t v47 = v45 + 16;
      BOOL v46 = v48;
      unint64_t v49 = v43 + ((*(unsigned __int8 *)(v47 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 64));
      uint64_t v50 = *(void *)(v47 + 56);
      do
      {
        uint64_t v51 = v0[24];
        uint64_t v52 = v0[22];
        v46(v51, v49, v52);
        ResolvedSiriKitContact.person.getter();
        (*(void (**)(uint64_t, uint64_t))(v47 - 8))(v51, v52);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v49 += v50;
        --v44;
      }
      while (v44);
      double v53 = v86;
      swift_bridgeObjectRelease();
      double v40 = v80;
    }
    else
    {
      swift_bridgeObjectRelease();
      double v53 = _swiftEmptyArrayStorage;
    }
    char v54 = (void *)v0[20];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    uint64_t v56 = v40[3];
    uint64_t v55 = v40[4];
    __swift_project_boxed_opaque_existential_1(v54, v56);
    unint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 24))(v56, v55);
    swift_retain_n();
    unint64_t v18 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySay27PhoneCallFlowDelegatePlugin04SiriF7Contact_pGSaySo8INPersonCGG_ALs5NeverOTg504_s27fghi25Plugin03AddB30Participantl45SlotResolverC07resolveI08skIntent02nlM0SaySo8m13CGSo05INAddbgY63C_AA0aB8NLIntent_ptYaKFAhA04SiriaH0_p_AHtcACcfu_AhaM_p_AHtcfu0_AH0qgsltU0CTf1cn_n(v57, (unint64_t)v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    unint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      os_log_type_t v82 = v60;
      BOOL v84 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      *(_DWORD *)BOOL v84 = 136315138;
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v61 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
      }
      if (v61)
      {
        char v86 = _swiftEmptyArrayStorage;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        if (v61 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v62 = 0;
        unint64_t v63 = v86;
        do
        {
          if ((v18 & 0xC000000000000001) != 0) {
            id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v64 = *(id *)(v18 + 8 * v62 + 32);
          }
          uint64_t v65 = v64;
          uint64_t v66 = (void *)outlined bridged method (pb) of @objc INPerson.scoredAlternatives.getter(v64);

          if (!v66) {
            uint64_t v66 = _swiftEmptyArrayStorage;
          }
          char v86 = v63;
          unint64_t v67 = v63[2];
          if (v67 >= v63[3] >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            unint64_t v63 = v86;
          }
          ++v62;
          v63[2] = v67 + 1;
          v63[v67 + 4] = v66;
        }
        while (v61 != v62);
      }
      uint64_t v79 = v0[26];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INScoredPerson]);
      uint64_t v70 = Array.description.getter();
      unint64_t v72 = v71;
      swift_bridgeObjectRelease();
      v0[18] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v72, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v59, v82, "#AddCallParticipantContactSlotResolver resolved contacts: %s", v84, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      uint64_t v69 = v79;
    }
    else
    {
      uint64_t v68 = v0[26];

      swift_bridgeObjectRelease_n();
      uint64_t v69 = v68;
    }
    outlined destroy of ContactResolverConfigHashable(v69);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (void (*)(unint64_t))v0[1];
  v19(v18);
}

uint64_t AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v11 = OUTLINED_FUNCTION_11_0(v10);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  outlined init with copy of SignalProviding(a2, (uint64_t)v19);
  double v16 = (void *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v5;
  v16[5] = a1;
  outlined init with take of AppSelectionSignalComponent(v19, (uint64_t)(v16 + 6));
  v16[11] = a3;
  v16[12] = a4;
  swift_retain();
  id v17 = a1;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v14, (uint64_t)&async function pointer to partial apply for closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:), (uint64_t)v16);
  return swift_release();
}

uint64_t closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  return _swift_task_switch(closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:), 0, 0);
}

uint64_t closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  *uint64_t v3 = v0;
  v3[1] = closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:);
  return Result<>.init(catching:)(v0 + 16, &async function pointer to partial apply for closure #1 in closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:), v2, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  (*(void (**)(uint64_t, void, void))(v0 + 56))(v1, 0, (v2 << 8));
  outlined consume of Result<[SAAceView], Error>(v1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t closure #1 in closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  id v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)a2 + 104) + **(int **)(*(void *)a2 + 104));
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *os_log_type_t v7 = v4;
  v7[1] = closure #1 in closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:);
  return v9(a3, a4);
}

uint64_t closure #1 in closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *os_log_type_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v10, v11, v12);
  }
}

{
  uint64_t v0;

  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void AddCallParticipantContactSlotResolver.updateIntent(value:skIntent:)(Swift::OpaquePointer a1)
{
}

void *AddCallParticipantContactSlotResolver.downgradePartialMatches(contact:skeleton:)(void *a1, void *a2)
{
  uint64_t v4 = outlined bridged method (pb) of @objc INPerson.scoredAlternatives.getter(a2);
  if (v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_6;
    }
LABEL_35:
    swift_bridgeObjectRelease_n();
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_35;
  }
LABEL_6:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v5 & 0xC000000000000001) == 0);
  if ((v5 & 0xC000000000000001) != 0) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v7 = *(id *)(v5 + 32);
  }
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (v9 != 1 || [v8 recommendation])
  {
LABEL_28:

LABEL_36:
    id v33 = a2;
    return a2;
  }
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 384))(v35, v10, v11);
  if (v36 != 2)
  {
    if (v36 == 255) {
      outlined destroy of SubmitCommandError?((uint64_t)v35, &demangling cache variable for type metadata for BackingContact?);
    }
    else {
      outlined destroy of BackingContact((uint64_t)v35);
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    unint64_t v18 = (void *)Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_21_19(v19))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_16_4(&dword_0, v20, v21, "#AddCallParticipantContactSlotResolver INAddCallParticipantIntent is only supported on NLX. This should never happen!");
      OUTLINED_FUNCTION_6();
    }

    goto LABEL_28;
  }
  outlined init with take of AppSelectionSignalComponent(v35, (uint64_t)v37);
  if (AddCallParticipantContactSlotResolver.isFullMatch(contact:)(v37))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    uint64_t v13 = (void *)Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_21_19(v14))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_16_4(&dword_0, v15, v16, "#AddCallParticipantContactSlotResolver Use existing recommendation for full name match");
      OUTLINED_FUNCTION_6();
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    goto LABEL_36;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  uint64_t v23 = (void *)Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_21_19(v24))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_16_4(&dword_0, v25, v26, "#AddCallParticipantContactSlotResolver Downgrade confident => needsConfirmation for partial name match");
    OUTLINED_FUNCTION_6();
  }

  id v27 = [v8 person];
  id v28 = [objc_allocWithZone((Class)INScoredPerson) initWithPerson:v27 recommendation:1];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_46A030;
  *(void *)(v29 + 32) = v28;
  *(void *)&v35[0] = v29;
  specialized Array._endMutation()();
  uint64_t v30 = *(void *)&v35[0];
  id v31 = v28;
  outlined bridged method (mbgnn) of @objc INPerson.scoredAlternatives.setter(v30, a2);
  id v32 = a2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return a2;
}

uint64_t AddCallParticipantContactSlotResolver.isFullMatch(contact:)(void *a1)
{
  uint64_t matched = type metadata accessor for MatchInfo.MatchSignals();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v55 = v6 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MatchInfo?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  uint64_t v62 = type metadata accessor for UsoEntitySpan();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v65 = (char *)&v52 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  os_log_type_t v24 = UsoContactConvertible.nameSpans.getter(v22, v23);
  uint64_t v25 = v24;
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v66 = (char *)_swiftEmptyArrayStorage;
  uint64_t v27 = v24[2];
  if (v27)
  {
    uint64_t v53 = v3;
    char v54 = v17;
    unint64_t v28 = 0;
    unint64_t v57 = v13 + 1;
    uint64_t v58 = v27;
    unint64_t v63 = (void (**)(uint64_t, uint64_t))(v13 + 4);
    uint64_t v64 = (uint64_t)(v13 + 2);
    uint64_t v29 = v62;
    os_log_type_t v60 = v13;
    uint64_t v61 = v11;
    unint64_t v59 = v24;
    while (v28 < v25[2])
    {
      unint64_t v30 = (*((unsigned __int8 *)v13 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v13 + 80);
      uint64_t v31 = v13[9];
      ((void (*)(char *, unint64_t, uint64_t))v13[2])(v21, (unint64_t)v25 + v30 + v31 * v28, v29);
      if (closure #1 in AddCallParticipantContactSlotResolver.isFullMatch(contact:)((uint64_t)v21))
      {
        id v32 = *v63;
        ((void (*)(char *, char *, uint64_t))*v63)(v65, v21, v29);
        id v33 = v66;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v29 = v62;
          id v33 = v66;
        }
        unint64_t v34 = *((void *)v33 + 2);
        if (v34 >= *((void *)v33 + 3) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v29 = v62;
          id v33 = v66;
        }
        *((void *)v33 + 2) = v34 + 1;
        ((void (*)(char *, char *, uint64_t))v32)(&v33[v30 + v34 * v31], v65, v29);
        uint64_t v66 = v33;
        uint64_t v13 = v60;
        uint64_t v11 = v61;
        uint64_t v27 = v58;
        uint64_t v25 = v59;
      }
      else
      {
        uint64_t v35 = OUTLINED_FUNCTION_10_55();
        v36(v35);
      }
      if (v27 == ++v28)
      {
        uint64_t v26 = v66;
        uint64_t v3 = v53;
        uint64_t v17 = v54;
        goto LABEL_14;
      }
    }
    __break(1u);
    uint64_t v50 = OUTLINED_FUNCTION_10_55();
    v51(v50);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v29 = v62;
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v37 = v26[2];
    if (v37)
    {
      uint64_t v39 = (char *)v13[2];
      uint64_t v38 = v13 + 2;
      double v40 = (char *)v26 + ((*((unsigned __int8 *)v38 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v38 + 64));
      unint64_t v63 = (void (**)(uint64_t, uint64_t))(v3 + 8);
      uint64_t v64 = v38[7];
      uint64_t v65 = v39;
      os_log_type_t v60 = v26;
      swift_retain();
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v65)(v17, v40, v29);
        UsoEntitySpan.matchInfo.getter();
        uint64_t v41 = v17;
        uint64_t v42 = type metadata accessor for MatchInfo();
        if (__swift_getEnumTagSinglePayload(v11, 1, v42) == 1)
        {
          outlined destroy of SubmitCommandError?(v11, &demangling cache variable for type metadata for MatchInfo?);
          uint64_t v43 = OUTLINED_FUNCTION_7_67();
          v44(v43);
        }
        else
        {
          uint64_t v45 = v55;
          static MatchInfo.MatchSignals.exactMatch.getter();
          char v46 = MatchInfo.hasMatchSignals(_:)();
          (*v63)(v45, matched);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v11, v42);
          uint64_t v47 = OUTLINED_FUNCTION_7_67();
          v48(v47);
          uint64_t v17 = v41;
          if (v46)
          {
            swift_release_n();
            return 1;
          }
        }
        v40 += v64;
        --v37;
        uint64_t v29 = v62;
        if (!v37)
        {
          swift_release_n();
          return 0;
        }
      }
    }
    swift_release();
    return 0;
  }
  return result;
}

uint64_t closure #1 in AddCallParticipantContactSlotResolver.isFullMatch(contact:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IdentifierAppBundle();
  uint64_t v52 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v51 = &v48[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v50 = &v48[-v5];
  uint64_t v57 = type metadata accessor for UsoEntitySpan();
  uint64_t v54 = *(void *)(v57 - 8);
  uint64_t v6 = __chkstk_darwin(v57);
  uint64_t v56 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v58 = &v48[-v8];
  uint64_t v9 = type metadata accessor for UsoEntitySpan.SpanSource();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntitySpan.SpanSource?, UsoEntitySpan.SpanSource?));
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = &v48[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = &v48[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = &v48[-v22];
  __chkstk_darwin(v21);
  uint64_t v25 = &v48[-v24];
  uint64_t v55 = a1;
  UsoEntitySpan.sourceComponent.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v23, enum case for UsoEntitySpan.SpanSource.spanMatchSiriVocab(_:), v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v9);
  uint64_t v26 = (uint64_t)&v16[*(int *)(v14 + 56)];
  outlined init with copy of UsoEntitySpan.SpanSource?((uint64_t)v25, (uint64_t)v16);
  outlined init with copy of UsoEntitySpan.SpanSource?((uint64_t)v23, v26);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9) == 1)
  {
    uint64_t v27 = &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?;
    outlined destroy of SubmitCommandError?((uint64_t)v23, &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
    outlined destroy of SubmitCommandError?((uint64_t)v25, &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
    if (__swift_getEnumTagSinglePayload(v26, 1, v9) == 1)
    {
      char v28 = -1;
    }
    else
    {
      uint64_t v27 = &demangling cache variable for type metadata for (UsoEntitySpan.SpanSource?, UsoEntitySpan.SpanSource?);
      char v28 = 0;
    }
  }
  else
  {
    outlined init with copy of UsoEntitySpan.SpanSource?((uint64_t)v16, (uint64_t)v20);
    if (__swift_getEnumTagSinglePayload(v26, 1, v9) == 1)
    {
      outlined destroy of SubmitCommandError?((uint64_t)v23, &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
      outlined destroy of SubmitCommandError?((uint64_t)v25, &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v20, v9);
      char v28 = 0;
      uint64_t v27 = &demangling cache variable for type metadata for (UsoEntitySpan.SpanSource?, UsoEntitySpan.SpanSource?);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 32))(v12, v26, v9);
      lazy protocol witness table accessor for type UsoEntitySpan.SpanSource and conformance UsoEntitySpan.SpanSource();
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
      v29(v12, v9);
      uint64_t v27 = &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?;
      outlined destroy of SubmitCommandError?((uint64_t)v23, &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
      outlined destroy of SubmitCommandError?((uint64_t)v25, &demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
      v29(v20, v9);
    }
  }
  uint64_t v30 = v57;
  outlined destroy of SubmitCommandError?((uint64_t)v16, v27);
  uint64_t v31 = v54;
  uint64_t v32 = v55;
  id v33 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 16);
  unint64_t v34 = v58;
  v33(v58, v55, v30);
  if ((v28 & 1) == 0)
  {
    uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
    v41(v34, v30);
    uint64_t v42 = v56;
    v33(v56, v32, v30);
LABEL_17:
    v41(v42, v30);
    char v46 = 0;
    return v46 & 1;
  }
  uint64_t v35 = v50;
  UsoEntitySpan.appBundleSemantic.getter();
  unsigned __int8 v36 = v51;
  uint64_t v37 = v52;
  uint64_t v38 = v53;
  (*(void (**)(unsigned char *, void, uint64_t))(v52 + 104))(v51, enum case for IdentifierAppBundle.abContacts(_:), v53);
  int v49 = static IdentifierAppBundle.== infix(_:_:)();
  uint64_t v39 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
  v39(v36, v38);
  double v40 = v35;
  uint64_t v30 = v57;
  v39(v40, v38);
  uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
  v41(v58, v30);
  uint64_t v42 = v56;
  v33(v56, v32, v30);
  if ((v49 & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v43 = UsoEntitySpan.label.getter();
  if (!v44) {
    goto LABEL_17;
  }
  if (v43 == 0x75466E6F73726570 && v44 == 0xEE00656D614E6C6CLL) {
    char v46 = 1;
  }
  else {
    char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  v41(v42, v30);
  swift_bridgeObjectRelease();
  return v46 & 1;
}

uint64_t SiriInferenceContactSlotResolver.deinit()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return v0;
}

uint64_t AddCallParticipantContactSlotResolver.__deallocating_deinit()
{
  SiriInferenceContactSlotResolver.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:) in conformance AddCallParticipantContactSlotResolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  OUTLINED_FUNCTION_0_53();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 104) + **(int **)(v6 + 104));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:) in conformance AddCallParticipantContactSlotResolver;
  return v9(a2, a3);
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:) in conformance AddCallParticipantContactSlotResolver()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
  return v8();
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:_:) in conformance AddCallParticipantContactSlotResolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, __int16), uint64_t))(**(void **)v4 + 112);
  swift_retain();
  v10(a1, a2, partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<[INPerson], SlotResolverError>) -> (), v9);

  return swift_release();
}

uint64_t protocol witness for SlotResolver.updateIntent(value:skIntent:) in conformance AddCallParticipantContactSlotResolver()
{
  OUTLINED_FUNCTION_0_53();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t protocol witness for SKIntentResolver.shouldRunResolver(skIntent:nlIntent:) in conformance AddCallParticipantContactSlotResolver()
{
  OUTLINED_FUNCTION_0_53();
  return (*(uint64_t (**)(void))(v0 + 128))() & 1;
}

uint64_t outlined bridged method (pb) of @objc INPerson.scoredAlternatives.getter(void *a1)
{
  id v1 = [a1 scoredAlternatives];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INScoredPerson);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_2F48DC()
{
  swift_unknownObjectRelease();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t partial apply for closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = (uint64_t)(v0 + 6);
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  uint64_t v8 = OUTLINED_FUNCTION_13_43();
  return closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(v8, v9, v10, v2, v3, v4, v6, v5);
}

uint64_t type metadata accessor for AddCallParticipantContactSlotResolver()
{
  return self;
}

uint64_t outlined init with copy of UsoEntitySpan.SpanSource?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntitySpan.SpanSource?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type UsoEntitySpan.SpanSource and conformance UsoEntitySpan.SpanSource()
{
  unint64_t result = lazy protocol witness table cache variable for type UsoEntitySpan.SpanSource and conformance UsoEntitySpan.SpanSource;
  if (!lazy protocol witness table cache variable for type UsoEntitySpan.SpanSource and conformance UsoEntitySpan.SpanSource)
  {
    type metadata accessor for UsoEntitySpan.SpanSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UsoEntitySpan.SpanSource and conformance UsoEntitySpan.SpanSource);
  }
  return result;
}

uint64_t outlined destroy of BackingContact(uint64_t a1)
{
  return a1;
}

uint64_t sub_2F4B34()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<[INPerson], SlotResolverError>) -> ()(uint64_t a1, uint64_t a2, __int16 a3)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed Result<[INPerson], SlotResolverError>) -> ()(a1, a2, a3 & 0x1FF, *(uint64_t (**)(void *))(v3 + 16));
}

uint64_t partial apply for closure #1 in closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  uint64_t v4 = OUTLINED_FUNCTION_13_43();
  return closure #1 in closure #1 in AddCallParticipantContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(v4, v5, v6, v2);
}

uint64_t OUTLINED_FUNCTION_7_67()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_43()
{
  return v0;
}

uint64_t static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  outlined init with copy of SignalProviding(a4, (uint64_t)v21);
  uint64_t v13 = type metadata accessor for PhoneSelfPerformanceLogger();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v20 = a6;
  v21[0] = PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)((uint64_t)v21, a1, a2, a3);
  uint64_t v18 = a7;
  uint64_t v19 = a5;
  v16[2] = a7;
  v16[3] = partial apply for closure #1 in static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:);
  v16[4] = &v17;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  _ss20withExtendedLifetimeyq0_x_q0_xq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lF((uint64_t)v21, (uint64_t)partial apply for thunk for @callee_guaranteed (@guaranteed PhoneSelfPerformanceLogger) -> (@out A, @error @owned Error), (uint64_t)v16, v13, v14, a7, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v22);
  return swift_release();
}

{
  uint64_t v13;
  uint64_t v14;
  void v16[6];
  uint64_t v17;
  unsigned char v18[40];

  outlined init with copy of SignalProviding(a4, (uint64_t)v18);
  uint64_t v13 = type metadata accessor for PhoneSelfPerformanceLogger();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  char v17 = PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)((uint64_t)v18, a1, a2, a3);
  v16[2] = a7;
  v16[3] = a5;
  v16[4] = a6;
  _ss20withExtendedLifetimeyq0_x_q0_yq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lF((uint64_t)&v17, (uint64_t)partial apply for closure #1 in static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:), (uint64_t)v16, v13, (uint64_t)&type metadata for Never, a7, (uint64_t)&protocol witness table for Never, v14);
  return swift_release();
}

uint64_t _ss20withExtendedLifetimeyq0_x_q0_yq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v14(v13);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v13, a5);
  }
  return result;
}

uint64_t closure #1 in static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = a2();
  if (v2)
  {
    PhoneSelfPerformanceLogger.createAndLogFailureEvent()();
    return swift_willThrow();
  }
  return result;
}

uint64_t partial apply for closure #1 in static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)(uint64_t a1)
{
  return closure #1 in static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)(a1, *(uint64_t (**)(void))(v1 + 24));
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed PhoneSelfPerformanceLogger) -> (@out A, @error @owned Error)(void *a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 24))(*a1);
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t _ss20withExtendedLifetimeyq0_x_q0_xq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t partial apply for closure #1 in static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

void PhoneSelfPerformanceLogger.createAndLogFailureEvent()()
{
  id v1 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainExecutionFailed) init];
  if (v1)
  {
    uint64_t v2 = v1;
    PhoneSelfPerformanceLogger.logEvent(_:eventType:)((uint64_t)v1, 1);

    *(unsigned char *)(v0 + 88) = 1;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_4_24(v3, (uint64_t)static Logger.siriPhone);
    uint64_t v4 = (void *)Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_21_19(v5))
    {
      OUTLINED_FUNCTION_4_55();
      uint64_t v10 = OUTLINED_FUNCTION_11_29();
      uint64_t v6 = OUTLINED_FUNCTION_4_76(4.8149e-34);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v10);
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_6(&dword_0, v8, v9, "#PhoneSelfPerformanceLogger Failed to register end event for %s");
      OUTLINED_FUNCTION_6_71();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
  }
}

uint64_t OUTLINED_FUNCTION_4_76(float a1)
{
  *id v1 = a1;
  return FLOWSchemaFLOWDomainExecutionType.description.getter();
}

uint64_t OUTLINED_FUNCTION_6_71()
{
  return swift_arrayDestroy();
}

uint64_t StartAudioCallFlow.__allocating_init(app:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  return StartAudioCallFlow.init(app:sharedGlobals:)(a1, a2);
}

uint64_t StartAudioCallFlow.init(app:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  os_log_type_t v5 = (void *)(v2 + direct field offset for StartAudioCallFlow.flowName);
  *os_log_type_t v5 = 0xD000000000000012;
  v5[1] = 0x8000000000482980;
  outlined init with copy of SignalProviding(a2, (uint64_t)v8);
  uint64_t v6 = specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)(a1, 0xD000000000000012, 0x8000000000482980, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v6;
}

uint64_t StartAudioCallFlow.makeRCHFlow(input:intent:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v46 = v6;
  uint64_t v47 = v5;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v48 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v43 = v9;
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v45 = v10;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  __chkstk_darwin(v42);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CATOption();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v15 = *(void (**)(void))(*(void *)v3 + 152);
  ((void (*)(void *__return_ptr, uint64_t))v15)(v54, v14);
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)static BiomeEventSender.instance;
  type metadata accessor for StartAudioCallRCHFlowDelegate();
  uint64_t v17 = swift_allocObject();
  id v18 = v16;
  swift_retain();
  uint64_t v19 = specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)((uint64_t)v54, a3, (uint64_t)v18, v17);
  uint64_t v41 = v19;
  OUTLINED_FUNCTION_2_54();
  v15();
  type metadata accessor for PhoneCallDisplayTextCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v20 = CATWrapperSimple.__allocating_init(options:globals:)();
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v21 = CATWrapperSimple.__allocating_init(options:globals:)();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  swift_allocObject();
  uint64_t v23 = specialized CallingIntentRCHFlowStrategy.init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)(v54, a3, v20, v21);
  swift_retain();
  specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)(v19, a3, v24, v25, v26, v27, v28, v29, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50,
    v51[0]);
  OUTLINED_FUNCTION_2_54();
  v15();
  uint64_t v30 = v55;
  uint64_t v31 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v31 + 104))(v51, v30, v31);
  uint64_t v33 = v52;
  uint64_t v32 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v50 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v45, &v12[*(int *)(v42 + 36)], v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v48, v12, v47);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  swift_allocObject();
  uint64_t v34 = RCHChildFlowFactory.init(producers:withFallbacks:)();
  uint64_t v35 = a3;
  unsigned __int8 v36 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 8);
  unint64_t v37 = lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>();
  uint64_t v38 = v36(&v50, v34, v35, v49, v22, v37, v33, v32);
  swift_release();
  swift_release();
  outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>((uint64_t)v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v38;
}

void StartAudioCallFlow.init(app:flowName:sharedGlobals:)()
{
}

void StartAudioCallFlow.init(state:app:flowName:sharedGlobals:)()
{
}

uint64_t StartAudioCallFlow.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

uint64_t StartAudioCallFlow.deinit()
{
  uint64_t v0 = specialized CallingFlowAbstraction.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StartAudioCallFlow.__deallocating_deinit()
{
  specialized CallingFlowAbstraction.deinit();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>;
  if (!lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>);
  }
  return result;
}

uint64_t outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StartAudioCallFlow()
{
  uint64_t result = type metadata singleton initialization cache for StartAudioCallFlow;
  if (!type metadata singleton initialization cache for StartAudioCallFlow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for StartAudioCallFlow()
{
  return swift_initClassMetadata2();
}

void specialized INPersonContainingIntent.clearContactsSlotMatches()()
{
}

{
  specialized INPersonContainingIntent.clearContactsSlotMatches()((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter, (void (*)(void *))INStartCallIntent.overwriteContacts(newContacts:));
}

{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  uint64_t v0 = (unint64_t)INSearchCallHistoryIntent.contacts.getter();
  if (!v0)
  {
    OUTLINED_FUNCTION_10_7();
    return;
  }
  id v1 = v0;
  if (v0 >> 62)
  {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8));
    if (!v2) {
      goto LABEL_13;
    }
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v2 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v3 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      uint64_t v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v4 = *(id *)(v1 + 8 * v3 + 32);
    }
    ++v3;
    outlined bridged method (mbgnn) of @objc INPerson.alternatives.setter((uint64_t)_swiftEmptyArrayStorage, v4);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v2 != v3);
LABEL_13:
  swift_bridgeObjectRelease();
  INSearchCallHistoryIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
  OUTLINED_FUNCTION_10_7();
  swift_bridgeObjectRelease();
}

void specialized INPersonContainingIntent.clearContactsSlotMatches()(uint64_t (*a1)(uint64_t), void (*a2)(void *))
{
  unint64_t v4 = a1(v2);
  if (!v4)
  {
    OUTLINED_FUNCTION_10_7();
    return;
  }
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    if (!v6) {
      goto LABEL_13;
    }
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v6 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * v7 + 32);
    }
    ++v7;
    outlined bridged method (mbgnn) of @objc INPerson.alternatives.setter((uint64_t)_swiftEmptyArrayStorage, v8);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v6 != v7);
LABEL_13:
  swift_bridgeObjectRelease();
  a2(_swiftEmptyArrayStorage);
  OUTLINED_FUNCTION_10_7();
  swift_bridgeObjectRelease();
}

uint64_t specialized Sequence.allSatisfy(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  unint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  unint64_t v27 = a2 >> 62;
  while (1)
  {
    uint64_t result = outlined init with copy of SignalProviding(v5, (uint64_t)v23);
    if (v27)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
    }
    if (v4 == v7)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      goto LABEL_25;
    }
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
    if (v4 >= *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
      break;
    }
    id v8 = *(id *)(a2 + 8 * v4 + 32);
LABEL_9:
    id v9 = v8;
    outlined init with take of AppSelectionSignalComponent(v23, (uint64_t)&v24);
    *((void *)&v26 + 1) = v9;
    v23[1] = v25;
    long long v23[2] = v26;
    v23[0] = v24;
    long long v10 = v26;
    uint64_t v11 = *((void *)&v25 + 1);
    __swift_project_boxed_opaque_existential_1(v23, *((uint64_t *)&v25 + 1));
    uint64_t v12 = (*(uint64_t (**)(uint64_t, void))(v10 + 32))(v11, v10);
    if (!v13) {
      goto LABEL_22;
    }
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    swift_bridgeObjectRelease();
    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (!v16
      || (uint64_t v17 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(*((void **)&v10 + 1)), !v18))
    {
LABEL_22:
      outlined destroy of (SiriPhoneContact, INPerson)((uint64_t)v23);
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v19 = v17;
    unint64_t v20 = v18;
    swift_bridgeObjectRelease();
    if ((v20 & 0x2000000000000000) != 0) {
      uint64_t v21 = HIBYTE(v20) & 0xF;
    }
    else {
      uint64_t v21 = v19 & 0xFFFFFFFFFFFFLL;
    }
    outlined destroy of (SiriPhoneContact, INPerson)((uint64_t)v23);
    if (!v21) {
      goto LABEL_23;
    }
    ++v4;
    v5 += 40;
    if (v3 == v4) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

void static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t ObjectType = swift_getObjectType();
  LOBYTE(v19) = a10 & 1;
  specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(a1, a3, a4, a5, a6, a7, a8, a9, v19, a11, a12, ObjectType, a2, v20, a7, a8, v23, v24, v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31);
}

#error "2F629C: call analysis failed (funcsize=27)"

uint64_t ContactQuery.isEmpty.getter()
{
  uint64_t v0 = type metadata accessor for ContactQuery();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5 - v4;
  if (one-time initialization token for emptyQuery != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0, (uint64_t)static ContactQuery.emptyQuery);
  char v7 = static ContactQuery.== infix(_:_:)();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_12();
  v8();
  if (v7)
  {
    char v9 = 1;
  }
  else
  {
    if (one-time initialization token for emptyNLv4Query != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v0, (uint64_t)static ContactQuery.emptyNLv4Query);
    char v9 = static ContactQuery.== infix(_:_:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return v9 & 1;
}

void static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)()
{
  swift_getObjectType();

  specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)();
}

uint64_t closure #1 in static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)(a3, 1, a2, a4, (uint64_t)static CallStateProvider.instance);
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter();
}

void static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)()
{
  OUTLINED_FUNCTION_77_8();
  swift_getObjectType();
  OUTLINED_FUNCTION_106_2();

  specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)();
}

void closure #1 in static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v70 = v27;
  unint64_t v71 = v26;
  int v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  unint64_t v39 = v38;
  uint64_t v40 = type metadata accessor for PhoneError();
  __chkstk_darwin(v40);
  OUTLINED_FUNCTION_4();
  uint64_t v43 = (void *)(v42 - v41);
  if (!v37)
  {
    uint64_t v69 = v35;
    if (v39) {
      unint64_t v50 = v39;
    }
    else {
      unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
    }
    uint64_t v51 = one-time initialization token for siriPhone;
    swift_bridgeObjectRetain();
    if (v51 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_47();
      *(_DWORD *)uint64_t v55 = 134217984;
      if (v50 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v56 = *(void *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease();
      unint64_t v73 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v53, v54, "#EmergencyContactResolution Found %ld emergency contacts", v55, 0xCu);
      OUTLINED_FUNCTION_6();
    }
    else
    {

      uint64_t v57 = swift_bridgeObjectRelease_n();
    }
    __chkstk_darwin(v57);
    *(void *)&v66[-4] = a21;
    *(void *)&v66[-2] = a24;
    unint64_t v58 = (unint64_t)_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo12INCallRecordCG_So12SASTCardItemCs5NeverOTg5((void (*)(void))partial apply for closure #1 in closure #1 in static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:), (uint64_t)&v66[-8], v50);
    swift_bridgeObjectRelease();
    if (v58 >> 62)
    {
      OUTLINED_FUNCTION_21_36();
      _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_35_26();
    }
    else
    {
      OUTLINED_FUNCTION_78_7();
    }
    if ((uint64_t)v66 < 2) {
      goto LABEL_31;
    }
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(a23 + 8))(ObjectType, a23);
    if (!v60) {
      goto LABEL_31;
    }
    unint64_t v61 = v60;
    if (v60 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_24;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_24:
      uint64_t v62 = (void *)(v61 & 0xC000000000000001);
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v61 & 0xC000000000000001) == 0);
      if ((v61 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v63 = *(id *)(v61 + 32);
      }
      OUTLINED_FUNCTION_15_0();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_46A030;
      outlined bridged method (mbgnn) of @objc INPerson.alternatives.setter(v58, v62);
      id v65 = v62;
      swift_bridgeObjectRelease();
      *(void *)(v64 + 32) = v65;
      unint64_t v73 = v64;
      specialized Array._endMutation()();
      unint64_t v58 = v73;

      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
LABEL_31:
    v71(v58, 0);
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_errorRetain();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_42(v44, (uint64_t)static Logger.siriPhone);
  swift_errorRetain();
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_37_0(v46))
  {
    uint64_t v68 = v31;
    uint64_t v47 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v69 = v35;
    unint64_t v73 = OUTLINED_FUNCTION_14_0();
    v66[1] = v29;
    *(_DWORD *)uint64_t v47 = 136315138;
    uint64_t v67 = v33;
    swift_getErrorValue();
    uint64_t v48 = Error.localizedDescription.getter();
    uint64_t v24 = v49;
    uint64_t v72 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, (uint64_t *)&v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v45, v25, "#EmergencyContactResolution Error gathering emergency contacts: %s", v47, 0xCu);
    OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  *uint64_t v43 = v37;
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
  swift_allocError();
  OUTLINED_FUNCTION_3_4();
  swift_errorRetain();
  PhoneError.logged()(v24);
  outlined destroy of ContactResolverConfigHashable((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for PhoneError);
  v71((unint64_t)v45, 1);
  swift_errorRelease();
  swift_errorRelease();
LABEL_32:
  Signpost.OpenSignpost.end()();
  OUTLINED_FUNCTION_26_1();
}

id static EmergencyContactResolution.makeINPerson(emergencyContact:locale:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = outlined bridged method (pb) of @objc _HKEmergencyContact.phoneNumberLabel.getter(a1, (SEL *)&selRef_phoneNumberLabel);
  if (v6)
  {
    v28[0] = v5;
    v28[1] = v6;
    closure #1 in static EmergencyContactResolution.makeINPerson(emergencyContact:locale:)(v28, &v27);
    swift_bridgeObjectRelease();
    char v7 = v27;
  }
  else
  {
    char v7 = 0;
  }
  outlined bridged method (pb) of @objc _HKEmergencyContact.phoneNumberLabel.getter(a1, (SEL *)&selRef_relationship);
  if (v8)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  uint64_t v10 = outlined bridged method (pb) of @objc _HKEmergencyContact.phoneNumberLabel.getter(a1, (SEL *)&selRef_phoneNumber);
  uint64_t v12 = v11;
  id v13 = objc_allocWithZone((Class)INPersonHandle);
  id v14 = v7;
  id v15 = @nonobjc INPersonHandle.init(value:type:label:)(v10, v12, 2, v7);
  uint64_t v16 = type metadata accessor for PersonNameComponents();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v16);
  uint64_t v17 = outlined bridged method (pb) of @objc _HKEmergencyContact.phoneNumberLabel.getter(a1, (SEL *)&selRef_name);
  uint64_t v19 = v18;
  uint64_t v20 = outlined bridged method (pb) of @objc _HKEmergencyContact.phoneNumberLabel.getter(a1, (SEL *)&selRef_nameContactIdentifier);
  uint64_t v22 = v21;
  id v23 = objc_allocWithZone((Class)INPerson);
  id v24 = @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:)(v15, (uint64_t)v4, v17, v19, 0, v20, v22, 0, 0, v9);

  return v24;
}

void EmergencyContactResolution.populateEmergencyContacts(sirikitIntent:locale:medicalIDStore:)()
{
  OUTLINED_FUNCTION_24_0();
  v38[2] = v2;
  v38[3] = v3;
  uint64_t v5 = v4;
  char v7 = v6;
  v38[1] = *v0;
  uint64_t v40 = type metadata accessor for DispatchTimeInterval();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  id v13 = (void *)(v12 - v11);
  uint64_t v39 = type metadata accessor for DispatchTime();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_12_25();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v38 - v18;
  dispatch_semaphore_t v20 = dispatch_semaphore_create(0);
  swift_getObjectType();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  void v21[3] = v7;
  v21[4] = v5;
  uint64_t v22 = v20;
  id v23 = v7;
  specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)();
  id v24 = v22;
  swift_release();
  static DispatchTime.now()();
  *id v13 = 300;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v13, enum case for DispatchTimeInterval.milliseconds(_:), v40);
  + infix(_:_:)();
  uint64_t v25 = OUTLINED_FUNCTION_105_2();
  v26(v25);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  uint64_t v28 = v39;
  v27(v1, v39);
  char v29 = OS_dispatch_semaphore.wait(timeout:)();
  v27((uint64_t)v19, v28);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_25_0(v30, (uint64_t)static Logger.siriPhone);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_21_19(v32))
  {
    uint64_t v33 = (_DWORD *)OUTLINED_FUNCTION_47();
    uint64_t v42 = OUTLINED_FUNCTION_14_0();
    _DWORD *v33 = 136315138;
    LOBYTE(v41) = v29 & 1;
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_6(&dword_0, v36, v37, "#ContactResolution Timeout result (set at 300ms): %s");
    OUTLINED_FUNCTION_6_71();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  OUTLINED_FUNCTION_26_1();
}

Swift::Int closure #1 in EmergencyContactResolution.populateEmergencyContacts(sirikitIntent:locale:medicalIDStore:)(unint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  if ((a2 & 1) == 0)
  {
    if (!(a1 >> 62))
    {
      if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    outlined consume of Result<[SAAceView], Error>(a1, 0);
    if (v18)
    {
LABEL_4:
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(*(void *)(a5 + 8) + 8) + 16))(a1, ObjectType);
    }
  }
LABEL_5:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  id v10 = a4;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)id v13 = 136315138;
    uint64_t v14 = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a5 + 8) + 8) + 8))(v14);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
    uint64_t v15 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, v12, "#ContactResolution Emergency contact conversion: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return OS_dispatch_semaphore.signal()();
}

void closure #1 in static EmergencyContactResolution.makeINPerson(emergencyContact:locale:)(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  NSString v5 = String._bridgeToObjectiveC()();
  v15[0] = Locale.identifier.getter();
  v15[1] = v6;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    NSString v14 = v5;
    uint64_t v12 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v10, v11, "#ContactResolution Converted originalLabel: %s to %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    NSString v5 = v14;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  *a2 = v13;
}

uint64_t static SiriPhoneContact.personalLabel.getter()
{
  return 0x6C616E6F73726570;
}

uint64_t protocol witness for EmergencyContactProviding.fetchMedicalIDEmergencyContacts(completion:) in conformance HKMedicalIDStore(uint64_t a1, uint64_t a2)
{
  return @nonobjc HKMedicalIDStore.fetchMedicalIDEmergencyContacts(completion:)(a1, a2);
}

uint64_t @nonobjc HKMedicalIDStore.fetchMedicalIDEmergencyContacts(completion:)(uint64_t a1, uint64_t a2)
{
  void v5[4] = a1;
  v5[5] = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = thunk for @escaping @callee_guaranteed (@guaranteed [_HKEmergencyContact]?, @guaranteed Error?) -> ();
  v5[3] = &block_descriptor_8;
  unint64_t v3 = _Block_copy(v5);
  swift_retain();
  [v2 fetchMedicalIDEmergencyContactsWithCompletion:v3];
  _Block_release(v3);
  return swift_release();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed [_HKEmergencyContact]?, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  NSString v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for _HKEmergencyContact);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t one-time initialization function for emptyQuery(uint64_t a1)
{
  return one-time initialization function for emptyQuery(a1, static ContactQuery.emptyQuery, (uint64_t (*)(void))&ContactQuery.init());
}

uint64_t one-time initialization function for emptyNLv4Query(uint64_t a1)
{
  return one-time initialization function for emptyQuery(a1, static ContactQuery.emptyNLv4Query, (uint64_t (*)(void))closure #1 in variable initialization expression of static ContactQuery.emptyNLv4Query);
}

uint64_t one-time initialization function for emptyQuery(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = type metadata accessor for ContactQuery();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  return a3();
}

uint64_t closure #1 in variable initialization expression of static ContactQuery.emptyNLv4Query@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ContactQuery();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UsoEntityBuilder_common_Person();
  swift_allocObject();
  UsoEntityBuilder_common_Person.init()();
  static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)();
  type metadata accessor for UsoEntity_common_Person();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  if (v7[1])
  {
    UsoEntity_common_Person.toContactQuery()();
    swift_release();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
  }
  else
  {
    ContactQuery.init()();
    swift_release();
    return swift_release();
  }
}

uint64_t ContactQuery.init(isMe:phoneLabel:)()
{
  uint64_t v2 = type metadata accessor for ContactHandle.HandleType();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactHandleQuery?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_75_7();
  ContactQuery.init()();
  ContactQuery.isMe.setter();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v0, enum case for ContactHandle.HandleType.phone(_:), v2);
  ContactHandleQuery.init(type:label:value:)();
  uint64_t v8 = type metadata accessor for ContactHandleQuery();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v8);
  return ContactQuery.handle.setter();
}

uint64_t outlined bridged method (ob) of @objc INPerson.contactIdentifier.getter(void *a1)
{
  id v2 = [a1 contactIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_75();
}

uint64_t outlined bridged method (pb) of @objc _HKEmergencyContact.phoneNumberLabel.getter(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_3_4();
  }
  return OUTLINED_FUNCTION_7_0();
}

void specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v42 = v1;
  uint64_t v43 = v0;
  uint64_t v39 = v2;
  uint64_t v40 = v3;
  uint64_t v5 = v4;
  uint64_t v41 = v6;
  uint64_t v7 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v12);
  NSString v13 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v15 = v14;
  uint64_t v35 = v16;
  uint64_t v18 = v17;
  __int16 v20 = v19;
  uint64_t v21 = v5[4];
  uint64_t v38 = v5[3];
  uint64_t v36 = v21;
  uint64_t v37 = __swift_project_boxed_opaque_existential_1(v5, v38);
  OUTLINED_FUNCTION_12();
  v22();
  unint64_t v23 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v35;
  *(void *)(v25 + 16) = v15;
  *(void *)(v25 + 24) = v26;
  *(void *)(v25 + 32) = v18;
  *(unsigned char *)(v25 + 40) = v20;
  *(unsigned char *)(v25 + 41) = HIBYTE(v20) & 1;
  uint64_t v27 = v40;
  *(void *)(v25 + 48) = v39;
  *(void *)(v25 + 56) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25 + v23, v13, v7);
  uint64_t v28 = (void *)(v25 + v24);
  uint64_t v30 = v41;
  uint64_t v29 = v42;
  *uint64_t v28 = v41;
  v28[1] = v29;
  *(void *)(v25 + ((v24 + 23) & 0xFFFFFFFFFFFFFFF8)) = v43;
  uint64_t v31 = v36;
  os_log_type_t v32 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v36 + 8);
  swift_retain();
  swift_retain();
  id v33 = v30;
  v32(partial apply for closure #1 in static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:), v25, v38, v31);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

void specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v146 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v148 = v32;
  uint64_t v34 = v33;
  char v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v41 = type metadata accessor for ResolvedSiriKitContact();
  OUTLINED_FUNCTION_0_0();
  uint64_t v147 = v42;
  __chkstk_darwin(v43);
  OUTLINED_FUNCTION_53();
  uint64_t v44 = type metadata accessor for Locale();
  uint64_t v45 = OUTLINED_FUNCTION_11_0(v44);
  __chkstk_darwin(v45);
  OUTLINED_FUNCTION_65_0();
  uint64_t v46 = type metadata accessor for ContactResolverConfigHashable();
  uint64_t v47 = OUTLINED_FUNCTION_11_0(v46);
  __chkstk_darwin(v47);
  OUTLINED_FUNCTION_4();
  unint64_t v50 = (uint64_t *)(v49 - v48);
  uint64_t v149 = v38;
  if (v36)
  {
    uint64_t v51 = v41;
    uint64_t v52 = v34;
    swift_getObjectType();
    uint64_t v53 = dynamic_cast_existential_1_conditional((uint64_t)v40);
    uint64_t v55 = one-time initialization token for siriPhone;
    if (v53)
    {
      uint64_t v56 = v53;
      uint64_t v57 = v54;
      id v58 = v40;
      if (v55 != -1) {
        swift_once();
      }
      uint64_t v59 = type metadata accessor for Logger();
      unint64_t v60 = OUTLINED_FUNCTION_25_0(v59, (uint64_t)static Logger.siriPhone);
      os_log_type_t v61 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v61))
      {
        uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v62 = 0;
        _os_log_impl(&dword_0, v60, (os_log_type_t)v29, "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.", v62, 2u);
        OUTLINED_FUNCTION_6();
      }

      id v63 = [objc_allocWithZone((Class)HKHealthStore) init];
      id v64 = [objc_allocWithZone((Class)HKMedicalIDStore) initWithHealthStore:v63];

      uint64_t v153 = OUTLINED_FUNCTION_115_2(v65, &lazy cache variable for type metadata for HKMedicalIDStore);
      v154 = &protocol witness table for HKMedicalIDStore;
      *(void *)&long long v152 = v64;
      (*(void (**)(uint64_t, uint64_t, uint64_t, long long *))(*(void *)a23 + 80))(v56, v57, v148, &v152);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v152);
      goto LABEL_77;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v66 = type metadata accessor for Logger();
    uint64_t v67 = OUTLINED_FUNCTION_25_0(v66, (uint64_t)static Logger.siriPhone);
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v69 = 0;
      _os_log_impl(&dword_0, v67, v68, "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!", v69, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v34 = v52;
    uint64_t v41 = v51;
    uint64_t v38 = v149;
  }
  if (specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(v31, v40, v38, a24, a25))
  {
LABEL_77:
    OUTLINED_FUNCTION_26_1();
    return;
  }
  uint64_t v70 = _swiftEmptyArrayStorage;
  v145 = v50;
  uint64_t v142 = (uint64_t)v31;
  uint64_t v143 = v34;
  if (v34)
  {
    uint64_t v71 = App.appIdentifier.getter();
    uint64_t v73 = v25;
    if (v72)
    {
      uint64_t v74 = v71;
      uint64_t v75 = v72;
      OUTLINED_FUNCTION_36_25();
      uint64_t v70 = v76;
      unint64_t v78 = v76[2];
      unint64_t v77 = v76[3];
      if (v78 >= v77 >> 1)
      {
        OUTLINED_FUNCTION_71(v77);
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v70 = v135;
      }
      v70[2] = v78 + 1;
      uint64_t v79 = &v70[2 * v78];
      v79[4] = v74;
      v79[5] = v75;
    }
    else
    {
      uint64_t v70 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    uint64_t v73 = v25;
  }
  uint64_t v144 = (uint64_t)v70;
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  id v80 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v83 = v82;

  uint64_t v85 = v29[3];
  uint64_t v84 = v29[4];
  __swift_project_boxed_opaque_existential_1(v29, v85);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v84 + 8))(&v152, v85, v84);
  __swift_project_boxed_opaque_existential_1(&v152, v153);
  DeviceState.siriInputLocale.getter();
  outlined init with copy of SignalProviding((uint64_t)v29, (uint64_t)v151);
  id v86 = v40;
  swift_bridgeObjectRetain();
  uint64_t v87 = v83;
  uint64_t v88 = v86;
  ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)(v81, v87, v26, v144, v86, a25, (uint64_t)v151, v145);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v152);
  uint64_t v89 = (void *)OUTLINED_FUNCTION_105_2();
  __swift_project_boxed_opaque_existential_1(v89, v90);
  uint64_t v91 = OUTLINED_FUNCTION_13_44();
  v92(v91);
  uint64_t v93 = v153;
  uint64_t v94 = v154;
  __swift_project_boxed_opaque_existential_1(&v152, v153);
  uint64_t v95 = (void (**)(uint64_t, uint64_t))((uint64_t (*)(uint64_t, uint64_t *, uint64_t, _UNKNOWN **))v94[2])(v149, v145, v93, v94);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v152);
  uint64_t v96 = (void *)OUTLINED_FUNCTION_75();
  __swift_project_boxed_opaque_existential_1(v96, v97);
  type metadata accessor for SiriKitEvent();
  id v98 = [v88 typeName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  outlined init with copy of SignalProviding(v142, (uint64_t)&v152);
  uint64_t v99 = OUTLINED_FUNCTION_113_2();
  *(void *)(v99 + 16) = v143;
  outlined init with take of AppSelectionSignalComponent(&v152, v99 + 24);
  *(void *)(v99 + 64) = v95;
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(v151[0]) = 0;
  SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
  dispatch thunk of SiriKitEventSending.send(_:)();
  swift_release();
  uint64_t v100 = v95[2];
  if (v100)
  {
    *(void *)&long long v152 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    v150 = *(void (**)(uint64_t, char *, uint64_t))(v147 + 16);
    uint64_t v101 = (char *)v95 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
    uint64_t v102 = *(void *)(v147 + 72);
    uint64_t v95 = (void (**)(uint64_t, uint64_t))(v147 + 8);
    do
    {
      v150(v73, v101, v41);
      ResolvedSiriKitContact.person.getter();
      (*v95)(v73, v41);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v101 += v102;
      uint64_t v100 = (void (*)(uint64_t, uint64_t))((char *)v100 - 1);
    }
    while (v100);
    unint64_t v103 = v152;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v103 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v103 >> 62)
  {
    OUTLINED_FUNCTION_21_36();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_35_26();
  }
  else
  {
    OUTLINED_FUNCTION_78_7();
  }
  if (v95)
  {
    static ContactResolution.dedupeContacts(contacts:)();
    OUTLINED_FUNCTION_35_26();
    unint64_t v103 = (unint64_t)v95;
  }
  if (a21)
  {
    OUTLINED_FUNCTION_104_2();
    if (!v110) {
      swift_once();
    }
    uint64_t v111 = type metadata accessor for Logger();
    uint64_t v112 = (void *)OUTLINED_FUNCTION_25_0(v111, (uint64_t)static Logger.siriPhone);
    os_log_type_t v113 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_2(v113))
    {
      v114 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_28_14(v114);
      OUTLINED_FUNCTION_26_30(&dword_0, v115, v116, "#ContactResolution multicardinalIndex is nil, overwriting contacts slot");
      OUTLINED_FUNCTION_6();
    }

    (*(void (**)(unint64_t, uint64_t))(*(void *)(a25 + 8) + 16))(v103, a24);
    goto LABEL_76;
  }
  uint64_t v104 = OUTLINED_FUNCTION_65_7();
  uint64_t v106 = v105(v104);
  if (!v106)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v117 = type metadata accessor for Logger();
    v118 = (void *)OUTLINED_FUNCTION_25_0(v117, (uint64_t)static Logger.siriPhone);
    os_log_type_t v119 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v119)) {
      goto LABEL_75;
    }
    v120 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v120);
    uint64_t v123 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
    goto LABEL_74;
  }
  *(void *)&long long v152 = v106;
  if (!(v103 >> 62))
  {
    OUTLINED_FUNCTION_99_6();
    if (v95) {
      goto LABEL_36;
    }
LABEL_69:
    swift_bridgeObjectRelease();
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_23_36();
  uint64_t v95 = (void (**)(uint64_t, uint64_t))_CocoaArrayWrapper.endIndex.getter();
  if (!v95) {
    goto LABEL_69;
  }
LABEL_36:
  OUTLINED_FUNCTION_34_21();
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_35_26();
  unint64_t v107 = v152;
  if ((unint64_t)v152 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v108 = *(void *)((char *)&dword_10 + (v152 & 0xFFFFFFFFFFFFFF8));
  }
  if (v108 <= v146) {
    goto LABEL_54;
  }
  if (v103 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v109 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v107 = v152;
  }
  else
  {
    uint64_t v109 = *(void *)((char *)&dword_10 + (v103 & 0xFFFFFFFFFFFFFF8));
  }
  if (v107 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v124 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v124 = *(void *)((char *)&dword_10 + (v107 & 0xFFFFFFFFFFFFFF8));
  }
  if (v124 < v109)
  {
LABEL_54:

LABEL_70:
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v136 = type metadata accessor for Logger();
    v118 = (void *)OUTLINED_FUNCTION_25_0(v136, (uint64_t)static Logger.siriPhone);
    os_log_type_t v137 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v137)) {
      goto LABEL_75;
    }
    uint64_t v138 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v138);
    uint64_t v123 = "#ContactResolution: overwriting contacts slot";
LABEL_74:
    OUTLINED_FUNCTION_26_30(&dword_0, v121, v122, v123);
    OUTLINED_FUNCTION_6();
LABEL_75:

    uint64_t v139 = OUTLINED_FUNCTION_72_12();
    v141(v139, v140);
    goto LABEL_76;
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v125 = type metadata accessor for Logger();
  v126 = OUTLINED_FUNCTION_25_0(v125, (uint64_t)static Logger.siriPhone);
  os_log_type_t v127 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v126, v127))
  {
    Swift::Int v128 = (uint8_t *)OUTLINED_FUNCTION_47();
    *(_DWORD *)Swift::Int v128 = 134217984;
    v151[0] = v146;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v126, v127, "#ContactResolution updating person at index %ld", v128, 0xCu);
    OUTLINED_FUNCTION_6();
  }

  uint64_t v129 = v152;
  v130 = v95;
  if (!OUTLINED_FUNCTION_112_1() || v129 < 0 || (v129 & 0x4000000000000000) != 0) {
    *(void *)&long long v152 = specialized _ArrayBuffer._consumeAndCreateNew()(v129);
  }
  if (v146 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_60_11();
    if (!v110 & v132)
    {
      OUTLINED_FUNCTION_56_13(v131);
      specialized Array._endMutation()();
      uint64_t v133 = OUTLINED_FUNCTION_72_12();
      v134(v133);

LABEL_76:
      swift_bridgeObjectRelease();
      outlined destroy of ContactResolverConfigHashable((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for ContactResolverConfigHashable);
      goto LABEL_77;
    }
  }
  __break(1u);
}

uint64_t specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)a2))
  {
    uint64_t v10 = v9;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
    NSString v13 = a2;
    if (v12(ObjectType, v10) == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
LABEL_60:
      }
        swift_once();
      uint64_t v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v15, v16))
      {

        return 1;
      }
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "#ContactResolution intent is emergency call. bypassing contact resolution", v17, 2u);
      swift_slowDealloc();

LABEL_68:
      return 1;
    }
  }
  if (!a3)
  {
    unint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)(a5 + 8) + 8))(a4);
    if (v19)
    {
      unint64_t v20 = v19;
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        NSString v13 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v13)
        {
LABEL_13:
          unint64_t v21 = v20 & 0xC000000000000001;
          if ((v20 & 0xC000000000000001) != 0) {
            goto LABEL_72;
          }
          uint64_t v22 = *(void **)(v20 + 32);
          swift_bridgeObjectRetain();
          for (id i = v22; ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
          {
            unint64_t v24 = i;
            BOOL v25 = INPerson.hasHandleValue.getter();

            if (!v25) {
              goto LABEL_39;
            }
            if (v13 == (unsigned char *)&dword_0 + 1) {
              break;
            }
            id v31 = v21 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v20 + 40);
            uint64_t v32 = v31;
            BOOL v33 = INPerson.hasHandleValue.getter();

            if (!v33)
            {
LABEL_39:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              uint64_t v39 = 4;
              do
              {
                if (v21) {
                  id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v40 = *(id *)(v20 + 8 * v39);
                }
                uint64_t v41 = v40;
                uint64_t v42 = (char *)(v39 - 3);
                if (__OFADD__(v39 - 4, 1))
                {
                  __break(1u);
                  goto LABEL_60;
                }
                id v43 = [v40 personHandle];
                if (v43)
                {
                  uint64_t v44 = v43;
                  id v45 = [v43 emergencyType];

                  if (v45)
                  {
                    swift_bridgeObjectRelease_n();
                    if (one-time initialization token for siriPhone != -1) {
                      swift_once();
                    }
                    uint64_t v54 = type metadata accessor for Logger();
                    __swift_project_value_buffer(v54, (uint64_t)static Logger.siriPhone);
                    uint64_t v55 = Logger.logObject.getter();
                    os_log_type_t v56 = static os_log_type_t.debug.getter();
                    if (os_log_type_enabled(v55, v56))
                    {
                      uint64_t v57 = (uint8_t *)swift_slowAlloc();
                      v63[0] = swift_slowAlloc();
                      *(_DWORD *)uint64_t v57 = 136315138;
                      uint64_t v66 = (uint64_t)v45;
                      type metadata accessor for INPersonHandleEmergencyType(0);
                      uint64_t v58 = String.init<A>(describing:)();
                      uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, v63);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_0, v55, v56, "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution", v57, 0xCu);
                      uint64_t v18 = 1;
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      return v18;
                    }

                    return 1;
                  }
                }

                ++v39;
              }
              while (v42 != v13);
              swift_bridgeObjectRelease();
              uint64_t v46 = a1[3];
              uint64_t v47 = a1[4];
              __swift_project_boxed_opaque_existential_1(a1, v46);
              uint64_t v48 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v47 + 24))(v46, v47) + 16);
              swift_bridgeObjectRelease();
              outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v63);
              if (!v48)
              {
                swift_bridgeObjectRelease();
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
                return 0;
              }
              uint64_t v49 = v64;
              uint64_t v50 = v65;
              __swift_project_boxed_opaque_existential_1(v63, v64);
              uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50);
              char v52 = specialized Sequence.allSatisfy(_:)(v51, v20);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
              if ((v52 & 1) == 0) {
                return 0;
              }
              if (one-time initialization token for siriPhone != -1) {
                swift_once();
              }
              uint64_t v53 = type metadata accessor for Logger();
              __swift_project_value_buffer(v53, (uint64_t)static Logger.siriPhone);
              uint64_t v15 = Logger.logObject.getter();
              os_log_type_t v27 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v15, v27))
              {
                uint64_t v28 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v28 = 0;
                uint64_t v29 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
                goto LABEL_67;
              }
              goto LABEL_68;
            }
            if (v13 == (unsigned char *)&dword_0 + 2) {
              break;
            }
            uint64_t v34 = 6;
            while (1)
            {
              id v35 = v21 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v20 + 8 * v34);
              char v36 = v35;
              uint64_t v37 = (char *)(v34 - 3);
              if (__OFADD__(v34 - 4, 1)) {
                break;
              }
              BOOL v38 = INPerson.hasHandleValue.getter();

              if (!v38) {
                goto LABEL_39;
              }
              ++v34;
              if (v37 == v13) {
                goto LABEL_17;
              }
            }
            __break(1u);
LABEL_72:
            swift_bridgeObjectRetain();
          }
LABEL_17:
          swift_bridgeObjectRelease_n();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v26 = type metadata accessor for Logger();
          __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
          uint64_t v15 = Logger.logObject.getter();
          os_log_type_t v27 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v15, v27))
          {
            uint64_t v28 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v28 = 0;
            uint64_t v29 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
            goto LABEL_67;
          }
          goto LABEL_68;
        }
      }
      else
      {
        NSString v13 = *(char **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
        if (v13) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v60 = type metadata accessor for Logger();
    __swift_project_value_buffer(v60, (uint64_t)static Logger.siriPhone);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v15, v27)) {
      goto LABEL_68;
    }
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    uint64_t v29 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
LABEL_67:
    _os_log_impl(&dword_0, v15, v27, v29, v28, 2u);
    swift_slowDealloc();
    goto LABEL_68;
  }
  if (!*(void *)(a3 + 16))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v15, v27)) {
      goto LABEL_68;
    }
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    uint64_t v29 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
    goto LABEL_67;
  }
  return 0;
}

void specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)()
{
  OUTLINED_FUNCTION_24_0();
  id v45 = v2;
  uint64_t v46 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v48 = v8;
  uint64_t v9 = type metadata accessor for ResolvedSiriKitContact();
  OUTLINED_FUNCTION_0_0();
  uint64_t v43 = v10;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_30_22();
  uint64_t v12 = type metadata accessor for Locale();
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for ContactResolverConfigHashable();
  uint64_t v18 = OUTLINED_FUNCTION_11_0(v17);
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_53();
  if (v7 && (uint64_t v19 = App.appIdentifier.getter(), v20))
  {
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    OUTLINED_FUNCTION_36_25();
    unint64_t v24 = v23;
    unint64_t v26 = v23[2];
    unint64_t v25 = v23[3];
    if (v26 >= v25 >> 1)
    {
      OUTLINED_FUNCTION_71(v25);
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      unint64_t v24 = v42;
    }
    long long v24[2] = v26 + 1;
    os_log_type_t v27 = &v24[2 * v26];
    v27[4] = v21;
    v27[5] = v22;
  }
  else
  {
    unint64_t v24 = _swiftEmptyArrayStorage;
  }
  uint64_t v47 = (uint64_t)v24;
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  id v28 = objc_msgSend((id)static PhoneCallIntentClassNames.emptyStartCallIntent, "_className", v43);
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  uint64_t v33 = v5[3];
  uint64_t v32 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v33);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v32 + 8))(v51, v33, v32);
  __swift_project_boxed_opaque_existential_1(v51, v52);
  OUTLINED_FUNCTION_7_0();
  DeviceState.siriInputLocale.getter();
  outlined init with copy of SignalProviding((uint64_t)v5, (uint64_t)v50);
  swift_bridgeObjectRetain();
  ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)(v29, v31, v16, v47, v45, v46, (uint64_t)v50, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t v34 = OUTLINED_FUNCTION_13_44();
  v35(v34);
  uint64_t v36 = v52;
  uint64_t v37 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v37 + 16))(v48, v1, v36, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  uint64_t v39 = *(void *)(v38 + 16);
  if (v39)
  {
    v51[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v49 = *(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16);
    unint64_t v40 = v38 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    uint64_t v41 = *(void *)(v44 + 72);
    do
    {
      v49(v0, v40, v9);
      ResolvedSiriKitContact.person.getter();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v0, v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v40 += v41;
      --v39;
    }
    while (v39);
  }
  outlined destroy of ContactResolverConfigHashable((uint64_t)v1, (uint64_t (*)(void))type metadata accessor for ContactResolverConfigHashable);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void v38[5];

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_29_32(v4, v5);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v6);
  uint64_t v7 = OUTLINED_FUNCTION_24_40();
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = OUTLINED_FUNCTION_25_42();
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_53();
  if (v0)
  {
    App.appIdentifier.getter();
    if (v11)
    {
      OUTLINED_FUNCTION_124_2();
      OUTLINED_FUNCTION_36_25();
      OUTLINED_FUNCTION_50_24();
      if (v16)
      {
        OUTLINED_FUNCTION_46_25();
        uint64_t v15 = v12;
      }
      OUTLINED_FUNCTION_84_11(v12, v13, v14, v15);
    }
  }
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  uint64_t v17 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_157_3();
  uint64_t v18 = OUTLINED_FUNCTION_5_77();
  v19(v18);
  OUTLINED_FUNCTION_11_72();
  OUTLINED_FUNCTION_156_4();
  OUTLINED_FUNCTION_155_2();
  uint64_t v20 = v37;
  OUTLINED_FUNCTION_22_54((uint64_t)v20, v21, v22, v23, v20, (uint64_t)&protocol witness table for INStartAudioCallIntent);
  unint64_t v24 = OUTLINED_FUNCTION_2_122();
  v25(v24);
  unint64_t v26 = OUTLINED_FUNCTION_3_108();
  v27(v26);
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    id v28 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_42(v28, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    uint64_t v29 = (void *)Logger.logObject.getter();
    uint64_t v30 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_63_0(v30))
    {
      OUTLINED_FUNCTION_47();
      uint64_t v31 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_79_9(v31);
      OUTLINED_FUNCTION_32_29(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v32 = OUTLINED_FUNCTION_72_17();
      uint64_t v34 = OUTLINED_FUNCTION_163_1(v32, v33);
      OUTLINED_FUNCTION_31_37(v34);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      OUTLINED_FUNCTION_82(&dword_0, v35, v36, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_20_1();
      uint64_t v2 = v3;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRelease();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
  }
  else
  {
    OUTLINED_FUNCTION_81_11();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void v38[5];

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_29_32(v4, v5);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v6);
  uint64_t v7 = OUTLINED_FUNCTION_24_40();
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = OUTLINED_FUNCTION_25_42();
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_53();
  if (v0)
  {
    App.appIdentifier.getter();
    if (v11)
    {
      OUTLINED_FUNCTION_124_2();
      OUTLINED_FUNCTION_36_25();
      OUTLINED_FUNCTION_50_24();
      if (v16)
      {
        OUTLINED_FUNCTION_46_25();
        uint64_t v15 = v12;
      }
      OUTLINED_FUNCTION_84_11(v12, v13, v14, v15);
    }
  }
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  uint64_t v17 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_157_3();
  uint64_t v18 = OUTLINED_FUNCTION_5_77();
  v19(v18);
  OUTLINED_FUNCTION_11_72();
  OUTLINED_FUNCTION_156_4();
  OUTLINED_FUNCTION_155_2();
  uint64_t v20 = v37;
  OUTLINED_FUNCTION_22_54((uint64_t)v20, v21, v22, v23, v20, (uint64_t)&protocol witness table for INStartVideoCallIntent);
  unint64_t v24 = OUTLINED_FUNCTION_2_122();
  v25(v24);
  unint64_t v26 = OUTLINED_FUNCTION_3_108();
  v27(v26);
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    id v28 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_42(v28, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    uint64_t v29 = (void *)Logger.logObject.getter();
    uint64_t v30 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_63_0(v30))
    {
      OUTLINED_FUNCTION_47();
      uint64_t v31 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_79_9(v31);
      OUTLINED_FUNCTION_32_29(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v32 = OUTLINED_FUNCTION_72_17();
      uint64_t v34 = OUTLINED_FUNCTION_163_1(v32, v33);
      OUTLINED_FUNCTION_31_37(v34);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      OUTLINED_FUNCTION_82(&dword_0, v35, v36, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_20_1();
      uint64_t v2 = v3;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRelease();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
  }
  else
  {
    OUTLINED_FUNCTION_81_11();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void v38[5];

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_29_32(v4, v5);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v6);
  uint64_t v7 = OUTLINED_FUNCTION_24_40();
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = OUTLINED_FUNCTION_25_42();
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_53();
  if (v0)
  {
    App.appIdentifier.getter();
    if (v11)
    {
      OUTLINED_FUNCTION_124_2();
      OUTLINED_FUNCTION_36_25();
      OUTLINED_FUNCTION_50_24();
      if (v16)
      {
        OUTLINED_FUNCTION_46_25();
        uint64_t v15 = v12;
      }
      OUTLINED_FUNCTION_84_11(v12, v13, v14, v15);
    }
  }
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  uint64_t v17 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_157_3();
  uint64_t v18 = OUTLINED_FUNCTION_5_77();
  v19(v18);
  OUTLINED_FUNCTION_11_72();
  OUTLINED_FUNCTION_156_4();
  OUTLINED_FUNCTION_155_2();
  uint64_t v20 = v37;
  OUTLINED_FUNCTION_22_54((uint64_t)v20, v21, v22, v23, v20, (uint64_t)&protocol witness table for INStartCallIntent);
  unint64_t v24 = OUTLINED_FUNCTION_2_122();
  v25(v24);
  unint64_t v26 = OUTLINED_FUNCTION_3_108();
  v27(v26);
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    id v28 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_42(v28, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    uint64_t v29 = (void *)Logger.logObject.getter();
    uint64_t v30 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_63_0(v30))
    {
      OUTLINED_FUNCTION_47();
      uint64_t v31 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_79_9(v31);
      OUTLINED_FUNCTION_32_29(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v32 = OUTLINED_FUNCTION_72_17();
      uint64_t v34 = OUTLINED_FUNCTION_163_1(v32, v33);
      OUTLINED_FUNCTION_31_37(v34);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      OUTLINED_FUNCTION_82(&dword_0, v35, v36, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_20_1();
      uint64_t v2 = v3;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRelease();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
  }
  else
  {
    OUTLINED_FUNCTION_81_11();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void v38[5];

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_29_32(v4, v5);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v6);
  uint64_t v7 = OUTLINED_FUNCTION_24_40();
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = OUTLINED_FUNCTION_25_42();
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_53();
  if (v0)
  {
    App.appIdentifier.getter();
    if (v11)
    {
      OUTLINED_FUNCTION_124_2();
      OUTLINED_FUNCTION_36_25();
      OUTLINED_FUNCTION_50_24();
      if (v16)
      {
        OUTLINED_FUNCTION_46_25();
        uint64_t v15 = v12;
      }
      OUTLINED_FUNCTION_84_11(v12, v13, v14, v15);
    }
  }
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  uint64_t v17 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_157_3();
  uint64_t v18 = OUTLINED_FUNCTION_5_77();
  v19(v18);
  OUTLINED_FUNCTION_11_72();
  OUTLINED_FUNCTION_156_4();
  OUTLINED_FUNCTION_155_2();
  uint64_t v20 = v37;
  OUTLINED_FUNCTION_22_54((uint64_t)v20, v21, v22, v23, v20, (uint64_t)&protocol witness table for INSearchCallHistoryIntent);
  unint64_t v24 = OUTLINED_FUNCTION_2_122();
  v25(v24);
  unint64_t v26 = OUTLINED_FUNCTION_3_108();
  v27(v26);
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    id v28 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_42(v28, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    uint64_t v29 = (void *)Logger.logObject.getter();
    uint64_t v30 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_63_0(v30))
    {
      OUTLINED_FUNCTION_47();
      uint64_t v31 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_79_9(v31);
      OUTLINED_FUNCTION_32_29(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v32 = OUTLINED_FUNCTION_72_17();
      uint64_t v34 = OUTLINED_FUNCTION_163_1(v32, v33);
      OUTLINED_FUNCTION_31_37(v34);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      OUTLINED_FUNCTION_82(&dword_0, v35, v36, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_20_1();
      uint64_t v2 = v3;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRelease();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
  }
  else
  {
    OUTLINED_FUNCTION_81_11();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v2, (void (*)(void))type metadata accessor for ContactResolverConfigHashable);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

void specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v23 = v22;
  HIDWORD(v80) = v24;
  uint64_t v83 = v25;
  uint64_t v84 = v26;
  uint64_t v81 = v27;
  uint64_t v82 = v28;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v33 = type metadata accessor for ContactQuery();
  OUTLINED_FUNCTION_0_0();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  OUTLINED_FUNCTION_12_25();
  uint64_t v38 = __chkstk_darwin(v37);
  unint64_t v40 = (char *)&v76 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (char *)&v76 - v42;
  __chkstk_darwin(v41);
  id v45 = (char *)&v76 - v44;
  uint64_t v46 = v23;
  uint64_t v47 = *(void *)(a21 + 8);
  if (specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(v30, v32, 0, v46, v47))goto LABEL_29; {
  uint64_t v91 = v45;
  }
  uint64_t v92 = v43;
  id v86 = v40;
  uint64_t v76 = v47;
  uint64_t v77 = (uint64_t)v32;
  uint64_t v78 = v46;
  uint64_t v79 = v30;
  uint64_t v48 = v30[3];
  uint64_t v49 = v30[4];
  __swift_project_boxed_opaque_existential_1(v30, v48);
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49);
  uint64_t v51 = *(void *)(v50 + 16);
  if (v51)
  {
    uint64_t v94 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v52 = v50 + 32;
    uint64_t v90 = v35 + 32;
    uint64_t v53 = v94;
    do
    {
      outlined init with copy of SignalProviding(v52, (uint64_t)v93);
      __swift_project_boxed_opaque_existential_1(v93, v93[3]);
      SiriPhoneContact.asSiriInferenceContact.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_79_7();
        uint64_t v53 = v94;
      }
      unint64_t v55 = v53[2];
      unint64_t v54 = v53[3];
      if (v55 >= v54 >> 1)
      {
        OUTLINED_FUNCTION_71(v54);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v53 = v94;
      }
      v53[2] = v55 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))((unint64_t)v53+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v55, v21, v33);
      uint64_t v94 = v53;
      v52 += 40;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
    os_log_type_t v56 = v91;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = _swiftEmptyArrayStorage;
    os_log_type_t v56 = v91;
  }
  v93[0] = _swiftEmptyArrayStorage;
  uint64_t v90 = v53[2];
  if (!v90)
  {
LABEL_28:
    char v69 = BYTE4(v80) & 1;
    swift_bridgeObjectRelease();
    uint64_t v70 = v93[0];
    uint64_t v71 = v79;
    __swift_project_boxed_opaque_existential_1(v79, v79[3]);
    Swift::Bool v72 = PhoneCallNLIntent.isDisplayNameEmergencyContact()();
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    uint64_t v73 = swift_allocObject();
    LOBYTE(v74) = v69;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(v77, v70, v72, v81, v82, (uint64_t)v71, v83, v84, v74, (uint64_t)v93, v73, v78, v76, v75, v76, v77, v78, (uint64_t)v79, v80,
      v81,
      v82,
      v83,
      v84,
      (uint64_t)v85,
      (uint64_t)v86);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
LABEL_29:
    OUTLINED_FUNCTION_26_1();
    return;
  }
  unint64_t v57 = 0;
  uint64_t v85 = (void (**)(void))(v35 + 32);
  uint64_t v88 = v35 + 8;
  uint64_t v89 = v35 + 16;
  uint64_t v87 = (v35 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  while (v57 < v53[2])
  {
    uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v58(v56, (char *)v53+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v57, v33);
    if (one-time initialization token for emptyQuery != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v33, (uint64_t)static ContactQuery.emptyQuery);
    char v59 = static ContactQuery.== infix(_:_:)();
    uint64_t v60 = v56;
    char v61 = v59;
    v58(v92, v60, v33);
    if (v61)
    {
      uint64_t v62 = OUTLINED_FUNCTION_70_6();
      ((void (*)(uint64_t))v58)(v62);
    }
    else
    {
      if (one-time initialization token for emptyNLv4Query != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v33, (uint64_t)static ContactQuery.emptyNLv4Query);
      char v63 = static ContactQuery.== infix(_:_:)();
      uint64_t v64 = OUTLINED_FUNCTION_70_6();
      ((void (*)(uint64_t))v58)(v64);
      if ((v63 & 1) == 0)
      {
        uint64_t v65 = *v85;
        OUTLINED_FUNCTION_15_10();
        v65();
        uint64_t v66 = v93[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_97_5();
          uint64_t v66 = v93[0];
        }
        unint64_t v68 = *(void *)(v66 + 16);
        unint64_t v67 = *(void *)(v66 + 24);
        if (v68 >= v67 >> 1)
        {
          OUTLINED_FUNCTION_71(v67);
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v66 = v93[0];
        }
        *(void *)(v66 + 16) = v68 + 1;
        OUTLINED_FUNCTION_15_10();
        v65();
        v93[0] = v66;
        os_log_type_t v56 = v91;
        goto LABEL_27;
      }
    }
    os_log_type_t v56 = v91;
    ((void (*)(char *, uint64_t))v58)(v91, v33);
LABEL_27:
    if (v90 == ++v57) {
      goto LABEL_28;
    }
  }
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type [Substring] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [Substring] and conformance [A];
  if (!lazy protocol witness table cache variable for type [Substring] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Substring]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Substring] and conformance [A]);
  }
  return result;
}

uint64_t sub_2F9DC0()
{
  return _swift_deallocObject(v0, 40, 7);
}

Swift::Int partial apply for closure #1 in EmergencyContactResolution.populateEmergencyContacts(sirikitIntent:locale:medicalIDStore:)(unint64_t a1, char a2)
{
  return closure #1 in EmergencyContactResolution.populateEmergencyContacts(sirikitIntent:locale:medicalIDStore:)(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

ValueMetadata *type metadata accessor for ContactResolution()
{
  return &type metadata for ContactResolution;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

#error "2F9E74: call analysis failed (funcsize=17)"

id specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v68[3] = a4;
  v68[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v68);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)a2))
  {
    uint64_t v11 = v10;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    unint64_t v14 = a2;
    if (v13(ObjectType, v11) == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
LABEL_69:
      }
        swift_once();
      uint64_t v15 = type metadata accessor for Logger();
      __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v16, v17))
      {

LABEL_78:
        uint64_t v19 = 1;
        goto LABEL_79;
      }
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "#ContactResolution intent is emergency call. bypassing contact resolution", v18, 2u);
      swift_slowDealloc();

LABEL_77:
      goto LABEL_78;
    }
  }
  if (a3)
  {
    if (*(void *)(a3 + 16))
    {
LABEL_9:
      uint64_t v19 = 0;
LABEL_79:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
      return (id)v19;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v16, v28)) {
      goto LABEL_77;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    uint64_t v30 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
LABEL_76:
    _os_log_impl(&dword_0, v16, v28, v30, v29, 2u);
    swift_slowDealloc();
    goto LABEL_77;
  }
  unint64_t v20 = outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a2);
  if (!v20)
  {
LABEL_72:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v63 = type metadata accessor for Logger();
    __swift_project_value_buffer(v63, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v16, v28)) {
      goto LABEL_77;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    uint64_t v30 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
    goto LABEL_76;
  }
  unint64_t v14 = v20;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_13;
    }
    goto LABEL_71;
  }
  uint64_t v21 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
  if (!v21)
  {
LABEL_71:
    swift_bridgeObjectRelease();
    goto LABEL_72;
  }
LABEL_13:
  unint64_t v65 = v14 & 0xC000000000000001;
  if ((v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v22 = *(void **)(v14 + 32);
    swift_bridgeObjectRetain();
    id v23 = v22;
  }
  int v24 = v23;
  BOOL v25 = INPerson.hasHandleValue.getter();

  if (!v25) {
    goto LABEL_48;
  }
  if (v21 == 1)
  {
LABEL_44:
    swift_bridgeObjectRelease_n();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v16, v28)) {
      goto LABEL_77;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    uint64_t v30 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_76;
  }
  id v26 = v65 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v14 + 40);
  uint64_t v31 = v26;
  BOOL v32 = INPerson.hasHandleValue.getter();

  if (!v32)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v45 = 4;
    do
    {
      if (v65) {
        id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v46 = *(id *)(v14 + 8 * v45);
      }
      uint64_t v47 = v46;
      uint64_t v48 = v45 - 3;
      if (__OFADD__(v45 - 4, 1))
      {
        __break(1u);
        goto LABEL_69;
      }
      id v49 = [v46 personHandle];
      if (v49)
      {
        uint64_t v50 = v49;
        id v51 = [v49 emergencyType];

        if (v51)
        {
          swift_bridgeObjectRelease_n();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v57 = type metadata accessor for Logger();
          __swift_project_value_buffer(v57, (uint64_t)static Logger.siriPhone);
          uint64_t v58 = Logger.logObject.getter();
          os_log_type_t v59 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v60 = (uint8_t *)swift_slowAlloc();
            v66[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v60 = 136315138;
            uint64_t v67 = (uint64_t)v51;
            type metadata accessor for INPersonHandleEmergencyType(0);
            uint64_t v61 = String.init<A>(describing:)();
            uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v62, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v58, v59, "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution", v60, 0xCu);
            uint64_t v19 = 1;
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            goto LABEL_79;
          }

          goto LABEL_78;
        }
      }

      ++v45;
    }
    while (v48 != v21);
    swift_bridgeObjectRelease();
    uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
    uint64_t v53 = *(void *)(v52(a4, a5) + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)v68, (uint64_t)v66);
    if (!v53)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      goto LABEL_9;
    }
    __swift_project_boxed_opaque_existential_1(v66, v66[3]);
    uint64_t v54 = v52(a4, a5);
    char v55 = specialized Sequence.allSatisfy(_:)(v54, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    if ((v55 & 1) == 0) {
      goto LABEL_9;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      uint64_t v30 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_76;
    }
    goto LABEL_77;
  }
  if (v21 == 2) {
    goto LABEL_44;
  }
  if (v65) {
    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v33 = *(id *)(v14 + 48);
  }
  uint64_t v34 = v33;
  BOOL v35 = INPerson.hasHandleValue.getter();

  if (!v35) {
    goto LABEL_48;
  }
  if (v21 == 3) {
    goto LABEL_44;
  }
  if (v65) {
    id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v36 = *(id *)(v14 + 56);
  }
  uint64_t v37 = v36;
  BOOL v38 = INPerson.hasHandleValue.getter();

  if (!v38) {
    goto LABEL_48;
  }
  if (v21 == 4) {
    goto LABEL_44;
  }
  uint64_t v39 = 8;
  while (1)
  {
    id result = v65 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v14 + 8 * v39);
    uint64_t v41 = result;
    uint64_t v42 = v39 - 3;
    if (__OFADD__(v39 - 4, 1)) {
      break;
    }
    BOOL v43 = INPerson.hasHandleValue.getter();

    if (!v43) {
      goto LABEL_48;
    }
    ++v39;
    if (v42 == v21) {
      goto LABEL_44;
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  BOOL v25;
  id v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  const char *v30;
  void *v31;
  BOOL v32;
  id v33;
  void *v34;
  BOOL v35;
  id v36;
  void *v37;
  BOOL v38;
  uint64_t v39;
  id result;
  void *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v65;
  uint64_t v66[5];
  uint64_t v67;
  uint64_t v68[5];

  v68[3] = a4;
  v68[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v68);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)a2))
  {
    uint64_t v11 = v10;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    unint64_t v14 = a2;
    if (v13(ObjectType, v11) == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
LABEL_69:
      }
        swift_once();
      uint64_t v15 = type metadata accessor for Logger();
      __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v16, v17))
      {

LABEL_78:
        uint64_t v19 = 1;
        goto LABEL_79;
      }
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "#ContactResolution intent is emergency call. bypassing contact resolution", v18, 2u);
      swift_slowDealloc();

LABEL_77:
      goto LABEL_78;
    }
  }
  if (a3)
  {
    if (*(void *)(a3 + 16))
    {
LABEL_9:
      uint64_t v19 = 0;
LABEL_79:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
      return (id)v19;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v16, v28)) {
      goto LABEL_77;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    uint64_t v30 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
LABEL_76:
    _os_log_impl(&dword_0, v16, v28, v30, v29, 2u);
    swift_slowDealloc();
    goto LABEL_77;
  }
  unint64_t v20 = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(a2);
  if (!v20)
  {
LABEL_72:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v63 = type metadata accessor for Logger();
    __swift_project_value_buffer(v63, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v16, v28)) {
      goto LABEL_77;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    uint64_t v30 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
    goto LABEL_76;
  }
  unint64_t v14 = v20;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_13;
    }
    goto LABEL_71;
  }
  uint64_t v21 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
  if (!v21)
  {
LABEL_71:
    swift_bridgeObjectRelease();
    goto LABEL_72;
  }
LABEL_13:
  unint64_t v65 = v14 & 0xC000000000000001;
  if ((v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v22 = *(void **)(v14 + 32);
    swift_bridgeObjectRetain();
    id v23 = v22;
  }
  int v24 = v23;
  BOOL v25 = INPerson.hasHandleValue.getter();

  if (!v25) {
    goto LABEL_48;
  }
  if (v21 == 1)
  {
LABEL_44:
    swift_bridgeObjectRelease_n();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v16, v28)) {
      goto LABEL_77;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    uint64_t v30 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_76;
  }
  id v26 = v65 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v14 + 40);
  uint64_t v31 = v26;
  BOOL v32 = INPerson.hasHandleValue.getter();

  if (!v32)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v45 = 4;
    do
    {
      if (v65) {
        id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v46 = *(id *)(v14 + 8 * v45);
      }
      uint64_t v47 = v46;
      uint64_t v48 = v45 - 3;
      if (__OFADD__(v45 - 4, 1))
      {
        __break(1u);
        goto LABEL_69;
      }
      id v49 = [v46 personHandle];
      if (v49)
      {
        uint64_t v50 = v49;
        id v51 = [v49 emergencyType];

        if (v51)
        {
          swift_bridgeObjectRelease_n();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v57 = type metadata accessor for Logger();
          __swift_project_value_buffer(v57, (uint64_t)static Logger.siriPhone);
          uint64_t v58 = Logger.logObject.getter();
          os_log_type_t v59 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v60 = (uint8_t *)swift_slowAlloc();
            v66[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v60 = 136315138;
            uint64_t v67 = (uint64_t)v51;
            type metadata accessor for INPersonHandleEmergencyType(0);
            uint64_t v61 = String.init<A>(describing:)();
            uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v62, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v58, v59, "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution", v60, 0xCu);
            uint64_t v19 = 1;
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            goto LABEL_79;
          }

          goto LABEL_78;
        }
      }

      ++v45;
    }
    while (v48 != v21);
    swift_bridgeObjectRelease();
    uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
    uint64_t v53 = *(void *)(v52(a4, a5) + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)v68, (uint64_t)v66);
    if (!v53)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      goto LABEL_9;
    }
    __swift_project_boxed_opaque_existential_1(v66, v66[3]);
    uint64_t v54 = v52(a4, a5);
    char v55 = specialized Sequence.allSatisfy(_:)(v54, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    if ((v55 & 1) == 0) {
      goto LABEL_9;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      uint64_t v30 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_76;
    }
    goto LABEL_77;
  }
  if (v21 == 2) {
    goto LABEL_44;
  }
  if (v65) {
    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v33 = *(id *)(v14 + 48);
  }
  uint64_t v34 = v33;
  BOOL v35 = INPerson.hasHandleValue.getter();

  if (!v35) {
    goto LABEL_48;
  }
  if (v21 == 3) {
    goto LABEL_44;
  }
  if (v65) {
    id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v36 = *(id *)(v14 + 56);
  }
  uint64_t v37 = v36;
  BOOL v38 = INPerson.hasHandleValue.getter();

  if (!v38) {
    goto LABEL_48;
  }
  if (v21 == 4) {
    goto LABEL_44;
  }
  uint64_t v39 = 8;
  while (1)
  {
    id result = v65 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v14 + 8 * v39);
    uint64_t v41 = result;
    uint64_t v42 = v39 - 3;
    if (__OFADD__(v39 - 4, 1)) {
      break;
    }
    BOOL v43 = INPerson.hasHandleValue.getter();

    if (!v43) {
      goto LABEL_48;
    }
    ++v39;
    if (v42 == v21) {
      goto LABEL_44;
    }
  }
  __break(1u);
  return result;
}

void specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_10_56(v27, v28, v29, v30, v31);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v32);
  uint64_t v34 = OUTLINED_FUNCTION_19_35(v33, v137);
  uint64_t v35 = OUTLINED_FUNCTION_11_0(v34);
  __chkstk_darwin(v35);
  uint64_t v36 = OUTLINED_FUNCTION_27_30();
  uint64_t v37 = OUTLINED_FUNCTION_11_0(v36);
  __chkstk_darwin(v37);
  OUTLINED_FUNCTION_18_31(v38, v138);
  OUTLINED_FUNCTION_62_13();
  OUTLINED_FUNCTION_59_12();
  v39();
  if (v21)
  {
    swift_getObjectType();
    uint64_t v40 = dynamic_cast_existential_1_conditional((uint64_t)v22);
    uint64_t v41 = one-time initialization token for siriPhone;
    if (v40)
    {
      id v42 = OUTLINED_FUNCTION_83_4();
      if (v41 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      uint64_t v44 = (void *)OUTLINED_FUNCTION_25_0(v43, (uint64_t)static Logger.siriPhone);
      os_log_type_t v45 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v45))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
        OUTLINED_FUNCTION_16_4(&dword_0, v46, v47, "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.");
        OUTLINED_FUNCTION_6();
      }

      id v48 = [objc_allocWithZone((Class)HKHealthStore) init];
      [objc_allocWithZone((Class)HKMedicalIDStore) initWithHealthStore:v48];

      uint64_t v50 = OUTLINED_FUNCTION_115_2(v49, &lazy cache variable for type metadata for HKMedicalIDStore);
      OUTLINED_FUNCTION_61_9(v50, (uint64_t)&protocol witness table for HKMedicalIDStore);
      uint64_t v51 = OUTLINED_FUNCTION_25_30();
      v52(v51);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v143);
      goto LABEL_82;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    uint64_t v54 = (void *)OUTLINED_FUNCTION_25_0(v53, (uint64_t)static Logger.siriPhone);
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_91_9(v55))
    {
      uint64_t v56 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_69_9(v56);
      OUTLINED_FUNCTION_55_11(&dword_0, v57, v58, "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!");
      uint64_t v23 = v139;
      OUTLINED_FUNCTION_6();
    }
  }
  uint64_t v59 = OUTLINED_FUNCTION_41_18();
  uint64_t v64 = (uint64_t)specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(v59, v60, v61, v62, v63);
  if (v64)
  {
LABEL_82:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    OUTLINED_FUNCTION_26_1();
    return;
  }
  uint64_t v67 = _swiftEmptyArrayStorage;
  if (v141)
  {
    uint64_t v64 = App.appIdentifier.getter();
    if (v65)
    {
      OUTLINED_FUNCTION_96_5();
      OUTLINED_FUNCTION_36_25();
      OUTLINED_FUNCTION_57_12();
      if (v72)
      {
        OUTLINED_FUNCTION_47_20();
        uint64_t v71 = v68;
      }
      OUTLINED_FUNCTION_58_13(v68, v69, v70, v71);
    }
    else
    {
      uint64_t v67 = _swiftEmptyArrayStorage;
    }
  }
  OUTLINED_FUNCTION_90_8(v64, v65, v66, (uint64_t)v67);
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  id v73 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v75 = v74;

  uint64_t v76 = OUTLINED_FUNCTION_8_78();
  v77(v76);
  OUTLINED_FUNCTION_15_46();
  outlined init with copy of SignalProviding(v26, (uint64_t)&v142);
  id v78 = v22;
  uint64_t v79 = OUTLINED_FUNCTION_92_6();
  OUTLINED_FUNCTION_17_33(v79, v80, v81, v82, v83, (uint64_t)&protocol witness table for INStartVideoCallIntent);
  uint64_t v84 = OUTLINED_FUNCTION_4_77();
  v85(v84);
  uint64_t v86 = OUTLINED_FUNCTION_5_60();
  v87(v86);
  if (v75)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v143);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_42(v88, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    uint64_t v89 = (void *)Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_37_0(v90))
    {
      OUTLINED_FUNCTION_47();
      v143[0] = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_38_21(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v91 = OUTLINED_FUNCTION_93_8();
      uint64_t v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v92, v143);
      OUTLINED_FUNCTION_37_23(v93);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      OUTLINED_FUNCTION_3(&dword_0, v94, v95, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    OUTLINED_FUNCTION_46_16();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    OUTLINED_FUNCTION_111_3();
    if (OUTLINED_FUNCTION_39_23())
    {
      dispatch thunk of InferenceError.log()();
      swift_release();
    }
    else
    {
      getpid();
      OUTLINED_FUNCTION_46_16();
      String.init<A>(describing:)();
      String._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_108_4();
      OUTLINED_FUNCTION_64_4();
    }
    specialized INPersonContainingIntent.clearContactsSlotMatches()((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter, (void (*)(void *))INStartVideoCallIntent.overwriteContacts(newContacts:));
    swift_errorRelease();
    goto LABEL_81;
  }
  OUTLINED_FUNCTION_12_47();
  id v96 = [v25 typeName];
  uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v99 = v98;

  outlined init with copy of SignalProviding((uint64_t)v144, (uint64_t)v143);
  uint64_t v100 = OUTLINED_FUNCTION_113_2();
  OUTLINED_FUNCTION_22_42(v100);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_53_15();
  OUTLINED_FUNCTION_68_6();
  OUTLINED_FUNCTION_63_7();
  swift_release();
  uint64_t v101 = *(void *)(v24 + 16);
  if (v101)
  {
    OUTLINED_FUNCTION_89_8((uint64_t)_swiftEmptyArrayStorage);
    OUTLINED_FUNCTION_6_72();
    do
    {
      uint64_t v102 = OUTLINED_FUNCTION_29_27();
      v103(v102);
      ResolvedSiriKitContact.person.getter();
      uint64_t v104 = OUTLINED_FUNCTION_31_28();
      v105(v104);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      OUTLINED_FUNCTION_85_7();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v99 += v23;
      --v101;
    }
    while (v101);
    v106._rawValue = (void *)v143[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v106._rawValue = _swiftEmptyArrayStorage;
  }
  if ((unint64_t)v106._rawValue >> 62)
  {
    OUTLINED_FUNCTION_21_36();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_35_26();
  }
  else
  {
    OUTLINED_FUNCTION_78_7();
  }
  if (a21)
  {
    OUTLINED_FUNCTION_104_2();
    if (!v109) {
      swift_once();
    }
    uint64_t v112 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v112, (uint64_t)static Logger.siriPhone);
    os_log_type_t v114 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v114)) {
      goto LABEL_79;
    }
    uint64_t v115 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v115);
    v118 = "#ContactResolution multicardinalIndex is nil, overwriting contacts slot";
    goto LABEL_78;
  }
  uint64_t v107 = outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v25);
  if (!v107)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v119 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v119, (uint64_t)static Logger.siriPhone);
    os_log_type_t v120 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v120)) {
      goto LABEL_79;
    }
    uint64_t v121 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v121);
    v118 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
    goto LABEL_78;
  }
  OUTLINED_FUNCTION_76_8(v107);
  if (!v97)
  {
    OUTLINED_FUNCTION_99_6();
LABEL_73:
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_23_36();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_73;
  }
  OUTLINED_FUNCTION_34_21();
  uint64_t v108 = (void *)OUTLINED_FUNCTION_114_0();
  swift_bridgeObjectRelease();
  if ((unint64_t)v143[0] >> 62)
  {
    OUTLINED_FUNCTION_32_3();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_15_0();
  }
  OUTLINED_FUNCTION_98_6();
  if (v110 ^ v111 | v109) {
    goto LABEL_58;
  }
  OUTLINED_FUNCTION_23_36();
  uint64_t v122 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((unint64_t)v143[0] >> 62)
  {
    OUTLINED_FUNCTION_50_14();
    uint64_t v123 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v123 = *(void *)((char *)&dword_10 + (v143[0] & 0xFFFFFFFFFFFFFF8));
  }
  if (v123 < v122)
  {
LABEL_58:

LABEL_74:
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v134 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v134, (uint64_t)static Logger.siriPhone);
    os_log_type_t v135 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v135)) {
      goto LABEL_79;
    }
    uint64_t v136 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v136);
    v118 = "#ContactResolution: overwriting contacts slot";
LABEL_78:
    OUTLINED_FUNCTION_26_30(&dword_0, v116, v117, v118);
    OUTLINED_FUNCTION_6();
LABEL_79:

    INStartVideoCallIntent.overwriteContacts(newContacts:)(v106);
    goto LABEL_80;
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v124 = type metadata accessor for Logger();
  uint64_t v125 = (void *)OUTLINED_FUNCTION_25_0(v124, (uint64_t)static Logger.siriPhone);
  os_log_type_t v126 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v126))
  {
    os_log_type_t v127 = (float *)OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_14_40(v127, 3.852e-34);
    OUTLINED_FUNCTION_67_9(&dword_0, v128, v129, "#ContactResolution updating person at index %ld");
    OUTLINED_FUNCTION_6();
  }

  uint64_t v130 = v143[0];
  id v131 = v108;
  if (!OUTLINED_FUNCTION_112_1() || v130 < 0 || (v130 & 0x4000000000000000) != 0) {
    v143[0] = specialized _ArrayBuffer._consumeAndCreateNew()(v130);
  }
  if (v139 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_60_11();
    if (!v109 & v72)
    {
      OUTLINED_FUNCTION_56_13(v132);
      specialized Array._endMutation()();
      uint64_t v133 = OUTLINED_FUNCTION_84_9();
      INStartVideoCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v133);

LABEL_80:
      swift_bridgeObjectRelease();
LABEL_81:
      outlined destroy of ContactResolverConfigHashable(v140, (uint64_t (*)(void))type metadata accessor for ContactResolverConfigHashable);
      goto LABEL_82;
    }
  }
  __break(1u);
}

{
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  void *v54;
  os_log_type_t v55;
  _WORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t);
  uint64_t v86;
  void (*v87)(uint64_t);
  uint64_t v88;
  void *v89;
  os_log_type_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t);
  uint64_t v104;
  void (*v105)(uint64_t);
  Swift::OpaquePointer v106;
  uint64_t v107;
  void *v108;
  char v109;
  char v110;
  char v111;
  uint64_t v112;
  void *v113;
  os_log_type_t v114;
  _WORD *v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  uint64_t v119;
  os_log_type_t v120;
  _WORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  os_log_type_t v126;
  float *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  os_log_type_t v135;
  _WORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143[5];
  unsigned char v144[48];

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_10_56(v27, v28, v29, v30, v31);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v32);
  uint64_t v34 = OUTLINED_FUNCTION_19_35(v33, v137);
  uint64_t v35 = OUTLINED_FUNCTION_11_0(v34);
  __chkstk_darwin(v35);
  uint64_t v36 = OUTLINED_FUNCTION_27_30();
  uint64_t v37 = OUTLINED_FUNCTION_11_0(v36);
  __chkstk_darwin(v37);
  OUTLINED_FUNCTION_18_31(v38, v138);
  OUTLINED_FUNCTION_62_13();
  OUTLINED_FUNCTION_59_12();
  v39();
  if (v21)
  {
    swift_getObjectType();
    uint64_t v40 = dynamic_cast_existential_1_conditional((uint64_t)v22);
    uint64_t v41 = one-time initialization token for siriPhone;
    if (v40)
    {
      id v42 = OUTLINED_FUNCTION_83_4();
      if (v41 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      uint64_t v44 = (void *)OUTLINED_FUNCTION_25_0(v43, (uint64_t)static Logger.siriPhone);
      os_log_type_t v45 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v45))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
        OUTLINED_FUNCTION_16_4(&dword_0, v46, v47, "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.");
        OUTLINED_FUNCTION_6();
      }

      id v48 = [objc_allocWithZone((Class)HKHealthStore) init];
      [objc_allocWithZone((Class)HKMedicalIDStore) initWithHealthStore:v48];

      uint64_t v50 = OUTLINED_FUNCTION_115_2(v49, &lazy cache variable for type metadata for HKMedicalIDStore);
      OUTLINED_FUNCTION_61_9(v50, (uint64_t)&protocol witness table for HKMedicalIDStore);
      uint64_t v51 = OUTLINED_FUNCTION_25_30();
      v52(v51);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v143);
      goto LABEL_82;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    uint64_t v54 = (void *)OUTLINED_FUNCTION_25_0(v53, (uint64_t)static Logger.siriPhone);
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_91_9(v55))
    {
      uint64_t v56 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_69_9(v56);
      OUTLINED_FUNCTION_55_11(&dword_0, v57, v58, "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!");
      uint64_t v23 = v139;
      OUTLINED_FUNCTION_6();
    }
  }
  uint64_t v59 = OUTLINED_FUNCTION_41_18();
  uint64_t v64 = (uint64_t)specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(v59, v60, v61, v62, v63);
  if (v64)
  {
LABEL_82:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    OUTLINED_FUNCTION_26_1();
    return;
  }
  uint64_t v67 = _swiftEmptyArrayStorage;
  if (v141)
  {
    uint64_t v64 = App.appIdentifier.getter();
    if (v65)
    {
      OUTLINED_FUNCTION_96_5();
      OUTLINED_FUNCTION_36_25();
      OUTLINED_FUNCTION_57_12();
      if (v72)
      {
        OUTLINED_FUNCTION_47_20();
        uint64_t v71 = v68;
      }
      OUTLINED_FUNCTION_58_13(v68, v69, v70, v71);
    }
    else
    {
      uint64_t v67 = _swiftEmptyArrayStorage;
    }
  }
  OUTLINED_FUNCTION_90_8(v64, v65, v66, (uint64_t)v67);
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  id v73 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v75 = v74;

  uint64_t v76 = OUTLINED_FUNCTION_8_78();
  v77(v76);
  OUTLINED_FUNCTION_15_46();
  outlined init with copy of SignalProviding(v26, (uint64_t)&v142);
  id v78 = v22;
  uint64_t v79 = OUTLINED_FUNCTION_92_6();
  OUTLINED_FUNCTION_17_33(v79, v80, v81, v82, v83, (uint64_t)&protocol witness table for INStartAudioCallIntent);
  uint64_t v84 = OUTLINED_FUNCTION_4_77();
  v85(v84);
  uint64_t v86 = OUTLINED_FUNCTION_5_60();
  v87(v86);
  if (v75)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v143);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_42(v88, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    uint64_t v89 = (void *)Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_37_0(v90))
    {
      OUTLINED_FUNCTION_47();
      v143[0] = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_38_21(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v91 = OUTLINED_FUNCTION_93_8();
      uint64_t v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v92, v143);
      OUTLINED_FUNCTION_37_23(v93);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      OUTLINED_FUNCTION_3(&dword_0, v94, v95, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    OUTLINED_FUNCTION_46_16();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    OUTLINED_FUNCTION_111_3();
    if (OUTLINED_FUNCTION_39_23())
    {
      dispatch thunk of InferenceError.log()();
      swift_release();
    }
    else
    {
      getpid();
      OUTLINED_FUNCTION_46_16();
      String.init<A>(describing:)();
      String._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_108_4();
      OUTLINED_FUNCTION_64_4();
    }
    specialized INPersonContainingIntent.clearContactsSlotMatches()((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter, (void (*)(void *))INStartVideoCallIntent.overwriteContacts(newContacts:));
    swift_errorRelease();
    goto LABEL_81;
  }
  OUTLINED_FUNCTION_12_47();
  id v96 = [v25 typeName];
  uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v99 = v98;

  outlined init with copy of SignalProviding((uint64_t)v144, (uint64_t)v143);
  uint64_t v100 = OUTLINED_FUNCTION_113_2();
  OUTLINED_FUNCTION_22_42(v100);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_53_15();
  OUTLINED_FUNCTION_68_6();
  OUTLINED_FUNCTION_63_7();
  swift_release();
  uint64_t v101 = *(void *)(v24 + 16);
  if (v101)
  {
    OUTLINED_FUNCTION_89_8((uint64_t)_swiftEmptyArrayStorage);
    OUTLINED_FUNCTION_6_72();
    do
    {
      uint64_t v102 = OUTLINED_FUNCTION_29_27();
      v103(v102);
      ResolvedSiriKitContact.person.getter();
      uint64_t v104 = OUTLINED_FUNCTION_31_28();
      v105(v104);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      OUTLINED_FUNCTION_85_7();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v99 += v23;
      --v101;
    }
    while (v101);
    v106._rawValue = (void *)v143[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v106._rawValue = _swiftEmptyArrayStorage;
  }
  if ((unint64_t)v106._rawValue >> 62)
  {
    OUTLINED_FUNCTION_21_36();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_35_26();
  }
  else
  {
    OUTLINED_FUNCTION_78_7();
  }
  if (a21)
  {
    OUTLINED_FUNCTION_104_2();
    if (!v109) {
      swift_once();
    }
    uint64_t v112 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v112, (uint64_t)static Logger.siriPhone);
    os_log_type_t v114 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v114)) {
      goto LABEL_79;
    }
    uint64_t v115 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v115);
    v118 = "#ContactResolution multicardinalIndex is nil, overwriting contacts slot";
    goto LABEL_78;
  }
  uint64_t v107 = outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v25);
  if (!v107)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v119 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v119, (uint64_t)static Logger.siriPhone);
    os_log_type_t v120 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v120)) {
      goto LABEL_79;
    }
    uint64_t v121 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v121);
    v118 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
    goto LABEL_78;
  }
  OUTLINED_FUNCTION_76_8(v107);
  if (!v97)
  {
    OUTLINED_FUNCTION_99_6();
LABEL_73:
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_23_36();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_73;
  }
  OUTLINED_FUNCTION_34_21();
  uint64_t v108 = (void *)OUTLINED_FUNCTION_114_0();
  swift_bridgeObjectRelease();
  if ((unint64_t)v143[0] >> 62)
  {
    OUTLINED_FUNCTION_32_3();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_15_0();
  }
  OUTLINED_FUNCTION_98_6();
  if (v110 ^ v111 | v109) {
    goto LABEL_58;
  }
  OUTLINED_FUNCTION_23_36();
  uint64_t v122 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((unint64_t)v143[0] >> 62)
  {
    OUTLINED_FUNCTION_50_14();
    uint64_t v123 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v123 = *(void *)((char *)&dword_10 + (v143[0] & 0xFFFFFFFFFFFFFF8));
  }
  if (v123 < v122)
  {
LABEL_58:

LABEL_74:
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v134 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v134, (uint64_t)static Logger.siriPhone);
    os_log_type_t v135 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v135)) {
      goto LABEL_79;
    }
    uint64_t v136 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v136);
    v118 = "#ContactResolution: overwriting contacts slot";
LABEL_78:
    OUTLINED_FUNCTION_26_30(&dword_0, v116, v117, v118);
    OUTLINED_FUNCTION_6();
LABEL_79:

    INStartVideoCallIntent.overwriteContacts(newContacts:)(v106);
    goto LABEL_80;
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v124 = type metadata accessor for Logger();
  uint64_t v125 = (void *)OUTLINED_FUNCTION_25_0(v124, (uint64_t)static Logger.siriPhone);
  os_log_type_t v126 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v126))
  {
    os_log_type_t v127 = (float *)OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_14_40(v127, 3.852e-34);
    OUTLINED_FUNCTION_67_9(&dword_0, v128, v129, "#ContactResolution updating person at index %ld");
    OUTLINED_FUNCTION_6();
  }

  uint64_t v130 = v143[0];
  id v131 = v108;
  if (!OUTLINED_FUNCTION_112_1() || v130 < 0 || (v130 & 0x4000000000000000) != 0) {
    v143[0] = specialized _ArrayBuffer._consumeAndCreateNew()(v130);
  }
  if (v139 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_60_11();
    if (!v109 & v72)
    {
      OUTLINED_FUNCTION_56_13(v132);
      specialized Array._endMutation()();
      uint64_t v133 = OUTLINED_FUNCTION_84_9();
      INStartVideoCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v133);

LABEL_80:
      swift_bridgeObjectRelease();
LABEL_81:
      outlined destroy of ContactResolverConfigHashable(v140, (uint64_t (*)(void))type metadata accessor for ContactResolverConfigHashable);
      goto LABEL_82;
    }
  }
  __break(1u);
}

{
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  void *v54;
  os_log_type_t v55;
  _WORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t);
  uint64_t v86;
  void (*v87)(uint64_t);
  uint64_t v88;
  void *v89;
  os_log_type_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t);
  uint64_t v104;
  void (*v105)(uint64_t);
  Swift::OpaquePointer v106;
  uint64_t v107;
  void *v108;
  char v109;
  char v110;
  char v111;
  uint64_t v112;
  void *v113;
  os_log_type_t v114;
  _WORD *v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  uint64_t v119;
  os_log_type_t v120;
  _WORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  os_log_type_t v126;
  float *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  os_log_type_t v135;
  _WORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143[5];
  unsigned char v144[48];

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_10_56(v27, v28, v29, v30, v31);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v32);
  uint64_t v34 = OUTLINED_FUNCTION_19_35(v33, v137);
  uint64_t v35 = OUTLINED_FUNCTION_11_0(v34);
  __chkstk_darwin(v35);
  uint64_t v36 = OUTLINED_FUNCTION_27_30();
  uint64_t v37 = OUTLINED_FUNCTION_11_0(v36);
  __chkstk_darwin(v37);
  OUTLINED_FUNCTION_18_31(v38, v138);
  OUTLINED_FUNCTION_62_13();
  OUTLINED_FUNCTION_59_12();
  v39();
  if (v21)
  {
    swift_getObjectType();
    uint64_t v40 = dynamic_cast_existential_1_conditional((uint64_t)v22);
    uint64_t v41 = one-time initialization token for siriPhone;
    if (v40)
    {
      id v42 = OUTLINED_FUNCTION_83_4();
      if (v41 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      uint64_t v44 = (void *)OUTLINED_FUNCTION_25_0(v43, (uint64_t)static Logger.siriPhone);
      os_log_type_t v45 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v45))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
        OUTLINED_FUNCTION_16_4(&dword_0, v46, v47, "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.");
        OUTLINED_FUNCTION_6();
      }

      id v48 = [objc_allocWithZone((Class)HKHealthStore) init];
      [objc_allocWithZone((Class)HKMedicalIDStore) initWithHealthStore:v48];

      uint64_t v50 = OUTLINED_FUNCTION_115_2(v49, &lazy cache variable for type metadata for HKMedicalIDStore);
      OUTLINED_FUNCTION_61_9(v50, (uint64_t)&protocol witness table for HKMedicalIDStore);
      uint64_t v51 = OUTLINED_FUNCTION_25_30();
      v52(v51);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v143);
      goto LABEL_82;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    uint64_t v54 = (void *)OUTLINED_FUNCTION_25_0(v53, (uint64_t)static Logger.siriPhone);
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_91_9(v55))
    {
      uint64_t v56 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_69_9(v56);
      OUTLINED_FUNCTION_55_11(&dword_0, v57, v58, "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!");
      uint64_t v23 = v139;
      OUTLINED_FUNCTION_6();
    }
  }
  uint64_t v59 = OUTLINED_FUNCTION_41_18();
  uint64_t v64 = (uint64_t)specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(v59, v60, v61, v62, v63);
  if (v64)
  {
LABEL_82:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    OUTLINED_FUNCTION_26_1();
    return;
  }
  uint64_t v67 = _swiftEmptyArrayStorage;
  if (v141)
  {
    uint64_t v64 = App.appIdentifier.getter();
    if (v65)
    {
      OUTLINED_FUNCTION_96_5();
      OUTLINED_FUNCTION_36_25();
      OUTLINED_FUNCTION_57_12();
      if (v72)
      {
        OUTLINED_FUNCTION_47_20();
        uint64_t v71 = v68;
      }
      OUTLINED_FUNCTION_58_13(v68, v69, v70, v71);
    }
    else
    {
      uint64_t v67 = _swiftEmptyArrayStorage;
    }
  }
  OUTLINED_FUNCTION_90_8(v64, v65, v66, (uint64_t)v67);
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once();
  }
  id v73 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v75 = v74;

  uint64_t v76 = OUTLINED_FUNCTION_8_78();
  v77(v76);
  OUTLINED_FUNCTION_15_46();
  outlined init with copy of SignalProviding(v26, (uint64_t)&v142);
  id v78 = v22;
  uint64_t v79 = OUTLINED_FUNCTION_92_6();
  OUTLINED_FUNCTION_17_33(v79, v80, v81, v82, v83, (uint64_t)&protocol witness table for INStartCallIntent);
  uint64_t v84 = OUTLINED_FUNCTION_4_77();
  v85(v84);
  uint64_t v86 = OUTLINED_FUNCTION_5_60();
  v87(v86);
  if (v75)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v143);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_42(v88, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    uint64_t v89 = (void *)Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_37_0(v90))
    {
      OUTLINED_FUNCTION_47();
      v143[0] = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_38_21(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v91 = OUTLINED_FUNCTION_93_8();
      uint64_t v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v92, v143);
      OUTLINED_FUNCTION_37_23(v93);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      OUTLINED_FUNCTION_3(&dword_0, v94, v95, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    OUTLINED_FUNCTION_46_16();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    OUTLINED_FUNCTION_111_3();
    if (OUTLINED_FUNCTION_39_23())
    {
      dispatch thunk of InferenceError.log()();
      swift_release();
    }
    else
    {
      getpid();
      OUTLINED_FUNCTION_46_16();
      String.init<A>(describing:)();
      String._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_108_4();
      OUTLINED_FUNCTION_64_4();
    }
    specialized INPersonContainingIntent.clearContactsSlotMatches()((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter, (void (*)(void *))INStartCallIntent.overwriteContacts(newContacts:));
    swift_errorRelease();
    goto LABEL_81;
  }
  OUTLINED_FUNCTION_12_47();
  id v96 = [v25 typeName];
  uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v99 = v98;

  outlined init with copy of SignalProviding((uint64_t)v144, (uint64_t)v143);
  uint64_t v100 = OUTLINED_FUNCTION_113_2();
  OUTLINED_FUNCTION_22_42(v100);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_53_15();
  OUTLINED_FUNCTION_68_6();
  OUTLINED_FUNCTION_63_7();
  swift_release();
  uint64_t v101 = *(void *)(v24 + 16);
  if (v101)
  {
    OUTLINED_FUNCTION_89_8((uint64_t)_swiftEmptyArrayStorage);
    OUTLINED_FUNCTION_6_72();
    do
    {
      uint64_t v102 = OUTLINED_FUNCTION_29_27();
      v103(v102);
      ResolvedSiriKitContact.person.getter();
      uint64_t v104 = OUTLINED_FUNCTION_31_28();
      v105(v104);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      OUTLINED_FUNCTION_85_7();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v99 += v23;
      --v101;
    }
    while (v101);
    v106._rawValue = (void *)v143[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v106._rawValue = _swiftEmptyArrayStorage;
  }
  if ((unint64_t)v106._rawValue >> 62)
  {
    OUTLINED_FUNCTION_21_36();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_35_26();
  }
  else
  {
    OUTLINED_FUNCTION_78_7();
  }
  if (a21)
  {
    OUTLINED_FUNCTION_104_2();
    if (!v109) {
      swift_once();
    }
    uint64_t v112 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v112, (uint64_t)static Logger.siriPhone);
    os_log_type_t v114 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v114)) {
      goto LABEL_79;
    }
    uint64_t v115 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v115);
    v118 = "#ContactResolution multicardinalIndex is nil, overwriting contacts slot";
    goto LABEL_78;
  }
  uint64_t v107 = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v25);
  if (!v107)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v119 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v119, (uint64_t)static Logger.siriPhone);
    os_log_type_t v120 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v120)) {
      goto LABEL_79;
    }
    uint64_t v121 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v121);
    v118 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
    goto LABEL_78;
  }
  OUTLINED_FUNCTION_76_8(v107);
  if (!v97)
  {
    OUTLINED_FUNCTION_99_6();
LABEL_73:
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_23_36();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_73;
  }
  OUTLINED_FUNCTION_34_21();
  uint64_t v108 = (void *)OUTLINED_FUNCTION_114_0();
  swift_bridgeObjectRelease();
  if ((unint64_t)v143[0] >> 62)
  {
    OUTLINED_FUNCTION_32_3();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_15_0();
  }
  OUTLINED_FUNCTION_98_6();
  if (v110 ^ v111 | v109) {
    goto LABEL_58;
  }
  OUTLINED_FUNCTION_23_36();
  uint64_t v122 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((unint64_t)v143[0] >> 62)
  {
    OUTLINED_FUNCTION_50_14();
    uint64_t v123 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v123 = *(void *)((char *)&dword_10 + (v143[0] & 0xFFFFFFFFFFFFFF8));
  }
  if (v123 < v122)
  {
LABEL_58:

LABEL_74:
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v134 = type metadata accessor for Logger();
    os_log_type_t v113 = (void *)OUTLINED_FUNCTION_25_0(v134, (uint64_t)static Logger.siriPhone);
    os_log_type_t v135 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v135)) {
      goto LABEL_79;
    }
    uint64_t v136 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v136);
    v118 = "#ContactResolution: overwriting contacts slot";
LABEL_78:
    OUTLINED_FUNCTION_26_30(&dword_0, v116, v117, v118);
    OUTLINED_FUNCTION_6();
LABEL_79:

    INStartCallIntent.overwriteContacts(newContacts:)(v106);
    goto LABEL_80;
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v124 = type metadata accessor for Logger();
  uint64_t v125 = (void *)OUTLINED_FUNCTION_25_0(v124, (uint64_t)static Logger.siriPhone);
  os_log_type_t v126 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v126))
  {
    os_log_type_t v127 = (float *)OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_14_40(v127, 3.852e-34);
    OUTLINED_FUNCTION_67_9(&dword_0, v128, v129, "#ContactResolution updating person at index %ld");
    OUTLINED_FUNCTION_6();
  }

  uint64_t v130 = v143[0];
  id v131 = v108;
  if (!OUTLINED_FUNCTION_112_1() || v130 < 0 || (v130 & 0x4000000000000000) != 0) {
    v143[0] = specialized _ArrayBuffer._consumeAndCreateNew()(v130);
  }
  if (v139 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_60_11();
    if (!v109 & v72)
    {
      OUTLINED_FUNCTION_56_13(v132);
      specialized Array._endMutation()();
      uint64_t v133 = OUTLINED_FUNCTION_84_9();
      INStartCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v133);

LABEL_80:
      swift_bridgeObjectRelease();
LABEL_81:
      outlined destroy of ContactResolverConfigHashable(v140, (uint64_t (*)(void))type metadata accessor for ContactResolverConfigHashable);
      goto LABEL_82;
    }
  }
  __break(1u);
}

#error "2FB17C: call analysis failed (funcsize=17)"

void specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, uint64_t, void, uint64_t, uint64_t),uint64_t (*a23)(uint64_t, uint64_t, void, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v26 = v25;
  int v93 = v27;
  uint64_t v82 = v29;
  uint64_t v83 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v90 = v36;
  id v96 = a22;
  uint64_t v37 = type metadata accessor for ContactQuery();
  OUTLINED_FUNCTION_0_0();
  uint64_t v39 = v38;
  __chkstk_darwin(v40);
  OUTLINED_FUNCTION_12_25();
  uint64_t v42 = __chkstk_darwin(v41);
  uint64_t v86 = (char *)&v78 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v95 = (char *)&v78 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v94 = (char *)&v78 - v47;
  uint64_t v48 = *(void *)(v26 - 8);
  __chkstk_darwin(v46);
  OUTLINED_FUNCTION_75_7();
  OUTLINED_FUNCTION_12();
  v49();
  uint64_t v84 = v23;
  uint64_t v50 = v23;
  uint64_t v51 = v26;
  if (v96(v50, v83, 0, v26, a21)) {
    goto LABEL_29;
  }
  uint64_t v79 = v48;
  uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t))(a21 + 24);
  uint64_t v81 = v26;
  uint64_t v80 = a21;
  uint64_t v53 = v52(v26, a21);
  uint64_t v54 = *(void *)(v53 + 16);
  id v96 = v35;
  uint64_t v91 = v31;
  uint64_t v92 = v33;
  if (v54)
  {
    uint64_t v98 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v55 = v53 + 32;
    uint64_t v90 = v39 + 32;
    uint64_t v56 = v98;
    do
    {
      outlined init with copy of SignalProviding(v55, (uint64_t)v97);
      __swift_project_boxed_opaque_existential_1(v97, v97[3]);
      SiriPhoneContact.asSiriInferenceContact.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_79_7();
        uint64_t v56 = v98;
      }
      unint64_t v57 = v56[2];
      if (v57 >= v56[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v56 = v98;
      }
      v56[2] = v57 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 32))((unint64_t)v56+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v57, v24, v37);
      uint64_t v98 = v56;
      v55 += 40;
      --v54;
      uint64_t v35 = v96;
    }
    while (v54);
    swift_bridgeObjectRelease();
    uint64_t v31 = v91;
    uint64_t v33 = v92;
    uint64_t v58 = v94;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v56 = _swiftEmptyArrayStorage;
    uint64_t v58 = v94;
  }
  v97[0] = _swiftEmptyArrayStorage;
  char v59 = v93;
  uint64_t v90 = v56[2];
  if (!v90)
  {
LABEL_28:
    id v96 = a23;
    uint64_t v72 = v84;
    char v73 = v59 & 1;
    swift_bridgeObjectRelease();
    uint64_t v74 = v97[0];
    uint64_t v51 = v81;
    uint64_t v75 = v80;
    Swift::Bool v76 = PhoneCallNLIntent.isDisplayNameEmergencyContact()();
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    uint64_t v77 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, Swift::Bool, uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, char, void *, uint64_t, uint64_t, uint64_t))v96)(v83, v74, v76, v35, v33, v72, v31, v82, v73, v97, v77, v51, v75);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
    uint64_t v48 = v79;
LABEL_29:
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v84, v51);
    OUTLINED_FUNCTION_26_1();
    return;
  }
  unint64_t v60 = 0;
  uint64_t v85 = (void (**)(void))(v39 + 32);
  uint64_t v88 = v39 + 8;
  uint64_t v89 = v39 + 16;
  uint64_t v87 = (v39 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  while (v60 < v56[2])
  {
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v61(v58, (char *)v56+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v60, v37);
    if (one-time initialization token for emptyQuery != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v37, (uint64_t)static ContactQuery.emptyQuery);
    char v62 = static ContactQuery.== infix(_:_:)();
    uint64_t v63 = v58;
    char v64 = v62;
    v61(v95, v63, v37);
    if (v64)
    {
      uint64_t v65 = OUTLINED_FUNCTION_71_8();
      ((void (*)(uint64_t))v61)(v65);
    }
    else
    {
      if (one-time initialization token for emptyNLv4Query != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v37, (uint64_t)static ContactQuery.emptyNLv4Query);
      char v66 = static ContactQuery.== infix(_:_:)();
      uint64_t v67 = OUTLINED_FUNCTION_71_8();
      ((void (*)(uint64_t))v61)(v67);
      if ((v66 & 1) == 0)
      {
        uint64_t v69 = *v85;
        OUTLINED_FUNCTION_15_10();
        v69();
        uint64_t v70 = v97[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_97_5();
          uint64_t v70 = v97[0];
        }
        unint64_t v71 = *(void *)(v70 + 16);
        if (v71 >= *(void *)(v70 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v70 = v97[0];
        }
        *(void *)(v70 + 16) = v71 + 1;
        OUTLINED_FUNCTION_15_10();
        v69();
        v97[0] = v70;
        uint64_t v35 = v96;
        uint64_t v58 = v94;
        goto LABEL_27;
      }
    }
    uint64_t v58 = v94;
    uint64_t v68 = OUTLINED_FUNCTION_75();
    ((void (*)(uint64_t))v61)(v68);
    uint64_t v35 = v96;
LABEL_27:
    ++v60;
    uint64_t v31 = v91;
    uint64_t v33 = v92;
    char v59 = v93;
    if (v90 == v60) {
      goto LABEL_28;
    }
  }
  __break(1u);
}

void *specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  outlined init with copy of CallStateProvider(a5, (uint64_t)v29);
  id v8 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [objc_allocWithZone((Class)FLOWSchemaFLOWPhoneCallContext) init];
    if (v10)
    {
      uint64_t v11 = v10;
      if (a2)
      {
        uint64_t v19 = (void *)OUTLINED_FUNCTION_7_0();
        static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv4(phoneContext:resolvedSiriKitContacts:)(v19, v20);
      }
      else
      {
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t v12 = OUTLINED_FUNCTION_65_7();
        uint64_t v14 = v13(v12);
        static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv3(phoneCallContacts:phoneContext:)(v14, v11);
        swift_bridgeObjectRelease();
      }
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      uint64_t v21 = OUTLINED_FUNCTION_65_7();
      uint64_t v23 = *(void *)(v22(v21) + 16);
      swift_bridgeObjectRelease();
      if (v23) {
        [v11 addPersonType:10];
      }
      specialized static PhoneDomainContextMetricsUtils.addPhoneCallAppType(phoneCallNLIntent:app:phoneContext:callStateProvider:)(a1, a3, v11);
      uint64_t v24 = OUTLINED_FUNCTION_105_2();
      static PhoneDomainContextMetricsUtils.addPhoneCallType(phoneCallNLIntent:phoneContext:)(v24, v25);
      uint64_t v26 = OUTLINED_FUNCTION_105_2();
      static PhoneDomainContextMetricsUtils.addEmergencyType(phoneCallNLIntent:phoneContext:)(v26, v27);
      [v9 setPhoneCallContext:v11];
      [v9 setHasPhoneCallContext:1];
      goto LABEL_15;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_25_0(v15, (uint64_t)static Logger.siriPhone);
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v16))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_1_3(&dword_0, v17, v18, "#PhoneDomainContextMetricsUtils returning without logging phone domain context");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v9 = 0;
LABEL_15:

  outlined destroy of CallStateProvider((uint64_t)v29);
  return v9;
}

id specialized static PhoneDomainContextMetricsUtils.addPhoneCallAppType(phoneCallNLIntent:app:phoneContext:callStateProvider:)(void *a1, uint64_t a2, void *a3)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for App?);
    uint64_t v10 = String.init<A>(describing:)();
    uint64_t v14 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v7, v8, "#PhoneDomainContextMetricsUtils addPhoneCallAppType with app: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a2) {
      goto LABEL_5;
    }
    return objc_msgSend(a3, "setPhoneCallAppType:", 0, v14, v15);
  }

  swift_release_n();
  if (!a2) {
    return objc_msgSend(a3, "setPhoneCallAppType:", 0, v14, v15);
  }
LABEL_5:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  if (PhoneCallNLIntent.isFaceTimeCall()() && App.isFirstParty()())
  {
    objc_msgSend(a3, "setPhoneCallAppType:", 2, v14, v15);
  }
  else if (App.isFirstParty()())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    if (PhoneCallNLIntent.isHangUpCall()()
      && (type metadata accessor for SiriEnvironment(),
          static SiriEnvironment.root.getter(),
          SiriEnvironment.callState.getter(),
          swift_release(),
          char v13 = dispatch thunk of CallStateEnvironmentProvider.isDropInCall.getter(),
          swift_release(),
          (v13 & 1) != 0))
    {
      objc_msgSend(a3, "setPhoneCallAppType:", 4, v14, v15);
    }
    else
    {
      objc_msgSend(a3, "setPhoneCallAppType:", 1, v14, v15);
    }
  }
  else
  {
    objc_msgSend(a3, "setPhoneCallAppType:", 3, v14, v15);
  }
  return (id)swift_release();
}

uint64_t outlined destroy of (SiriPhoneContact, INPerson)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SiriPhoneContact, INPerson));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

#error "2FC744: call analysis failed (funcsize=17)"

uint64_t sub_2FDA14()
{
  uint64_t v1 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 64) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v8);
}

#error "2FDBB0: call analysis failed (funcsize=57)"

id partial apply for closure #1 in closure #1 in static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = static EmergencyContactResolution.makeINPerson(emergencyContact:locale:)(*a1);
  *a2 = result;
  return result;
}

uint64_t outlined destroy of ContactResolverConfigHashable(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_77()
{
  __swift_destroy_boxed_opaque_existential_1(v1 - 168);
  uint64_t v2 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

void OUTLINED_FUNCTION_6_72()
{
  *(void *)(v1 - 224) = *(void *)(*(void *)(v1 - 248) + 16);
  *(void *)(v1 - 248) = v0;
}

uint64_t OUTLINED_FUNCTION_8_78()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_10_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 - 240) = a5;
  *(void *)(v5 - 224) = a4;
  return type metadata accessor for ResolvedSiriKitContact();
}

uint64_t OUTLINED_FUNCTION_12_47()
{
  uint64_t v1 = *(void **)(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 - 168);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return type metadata accessor for SiriKitEvent();
}

uint64_t OUTLINED_FUNCTION_13_44()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_40(float *a1, float a2)
{
  *a1 = a2;
  *(void *)(v2 - 208) = *(void *)(v2 - 272);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_15_46()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 168), *(void *)(v0 - 144));
  return DeviceState.siriInputLocale.getter();
}

uint64_t OUTLINED_FUNCTION_16_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v13 = *(uint64_t **)(v11 - 232);
  return ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)(v6, v7, v8, v10, v9, a6, v11 - 208, v13);
}

uint64_t *OUTLINED_FUNCTION_18_31@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v4 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 - 104) = v3;
  *(void *)(v4 - 96) = v2;
  return __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 - 128));
}

uint64_t OUTLINED_FUNCTION_19_35@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 264) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for Locale();
}

uint64_t OUTLINED_FUNCTION_22_42(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(v2 - 224);
  outlined init with take of AppSelectionSignalComponent((long long *)(v2 - 168), a1 + 24);
  *(void *)(a1 + 64) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_23_36()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_26_30(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_29_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_21()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_35_26()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_36_25()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_37_23(uint64_t a1)
{
  *(void *)(v1 - 208) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_38_21(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v3 - 208) = v2;
  return swift_errorRetain();
}

uint64_t OUTLINED_FUNCTION_39_23()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_41_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_16()
{
  *(void *)(v1 - 168) = v0;
  return swift_errorRetain();
}

void OUTLINED_FUNCTION_47_20()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_48_18()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_50_14()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_53_15()
{
  *(unsigned char *)(v0 - 208) = 0;
}

void OUTLINED_FUNCTION_55_11(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

void OUTLINED_FUNCTION_56_13(uint64_t a1@<X8>)
{
  uint64_t v4 = a1 + 8 * v1;
  os_log_type_t v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = v2;
}

void OUTLINED_FUNCTION_58_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 16) = v6;
  uint64_t v8 = a4 + 16 * v7;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v5;
}

uint64_t OUTLINED_FUNCTION_61_9@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v3 - 144) = result;
  *(void *)(v3 - 136) = a2;
  *(void *)(v3 - 168) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_63_7()
{
  return dispatch thunk of SiriKitEventSending.send(_:)();
}

void OUTLINED_FUNCTION_67_9(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_68_6()
{
  return SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
}

_WORD *OUTLINED_FUNCTION_69_9(_WORD *result)
{
  *(void *)(v2 - 272) = v1;
  *id result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_70_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_7()
{
  return ContactHandleQuery.init(type:label:value:)();
}

uint64_t OUTLINED_FUNCTION_76_8(uint64_t result)
{
  *(void *)(v1 - 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_81_8()
{
  return v0;
}

id OUTLINED_FUNCTION_83_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_84_9()
{
  return *(void *)(v0 - 168);
}

uint64_t OUTLINED_FUNCTION_85_7()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t OUTLINED_FUNCTION_86_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_87_5(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
  return ContactQuery.handle.setter();
}

uint64_t OUTLINED_FUNCTION_89_8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 168) = a1;
  return specialized ContiguousArray.reserveCapacity(_:)();
}

void OUTLINED_FUNCTION_90_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 - 240) = a4;
  *(void *)(v5 - 272) = v4;
}

BOOL OUTLINED_FUNCTION_91_9(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_92_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_93_8()
{
  return String.init<A>(describing:)();
}

void OUTLINED_FUNCTION_97_5()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_99_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_105_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_106_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_111_3()
{
  return type metadata accessor for InferenceError();
}

uint64_t OUTLINED_FUNCTION_112_1()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t OUTLINED_FUNCTION_113_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_114_0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t OUTLINED_FUNCTION_115_2(uint64_t a1, unint64_t *a2)
{
  return type metadata accessor for CNContactStore(0, a2);
}

uint64_t specialized Collection.emptyToNil.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static PersonNameComponents.phoneticComponents(for:)(void *a1)
{
  PersonNameComponents.init()();
  uint64_t v2 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(a1, (SEL *)&selRef_pronunciationGivenName);
  if (!v3 || (specialized Collection.emptyToNil.getter(v2, v3), uint64_t v5 = v4, swift_bridgeObjectRelease(), !v5))
  {
    id v6 = [a1 phoneticGivenName];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;

    specialized Collection.emptyToNil.getter(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  PersonNameComponents.givenName.setter();
  uint64_t v10 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(a1, (SEL *)&selRef_pronunciationFamilyName);
  if (!v11 || (specialized Collection.emptyToNil.getter(v10, v11), uint64_t v13 = v12, swift_bridgeObjectRelease(), !v13))
  {
    id v14 = [a1 phoneticFamilyName];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    specialized Collection.emptyToNil.getter(v15, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  PersonNameComponents.familyName.setter();
  id v18 = [a1 phoneticMiddleName];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v21 = v20;

  specialized Collection.emptyToNil.getter(v19, v21);
  swift_bridgeObjectRelease();
  return PersonNameComponents.middleName.setter();
}

uint64_t PersonNameComponents.init(name:phoneticName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PersonNameComponents();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v3);
  PersonNameComponents.phoneticRepresentation.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t SiriPhoneDefaultsKey.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    default:
      return result;
  }
  return result;
}

PhoneCallFlowDelegatePlugin::SiriPhoneDefaultsKey_optional __swiftcall SiriPhoneDefaultsKey.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of SiriPhoneDefaultsKey.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::SiriPhoneDefaultsKey_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::SiriPhoneDefaultsKey_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SiriPhoneDefaultsKey(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SiriPhoneDefaultsKey()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SiriPhoneDefaultsKey(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SiriPhoneDefaultsKey(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SiriPhoneDefaultsKey_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SiriPhoneDefaultsKey@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SiriPhoneDefaultsKey_optional *a2@<X8>)
{
  result.value = SiriPhoneDefaultsKey.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SiriPhoneDefaultsKey@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SiriPhoneDefaultsKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t *SiriPhoneDefaults.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  return &static SiriPhoneDefaults.instance;
}

uint64_t static SiriPhoneDefaults.instance.getter()
{
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  uint64_t v0 = static SiriPhoneDefaults.instance;
  id v1 = (id)static SiriPhoneDefaults.instance;
  return v0;
}

void SiriPhoneDefaults.set<A>(key:value:)(uint64_t a1, uint64_t a2, void *a3)
{
  OUTLINED_FUNCTION_1();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  static DictionaryEncoderDecoder.encode<A>(_:)(v6);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v8, v9))
  {

    OUTLINED_FUNCTION_6_73();
    if (a3) {
      goto LABEL_5;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_47();
  uint64_t v17 = OUTLINED_FUNCTION_14_0();
  *(_DWORD *)uint64_t v10 = 136315138;
  swift_bridgeObjectRetain();
  uint64_t v11 = Dictionary.description.getter();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, &v17);
  OUTLINED_FUNCTION_7_22(v14);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  OUTLINED_FUNCTION_6_73();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_0, v8, v9, "#SiriPhoneDefaults Set: %s", v10, 0xCu);
  swift_arrayDestroy();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_6();

  if (!a3) {
    goto LABEL_7;
  }
LABEL_5:
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setObject:isa forKey:v16];

LABEL_8:
  OUTLINED_FUNCTION_26_1();
}

Swift::Void __swiftcall SiriPhoneDefaults.clear(key:)(PhoneCallFlowDelegatePlugin::SiriPhoneDefaultsKey key)
{
  if (v1)
  {
    Swift::String v2 = v1;
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 removeObjectForKey:v3];
  }
}

void protocol witness for SiriPhoneDefaultsProviding.set<A>(key:value:) in conformance SiriPhoneDefaults(uint64_t a1, uint64_t a2)
{
  SiriPhoneDefaults.set<A>(key:value:)(a1, a2, *v2);
}

unint64_t lazy protocol witness table accessor for type SiriPhoneDefaultsKey and conformance SiriPhoneDefaultsKey()
{
  unint64_t result = lazy protocol witness table cache variable for type SiriPhoneDefaultsKey and conformance SiriPhoneDefaultsKey;
  if (!lazy protocol witness table cache variable for type SiriPhoneDefaultsKey and conformance SiriPhoneDefaultsKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SiriPhoneDefaultsKey and conformance SiriPhoneDefaultsKey);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SiriPhoneDefaultsKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2FF240);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriPhoneDefaultsKey()
{
  return &type metadata for SiriPhoneDefaultsKey;
}

void **assignWithCopy for SiriPhoneDefaults(void **a1, void **a2)
{
  int v3 = *a1;
  unsigned int v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for SiriPhoneDefaults(void **a1, void **a2)
{
  int v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for SiriPhoneDefaults()
{
  return &type metadata for SiriPhoneDefaults;
}

uint64_t OUTLINED_FUNCTION_6_73()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t FaceTimeMessageControllerFlow.__allocating_init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, char a5, uint64_t a6, uint64_t a7, long long *a8)
{
  uint64_t v23 = a6;
  uint64_t v24 = a8;
  uint64_t v14 = swift_allocObject();
  uint64_t v16 = *(void *)(a7 + 24);
  uint64_t v15 = *(void *)(a7 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a7, v16);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  uint64_t v21 = specialized FaceTimeMessageControllerFlow.init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)(a1, a2, a3, a4, a5, v23, (uint64_t)v19, v24, v14, v16, v15);
  __swift_destroy_boxed_opaque_existential_1(a7);
  return v21;
}

uint64_t FaceTimeMessageControllerFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  __chkstk_darwin(v4 - 8);
  OUTLINED_FUNCTION_12_0();
  if ((*(unsigned __int8 (**)(void))(*v1 + 152))() == 1)
  {
    uint64_t v5 = enum case for ConfirmationResponse.confirmed(_:);
    uint64_t v6 = type metadata accessor for ConfirmationResponse();
    OUTLINED_FUNCTION_15();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
    uint64_t v8 = (void *)v1[3];
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
    id v9 = v8;
    ConfirmIntentAnswer.init(confirmationResponse:intent:)();
    uint64_t v10 = enum case for PromptResult.answered<A>(_:);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
    OUTLINED_FUNCTION_15();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 104))(a1, v10);
  }
  else
  {
    uint64_t v13 = enum case for PromptResult.cancelled<A>(_:);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
    OUTLINED_FUNCTION_15();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 104);
    return v16(a1, v13, v14);
  }
}

unint64_t FaceTimeMessageControllerFlow.State.rawValue.getter(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_0_56();
  }
  if (a1 == 1) {
    return 0x65756E69746E6F63;
  }
  return 0x43526C65636E6163;
}

PhoneCallFlowDelegatePlugin::FaceTimeMessageControllerFlow::State_optional __swiftcall FaceTimeMessageControllerFlow.State.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of FaceTimeMessageControllerFlow.State.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::FaceTimeMessageControllerFlow::State_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::FaceTimeMessageControllerFlow::State_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance FaceTimeMessageControllerFlow.State(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance FaceTimeMessageControllerFlow.State()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance FaceTimeMessageControllerFlow.State(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance FaceTimeMessageControllerFlow.State(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::FaceTimeMessageControllerFlow::State_optional protocol witness for RawRepresentable.init(rawValue:) in conformance FaceTimeMessageControllerFlow.State@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::FaceTimeMessageControllerFlow::State_optional *a2@<X8>)
{
  result.value = FaceTimeMessageControllerFlow.State.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance FaceTimeMessageControllerFlow.State@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FaceTimeMessageControllerFlow.State.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance FaceTimeMessageControllerFlow.State()
{
  return FaceTimeMessageControllerFlow.State.rawValue.getter(*v0);
}

id FaceTimeMessageControllerFlow.intentResponse.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t ParticipantOutputProvider.crrOutputGenerator.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 128, a1);
}

uint64_t key path setter for FaceTimeMessageControllerFlow.state : FaceTimeMessageControllerFlow(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 168) = v2;
  return result;
}

uint64_t FaceTimeMessageControllerFlow.state.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t FaceTimeMessageControllerFlow.init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, char a5, uint64_t a6, uint64_t a7, long long *a8)
{
  uint64_t v23 = a6;
  uint64_t v24 = a8;
  uint64_t v16 = *(void *)(a7 + 24);
  uint64_t v15 = *(void *)(a7 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a7, v16);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  uint64_t v21 = specialized FaceTimeMessageControllerFlow.init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)(a1, a2, a3, a4, a5, v23, (uint64_t)v19, v24, v8, v16, v15);
  __swift_destroy_boxed_opaque_existential_1(a7);
  return v21;
}

uint64_t FaceTimeMessageControllerFlow.execute(completion:)()
{
  type metadata accessor for FaceTimeMessageControllerFlow();
  lazy protocol witness table accessor for type FaceTimeMessageControllerFlow and conformance FaceTimeMessageControllerFlow(&lazy protocol witness table cache variable for type FaceTimeMessageControllerFlow and conformance FaceTimeMessageControllerFlow, v0, (void (*)(uint64_t))type metadata accessor for FaceTimeMessageControllerFlow);
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t FaceTimeMessageControllerFlow.execute()(uint64_t a1)
{
  v2[13] = a1;
  v2[14] = v1;
  type metadata accessor for CATOption();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(FaceTimeMessageControllerFlow.execute(), 0, 0);
}

uint64_t FaceTimeMessageControllerFlow.execute()()
{
  uint64_t v31 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  char v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[14];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[11] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x2865747563657865, 0xE900000000000029, &v30);
    uint64_t v7 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2080;
    int v8 = (*(unsigned __int8 (**)(uint64_t))(*(void *)v5 + 152))(v7);
    if (v8)
    {
      if (v8 == 1)
      {
        unint64_t v9 = 0xEF776F6C46484352;
        uint64_t v10 = 0x65756E69746E6F63;
      }
      else
      {
        unint64_t v9 = 0xED0000776F6C4648;
        uint64_t v10 = 0x43526C65636E6163;
      }
    }
    else
    {
      unint64_t v9 = 0x80000000004908E0;
      uint64_t v10 = 0xD000000000000012;
    }
    v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v9, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v2, v3, "#FaceTimeMessageControllerFlow %s: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }
  if ((*(unsigned __int8 (**)(void))(*(void *)v0[14] + 152))())
  {
    static ExecuteResponse.complete()();
  }
  else
  {
    uint64_t v29 = (uint64_t)(v0 + 2);
    uint64_t v11 = (void *)v0[14];
    int v27 = __swift_project_boxed_opaque_existential_1(v11 + 16, v11[19]);
    type metadata accessor for SiriKitEvent();
    unint64_t v12 = (void *)v11[3];
    id v13 = [v12 typeName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
    dispatch thunk of SiriKitEventSending.send(_:)();
    swift_release();
    id v14 = [v12 faceTimeLink];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;
    }
    else
    {
      uint64_t v28 = 0;
      uint64_t v17 = 0xE000000000000000;
    }
    id v18 = objc_msgSend(v12, "contacts", v27);
    if (v18)
    {
      uint64_t v19 = v18;
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
      uint64_t v20 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v20 = _swiftEmptyArrayStorage;
    }
    uint64_t v21 = v0[14];
    type metadata accessor for MessagesFaceTimeLinkCompletionFlow(0);
    uint64_t v22 = *(void *)(v21 + 16);
    outlined init with copy of SignalProviding(v21 + 40, v29);
    type metadata accessor for StartCallCATs();
    swift_retain();
    static CATOption.defaultMode.getter();
    uint64_t v23 = CATWrapper.__allocating_init(options:globals:)();
    uint64_t v24 = MessagesFaceTimeLinkCompletionFlow.__allocating_init(faceTimeLink:recipients:app:sharedGlobals:startCallCATs:)(v28, v17, (uint64_t)v20, v22, v29, v23);
    swift_beginAccess();
    *(unsigned char *)(v21 + 168) = 1;
    v0[10] = v24;
    lazy protocol witness table accessor for type FaceTimeMessageControllerFlow and conformance FaceTimeMessageControllerFlow(&lazy protocol witness table cache variable for type MessagesFaceTimeLinkCompletionFlow and conformance MessagesFaceTimeLinkCompletionFlow, 255, (void (*)(uint64_t))type metadata accessor for MessagesFaceTimeLinkCompletionFlow);
    swift_retain();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t closure #1 in FaceTimeMessageControllerFlow.execute()()
{
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter();
}

uint64_t FaceTimeMessageControllerFlow.messagesFlowOnComplete(exitValue:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_12_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a1, v5);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v2, v5);
  if (v9 != enum case for RCHFlowResult.complete<A, B>(_:))
  {
    if (v9 == enum case for RCHFlowResult.error<A, B>(_:))
    {
      uint64_t v19 = OUTLINED_FUNCTION_6_74();
      v20(v19);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        v32[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315138;
        swift_getErrorValue();
        uint64_t v25 = Error.localizedDescription.getter();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v22, v23, "#FaceTimeMessageControllerFlow handle messages flow encountered an error: %s", v24, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
    else
    {
      if (v9 != enum case for RCHFlowResult.cancelled<A, B>(_:))
      {
        OUTLINED_FUNCTION_4_78();
        *(unsigned char *)(v3 + 168) = 2;
        return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
      }
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v28, v29))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_24_1(&dword_0, v30, v31, "#FaceTimeMessageControllerFlow handle messages flow was cancelled or unanswered or encountered a generic error");
        OUTLINED_FUNCTION_6();
      }
    }
    uint64_t result = OUTLINED_FUNCTION_4_78();
    *(unsigned char *)(v3 + 168) = 2;
    return result;
  }
  uint64_t v10 = OUTLINED_FUNCTION_6_74();
  v11(v10);
  unint64_t v12 = *(void **)(v2 + 8);

  swift_release();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_24_1(&dword_0, v16, v17, "#FaceTimeMessageControllerFlow handle messages flow was successful and confirmed");
    OUTLINED_FUNCTION_6();
  }

  uint64_t result = OUTLINED_FUNCTION_4_78();
  *(unsigned char *)(v3 + 168) = 1;
  return result;
}

uint64_t FaceTimeMessageControllerFlow.deinit()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  return v0;
}

uint64_t FaceTimeMessageControllerFlow.__deallocating_deinit()
{
  FaceTimeMessageControllerFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance FaceTimeMessageControllerFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance FaceTimeMessageControllerFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t protocol witness for Flow.execute() in conformance FaceTimeMessageControllerFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 200) + **(int **)(**(void **)v1 + 200));
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *BOOL v4 = v2;
  v4[1] = protocol witness for Flow.execute() in conformance PhoneFlow<A, B>;
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance FaceTimeMessageControllerFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t specialized FaceTimeMessageControllerFlow.init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, char a5, uint64_t a6, uint64_t a7, long long *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a9 + 112) = a10;
  *(void *)(a9 + 120) = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a9 + 88));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_1, a7, a10);
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  outlined init with take of AppSelectionSignalComponent(a4, a9 + 40);
  *(unsigned char *)(a9 + 168) = a5;
  *(void *)(a9 + 80) = a6;
  outlined init with take of AppSelectionSignalComponent(a8, a9 + 128);
  return a9;
}

uint64_t type metadata accessor for FaceTimeMessageControllerFlow()
{
  return self;
}

uint64_t partial apply for closure #1 in FaceTimeMessageControllerFlow.execute()()
{
  return closure #1 in FaceTimeMessageControllerFlow.execute()();
}

uint64_t partial apply for implicit closure #6 in implicit closure #5 in FaceTimeMessageControllerFlow.execute()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t lazy protocol witness table accessor for type FaceTimeMessageControllerFlow and conformance FaceTimeMessageControllerFlow(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type FaceTimeMessageControllerFlow.State and conformance FaceTimeMessageControllerFlow.State()
{
  unint64_t result = lazy protocol witness table cache variable for type FaceTimeMessageControllerFlow.State and conformance FaceTimeMessageControllerFlow.State;
  if (!lazy protocol witness table cache variable for type FaceTimeMessageControllerFlow.State and conformance FaceTimeMessageControllerFlow.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FaceTimeMessageControllerFlow.State and conformance FaceTimeMessageControllerFlow.State);
  }
  return result;
}

uint64_t base witness table accessor for Flow in FaceTimeMessageControllerFlow(uint64_t a1, uint64_t a2)
{
  return lazy protocol witness table accessor for type FaceTimeMessageControllerFlow and conformance FaceTimeMessageControllerFlow(&lazy protocol witness table cache variable for type FaceTimeMessageControllerFlow and conformance FaceTimeMessageControllerFlow, a2, (void (*)(uint64_t))type metadata accessor for FaceTimeMessageControllerFlow);
}

uint64_t sub_300870@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 152))();
  *a2 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FaceTimeMessageControllerFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x30098CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceTimeMessageControllerFlow.State()
{
  return &type metadata for FaceTimeMessageControllerFlow.State;
}

uint64_t OUTLINED_FUNCTION_4_78()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_74()
{
  return v0;
}

uint64_t static RelationshipLabel.from(intentsRelationship:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  object = v3;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  if (StringProtocol.contains<A>(_:)())
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
    swift_bridgeObjectRelease();
    specialized BidirectionalCollection.last.getter(v5);
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    Swift::String v8 = String.lowercased()();
    uint64_t countAndFlagsBits = v8._countAndFlagsBits;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    object = v8._object;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *a1 = countAndFlagsBits;
  a1[1] = (uint64_t)object;
  uint64_t v9 = enum case for RelationshipLabel.custom(_:);
  uint64_t v10 = type metadata accessor for RelationshipLabel();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(a1, v9, v10);
}

uint64_t OUTLINED_FUNCTION_0_59()
{
  return v0;
}

uint64_t PhoneError.logged()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_27();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v27 - v13;
  outlined init with copy of PhoneError(v3, (uint64_t)&v27 - v13);
  if (swift_getEnumCaseMultiPayload() == 23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
    outlined init with copy of PhoneError(v3, (uint64_t)v12);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v29 = a1;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      uint64_t v27 = v19 + 4;
      lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
      OUTLINED_FUNCTION_4_8();
      outlined init with copy of PhoneError((uint64_t)v12, v20);
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v30 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v28 = v21;
      outlined destroy of PhoneError((uint64_t)v12);
      _os_log_impl(&dword_0, v16, v17, "#PhoneError Emitting signpost for %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      a1 = v29;
      OUTLINED_FUNCTION_6();
    }
    else
    {
      outlined destroy of PhoneError((uint64_t)v12);
    }

    static Signpost.event(_:)();
  }
  else
  {
    outlined destroy of PhoneError((uint64_t)v14);
  }
  outlined init with copy of PhoneError(v3, (uint64_t)v9);
  unsigned int v22 = swift_getEnumCaseMultiPayload() - 14;
  if (v22 < 8 && ((0x8Du >> v22) & 1) != 0)
  {
    char v23 = 0;
  }
  else
  {
    outlined destroy of PhoneError((uint64_t)v9);
    char v23 = 1;
  }
  outlined init with copy of PhoneError(v3, v2);
  unsigned int v24 = swift_getEnumCaseMultiPayload() - 14;
  if (v24 < 0xA && ((0x28Du >> v24) & 1) != 0)
  {
    char v25 = 0;
  }
  else
  {
    outlined destroy of PhoneError(v2);
    char v25 = 1;
  }
  return specialized LoggableError.logged(shouldLogToAbc:shouldCreateTTR:)(v23, v25, a1);
}

uint64_t type metadata accessor for PhoneError()
{
  uint64_t result = type metadata singleton initialization cache for PhoneError;
  if (!type metadata singleton initialization cache for PhoneError) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t specialized LoggableError.logged(shouldLogToAbc:shouldCreateTTR:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v38 = 0;
  uint64_t v39 = 0xE000000000000000;
  type metadata accessor for PhoneError();
  _print_unlocked<A, B>(_:_:)();
  if (a1)
  {
    uint64_t v36 = a3;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)unint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v38);
      OUTLINED_FUNCTION_15_47();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v10, v11, "#LoggableError Trying ABC for %s", v12, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a3 = v36;
    uint64_t v13 = specialized LoggableError.caseName.getter();
    unint64_t v15 = v14;
    uint64_t v38 = PhoneError.errorDescription.getter();
    uint64_t v39 = v16;
    OUTLINED_FUNCTION_6_75();
    v17._uint64_t countAndFlagsBits = PhoneError.subTypeContext.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)(0x4C41544146, 0xE500000000000000, v13, v15, v38, v39, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a2)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain();
    uint64_t v37 = v19;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      unsigned int v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)unsigned int v22 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v38);
      OUTLINED_FUNCTION_15_47();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v20, v21, "#LoggableError Trying TTR for %s", v22, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v38 = 0;
    uint64_t v39 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_134();
    uint64_t v38 = v23;
    uint64_t v39 = v24;
    v25._uint64_t countAndFlagsBits = specialized LoggableError.caseName.getter();
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    uint64_t v27 = v38;
    unint64_t v26 = v39;
    uint64_t v38 = PhoneError.errorDescription.getter();
    uint64_t v39 = v28;
    OUTLINED_FUNCTION_6_75();
    v29._uint64_t countAndFlagsBits = PhoneError.subTypeContext.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_75();
    v30._uint64_t countAndFlagsBits = PhoneError.additionalContext.getter();
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v38;
    uint64_t v32 = v39;
    uint64_t v38 = 0;
    uint64_t v39 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v33._uint64_t countAndFlagsBits = 0x45656E6F68502061;
    v33._object = (void *)0xEE002820726F7272;
    String.append(_:)(v33);
    _print_unlocked<A, B>(_:_:)();
    v34._uint64_t countAndFlagsBits = 0x6564207361772029;
    v34._object = (void *)0xEF2E646574636574;
    String.append(_:)(v34);
    static FileRadarUtils.tapToRadar(title:desc:reason:logger:)(v27, v26, v31, v32, v38, v39, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return outlined init with copy of PhoneError(v4, a3);
}

uint64_t specialized LoggableError.caseName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PhoneError();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Mirror();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17[-2] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
  outlined init with copy of PhoneError(v1, (uint64_t)boxed_opaque_existential_1);
  Mirror.init(reflecting:)();
  Mirror.children.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  specialized Collection.first.getter(&v16);
  swift_release();
  if (v17[3])
  {
    os_log_type_t v11 = (void *)*((void *)&v16 + 1);
    uint64_t v10 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v16, &demangling cache variable for type metadata for (label: String?, value: Any)?);
    uint64_t v10 = 0;
    os_log_type_t v11 = 0;
  }
  outlined init with copy of PhoneError(v1, (uint64_t)v4);
  if (!v11)
  {
    *(void *)&long long v16 = 0;
    *((void *)&v16 + 1) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    os_log_type_t v11 = (void *)*((void *)&v16 + 1);
    uint64_t v10 = v16;
  }
  outlined destroy of PhoneError((uint64_t)v4);
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = 0xE000000000000000;
  *(void *)&long long v16 = _typeName(_:qualified:)();
  *((void *)&v16 + 1) = v12;
  v13._uint64_t countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._uint64_t countAndFlagsBits = v10;
  v14._object = v11;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t PhoneError.caseName.getter()
{
  uint64_t v1 = type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Mirror();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_65_2();
  v13[1] = v1;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  outlined init with copy of PhoneError(v0, (uint64_t)boxed_opaque_existential_1);
  Mirror.init(reflecting:)();
  Mirror.children.getter();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
  specialized Collection.first.getter(&v12);
  swift_release();
  if (v13[3])
  {
    uint64_t v9 = (void *)*((void *)&v12 + 1);
    uint64_t v8 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v12, &demangling cache variable for type metadata for (label: String?, value: Any)?);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  outlined init with copy of PhoneError(v0, (uint64_t)v4);
  if (!v9)
  {
    *(void *)&long long v12 = 0;
    *((void *)&v12 + 1) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v9 = (void *)*((void *)&v12 + 1);
    uint64_t v8 = v12;
  }
  outlined destroy of PhoneError((uint64_t)v4);
  *(void *)&long long v12 = 0x727245656E6F6850;
  *((void *)&v12 + 1) = 0xEB000000002E726FLL;
  v10._uint64_t countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t PhoneError.errorDescription.getter()
{
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of PhoneError(v0, (uint64_t)v3);
  uint64_t v4 = 0xD000000000000013;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v8 = *v3;
      lazy protocol witness table accessor for type SlotResolutionError and conformance SlotResolutionError();
      OUTLINED_FUNCTION_4_8();
      *uint64_t v9 = v8;
      goto LABEL_5;
    case 2u:
      long long v10 = *(_OWORD *)v3;
      long long v31 = *((_OWORD *)v3 + 1);
      long long v32 = v10;
      long long v30 = *((_OWORD *)v3 + 2);
      uint64_t v11 = *((void *)v3 + 6);
      char v12 = v3[56];
      lazy protocol witness table accessor for type TemplatingError and conformance TemplatingError();
      OUTLINED_FUNCTION_4_8();
      long long v13 = v31;
      *(_OWORD *)uint64_t v14 = v32;
      *(_OWORD *)(v14 + 16) = v13;
      *(_OWORD *)(v14 + 32) = v30;
      *(void *)(v14 + 48) = v11;
      *(unsigned char *)(v14 + 56) = v12;
      goto LABEL_5;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000031;
    case 5u:
      uint64_t v15 = *(void *)v3;
      unint64_t v16 = *((void *)v3 + 1);
      uint64_t v18 = *((void *)v3 + 2);
      uint64_t v17 = *((void *)v3 + 3);
      unint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      _StringGuts.grow(_:)(39);
      swift_bridgeObjectRelease();
      unint64_t v35 = 0x756220726F727245;
      unint64_t v36 = 0xEF20676E69646C69;
      if (v16) {
        uint64_t v19 = v15;
      }
      else {
        uint64_t v19 = 0;
      }
      if (v16) {
        unint64_t v20 = v16;
      }
      else {
        unint64_t v20 = 0xE000000000000000;
      }
      unint64_t v21 = v20;
      String.append(_:)(*(Swift::String *)&v19);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_48(0xD000000000000014, (uint64_t)" system dialog act: ");
      uint64_t v33 = v18;
      uint64_t v34 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v22 = String.init<A>(describing:)();
      goto LABEL_18;
    case 6u:
      OUTLINED_FUNCTION_5_61();
      _StringGuts.grow(_:)(107);
      OUTLINED_FUNCTION_12_48(0xD000000000000024, (uint64_t)"RCHFlowDelegate method was removed: ");
      OUTLINED_FUNCTION_7_68();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_48(0xD000000000000045, (uint64_t)". If this error has been hit, then a usecase was missed in migration.");
      goto LABEL_21;
    case 7u:
      unint64_t v24 = *(void *)v3;
      unint64_t v25 = *((void *)v3 + 1);
      OUTLINED_FUNCTION_5_61();
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      unint64_t v35 = v24;
      unint64_t v36 = v25;
      OUTLINED_FUNCTION_12_48(0xD000000000000019, (uint64_t)" state is invalid. State=");
      OUTLINED_FUNCTION_7_68();
      goto LABEL_19;
    case 8u:
      OUTLINED_FUNCTION_5_61();
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      unint64_t v35 = 0xD00000000000001ALL;
      unint64_t v36 = 0x8000000000499DD0;
      uint64_t v22 = _typeName(_:qualified:)();
LABEL_18:
      String.append(_:)(*(Swift::String *)&v22);
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 9u:
      OUTLINED_FUNCTION_5_61();
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_134();
      unint64_t v35 = v26;
      unint64_t v36 = v27;
      swift_getErrorValue();
      v28._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      swift_errorRelease();
LABEL_21:
      uint64_t v4 = v35;
      break;
    case 0xAu:
      outlined destroy of PhoneError((uint64_t)v3);
      uint64_t v4 = 0xD000000000000021;
      break;
    case 0xBu:
      return v4;
    case 0xCu:
      uint64_t v4 = 0xD000000000000082;
      break;
    case 0xDu:
LABEL_24:
      uint64_t v4 = 0xD00000000000001ALL;
      break;
    case 0xEu:
      uint64_t v4 = 0xD000000000000027;
      break;
    case 0xFu:
      uint64_t v4 = 0xD000000000000020;
      break;
    case 0x10u:
      uint64_t v4 = 0xD00000000000003BLL;
      break;
    case 0x11u:
      uint64_t v4 = 0xD000000000000031;
      break;
    case 0x12u:
      uint64_t v4 = 0xD000000000000012;
      break;
    case 0x13u:
      uint64_t v4 = 0xD00000000000001DLL;
      break;
    case 0x14u:
      uint64_t v4 = 0xD000000000000019;
      break;
    case 0x15u:
      uint64_t v4 = 0xD00000000000001BLL;
      break;
    case 0x16u:
      uint64_t v4 = 0xD000000000000015;
      break;
    case 0x17u:
      uint64_t v4 = 0xD000000000000029;
      break;
    default:
      uint64_t v5 = *(void *)v3;
      uint64_t v6 = *((void *)v3 + 1);
      lazy protocol witness table accessor for type ParseError and conformance ParseError();
      OUTLINED_FUNCTION_4_8();
      *uint64_t v7 = v5;
      v7[1] = v6;
LABEL_5:
      swift_getErrorValue();
      uint64_t v4 = Error.localizedDescription.getter();
      swift_errorRelease();
      break;
  }
  return v4;
}

uint64_t PhoneError.logger.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t PhoneError.subTypeContext.getter()
{
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_65_2();
  outlined init with copy of PhoneError(v0, v0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = *(void *)v0;
      *((void *)&v23[0] + 1) = *(void *)(v0 + 8);
      lazy protocol witness table accessor for type ParseError and conformance ParseError();
      uint64_t v5 = Error.localizedDescription.getter();
      outlined consume of PhoneCallEmergencyType(v4, *((unint64_t *)&v23[0] + 1));
      return v5;
    case 1u:
      if (*(unsigned char *)v0) {
        return 0xD000000000000020;
      }
      else {
        return 0xD000000000000014;
      }
    case 2u:
      uint64_t v6 = *(void *)(v0 + 48);
      char v7 = *(unsigned char *)(v0 + 56);
      long long v8 = *(_OWORD *)(v0 + 16);
      v23[0] = *(_OWORD *)v0;
      v23[1] = v8;
      long long v23[2] = *(_OWORD *)(v0 + 32);
      uint64_t v24 = v6;
      char v25 = v7;
      return String.init<A>(describing:)();
    case 3u:
      outlined init with take of DialogResultError((long long *)v0, (uint64_t)v23);
      uint64_t v5 = DialogResultError.description.getter();
      outlined release of DialogResultError((uint64_t)v23);
      return v5;
    case 4u:
      uint64_t v9 = *(void *)(v0 + 16);
      long long v10 = *(void **)(v0 + 24);
      uint64_t v12 = *(void *)(v0 + 32);
      uint64_t v11 = *(void **)(v0 + 40);
      uint64_t v13 = *(void *)(v0 + 48);
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      *(void *)&v23[0] = 0x3D736C6961746564;
      *((void *)&v23[0] + 1) = 0xE800000000000000;
      OUTLINED_FUNCTION_16_46();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_87(0x66202D20u);
      v14._uint64_t countAndFlagsBits = v9;
      v14._object = v10;
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_0_60();
      v15._uint64_t countAndFlagsBits = v12;
      v15._object = v11;
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_4_79();
      uint64_t v26 = v13;
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      goto LABEL_14;
    case 5u:
      OUTLINED_FUNCTION_10_57();
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      *(void *)&v23[0] = 0x3D657079546F7375;
      *((void *)&v23[0] + 1) = 0xE800000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      v18._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = 0x726F727265202D20;
      v19._object = (void *)0xE90000000000003DLL;
      String.append(_:)(v19);
      uint64_t v26 = v1;
      uint64_t v27 = v2;
      uint64_t v16 = String.init<A>(describing:)();
      goto LABEL_14;
    case 6u:
      uint64_t v16 = *(void *)v0;
      uint64_t v20 = *(void *)(v0 + 8);
      *(void *)&v23[0] = 0x614E646F6874656DLL;
      *((void *)&v23[0] + 1) = 0xEB000000003D656DLL;
      uint64_t v17 = v20;
      goto LABEL_14;
    case 7u:
      OUTLINED_FUNCTION_10_57();
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      *(void *)&v23[0] = 0x656D614E776F6C66;
      *((void *)&v23[0] + 1) = 0xE90000000000003DLL;
      OUTLINED_FUNCTION_7_68();
      swift_bridgeObjectRelease();
      v21._uint64_t countAndFlagsBits = 0x53776F6C66202D20;
      v21._object = (void *)0xED00003D65746174;
      String.append(_:)(v21);
      OUTLINED_FUNCTION_16_46();
      goto LABEL_15;
    case 8u:
      *(void *)&v23[0] = 0x3D65707974;
      *((void *)&v23[0] + 1) = 0xE500000000000000;
      uint64_t v16 = _typeName(_:qualified:)();
LABEL_14:
      String.append(_:)(*(Swift::String *)&v16);
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)&v23[0];
      break;
    default:
      outlined destroy of PhoneError(v0);
      uint64_t v5 = 0;
      break;
  }
  return v5;
}

unint64_t SlotResolutionError.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000020;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t PhoneError.additionalContext.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_27();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - v4;
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_65_2();
  outlined init with copy of PhoneError(v0, v0);
  if (swift_getEnumCaseMultiPayload() == 10)
  {
    outlined init with take of Parse?(v0, (uint64_t)v5);
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_134();
    uint64_t v12 = v7;
    unint64_t v13 = v8;
    outlined init with copy of Parse?((uint64_t)v5, v1);
    v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = v12;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v5, &demangling cache variable for type metadata for Parse?);
  }
  else
  {
    outlined destroy of PhoneError(v0);
    return 0;
  }
  return v10;
}

uint64_t protocol witness for LocalizedError.errorDescription.getter in conformance PhoneError()
{
  return LocalizedError.errorDescription.getter();
}

uint64_t protocol witness for LocalizedError.failureReason.getter in conformance PhoneError()
{
  return LocalizedError.failureReason.getter();
}

uint64_t protocol witness for LocalizedError.recoverySuggestion.getter in conformance PhoneError()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t protocol witness for LocalizedError.helpAnchor.getter in conformance PhoneError()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t protocol witness for LoggableError.logger.getter in conformance PhoneError@<X0>(uint64_t a1@<X8>)
{
  return PhoneError.logger.getter(a1);
}

uint64_t ParseError.errorDescription.getter(uint64_t a1, char *a2)
{
  unint64_t v2 = 0xD000000000000014;
  if (a2)
  {
    if (a2 == (unsigned char *)&dword_0 + 1)
    {
      return 0x61746E6F63206F4ELL;
    }
    else if (a2 == (unsigned char *)&dword_0 + 2)
    {
      return 0xD000000000000016;
    }
    else
    {
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_134();
      uint64_t v8 = v5;
      v6._uint64_t countAndFlagsBits = a1;
      v6._object = a2;
      String.append(_:)(v6);
      return v8;
    }
  }
  return v2;
}

uint64_t TemplatingError.errorDescription.getter()
{
  outlined init with take of TemplatingError(v0, &v9);
  outlined init with take of TemplatingError(v0, &v10);
  uint64_t v1 = v11;
  if (v13)
  {
    swift_bridgeObjectRetain();
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    uint64_t v8 = 0x2720746F6C53;
    OUTLINED_FUNCTION_7_68();
    outlined release of TemplatingError((uint64_t)v0);
    v2._uint64_t countAndFlagsBits = 0xD000000000000026;
    v2._object = (void *)0x800000000049A1F0;
    String.append(_:)(v2);
  }
  else
  {
    uint64_t v3 = v12;
    uint64_t v8 = 0;
    _StringGuts.grow(_:)(78);
    v4._object = (void *)0x800000000049A220;
    v4._uint64_t countAndFlagsBits = 0xD000000000000024;
    String.append(_:)(v4);
    OUTLINED_FUNCTION_7_68();
    OUTLINED_FUNCTION_3_87(0x46202E22u);
    v5._uint64_t countAndFlagsBits = v1;
    v5._object = v3;
    String.append(_:)(v5);
    OUTLINED_FUNCTION_0_60();
    OUTLINED_FUNCTION_16_46();
    OUTLINED_FUNCTION_4_79();
  }
  v6._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static TemplatingError.__derived_enum_equals(_:_:)(long long *a1, long long *a2)
{
  outlined init with take of TemplatingError(a1, &v33);
  long long v3 = v33;
  if (v39)
  {
    uint64_t v4 = v34;
    outlined init with take of TemplatingError(a2, &v26);
    if (v32 == 1)
    {
      uint64_t v5 = v27;
      if ((void)v3 == (void)v26 && *((void *)&v3 + 1) == *((void *)&v26 + 1)) {
        return v4 == v5;
      }
      _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = OUTLINED_FUNCTION_13_45();
      if (v8) {
        return v4 == v5;
      }
      return result;
    }
    return 0;
  }
  uint64_t v10 = v34;
  uint64_t v11 = v35;
  uint64_t v12 = v36;
  uint64_t v13 = v37;
  uint64_t v14 = v38;
  outlined init with take of TemplatingError(a2, &v26);
  if (v32) {
    return 0;
  }
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  uint64_t v18 = v29;
  uint64_t v17 = v30;
  uint64_t v25 = v31;
  BOOL v19 = (void)v3 == (void)v26 && *((void *)&v3 + 1) == *((void *)&v26 + 1);
  if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = OUTLINED_FUNCTION_13_45(), (v20 & 1) != 0))
  {
    BOOL v21 = v10 == v15 && v11 == v16;
    if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = OUTLINED_FUNCTION_13_45(), (v22 & 1) != 0))
    {
      if (v12 == v18 && v13 == v17) {
        return v14 == v25;
      }
      _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = OUTLINED_FUNCTION_13_45();
      if (v24) {
        return v14 == v25;
      }
    }
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance TemplatingError(long long *a1, long long *a2)
{
  outlined init with take of TemplatingError(a1, v4);
  outlined init with take of TemplatingError(a2, v5);
  return static TemplatingError.__derived_enum_equals(_:_:)(v4, v5) & 1;
}

uint64_t DialogResultError.description.getter()
{
  outlined init with take of DialogResultError(v0, (uint64_t)v7);
  uint64_t v1 = v7[2];
  Swift::String v2 = (void *)v7[3];
  _StringGuts.grow(_:)(73);
  v3._object = (void *)0x800000000049A250;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_16_46();
  OUTLINED_FUNCTION_3_87(0x46202E22u);
  v4._uint64_t countAndFlagsBits = v1;
  v4._object = v2;
  String.append(_:)(v4);
  OUTLINED_FUNCTION_0_60();
  OUTLINED_FUNCTION_7_68();
  OUTLINED_FUNCTION_4_79();
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DialogResultError()
{
  outlined init with take of DialogResultError(v0, (uint64_t)v2);
  return DialogResultError.description.getter();
}

PhoneCallFlowDelegatePlugin::SlotResolutionError_optional __swiftcall SlotResolutionError.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of SlotResolutionError.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_SlotResolutionError_resolutionTypeUnsupportedForSlot;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_SlotResolutionError_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SlotResolutionError(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SlotResolutionError()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SlotResolutionError()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SlotResolutionError(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SlotResolutionError_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SlotResolutionError@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SlotResolutionError_optional *a2@<X8>)
{
  result.value = SlotResolutionError.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SlotResolutionError@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SlotResolutionError.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t lazy protocol witness table accessor for type SlotResolutionError and conformance SlotResolutionError()
{
  unint64_t result = lazy protocol witness table cache variable for type SlotResolutionError and conformance SlotResolutionError;
  if (!lazy protocol witness table cache variable for type SlotResolutionError and conformance SlotResolutionError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SlotResolutionError and conformance SlotResolutionError);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SlotResolutionError and conformance SlotResolutionError;
  if (!lazy protocol witness table cache variable for type SlotResolutionError and conformance SlotResolutionError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SlotResolutionError and conformance SlotResolutionError);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TemplatingError and conformance TemplatingError()
{
  unint64_t result = lazy protocol witness table cache variable for type TemplatingError and conformance TemplatingError;
  if (!lazy protocol witness table cache variable for type TemplatingError and conformance TemplatingError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TemplatingError and conformance TemplatingError);
  }
  return result;
}

uint64_t outlined init with take of DialogResultError(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(void *)(a2 + 48) = *((void *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t outlined release of DialogResultError(uint64_t a1)
{
  return a1;
}

uint64_t outlined init with take of Parse?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *outlined init with take of TemplatingError(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(long long *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

uint64_t outlined release of TemplatingError(uint64_t a1)
{
  return a1;
}

uint64_t outlined consume of TemplatingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unint64_t v7 = a2[1];
        if (v7 >= 3)
        {
          *a1 = *a2;
          a1[1] = v7;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        goto LABEL_16;
      case 2u:
        uint64_t v9 = *a2;
        uint64_t v10 = a2[1];
        uint64_t v11 = a2[2];
        uint64_t v12 = a2[3];
        uint64_t v13 = a2[4];
        uint64_t v14 = a2[5];
        uint64_t v15 = a2[6];
        char v16 = *((unsigned char *)a2 + 56);
        outlined copy of TemplatingError(v9, v10, v11, v12, v13, v14, v15, v16);
        *a1 = v9;
        a1[1] = v10;
        a1[2] = v11;
        a1[3] = v12;
        a1[4] = v13;
        a1[5] = v14;
        a1[6] = v15;
        *((unsigned char *)a1 + 56) = v16;
        goto LABEL_16;
      case 3u:
      case 4u:
        uint64_t v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        uint64_t v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        uint64_t v19 = a2[5];
        a1[4] = a2[4];
        a1[5] = v19;
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 5u:
      case 7u:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = a2[2];
        uint64_t v22 = a2[3];
        a1[2] = v21;
        a1[3] = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 6u:
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 9u:
        uint64_t v24 = *a2;
        swift_errorRetain();
        *a1 = v24;
        goto LABEL_16;
      case 0xAu:
        uint64_t v25 = type metadata accessor for Parse();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v25);
        }
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t outlined copy of TemplatingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = vars8;
  }
  return swift_bridgeObjectRetain();
}

unint64_t destroy for PhoneError(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      unint64_t result = *(void *)(a1 + 8);
      if (result >= 3) {
        goto LABEL_9;
      }
      return result;
    case 2:
      uint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      char v10 = *(unsigned char *)(a1 + 56);
      return outlined consume of TemplatingError(v3, v4, v5, v6, v7, v8, v9, v10);
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 5:
    case 7:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 6:
LABEL_9:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    case 9:
      unint64_t result = swift_errorRelease();
      break;
    case 10:
      uint64_t v11 = type metadata accessor for Parse();
      unint64_t result = __swift_getEnumTagSinglePayload(a1, 1, v11);
      if (!result)
      {
        uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
        unint64_t result = v12(a1, v11);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for PhoneError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      unint64_t v6 = a2[1];
      if (v6 >= 3)
      {
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      goto LABEL_14;
    case 2u:
      uint64_t v7 = *a2;
      uint64_t v8 = a2[1];
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      uint64_t v11 = a2[4];
      uint64_t v12 = a2[5];
      uint64_t v13 = a2[6];
      char v14 = *((unsigned char *)a2 + 56);
      outlined copy of TemplatingError(v7, v8, v9, v10, v11, v12, v13, v14);
      *a1 = v7;
      a1[1] = v8;
      a1[2] = v9;
      a1[3] = v10;
      a1[4] = v11;
      a1[5] = v12;
      a1[6] = v13;
      *((unsigned char *)a1 + 56) = v14;
      goto LABEL_14;
    case 3u:
    case 4u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      uint64_t v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      uint64_t v17 = a2[5];
      a1[4] = a2[4];
      a1[5] = v17;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 5u:
    case 7u:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      uint64_t v19 = a2[2];
      uint64_t v20 = a2[3];
      a1[2] = v19;
      a1[3] = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 6u:
      uint64_t v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 9u:
      uint64_t v22 = *a2;
      swift_errorRetain();
      *a1 = v22;
      goto LABEL_14;
    case 0xAu:
      uint64_t v23 = type metadata accessor for Parse();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v23))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
        memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v23);
      }
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for PhoneError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneError((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        if ((unint64_t)a2[1] >= 3) {
          goto LABEL_9;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        goto LABEL_15;
      case 2u:
        uint64_t v6 = *a2;
        uint64_t v7 = a2[1];
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        uint64_t v10 = a2[4];
        uint64_t v11 = a2[5];
        uint64_t v12 = a2[6];
        char v13 = *((unsigned char *)a2 + 56);
        outlined copy of TemplatingError(v6, v7, v8, v9, v10, v11, v12, v13);
        *a1 = v6;
        a1[1] = v7;
        a1[2] = v8;
        a1[3] = v9;
        a1[4] = v10;
        a1[5] = v11;
        a1[6] = v12;
        *((unsigned char *)a1 + 56) = v13;
        goto LABEL_15;
      case 3u:
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 5u:
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 6u:
LABEL_9:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 9u:
        uint64_t v14 = *a2;
        swift_errorRetain();
        *a1 = v14;
        goto LABEL_15;
      case 0xAu:
        uint64_t v15 = type metadata accessor for Parse();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v15))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v15);
        }
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for PhoneError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 10)
  {
    uint64_t v6 = type metadata accessor for Parse();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PhoneError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneError((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      uint64_t v6 = type metadata accessor for Parse();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void type metadata completion function for PhoneError()
{
  type metadata accessor for Parse?();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

void type metadata accessor for Parse?()
{
  if (!lazy cache variable for type metadata for Parse?)
  {
    type metadata accessor for Parse();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Parse?);
    }
  }
}

void type metadata accessor for ParseError()
{
}

uint64_t destroy for TemplatingError(uint64_t a1)
{
  return outlined consume of TemplatingError(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t initializeWithCopy for TemplatingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  outlined copy of TemplatingError(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for TemplatingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  outlined copy of TemplatingError(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  char v18 = *(unsigned char *)(a1 + 56);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  outlined consume of TemplatingError(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TemplatingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 56) = v4;
  outlined consume of TemplatingError(v5, v7, v6, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplatingError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 57))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplatingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for TemplatingError(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56);
}

uint64_t destructiveInjectEnumTag for TemplatingError(uint64_t result, char a2)
{
  *(unsigned char *)(result + 56) = a2 & 1;
  return result;
}

void type metadata accessor for TemplatingError()
{
}

void *initializeWithCopy for DialogResultError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DialogResultError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

void *assignWithTake for DialogResultError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

void type metadata accessor for DialogResultError()
{
}

unsigned char *storeEnumTagSinglePayload for SlotResolutionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3040DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SlotResolutionError()
{
}

void OUTLINED_FUNCTION_0_60()
{
  uint64_t v1 = 0x6F6874656D202D20;
  unint64_t v2 = 0xEE003D656D614E64;
  String.append(_:)(*(Swift::String *)&v1);
}

void OUTLINED_FUNCTION_3_87(unsigned int a1)
{
  uint64_t v2 = a1 | 0x4E656C6900000000;
  unint64_t v3 = 0xEC0000003D656D61;
  String.append(_:)(*(Swift::String *)&v2);
}

void OUTLINED_FUNCTION_4_79()
{
  uint64_t v1 = 0x3D656E696C202D20;
  unint64_t v2 = 0xE800000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void OUTLINED_FUNCTION_6_75()
{
  uint64_t v1 = 657930;
  unint64_t v2 = 0xE300000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void OUTLINED_FUNCTION_7_68()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

void OUTLINED_FUNCTION_10_57()
{
  *(void *)(v0 - 144) = 0;
  *(void *)(v0 - 136) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_12_48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_13_45()
{
  return 0;
}

void OUTLINED_FUNCTION_16_46()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t *PhoneStartRequestUtterances.confirmUtterance.unsafeMutableAddressor()
{
  if (one-time initialization token for confirmUtterance != -1) {
    swift_once();
  }
  return &static PhoneStartRequestUtterances.confirmUtterance;
}

uint64_t *PhoneStartRequestUtterances.cancelUtterance.unsafeMutableAddressor()
{
  if (one-time initialization token for cancelUtterance != -1) {
    swift_once();
  }
  return &static PhoneStartRequestUtterances.cancelUtterance;
}

uint64_t one-time initialization function for cancelUtterance(uint64_t a1)
{
  return one-time initialization function for cancelUtterance(a1, 28526, 0xE200000000000000, &static PhoneStartRequestUtterances.cancelUtterance, &qword_5D4DF0);
}

uint64_t static PhoneStartRequestUtterances.cancelUtterance.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for cancelUtterance, &static PhoneStartRequestUtterances.cancelUtterance);
}

uint64_t one-time initialization function for confirmUtterance(uint64_t a1)
{
  return one-time initialization function for cancelUtterance(a1, 7562617, 0xE300000000000000, &static PhoneStartRequestUtterances.confirmUtterance, &qword_5D4E00);
}

uint64_t one-time initialization function for cancelUtterance(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  type metadata accessor for MachineUtteranceBuilder();
  swift_allocObject();
  MachineUtteranceBuilder.init()();
  dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
  swift_release();
  uint64_t v7 = dispatch thunk of MachineUtteranceBuilder.build()();
  uint64_t v9 = v8;
  uint64_t result = swift_release();
  *a4 = v7;
  *a5 = v9;
  return result;
}

uint64_t static PhoneStartRequestUtterances.confirmUtterance.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for confirmUtterance, &static PhoneStartRequestUtterances.confirmUtterance);
}

uint64_t static PhoneStartRequestUtterances.cancelUtterance.getter(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for PhoneStartRequestUtterances()
{
  return &type metadata for PhoneStartRequestUtterances;
}

uint64_t specialized Sequence.allSatisfy(_:)(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v20 = v2;
    unint64_t v21 = v2 & 0xC000000000000001;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = v21 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v2 + 8 * v4);
      unsigned int v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      if (!INPerson.hasHandleLabel.getter() && !INPerson.hasHandleValue.getter())
      {

        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v8 = v3;
      id v9 = [a2 displayName];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      id v13 = [v6 displayName];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      BOOL v17 = v10 == v14 && v12 == v16;
      if (v17)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {

          swift_bridgeObjectRelease();
          return 0;
        }
      }
      ++v4;
      uint64_t v3 = v8;
      BOOL v17 = v7 == v8;
      unint64_t v2 = v20;
      if (v17) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
  }
LABEL_24:

  swift_bridgeObjectRelease();
  return 1;
}

uint64_t PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    LOBYTE(v3) = v8;
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void **)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0) {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v4 = *(id *)(a1 + 32);
  }
  uint64_t v3 = v4;
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (v5 < 2)
  {

    LOBYTE(v3) = 0;
    return v3 & 1;
  }
  swift_bridgeObjectRetain();
  id v6 = v3;
  LOBYTE(v3) = specialized Sequence.allSatisfy(_:)(a1, v6);

LABEL_10:
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void *PhoneContactDisambiguationProperties.maxItemsForVoxReadout.unsafeMutableAddressor()
{
  return &static PhoneContactDisambiguationProperties.maxItemsForVoxReadout;
}

uint64_t PhoneContactDisambiguationProperties.isEmergencyDisambiguation.getter(unint64_t a1)
{
  if ((specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 2) & 1) == 0
    || (char v2 = 1, (specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 1) & 1) == 0))
  {
    char v2 = specialized Sequence.allSatisfy(_:)(a1, (char *)&dword_0 + 1);
  }
  return v2 & 1;
}

uint64_t PhoneContactDisambiguationProperties.shouldReadItemsInVox.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_32_3();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (v2 < 6 || (PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(a1) & 1) != 0)
  {
    if (specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 2)) {
      char v3 = specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 1) ^ 1;
    }
    else {
      char v3 = 1;
    }
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t PhoneContactDisambiguationProperties.hasOneHandleType.getter(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  unint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v2 > 1)
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a1 & 0xC000000000000001) == 0);
      id v3 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 32);
      id v4 = v3;
      swift_bridgeObjectRelease();
      id v5 = [v4 personHandle];

      if (!v5) {
        break;
      }
      id v6 = [v5 type];

      swift_bridgeObjectRetain_n();
      for (uint64_t i = 4; ; ++i)
      {
        id v8 = (a1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(a1 + 8 * i);
        id v9 = v8;
        uint64_t v10 = i - 3;
        if (__OFADD__(i - 4, 1)) {
          break;
        }
        id v11 = [v8 personHandle];
        if (!v11)
        {
          swift_bridgeObjectRelease_n();

          return 0;
        }
        uint64_t v12 = v11;
        id v13 = [v11 type];

        if (v13 != v6 || !v6)
        {
          swift_bridgeObjectRelease_n();
          return 0;
        }
        if (v10 == v2)
        {
          swift_bridgeObjectRelease_n();
          return 1;
        }
      }
      __break(1u);
LABEL_21:
      OUTLINED_FUNCTION_32_3();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 <= 1) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return 0;
}

uint64_t protocol witness for DisambiguationListProperties.shouldReadItemsInVox.getter in conformance PhoneContactDisambiguationProperties()
{
  return PhoneContactDisambiguationProperties.shouldReadItemsInVox.getter(*v0);
}

ValueMetadata *type metadata accessor for PhoneContactDisambiguationProperties()
{
  return &type metadata for PhoneContactDisambiguationProperties;
}

void *PhoneCallAppNameConstants.emergencyBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.emergencyBundleId;
}

void *PhoneCallAppNameConstants.faceTimeBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.faceTimeBundleId;
}

uint64_t static PhoneCallAppNameConstants.isFaceTime(appId:)(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_467720;
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x8000000000492070;
    if (one-time initialization token for macFaceTimeBundleId != -1) {
      swift_once();
    }
    uint64_t v4 = unk_5D4E10;
    *(void *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
    *(void *)(inited + 56) = v4;
    swift_bridgeObjectRetain();
    specialized Set.init(_nonEmptyArrayLiteral:)();
    OUTLINED_FUNCTION_8_79(v5);
    char v2 = v6;
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t static PhoneCallAppNameConstants.isPhone(appId:)(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a1 == 0xD000000000000017)
  {
    OUTLINED_FUNCTION_2_100();
    if (v3) {
      return 1;
    }
  }
  if (OUTLINED_FUNCTION_1_84()) {
    return 1;
  }
  if (a1 == 0xD000000000000012)
  {
    OUTLINED_FUNCTION_2_100();
    if (v3) {
      return 1;
    }
  }
  if (OUTLINED_FUNCTION_3_88()) {
    return 1;
  }
  if (a1 == 0xD000000000000013)
  {
    OUTLINED_FUNCTION_2_100();
    if (v3) {
      return 1;
    }
  }
  if (OUTLINED_FUNCTION_1_84()) {
    return 1;
  }
  if (a1 == 0xD000000000000015)
  {
    OUTLINED_FUNCTION_2_100();
    if (v3) {
      return 1;
    }
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void *PhoneCallAppNameConstants.phoneSettingsRoot.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.phoneSettingsRoot;
}

void *PhoneCallAppNameConstants.faceTimeSettingsRoot.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.faceTimeSettingsRoot;
}

void *PhoneCallAppNameConstants.mobilePhoneBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mobilePhoneBundleId;
}

void *PhoneCallAppNameConstants.mobilePhoneContactsTabURI.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mobilePhoneContactsTabURI;
}

uint64_t *PhoneCallAppNameConstants.macFaceTimeBundleId.unsafeMutableAddressor()
{
  if (one-time initialization token for macFaceTimeBundleId != -1) {
    swift_once();
  }
  return &static PhoneCallAppNameConstants.macFaceTimeBundleId;
}

void *PhoneCallAppNameConstants.inCallServiceBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.inCallServiceBundleId;
}

void *PhoneCallAppNameConstants.walkieTalkieBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieBundleId;
}

uint64_t *PhoneCallAppNameConstants.inCallServiceLaunchId.unsafeMutableAddressor()
{
  if (one-time initialization token for inCallServiceLaunchId != -1) {
    swift_once();
  }
  return &static PhoneCallAppNameConstants.inCallServiceLaunchId;
}

void *PhoneCallAppNameConstants.systemExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.systemExtensionBundleId;
}

const char *PhoneCallAppNameConstants.settingsRoot.unsafeMutableAddressor()
{
  return "prefs:";
}

void *PhoneCallAppNameConstants.mapBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mapBundleId;
}

void *PhoneCallAppNameConstants.macFaceTimeVocBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.macFaceTimeVocBundleId;
}

void *PhoneCallAppNameConstants.carouselBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.carouselBundleId;
}

void *PhoneCallAppNameConstants.nanophoneBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.nanophoneBundleId;
}

uint64_t static PhoneCallAppNameConstants.sanitizeFirstPartyAppId(_:)(uint64_t a1, uint64_t a2)
{
  if ((static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(a1, a2) & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  return OUTLINED_FUNCTION_96();
}

uint64_t static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(uint64_t countAndFlagsBits, uint64_t a2)
{
  if (a2) {
    object = String.lowercased()()._object;
  }
  else {
    object = 0;
  }
  OUTLINED_FUNCTION_6_76();
  char v6 = v5;
  if (!object)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_9_63();
  BOOL v7 = v7 && object == v6;
  if (v7) {
    goto LABEL_23;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
LABEL_12:
    if (a2)
    {
      Swift::String v10 = String.lowercased()();
      uint64_t countAndFlagsBits = v10._countAndFlagsBits;
      id v11 = v10._object;
    }
    else
    {
      id v11 = 0;
    }
    if (one-time initialization token for macFaceTimeBundleId != -1) {
      swift_once();
    }
    Swift::String v12 = String.lowercased()();
    if (!v11)
    {
      char v9 = 0;
      goto LABEL_26;
    }
    if (countAndFlagsBits != v12._countAndFlagsBits || v11 != v12._object)
    {
      OUTLINED_FUNCTION_96();
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
LABEL_24:
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      return v9 & 1;
    }
LABEL_23:
    char v9 = 1;
    goto LABEL_24;
  }
  char v9 = 1;
  return v9 & 1;
}

void *PhoneCallAppNameConstants.systemUIExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.systemUIExtensionBundleId;
}

void *PhoneCallAppNameConstants.walkieTalkieExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieExtensionBundleId;
}

unint64_t static PhoneCallAppNameConstants.getFaceTimeBundleIdForCurrentPlatform()()
{
  return OUTLINED_FUNCTION_10_2(18);
}

uint64_t static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    OUTLINED_FUNCTION_7_69();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  object = String.lowercased()()._object;
  if (v5)
  {
    OUTLINED_FUNCTION_9_63();
    BOOL v7 = v7 && v5 == object;
    if (v7) {
      goto LABEL_41;
    }
    char v8 = OUTLINED_FUNCTION_4_80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_30;
    }
    if (a2) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v10 = 0;
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  if (!a2) {
    goto LABEL_13;
  }
LABEL_11:
  OUTLINED_FUNCTION_7_69();
  uint64_t v10 = v9;
LABEL_14:
  OUTLINED_FUNCTION_6_76();
  uint64_t v12 = v11;
  if (!v10)
  {
    swift_bridgeObjectRelease();
    if (a2) {
      goto LABEL_21;
    }
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_9_63();
  if (v7 && v10 == v12) {
    goto LABEL_41;
  }
  char v14 = OUTLINED_FUNCTION_4_80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    if (a2)
    {
LABEL_21:
      OUTLINED_FUNCTION_7_69();
      uint64_t v16 = v15;
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v16 = 0;
LABEL_24:
    BOOL v17 = String.lowercased()()._object;
    if (v16)
    {
      OUTLINED_FUNCTION_9_63();
      if (v7 && v16 == v17) {
        goto LABEL_41;
      }
      char v19 = OUTLINED_FUNCTION_4_80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (a2)
    {
      a1 = OUTLINED_FUNCTION_7_69();
      uint64_t v22 = v21;
    }
    else
    {
      uint64_t v22 = 0;
    }
    Swift::String v23 = String.lowercased()();
    if (!v22)
    {
      char v20 = 0;
      goto LABEL_43;
    }
    if (a1 != v23._countAndFlagsBits || v22 != v23._object)
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
LABEL_42:
      swift_bridgeObjectRelease();
LABEL_43:
      swift_bridgeObjectRelease();
      return v20 & 1;
    }
LABEL_41:
    char v20 = 1;
    goto LABEL_42;
  }
LABEL_30:
  char v20 = 1;
  return v20 & 1;
}

uint64_t static PhoneCallAppNameConstants.isMessagePhoneAppCaseInsensitive(appId:)(uint64_t countAndFlagsBits, uint64_t a2)
{
  if (a2)
  {
    Swift::String v3 = String.lowercased()();
    uint64_t countAndFlagsBits = v3._countAndFlagsBits;
    object = v3._object;
  }
  else
  {
    object = 0;
  }
  Swift::String v5 = String.lowercased()();
  if (object)
  {
    if (countAndFlagsBits == v5._countAndFlagsBits && object == v5._object) {
      char v7 = 1;
    }
    else {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t static PhoneCallAppNameConstants.isPhoneOrFaceTime(appId:isInsensitive:)(uint64_t a1, uint64_t a2, char a3)
{
  char v3 = a2;
  if ((a3 & 1) == 0)
  {
    if (!a2) {
      return v3 & 1;
    }
    if (a1 != 0xD000000000000017 || (OUTLINED_FUNCTION_2_100(), !v10))
    {
      if ((OUTLINED_FUNCTION_1_84() & 1) == 0)
      {
        if (a1 != 0xD000000000000012 || (OUTLINED_FUNCTION_2_100(), !v10))
        {
          if ((OUTLINED_FUNCTION_3_88() & 1) == 0)
          {
            if (a1 != 0xD000000000000013 || (OUTLINED_FUNCTION_2_100(), !v10))
            {
              if ((OUTLINED_FUNCTION_1_84() & 1) == 0)
              {
                if (a1 != 0xD000000000000015 || (OUTLINED_FUNCTION_2_100(), !v10))
                {
                  if ((OUTLINED_FUNCTION_1_84() & 1) == 0)
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
                    uint64_t inited = swift_initStackObject();
                    *(_OWORD *)(inited + 16) = xmmword_467720;
                    *(void *)(inited + 32) = 0xD000000000000012;
                    *(void *)(inited + 40) = 0x8000000000492070;
                    if (one-time initialization token for macFaceTimeBundleId != -1) {
                      swift_once();
                    }
                    uint64_t v12 = unk_5D4E10;
                    *(void *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
                    *(void *)(inited + 56) = v12;
                    swift_bridgeObjectRetain();
                    specialized Set.init(_nonEmptyArrayLiteral:)();
                    OUTLINED_FUNCTION_8_79(v13);
                    char v3 = v14;
                    swift_bridgeObjectRelease();
                    return v3 & 1;
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_19:
    char v3 = 1;
    return v3 & 1;
  }
  uint64_t v5 = OUTLINED_FUNCTION_96();
  if (static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(v5, v6)) {
    goto LABEL_19;
  }
  uint64_t v7 = OUTLINED_FUNCTION_96();

  return static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(v7, v8);
}

unint64_t static PhoneCallAppNameConstants.inCallServiceBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(23);
}

unint64_t static PhoneCallAppNameConstants.carouselBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(18);
}

unint64_t static PhoneCallAppNameConstants.mobilePhoneBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(21);
}

unint64_t static PhoneCallAppNameConstants.macFaceTimeVocBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(18);
}

void one-time initialization function for macFaceTimeBundleId()
{
  id v0 = (id)TUPreferredFaceTimeBundleIdentifier();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;

  static PhoneCallAppNameConstants.macFaceTimeBundleId = v1;
  unk_5D4E10 = v3;
}

uint64_t static PhoneCallAppNameConstants.macFaceTimeBundleId.getter()
{
  return static PhoneCallAppNameConstants.macFaceTimeBundleId.getter(&one-time initialization token for macFaceTimeBundleId);
}

unint64_t static PhoneCallAppNameConstants.nanophoneBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(19);
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(16);
}

void *PhoneCallAppNameConstants.walkieTalkieInternalBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieInternalBundleId;
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieInternalBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(39);
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieExtensionBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(30);
}

void *PhoneCallAppNameConstants.messagesBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.messagesBundleId;
}

unint64_t static PhoneCallAppNameConstants.messagesBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(19);
}

unint64_t static PhoneCallAppNameConstants.emergencyBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(34);
}

unint64_t static PhoneCallAppNameConstants.mapBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(22);
}

unint64_t static PhoneCallAppNameConstants.faceTimeSettingsRoot.getter()
{
  return OUTLINED_FUNCTION_10_2(19);
}

unint64_t static PhoneCallAppNameConstants.phoneSettingsRoot.getter()
{
  return OUTLINED_FUNCTION_10_2(16);
}

uint64_t static PhoneCallAppNameConstants.settingsRoot.getter()
{
  return 0x3A7366657270;
}

uint64_t one-time initialization function for inCallServiceLaunchId()
{
  _StringGuts.grow(_:)(21);
  uint64_t result = swift_bridgeObjectRelease();
  static PhoneCallAppNameConstants.inCallServiceLaunchId = 0xD00000000000002ALL;
  unk_5D4E20 = 0x800000000049A310;
  return result;
}

uint64_t static PhoneCallAppNameConstants.inCallServiceLaunchId.getter()
{
  return static PhoneCallAppNameConstants.macFaceTimeBundleId.getter(&one-time initialization token for inCallServiceLaunchId);
}

uint64_t static PhoneCallAppNameConstants.macFaceTimeBundleId.getter(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_96();
}

unint64_t static PhoneCallAppNameConstants.systemExtensionBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(47);
}

unint64_t static PhoneCallAppNameConstants.systemUIExtensionBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(33);
}

void *PhoneCallAppNameConstants.internalWatchAppSuffix.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.internalWatchAppSuffix;
}

unint64_t static PhoneCallAppNameConstants.internalWatchAppSuffix.getter()
{
  return OUTLINED_FUNCTION_10_2(23);
}

void *PhoneCallAppNameConstants.contactsBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.contactsBundleId;
}

unint64_t static PhoneCallAppNameConstants.contactsBundleId.getter()
{
  return OUTLINED_FUNCTION_10_2(27);
}

const char *PhoneCallAppNameConstants.siriAppBundleId.unsafeMutableAddressor()
{
  return "com.apple.siri";
}

uint64_t static PhoneCallAppNameConstants.siriAppBundleId.getter()
{
  return 0x6C7070612E6D6F63;
}

unint64_t static PhoneCallAppNameConstants.mobilePhoneContactsTabURI.getter()
{
  return OUTLINED_FUNCTION_10_2(23);
}

void *PhoneCallAppNameConstants.openCallRecordURI.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.openCallRecordURI;
}

unint64_t static PhoneCallAppNameConstants.openCallRecordURI.getter()
{
  return OUTLINED_FUNCTION_10_2(32);
}

ValueMetadata *type metadata accessor for PhoneCallAppNameConstants()
{
  return &type metadata for PhoneCallAppNameConstants;
}

uint64_t OUTLINED_FUNCTION_1_84()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_3_88()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_4_80()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_6_76()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_7_69()
{
  return String.lowercased()()._countAndFlagsBits;
}

void OUTLINED_FUNCTION_8_79(uint64_t a1)
{
  specialized Set.contains(_:)(v2, v1, a1);
}

uint64_t InCallActionHandleIntentFlowStrategy.__allocating_init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
    v29,
    vars0);
  return v17;
}

uint64_t specialized closure #1 in Publisher.sink(receiveResultCompletion:)(uint64_t result, void (*a2)(void *))
{
  if (result)
  {
    v3[0] = result;
    char v4 = 1;
    swift_errorRetain();
    a2(v3);
    return outlined destroy of UUID?((uint64_t)v3, &demangling cache variable for type metadata for Result<Output, Error>);
  }
  return result;
}

uint64_t specialized closure #2 in Publisher.sink(receiveResultCompletion:)(uint64_t a1, void (*a2)(unsigned char *))
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v4);
  unsigned char v4[40] = 0;
  a2(v4);
  return outlined destroy of UUID?((uint64_t)v4, &demangling cache variable for type metadata for Result<Output, Error>);
}

uint64_t PhoneAppResolutionLogger.eligibleAppsFinder.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 104, a1);
}

uint64_t InCallActionHandleIntentFlowStrategy.completionOutputManifest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + direct field offset for InCallActionHandleIntentFlowStrategy.completionOutputManifest;
  type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_15();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t InCallActionHandleIntentFlowStrategy.phoneCallBaseCatTemplatingService.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t InCallActionHandleIntentFlowStrategy.aceViewProvider.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t InCallActionHandleIntentFlowStrategy.nlContextProvider.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t InCallActionHandleIntentFlowStrategy.canUseServerTTS.getter()
{
  return *(unsigned __int8 *)(v0 + direct field offset for InCallActionHandleIntentFlowStrategy.canUseServerTTS);
}

uint64_t InCallActionHandleIntentFlowStrategy.shouldShowDialogAfterIntentHandled.getter()
{
  return *(unsigned __int8 *)(v0
                            + direct field offset for InCallActionHandleIntentFlowStrategy.shouldShowDialogAfterIntentHandled);
}

void InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long *a21)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v23 = v22;
  char v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  char v39 = v36;
  uint64_t v37 = type metadata accessor for DialogPhase();
  uint64_t v38 = OUTLINED_FUNCTION_11_0(v37);
  __chkstk_darwin(v38);
  OUTLINED_FUNCTION_4();
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  *(void *)(v21 + direct field offset for InCallActionHandleIntentFlowStrategy.cancellable) = 0;
  outlined init with take of AppSelectionSignalComponent(v35, v21 + 16);
  *(void *)(v21 + direct field offset for InCallActionHandleIntentFlowStrategy.phoneCallBaseCatTemplatingService) = v33;
  *(void *)(v21 + direct field offset for InCallActionHandleIntentFlowStrategy.nlContextProvider) = v29;
  *(unsigned char *)(v21 + direct field offset for InCallActionHandleIntentFlowStrategy.canUseServerTTS) = v27;
  *(unsigned char *)(v21 + direct field offset for InCallActionHandleIntentFlowStrategy.shouldShowDialogAfterIntentHandled) = v25;
  *(void *)(v21 + direct field offset for InCallActionHandleIntentFlowStrategy.aceViewProvider) = v31;
  *(void *)(v21 + 56) = v23;
  outlined init with take of AppSelectionSignalComponent(v39, v21 + 64);
  outlined init with take of AppSelectionSignalComponent(a21, v21 + 104);
  OUTLINED_FUNCTION_26_1();
}

void InCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_34_22();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_53();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_50_15(&dword_0, v8, v9, "#InCallActionHandleIntentFlowStrategy makePreHandleIntentOutput");
    OUTLINED_FUNCTION_6();
  }

  uint64_t v10 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_55_12(v10);
  uint64_t v11 = (void *)swift_allocObject();
  OUTLINED_FUNCTION_35_27(v11);
  swift_retain();
  id v12 = v1;
  id v13 = v0;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v2, (uint64_t)&async function pointer to partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:), (uint64_t)v6);
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in InCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = a8;
  v8[25] = v17;
  v8[22] = a6;
  v8[23] = a7;
  v8[20] = a4;
  v8[21] = a5;
  v8[26] = type metadata accessor for PhoneError();
  v8[27] = swift_task_alloc();
  uint64_t v15 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, void))(*(void *)(*(void *)a4 + 248)
                                                                            + **(int **)(*(void *)a4 + 248));
  id v13 = (void *)swift_task_alloc();
  v8[28] = v13;
  *id v13 = v8;
  v13[1] = closure #1 in InCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:);
  return v15(v8 + 14, a5, a6, a7, 0);
}

uint64_t closure #1 in InCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_47_21();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_38_22())
  {
    uint64_t v0 = *(void *)(v1 + 216);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      OUTLINED_FUNCTION_46_17();
      outlined destroy of PhoneError(v0);
      OUTLINED_FUNCTION_42_22();
      InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)();
      swift_errorRelease();
      goto LABEL_6;
    }
    outlined destroy of PhoneError(v0);
  }
  OUTLINED_FUNCTION_62_14();
  OUTLINED_FUNCTION_61_10();
  uint64_t v3 = OUTLINED_FUNCTION_39_6();
  v2(v3);
  swift_errorRelease();
  outlined destroy of UUID?(v0, &demangling cache variable for type metadata for Result<Output, Error>);
LABEL_6:
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

uint64_t partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_40_21();
  OUTLINED_FUNCTION_18_32();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_25_31();
  return closure #1 in InCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(v3, v4, v5, v6, v7, v8, v9, v10);
}

void InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.Zip<Future<TemplatingResult?, Error>, Future<[SAAceView], Error>>, Output>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65();
  void v11[2] = v0;
  v11[3] = v9;
  v11[4] = v7;
  v11[5] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Future<TemplatingResult?, Error>);
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  swift_retain();
  id v12 = v7;
  id v13 = v5;
  Future.init(_:)();
  char v14 = (void *)OUTLINED_FUNCTION_65();
  v14[2] = v0;
  v14[3] = v9;
  v14[4] = v12;
  void v14[5] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Future<[SAAceView], Error>);
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  swift_retain();
  id v15 = v12;
  id v16 = v13;
  Future.init(_:)();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Output);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Future<TemplatingResult?, Error> and conformance Future<A, B>, &demangling cache variable for type metadata for Future<TemplatingResult?, Error>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Future<[SAAceView], Error> and conformance Future<A, B>, &demangling cache variable for type metadata for Future<[SAAceView], Error>);
  Publisher.zip<A, B>(_:_:)();
  swift_release();
  uint64_t v17 = OUTLINED_FUNCTION_18_1();
  *(void *)(v17 + 16) = v21;
  *(void *)(v17 + 24) = v22;
  uint64_t v18 = OUTLINED_FUNCTION_18_1();
  *(void *)(v18 + 16) = v21;
  *(void *)(v18 + 24) = v22;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Map<Publishers.Zip<Future<TemplatingResult?, Error>, Future<[SAAceView], Error>>, Output> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Publishers.Zip<Future<TemplatingResult?, Error>, Future<[SAAceView], Error>>, Output>);
  swift_retain_n();
  uint64_t v19 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11();
  v20();
  *(void *)(v1 + direct field offset for InCallActionHandleIntentFlowStrategy.cancellable) = v19;
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #2 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  dispatch thunk of DefaultAceViewProvider.makeAceViewsForInterstitials(app:intent:intentResponse:_:)();

  return swift_release();
}

uint64_t closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v8 - 8);
  uint64_t v78 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AceOutput();
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v80 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v81 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v14 = (char *)&v70 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TemplatingResult?);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TemplatingResult();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v24 = (char *)&v70 - v23;
  unint64_t v25 = *a2;
  uint64_t v27 = v26;
  outlined init with copy of ConfirmationResponse?(a1, (uint64_t)v17, &demangling cache variable for type metadata for TemplatingResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v27) == 1)
  {
    outlined destroy of UUID?((uint64_t)v17, &demangling cache variable for type metadata for TemplatingResult?);
LABEL_3:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v29, v30, "#InCallActionHandleIntentFlowStrategy No Pre-Handle Output", v31, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for EmptyOutput();
    return static EmptyOutput.instance.getter();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v17, v27);
    uint64_t v33 = *(void *)(TemplatingResult.print.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v34 = v24;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v24, v27);
    uint64_t v76 = v27;
    uint64_t v75 = v19;
    if (v33)
    {
      uint64_t v77 = *(void (**)(char *, uint64_t))(v19 + 8);
      v77(v22, v27);
      uint64_t v35 = a4;
    }
    else
    {
      uint64_t v36 = (uint64_t)v14;
      uint64_t v37 = a4;
      uint64_t v38 = *(void *)(TemplatingResult.speak.getter() + 16);
      swift_bridgeObjectRelease();
      uint64_t v77 = *(void (**)(char *, uint64_t))(v19 + 8);
      v77(v22, v27);
      if (!v38)
      {
        char v39 = v34;
        if (v25 >> 62) {
          goto LABEL_38;
        }
        uint64_t v64 = *(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8));
        goto LABEL_30;
      }
      uint64_t v35 = a4;
      char v14 = (char *)v36;
    }
    char v39 = v34;
    uint64_t v40 = v81;
    while (1)
    {
      uint64_t v41 = a3[5];
      uint64_t v42 = a3[6];
      __swift_project_boxed_opaque_existential_1(a3 + 2, v41);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v85, v41, v42);
      uint64_t v43 = a3[5];
      uint64_t v44 = a3[6];
      __swift_project_boxed_opaque_existential_1(a3 + 2, v43);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v44 + 8))(v84, v43, v44);
      __swift_project_boxed_opaque_existential_1(v84, v84[3]);
      dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
      TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(0);
      uint64_t v45 = type metadata accessor for NLContextUpdate();
      uint64_t v46 = (uint64_t)v78;
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 1, 1, v45);
      uint64_t v83 = 0;
      memset(v82, 0, sizeof(v82));
      static AceOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
      outlined destroy of UUID?((uint64_t)v82, &demangling cache variable for type metadata for FlowActivity?);
      outlined destroy of UUID?(v46, &demangling cache variable for type metadata for NLContextUpdate?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for Logger();
      __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
      uint64_t v27 = v79;
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
      uint64_t v78 = v14;
      uint64_t v49 = v14;
      uint64_t v37 = (uint64_t *)v80;
      v48(v40, v49, v80);
      uint64_t v50 = Logger.logObject.getter();
      int v51 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v50, (os_log_type_t)v51))
      {
        (*(void (**)(char *, uint64_t *))(v27 + 8))(v40, v37);
        goto LABEL_36;
      }
      int v72 = v51;
      os_log_t v74 = v50;
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v85[0] = v71;
      char v73 = v52;
      *(_DWORD *)uint64_t v52 = 136315138;
      unint64_t v53 = AceOutput.commands.getter();
      unint64_t v54 = v53;
      if (v53 >> 62)
      {
        uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
        if (!v36)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v36 = *(void *)((char *)&dword_10 + (v53 & 0xFFFFFFFFFFFFFF8));
        if (!v36) {
          goto LABEL_34;
        }
      }
      uint64_t v70 = v35;
      v84[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if ((v36 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_30:
      uint64_t v40 = v81;
      if (!v64)
      {
        v77(v39, v27);
        goto LABEL_3;
      }
      uint64_t v35 = v37;
      char v14 = (char *)v36;
    }
    uint64_t v55 = 0;
    uint64_t v56 = v84[0];
    do
    {
      if ((v54 & 0xC000000000000001) != 0) {
        id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v57 = *(id *)(v54 + 8 * v55 + 32);
      }
      uint64_t v58 = v57;
      uint64_t v59 = outlined bridged method (pb) of @objc AceObject.encodedClassName()(v57);
      uint64_t v61 = v60;

      v84[0] = v56;
      unint64_t v62 = *(void *)(v56 + 16);
      if (v62 >= *(void *)(v56 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v56 = v84[0];
      }
      ++v55;
      *(void *)(v56 + 16) = v62 + 1;
      uint64_t v63 = v56 + 16 * v62;
      *(void *)(v63 + 32) = v59;
      *(void *)(v63 + 40) = v61;
    }
    while (v36 != v55);
    swift_bridgeObjectRelease();
    uint64_t v35 = v70;
    uint64_t v27 = v79;
    uint64_t v37 = (uint64_t *)v80;
    uint64_t v40 = v81;
LABEL_35:
    uint64_t v65 = v73;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v66 = Array.description.getter();
    unint64_t v68 = v67;
    swift_bridgeObjectRelease();
    v84[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v68, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t *))(v27 + 8))(v40, v37);
    uint64_t v50 = v74;
    _os_log_impl(&dword_0, v74, (os_log_type_t)v72, "#InCallActionHandleIntentFlowStrategy Providing Pre-Handle Output: %s", v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_36:

    v35[3] = (uint64_t)v37;
    v35[4] = (uint64_t)&protocol witness table for AceOutput;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
    (*(void (**)(uint64_t *, char *, uint64_t *))(v27 + 32))(boxed_opaque_existential_1, v78, v37);
    return ((uint64_t (*)(char *, uint64_t))v77)(v39, v76);
  }
}

void InCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15 - v14;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v20);
    _os_log_impl(&dword_0, v18, v19, "#InCallActionHandleIntentFlowStrategy makeIntentHandledResponse", v5, 2u);
    OUTLINED_FUNCTION_6();
  }

  InCallActionHandleIntentFlowStrategy.logForHandleIntent(intent:intentResponse:)(v9, v7);
  if (*(unsigned char *)(v1 + direct field offset for InCallActionHandleIntentFlowStrategy.shouldShowDialogAfterIntentHandled) == 1)
  {
    uint64_t v21 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v16, 1, 1, v21);
    uint64_t v22 = (void *)swift_allocObject();
    long long v22[2] = 0;
    v22[3] = 0;
    v22[4] = v1;
    v22[5] = v11;
    v22[6] = v9;
    v22[7] = v7;
    v22[8] = v5;
    v22[9] = v3;
    swift_retain();
    swift_retain();
    id v23 = v9;
    id v24 = v7;
    swift_retain();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v16, (uint64_t)&async function pointer to partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:), (uint64_t)v22);
    swift_release();
  }
  else
  {
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v27);
      _os_log_impl(&dword_0, v25, v26, "#InCallActionHandleIntentFlowStrategy Delegate opted to NOT provide output for HandleIntent = .success", v5, 2u);
      OUTLINED_FUNCTION_6();
    }

    type metadata accessor for EmptyOutput();
    static EmptyOutput.instance.getter();
    v28[40] = 0;
    ((void (*)(unsigned char *))v5)(v28);
    outlined destroy of UUID?((uint64_t)v28, &demangling cache variable for type metadata for Result<Output, Error>);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in InCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = a8;
  v8[25] = v17;
  v8[22] = a6;
  v8[23] = a7;
  v8[20] = a4;
  v8[21] = a5;
  v8[26] = type metadata accessor for PhoneError();
  v8[27] = swift_task_alloc();
  uint64_t v15 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)a4 + 248)
                                                                             + **(int **)(*(void *)a4 + 248));
  uint64_t v13 = (void *)swift_task_alloc();
  v8[28] = v13;
  *uint64_t v13 = v8;
  v13[1] = closure #1 in InCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:);
  return v15(v8 + 14, a5, a6, a7, 1);
}

uint64_t closure #1 in InCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 192);
  outlined init with copy of SignalProviding(v0 + 112, v0 + 64);
  *(unsigned char *)(v0 + 104) = 0;
  uint64_t v2 = OUTLINED_FUNCTION_39_6();
  v1(v2);
  outlined destroy of UUID?(v0 + 64, &demangling cache variable for type metadata for Result<Output, Error>);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_47_21();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_38_22())
  {
    uint64_t v0 = *(void *)(v1 + 216);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      OUTLINED_FUNCTION_46_17();
      outlined destroy of PhoneError(v0);
      OUTLINED_FUNCTION_42_22();
      InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)();
      swift_errorRelease();
      goto LABEL_6;
    }
    outlined destroy of PhoneError(v0);
  }
  OUTLINED_FUNCTION_62_14();
  OUTLINED_FUNCTION_61_10();
  uint64_t v3 = OUTLINED_FUNCTION_39_6();
  v2(v3);
  swift_errorRelease();
  outlined destroy of UUID?(v0, &demangling cache variable for type metadata for Result<Output, Error>);
LABEL_6:
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

void InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v27 = v2;
  uint64_t v28 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.Zip4<Future<TemplatingResult, Error>, Future<[SAAceView], Error>, Future<NLContextUpdate?, Error>, Future<[SABaseCommand], Error>>, Output>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65();
  void v11[2] = v1;
  v11[3] = v9;
  v11[4] = v7;
  v11[5] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Future<TemplatingResult, Error>);
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  swift_retain();
  id v12 = v7;
  id v13 = v5;
  Future.init(_:)();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_65();
  v14[2] = v1;
  v14[3] = v9;
  v14[4] = v12;
  void v14[5] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Future<[SAAceView], Error>);
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  swift_retain();
  id v15 = v12;
  id v16 = v13;
  Future.init(_:)();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_93();
  v17[2] = v1;
  v17[3] = v15;
  void v17[4] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Future<NLContextUpdate?, Error>);
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  id v18 = v15;
  id v19 = v16;
  Future.init(_:)();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_65();
  v20[2] = v1;
  v20[3] = v9;
  v20[4] = v18;
  v20[5] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Future<[SABaseCommand], Error>);
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  swift_retain();
  id v21 = v18;
  id v22 = v19;
  Future.init(_:)();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Output);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Future<TemplatingResult, Error> and conformance Future<A, B>, &demangling cache variable for type metadata for Future<TemplatingResult, Error>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Future<[SAAceView], Error> and conformance Future<A, B>, &demangling cache variable for type metadata for Future<[SAAceView], Error>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Future<NLContextUpdate?, Error> and conformance Future<A, B>, &demangling cache variable for type metadata for Future<NLContextUpdate?, Error>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Future<[SABaseCommand], Error> and conformance Future<A, B>, &demangling cache variable for type metadata for Future<[SABaseCommand], Error>);
  Publisher.zip<A, B, C, D>(_:_:_:_:)();
  swift_release();
  uint64_t v23 = OUTLINED_FUNCTION_18_1();
  *(void *)(v23 + 16) = v27;
  *(void *)(v23 + 24) = v28;
  uint64_t v24 = OUTLINED_FUNCTION_18_1();
  *(void *)(v24 + 16) = v27;
  *(void *)(v24 + 24) = v28;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Map<Publishers.Zip4<Future<TemplatingResult, Error>, Future<[SAAceView], Error>, Future<NLContextUpdate?, Error>, Future<[SABaseCommand], Error>>, Output> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Publishers.Zip4<Future<TemplatingResult, Error>, Future<[SAAceView], Error>, Future<NLContextUpdate?, Error>, Future<[SABaseCommand], Error>>, Output>);
  swift_retain_n();
  uint64_t v25 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11();
  v26();
  *(void *)(v1 + direct field offset for InCallActionHandleIntentFlowStrategy.cancellable) = v25;
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a7(a4, a5, a6, a1, a2);
}

uint64_t closure #2 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  dispatch thunk of DefaultAceViewProvider.makeAceViewsForHandleIntentWithUser(app:intent:intentResponse:_:)();

  return swift_release();
}

uint64_t closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  dispatch thunk of DefaultNLContextProvider.makeContextForHandleIntent(intent:handleIntentResponse:_:)();

  return swift_release();
}

uint64_t closure #1 in closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<NLContextUpdate?, Error>);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConfirmationResponse?(a1, (uint64_t)v6, &demangling cache variable for type metadata for NLContextUpdate?);
  swift_storeEnumTagMultiPayload();
  a2(v6);
  return outlined destroy of UUID?((uint64_t)v6, &demangling cache variable for type metadata for Result<NLContextUpdate?, Error>);
}

uint64_t closure #4 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  dispatch thunk of DefaultAceViewProvider.makeCommandsAfterAceViewsForHandleIntentWithUser(app:intent:intentResponse:_:)();

  return swift_release();
}

uint64_t closure #5 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)@<X0>(void *a1@<X4>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v13, v5, v6);
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  __swift_project_boxed_opaque_existential_1(v4, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v12, v7, v8);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
  TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(0);
  memset(v10, 0, sizeof(v10));
  uint64_t v11 = 0;
  a2[3] = type metadata accessor for AceOutput();
  a2[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(a2);
  static AceOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for FlowActivity?);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t InCallActionHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:withContextUpdate:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 184) = v2;
  *(void *)(v1 + 88) = v3;
  *(void *)(v1 + 96) = v0;
  *(void *)(v1 + 72) = v4;
  *(void *)(v1 + 80) = v5;
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 104) = v6;
  uint64_t v7 = type metadata accessor for PhoneError();
  *(void *)(v1 + 112) = v7;
  OUTLINED_FUNCTION_11_0(v7);
  *(void *)(v1 + 120) = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for OutputGenerationManifest();
  *(void *)(v1 + 128) = v8;
  OUTLINED_FUNCTION_19_0(v8);
  *(void *)(v1 + 136) = v9;
  *(void *)(v1 + 144) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v9();
  }
  else
  {
    *(void *)(v5 + 160) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *char v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  char v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void InCallActionHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:withContextUpdate:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  char v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_56_14(&dword_0, v4, v5, "#InCallActionHandleIntentFlowStrategy makeIntentHandledOutput");
    OUTLINED_FUNCTION_6();
  }

  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v6 = (void *)swift_task_alloc();
      v0[19] = v6;
      *uint64_t v6 = v0;
      v6[1] = InCallActionHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:withContextUpdate:);
      OUTLINED_FUNCTION_27_31();
      __asm { BRAA            X1, X16 }
    }
    id v18 = (void *)Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_18(v19))
    {
      uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v20);
      OUTLINED_FUNCTION_25_4(&dword_0, v21, v22, "#InCallActionHandleIntentFlowStrategy makeIntentHandledOutput: unexpected intentResponse type");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v14 = (void *)v0[15];
    uint64_t v23 = (void *)v0[11];

    OUTLINED_FUNCTION_58_14();
    OUTLINED_FUNCTION_7_70();
    v0[8] = v23;
    id v24 = v23;
    swift_getWitnessTable();
    v31._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_21_37();
    OUTLINED_FUNCTION_45_19(v31);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_50(0xD00000000000002ALL, (uint64_t)" is not of type INHangUpCallIntentResponse");
    *uint64_t v14 = v28;
    v14[1] = v29;
    OUTLINED_FUNCTION_22_43(0xD000000000000046);
    OUTLINED_FUNCTION_24_32((uint64_t)"makeIntentHandledOutput(app:intent:intentResponse:withContextUpdate:)");
    uint64_t v17 = 155;
  }
  else
  {
    uint64_t v9 = (void *)Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_18(v10))
    {
      uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v11);
      OUTLINED_FUNCTION_25_4(&dword_0, v12, v13, "#InCallActionHandleIntentFlowStrategy makeIntentHandledOutput: unexpected intent type");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v14 = (void *)v0[15];
    id v15 = (void *)v0[10];

    OUTLINED_FUNCTION_59_13();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_22();
    v0[7] = v15;
    id v16 = v15;
    swift_getWitnessTable();
    v30._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_21_37();
    OUTLINED_FUNCTION_45_19(v30);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_50(0xD000000000000022, (uint64_t)" is not of type INHangUpCallIntent");
    *uint64_t v14 = v28;
    v14[1] = v29;
    OUTLINED_FUNCTION_22_43(0xD000000000000046);
    OUTLINED_FUNCTION_24_32((uint64_t)"makeIntentHandledOutput(app:intent:intentResponse:withContextUpdate:)");
    uint64_t v17 = 151;
  }
  OUTLINED_FUNCTION_53_16(v17);
  lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
  OUTLINED_FUNCTION_20_0();
  PhoneError.logged()(v25);
  outlined destroy of PhoneError((uint64_t)v14);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_27_31();
  __asm { BRAA            X1, X16 }
}

uint64_t InCallActionHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:withContextUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = *(void **)(v10 + 160);
  InCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(intent:intentResponse:withContextUpdate:)(*(void *)(v10 + 80), *(void *)(v10 + 88), *(unsigned char *)(v10 + 184));
  uint64_t v12 = OUTLINED_FUNCTION_2_101();
  v13(v12);
  OUTLINED_FUNCTION_36_26();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_16_5(v14, (__n128)xmmword_46A030);
  *(void *)(v10 + 168) = v26;
  id v15 = v11;
  id v16 = (void *)swift_task_alloc();
  *(void *)(v10 + 176) = v16;
  *id v16 = v10;
  v16[1] = InCallActionHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:withContextUpdate:);
  OUTLINED_FUNCTION_10_29();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

void InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_34_22();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_50_15(&dword_0, v9, v10, "#InCallActionHandleIntentFlowStrategy makeFailureHandlingIntentResponse");
    OUTLINED_FUNCTION_6();
  }

  InCallActionHandleIntentFlowStrategy.logForHandleIntent(intent:intentResponse:)(v1, v0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_55_12(v11);
  uint64_t v12 = (void *)swift_allocObject();
  OUTLINED_FUNCTION_35_27(v12);
  swift_retain();
  id v13 = v1;
  id v14 = v0;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v3, (uint64_t)&async function pointer to partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:), v2);
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a8;
  v8[20] = v16;
  id v14 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)a4 + 264)
                                                                    + **(int **)(*(void *)a4 + 264));
  uint64_t v12 = (void *)swift_task_alloc();
  v8[21] = v12;
  *uint64_t v12 = v8;
  v12[1] = closure #1 in InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
  return v14(v8 + 14, a5, a6, a7);
}

uint64_t closure #1 in InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 152);
  outlined init with copy of SignalProviding(v0 + 112, v0 + 64);
  *(unsigned char *)(v0 + 104) = 0;
  uint64_t v2 = OUTLINED_FUNCTION_39_6();
  v1(v2);
  outlined destroy of UUID?(v0 + 64, &demangling cache variable for type metadata for Result<Output, Error>);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  OUTLINED_FUNCTION_47_0();
  return v3();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 152);
  *(void *)(v0 + 16) = *(void *)(v0 + 176);
  *(unsigned char *)(v0 + 56) = 1;
  swift_errorRetain();
  v1(v0 + 16);
  swift_errorRelease();
  outlined destroy of UUID?(v0 + 16, &demangling cache variable for type metadata for Result<Output, Error>);
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[17] = v2;
  v1[18] = v0;
  v1[15] = v3;
  v1[16] = v4;
  OUTLINED_FUNCTION_2();
  v1[19] = v5;
  uint64_t v6 = type metadata accessor for PhoneError();
  v1[20] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[21] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for OutputGenerationManifest();
  v1[22] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[23] = v8;
  v1[24] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[7] = v1;
  v2[8] = v4;
  v2[9] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v7 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[10] = v1;
  v2[11] = v4;
  v2[12] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v7 + 224) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

void InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_56_14(&dword_0, v4, v5, "#InCallActionHandleIntentFlowStrategy makeFailureConfirmingIntentOutput");
    OUTLINED_FUNCTION_6();
  }

  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      id v8 = *(id *)(v0 + 136);
      if ([v7 code] == (char *)&dword_4 + 2)
      {
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v9;
        *uint64_t v9 = v0;
        v9[1] = InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
        OUTLINED_FUNCTION_27_31();
        __asm { BRAA            X1, X16 }
      }
      Swift::String v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v31;
      *Swift::String v31 = v0;
      v31[1] = InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
      OUTLINED_FUNCTION_27_31();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v21 = (void *)Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_18(v22))
    {
      uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v23);
      OUTLINED_FUNCTION_25_4(&dword_0, v24, v25, "#InCallActionHandleIntentFlowStrategy makeFailureConfirmingIntentOutput: unexpected intentResponse type");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v17 = *(void **)(v0 + 168);
    uint64_t v26 = *(void **)(v0 + 136);

    OUTLINED_FUNCTION_58_14();
    OUTLINED_FUNCTION_7_70();
    *(void *)(v0 + 112) = v26;
    id v27 = v26;
    swift_getWitnessTable();
    v37._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_21_37();
    OUTLINED_FUNCTION_45_19(v37);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_50(0xD00000000000002ALL, (uint64_t)" is not of type INHangUpCallIntentResponse");
    *uint64_t v17 = v34;
    v17[1] = v35;
    OUTLINED_FUNCTION_22_43(0xD000000000000046);
    OUTLINED_FUNCTION_24_32((uint64_t)"makeFailureHandlingIntentOutput(app:intent:intentResponse:)");
    uint64_t v20 = 192;
  }
  else
  {
    uint64_t v12 = (void *)Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_18(v13))
    {
      id v14 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v14);
      OUTLINED_FUNCTION_25_4(&dword_0, v15, v16, "#InCallActionHandleIntentFlowStrategy makeFailureConfirmingIntentOutput: unexpected intent type");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v17 = *(void **)(v0 + 168);
    uint64_t v18 = *(void **)(v0 + 128);

    OUTLINED_FUNCTION_59_13();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_22();
    *(void *)(v0 + 104) = v18;
    id v19 = v18;
    swift_getWitnessTable();
    v36._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_21_37();
    OUTLINED_FUNCTION_45_19(v36);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_50(0xD000000000000022, (uint64_t)" is not of type INHangUpCallIntent");
    *uint64_t v17 = v34;
    v17[1] = v35;
    OUTLINED_FUNCTION_22_43(0xD000000000000046);
    OUTLINED_FUNCTION_24_32((uint64_t)"makeFailureHandlingIntentOutput(app:intent:intentResponse:)");
    uint64_t v20 = 188;
  }
  OUTLINED_FUNCTION_53_16(v20);
  lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
  OUTLINED_FUNCTION_20_0();
  PhoneError.logged()(v28);
  outlined destroy of PhoneError((uint64_t)v17);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_27_31();
  __asm { BRAA            X1, X16 }
}

uint64_t InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = (void *)v10[8];
  OUTLINED_FUNCTION_41_19();
  uint64_t v12 = OUTLINED_FUNCTION_2_101();
  v13(v12);
  OUTLINED_FUNCTION_36_26();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  id v14 = (__n128 *)OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_16_5(v14, (__n128)xmmword_46A030);
  v10[30] = v26;
  id v15 = v11;
  uint64_t v16 = (void *)swift_task_alloc();
  v10[31] = v16;
  *uint64_t v16 = v10;
  v16[1] = InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_10_29();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

{
  void *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  __n128 *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = (void *)v10[11];
  OUTLINED_FUNCTION_41_19();
  uint64_t v12 = OUTLINED_FUNCTION_2_101();
  v13(v12);
  OUTLINED_FUNCTION_36_26();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  id v14 = (__n128 *)OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_16_5(v14, (__n128)xmmword_46A030);
  v10[30] = v26;
  id v15 = v11;
  uint64_t v16 = (void *)swift_task_alloc();
  v10[31] = v16;
  *uint64_t v16 = v10;
  v16[1] = InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_10_29();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

void InCallActionHandleIntentFlowStrategy.logForHandleIntent(intent:intentResponse:)(void *a1, void *a2)
{
  os_log_type_t v3 = v2;
  uint64_t v18 = a1;
  id v19 = a2;
  id v5 = a1;
  id v6 = a2;
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (INHangUpCallIntent, INHangUpCallIntentResponse));
  if (swift_dynamicCast())
  {

    id v7 = v17;
    if ([v17 code] == (char *)&dword_0 + 3 || objc_msgSend(v17, "code") == (char *)&dword_4 + 2)
    {
      uint64_t v8 = v3[5];
      uint64_t v9 = v3[6];
      __swift_project_boxed_opaque_existential_1(v3 + 2, v8);
      (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v9 + 40))(v16, v8, v9);
      __swift_project_boxed_opaque_existential_1(v16, (uint64_t)v16[3]);
      SiriKitEventSending.sendCallStateEvent(hangUpIntentResponse:)((INHangUpCallIntentResponse)v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
    uint64_t v10 = v3[16];
    uint64_t v11 = v3[17];
    __swift_project_boxed_opaque_existential_1(v3 + 13, v10);
    uint64_t v12 = v3 + 2;
    uint64_t v14 = v3[5];
    uint64_t v13 = v3[6];
    __swift_project_boxed_opaque_existential_1(v12, v14);
    (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v16, v14, v13);
    BiomeEventSending.logEventForHangUp(intentResponse:device:)(v7, (uint64_t)v16, v10, v11);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  id v15 = v18;
}

uint64_t InCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(intent:intentResponse:withContextUpdate:)(uint64_t a1, uint64_t a2, char a3)
{
  OUTLINED_FUNCTION_2();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - v9;
  type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_15();
  uint64_t v11 = OUTLINED_FUNCTION_74();
  uint64_t result = v12(v11);
  if (a3)
  {
    type metadata accessor for PhoneCallNLContextProvider();
    static PhoneCallNLContextProvider.makeContextForHandleIntent(intent:handleIntentResponse:)();
    outlined init with copy of ConfirmationResponse?((uint64_t)v10, (uint64_t)v8, &demangling cache variable for type metadata for NLContextUpdate?);
    OutputGenerationManifest.nlContextUpdate.setter();
    return outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for NLContextUpdate?);
  }
  return result;
}

uint64_t InCallActionHandleIntentFlowStrategy.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v1();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InCallActionHandleIntentFlowStrategy.__deallocating_deinit()
{
  InCallActionHandleIntentFlowStrategy.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for HandleIntentFlowStrategy.authenticationPolicy.getter in conformance InCallActionHandleIntentFlowStrategy<A1, B1>()
{
  return HandleIntentFlowStrategy.authenticationPolicy.getter();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232))();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = type metadata accessor for InCallActionHandleIntentFlowStrategy();

  return a8(a1, a2, a3, a4, a5, v14, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 256))();
}

uint64_t protocol witness for IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for InCallActionHandleIntentFlowStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for InCallActionHandleIntentFlowStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for InCallActionHandleIntentFlowStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:) in conformance InCallActionHandleIntentFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for InCallActionHandleIntentFlowStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_40_21();
  OUTLINED_FUNCTION_18_32();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_25_31();
  return closure #1 in InCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroyTm_17()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_40_21();
  OUTLINED_FUNCTION_18_32();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_25_31();
  return closure #1 in InCallActionHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t base witness table accessor for IntentExtensionCommunicating in InCallActionHandleIntentFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for InCallActionHandleIntentFlowStrategy()
{
  uint64_t result = type metadata accessor for OutputGenerationManifest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InCallActionHandleIntentFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, v2[2], v2[3], v2[4], v2[5], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of DucTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:));
}

uint64_t partial apply for closure #2 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(a1, a2);
}

uint64_t sub_30A108()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  return closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(a1, a2);
}

uint64_t partial apply for closure #4 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  return closure #4 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(a1, a2);
}

uint64_t partial apply for closure #5 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)@<X0>(uint64_t *a1@<X8>)
{
  return closure #5 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(v1, a1);
}

uint64_t outlined bridged method (pb) of @objc AceObject.encodedClassName()(void *a1)
{
  id v1 = [a1 encodedClassName];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t specialized closure #1 in Publisher.sink(receiveResultCompletion:)(uint64_t *a1, void (*a2)(void *))
{
  return specialized closure #1 in Publisher.sink(receiveResultCompletion:)(*a1, a2);
}

uint64_t sub_30A1F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1)
{
  return closure #1 in closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyIntentHandledResponse(app:intent:intentResponse:_:)(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t partial apply for closure #1 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, v2[2], v2[3], v2[4], v2[5], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of DucTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:));
}

uint64_t objectdestroy_18Tm_0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #2 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2);
}

uint64_t partial apply for closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return closure #3 in InCallActionHandleIntentFlowStrategy.makeLegacyPreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, v3, a3);
}

uint64_t partial apply for specialized closure #1 in Publisher.sink(receiveResultCompletion:)(uint64_t *a1)
{
  return specialized closure #1 in Publisher.sink(receiveResultCompletion:)(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<[SABaseCommand], Error>) -> ()(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t OUTLINED_FUNCTION_2_101()
{
  uint64_t v1 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_3_89()
{
  *(void *)(v2 + 16) = v1;
  return v0;
}

void OUTLINED_FUNCTION_7_70()
{
  uint64_t v1 = 0x6552746E65746E69;
  unint64_t v2 = 0xEF3D65736E6F7073;
  String.append(_:)(*(Swift::String *)&v1);
}

void OUTLINED_FUNCTION_22_43(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = (v1 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_24_32(uint64_t a1@<X8>)
{
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = (a1 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_35_27(void *a1)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v4;
  a1[5] = v5;
  a1[6] = v3;
  a1[7] = v2;
  a1[8] = v6;
  a1[9] = v1;
  return swift_retain();
}

void *OUTLINED_FUNCTION_36_26()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 40));
}

uint64_t OUTLINED_FUNCTION_38_22()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_41_19()
{
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[16];
  v0[29] = v1;
  return InCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(intent:intentResponse:withContextUpdate:)(v4, v3, 1);
}

uint64_t OUTLINED_FUNCTION_42_22()
{
  return v0;
}

void OUTLINED_FUNCTION_45_19(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_46_17()
{
  return swift_errorRelease();
}

uint64_t OUTLINED_FUNCTION_47_21()
{
  *(void *)(v0 + 152) = *(void *)(v0 + 232);
  return swift_errorRetain();
}

void OUTLINED_FUNCTION_50_15(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_53_16@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_55_12(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_56_14(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_58_14()
{
  _StringGuts.grow(_:)(59);
}

void OUTLINED_FUNCTION_59_13()
{
  _StringGuts.grow(_:)(43);
}

uint64_t OUTLINED_FUNCTION_61_10()
{
  *(void *)(v1 + 16) = v0;
  *(unsigned char *)(v1 + 56) = 1;
  return swift_errorRetain();
}

uint64_t OUTLINED_FUNCTION_62_14()
{
  return swift_errorRelease();
}

uint64_t CarPlayRCHFlowProvider.init(app:sharedGlobals:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  return outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a3 + 1));
}

uint64_t CarPlayRCHFlowProviding.toAnyRCHFlowProvider()(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  OUTLINED_FUNCTION_5_1();
  swift_getAssociatedTypeWitness();
  type metadata accessor for AnyIntentCarPlayRCHFlowProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, a1);
  OUTLINED_FUNCTION_1_85();
  return AnyIntentCarPlayRCHFlowProvider.__allocating_init<A>(_:)();
}

uint64_t type metadata accessor for AnyIntentCarPlayRCHFlowProvider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AnyIntentCarPlayRCHFlowProvider.__allocating_init<A>(_:)()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = OUTLINED_FUNCTION_1_85();
  AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(v1, v2, v3);
  return v0;
}

void *AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(*v3 + 80);
  long long v3[2] = implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(a1, v7, a2, a3);
  v3[3] = v8;
  uint64_t v9 = implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(a1, v7, a2, a3);
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  v3[4] = v9;
  void v3[5] = v11;
  return v3;
}

uint64_t (*implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
}

uint64_t (*implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
}

uint64_t AnyIntentCarPlayRCHFlowProvider.makeRCHFlow(input:)()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t AnyIntentCarPlayRCHFlowProvider.makeRCHFlow(app:intent:)()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t AnyIntentCarPlayRCHFlowProvider.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyIntentCarPlayRCHFlowProvider.__deallocating_deinit()
{
  AnyIntentCarPlayRCHFlowProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for CarPlayRCHFlowProviding.makeRCHFlow(input:) in conformance AnyIntentCarPlayRCHFlowProvider<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

uint64_t protocol witness for CarPlayRCHFlowProviding.makeRCHFlow(app:intent:) in conformance AnyIntentCarPlayRCHFlowProvider<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t CarPlayRCHFlowProvider.makeRCHFlow(input:)()
{
  uint64_t v2 = type metadata accessor for CATOption();
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_12_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v6 = v0 + 8;
  static PhoneCallRequestSupportPolicy.getSiriKitIntent(input:sharedGlobals:app:intentTypeName:)();
  if (v7)
  {
    uint64_t v8 = v7;
    static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
    if (v9)
    {
      uint64_t v10 = v9;
      swift_retain();
      dispatch thunk of AnyFlow.on(input:)();
      swift_release();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
        OUTLINED_FUNCTION_1_3(&dword_0, v14, v15, "#CarPlayRCHFlowProvider makeRCHFlow(input): RCHFlow found");
        OUTLINED_FUNCTION_6();
      }

      return v10;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)id v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "#CarPlayRCHFlowProvider makeRCHFlow(input): no RCHFlow found", v19, 2u);
    OUTLINED_FUNCTION_6();
  }

  Input.parse.getter();
  uint64_t v20 = type metadata accessor for Parse();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v20);
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v21 = CATWrapperSimple.__allocating_init(options:globals:)();
  uint64_t v22 = static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v6, v1, v21);
  swift_release();
  uint64_t v23 = outlined destroy of Parse?(v1);
  (*(void (**)(uint64_t))(*(void *)v22 + 112))(v23);
  swift_release();
  type metadata accessor for SimpleOutputFlowAsync();
  uint64_t v10 = Flow.eraseToAnyFlow()();
  swift_release();
  return v10;
}

uint64_t outlined destroy of Parse?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CarPlayRCHFlowProvider.makeRCHFlow(app:intent:)()
{
  uint64_t v1 = type metadata accessor for CATOption();
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_12_0();
  static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
  if (v5)
  {
    uint64_t v6 = v5;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_1_3(&dword_0, v10, v11, "#CarPlayRCHFlowProvider makeRCHFlow(app, intent): RCHFlow found");
      OUTLINED_FUNCTION_6();
    }
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    os_log_type_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "#CarPlayRCHFlowProvider: makeRCHFlow(app, intent): no RCHFlow found", v15, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v16 = type metadata accessor for Parse();
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v16);
    type metadata accessor for StartCallCATsSimple();
    static CATOption.defaultMode.getter();
    CATWrapperSimple.__allocating_init(options:globals:)();
    uint64_t v17 = OUTLINED_FUNCTION_1_85();
    uint64_t v20 = static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v17, v18, v19);
    swift_release();
    uint64_t v21 = outlined destroy of Parse?(v0);
    (*(void (**)(uint64_t))(*(void *)v20 + 112))(v21);
    swift_release();
    type metadata accessor for SimpleOutputFlowAsync();
    uint64_t v6 = Flow.eraseToAnyFlow()();
    swift_release();
  }
  return v6;
}

uint64_t type metadata completion function for AnyIntentCarPlayRCHFlowProvider()
{
  return swift_initClassMetadata2();
}

uint64_t destroy for CarPlayRCHFlowProvider(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for CarPlayRCHFlowProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_retain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for CarPlayRCHFlowProvider(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for CarPlayRCHFlowProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayRCHFlowProvider(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlayRCHFlowProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CarPlayRCHFlowProvider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)()
{
  OUTLINED_FUNCTION_1_44();
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)()
{
  OUTLINED_FUNCTION_1_44();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t OUTLINED_FUNCTION_1_85()
{
  return v0;
}

uint64_t StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)(uint64_t a1, uint64_t a2)
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v9);
  outlined init with copy of SignalProviding(a1, (uint64_t)v8);
  uint64_t v5 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v8, v5 + 16);
  uint64_t v6 = (*(uint64_t (**)(unsigned char *, void (*)(), uint64_t, uint64_t))(class metadata base offset for StartCallRCHFlowDelegate
                                                                        + v2
                                                                        + 24))(v9, partial apply for implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:), v5, a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

void specialized BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioSource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (AudioSource?, AudioSource?));
  __chkstk_darwin(v69);
  os_log_type_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioSource?);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v67 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v70 = (uint64_t)&v61 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v71 = (uint64_t)&v61 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v19 = type metadata accessor for InputOrigin();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v61 - v25;
  if (a1)
  {
    os_log_t v72 = v24;
    uint64_t v68 = v4;
    uint64_t v27 = one-time initialization token for siriPhone;
    swift_retain();
    if (v27 != -1) {
      swift_once();
    }
    uint64_t v65 = v7;
    uint64_t v66 = v5;
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v29 = Logger.logObject.getter();
    int v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      HIDWORD(v62) = v30;
      uint64_t v63 = v9;
      uint64_t v64 = a2;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v74 = v61;
      *(_DWORD *)uint64_t v31 = 136315394;
      CurrentRequest.inputOrigin.getter();
      uint64_t v32 = InputOrigin.rawValue.getter();
      unint64_t v34 = v33;
      (*(void (**)(char *, os_log_t))(v20 + 8))(v26, v72);
      uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      CurrentRequest.audioSource.getter();
      uint64_t v35 = v68;
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v68) == 1)
      {
        outlined destroy of UUID?((uint64_t)v18, &demangling cache variable for type metadata for AudioSource?);
        unint64_t v36 = 0xE300000000000000;
        uint64_t v37 = 6369134;
      }
      else
      {
        uint64_t v37 = AudioSource.aceValue.getter();
        unint64_t v36 = v42;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v18, v35);
      }
      uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v36, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v29, BYTE4(v62), "#TipKitDiscoverabilitySending InputOrigin: %s, AudioSource: %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      os_log_type_t v9 = v63;
    }
    else
    {

      swift_release_n();
      uint64_t v35 = v68;
    }
    uint64_t v43 = CurrentRequest.inputOrigin.getter();
    InputOrigin.isVoiceTrigger.getter(v43, v44, v45, v46, v47, v48, v49, v50, v61, v62, (uint64_t)v63, v64, (uint64_t)v65, v66, v67, v68, v69, v70, v71,
      (uint64_t)v72);
    char v52 = v51;
    (*(void (**)(char *, os_log_t))(v20 + 8))(v23, v72);
    if ((v52 & 1) == 0) {
      goto LABEL_26;
    }
    uint64_t v53 = v71;
    CurrentRequest.audioSource.getter();
    uint64_t v54 = v70;
    static AudioSource.bluetoothDoAPDevice.getter();
    __swift_storeEnumTagSinglePayload(v54, 0, 1, v35);
    uint64_t v55 = (uint64_t)&v9[*(int *)(v69 + 48)];
    _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v53, (uint64_t)v9, &demangling cache variable for type metadata for AudioSource?);
    _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v54, v55, &demangling cache variable for type metadata for AudioSource?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v35) == 1)
    {
      outlined destroy of UUID?(v54, &demangling cache variable for type metadata for AudioSource?);
      outlined destroy of UUID?(v53, &demangling cache variable for type metadata for AudioSource?);
      if (__swift_getEnumTagSinglePayload(v55, 1, v35) == 1)
      {
        outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for AudioSource?);
LABEL_25:
        BiomeEventSender.donateTipKitEvent(_:)(PhoneCallFlowDelegatePlugin_PhoneDiscoverabilityEvent_callWithAirPods);
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v56 = v67;
      _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0((uint64_t)v9, v67, &demangling cache variable for type metadata for AudioSource?);
      if (__swift_getEnumTagSinglePayload(v55, 1, v35) != 1)
      {
        uint64_t v57 = (uint64_t)v65;
        uint64_t v58 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v65, v55, v35);
        lazy protocol witness table accessor for type StartCallRCHFlowDelegate and conformance StartCallRCHFlowDelegate((unint64_t *)&lazy protocol witness table cache variable for type AudioSource and conformance AudioSource, (void (*)(uint64_t))&type metadata accessor for AudioSource);
        char v59 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
        v60(v57, v35);
        outlined destroy of UUID?(v54, &demangling cache variable for type metadata for AudioSource?);
        outlined destroy of UUID?(v71, &demangling cache variable for type metadata for AudioSource?);
        v60(v56, v35);
        outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for AudioSource?);
        if (v59) {
          goto LABEL_25;
        }
LABEL_26:
        swift_release();
        return;
      }
      outlined destroy of UUID?(v54, &demangling cache variable for type metadata for AudioSource?);
      outlined destroy of UUID?(v53, &demangling cache variable for type metadata for AudioSource?);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v56, v35);
    }
    outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for (AudioSource?, AudioSource?));
    goto LABEL_26;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
  os_log_t v72 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v72, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 0;
    _os_log_impl(&dword_0, v72, v39, "#TipKitDiscoverabilitySending Cannot find CurrentRequest, not donating to Biome", v40, 2u);
    swift_slowDealloc();
  }
  os_log_t v41 = v72;
}

uint64_t specialized LazyContainer.init(load:)(uint64_t a1, uint64_t a2)
{
  v13[0] = a2;
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9 - 8);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v13[2] = 0x5F797A614CLL;
  v13[3] = 0xE500000000000000;
  v13[1] = type metadata accessor for StartCallCatTemplatingService();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StartCallCatTemplatingService.Type);
  v10._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  static DispatchQoS.unspecified.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  uint64_t v11 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(unsigned char *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 16) = v11;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v13[0];
  return v2;
}

void static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void), uint64_t a8)
{
  OUTLINED_FUNCTION_35_28();
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v15 = OUTLINED_FUNCTION_34_23();
  specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)(v15, v16, v17, v18, v19, a6, a7, a8, v8, v13, v14);
}

uint64_t StartCallRCHFlowDelegate.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals, a1);
}

uint64_t StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:templatingService:appResolved:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return StartCallRCHFlowDelegate.init(sharedGlobals:templatingService:appResolved:)(a1, a2, a3, a4);
}

uint64_t StartCallRCHFlowDelegate.init(sharedGlobals:templatingService:appResolved:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  outlined init with copy of SignalProviding(a1, v5 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LazyContainer<StartCallCatTemplatingService>);
  swift_allocObject();
  swift_retain();
  swift_retain();
  *(void *)(v5 + direct field offset for StartCallRCHFlowDelegate.dialogTemplatingContainer) = specialized LazyContainer.init(load:)((uint64_t)partial apply for thunk for @escaping @callee_guaranteed () -> (@owned AnyFlow), v10);
  *(void *)(v5 + direct field offset for StartCallRCHFlowDelegate.appResolved) = a4;
  swift_retain();
  swift_release();
  uint64_t v11 = BaseRCHFlowDelegate.init()();
  swift_retain();
  StartCallRCHFlowDelegate.prewarm()();
  id v12 = [self defaultCenter];
  [v12 addObserver:v11 selector:"reloadSiriLanguage" name:AFLanguageCodeDidChangeNotification object:0];
  swift_release();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

void implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CATOption();
  __chkstk_darwin(v2 - 8);
  outlined init with copy of SignalProviding(a1, (uint64_t)v3);
  type metadata accessor for StartCallCATs();
  static CATOption.defaultMode.getter();
  CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallDisplayTextCATs();
  static CATOption.defaultMode.getter();
  CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallCommonCATs();
  static CATOption.defaultMode.getter();
  CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for UnsupportedFlowCATs();
  static CATOption.defaultMode.getter();
  CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for AppInfoBuilder();
  swift_allocObject();
  type metadata accessor for TemplatingOperationManager();
  swift_allocObject();
  TemplatingOperationManager.init()();
  type metadata accessor for StartCallCatTemplatingService();
  swift_allocObject();
  specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)();
}

uint64_t sub_30C458()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

void partial apply for implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:)()
{
  implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:)(v0 + 16);
}

void StartCallRCHFlowDelegate.prewarm()()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_5_1();
  v18[0] = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_37();
  static Signpost.event(_:)();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_22_44();
  v15();
  uint64_t v16 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v11);
  v19[4] = closure #1 in StartCallRCHFlowDelegate.prewarm();
  v19[5] = 0;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  long long v19[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  void v19[3] = &block_descriptor_9;
  uint64_t v17 = _Block_copy(v19);
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type StartCallRCHFlowDelegate and conformance StartCallRCHFlowDelegate(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v2);
  (*(void (**)(char *, void))(v7 + 8))(v10, v18[0]);
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in StartCallRCHFlowDelegate.prewarm()()
{
  static Signpost.begin(_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Signpost.OpenSignpost.end()();

  return swift_release();
}

uint64_t StartCallRCHFlowDelegate.makeAceViewProvider()()
{
  static Signpost.begin(_:)();
  OUTLINED_FUNCTION_11_56();
  uint64_t v1 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  outlined init with copy of SignalProviding(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals, (uint64_t)v4);
  type metadata accessor for StartCallAceViewProvider();
  swift_allocObject();
  uint64_t v2 = StartCallAceViewProvider.init(templatingService:isDirectInvocation:sharedGlobals:)(v1, 1, (uint64_t)v4);
  OUTLINED_FUNCTION_9_64();
  swift_release();
  return v2;
}

uint64_t StartCallRCHFlowDelegate.makeNLContextProvider()()
{
  static Signpost.begin(_:)();
  OUTLINED_FUNCTION_11_56();
  uint64_t v1 = (void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals), *(void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 24));
  uint64_t v2 = OUTLINED_FUNCTION_31_29();
  v3(v2);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v4 = OUTLINED_FUNCTION_31_29();
  v5(v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INStartCallIntent, INStartCallIntentResponse>);
  swift_allocObject();
  uint64_t v6 = specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v9, &v8);
  OUTLINED_FUNCTION_9_64();
  swift_release();
  return v6;
}

void *StartCallRCHFlowDelegate.makeDialogTemplating()()
{
  static Signpost.begin(_:)();
  OUTLINED_FUNCTION_11_56();
  (*(void (**)(void **__return_ptr))(**(void **)(v0
                                                              + direct field offset for StartCallRCHFlowDelegate.dialogTemplatingContainer)
                                                + 184))(&v8);
  uint64_t v1 = v8;
  uint64_t v2 = *(void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v3 = *(void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals), v2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 72);
  swift_retain();
  uint64_t v5 = v4(v2, v3);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 128))(v5);
  swift_release();
  specialized BidirectionalCollection.last.getter(v6, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (v9[3] == 1)
  {
    outlined destroy of UUID?((uint64_t)&v8, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    memset(v10, 0, sizeof(v10));
    uint64_t v11 = 0;
  }
  else
  {
    _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0((uint64_t)v9, (uint64_t)v10, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined destroy of TransformationResult((uint64_t)&v8);
  }
  (*(void (**)(_OWORD *))(class metadata base offset for PhoneCallBaseCatTemplatingService + *v1 + 96))(v10);
  swift_release();
  OUTLINED_FUNCTION_9_64();
  swift_release();
  return v1;
}

Swift::Void __swiftcall StartCallRCHFlowDelegate.reloadSiriLanguage()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_25_0(v2, (uint64_t)static Logger.siriPhone);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_14_2(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_24_1(&dword_0, v5, v6, "siriLanguage changed");
    OUTLINED_FUNCTION_6();
  }

  (*(void (**)(void))(**(void **)(v1 + direct field offset for StartCallRCHFlowDelegate.dialogTemplatingContainer)
                    + 192))();
}

uint64_t @objc StartCallRCHFlowDelegate.reloadSiriLanguage()()
{
  swift_retain();
  StartCallRCHFlowDelegate.reloadSiriLanguage()();

  return swift_release();
}

uint64_t StartCallRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:)()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = OUTLINED_FUNCTION_25_0(v2, (uint64_t)static Logger.siriPhone);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "#StartCallRCHFlowDelegate makeIntentFromParse", v5, 2u);
    OUTLINED_FUNCTION_6();
  }

  outlined init with copy of SignalProviding(v1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals, (uint64_t)v12);
  uint64_t v6 = *(void *)(v1 + direct field offset for StartCallRCHFlowDelegate.appResolved);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFromParseFlowStrategyHelper<INStartCallIntent>);
  uint64_t inited = swift_initStackObject();
  outlined init with take of AppSelectionSignalComponent(v12, inited + 24);
  *(void *)(inited + 16) = v6;
  swift_retain();
  specialized IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)();
  uint64_t v9 = v8;
  uint64_t v10 = swift_setDeallocating();
  specialized IntentFromParseFlowStrategyHelper.__deallocating_deinit(v10);
  return v9;
}

void StartCallRCHFlowDelegate.makeConfirmationStateFromParse(parse:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v147 = v0;
  uint64_t v148 = v4;
  os_log_t v149 = v5;
  uint64_t v137 = type metadata accessor for USOParse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v131 = v6;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_8();
  uint64_t v135 = v8;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v9);
  uint64_t v136 = (char *)&v129 - v10;
  type metadata accessor for SiriKitConfirmationState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v145 = v12;
  uint64_t v146 = v11;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_3_1();
  uint64_t v132 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  uint64_t v15 = OUTLINED_FUNCTION_11_0(v14);
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_3_1();
  uint64_t v139 = v16;
  type metadata accessor for Siri_Nlu_External_UserParse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v140 = v18;
  uint64_t v141 = v17;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_5_8();
  uint64_t v130 = v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  uint64_t v133 = (char *)&v129 - v21;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v22);
  uint64_t v134 = (char *)&v129 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  uint64_t v25 = OUTLINED_FUNCTION_11_0(v24);
  __chkstk_darwin(v25);
  OUTLINED_FUNCTION_5_8();
  uint64_t v138 = v26;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v27);
  uint64_t v144 = (uint64_t)&v129 - v28;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v29);
  uint64_t v143 = (uint64_t *)((char *)&v129 - v30);
  type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v142 = v31;
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_12_0();
  uint64_t v33 = type metadata accessor for PhoneCallNLv3Intent(0);
  uint64_t v34 = OUTLINED_FUNCTION_11_0(v33);
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_53();
  type metadata accessor for NLIntent();
  OUTLINED_FUNCTION_0_0();
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v129 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  unint64_t v39 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v41 = v40;
  __chkstk_darwin(v42);
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_12();
  v43();
  int v44 = (*(uint64_t (**)(NSObject **, unint64_t))(v41 + 88))(v2, v39);
  if (v44 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v45 = OUTLINED_FUNCTION_4_81();
    v46(v45);
    OUTLINED_FUNCTION_15_10();
    v47();
    OUTLINED_FUNCTION_12();
    v48();
    PhoneCallNLv3Intent.init(intent:)((uint64_t)v38, v3);
    uint64_t v49 = *(void *)(v147 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 24);
    uint64_t v50 = *(void *)(v147 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v147 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals), v49);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v50 + 80))(v150, v49, v50);
    OUTLINED_FUNCTION_11_1();
    uint64_t v55 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(v51, v52, v53, 0, v54);
    outlined destroy of SKTransformer((uint64_t)v150);
    if (v55)
    {
      if (specialized PhoneCallNLIntent.hasCallConfirmation(_:)(1))
      {

        _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_4(v3, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
        uint64_t v56 = OUTLINED_FUNCTION_3_90();
        v57(v56);
LABEL_17:
        uint64_t v78 = OUTLINED_FUNCTION_14_41();
        v79(v78);
        goto LABEL_43;
      }
      char v82 = specialized PhoneCallNLIntent.hasCallConfirmation(_:)(0);
      uint64_t v83 = (void (**)(uint64_t, void, uint64_t))(v145 + 104);
      if (v82)
      {

        _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_4(v3, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
        uint64_t v84 = OUTLINED_FUNCTION_3_90();
        v85(v84);
        (*v83)(v148, enum case for SiriKitConfirmationState.confirmed(_:), v146);
      }
      else
      {
        char v107 = specialized PhoneCallNLIntent.hasCallConfirmation(_:)(2);

        _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_4(v3, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
        uint64_t v108 = OUTLINED_FUNCTION_3_90();
        v109(v108);
        if (v107) {
          char v110 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
        }
        else {
          char v110 = (unsigned int *)&enum case for SiriKitConfirmationState.unset(_:);
        }
        (*v83)(v148, *v110, v146);
      }
      goto LABEL_43;
    }
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_4(v3, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
    uint64_t v80 = OUTLINED_FUNCTION_3_90();
    v81(v80);
LABEL_36:
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BaseRCHFlowDelegate<INStartCallIntent, INStartCallIntentResponse>);
    uint64_t v128 = (void (*)(os_log_t))method lookup function for BaseRCHFlowDelegate();
    v128(v149);
    goto LABEL_43;
  }
  if (v44 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v58 = OUTLINED_FUNCTION_4_81();
    v59(v58);
    OUTLINED_FUNCTION_15_10();
    v60();
    uint64_t v61 = v143;
    static CommonDirectAction.from(_:)(v1, v143);
    uint64_t v62 = OUTLINED_FUNCTION_19_36();
    v63(v62);
    uint64_t v64 = v144;
    outlined init with take of CommonDirectAction?((uint64_t)v61, v144);
    uint64_t v65 = type metadata accessor for CommonDirectAction();
    if (__swift_getEnumTagSinglePayload(v64, 1, v65) != 1)
    {
      uint64_t v66 = v138;
      _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v64, v138, &demangling cache variable for type metadata for CommonDirectAction?);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 7 || EnumCaseMultiPayload == 6)
      {
        uint64_t v126 = OUTLINED_FUNCTION_14_41();
        v127(v126);
        outlined destroy of UUID?(v64, &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_43;
      }
      _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_4(v66, (void (*)(void))type metadata accessor for CommonDirectAction);
    }
    outlined destroy of UUID?(v64, &demangling cache variable for type metadata for CommonDirectAction?);
    goto LABEL_36;
  }
  if (v44 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v44 == enum case for Parse.uso(_:))
    {
      uint64_t v86 = OUTLINED_FUNCTION_4_81();
      v87(v86);
      uint64_t v88 = v131;
      uint64_t v89 = v136;
      unint64_t v90 = v137;
      OUTLINED_FUNCTION_15_10();
      v91();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v92 = type metadata accessor for Logger();
      __swift_project_value_buffer(v92, (uint64_t)static Logger.siriPhone);
      uint64_t v93 = v135;
      OUTLINED_FUNCTION_12();
      v94();
      uint64_t v95 = Logger.logObject.getter();
      os_log_type_t v96 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v95, v96))
      {
        os_log_t v149 = v95;
        uint64_t v97 = (uint8_t *)OUTLINED_FUNCTION_47();
        uint64_t v147 = OUTLINED_FUNCTION_14_0();
        v150[0] = v147;
        *(_DWORD *)uint64_t v97 = 136315138;
        uint64_t v98 = v130;
        USOParse.userParse.getter();
        uint64_t v99 = v132;
        Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v132);
        uint64_t v100 = v140;
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v98, v141);
        SiriKitConfirmationState.rawValue.getter();
        OUTLINED_FUNCTION_30_26();
        OUTLINED_FUNCTION_11();
        v101();
        uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v99, v90, v150);
        OUTLINED_FUNCTION_8_44(v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v90 = v137;
        swift_bridgeObjectRelease();
        unint64_t v103 = *(void (**)(uint64_t, unint64_t))(v88 + 8);
        v103(v135, v90);
        os_log_t v104 = v149;
        os_log_type_t v105 = v96;
        uint64_t v106 = v141;
        _os_log_impl(&dword_0, v149, v105, "#StartCallRCHFlowDelegate returns %s", v97, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        uint64_t v89 = v136;
        OUTLINED_FUNCTION_6();
      }
      else
      {
        unint64_t v103 = *(void (**)(uint64_t, unint64_t))(v88 + 8);
        v103(v93, v90);

        uint64_t v100 = v140;
        uint64_t v106 = v141;
        uint64_t v98 = v130;
      }
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v148);
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v98, v106);
      v103((uint64_t)v89, v90);
      goto LABEL_43;
    }
    (*(void (**)(NSObject **, unint64_t))(v41 + 8))(v2, v39);
    goto LABEL_36;
  }
  uint64_t v68 = OUTLINED_FUNCTION_4_81();
  v69(v68);
  uint64_t v70 = *v2;
  uint64_t v71 = v139;
  static ConversionUtils.toUserParse(from:)();
  uint64_t v72 = v141;
  if (__swift_getEnumTagSinglePayload(v71, 1, v141) == 1)
  {
    outlined destroy of UUID?(v71, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    uint64_t v74 = (void *)OUTLINED_FUNCTION_25_0(v73, (uint64_t)static Logger.siriPhone);
    os_log_type_t v75 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v75))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_24_1(&dword_0, v76, v77, "#StartCallRCHFlowDelegate NLv4: Could not convert NLv4 User Dialog Act to User Parse");
      OUTLINED_FUNCTION_6();
    }

    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  uint64_t v111 = v140;
  uint64_t v112 = v134;
  OUTLINED_FUNCTION_15_10();
  v113();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v114 = type metadata accessor for Logger();
  __swift_project_value_buffer(v114, (uint64_t)static Logger.siriPhone);
  uint64_t v115 = v133;
  OUTLINED_FUNCTION_12();
  v116();
  uint64_t v117 = Logger.logObject.getter();
  os_log_type_t v118 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v117, v118))
  {
    uint64_t v119 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v120 = OUTLINED_FUNCTION_14_0();
    os_log_t v149 = v70;
    v150[0] = v120;
    *(_DWORD *)uint64_t v119 = 136315138;
    uint64_t v147 = (uint64_t)(v119 + 4);
    uint64_t v121 = v132;
    Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v132);
    uint64_t v122 = v121;
    SiriKitConfirmationState.rawValue.getter();
    OUTLINED_FUNCTION_30_26();
    uint64_t v112 = v134;
    OUTLINED_FUNCTION_11();
    v123();
    uint64_t v124 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v122, v39, v150);
    OUTLINED_FUNCTION_8_44(v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v125 = *(void (**)(char *, uint64_t))(v111 + 8);
    v125(v133, v72);
    _os_log_impl(&dword_0, v117, v118, "#StartCallRCHFlowDelegate returns %s", v119, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    uint64_t v125 = *(void (**)(char *, uint64_t))(v111 + 8);
    v125(v115, v72);
  }

  Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v148);
  swift_unknownObjectRelease();
  v125(v112, v72);
LABEL_43:
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallRCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_35_28();
  uint64_t v6 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  int v7 = OUTLINED_FUNCTION_34_23();
  specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)(v7, v8, v9, v10, v5, v6, v3, v1);
  OUTLINED_FUNCTION_26_1();
  return swift_release();
}

uint64_t StartCallRCHFlowDelegate.makeUnsupportedValueBehavior(app:intent:parameterName:intentResolutionResult:)@<X0>(uint64_t a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  int value = PhoneCallSlotNames.init(rawValue:)(v6).value;
  if (value == 13)
  {
    uint64_t v8 = (unsigned int *)&enum case for UnsupportedValueBehavior.dialogAndStop(_:);
  }
  else if (value == 3)
  {
    uint64_t v8 = (unsigned int *)&enum case for UnsupportedValueBehavior.punchOutWithCommand(_:);
  }
  else
  {
    uint64_t v8 = (unsigned int *)&enum case for UnsupportedValueBehavior.dialogAndPrompt(_:);
  }
  uint64_t v9 = *v8;
  type metadata accessor for UnsupportedValueBehavior();
  OUTLINED_FUNCTION_15();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 104);

  return v12(a3, v9, v10);
}

uint64_t StartCallRCHFlowDelegate.makeErrorDialogBehavior(app:intent:intentResponse:)@<X0>(id a1@<X2>, uint64_t a2@<X8>)
{
  if (a1
    && ((unint64_t v3 = (unint64_t)[a1 code],
         _INStartCallIntentResponseCodeFailureScreenTimeRestrictionEnabled != v3)
      ? (BOOL v4 = _INStartCallIntentResponseCodeFailureDownTimeRestrictionEnabled == v3)
      : (BOOL v4 = 1),
        v4 || (v3 <= 0xC ? (BOOL v5 = ((1 << v3) & 0x1A00) == 0) : (BOOL v5 = 1), !v5)))
  {
    Swift::String v6 = (unsigned int *)&enum case for ErrorDialogBehavior.textOnly(_:);
  }
  else
  {
    Swift::String v6 = (unsigned int *)&enum case for ErrorDialogBehavior.openAppButton(_:);
  }
  uint64_t v7 = *v6;
  type metadata accessor for ErrorDialogBehavior();
  OUTLINED_FUNCTION_15();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);

  return v10(a2, v7, v8);
}

void StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v47 = v3;
  uint64_t v48 = v4;
  Swift::String v6 = v5;
  uint64_t v8 = v7;
  uint64_t v49 = v9;
  uint64_t v45 = *v0;
  uint64_t v46 = type metadata accessor for LaunchAppBehavior();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_37();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RCHExecutionStep();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_22_44();
  v18();
  char v19 = static RCHExecutionStep.== infix(_:_:)();
  uint64_t v20 = OUTLINED_FUNCTION_19_36();
  v21(v20);
  if ((v19 & 1) != 0 && v6 && [v6 code] == (char *)&dword_0 + 2)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = v49;
    swift_retain_n();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v50 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v46 = (uint64_t)(v26 + 4);
      uint64_t v27 = dispatch thunk of App.debugDescription.getter();
      uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v50);
      OUTLINED_FUNCTION_8_44(v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v24, v25, "#StartCallRCHFlowDelegate Preparing direct launchApp for app: %s", v26, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      uint64_t v23 = v49;
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v39 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v39);
    uint64_t v40 = (void *)swift_allocObject();
    v40[2] = 0;
    v40[3] = 0;
    v40[4] = v23;
    v40[5] = v2;
    v40[6] = v8;
    v40[7] = v6;
    uint64_t v41 = v48;
    v40[8] = v47;
    v40[9] = v41;
    v40[10] = v45;
    swift_retain();
    swift_retain();
    id v42 = v8;
    id v43 = v6;
    swift_retain();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v16, (uint64_t)&async function pointer to partial apply for closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:), (uint64_t)v40);
    swift_release();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v50 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v34 = dispatch thunk of App.debugDescription.getter();
      uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v50);
      OUTLINED_FUNCTION_8_44(v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v31, v32, "#StartCallRCHFlowDelegate Preparing launchApp button for app: %s", v33, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v37 = v46;
    OUTLINED_FUNCTION_22_44();
    v38();
    v47(v1);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v37);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[25] = v12;
  v8[26] = v13;
  v8[23] = a7;
  v8[24] = a8;
  v8[21] = a5;
  v8[22] = a6;
  v8[20] = a4;
  uint64_t v9 = type metadata accessor for LaunchAppBehavior();
  v8[27] = v9;
  v8[28] = *(void *)(v9 - 8);
  v8[29] = swift_task_alloc();
  return _swift_task_switch(closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:), 0, 0);
}

uint64_t closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = *(void *)(v12 + 208);
  long long v23 = *(_OWORD *)(v12 + 176);
  uint64_t v14 = swift_task_alloc();
  *(void *)(v12 + 240) = v14;
  *(_OWORD *)(v14 + 16) = *(_OWORD *)(v12 + 160);
  *(_OWORD *)(v14 + 32) = v23;
  *(void *)(v14 + 48) = v13;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v12 + 248) = v15;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  *uint64_t v15 = v12;
  v15[1] = closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:);
  OUTLINED_FUNCTION_11_1();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v16, v17, v18, 0xD000000000000063, v19, v20, v14, v21, a9, a10, a11, a12);
}

uint64_t closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)()
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *BOOL v5 = v4;
  *(void *)(v3 + 256) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  void (*v26)(void);
  id v27;
  uint64_t (*v28)(void);
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  os_log_type_t v32 = v0;
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 184);
  uint64_t v4 = (void *)(*(void *)(v0 + 168) + direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  BOOL v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  uint64_t v7 = static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v3, v2);
  outlined init with copy of SignalProviding(v0 + 16, v0 + 56);
  if (v7) {
    uint64_t v30 = static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(*(void **)(v0 + 176), v0 + 56);
  }
  else {
    uint64_t v30 = 1;
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = v1;
  uint64_t v10 = Logger.logObject.getter();
  uint64_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    *(void *)(v0 + 112) = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v9, (SEL *)&selRef_aceId);
    *(void *)(v0 + 120) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v14 = String.init<A>(describing:)();
    *(void *)(v0 + 144) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 12) = 2080;
    *(void *)(v0 + 96) = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v9, (SEL *)&selRef_refId);
    *(void *)(v0 + 104) = v16;
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)(v0 + 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v10, v11, "#StartCallRCHFlowDelegate LaunchAppWithIntent aceId: %s, refId: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  uint64_t v19 = Logger.logObject.getter();
  uint64_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 67109120;
    *(_DWORD *)(v0 + 264) = v30 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v19, v20, "#StartCallRCHFlowDelegate LaunchAppBehavior shouldDialog: %{BOOL}d", v21, 8u);
    OUTLINED_FUNCTION_6();
  }
  long long v23 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 232);
  uint64_t v24 = *(void *)(v0 + 216);
  os_log_type_t v25 = *(void (**)(uint64_t))(v0 + 192);

  INStartCallIntent.setLaunchId(app:)();
  *(void *)uint64_t v22 = v9;
  *(unsigned char *)(v22 + 8) = 0;
  *(unsigned char *)(v22 + 9) = v30 & 1;
  OUTLINED_FUNCTION_22_44();
  v26();
  uint64_t v27 = v9;
  v25(v22);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v28();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void (*v11)(void);
  uint64_t (*v12)(void);
  uint64_t v14;

  swift_task_dealloc();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_47();
    BOOL v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "#StartCallRCHFlowDelegate Error constructing launchApp, using .withDialogAndButton to continue in app. Error: %@", v4, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[28];
  uint64_t v7 = v0[29];
  uint64_t v9 = v0[27];
  uint64_t v10 = (void (*)(uint64_t))v0[24];

  OUTLINED_FUNCTION_22_44();
  v11();
  v10(v7);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v12();
}

uint64_t closure #1 in closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v15[0] = a4;
  v15[1] = a5;
  uint64_t v6 = type metadata accessor for CATOption();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)static BiomeEventSender.instance;
  type metadata accessor for UnsupportedFlowCATs();
  id v13 = v12;
  static CATOption.defaultMode.getter();
  CATWrapper.__allocating_init(options:globals:)();
  specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)();

  swift_release();
  return swift_release();
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  void v7[5] = a7;
  void v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:), 0, 0);
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)()
{
  id v1 = [objc_allocWithZone((Class)SAResultCallback) init];
  v0[6] = v1;
  [v1 setCode:SAResultCallbackAnyErrorCodeValue];
  v0[7] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  v0[8] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46A030;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:);
  uint64_t v4 = (void *)v0[2];
  return static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)(v4);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint8_t *v10;
  void (*v11)(uint64_t, void);
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  id v1 = v0[8];
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = (void *)v0[3];
  *(void *)(v1 + 32) = v0[11];
  uint64_t v15 = v1;
  specialized Array._endMutation()();
  outlined bridged method (mbnn) of @objc SAResultCallback.commands.setter(v15, v2);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_46A030;
  *(void *)(v4 + 32) = v2;
  uint64_t v16 = v4;
  specialized Array._endMutation()();
  BOOL v5 = v2;
  outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.callbacks.setter(v16, v3);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = OUTLINED_FUNCTION_25_0(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v0[6];
    unint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl(&dword_0, v7, v8, "#StartCallRCHFlowDelegate Added MyriadEmergencyCall as ResultCallback for HomePod LaunchApp", v10, 2u);
    OUTLINED_FUNCTION_6();
  }
  else
  {

    uint64_t v7 = v0[6];
  }
  uint64_t v11 = (void (*)(uint64_t, void))v0[4];
  uint64_t v12 = v0[3];

  v11(v12, 0);
  OUTLINED_FUNCTION_47_0();
  return v13();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(uint64_t, void);
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  id v1 = (void *)v0[6];
  *(void *)(v0[8] + 16) = 0;
  swift_release();

  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = OUTLINED_FUNCTION_25_0(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    BOOL v5 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)BOOL v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "#StartCallRCHFlowDelegate Failure attaching MyriadEmergencyCall ResultCallback, returning LaunchApp as-is", v5, 2u);
    OUTLINED_FUNCTION_6();
  }
  swift_errorRelease();
  uint64_t v6 = (void (*)(uint64_t, void))v0[4];
  uint64_t v7 = v0[3];

  v6(v7, 0);
  OUTLINED_FUNCTION_47_0();
  return v8();
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 80) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 88) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

void StartCallRCHFlowDelegate.init()()
{
}

uint64_t StartCallRCHFlowDelegate.__ivar_destroyer()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals;

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t StartCallRCHFlowDelegate.deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  return v0;
}

uint64_t StartCallRCHFlowDelegate.__deallocating_deinit()
{
  StartCallRCHFlowDelegate.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance StartCallRCHFlowDelegate@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(*v1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals, a1);
}

void specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v39 = v1;
  uint64_t v40 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  os_log_type_t v14 = v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v16 = OUTLINED_FUNCTION_11_0(v15);
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_53();
  uint64_t v18 = v12[3];
  uint64_t v17 = v12[4];
  __swift_project_boxed_opaque_existential_1(v12, v18);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 112))(v18, v17);
  specialized BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(v19, v6);
  swift_release();
  if (INStartCallIntent.isThirdPartyCallKitCallBack.getter())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    uint64_t v21 = OUTLINED_FUNCTION_25_0(v20, (uint64_t)static Logger.siriPhone);
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v22))
    {
      long long v23 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)long long v23 = 0;
      _os_log_impl(&dword_0, v21, v14, "#StartCallRCHFlowDelegate 1P-extension redial/callback request wants to build LaunchApp for a 3P call.", v23, 2u);
      OUTLINED_FUNCTION_6();
    }

    closure #1 in static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(v10, v8, &v41, v42);
    uint64_t v38 = (void *)v42[0];
    v39(v42[0], 0);
    outlined consume of Result<SABaseCommand, Error>(v38, 0);
  }
  else
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    uint64_t v24 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
    if ((static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v10, v8) & 1) != 0
      && (uint64_t v25 = v12[3],
          uint64_t v26 = v12[4],
          __swift_project_boxed_opaque_existential_1(v12, v25),
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v26 + 8))(v42, v25, v26),
          __swift_project_boxed_opaque_existential_1(v42, v42[3]),
          LOBYTE(v25) = dispatch thunk of DeviceState.isHomePod.getter(),
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v42),
          (v25 & 1) != 0))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      unint64_t v28 = OUTLINED_FUNCTION_25_0(v27, (uint64_t)static Logger.siriPhone);
      os_log_type_t v29 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_0, v28, v29, "#StartCallRCHFlowDelegate Building custom LaunchApp for HomePod emergency call", v30, 2u);
        OUTLINED_FUNCTION_6();
      }

      uint64_t v31 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v0, 1, 1, v31);
      os_log_type_t v32 = (void *)swift_allocObject();
      v32[2] = 0;
      uint64_t v32[3] = 0;
      v32[4] = v4;
      v32[5] = v24;
      v32[6] = v39;
      v32[7] = v40;
      swift_retain();
      swift_retain();
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v0, (uint64_t)&async function pointer to partial apply for closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:), (uint64_t)v32);
      swift_release();
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      uint64_t v34 = OUTLINED_FUNCTION_25_0(v33, (uint64_t)static Logger.siriPhone);
      os_log_type_t v35 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl(&dword_0, v34, v35, "#StartCallRCHFlowDelegate Returning default LaunchApp", v36, 2u);
        OUTLINED_FUNCTION_6();
      }

      id v37 = v24;
      v39((uint64_t)v24, 0);
    }
  }
  OUTLINED_FUNCTION_26_1();
}

void specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v44 = a7;
  uint64_t v45 = a8;
  uint64_t v43 = a6;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v14 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 112))(v16, v17);
  BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(v18, a10, a11);
  swift_release();
  if (INStartCallIntent.isThirdPartyCallKitCallBack.getter())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "#StartCallRCHFlowDelegate 1P-extension redial/callback request wants to build LaunchApp for a 3P call.", v22, 2u);
      swift_slowDealloc();
    }

    closure #1 in static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(a3, a4, &v46, v47);
    uint64_t v40 = (void *)v47[0];
    v44(v47[0], 0);
    outlined consume of Result<SABaseCommand, Error>(v40, 0);
  }
  else
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    long long v23 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
    if ((static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(a3, a4) & 1) != 0
      && (uint64_t v24 = a2[3],
          uint64_t v25 = a2[4],
          __swift_project_boxed_opaque_existential_1(a2, v24),
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 8))(v47, v24, v25),
          __swift_project_boxed_opaque_existential_1(v47, v47[3]),
          LOBYTE(v24) = dispatch thunk of DeviceState.isHomePod.getter(),
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v47),
          (v24 & 1) != 0))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v27, v28))
      {
        os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v29 = 0;
        _os_log_impl(&dword_0, v27, v28, "#StartCallRCHFlowDelegate Building custom LaunchApp for HomePod emergency call", v29, 2u);
        swift_slowDealloc();
      }

      uint64_t v30 = type metadata accessor for TaskPriority();
      uint64_t v31 = v42;
      __swift_storeEnumTagSinglePayload(v42, 1, 1, v30);
      os_log_type_t v32 = (void *)swift_allocObject();
      v32[2] = 0;
      uint64_t v32[3] = 0;
      uint64_t v33 = v44;
      v32[4] = v43;
      v32[5] = v23;
      uint64_t v34 = v45;
      v32[6] = v33;
      v32[7] = v34;
      swift_retain();
      swift_retain();
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v31, (uint64_t)&closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)partial apply, (uint64_t)v32);
      swift_release();
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_0, v36, v37, "#StartCallRCHFlowDelegate Returning default LaunchApp", v38, 2u);
        swift_slowDealloc();
      }

      id v39 = v23;
      v44((uint64_t)v23, 0);
    }
  }
}

uint64_t sub_30FBC8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

uint64_t sub_31037C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t partial apply for closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v13 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_17_0(v9);
  *uint64_t v10 = v11;
  v10[1] = partial apply for closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:);
  return closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)(a1, v13, v3, v4, v5, v6, v7, v8);
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentResponseType : DismissSiriDeclaringIntentResponse in StartCallRCHFlowDelegate()
{
  return &protocol witness table for INStartCallIntentResponse;
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentType : CallingIntent in StartCallRCHFlowDelegate()
{
  return &protocol witness table for INStartCallIntent;
}

uint64_t instantiation function for generic protocol witness table for StartCallRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type StartCallRCHFlowDelegate and conformance StartCallRCHFlowDelegate(&lazy protocol witness table cache variable for type StartCallRCHFlowDelegate and conformance StartCallRCHFlowDelegate, (void (*)(uint64_t))type metadata accessor for StartCallRCHFlowDelegate);
  *(void *)(a1 + 8) = result;
  return result;
}

{
  uint64_t result;

  uint64_t result = lazy protocol witness table accessor for type StartCallRCHFlowDelegate and conformance StartCallRCHFlowDelegate(&lazy protocol witness table cache variable for type StartCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>, (void (*)(uint64_t))type metadata accessor for StartCallRCHFlowDelegate);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for StartCallRCHFlowDelegate()
{
  uint64_t result = type metadata singleton initialization cache for StartCallRCHFlowDelegate;
  if (!type metadata singleton initialization cache for StartCallRCHFlowDelegate) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for StartCallRCHFlowDelegate()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for StartCallRCHFlowDelegate()
{
  return type metadata accessor for StartCallRCHFlowDelegate();
}

uint64_t partial apply for closure #1 in closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)(uint64_t a1)
{
  return closure #1 in closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_310654()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  OUTLINED_FUNCTION_15();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  OUTLINED_FUNCTION_11();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

uint64_t partial apply for closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)()
{
  OUTLINED_FUNCTION_36_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:);
  uint64_t v3 = OUTLINED_FUNCTION_8_5();
  return closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t lazy protocol witness table accessor for type StartCallRCHFlowDelegate and conformance StartCallRCHFlowDelegate(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_15Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)partial apply()
{
  OUTLINED_FUNCTION_36_27();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = protocol witness for Flow.execute() in conformance PhoneIntentRCHFlow<A, B>;
  uint64_t v3 = OUTLINED_FUNCTION_8_5();
  return closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t OUTLINED_FUNCTION_3_90()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_81()
{
  return v0;
}

void OUTLINED_FUNCTION_9_64()
{
  Signpost.OpenSignpost.end()();
}

uint64_t OUTLINED_FUNCTION_14_41()
{
  return *(void *)(v0 - 152);
}

uint64_t OUTLINED_FUNCTION_19_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_23()
{
  return v0;
}

uint64_t PhoneSearchCallHistoryIntentProperties.getContactRole.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #0 of PhoneSearchCallHistoryIntentProperties.getContactRole.getter, a1, a2) & 1) == 0)PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #1 of PhoneSearchCallHistoryIntentProperties.getContactRole.getter, a1, a2); {
  SpeakableString.init(print:speak:)();
  }
  uint64_t v6 = type metadata accessor for SpeakableString();

  return __swift_storeEnumTagSinglePayload(a3, 0, 1, v6);
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v45 = v12 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v43 = a2;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v14 = (void *)(a1 + 32);
    do
    {
      if (*v14++)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType();
        switch((int)BackingType)
        {
          case 2:
            uint64_t v17 = @"OUTGOING";
            goto LABEL_15;
          case 3:
            uint64_t v17 = @"MISSED";
            goto LABEL_15;
          case 4:
            uint64_t v17 = @"RECEIVED";
            goto LABEL_15;
          case 5:
            uint64_t v17 = @"LATEST";
            goto LABEL_15;
          case 7:
            uint64_t v17 = @"VOICEMAIL";
            goto LABEL_15;
          case 8:
            uint64_t v17 = @"RINGING";
            goto LABEL_15;
          case 9:
            uint64_t v17 = @"IN_PROGRESS";
            goto LABEL_15;
          case 10:
            uint64_t v17 = @"ON_HOLD";
LABEL_15:
            uint64_t v19 = v17;
            uint64_t v18 = v17;
            break;
          default:
            uint64_t v18 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
            break;
        }
        id v20 = v18;
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v3 = v21;
      }
      else
      {
        OUTLINED_FUNCTION_26_21();
      }
      unint64_t v22 = _swiftEmptyArrayStorage[2];
      if (v22 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v22 + 1;
      long long v23 = &_swiftEmptyArrayStorage[2 * v22];
      v23[4] = v4;
      v23[5] = v3;
      --v13;
    }
    while (v13);
    a2 = v43;
  }
  uint64_t v24 = specialized Set.init<A>(_:)((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v42 = v24;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v27 = v9 + 16;
    uint64_t v44 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
    unint64_t v28 = v25 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v29 = *(void *)(v9 + 72);
    uint64_t v30 = (void (**)(uint64_t, uint64_t))(v27 - 8);
    do
    {
      v44(v45, v28, v46);
      uint64_t v31 = SpeakableString.print.getter();
      uint64_t v33 = v32;
      (*v30)(v45, v46);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      unint64_t v34 = _swiftEmptyArrayStorage[2];
      if (v34 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v34 + 1;
      uint64_t v35 = &_swiftEmptyArrayStorage[2 * v34];
      v35[4] = v31;
      v35[5] = v33;
      v28 += v29;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v24 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = specialized Set.init<A>(_:)((uint64_t)_swiftEmptyArrayStorage);
  if (*(void *)(v36 + 16))
  {
    uint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v38 = specialized Set.union<A>(_:)(v37, v36);
    specialized static Set.== infix(_:_:)(v38, v24);
    char v40 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v40 = 0;
  }
  return v40 & 1;
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForLatest.getter(uint64_t a1, uint64_t a2)
{
  return PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(4, a1, a2);
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v18 = *(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16);
    uint64_t v17 = v10 + 16;
    uint64_t v38 = v18;
    unint64_t v19 = v15 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v36 = *(void *)(v17 + 56);
    swift_bridgeObjectRetain();
    uint64_t v37 = a1;
    while (1)
    {
      v38(v14, v19, v8);
      uint64_t v20 = SpeakableString.print.getter();
      uint64_t v22 = v21;
      if (a1)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType();
        switch((int)BackingType)
        {
          case 2:
            uint64_t v24 = @"OUTGOING";
            goto LABEL_15;
          case 3:
            uint64_t v24 = @"MISSED";
            goto LABEL_15;
          case 4:
            uint64_t v24 = @"RECEIVED";
            goto LABEL_15;
          case 5:
            uint64_t v24 = @"LATEST";
            goto LABEL_15;
          case 7:
            uint64_t v24 = @"VOICEMAIL";
            goto LABEL_15;
          case 8:
            uint64_t v24 = @"RINGING";
            goto LABEL_15;
          case 9:
            uint64_t v24 = @"IN_PROGRESS";
            goto LABEL_15;
          case 10:
            uint64_t v24 = @"ON_HOLD";
LABEL_15:
            uint64_t v26 = v24;
            uint64_t v25 = v24;
            break;
          default:
            uint64_t v25 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
            break;
        }
        id v27 = v25;
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v3 = v28;
      }
      else
      {
        OUTLINED_FUNCTION_26_21();
      }
      if (v20 == v4 && v22 == v3) {
        break;
      }
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = OUTLINED_FUNCTION_4_82();
      v32(v31);
      if (v30) {
        goto LABEL_27;
      }
      v19 += v36;
      --v16;
      a1 = v37;
      if (!v16)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v34 = OUTLINED_FUNCTION_4_82();
    v35(v34);
LABEL_27:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForVoicemail.getter(uint64_t a1, uint64_t a2)
{
  return PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(5, a1, a2);
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForReceived.getter(uint64_t a1, uint64_t a2)
{
  return PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(3, a1, a2);
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForOutgoing.getter(uint64_t a1, uint64_t a2)
{
  return PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(1, a1, a2);
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter(uint64_t a1, uint64_t a2)
{
  return PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #0 of PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter, a1, a2);
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForFaceTime.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v5 - 8);
  OUTLINED_FUNCTION_12_0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  uint64_t v6 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v2, 1, v6) == 1)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = SpeakableString.print.getter();
    uint64_t v8 = v9;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v2, v6);
  }
  uint64_t v10 = INPreferredCallProviderGetBackingType();
  switch(v10)
  {
    case 4:
      uint64_t v11 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v11 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v11 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v12 = v11;
      goto LABEL_12;
  }
  uint64_t v11 = +[NSString stringWithFormat:@"(unknown: %i)", v10];
LABEL_12:
  uint64_t v13 = v11;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (v8)
  {
    if (v7 == v14 && v8 == v16) {
      char v18 = 1;
    }
    else {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = 0;
  }
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForVideo.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  OUTLINED_FUNCTION_1();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_12_0();
  uint64_t v15 = *(uint64_t (**)(uint64_t))(a2 + 88);
  uint64_t v16 = OUTLINED_FUNCTION_5_62();
  uint64_t v17 = *(void *)(v15(v16) + 16);
  swift_bridgeObjectRelease();
  uint64_t v35 = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v3, v2, a1);
  if (v17 != 1)
  {
    char v27 = 0;
    uint64_t v24 = v13;
LABEL_16:
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v3, a1);
    return v27 & 1;
  }
  uint64_t v18 = OUTLINED_FUNCTION_5_62();
  uint64_t result = v15(v18);
  if (*(void *)(result + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v11, result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v34);
    swift_bridgeObjectRelease();
    uint64_t v20 = SpeakableString.print.getter();
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v34);
    uint64_t BackingType = INCallCapabilityGetBackingType();
    if (BackingType == 2)
    {
      uint64_t v25 = @"VIDEO_CALL";
      uint64_t v28 = @"VIDEO_CALL";
      uint64_t v24 = v35;
    }
    else
    {
      uint64_t v24 = v13;
      if (BackingType == 1)
      {
        uint64_t v25 = @"AUDIO_CALL";
        uint64_t v26 = @"AUDIO_CALL";
      }
      else
      {
        uint64_t v25 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
      }
    }
    uint64_t v29 = v25;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;

    if (v20 == v30 && v22 == v32) {
      char v27 = 1;
    }
    else {
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_4_82()
{
  return v0;
}

uint64_t specialized Collection<>.isAddOrNewCall.getter(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v2 = Hasher._finalize()();
    uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v4 = v2 & ~v3;
    uint64_t v5 = a1 + 56;
    if ((*(void *)(a1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
    {
      uint64_t v6 = ~v3;
      while (1)
      {
        int v7 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v4);
        if (v7 != 1 && v7 != 2) {
          break;
        }
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v8) {
          goto LABEL_10;
        }
        unint64_t v4 = (v4 + 1) & v6;
        if (((*(void *)(v5 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
          return 0;
        }
      }
      swift_bridgeObjectRelease();
LABEL_10:
      if (*(void *)(a1 + 16))
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
        unint64_t v12 = v10 & ~v11;
        if ((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
        {
          uint64_t v13 = ~v11;
          while (1)
          {
            if (*(unsigned char *)(*(void *)(a1 + 48) + v12) && *(unsigned char *)(*(void *)(a1 + 48) + v12) != 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v9 = 1;
              goto LABEL_30;
            }
            char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v14) {
              break;
            }
            unint64_t v12 = (v12 + 1) & v13;
            if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
              goto LABEL_17;
            }
          }
LABEL_29:
          uint64_t v9 = 1;
          goto LABEL_30;
        }
LABEL_17:
        if (*(void *)(a1 + 16))
        {
          Hasher.init(_seed:)();
          swift_bridgeObjectRetain();
          String.hash(into:)();
          Swift::Int v15 = Hasher._finalize()();
          uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
          unint64_t v17 = v15 & ~v16;
          if ((*(void *)(v5 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
          {
            uint64_t v18 = ~v16;
            while (!*(unsigned char *)(*(void *)(a1 + 48) + v17) || *(unsigned char *)(*(void *)(a1 + 48) + v17) == 2)
            {
              char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v19)
              {
                swift_bridgeObjectRelease();
                goto LABEL_29;
              }
              unint64_t v17 = (v17 + 1) & v18;
              if (((*(void *)(v5 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                goto LABEL_24;
              }
            }
            swift_bridgeObjectRelease_n();
            uint64_t v9 = 1;
            goto LABEL_30;
          }
LABEL_24:
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      uint64_t v9 = 0;
LABEL_30:
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  return 0;
}

void specialized Sequence.contains(where:)(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v20;
    uint64_t v19 = v21;
    uint64_t v4 = v22;
    int64_t v5 = v23;
    unint64_t v6 = v24;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  int64_t v18 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    int64_t v10 = v5;
    if ((v3 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_32;
    }
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for TUHandle);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v25;
    swift_unknownObjectRelease();
    if (!v25) {
      goto LABEL_32;
    }
LABEL_31:
    int v17 = TUHandlesAreCanonicallyEqual();

    if (v17) {
      goto LABEL_32;
    }
  }
  if (v6)
  {
    unint64_t v11 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v12 = v11 | (v5 << 6);
LABEL_30:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
    if (!v13) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  int64_t v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v18) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v19 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v10 + 2;
      if (v10 + 2 >= v18) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v10 + 3;
        if (v10 + 3 >= v18) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v19 + 8 * v5);
        if (!v15)
        {
          int64_t v5 = v10 + 4;
          if (v10 + 4 >= v18) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v19 + 8 * v5);
          if (!v15)
          {
            int64_t v5 = v10 + 5;
            if (v10 + 5 >= v18) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v19 + 8 * v5);
            if (!v15)
            {
              int64_t v16 = v10 + 6;
              while (v16 < v18)
              {
                unint64_t v15 = *(void *)(v19 + 8 * v16++);
                if (v15)
                {
                  int64_t v5 = v16 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              outlined consume of [String : Any].Iterator._Variant();

              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t OngoingCallConfirmIntentFlow.rchRecord.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15();
  uint64_t v0 = OUTLINED_FUNCTION_7_0();

  return v1(v0);
}

uint64_t OngoingCallConfirmIntentFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals, a1);
}

uint64_t OngoingCallConfirmIntentFlow.callStateProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
}

uint64_t key path setter for OngoingCallConfirmIntentFlow.state : OngoingCallConfirmIntentFlow(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of OngoingCallConfirmIntentFlow.State(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
  swift_beginAccess();
  outlined assign with take of OngoingCallConfirmIntentFlow.State((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t OngoingCallConfirmIntentFlow.state.getter()
{
  swift_beginAccess();
  uint64_t v0 = OUTLINED_FUNCTION_96();
  return outlined init with copy of OngoingCallConfirmIntentFlow.State(v0, v1);
}

uint64_t outlined init with copy of OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for OngoingCallConfirmIntentFlow.State);
}

uint64_t OngoingCallConfirmIntentFlow.Action.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6C61436F54646461;
  }
  else {
    return 0x6C6C614377656ELL;
  }
}

PhoneCallFlowDelegatePlugin::OngoingCallConfirmIntentFlow::Action_optional __swiftcall OngoingCallConfirmIntentFlow.Action.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of OngoingCallConfirmIntentFlow.Action.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.int value = PhoneCallFlowDelegatePlugin_OngoingCallConfirmIntentFlow_Action_addToCall;
  }
  else {
    v4.int value = PhoneCallFlowDelegatePlugin_OngoingCallConfirmIntentFlow_Action_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallConfirmIntentFlow.Action(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance OngoingCallConfirmIntentFlow.Action()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallConfirmIntentFlow.Action()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallConfirmIntentFlow.Action()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::OngoingCallConfirmIntentFlow::Action_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallConfirmIntentFlow.Action@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallConfirmIntentFlow::Action_optional *a2@<X8>)
{
  result.int value = OngoingCallConfirmIntentFlow.Action.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallConfirmIntentFlow.Action@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OngoingCallConfirmIntentFlow.Action.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance OngoingCallConfirmIntentFlow.Action()
{
  return OngoingCallConfirmIntentFlow.Action.rawValue.getter(*v0);
}

uint64_t OngoingCallConfirmIntentFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = OUTLINED_FUNCTION_5_63();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_46_0();
  unint64_t v11 = (unsigned char *)(v9 - v10);
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v34 - v14;
  (*(void (**)(uint64_t))(*(void *)v1 + 112))(v13);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1) {
    goto LABEL_6;
  }
  uint64_t v17 = OUTLINED_FUNCTION_16();
  outlined init with copy of OngoingCallConfirmIntentFlow.State(v17, v18);
  OUTLINED_FUNCTION_1();
  uint64_t v20 = v19;
  uint64_t v22 = (*(uint64_t (**)(unsigned char *, uint64_t))(v21 + 88))(v11, v16);
  if (v22 != enum case for PromptResult.answered<A>(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v11, v16);
    goto LABEL_6;
  }
  uint64_t v23 = v22;
  (*(void (**)(unsigned char *, uint64_t))(v20 + 96))(v11, v16);
  if (*v11)
  {
LABEL_6:
    uint64_t v31 = enum case for PromptResult.cancelled<A>(_:);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
    OUTLINED_FUNCTION_15();
    (*(void (**)(uint64_t, uint64_t))(v32 + 104))(a1, v31);
    return outlined destroy of OngoingCallConfirmIntentFlow.State((uint64_t)v15);
  }
  uint64_t v24 = enum case for ConfirmationResponse.confirmed(_:);
  uint64_t v25 = type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 104))(v7, v24, v25);
  OUTLINED_FUNCTION_36_11();
  __swift_storeEnumTagSinglePayload(v27, v28, v29, v25);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  IntentResolutionRecord.intent.getter();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  ConfirmIntentAnswer.init(confirmationResponse:intent:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v30 + 104))(a1, v23);
  return outlined destroy of OngoingCallConfirmIntentFlow.State((uint64_t)v15);
}

uint64_t outlined destroy of OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OngoingCallConfirmIntentFlow.__allocating_init(rchRecord:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = OUTLINED_FUNCTION_5_63();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, a1, v5);
  outlined init with copy of SignalProviding(a2, (uint64_t)v19);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(v2 + 144))(v15, v11, v19);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
  return v17;
}

uint64_t OngoingCallConfirmIntentFlow.__allocating_init(state:rchRecord:sharedGlobals:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  OngoingCallConfirmIntentFlow.init(state:rchRecord:sharedGlobals:)(a1, a2, a3);
  return v6;
}

uint64_t OngoingCallConfirmIntentFlow.init(state:rchRecord:sharedGlobals:)(uint64_t a1, uint64_t a2, long long *a3)
{
  outlined init with take of OngoingCallConfirmIntentFlow.State(a1, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state);
  uint64_t v6 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_rchRecord;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, a2);
  outlined init with take of AppSelectionSignalComponent(a3, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals);
  return v3;
}

uint64_t outlined init with take of OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OngoingCallConfirmIntentFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t type metadata accessor for OngoingCallConfirmIntentFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for OngoingCallConfirmIntentFlow);
}

uint64_t OngoingCallConfirmIntentFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[15] = v2;
  v1[16] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  v1[17] = v3;
  v1[18] = *(void *)(v3 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  OUTLINED_FUNCTION_5_63();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  return _swift_task_switch(OngoingCallConfirmIntentFlow.execute(), 0, 0);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned char *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _WORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  unsigned char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _WORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  uint64_t v74 = v0;
  uint64_t v1 = (void (*)(uint64_t))(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 136);
  (*(void (**)(void))(**(void **)(v0 + 128) + 112))();
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    (*(void (**)(void))(**(void **)(v0 + 128) + 104))();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = OUTLINED_FUNCTION_16();
    if (v5(v4))
    {
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      uint64_t v6 = OUTLINED_FUNCTION_16();
      uint64_t v8 = OngoingCallConfirmIntentFlow.makeErrorFlow(currentCall:)(v6, v7);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v11 = *(void *)(v0 + 176);
        uint64_t v10 = *(void *)(v0 + 184);
        uint64_t v12 = *(void *)(v0 + 136);
        uint64_t v13 = *(void *)(v0 + 128);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 144) + 104))(v10, enum case for PromptResult.cancelled<A>(_:), v12);
        OUTLINED_FUNCTION_36_11();
        __swift_storeEnumTagSinglePayload(v14, v15, v16, v12);
        outlined init with take of OngoingCallConfirmIntentFlow.State(v10, v11);
        uint64_t v17 = v13 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
        OUTLINED_FUNCTION_0_38();
        outlined assign with take of OngoingCallConfirmIntentFlow.State(v11, v17);
        swift_endAccess();
        *(void *)(v0 + 112) = v9;
        type metadata accessor for SimpleOutputFlowAsync();
        static ExecuteResponse.complete<A>(next:)();
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        uint64_t v68 = OUTLINED_FUNCTION_16();
        OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)(v68, v69, v70);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
      uint64_t v47 = Logger.logObject.getter();
      uint64_t v48 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl(&dword_0, v47, v48, "#OngoingCallConfirmIntentFlow: No current call during OngoingCall flows. Proceed with new call.", v49, 2u);
        OUTLINED_FUNCTION_6();
      }
      uint64_t v51 = *(void *)(v0 + 176);
      uint64_t v50 = *(unsigned char **)(v0 + 184);
      uint64_t v52 = *(void *)(v0 + 136);
      uint64_t v53 = *(void *)(v0 + 144);
      uint64_t v54 = *(void *)(v0 + 128);

      NSObject *v50 = 0;
      (*(void (**)(unsigned char *, void, uint64_t))(v53 + 104))(v50, enum case for PromptResult.answered<A>(_:), v52);
      OUTLINED_FUNCTION_36_11();
      __swift_storeEnumTagSinglePayload(v55, v56, v57, v52);
      outlined init with take of OngoingCallConfirmIntentFlow.State((uint64_t)v50, v51);
      uint64_t v58 = v54 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_0_38();
      outlined assign with take of OngoingCallConfirmIntentFlow.State(v51, v58);
      swift_endAccess();
      static ExecuteResponse.complete()();
    }
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 144) + 88))(*(void *)(v0 + 192), *(void *)(v0 + 136));
    uint64_t v19 = *(void *)(v0 + 192);
    uint64_t v20 = *(void *)(v0 + 144);
    if (v18 == enum case for PromptResult.answered<A>(_:))
    {
      uint64_t v21 = *(unsigned char **)(v0 + 168);
      (*(void (**)(unsigned char *, uint64_t, void))(v20 + 16))(v21, v19, *(void *)(v0 + 136));
      uint64_t v22 = OUTLINED_FUNCTION_7_0();
      v23(v22);
      if (*v21 == 1)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
        uint64_t v25 = Logger.logObject.getter();
        uint64_t v26 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_18(v26))
        {
          uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_32_2(v27);
          OUTLINED_FUNCTION_10_24(&dword_0, v25, (os_log_type_t)v21, "#OngoingCallConfirmIntentFlow User selected add to call, push new RCHFlow");
          OUTLINED_FUNCTION_6();
        }
        uint64_t v28 = *(void *)(v0 + 192);
        uint64_t v29 = *(void *)(v0 + 136);
        uint64_t v30 = *(void *)(v0 + 144);

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
        uint64_t v31 = (void *)IntentResolutionRecord.intent.getter();
        uint64_t v32 = outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v31);
        uint64_t v33 = objc_allocWithZone((Class)INAddCallParticipantIntent);
        uint64_t v34 = @nonobjc INAddCallParticipantIntent.init(participants:)(v32);
        IntentResolutionRecord.app.getter();
        static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)();
        swift_release();
        static ExecuteResponse.complete<A>(next:)();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
      }
      else
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        char v59 = type metadata accessor for Logger();
        __swift_project_value_buffer(v59, (uint64_t)static Logger.siriPhone);
        uint64_t v60 = Logger.logObject.getter();
        uint64_t v61 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_18(v61))
        {
          uint64_t v62 = (_WORD *)OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_32_2(v62);
          OUTLINED_FUNCTION_10_24(&dword_0, v60, (os_log_type_t)v21, "#OngoingCallConfirmIntentFlow User selected new call, proceed to Handle + ContinueInApp");
          OUTLINED_FUNCTION_6();
        }
        uint64_t v63 = *(void *)(v0 + 192);
        uint64_t v64 = *(void *)(v0 + 136);
        uint64_t v65 = *(void *)(v0 + 144);

        static ExecuteResponse.complete()();
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, void))(v20 + 32))(*(void *)(v0 + 160), v19, *(void *)(v0 + 136));
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v36 = *(void *)(v0 + 152);
      uint64_t v35 = *(void *)(v0 + 160);
      uint64_t v38 = *(void *)(v0 + 136);
      uint64_t v37 = *(void *)(v0 + 144);
      char v39 = type metadata accessor for Logger();
      __swift_project_value_buffer(v39, (uint64_t)static Logger.siriPhone);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v35, v38);
      char v40 = Logger.logObject.getter();
      uint64_t v41 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 136315138;
        uint64_t v1 = (void (*)(uint64_t))(v42 + 12);
        lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type PromptResult<OngoingCallConfirmIntentFlow.Action> and conformance PromptResult<A>, &demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
        uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v45 = OUTLINED_FUNCTION_7_71();
        ((void (*)(uint64_t))(v42 + 12))(v45);
        _os_log_impl(&dword_0, v40, v41, "#OngoingCallConfirmIntentFlow Prompt result: %s, returning .complete for this flow", (uint8_t *)v42, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        uint64_t v66 = OUTLINED_FUNCTION_7_71();
        v1(v66);
      }

      static ExecuteResponse.complete()();
      uint64_t v67 = OUTLINED_FUNCTION_96();
      v1(v67);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
  return v71();
}

uint64_t OngoingCallConfirmIntentFlow.makeErrorFlow(currentCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DialogPhase();
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v86 = v8;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for CATOption();
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v15 = (void *)IntentResolutionRecord.intent.getter();
  uint64_t v16 = outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v15);
  if (v16) {
    unint64_t v17 = v16;
  }
  else {
    unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (v18 != 1) {
    goto LABEL_41;
  }
  uint64_t v19 = (void *)IntentResolutionRecord.intent.getter();
  unint64_t v20 = outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v19);
  if (!v20) {
    goto LABEL_41;
  }
  unint64_t v21 = v20;
  if (!(v20 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_10;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_40;
  }
LABEL_10:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v21 & 0xC000000000000001) == 0);
  if ((v21 & 0xC000000000000001) != 0) {
    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v22 = *(id *)(v21 + 32);
  }
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  id v24 = [v23 personHandle];
  if (!v24)
  {

LABEL_41:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    __swift_project_value_buffer(v69, (uint64_t)static Logger.siriPhone);
    uint64_t v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v72);
      OUTLINED_FUNCTION_10_24(&dword_0, v70, v71, "#OngoingCallConfirmIntentFlow: Skipping validation for group call requests. Continue to offer.");
      OUTLINED_FUNCTION_6();
    }

    return 0;
  }
  id v25 = v24;
  (*(void (**)(NSObject **__return_ptr))(*(void *)v3 + 104))(&v93);
  uint64_t v85 = v25;
  uint64_t v26 = v96;
  uint64_t v27 = v97;
  __swift_project_boxed_opaque_existential_1(&v93, v96);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 48))(v26, v27);
  uint64_t v30 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 16))(v85, v28, v29);
  if (!v30)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    __swift_project_value_buffer(v42, (uint64_t)static Logger.siriPhone);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v45);
      OUTLINED_FUNCTION_10_24(&dword_0, v43, v44, "#OngoingCallConfirmIntentFlow: Could not normalize handles for validation. Continue to offer.");
      OUTLINED_FUNCTION_6();
    }

    return 0;
  }
  uint64_t v84 = (void *)v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
  uint64_t ObjectType = swift_getObjectType();
  id v31 = SPHCall.localHandle.getter();
  if (!v31)
  {
LABEL_27:
    uint64_t v81 = v23;
    uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 56);
    uint64_t v46 = v78(ObjectType, a2);
    id v47 = v84;
    specialized Sequence.contains(where:)(v46, v47);
    char v49 = v48;
    swift_bridgeObjectRelease();
    if (v49)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v50 = type metadata accessor for Logger();
      __swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
      id v51 = v47;
      uint64_t v52 = a1;
      swift_unknownObjectRetain_n();
      id v79 = v51;
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v53, v54))
      {
        os_log_type_t v75 = v54;
        uint64_t v55 = swift_slowAlloc();
        uint64_t v74 = (void *)swift_slowAlloc();
        uint64_t v93 = swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 136315394;
        uint64_t v76 = a2;
        v78(ObjectType, a2);
        type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for TUHandle);
        lazy protocol witness table accessor for type TUHandle and conformance NSObject();
        uint64_t v56 = Set.description.getter();
        unint64_t v58 = v57;
        swift_bridgeObjectRelease();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v58, (uint64_t *)&v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        char v59 = (uint8_t *)v55;
        *(_WORD *)(v55 + 12) = 2112;
        *(void *)&long long v89 = v79;
        id v60 = v79;
        uint64_t v52 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v74 = v84;

        _os_log_impl(&dword_0, v53, v75, "#OngoingCallConfirmIntentFlow: Providing error dialog for calling contact we're already calling, %s contains %@", v59, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        a2 = v76;
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      outlined init with copy of SignalProviding(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals, (uint64_t)&v95);
      uint64_t v93 = v52;
      uint64_t v94 = a2;
      type metadata accessor for AddCallParticipantCATsSimple();
      swift_unknownObjectRetain();
      static CATOption.defaultMode.getter();
      uint64_t v100 = CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for PhonePerson(0);
      uint64_t v61 = v98;
      uint64_t v62 = v99;
      __swift_project_boxed_opaque_existential_1(&v95, v98);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v62 + 8))(&v89, v61, v62);
      __swift_project_boxed_opaque_existential_1(&v89, *((uint64_t *)&v90 + 1));
      dispatch thunk of DeviceState.siriLocale.getter();
      uint64_t v63 = static PhonePerson.make(phonePerson:options:locale:)(v81, 0, v12);
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v12, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      outlined init with copy of OngoingCallErrorFlowFactory((uint64_t)&v93, (uint64_t)&v89);
      uint64_t v64 = swift_allocObject();
      long long v65 = v90;
      *(_OWORD *)(v64 + 16) = v89;
      *(_OWORD *)(v64 + 32) = v65;
      long long v66 = v92;
      *(_OWORD *)(v64 + 48) = v91;
      *(_OWORD *)(v64 + 64) = v66;
      *(void *)(v64 + 80) = v63;
      swift_retain();
      swift_retain();
      static DialogPhase.error.getter();
      outlined init with copy of SignalProviding((uint64_t)&v95, (uint64_t)&v89);
      type metadata accessor for DialogOutputFactory();
      swift_allocObject();
      uint64_t v67 = DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
      uint64_t v68 = (*(uint64_t (**)(void))(*(void *)v67 + 112))();

      swift_release();
      swift_release();
      swift_release();
      goto LABEL_37;
    }

    return 0;
  }
  uint64_t v32 = v31;
  if (!TUHandlesAreCanonicallyEqual())
  {

    goto LABEL_27;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
  id v34 = v84;
  id v35 = v32;
  uint64_t v87 = v34;
  uint64_t v36 = v35;
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_18(v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v77 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 138412546;
    uint64_t v80 = v23;
    uint64_t v93 = v87;
    os_log_type_t v83 = v34;
    char v40 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v77 = v84;

    *(_WORD *)(v39 + 12) = 2112;
    uint64_t v93 = v36;
    uint64_t v41 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v77[1] = v32;

    uint64_t v23 = v80;
    _os_log_impl(&dword_0, v37, v83, "#OngoingCallConfirmIntentFlow: Providing error dialog for calling self, %@ matches %@", (uint8_t *)v39, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    uint64_t v37 = v87;
  }

  outlined init with copy of SignalProviding(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals, (uint64_t)&v95);
  uint64_t v93 = a1;
  uint64_t v94 = a2;
  type metadata accessor for AddCallParticipantCATsSimple();
  swift_unknownObjectRetain();
  static CATOption.defaultMode.getter();
  uint64_t v100 = CATWrapperSimple.__allocating_init(options:globals:)();
  uint64_t v68 = OngoingCallErrorFlowFactory.selfAdd()();

LABEL_37:
  outlined destroy of OngoingCallErrorFlowFactory((uint64_t)&v93);
  return v68;
}

uint64_t OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v53)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v58;
  Swift::Int v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  long long v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _OWORD v92[2];
  uint64_t v93;
  uint64_t v94[6];

  uint64_t v4 = v3;
  uint64_t v8 = OUTLINED_FUNCTION_5_63();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v84 = v9 - v10;
  __chkstk_darwin(v11);
  os_log_type_t v83 = (char *)&v79 - v12;
  uint64_t v13 = type metadata accessor for CATOption();
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_4();
  uint64_t v85 = v16 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_1();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_4();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = *(void (**)(uint64_t))(v18 + 16);
  char v82 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_rchRecord;
  uint64_t v87 = v24;
  v23(v22);
  id v25 = (void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals);
  uint64_t v26 = *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 24);
  uint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals), v26);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v27 + 120))(v94, v26, v27);
  uint64_t v28 = v25[3];
  uint64_t v29 = v25[4];
  uint64_t v86 = v25;
  __swift_project_boxed_opaque_existential_1(v25, v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 72))(v28, v29);
  (*(void (**)(long long *__return_ptr))(*(void *)v30 + 232))(&v88);
  swift_release();
  if (v90 == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v88, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    memset(v92, 0, sizeof(v92));
    uint64_t v93 = 0;
  }
  else
  {
    outlined init with copy of ResponseMode?((uint64_t)&v88 + 8, (uint64_t)v92, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined destroy of TransformationResult((uint64_t)&v88);
  }
  static OngoingCallOfferOptions.from(rchRecord:callStateProvider:nlIntent:)(v22, v94, (uint64_t)v92);
  uint64_t v32 = v31;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v92, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v87);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  id v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v81 = v4;
    *(void *)&uint64_t v88 = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v80 = a2;
    id v79 = a3;
    lazy protocol witness table accessor for type OngoingCallOfferOptions and conformance OngoingCallOfferOptions();
    uint64_t v38 = a1;
    swift_bridgeObjectRetain();
    uint64_t v39 = Set.description.getter();
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v42 = v39;
    a1 = v38;
    v94[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v41, (uint64_t *)&v88);
    a2 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v34, v35, "#OngoingCallConfirmIntentFlow offerType: %s", v36, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v43 = swift_bridgeObjectRetain();
  char v44 = specialized Collection<>.isAddOrNewCall.getter(v43);
  swift_bridgeObjectRelease();
  if (v44)
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v86;
    outlined init with copy of SignalProviding((uint64_t)v86, (uint64_t)&v88);
    type metadata accessor for OngoingCallCATs();
    OUTLINED_FUNCTION_17_34();
    uint64_t v46 = CATWrapper.__allocating_init(options:globals:)();
    type metadata accessor for OngoingCallCATsSimple();
    static CATOption.defaultMode.getter();
    uint64_t v47 = CATWrapperSimple.__allocating_init(options:globals:)();
    type metadata accessor for PhoneCallDisplayTextCATsSimple();
    static CATOption.defaultMode.getter();
    uint64_t v48 = CATWrapperSimple.__allocating_init(options:globals:)();
    type metadata accessor for ResponseFactory();
    swift_allocObject();
    uint64_t v49 = ResponseFactory.init()();
    type metadata accessor for AddOrCallPromptForValueStrategy();
    uint64_t v50 = swift_allocObject();
    specialized AddOrCallPromptForValueStrategy.init(sharedGlobals:ongoingCallCats:ongoingCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:)(&v88, v46, v47, v48, v49, v50);
    uint64_t v51 = v45[3];
    uint64_t v52 = v45[4];
    __swift_project_boxed_opaque_existential_1(v45, v51);
    uint64_t v53 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v52 + 16);
    swift_retain();
    v53(&v88, v51, v52);
    os_log_type_t v54 = v89;
    uint64_t v55 = v91;
    uint64_t v56 = __swift_project_boxed_opaque_existential_1(&v88, v89);
    v94[3] = v54;
    v94[4] = v55;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v94);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(boxed_opaque_existential_1, v56, v54);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForValueFlowAsync<OngoingCallConfirmIntentFlow.Action>);
    swift_allocObject();
    lazy protocol witness table accessor for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow(&lazy protocol witness table cache variable for type AddOrCallPromptForValueStrategy and conformance AddOrCallPromptForValueStrategy, (void (*)(uint64_t))type metadata accessor for AddOrCallPromptForValueStrategy);
    unint64_t v58 = PromptForValueFlowAsync.init<A>(strategy:outputPublisher:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v88);
    *(void *)&uint64_t v88 = v58;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type PromptForValueFlowAsync<OngoingCallConfirmIntentFlow.Action> and conformance PromptForValueFlowAsync<A>, &demangling cache variable for type metadata for PromptForValueFlowAsync<OngoingCallConfirmIntentFlow.Action>);
    swift_retain();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (*(void *)(v32 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    id v60 = Hasher._finalize()();
    uint64_t v61 = -1 << *(unsigned char *)(v32 + 32);
    uint64_t v62 = v60 & ~v61;
    if ((*(void *)(v32 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62))
    {
      uint64_t v63 = ~v61;
      while (!*(unsigned char *)(*(void *)(v32 + 48) + v62) || *(unsigned char *)(*(void *)(v32 + 48) + v62) == 2)
      {
        uint64_t v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v64) {
          goto LABEL_21;
        }
        uint64_t v62 = (v62 + 1) & v63;
        if (((*(void *)(v32 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      swift_unknownObjectRetain();
      uint64_t v74 = IntentResolutionRecord.intent.getter();
      outlined init with copy of SignalProviding((uint64_t)v86, (uint64_t)&v88);
      type metadata accessor for OngoingCallCATsSimple();
      OUTLINED_FUNCTION_17_34();
      os_log_type_t v75 = CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for NewCallConfirmationFlowProducer();
      uint64_t v76 = (void *)swift_allocObject();
      uint64_t v77 = specialized NewCallConfirmationFlowProducer.init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)(a1, a2, v74, &v88, 0, 0, 0, 0, v75, v76);
      uint64_t v78 = (*(uint64_t (**)(void *))(*v77 + 128))(v77);
      swift_release();
      *(void *)&uint64_t v88 = v78;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>, &demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      return swift_release();
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  long long v65 = (uint64_t)v83;
  *os_log_type_t v83 = 0;
  long long v66 = enum case for PromptResult.answered<A>(_:);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 104))(v65, v66, v67);
  OUTLINED_FUNCTION_36_11();
  __swift_storeEnumTagSinglePayload(v69, v70, v71, v67);
  outlined init with take of OngoingCallConfirmIntentFlow.State(v65, v84);
  OUTLINED_FUNCTION_0_38();
  uint64_t v72 = OUTLINED_FUNCTION_96();
  outlined assign with take of OngoingCallConfirmIntentFlow.State(v72, v73);
  swift_endAccess();
  return static ExecuteResponse.ongoing(requireInput:)();
}

uint64_t closure #1 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a2;
  uint64_t v46 = a1;
  uint64_t v2 = type metadata accessor for ConfirmationResponse();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  uint64_t v45 = v3;
  __chkstk_darwin(v2);
  unint64_t v41 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = (unsigned char *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
  __chkstk_darwin(v43);
  uint64_t v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v42 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v38[-v11];
  __chkstk_darwin(v10);
  uint64_t v14 = &v38[-v13];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<SimpleConfirmationResponseProvider>);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v21 = &v38[-v20];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  uint64_t v47 = *(void *)(v22 - 8);
  uint64_t v48 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = &v38[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v25 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16);
  v25(v21, v46, v15);
  int v26 = (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 88))(v21, v15);
  if (v26 != enum case for PromptResult.answered<A>(_:)) {
    goto LABEL_10;
  }
  LODWORD(v46) = v26;
  v25(v19, (uint64_t)v21, v15);
  (*(void (**)(unsigned char *, uint64_t))(v16 + 96))(v19, v15);
  SimpleConfirmationResponseProvider.confirmationResponse.getter();
  uint64_t v27 = type metadata accessor for SimpleConfirmationResponseProvider();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v27 - 8) + 8))(v19, v27);
  uint64_t v28 = v44;
  (*(void (**)(unsigned char *, void, uint64_t))(v45 + 104))(v12, enum case for ConfirmationResponse.confirmed(_:), v44);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v28);
  uint64_t v29 = (uint64_t)&v6[*((int *)v43 + 12)];
  outlined init with copy of ResponseMode?((uint64_t)v14, (uint64_t)v6, &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined init with copy of ResponseMode?((uint64_t)v12, v29, &demangling cache variable for type metadata for ConfirmationResponse?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v28) != 1)
  {
    unint64_t v40 = v12;
    uint64_t v43 = v14;
    uint64_t v31 = v42;
    outlined init with copy of ResponseMode?((uint64_t)v6, (uint64_t)v42, &demangling cache variable for type metadata for ConfirmationResponse?);
    if (__swift_getEnumTagSinglePayload(v29, 1, v28) != 1)
    {
      uint64_t v32 = v45;
      uint64_t v33 = v41;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v45 + 32))(v41, v29, v28);
      lazy protocol witness table accessor for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow(&lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse, (void (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
      int v39 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v34 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
      v34(v33, v28);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v40, &demangling cache variable for type metadata for ConfirmationResponse?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v43, &demangling cache variable for type metadata for ConfirmationResponse?);
      v34(v31, v28);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v6, &demangling cache variable for type metadata for ConfirmationResponse?);
      uint64_t v30 = v46;
      if (v39) {
        goto LABEL_9;
      }
LABEL_10:
      uint64_t v30 = enum case for PromptResult.cancelled<A>(_:);
      goto LABEL_11;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v40, &demangling cache variable for type metadata for ConfirmationResponse?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v43, &demangling cache variable for type metadata for ConfirmationResponse?);
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v31, v28);
LABEL_7:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v6, &demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
    goto LABEL_10;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v12, &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v14, &demangling cache variable for type metadata for ConfirmationResponse?);
  if (__swift_getEnumTagSinglePayload(v29, 1, v28) != 1) {
    goto LABEL_7;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v6, &demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v30 = v46;
LABEL_9:
  *uint64_t v24 = 0;
LABEL_11:
  uint64_t v35 = v47;
  uint64_t v36 = v48;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v47 + 104))(v24, v30, v48);
  (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v21, v15);
  OngoingCallConfirmIntentFlow.onPromptComplete(_:)((uint64_t)v24);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v35 + 8))(v24, v36);
}

uint64_t OngoingCallConfirmIntentFlow.onPromptComplete(_:)(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_5_63();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_46_0();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  OUTLINED_FUNCTION_36_11();
  __swift_storeEnumTagSinglePayload(v12, v13, v14, v10);
  outlined init with take of OngoingCallConfirmIntentFlow.State((uint64_t)v9, v6);
  uint64_t v15 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
  OUTLINED_FUNCTION_0_38();
  outlined assign with take of OngoingCallConfirmIntentFlow.State(v6, v15);
  return swift_endAccess();
}

uint64_t OngoingCallConfirmIntentFlow.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_rchRecord;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals);
  outlined destroy of OngoingCallConfirmIntentFlow.State(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state);
  return v0;
}

uint64_t OngoingCallConfirmIntentFlow.__deallocating_deinit()
{
  OngoingCallConfirmIntentFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance OngoingCallConfirmIntentFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance OngoingCallConfirmIntentFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t protocol witness for Flow.execute() in conformance OngoingCallConfirmIntentFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 168) + **(int **)(**(void **)v1 + 168));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance OngoingCallConfirmIntentFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

id @nonobjc INAddCallParticipantIntent.init(participants:)(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v2.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  id v3 = [v1 initWithParticipants:v2.super.isa];

  return v3;
}

uint64_t outlined assign with take of OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action;
  if (!lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action);
  }
  return result;
}

uint64_t base witness table accessor for Flow in OngoingCallConfirmIntentFlow()
{
  return lazy protocol witness table accessor for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow(&lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow, (void (*)(uint64_t))type metadata accessor for OngoingCallConfirmIntentFlow);
}

uint64_t sub_31515C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 112))();
}

uint64_t ObjC metadata update function for OngoingCallConfirmIntentFlow()
{
  return type metadata accessor for OngoingCallConfirmIntentFlow(0);
}

void type metadata completion function for OngoingCallConfirmIntentFlow()
{
  type metadata accessor for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for OngoingCallConfirmIntentFlow.State(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void type metadata accessor for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>()
{
  if (!lazy cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>)
  {
    type metadata accessor for CNContactStore(255, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
    type metadata accessor for CNContactStore(255, &lazy cache variable for type metadata for INStartCallIntentResponse);
    unint64_t v0 = type metadata accessor for IntentResolutionRecord();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for OngoingCallConfirmIntentFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3158C8);
}

uint64_t sub_3158C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2) {
    return EnumTagSinglePayload - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_315928);
}

uint64_t sub_315928(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);

  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t getEnumTag for OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);

  return __swift_getEnumTagSinglePayload(a1, 1, v2);
}

uint64_t destructiveInjectEnumTag for OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

void type metadata completion function for OngoingCallConfirmIntentFlow.State()
{
  type metadata accessor for PromptResult<OngoingCallConfirmIntentFlow.Action>();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

void type metadata accessor for PromptResult<OngoingCallConfirmIntentFlow.Action>()
{
  if (!lazy cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>)
  {
    unint64_t v0 = type metadata accessor for PromptResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for OngoingCallConfirmIntentFlow.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x315BB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OngoingCallConfirmIntentFlow.Action()
{
  return &type metadata for OngoingCallConfirmIntentFlow.Action;
}

uint64_t specialized AddOrCallPromptForValueStrategy.init(sharedGlobals:ongoingCallCats:ongoingCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 112) = type metadata accessor for ResponseFactory();
  *(void *)(a6 + 120) = &protocol witness table for ResponseFactory;
  *(void *)(a6 + 88) = a5;
  *(unsigned char *)(a6 + 16) = 2;
  outlined init with take of AppSelectionSignalComponent(a1, a6 + 24);
  *(void *)(a6 + 64) = a2;
  *(void *)(a6 + 72) = a3;
  *(void *)(a6 + 80) = a4;
  return a6;
}

void *specialized NewCallConfirmationFlowProducer.init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  a10[13] = &type metadata for LabelTemplatesProvider;
  a10[14] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v18 = (void *)swift_allocObject();
  a10[10] = v18;
  void v18[2] = a5;
  v18[3] = a6;
  v18[4] = a7;
  v18[5] = a8;
  a10[2] = a1;
  a10[3] = a2;
  a10[4] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a10 + 5));
  a10[15] = a9;
  return a10;
}

uint64_t partial apply for closure #1 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)(uint64_t a1)
{
  return closure #1 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)(a1, v1);
}

uint64_t lazy protocol witness table accessor for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_315D68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_315DA8()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t outlined destroy of OngoingCallErrorFlowFactory(uint64_t a1)
{
  return a1;
}

unint64_t lazy protocol witness table accessor for type TUHandle and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type TUHandle and conformance NSObject;
  if (!lazy protocol witness table cache variable for type TUHandle and conformance NSObject)
  {
    type metadata accessor for CNContactStore(255, &lazy cache variable for type metadata for TUHandle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_34()
{
  return static CATOption.defaultMode.getter();
}

uint64_t PhoneCallFeatureManager.__allocating_init(featureFlags:)(uint64_t a1)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_5_64();
  __chkstk_darwin(v2);
  unsigned int v4 = OUTLINED_FUNCTION_2_20(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_72();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t key path setter for PhoneCallFeatureManager.featureFlags : PhoneCallFeatureManager(uint64_t a1, void *a2)
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  outlined init with take of AppSelectionSignalComponent(v5, v3);
  return swift_endAccess();
}

uint64_t PhoneCallFeatureManager.init(featureFlags:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_5_64();
  __chkstk_darwin(v2);
  unsigned int v4 = OUTLINED_FUNCTION_2_20(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_72();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t PhoneCallFeatureManager.forceCallsToHandle.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v5);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  uint64_t v3 = v2(v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t PhoneCallFeatureManager.shouldEnableSiriPhoneInCall.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableSiriLaguna.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableFaceTimeUninstall.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableAnswerCallNotificationOnLockedScreen.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableQuickStopCallBell.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableCancelCallBell.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableSRRRefactor.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.useEntitySpansForBusinessCall.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableCompositionFlowForAllLocales.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableSmartUI.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t PhoneCallFeatureManager.shouldEnableProtectedApps.getter()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_86();
  v0();
  OUTLINED_FUNCTION_2_102(v4);
  uint64_t v1 = OUTLINED_FUNCTION_3_35();
  v2(v1);
  return OUTLINED_FUNCTION_4_83((uint64_t)v4);
}

uint64_t specialized PhoneCallFeatureManager.init(featureFlags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  outlined init with take of AppSelectionSignalComponent(&v9, a2 + 16);
  return a2;
}

uint64_t sub_316650()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *OUTLINED_FUNCTION_2_102(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_4_83(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v1 & 1;
}

uint64_t OUTLINED_FUNCTION_7_72()
{
  return specialized PhoneCallFeatureManager.init(featureFlags:)(v3, v0, v1, v2);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional __swiftcall AddCallParticipantCATPatternsIdentifiers.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATPatternsIdentifiers.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional)v3;
  }
}

unint64_t AddCallParticipantCATPatternsIdentifiers.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000028;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000027;
      break;
    case 2:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000045;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATPatternsIdentifiers(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATPatternsIdentifiers()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATPatternsIdentifiers(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATPatternsIdentifiers(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATPatternsIdentifiers@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional *a2@<X8>)
{
  result.int value = AddCallParticipantCATPatternsIdentifiers.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATPatternsIdentifiers@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AddCallParticipantCATPatternsIdentifiers.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AddCallParticipantIntentHandledResponseParameters.isFaceTimeFirstDevice.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

__n128 *AddCallParticipantIntentHandledResponseParameters.asKeyValuePairs()(unint64_t a1, unint64_t a2, char a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_26_20(v6, (__n128)xmmword_46A250);
  if (a1)
  {
    uint64_t v7 = type metadata accessor for PhoneCallInvite(0);
    unint64_t v8 = a1;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v7 = 0;
    v6[3].n128_u64[1] = 0;
    v6[4].n128_u64[0] = 0;
  }
  v6[3].n128_u64[0] = v8;
  v6[4].n128_u64[1] = v7;
  v6[5].n128_u64[0] = 0x656369766564;
  v6[5].n128_u64[1] = 0xE600000000000000;
  if (a2)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
    unint64_t v10 = a2;
  }
  else
  {
    unint64_t v10 = 0;
    uint64_t v9 = 0;
    v6[6].n128_u64[1] = 0;
    v6[7].n128_u64[0] = 0;
  }
  v6[6].n128_u64[0] = v10;
  v6[7].n128_u64[1] = v9;
  v6[8].n128_u64[0] = 0xD000000000000015;
  v6[8].n128_u64[1] = 0x80000000004964D0;
  v6[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[9].n128_u8[0] = a3 & 1;
  swift_retain();
  swift_retain();
  return v6;
}

double AddCallParticipantPromptForParticipantParameters.asKeyValuePairs()(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  *(void *)(v2 + 32) = 0xD000000000000015;
  *(void *)(v2 + 40) = 0x80000000004964F0;
  *(void *)(v2 + 72) = &type metadata for Bool;
  *(unsigned char *)(v2 + 48) = a1;
  return result;
}

uint64_t AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 48) = a3;
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 40) = a2;
  *(unsigned char *)(v4 + 33) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:));
}

uint64_t AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:)()
{
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 40);
  char v2 = *(unsigned char *)(v0 + 33);
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = v2;
  v1(v0 + 16);
  unint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  *(void *)(v0 + 64) = v3;
  unsigned __int8 v5 = *(unsigned char *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)swift_allocObject();
  *(void *)(v0 + 72) = v6;
  OUTLINED_FUNCTION_26_20(v6, (__n128)xmmword_46A250);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for PhoneCallInvite(0);
    unint64_t v8 = v3;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v7 = 0;
    v6[3].n128_u64[1] = 0;
    v6[4].n128_u64[0] = 0;
  }
  v6[3].n128_u64[0] = v8;
  v6[4].n128_u64[1] = v7;
  v6[5].n128_u64[0] = 0x656369766564;
  v6[5].n128_u64[1] = 0xE600000000000000;
  uint64_t v9 = 0;
  if (v4)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v6[6].n128_u64[1] = 0;
    v6[7].n128_u64[0] = 0;
  }
  *(void *)(v0 + 80) = v4;
  v6[6].n128_u64[0] = v4;
  v6[8].n128_u64[1] = 0x80000000004964D0;
  v6[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[9].n128_u8[0] = v5;
  uint64_t v13 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  v6[7].n128_u64[1] = v9;
  v6[8].n128_u64[0] = 0xD000000000000015;
  swift_retain();
  swift_retain();
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v10;
  *unint64_t v10 = v0;
  v10[1] = AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:);
  uint64_t v11 = OUTLINED_FUNCTION_11_6(0xD000000000000028);
  return v13(v11);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  char v2 = *(void *)(v0 + 104);
  return v1(v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 96) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    unint64_t v8 = AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:);
  }
  else
  {
    *(void *)(v5 + 104) = a1;
    unint64_t v8 = AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:);
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:)()
{
  char v1 = *(unsigned char *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 32) = 0xD000000000000015;
  *(void *)(v2 + 40) = 0x80000000004964F0;
  *(void *)(v2 + 72) = &type metadata for Bool;
  *(unsigned char *)(v2 + 48) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                       + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *unint64_t v3 = v0;
  v3[1] = AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:);
  uint64_t v4 = OUTLINED_FUNCTION_11_6(0xD000000000000027);
  return v6(v4);
}

uint64_t AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:), 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v8(a1);
  }
}

uint64_t AddCallParticipantCATPatternsExecutor.unsupportedNoActiveCall()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v3(0xD00000000000002ALL, 0x8000000000490970, _swiftEmptyArrayStorage);
}

uint64_t AddCallParticipantCATPatternsExecutor.unsupportedParticipantsMultipleContactsUnsupported()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v3(0xD000000000000045, 0x800000000048DEF0, _swiftEmptyArrayStorage);
}

uint64_t AddCallParticipantCATPatternsExecutor.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return AddCallParticipantCATPatternsExecutor.init(templateDir:options:globals:)(a1, a2);
}

uint64_t AddCallParticipantCATPatternsExecutor.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CATOption();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8 - 8);
  outlined init with copy of URL?(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  outlined destroy of URL?(a1);
  return v10;
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers);
  }
  return result;
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.intentHandledResponse(isFaceTimeFirstDevice:_:) in conformance AddCallParticipantCATPatternsExecutor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(**v3
                                                                      + class metadata base offset for AddCallParticipantCATPatternsExecutor)
                                                          + **(int **)(**v3
                                                                     + class metadata base offset for AddCallParticipantCATPatternsExecutor));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v10(a1, a2, a3);
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.promptForParticipant(isUnsupportedFollowup:) in conformance AddCallParticipantCATPatternsExecutor(uint64_t a1)
{
  uint64_t v4 = *(int **)(class metadata base offset for AddCallParticipantCATPatternsExecutor + **v1 + 8);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v7(a1);
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.unsupportedNoActiveCall() in conformance AddCallParticipantCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(class metadata base offset for AddCallParticipantCATPatternsExecutor + **v0 + 16);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v5();
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.unsupportedParticipantsMultipleContactsUnsupported() in conformance AddCallParticipantCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(class metadata base offset for AddCallParticipantCATPatternsExecutor + **v0 + 24);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v5();
}

unsigned char *storeEnumTagSinglePayload for AddCallParticipantCATPatternsIdentifiers(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3178A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for AddCallParticipantCATPatternsIdentifiers()
{
}

uint64_t initializeBufferWithCopyOfBuffer for AddCallParticipantIntentHandledResponseParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AddCallParticipantIntentHandledResponseParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AddCallParticipantIntentHandledResponseParameters(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddCallParticipantIntentHandledResponseParameters(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddCallParticipantIntentHandledResponseParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for AddCallParticipantIntentHandledResponseParameters()
{
}

uint64_t getEnumTagSinglePayload for AddCallParticipantPromptForParticipantParameters(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AddCallParticipantPromptForParticipantParameters(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x317BE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AddCallParticipantPromptForParticipantParameters()
{
}

uint64_t type metadata accessor for AddCallParticipantCATPatternsExecutor()
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantCATPatternsExecutor;
  if (!type metadata singleton initialization cache for AddCallParticipantCATPatternsExecutor) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantCATPatternsExecutor()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for AddCallParticipantCATPatternsExecutor()
{
  return type metadata accessor for AddCallParticipantCATPatternsExecutor();
}

uint64_t SearchCallHistoryHandleFlowStrategy.__allocating_init(sharedGlobals:searchCallHistoryCATsSimple:)()
{
  OUTLINED_FUNCTION_6_5();
  uint64_t v0 = swift_allocObject();
  SearchCallHistoryHandleFlowStrategy.init(sharedGlobals:searchCallHistoryCATsSimple:)();
  return v0;
}

uint64_t SearchCallHistoryFlow.__allocating_init(delegate:rchFlow:)()
{
  OUTLINED_FUNCTION_6_5();
  type metadata accessor for SearchCallHistoryFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_5_1();
  *uint64_t v1 = v0;
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = swift_retain();
  default argument 6 of SingleCallResultFlow.init(app:callRecord:intent:intentResponse:isIncomingCallFollowupPrompt:sharedGlobals:schGlobals:)(v8, v3);
  uint64_t v4 = OUTLINED_FUNCTION_6_23();
  uint64_t v6 = v5(v4);
  swift_release();
  return v6;
}

uint64_t _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    outlined destroy of UUID?(a1, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_52_10();
    OUTLINED_FUNCTION_11();
    v6();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t key path setter for SearchCallHistoryFlow.state : SearchCallHistoryFlow(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryFlow.State(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryFlow.State(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
  swift_beginAccess();
  outlined assign with take of SearchCallHistoryFlow.State((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t SearchCallHistoryFlow.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
  swift_beginAccess();
  return outlined init with copy of SearchCallHistoryFlow.State(v3, a1);
}

void SearchCallHistoryFlow.__allocating_init(delegate:input:app:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  type metadata accessor for SearchCallHistoryFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_53();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App))
              + 48);
  uint64_t v10 = type metadata accessor for Input();
  uint64_t v11 = *(void *)(v10 - 8);
  OUTLINED_FUNCTION_12();
  v12();
  *(void *)(v1 + v9) = v3;
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = swift_retain();
  default argument 6 of SingleCallResultFlow.init(app:callRecord:intent:intentResponse:isIncomingCallFollowupPrompt:sharedGlobals:schGlobals:)(v14, v13);
  (*(void (**)(uint64_t, uint64_t, void *))(v0 + 144))(v1, v7, v14);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v5, v10);
  OUTLINED_FUNCTION_26_1();
}

void SearchCallHistoryFlow.__allocating_init(intent:intentResponse:app:sharedGlobals:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  type metadata accessor for SearchCallHistoryFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_52();
  *uint64_t v1 = v10;
  v1[1] = v8;
  v1[2] = v6;
  swift_storeEnumTagMultiPayload();
  outlined init with copy of SignalProviding(v4, (uint64_t)v15);
  type metadata accessor for SearchCallHistoryRCHFlowDelegate();
  OUTLINED_FUNCTION_21_0();
  id v12 = v10;
  id v13 = v8;
  swift_retain();
  uint64_t v14 = SearchCallHistoryRCHFlowDelegate.init(sharedGlobals:)((uint64_t)v15);
  default argument 6 of SingleCallResultFlow.init(app:callRecord:intent:intentResponse:isIncomingCallFollowupPrompt:sharedGlobals:schGlobals:)(v15, v14);
  (*(void (**)(void *, uint64_t, void *))(v2 + 144))(v1, v14, v15);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryFlow.__allocating_init(state:delegate:searchCallHistorySharedGlobals:)(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = OUTLINED_FUNCTION_6_23();
  SearchCallHistoryFlow.init(state:delegate:searchCallHistorySharedGlobals:)(v5, v6, a3);
  return v4;
}

uint64_t SearchCallHistoryFlow.init(state:delegate:searchCallHistorySharedGlobals:)(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
  *uint64_t v7 = type metadata accessor for SearchCallHistoryFlow(0);
  v7[1] = (uint64_t)&outlined read-only object #0 of SearchCallHistoryFlow.init(state:delegate:searchCallHistorySharedGlobals:);
  void v7[2] = 0;
  v7[3] = 0;
  *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_delegate) = a2;
  outlined init with copy of SignalProviding(a2 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals);
  memcpy((void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_searchCallHistorySharedGlobals), a3, 0xC8uLL);
  outlined init with take of SearchCallHistoryFlow.State(a1, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state);
  return v3;
}

void SearchCallHistoryFlow.on(input:)()
{
  OUTLINED_FUNCTION_24_0();
  type metadata accessor for SearchCallHistoryFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4 - v3;
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v6 + 120))();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    dispatch thunk of AnyValueFlow.on(input:)();
    swift_release();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_22_7(v9))
    {
      uint64_t v10 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      uint64_t v16 = OUTLINED_FUNCTION_14_0();
      *uint64_t v10 = 136315138;
      uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
      uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
      uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
      uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
      uint64_t v17 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v12, v11, v14, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v17);
      OUTLINED_FUNCTION_7_22(v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_30();
      OUTLINED_FUNCTION_55_7(&dword_0, v8, v1, "%s: Flow is not in a state that will expect input.");
      OUTLINED_FUNCTION_65_8();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_2_30();
    }

    outlined destroy of SearchCallHistoryFlow.State(v5);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryFlow.execute(completion:)()
{
  OUTLINED_FUNCTION_6_5();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v6 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = 0;
  v7[3] = 0;
  void v7[4] = v2;
  void v7[5] = v0;
  v7[6] = v1;
  swift_retain();
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v3, (uint64_t)&async function pointer to partial apply for closure #1 in SearchCallHistoryFlow.execute(completion:), (uint64_t)v7);
  return swift_release();
}

uint64_t closure #1 in SearchCallHistoryFlow.execute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  v6[3] = a5;
  uint64_t v8 = type metadata accessor for ExecuteResponse();
  v6[4] = v8;
  v6[5] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[6] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a6 + 168) + **(int **)(*(void *)a6 + 168));
  uint64_t v10 = (void *)swift_task_alloc();
  v6[7] = v10;
  *uint64_t v10 = v6;
  v10[1] = closure #1 in SearchCallHistoryFlow.execute(completion:);
  return v12(v9);
}

uint64_t closure #1 in SearchCallHistoryFlow.execute(completion:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  (*(void (**)(void))(v0 + 16))(*(void *)(v0 + 48));
  uint64_t v1 = OUTLINED_FUNCTION_38();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

uint64_t SearchCallHistoryFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[34] = v2;
  v1[35] = v0;
  uint64_t v3 = type metadata accessor for Logger();
  v1[36] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[37] = v4;
  v1[38] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for Input();
  v1[39] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[40] = v6;
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SearchCallHistoryFlow.State(0);
  v1[44] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[45] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 400) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 376);
  uint64_t v2 = *(void **)(v0 + 368);
  swift_release();

  OUTLINED_FUNCTION_31_30();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

{
  void *v0;
  NSObject *v1;
  os_log_type_t v2;
  BOOL v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void);
  uint64_t v14[3];
  void *v15;
  uint64_t v16;

  uint64_t v15 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0[36], (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  uint64_t v2 = static os_log_type_t.debug.getter();
  uint64_t v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = v0[35];
  if (v3)
  {
    uint64_t v5 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    v14[0] = OUTLINED_FUNCTION_14_0();
    *uint64_t v5 = 136315138;
    uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
    uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
    v14[1] = 0;
    v14[2] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v6, v7, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[26] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    OUTLINED_FUNCTION_55_7(&dword_0, v1, v2, "%s needsDialog failed for RF");
    OUTLINED_FUNCTION_65_8();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v10 = (void *)v0[47];
  uint64_t v11 = (void *)v0[46];
  static ExecuteResponse.complete()();
  swift_errorRelease();
  swift_release();

  OUTLINED_FUNCTION_31_30();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v12();
}

void SearchCallHistoryFlow.execute()()
{
  char v107 = v0;
  uint64_t v1 = (void *)(v0[35] + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  __swift_project_boxed_opaque_existential_1(v0 + 18, v0[21]);
  OUTLINED_FUNCTION_80_5();
  char v4 = DeviceState.isAuthenticatedForPhone.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 18));
  if (v4)
  {
    uint64_t v97 = v0 + 2;
    uint64_t v100 = (long long *)(v0 + 8);
    uint64_t v5 = v0[44];
    OUTLINED_FUNCTION_22();
    (*(void (**)(void))(v6 + 120))();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_release();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_25_32(v0[36], (uint64_t)static Logger.siriPhone);
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.debug.getter();
        BOOL v29 = OUTLINED_FUNCTION_14_2(v28);
        uint64_t v30 = v0[35];
        if (v29)
        {
          os_log_type_t v93 = v5;
          uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_5_22();
          uint64_t v92 = OUTLINED_FUNCTION_14_0();
          *(_DWORD *)uint64_t v31 = 136315138;
          uint64_t v104 = v92;
          uint64_t v105 = 0;
          buf = v31;
          uint64_t v33 = *(void *)(v30 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
          uint64_t v32 = *(void *)(v30 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
          uint64_t v35 = *(void *)(v30 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
          uint64_t v34 = *(void *)(v30 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
          unint64_t v106 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v33, v32, v35, v34);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v0[25] = OUTLINED_FUNCTION_30_27(0);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_9_5();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v27, v93, "%s state:checkUnsupportedParameters, offer confirmation flow", buf, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          OUTLINED_FUNCTION_9_5();
        }
        uint64_t v79 = v1[3];
        uint64_t v80 = v1[4];
        __swift_project_boxed_opaque_existential_1(v1, v79);
        uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v80 + 16);
        swift_retain();
        v81(v79, v80);
        uint64_t v82 = v0[5];
        uint64_t v83 = v0[7];
        uint64_t v84 = __swift_project_boxed_opaque_existential_1(v97, v82);
        v0[16] = v82;
        v0[17] = v83;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 13);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(boxed_opaque_existential_1, v84, v82);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
        OUTLINED_FUNCTION_21_0();
        type metadata accessor for UnsupportedSearchParametersFlowStrategy();
        lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy(&lazy protocol witness table cache variable for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy, 255, (void (*)(uint64_t))type metadata accessor for UnsupportedSearchParametersFlowStrategy);
        uint64_t v86 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
        v0[24] = v86;
        lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>, &demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
        swift_retain();
        static ExecuteResponse.ongoing<A>(next:childCompletion:)();
        swift_release();
        swift_release();
        goto LABEL_34;
      case 2u:
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_25_32(v0[36], (uint64_t)static Logger.siriPhone);
        uint64_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.debug.getter();
        BOOL v38 = os_log_type_enabled(v36, v37);
        uint64_t v39 = v0[35];
        if (v38)
        {
          os_log_type_t v101 = v37;
          unint64_t v40 = (uint8_t *)OUTLINED_FUNCTION_5_22();
          uint64_t v99 = OUTLINED_FUNCTION_14_0();
          *(_DWORD *)unint64_t v40 = 136315138;
          uint64_t v104 = v99;
          uint64_t v105 = 0;
          uint64_t v95 = v40;
          uint64_t v41 = *(void *)(v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
          uint64_t v42 = *(void *)(v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
          uint64_t v43 = *(void *)(v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
          uint64_t v44 = *(void *)(v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
          unint64_t v106 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v41, v42, v43, v44);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v0[23] = OUTLINED_FUNCTION_30_27(0);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_39_10();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v36, v101, "%s state: needsExecution", v95, 0xCu);
          OUTLINED_FUNCTION_65_8();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          OUTLINED_FUNCTION_39_10();
        }
        swift_retain();
        static ExecuteResponse.ongoing<A>(next:childCompletion:)();
        swift_release();
LABEL_34:
        swift_release();
        break;
      case 3u:
        uint64_t v45 = (void *)v0[45];
        v0[46] = *v45;
        v0[47] = v45[1];
        v0[48] = v45[2];
        uint64_t v46 = (void *)swift_task_alloc();
        v0[49] = v46;
        *uint64_t v46 = v0;
        v46[1] = SearchCallHistoryFlow.execute();
        OUTLINED_FUNCTION_12_45();
        SearchCallHistoryFlow.provideDialogForRF(intent:intentResponse:app:)();
        return;
      case 4u:
        uint64_t v48 = *(void *)v0[45];
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        os_log_type_t v49 = __swift_project_value_buffer(v0[36], (uint64_t)static Logger.siriPhone);
        swift_retain();
        swift_errorRetain();
        swift_retain();
        swift_errorRetain();
        uint64_t v50 = Logger.logObject.getter();
        os_log_type_t v51 = static os_log_type_t.error.getter();
        BOOL v52 = OUTLINED_FUNCTION_14_2(v51);
        uint64_t v53 = v0[35];
        if (v52)
        {
          uint64_t v54 = OUTLINED_FUNCTION_11_7();
          uint64_t v104 = OUTLINED_FUNCTION_10_0();
          *(_DWORD *)uint64_t v54 = 136315394;
          uint64_t v55 = *(void *)(v53 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
          uint64_t v96 = *(uint8_t **)(v53 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
          os_log_type_t v102 = v49;
          uint64_t v56 = *(void *)(v53 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
          uint64_t v57 = *(void *)(v53 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
          uint64_t v105 = 0;
          unint64_t v106 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)v96, v55, v56, v57);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v0[30] = OUTLINED_FUNCTION_30_27(0);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_4_0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v54 + 12) = 2080;
          v0[31] = v48;
          swift_errorRetain();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
          uint64_t v58 = String.init<A>(describing:)();
          v0[32] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, &v104);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl(&dword_0, v50, v102, "%s SearchCallHistoryIntent RCH Failed with error: %s", (uint8_t *)v54, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
          OUTLINED_FUNCTION_4_0();
          swift_errorRelease();
          swift_errorRelease();
        }
        static ExecuteResponse.complete()();
        swift_errorRelease();
        break;
      case 5u:
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v60 = v0[37];
        uint64_t v61 = v0[38];
        uint64_t v63 = v0[35];
        uint64_t v62 = v0[36];
        uint64_t v64 = __swift_project_value_buffer(v62, (uint64_t)static Logger.siriPhone);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v61, v64, v62);
        uint64_t v105 = 0;
        unint64_t v106 = 0xE000000000000000;
        _StringGuts.grow(_:)(78);
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(*(void *)(v63 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix), *(void *)(v63 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8), *(void *)(v63 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16), *(void *)(v63 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24));
        v65._object = (void *)0x800000000049A790;
        v65._uint64_t countAndFlagsBits = 0xD00000000000004CLL;
        String.append(_:)(v65);
        swift_bridgeObjectRetain_n();
        long long v66 = Logger.logObject.getter();
        os_log_type_t v67 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v66, v67))
        {
          uint64_t v68 = (_DWORD *)OUTLINED_FUNCTION_47();
          uint64_t v105 = OUTLINED_FUNCTION_14_0();
          _DWORD *v68 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v69 = OUTLINED_FUNCTION_38();
          v0[33] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          OUTLINED_FUNCTION_24_5(&dword_0, v66, v72, "%s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        OUTLINED_FUNCTION_38();
        static SiriKitLifecycle._logCrashToEventBus(_:)();
        _assertionFailure(_:_:file:line:flags:)();
        OUTLINED_FUNCTION_12_45();
        return;
      case 6u:
        static ExecuteResponse.complete()();
        break;
      default:
        uint64_t v7 = v0[45];
        uint64_t v8 = v0[43];
        uint64_t v9 = v0[39];
        uint64_t v10 = v0[40];
        uint64_t v103 = *(void *)(v7
                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App))
                                  + 48));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v7, v9);
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v12 = v0[42];
        uint64_t v11 = v0[43];
        uint64_t v13 = v0[39];
        uint64_t v14 = v0[40];
        __swift_project_value_buffer(v0[36], (uint64_t)static Logger.siriPhone);
        uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
        v98(v12, v11, v13);
        swift_retain_n();
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.debug.getter();
        BOOL v17 = os_log_type_enabled(v15, v16);
        uint64_t v18 = v0[40];
        uint64_t v19 = v0[35];
        if (v17)
        {
          uint64_t v20 = OUTLINED_FUNCTION_11_7();
          uint64_t v104 = OUTLINED_FUNCTION_10_0();
          uint64_t v105 = 0;
          *(_DWORD *)uint64_t v20 = 136315394;
          uint64_t v89 = *(void *)(v19 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
          os_log_type_t type = v16;
          uint64_t v21 = *(void *)(v19 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
          uint64_t v22 = *(void *)(v19 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
          uint64_t v23 = *(void *)(v19 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
          unint64_t v106 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v89, v21, v22, v23);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v0[28] = OUTLINED_FUNCTION_30_27(v105);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_9_5();
          swift_bridgeObjectRelease();
          *(_WORD *)(v20 + 12) = 2080;
          lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, 255, (void (*)(uint64_t))&type metadata accessor for Input);
          uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
          v0[29] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v104);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v94 = *(uint8_t **)(v18 + 8);
          OUTLINED_FUNCTION_36_5();
          v26();
          _os_log_impl(&dword_0, v15, type, "%s Converting input: %s to INSearchCallHistoryIntent.", (uint8_t *)v20, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
          OUTLINED_FUNCTION_9_5();
          uint64_t v94 = *(uint8_t **)(v18 + 8);
          OUTLINED_FUNCTION_36_5();
          v73();
        }
        uint64_t v74 = v0[43];
        uint64_t v75 = v0[41];
        uint64_t v76 = v0[39];
        uint64_t v77 = v0[35];
        v98(v75, v74, v76);
        outlined init with copy of SignalProviding((uint64_t)v1, (uint64_t)v100);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentConversionFlow<INSearchCallHistoryIntent>);
        OUTLINED_FUNCTION_21_0();
        v0[27] = specialized IntentConversionFlow.init(input:app:sharedGlobals:)(v75, v103, v100);
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = partial apply for implicit closure #6 in implicit closure #5 in SearchCallHistoryFlow.execute();
        *(void *)(v78 + 24) = v77;
        lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type IntentConversionFlow<INSearchCallHistoryIntent> and conformance IntentConversionFlow<A>, &demangling cache variable for type metadata for IntentConversionFlow<INSearchCallHistoryIntent>);
        swift_retain();
        swift_retain();
        static ExecuteResponse.ongoing<A>(next:childCompletion:)();
        swift_release();
        swift_release();
        swift_release();
        ((void (*)(uint64_t, uint64_t))v94)(v74, v76);
        break;
    }
  }
  else
  {
    SearchCallHistoryFlow.pushUnlockFlow()();
  }
  OUTLINED_FUNCTION_31_30();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_12_45();
  __asm { BRAA            X1, X16 }
}

void SearchCallHistoryFlow.processIntentConversionResult(exitValue:)()
{
  OUTLINED_FUNCTION_24_0();
  id v145 = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_3_1();
  uint64_t v142 = v4;
  uint64_t v5 = type metadata accessor for CATOption();
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v141 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v146 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for SearchCallHistoryFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_46_0();
  uint64_t v18 = v16 - v17;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v147 = (void *)((char *)v132 - v21);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v132 - v22;
  uint64_t v24 = type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_46_0();
  uint64_t v30 = v28 - v29;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v132 - v32;
  OUTLINED_FUNCTION_22();
  uint64_t v35 = *(void (**)(void))(v34 + 120);
  uint64_t v149 = v0;
  uint64_t v143 = v34 + 120;
  uint64_t v144 = v35;
  v35();
  uint64_t v148 = v14;
  if (swift_getEnumCaseMultiPayload())
  {
    outlined destroy of SearchCallHistoryFlow.State((uint64_t)v23);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
    uint64_t v37 = v149;
    swift_retain_n();
    BOOL v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    int v40 = v39;
    BOOL v41 = os_log_type_enabled(v38, v39);
    uint64_t v42 = v147;
    if (v41)
    {
      uint64_t v43 = OUTLINED_FUNCTION_11_7();
      uint64_t v146 = OUTLINED_FUNCTION_10_0();
      v153[0] = v146;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v142 = v43 + 4;
      uint64_t v44 = *(void *)(v37 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
      uint64_t v45 = *(void *)(v37 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
      LODWORD(v145) = v40;
      uint64_t v47 = *(void *)(v37 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
      uint64_t v46 = *(void *)(v37 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
      OUTLINED_FUNCTION_91_10();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v44, v45, v47, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v150[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v150[0], v150[1], v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v48 = OUTLINED_FUNCTION_42_23();
      *(_WORD *)(v43 + 12) = 2080;
      ((void (*)(uint64_t))v144)(v48);
      uint64_t v49 = String.init<A>(describing:)();
      v150[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_42_23();
      _os_log_impl(&dword_0, v38, (os_log_type_t)v145, "%s Unexpected state, stopping: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    swift_storeEnumTagMultiPayload();
    uint64_t v69 = v37 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
    OUTLINED_FUNCTION_7_7();
    uint64_t v70 = (uint64_t)v42;
  }
  else
  {
    uint64_t v140 = v13;
    uint64_t v143 = v8;
    uint64_t v138 = v18;
    os_log_type_t v51 = *(void (**)(void))&v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App))
                                        + 48)];
    uint64_t v52 = OUTLINED_FUNCTION_6_23();
    v53(v52);
    uint64_t v54 = v24;
    uint64_t v144 = v51;
    if (v145)
    {
      uint64_t v137 = v26;
      uint64_t v55 = one-time initialization token for siriPhone;
      id v136 = v145;
      uint64_t v56 = v149;
      if (v55 != -1) {
        swift_once();
      }
      id v145 = v33;
      uint64_t v139 = v24;
      uint64_t v57 = type metadata accessor for Logger();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      uint64_t v133 = (uint8_t *)v58;
      unint64_t v59 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.debug.getter();
      int v61 = v60;
      if (os_log_type_enabled(v59, v60))
      {
        LODWORD(v135) = v61;
        uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_5_22();
        uint64_t v63 = OUTLINED_FUNCTION_14_0();
        os_log_t v134 = v63;
        *(_DWORD *)uint64_t v62 = 136315138;
        v153[0] = (uint64_t)v63;
        v132[1] = v62 + 4;
        uint64_t v65 = *(void *)(v56 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
        uint64_t v64 = *(void *)(v56 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
        uint64_t v67 = *(void *)(v56 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
        uint64_t v66 = *(void *)(v56 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
        OUTLINED_FUNCTION_91_10();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v65, v64, v67, v66);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v68 = OUTLINED_FUNCTION_30_27(v150[0]);
        OUTLINED_FUNCTION_6_40(v68);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_0, v59, (os_log_type_t)v135, "%s adding INSearchCallHistoryIntent which only generates dialogs using Response Framework", v62, 0xCu);
        OUTLINED_FUNCTION_41_3();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_release_n();
      }

      os_log_t v134 = *(os_log_t *)(v56 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_delegate);
      uint64_t v92 = *(uint64_t *)((char *)&v134[3].isa + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals);
      uint64_t v93 = *(uint64_t *)((char *)&v134[4].isa + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals);
      __swift_project_boxed_opaque_existential_1((Class *)((char *)&v134->isa + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals), v92);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v93 + 104))(v150, v92, v93);
      uint64_t v94 = v152;
      __swift_project_boxed_opaque_existential_1(v150, v151);
      uint64_t v95 = *(void (**)(uint64_t))(v94 + 56);
      uint64_t v141 = type metadata accessor for SearchCallHistoryRCHFlowDelegate();
      uint64_t v135 = lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy(&lazy protocol witness table cache variable for type SearchCallHistoryRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>, 255, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryRCHFlowDelegate);
      uint64_t v96 = OUTLINED_FUNCTION_36_0();
      v95(v96);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
      uint64_t v97 = (void *)(v149 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals);
      outlined init with copy of SignalProviding(v149 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals, (uint64_t)v150);
      type metadata accessor for SearchCallHistoryCATsSimple();
      static CATOption.defaultMode.getter();
      CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for SearchCallHistoryHandleFlowStrategy();
      uint64_t v98 = swift_allocObject();
      SearchCallHistoryHandleFlowStrategy.init(sharedGlobals:searchCallHistoryCATsSimple:)();
      v150[0] = v98;
      lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy(&lazy protocol witness table cache variable for type SearchCallHistoryHandleFlowStrategy and conformance SearchCallHistoryHandleFlowStrategy, v99, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryHandleFlowStrategy);
      static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)();
      uint64_t v100 = v143;
      RCHChildFlowProducers.handleIntentFlowCompletion.setter();
      __swift_project_boxed_opaque_existential_1(v97, v97[3]);
      uint64_t v101 = OUTLINED_FUNCTION_67_10();
      v102(v101);
      uint64_t v103 = v152;
      __swift_project_boxed_opaque_existential_1(v150, v151);
      uint64_t v104 = v142;
      OUTLINED_FUNCTION_12();
      v105();
      __swift_storeEnumTagSinglePayload(v104, 0, 1, v100);
      id v106 = v136;
      uint64_t v107 = (*(uint64_t (**)(os_log_t, void (*)(void)))(v103 + 40))(v134, v144);
      outlined destroy of UUID?(v104, &demangling cache variable for type metadata for RCHChildFlowProducers<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>?);
      swift_retain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
      SearchCallHistoryFlow.getUnsupportedSearchParametersFlowStrategy(app:input:intent:)();
      if (v108)
      {
        uint64_t v141 = v98;
        uint64_t v142 = v108;
        uint64_t v135 = v107;
        swift_retain_n();
        char v109 = Logger.logObject.getter();
        os_log_type_t v110 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v109, v110))
        {
          os_log_t v134 = v109;
          uint64_t v111 = (uint8_t *)OUTLINED_FUNCTION_5_22();
          uint64_t v112 = OUTLINED_FUNCTION_14_0();
          *(_DWORD *)uint64_t v111 = 136315138;
          v153[0] = v112;
          uint64_t v133 = v111 + 4;
          uint64_t v114 = *(void *)(v149 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
          uint64_t v113 = *(void *)(v149 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
          uint64_t v116 = *(void *)(v149 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
          uint64_t v115 = *(void *)(v149 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
          OUTLINED_FUNCTION_91_10();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v114, v113, v116, v115);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v117 = OUTLINED_FUNCTION_30_27(v150[0]);
          OUTLINED_FUNCTION_6_40(v117);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_4_0();
          os_log_t v118 = v134;
          _os_log_impl(&dword_0, v134, v110, "%s unsupported search parameters are found, set state as checkUnsupportedParameters", v111, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
          uint64_t v119 = v135;
          swift_release();
          swift_release();

          swift_release();
        }
        else
        {
          uint64_t v119 = v135;
          swift_release();
          swift_release();

          swift_release();
          swift_release_n();
        }
        OUTLINED_FUNCTION_11();
        v126();
        OUTLINED_FUNCTION_11();
        v127();
        uint64_t v128 = v147;
        uint64_t v125 = v138;
        uint64_t v129 = v142;
        *uint64_t v147 = v119;
        v128[1] = v129;
        swift_storeEnumTagMultiPayload();
        uint64_t v124 = (uint64_t)v128;
      }
      else
      {
        swift_release();
        swift_release();

        swift_release();
        uint64_t v120 = OUTLINED_FUNCTION_87_6();
        v121(v120);
        OUTLINED_FUNCTION_11();
        v122();
        uint64_t v123 = v147;
        *uint64_t v147 = v107;
        swift_storeEnumTagMultiPayload();
        uint64_t v124 = (uint64_t)v123;
        uint64_t v125 = v138;
      }
      outlined init with take of SearchCallHistoryFlow.State(v124, v125);
      uint64_t v69 = v149 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
      OUTLINED_FUNCTION_7_7();
      uint64_t v70 = v125;
    }
    else
    {
      uint64_t v71 = v149;
      uint64_t v72 = v147;
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v73 = type metadata accessor for Logger();
      __swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
      uint64_t v74 = v30;
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_12();
      v75();
      swift_retain_n();
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      int v78 = v77;
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v79 = OUTLINED_FUNCTION_11_7();
        uint64_t v142 = v74;
        uint64_t v80 = v79;
        uint64_t v146 = OUTLINED_FUNCTION_10_0();
        v153[0] = v146;
        *(_DWORD *)uint64_t v80 = 136315394;
        uint64_t v141 = v80 + 4;
        id v145 = v33;
        uint64_t v81 = *(void *)(v71 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
        uint64_t v82 = *(void *)(v71 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
        uint64_t v137 = v26;
        LODWORD(v143) = v78;
        uint64_t v83 = v72;
        uint64_t v139 = v54;
        uint64_t v85 = *(void *)(v71 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
        uint64_t v84 = *(void *)(v71 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
        OUTLINED_FUNCTION_91_10();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v86 = v85;
        uint64_t v72 = v83;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v81, v82, v86, v84);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v150[0] = OUTLINED_FUNCTION_30_27(v150[0]);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_9_5();
        *(_WORD *)(v80 + 12) = 2080;
        lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, 255, (void (*)(uint64_t))&type metadata accessor for Input);
        uint64_t v87 = v142;
        uint64_t v88 = v139;
        uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
        v150[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v89, v90, v153);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        long long v91 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
        v91(v87, v88);
        _os_log_impl(&dword_0, v76, (os_log_type_t)v143, "%s Could not convert Input: %s to Intent, stopping", (uint8_t *)v80, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
        swift_release();

        v91((uint64_t)v145, v88);
      }
      else
      {
        swift_release();

        uint64_t v130 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v130(v74, v54);
        OUTLINED_FUNCTION_9_5();
        uint64_t v131 = OUTLINED_FUNCTION_6_23();
        ((void (*)(uint64_t))v130)(v131);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = v71 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
      OUTLINED_FUNCTION_7_7();
      uint64_t v70 = (uint64_t)v72;
    }
  }
  outlined assign with take of SearchCallHistoryFlow.State(v70, v69);
  swift_endAccess();
  OUTLINED_FUNCTION_26_1();
}

void SearchCallHistoryFlow.onCompleteProcessUnsupportedParameter(_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v117 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  uint64_t v113 = type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v110 = v6;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_46_0();
  uint64_t v111 = (char *)(v8 - v9);
  __chkstk_darwin(v10);
  uint64_t v112 = (char *)v107 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<SimpleConfirmationResponseProvider>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_52();
  type metadata accessor for SimpleConfirmationResponseProvider();
  OUTLINED_FUNCTION_0_0();
  uint64_t v114 = v17;
  uint64_t v115 = v16;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_3_1();
  uint64_t v116 = v18;
  uint64_t v19 = type metadata accessor for SearchCallHistoryFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_46_0();
  uint64_t v23 = v21 - v22;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v119 = (char *)v107 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (void *)((char *)v107 - v27);
  OUTLINED_FUNCTION_22();
  uint64_t v30 = *(void (**)(void))(v29 + 120);
  uint64_t v120 = v0;
  v30();
  uint64_t v118 = v19;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    outlined destroy of SearchCallHistoryFlow.State((uint64_t)v28);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    uint64_t v39 = v120;
    swift_retain_n();
    int v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = OUTLINED_FUNCTION_11_7();
      uint64_t v117 = OUTLINED_FUNCTION_10_0();
      uint64_t v121 = v117;
      uint64_t v122 = 0;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v116 = (_DWORD *)(v42 + 4);
      uint64_t v43 = v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix;
      uint64_t v44 = *(void *)(v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
      uint64_t v45 = *(void *)(v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
      uint64_t v46 = *(void *)(v43 + 16);
      uint64_t v47 = *(void *)(v43 + 24);
      OUTLINED_FUNCTION_90_9();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v44, v45, v46, v47);
      swift_bridgeObjectRelease();
      uint64_t v39 = v120;
      swift_bridgeObjectRelease();
      uint64_t v122 = OUTLINED_FUNCTION_46_18();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v48 = OUTLINED_FUNCTION_39_10();
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v49 = (uint64_t *)v119;
      ((void (*)(uint64_t))v30)(v48);
      uint64_t v50 = String.init<A>(describing:)();
      uint64_t v122 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_10();
      _os_log_impl(&dword_0, v40, v41, "%s Unexpected state, stopping: %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();

      uint64_t v49 = (uint64_t *)v119;
    }
    OUTLINED_FUNCTION_87_6();
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = v39 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
    goto LABEL_16;
  }
  uint64_t v31 = *v28;
  swift_release();
  OUTLINED_FUNCTION_12();
  v32();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v1, v12) != enum case for PromptResult.answered<A>(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v12);
    goto LABEL_10;
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 96))(v1, v12);
  uint64_t v33 = v114;
  uint64_t v34 = OUTLINED_FUNCTION_80_5();
  v35(v34);
  SimpleConfirmationResponseProvider.confirmationResponse.getter();
  uint64_t v36 = v113;
  if (__swift_getEnumTagSinglePayload(v2, 1, v113) == 1)
  {
    OUTLINED_FUNCTION_52_10();
    OUTLINED_FUNCTION_36_5();
    v37();
    outlined destroy of UUID?(v2, &demangling cache variable for type metadata for ConfirmationResponse?);
LABEL_10:
    uint64_t v52 = v120;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    __swift_project_value_buffer(v53, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_22_7(v55))
    {
      uint64_t v117 = v31;
      uint64_t v56 = (_DWORD *)OUTLINED_FUNCTION_47();
      uint64_t v57 = OUTLINED_FUNCTION_14_0();
      _DWORD *v56 = 136315138;
      uint64_t v121 = v57;
      uint64_t v122 = 0;
      uint64_t v116 = v56 + 1;
      uint64_t v58 = v52 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix;
      uint64_t v59 = *(void *)(v52 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
      uint64_t v60 = *(void *)(v52 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
      uint64_t v62 = *(void *)(v52 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
      uint64_t v61 = *(void *)(v58 + 24);
      OUTLINED_FUNCTION_90_9();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v59, v60, v62, v61);
      uint64_t v52 = v120;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v122, v123, &v121);
      OUTLINED_FUNCTION_21_12(v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_10();
      OUTLINED_FUNCTION_24_5(&dword_0, v54, v64, "%s Did not receive .answered from child confirmation flow");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
      swift_release();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_39_10();
    }

    uint64_t v67 = v119;
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = v52 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
    OUTLINED_FUNCTION_7_7();
    uint64_t v66 = (uint64_t)v67;
    goto LABEL_19;
  }
  uint64_t v68 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 32))(v112, v2, v36);
  uint64_t v69 = (uint64_t)v111;
  OUTLINED_FUNCTION_12();
  v70();
  int v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 88))(v69, v36);
  uint64_t v49 = (uint64_t *)v119;
  uint64_t v72 = v120;
  if (v71 == enum case for ConfirmationResponse.confirmed(_:))
  {
    uint64_t v73 = OUTLINED_FUNCTION_80_5();
    v74(v73);
    OUTLINED_FUNCTION_36_5();
    v75();
    *uint64_t v49 = v31;
    swift_storeEnumTagMultiPayload();
    outlined init with take of SearchCallHistoryFlow.State((uint64_t)v49, v23);
    uint64_t v65 = v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
    OUTLINED_FUNCTION_7_7();
    uint64_t v66 = v23;
    goto LABEL_19;
  }
  if (v71 == enum case for ConfirmationResponse.rejected(_:))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v76 = type metadata accessor for Logger();
    __swift_project_value_buffer(v76, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    os_log_type_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_22_7(v78))
    {
      uint64_t v117 = v31;
      uint64_t v79 = OUTLINED_FUNCTION_47();
      uint64_t v111 = (char *)OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_70_7((uint64_t)v111, 4.8149e-34);
      uint64_t v108 = v80;
      uint64_t v109 = v79;
      uint64_t v82 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
      uint64_t v81 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
      uint64_t v83 = v68;
      uint64_t v85 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
      uint64_t v84 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
      OUTLINED_FUNCTION_90_9();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v86 = v82;
      uint64_t v49 = (uint64_t *)v119;
      uint64_t v72 = v120;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v86, v81, v85, v84);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v87 = OUTLINED_FUNCTION_46_18();
      OUTLINED_FUNCTION_21_12(v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_3();
      OUTLINED_FUNCTION_55_7(&dword_0, v77, (os_log_type_t)v69, "%s user want to cancel the search");
      OUTLINED_FUNCTION_65_8();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
      swift_release();

      (*(void (**)(char *, uint64_t))(v83 + 8))(v112, v113);
      OUTLINED_FUNCTION_11();
      v88();
    }
    else
    {
      swift_release();

      OUTLINED_FUNCTION_14_3();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v112, v36);
      (*(void (**)(_DWORD *, uint64_t))(v33 + 8))(v116, v115);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
LABEL_16:
    OUTLINED_FUNCTION_7_7();
    uint64_t v66 = (uint64_t)v49;
LABEL_19:
    outlined assign with take of SearchCallHistoryFlow.State(v66, v65);
    swift_endAccess();
    goto LABEL_20;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v89 = type metadata accessor for Logger();
  __swift_project_value_buffer(v89, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  unint64_t v90 = Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.error.getter();
  int v92 = v91;
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v117 = v31;
    uint64_t v93 = OUTLINED_FUNCTION_47();
    LODWORD(v109) = v92;
    uint64_t v94 = v93;
    uint64_t v108 = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_70_7(v108, 4.8149e-34);
    v107[0] = v95;
    v107[1] = v94;
    uint64_t v96 = v68;
    uint64_t v98 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
    uint64_t v97 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
    uint64_t v99 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
    uint64_t v100 = *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
    OUTLINED_FUNCTION_90_9();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v101 = v99;
    uint64_t v36 = v113;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v98, v97, v101, v100);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v102 = OUTLINED_FUNCTION_46_18();
    OUTLINED_FUNCTION_21_12(v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_55_7(&dword_0, v90, (os_log_type_t)v109, "%s Received an unknown ConfirmationResponse");
    OUTLINED_FUNCTION_65_8();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
    swift_release();

    uint64_t v103 = *(void (**)(char *, uint64_t))(v96 + 8);
  }
  else
  {
    swift_release();

    OUTLINED_FUNCTION_14_3();
    uint64_t v103 = *(void (**)(char *, uint64_t))(v68 + 8);
  }
  v103(v112, v36);
  OUTLINED_FUNCTION_11();
  v104();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_7_7();
  uint64_t v105 = OUTLINED_FUNCTION_87_6();
  outlined assign with take of SearchCallHistoryFlow.State(v105, v106);
  swift_endAccess();
  v103(v111, v36);
LABEL_20:
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryFlow.pushUnlockFlow()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_22_7(v3))
  {
    uint64_t v4 = (_DWORD *)OUTLINED_FUNCTION_47();
    uint64_t v15 = OUTLINED_FUNCTION_14_0();
    *uint64_t v4 = 136315138;
    uint64_t v16 = v15;
    v17[0] = 0;
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
    v17[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = OUTLINED_FUNCTION_87_6();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v7, v8, v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_30();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_5(&dword_0, v2, v9, "%s Device is locked. Prompting user to unlock before continuing.");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_2_30();
  }
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals), *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals + 24));
  uint64_t v10 = OUTLINED_FUNCTION_38();
  v11(v10);
  uint64_t v12 = v18;
  uint64_t v13 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  SiriKitFlowFactoryProtocol.makeAuthenticationGuardFlow()(v12, v13);
  static ExecuteResponse.ongoing<A>(next:)();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

void SearchCallHistoryFlow.onChildCompletion(flowResult:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v44 = v3;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6 - v5;
  type metadata accessor for SearchCallHistoryFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v43 - v13);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_4();
  uint64_t v21 = (uint64_t *)(v20 - v19);
  OUTLINED_FUNCTION_12();
  v22();
  int v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 88))(v21, v15);
  if (v23 == enum case for RCHFlowResult.complete<A, B>(_:))
  {
    uint64_t v24 = OUTLINED_FUNCTION_48_19();
    v25(v24);
    uint64_t v26 = *v21;
    uint64_t v27 = (void *)v21[1];
    uint64_t v28 = (void *)v21[2];
    if ([v28 code] == (char *)&dword_4 + 3)
    {
      *uint64_t v14 = (uint64_t)v27;
      v14[1] = (uint64_t)v28;
      v14[2] = v26;
      OUTLINED_FUNCTION_80_5();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = OUTLINED_FUNCTION_52_10();
      outlined init with take of SearchCallHistoryFlow.State(v31, v32);
      uint64_t v33 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
      OUTLINED_FUNCTION_7_7();
      uint64_t v34 = v11;
LABEL_10:
      outlined assign with take of SearchCallHistoryFlow.State(v34, v33);
      swift_endAccess();
      OUTLINED_FUNCTION_26_1();
      return;
    }

    swift_release();
    goto LABEL_9;
  }
  if (v23 == enum case for RCHFlowResult.error<A, B>(_:))
  {
    uint64_t v29 = OUTLINED_FUNCTION_48_19();
    v30(v29);
    *uint64_t v14 = *v21;
    OUTLINED_FUNCTION_80_5();
    goto LABEL_6;
  }
  if (v23 == enum case for RCHFlowResult.cancelled<A, B>(_:))
  {
LABEL_9:
    OUTLINED_FUNCTION_80_5();
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state;
    OUTLINED_FUNCTION_7_7();
    uint64_t v34 = (uint64_t)v14;
    goto LABEL_10;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v35 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v7, v35, v2);
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(*(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix), *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8), *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16), *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24));
  v36._object = (void *)0x800000000049A7E0;
  v36._uint64_t countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v36);
  swift_bridgeObjectRetain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v45 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v39 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v40 = OUTLINED_FUNCTION_36_0();
    uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v37, v38, "%s", v39, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_36_0();
  static SiriKitLifecycle._logCrashToEventBus(_:)();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t SearchCallHistoryFlow.provideDialogForRF(intent:intentResponse:app:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[63] = v2;
  v1[64] = v0;
  v1[61] = v3;
  v1[62] = v4;
  v1[60] = v5;
  uint64_t v6 = type metadata accessor for SearchCallHistoryFlow.State(0);
  v1[65] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[66] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v7);
  v1[67] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t VoicemailResultSetFlowProvider;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t (*v58)();
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  NSObject *log;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void v73[5];
  uint64_t v74[7];
  uint64_t v75;
  uint64_t v76;

  uint64_t v75 = v0;
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = [*(id *)(v0 + 488) callTypes];
  uint64_t v4 = *(void **)(v0 + 496);
  uint64_t v3 = *(void *)(v0 + 504);
  uint64_t v5 = *(void **)(v0 + 488);
  if ((v2 & 0x10) != 0)
  {
    outlined init with copy of SignalProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals, v0 + 336);
    swift_retain();
    uint64_t v26 = v5;
    uint64_t v27 = v4;
    default argument 6 of SingleCallResultFlow.init(app:callRecord:intent:intentResponse:isIncomingCallFollowupPrompt:sharedGlobals:schGlobals:)(&v71, v27);
    uint64_t v28 = type metadata accessor for SearchCallHistoryCATPatternsExecutor(0);
    static CATOption.defaultMode.getter();
    uint64_t v29 = CATWrapper.__allocating_init(options:globals:)();
    v73[3] = v28;
    v73[4] = &protocol witness table for SearchCallHistoryCATPatternsExecutor;
    v73[0] = v29;
    uint64_t v30 = type metadata accessor for ResponseFactory();
    OUTLINED_FUNCTION_21_0();
    uint64_t v31 = ResponseFactory.init()();
    v74[3] = v30;
    v74[4] = (uint64_t)&protocol witness table for ResponseFactory;
    v74[0] = v31;
    VoicemailResultSetFlowProvider = type metadata accessor for ReadVoicemailResultSetFlowProvider();
    swift_allocObject();
    ReadVoicemailResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:searchCallCatPatterns:responseGenerator:)(v3, v26, v27, v0 + 336, &v71, (uint64_t)v73, (uint64_t)v74);
    *(void *)(v0 + 544) = v32;
    uint64_t v33 = v32;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_25_32(v34, (uint64_t)static Logger.siriPhone);
    uint64_t v35 = Logger.logObject.getter();
    Swift::String v36 = static os_log_type_t.debug.getter();
    uint64_t v37 = OUTLINED_FUNCTION_14_2(v36);
    os_log_type_t v38 = *(void *)(v0 + 512);
    if (v37)
    {
      log = v35;
      OUTLINED_FUNCTION_5_22();
      uint64_t v66 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_58_15(v66, 4.8149e-34);
      uint64_t v70 = VoicemailResultSetFlowProvider;
      int v71 = 0;
      uint64_t v40 = *(void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
      uint64_t v39 = *(void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
      uint64_t v42 = *(void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
      unint64_t v41 = *(void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
      uint64_t v72 = (void *)0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = v40;
      VoicemailResultSetFlowProvider = v70;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v43, v39, v42, v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v72;
      *(void *)(v0 + 472) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, (unint64_t)v72, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_14_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_24(&dword_0, v45, v46, "%s makeResultSetFlow for playing voicemails", v47, v48, v49, v50, v62, v63, v64, v0 + 472, v66, v67, OS_LOG_TYPE_DEFAULT, log);
      OUTLINED_FUNCTION_77_9();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_14_3();
    }
    unint64_t v51 = v0 + 464;
    uint64_t v59 = OUTLINED_FUNCTION_18_33();
    v60(v59);
    uint64_t v54 = *(void *)(v0 + 320);
    os_log_type_t v55 = *(void *)(v0 + 328);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v54);
    *(void *)(v0 + 464) = v33;
    uint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 552) = v56;
    uint64_t v57 = lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy(&lazy protocol witness table cache variable for type ReadVoicemailResultSetFlowProvider and conformance ReadVoicemailResultSetFlowProvider, 255, (void (*)(uint64_t))type metadata accessor for ReadVoicemailResultSetFlowProvider);
    _DWORD *v56 = v0;
    uint64_t v58 = SearchCallHistoryFlow.provideDialogForRF(intent:intentResponse:app:);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 512);
    outlined init with copy of SignalProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals, v0 + 216);
    outlined init with copy of SearchCallHistorySharedGlobals(v6 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_searchCallHistorySharedGlobals, v0 + 16);
    VoicemailResultSetFlowProvider = type metadata accessor for ReadCallHistoryResultSetFlowProvider();
    swift_allocObject();
    swift_retain();
    uint64_t v8 = ReadCallHistoryResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:)(v3, v5, v4, v0 + 216, v0 + 16);
    *(void *)(v0 + 568) = v8;
    uint64_t v9 = v8;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_25_32(v10, (uint64_t)static Logger.siriPhone);
    uint64_t v11 = Logger.logObject.getter();
    uint64_t v12 = static os_log_type_t.debug.getter();
    uint64_t v13 = OUTLINED_FUNCTION_14_2(v12);
    uint64_t v14 = *(void *)(v0 + 512);
    if (v13)
    {
      OUTLINED_FUNCTION_5_22();
      uint64_t v65 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_58_15(v65, 4.8149e-34);
      uint64_t v69 = VoicemailResultSetFlowProvider;
      int v71 = 0;
      uint64_t v16 = *(void *)(v14 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
      uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
      uint64_t v18 = *(void *)(v14 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
      uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
      uint64_t v72 = (void *)0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = v16;
      VoicemailResultSetFlowProvider = v69;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v19, v15, v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 448) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_14_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_24(&dword_0, v20, v21, "%s makeResultSetFlow for reading call history", v22, v23, v24, v25, v62, v63, v64, v0 + 448, v65, v67, OS_LOG_TYPE_DEFAULT, v11);
      OUTLINED_FUNCTION_77_9();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_14_3();
    }
    unint64_t v51 = v0 + 456;
    uint64_t v52 = OUTLINED_FUNCTION_18_33();
    v53(v52);
    uint64_t v54 = *(void *)(v0 + 280);
    os_log_type_t v55 = *(void *)(v0 + 288);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 256), v54);
    *(void *)(v0 + 456) = v9;
    uint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v56;
    uint64_t v57 = lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy(&lazy protocol witness table cache variable for type ReadCallHistoryResultSetFlowProvider and conformance ReadCallHistoryResultSetFlowProvider, 255, (void (*)(uint64_t))type metadata accessor for ReadCallHistoryResultSetFlowProvider);
    _DWORD *v56 = v0;
    uint64_t v58 = SearchCallHistoryFlow.provideDialogForRF(intent:intentResponse:app:);
  }
  v56[1] = v58;
  return dispatch thunk of PatternFlowProviding.makeResultSetFlow<A>(provider:)(v51, VoicemailResultSetFlowProvider, v57, v54, v55);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[50] = v1;
  v2[51] = v4;
  v2[52] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v7 + 560) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_18_3();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  OUTLINED_FUNCTION_37_24();
  OUTLINED_FUNCTION_68_7();
  outlined assign with take of SearchCallHistoryFlow.State(v1, v2);
  swift_endAccess();
  static ExecuteResponse.ongoing(next:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v3();
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[53] = v1;
  v2[54] = v4;
  v2[55] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v7 + 584) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_18_3();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  OUTLINED_FUNCTION_37_24();
  OUTLINED_FUNCTION_68_7();
  outlined assign with take of SearchCallHistoryFlow.State(v1, v2);
  swift_endAccess();
  static ExecuteResponse.ongoing(next:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v3();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

void SearchCallHistoryFlow.getUnsupportedSearchParametersFlowStrategy(app:input:intent:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = type metadata accessor for CATOption();
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_1();
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = v0;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals + 24);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals + 32);
  uint64_t v73 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals), v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v8, v9);
  Input.parse.getter();
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)v10 + 192))(&v74, v6);
  swift_release();
  OUTLINED_FUNCTION_36_5();
  v11();
  uint64_t v12 = &unk_469000;
  uint64_t v13 = _TtC27PhoneCallFlowDelegatePlugin23PhoneCallFeatureManager;
  if (v75)
  {
    outlined init with take of AppSelectionSignalComponent(&v74, (uint64_t)v77);
    unint64_t v14 = (unint64_t)INSearchCallHistoryIntent.contacts.getter();
    if (v14)
    {
      unint64_t v15 = v14;
      unint64_t v16 = v14 >> 62;
      uint64_t v17 = v7;
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v44)
        {
LABEL_5:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v15 & 0xC000000000000001) == 0);
          if ((v15 & 0xC000000000000001) != 0)
          {
            uint64_t v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (v16)
            {
              swift_bridgeObjectRetain();
              uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
LABEL_8:
              swift_bridgeObjectRelease();
              if (v20 < 2)
              {
                char v33 = 0;
              }
              else
              {
                if (one-time initialization token for siriPhone != -1) {
                  swift_once();
                }
                uint64_t v21 = type metadata accessor for Logger();
                __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
                swift_retain_n();
                uint64_t v22 = Logger.logObject.getter();
                os_log_type_t v23 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v22, v23))
                {
                  uint64_t v24 = (_DWORD *)OUTLINED_FUNCTION_5_22();
                  uint64_t v69 = OUTLINED_FUNCTION_14_0();
                  *uint64_t v24 = 136315138;
                  v76[0] = v69;
                  uint64_t v25 = v18;
                  uint64_t v27 = *(void *)(v7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
                  uint64_t v26 = *(void *)(v7
                                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix
                                  + 8);
                  uint64_t v28 = *(void *)(v7
                                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix
                                  + 16);
                  uint64_t v29 = *(void *)(v7
                                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix
                                  + 24);
                  *(void *)&long long v74 = 0;
                  *((void *)&v74 + 1) = 0xE000000000000000;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v30 = v27;
                  uint64_t v18 = v25;
                  uint64_t v31 = v28;
                  uint64_t v13 = _TtC27PhoneCallFlowDelegatePlugin23PhoneCallFeatureManager;
                  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v30, v26, v31, v29);
                  uint64_t v17 = v7;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, *((unint64_t *)&v74 + 1), v76);
                  OUTLINED_FUNCTION_34_24(v32);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_55_7(&dword_0, v22, v23, "%s don't support more than one contact");
                  char v33 = 1;
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_6();
                  OUTLINED_FUNCTION_6();

                  uint64_t v12 = (void *)&unk_469000;
                }
                else
                {

                  OUTLINED_FUNCTION_4_0();
                  char v33 = 1;
                  uint64_t v12 = &unk_469000;
                }
              }
              goto LABEL_23;
            }
          }
          else
          {
            uint64_t v18 = *(void **)(v15 + 32);
            id v19 = v18;
          }
          uint64_t v20 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
          goto LABEL_8;
        }
      }
      else if (*(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8)))
      {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      char v33 = 0;
      uint64_t v18 = 0;
    }
    else
    {
      char v33 = 0;
      uint64_t v18 = 0;
      uint64_t v17 = v0;
    }
LABEL_23:
    __swift_project_boxed_opaque_existential_1(v77, v78);
    OUTLINED_FUNCTION_52_10();
    Swift::Bool v45 = PhoneCallNLIntent.hasUnsupportedSearchCallHistoryParameter()();
    if ((v33 & 1) != 0 || !v45)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v52 = type metadata accessor for Logger();
      __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v72 = v18;
        os_log_type_t v55 = (_DWORD *)OUTLINED_FUNCTION_5_22();
        uint64_t v70 = OUTLINED_FUNCTION_14_0();
        *os_log_type_t v55 = v12[287];
        v76[0] = v70;
        uint64_t v56 = (uint64_t *)((char *)v13[10].vtable + v17);
        *(void *)&long long v74 = 0;
        uint64_t v58 = *v56;
        uint64_t v57 = v56[1];
        uint64_t v60 = v56[2];
        uint64_t v59 = v56[3];
        *((void *)&v74 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v58, v57, v60, v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, *((unint64_t *)&v74 + 1), v76);
        OUTLINED_FUNCTION_34_24(v61);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_74_6(&dword_0, v62, v63, "%s can't find unsupported search parameters skip offering unsupported search parameters flow");
        OUTLINED_FUNCTION_41_3();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        OUTLINED_FUNCTION_4_0();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    }
    else
    {
      uint64_t v46 = OUTLINED_FUNCTION_26_31();
      uint64_t v48 = v47(v46);
      if (v48)
      {
        uint64_t v49 = v48;
        if (*(void *)(v48 + 16))
        {
          swift_bridgeObjectRetain();
          while (2)
          {
            switch(*(unsigned char *)(v49 + 32))
            {
              case 1:
              case 2:
              case 6:
              case 0xA:
              case 0xD:
                goto LABEL_38;
              case 3:
                OUTLINED_FUNCTION_55_13();
                goto LABEL_38;
              case 4:
                OUTLINED_FUNCTION_53_17();
                goto LABEL_38;
              case 5:
                OUTLINED_FUNCTION_76_9();
                goto LABEL_38;
              case 7:
                OUTLINED_FUNCTION_54_16();
                goto LABEL_38;
              case 8:
                OUTLINED_FUNCTION_56_15();
                goto LABEL_38;
              case 9:
                OUTLINED_FUNCTION_57_13();
                goto LABEL_38;
              case 0xB:
                OUTLINED_FUNCTION_52_14();
                goto LABEL_38;
              case 0xC:
                OUTLINED_FUNCTION_32_21();
LABEL_38:
                char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v50 & 1) == 0)
                {
                  OUTLINED_FUNCTION_72_13();
                  if (!v51) {
                    continue;
                  }
                }
                goto LABEL_50;
              default:
                swift_bridgeObjectRelease();
LABEL_50:
                swift_bridgeObjectRelease();
                break;
            }
            break;
          }
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v64 = OUTLINED_FUNCTION_26_31();
      uint64_t v66 = v65(v64);
      if (v66)
      {
        uint64_t v67 = v66;
        if (*(void *)(v66 + 16))
        {
          swift_bridgeObjectRetain();
          while (2)
          {
            switch(*(unsigned char *)(v67 + 32))
            {
              case 3:
                OUTLINED_FUNCTION_55_13();
                goto LABEL_65;
              case 4:
                OUTLINED_FUNCTION_53_17();
                goto LABEL_65;
              case 5:
                OUTLINED_FUNCTION_76_9();
                goto LABEL_65;
              case 6:
                swift_bridgeObjectRelease();
                goto LABEL_71;
              case 7:
                OUTLINED_FUNCTION_54_16();
                goto LABEL_65;
              case 8:
                OUTLINED_FUNCTION_56_15();
                goto LABEL_65;
              case 9:
                OUTLINED_FUNCTION_57_13();
                goto LABEL_65;
              case 0xB:
                OUTLINED_FUNCTION_52_14();
                goto LABEL_65;
              case 0xC:
                OUTLINED_FUNCTION_32_21();
                goto LABEL_65;
              default:
LABEL_65:
                char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v68 & 1) == 0)
                {
                  OUTLINED_FUNCTION_72_13();
                  if (!v51) {
                    continue;
                  }
                }
LABEL_71:
                swift_bridgeObjectRelease();
                break;
            }
            break;
          }
        }
        swift_bridgeObjectRelease();
      }
      __swift_project_boxed_opaque_existential_1(v77, v78);
      PhoneCallNLIntent.isPlayVoiceMail()();
      outlined init with copy of SignalProviding(v73, (uint64_t)v76);
      outlined init with copy of SearchCallHistorySharedGlobals(v17 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_searchCallHistorySharedGlobals, (uint64_t)&v74);
      type metadata accessor for SearchCallHistoryCATsSimple();
      swift_retain();
      static CATOption.defaultMode.getter();
      CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for UnsupportedSearchParametersFlowStrategy();
      swift_allocObject();
      UnsupportedSearchParametersFlowStrategy.init(app:sharedGlobals:isMissed:isLatest:isVoicemail:contact:searchCallHistorySharedGlobals:searchCallHistoryCATsSimple:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    }
    goto LABEL_74;
  }
  outlined destroy of UUID?((uint64_t)&v74, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_22_7(v36))
  {
    uint64_t v37 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    uint64_t v71 = OUTLINED_FUNCTION_14_0();
    *uint64_t v37 = 136315138;
    v77[0] = v71;
    uint64_t v38 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix);
    uint64_t v39 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 8);
    *(void *)&long long v74 = 0;
    uint64_t v41 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 16);
    uint64_t v40 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_logPrefix + 24);
    *((void *)&v74 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v38, v39, v41, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, *((unint64_t *)&v74 + 1), v77);
    OUTLINED_FUNCTION_34_24(v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_5(&dword_0, v35, v43, "%s can't transform nlIntent, skip offering unsupported search parameters flow");
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
LABEL_74:
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryFlow.deinit()
{
  outlined destroy of SearchCallHistoryFlow.State(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_state);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_sharedGlobals);
  outlined destroy of SearchCallHistorySharedGlobals(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin21SearchCallHistoryFlow_searchCallHistorySharedGlobals);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SearchCallHistoryFlow.__deallocating_deinit()
{
  SearchCallHistoryFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance SearchCallHistoryFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance SearchCallHistoryFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t protocol witness for Flow.execute() in conformance SearchCallHistoryFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 168) + **(int **)(**(void **)v1 + 168));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance SearchCallHistoryFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SearchCallHistoryFlow(0);

  return Flow<>.exitValue.getter(v3, a2);
}

void *SearchCallHistoryHandleFlowStrategy.init(sharedGlobals:searchCallHistoryCATsSimple:)()
{
  OUTLINED_FUNCTION_6_5();
  v1[8] = type metadata accessor for SearchCallHistoryHandleFlowStrategy();
  v1[9] = &outlined read-only object #0 of SearchCallHistoryHandleFlowStrategy.init(sharedGlobals:searchCallHistoryCATsSimple:);
  v1[10] = 0;
  v1[11] = 0;
  outlined init with take of AppSelectionSignalComponent(v2, (uint64_t)(v1 + 2));
  v1[7] = v0;
  return v1;
}

uint64_t type metadata accessor for SearchCallHistoryFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryFlow.State);
}

uint64_t outlined init with copy of SearchCallHistoryFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SearchCallHistoryFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryFlow);
}

uint64_t outlined init with take of SearchCallHistoryFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchCallHistoryFlow.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SearchCallHistoryHandleFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (_DWORD *)OUTLINED_FUNCTION_47();
    uint64_t v15 = OUTLINED_FUNCTION_14_0();
    v16[0] = 0;
    *uint64_t v8 = 136315138;
    v16[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    uint64_t v9 = OUTLINED_FUNCTION_38();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v9, v10, 0xD000000000000037, v11);
    swift_bridgeObjectRelease();
    v16[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16[0], 0xE000000000000000, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_42_23();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_74_6(&dword_0, v12, v13, "%s This should not provide any output.");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_42_23();
  }
  type metadata accessor for EmptyOutput();
  static EmptyOutput.instance.getter();
  char v17 = 0;
  a4(v16);
  return outlined destroy of UUID?((uint64_t)v16, &demangling cache variable for type metadata for Result<Output, Error>);
}

void SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  os_log_type_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_52();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v32 = v7;
    uint64_t v34 = v1;
    char v17 = (_DWORD *)OUTLINED_FUNCTION_47();
    uint64_t v33 = v5;
    uint64_t v31 = OUTLINED_FUNCTION_14_0();
    *char v17 = 136315138;
    uint64_t v18 = v9;
    uint64_t v19 = v3;
    uint64_t v21 = *(void *)(v0 + 64);
    uint64_t v20 = *(void *)(v0 + 72);
    uint64_t v35 = v31;
    swift_bridgeObjectRetain();
    uint64_t v22 = v21;
    uint64_t v9 = v18;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v22, v20, 0xD00000000000003FLL, 0x800000000049A840);
    uint64_t v3 = v19;
    os_log_type_t v7 = v32;
    swift_bridgeObjectRelease();
    uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v35);
    OUTLINED_FUNCTION_7_22(v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_42_23();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_5(&dword_0, v15, v24, "%s This should not provide output.");
    OUTLINED_FUNCTION_41_3();
    uint64_t v5 = v33;
    OUTLINED_FUNCTION_6();
    uint64_t v1 = v34;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_42_23();
  }
  uint64_t v25 = (char *)[v7 code];
  if ((unint64_t)(v25 - 3) < 2)
  {
    uint64_t v26 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_25(v26);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = v0;
    v27[5] = v5;
    v27[6] = v3;
    swift_retain();
    swift_retain();
    uint64_t v28 = &async function pointer to partial apply for closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
LABEL_10:
    _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)v28, (uint64_t)v27);
    swift_release();
    goto LABEL_11;
  }
  if (v25 == (unsigned char *)&dword_4 + 1)
  {
    uint64_t v29 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_25(v29);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = v0;
    v27[5] = v11;
    v27[6] = v9;
    v27[7] = v5;
    v27[8] = v3;
    swift_retain();
    swift_retain();
    id v30 = v9;
    swift_retain();
    uint64_t v28 = &async function pointer to partial apply for closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
    goto LABEL_10;
  }
LABEL_11:
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[31] = a7;
  v8[32] = a8;
  v8[29] = a5;
  v8[30] = a6;
  v8[28] = a4;
  uint64_t v9 = type metadata accessor for Locale();
  v8[33] = v9;
  v8[34] = *(void *)(v9 - 8);
  v8[35] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v8[36] = swift_task_alloc();
  type metadata accessor for DialogPhase();
  v8[37] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for OutputGenerationManifest();
  v8[38] = v10;
  v8[39] = *(void *)(v10 - 8);
  unsigned char v8[40] = swift_task_alloc();
  return _swift_task_switch(closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:), 0, 0);
}

uint64_t closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[34];
  uint64_t v2 = v0[35];
  uint64_t v14 = v0[33];
  os_log_type_t v16 = (void *)v0[30];
  uint64_t v4 = (void *)v0[28];
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v5 = (void *)v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v4[5]);
  uint64_t v6 = OUTLINED_FUNCTION_67_10();
  v7(v6);
  __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
  OUTLINED_FUNCTION_67_10();
  dispatch thunk of DeviceState.siriLocale.getter();
  uint64_t v8 = type metadata accessor for AppInfoBuilder();
  uint64_t v9 = swift_allocObject();
  v0[16] = v8;
  v0[17] = &protocol witness table for AppInfoBuilder;
  v0[13] = v9;
  App.toSpeakableStringAppName(forLocale:appInfoBuilder:)(v2, v0 + 13, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 13));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  uint64_t v10 = PhoneSearchCallHistoryIntent.__allocating_init(intent:)(v16);
  v0[41] = v10;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple
                                                             + *v5
                                                             + 112)
                                                 + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple
                                                            + *v5
                                                            + 112));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[42] = v11;
  *uint64_t v11 = v0;
  v11[1] = closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
  uint64_t v12 = v0[36];
  return v15(v12, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v1;
  *(void *)(v5 + 344) = v0;
  swift_task_dealloc();
  os_log_type_t v7 = *(void *)(v4 + 288);
  if (!v0) {
    *(void *)(v5 + 352) = v3;
  }
  outlined destroy of UUID?(v7, &demangling cache variable for type metadata for SpeakableString?);
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = *(void **)(v0 + 352);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 248);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  outlined init with copy of SignalProviding(v0 + 144, v0 + 16);
  *(unsigned char *)(v0 + 56) = 0;
  v2(v0 + 16);

  outlined destroy of UUID?(v0 + 16, &demangling cache variable for type metadata for Result<Output, Error>);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  uint64_t v3 = OUTLINED_FUNCTION_51_14();
  v4(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v5();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_73_8();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[44];
  uint64_t v12 = OUTLINED_FUNCTION_19_37(v10[28]);
  v13(v12);
  __swift_project_boxed_opaque_existential_1(v10 + 23, v10[26]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_13_16(v14, (__n128)xmmword_46A030);
  v10[45] = v26;
  id v15 = v11;
  os_log_type_t v16 = (void *)swift_task_alloc();
  v10[46] = v16;
  *os_log_type_t v16 = v10;
  v16[1] = closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
  uint64_t v17 = OUTLINED_FUNCTION_41_20();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[19] = a5;
  v6[20] = a6;
  v6[18] = a4;
  type metadata accessor for DialogPhase();
  v6[21] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OutputGenerationManifest();
  v6[22] = v7;
  v6[23] = *(void *)(v7 - 8);
  unsigned char v6[24] = swift_task_alloc();
  return _swift_task_switch(closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:), 0, 0);
}

uint64_t closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void *)(v0 + 144);
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v2 = *(int **)(class metadata base offset for SearchCallHistoryCATsSimple + **(void **)(v1 + 56) + 96);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
  return v5();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 208) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 216) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  outlined init with copy of SignalProviding(v0 + 64, v0 + 16);
  *(unsigned char *)(v0 + 56) = 0;
  v2(v0 + 16);

  outlined destroy of UUID?(v0 + 16, &demangling cache variable for type metadata for Result<Output, Error>);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v3 = OUTLINED_FUNCTION_51_14();
  v4(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v5();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_73_8();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[27];
  uint64_t v12 = OUTLINED_FUNCTION_19_37(v10[18]);
  v13(v12);
  __swift_project_boxed_opaque_existential_1(v10 + 13, v10[16]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_13_16(v14, (__n128)xmmword_46A030);
  v10[28] = v26;
  id v15 = v11;
  os_log_type_t v16 = (void *)swift_task_alloc();
  v10[29] = v16;
  *os_log_type_t v16 = v10;
  v16[1] = closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
  uint64_t v17 = OUTLINED_FUNCTION_41_20();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t SearchCallHistoryHandleFlowStrategy.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SearchCallHistoryHandleFlowStrategy.__deallocating_deinit()
{
  SearchCallHistoryHandleFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for HandleIntentFlowStrategy.authenticationPolicy.getter in conformance SearchCallHistoryHandleFlowStrategy()
{
  return HandleIntentFlowStrategy.authenticationPolicy.getter();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryHandleFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryHandleFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t protocol witness for IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:) in conformance SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for SearchCallHistoryHandleFlowStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_31F2A4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in SearchCallHistoryFlow.execute(completion:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_84_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v3 = OUTLINED_FUNCTION_35_29();
  return closure #1 in SearchCallHistoryFlow.execute(completion:)(v3, v4, v5, v6, v7, v8);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in SearchCallHistoryFlow.executeRCH(rchFlow:)()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_31F3B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t outlined assign with take of SearchCallHistoryFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SearchCallHistoryHandleFlowStrategy()
{
  return self;
}

uint64_t sub_31F474()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_84_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v3 = OUTLINED_FUNCTION_35_29();
  return closure #2 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_31F554()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t partial apply for closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in SearchCallHistoryHandleFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t base witness table accessor for IntentExtensionCommunicating in SearchCallHistoryHandleFlowStrategy(uint64_t a1, uint64_t a2)
{
  return lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy(&lazy protocol witness table cache variable for type SearchCallHistoryHandleFlowStrategy and conformance SearchCallHistoryHandleFlowStrategy, a2, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryHandleFlowStrategy);
}

uint64_t sub_31F6C8()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t ObjC metadata update function for SearchCallHistoryFlow()
{
  return type metadata accessor for SearchCallHistoryFlow(0);
}

uint64_t type metadata completion function for SearchCallHistoryFlow()
{
  uint64_t result = type metadata accessor for SearchCallHistoryFlow.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryFlow.State(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for Input();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App));
        *(void *)&a1[*(int *)(v8 + 48)] = *(char **)((char *)a2 + *(int *)(v8 + 48));
        swift_retain();
        goto LABEL_10;
      case 1u:
        uint64_t v10 = *a2;
        uint64_t v11 = a2[1];
        *(void *)a1 = v10;
        *((void *)a1 + 1) = v11;
        swift_retain();
        swift_retain();
        goto LABEL_10;
      case 2u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_10;
      case 3u:
        uint64_t v12 = *a2;
        uint64_t v13 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v13;
        *((void *)a1 + 2) = a2[2];
        uint64_t v14 = v12;
        id v15 = v13;
        swift_retain();
        goto LABEL_10;
      case 4u:
        os_log_type_t v16 = *a2;
        swift_errorRetain();
        *(void *)a1 = v16;
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryFlow.State(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for Input();
      (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App));
      goto LABEL_5;
    case 1:
      swift_release();
      goto LABEL_5;
    case 2:
      goto LABEL_5;
    case 3:

LABEL_5:
      uint64_t result = swift_release();
      break;
    case 4:
      uint64_t result = swift_errorRelease();
      break;
    default:
      return result;
  }
  return result;
}

void **initializeWithCopy for SearchCallHistoryFlow.State(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Input();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App));
      *(void **)((char *)a1 + *(int *)(v7 + 48)) = *(void **)((char *)a2 + *(int *)(v7 + 48));
      swift_retain();
      goto LABEL_8;
    case 1u:
      uint64_t v8 = *a2;
      uint64_t v9 = a2[1];
      *a1 = v8;
      a1[1] = v9;
      swift_retain();
      swift_retain();
      goto LABEL_8;
    case 2u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_8;
    case 3u:
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      id v12 = v10;
      id v13 = v11;
      swift_retain();
      goto LABEL_8;
    case 4u:
      uint64_t v14 = *a2;
      swift_errorRetain();
      *a1 = v14;
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for SearchCallHistoryFlow.State(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SearchCallHistoryFlow.State((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for Input();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App));
        *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
        swift_retain();
        goto LABEL_9;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_retain();
        swift_retain();
        goto LABEL_9;
      case 2u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_9;
      case 3u:
        uint64_t v8 = (void *)*a2;
        *a1 = *a2;
        uint64_t v9 = (void *)a2[1];
        a1[1] = v9;
        a1[2] = a2[2];
        id v10 = v8;
        id v11 = v9;
        swift_retain();
        goto LABEL_9;
      case 4u:
        uint64_t v12 = *a2;
        swift_errorRetain();
        *a1 = v12;
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for SearchCallHistoryFlow.State(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for Input();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App));
    *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for SearchCallHistoryFlow.State(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SearchCallHistoryFlow.State((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for Input();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App));
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata completion function for SearchCallHistoryFlow.State()
{
  uint64_t result = type metadata accessor for Input();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    uint64_t v4 = &unk_483A48;
    int v5 = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t v6 = &unk_483A60;
    uint64_t v7 = &unk_483A78;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_18_33()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_19_37@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = *(void *)(a1 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_26_31()
{
  uint64_t v1 = *(void *)(v0 - 104);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 128), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_30_27(uint64_t a1)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v1, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_31_30()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_32_21()
{
  return 0x6563696F5677656ELL;
}

uint64_t OUTLINED_FUNCTION_34_24(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return v1 + 64;
}

uint64_t OUTLINED_FUNCTION_35_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_24()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_39_24(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint8_t *buf, uint64_t a12, uint64_t a13, int a14, os_log_type_t type, os_log_t log)
{
  _os_log_impl(a1, log, type, a4, buf, 0xCu);
}

uint64_t OUTLINED_FUNCTION_41_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_23()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_46_18()
{
  uint64_t v2 = *(void *)(v0 - 112);
  unint64_t v3 = *(void *)(v0 - 104);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2, v3, (uint64_t *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_48_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_52_14()
{
  return 0x615265746164;
}

uint64_t OUTLINED_FUNCTION_53_17()
{
  return 0x6465766965636572;
}

uint64_t OUTLINED_FUNCTION_54_16()
{
  return 0x7373656E69737562;
}

uint64_t OUTLINED_FUNCTION_55_13()
{
  return 0x64657661736E75;
}

uint64_t OUTLINED_FUNCTION_56_15()
{
  return 0x746E6572727563;
}

uint64_t OUTLINED_FUNCTION_58_15(uint64_t result, float a2)
{
  *uint64_t v2 = a2;
  *(void *)(v3 - 128) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_67_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68_7()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_70_7(uint64_t result, float a2)
{
  *uint64_t v2 = a2;
  *(void *)(v3 - 120) = result;
  *(void *)(v3 - 112) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_73_8()
{
  return v0;
}

void OUTLINED_FUNCTION_74_6(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_76_9()
{
  return 0x696F6774756FLL;
}

uint64_t OUTLINED_FUNCTION_77_9()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_87_6()
{
  return v0;
}

void OUTLINED_FUNCTION_90_9()
{
  *(void *)(v0 - 104) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_91_10()
{
  *(void *)(v0 - 136) = 0;
  *(void *)(v0 - 128) = 0xE000000000000000;
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.actionForInput(_:)()
{
  if (AnnounceVoicemailPromptForValueFlowStrategy.parseInput(input:)() == 2)
  {
    return static ActionForInput.ignore()();
  }
  else
  {
    return static ActionForInput.handle()();
  }
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.parseValueResponse(input:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnnounceVoicemailPromptForValueFlowStrategy.parseValueResponse(input:));
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.parseValueResponse(input:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = AnnounceVoicemailPromptForValueFlowStrategy.parseInput(input:)();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.parseInput(input:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v8, v9);
  Input.parse.getter();
  (*(void (**)(long long *__return_ptr, char *))(*(void *)v10 + 192))(&v47, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  if (!v48)
  {
    swift_release();
    outlined destroy of SubmitCommandError?((uint64_t)&v47, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    return 2;
  }
  outlined init with take of AppSelectionSignalComponent(&v47, (uint64_t)v49);
  __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t v11 = OUTLINED_FUNCTION_0();
  char v13 = v12(v11);
  if (v13 == 17)
  {
    outlined init with copy of SignalProviding((uint64_t)v49, (uint64_t)&v47);
    goto LABEL_4;
  }
  if (PhoneCallVerb.rawValue.getter(v13) == 0x636162206C6C6163 && v22 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)v49, (uint64_t)&v47);
LABEL_21:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
    goto LABEL_22;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  outlined init with copy of SignalProviding((uint64_t)v49, (uint64_t)&v47);
  if (v24) {
    goto LABEL_21;
  }
LABEL_4:
  __swift_project_boxed_opaque_existential_1(&v47, v48);
  Swift::Bool v14 = PhoneCallNLIntent.isAnyCallToReference()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  if (v14)
  {
LABEL_22:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v26 = (void *)Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_63_0(v27))
    {
      uint64_t v28 = (_DWORD *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v46 = v1;
      *(void *)&long long v47 = v29;
      *uint64_t v28 = 136315138;
      type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy();
      swift_retain();
      uint64_t v30 = String.init<A>(describing:)();
      uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, (uint64_t *)&v47);
      OUTLINED_FUNCTION_12_49(v32);
      OUTLINED_FUNCTION_2_30();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_82(&dword_0, v33, v34, "#%s User asked to call back");
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      swift_release();
    }
    else
    {

      swift_release();
      OUTLINED_FUNCTION_2_30();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    return 0;
  }
  __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t v15 = OUTLINED_FUNCTION_0();
  char v17 = v16(v15);
  if (v17 == 6)
  {
LABEL_11:
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    return 2;
  }
  if (VoiceMail.VoiceMailVerb.rawValue.getter(v17) == 2036427888 && v18 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  os_log_type_t v36 = (void *)Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_63_0(v37))
  {
    uint64_t v38 = (_DWORD *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v1;
    *(void *)&long long v47 = v39;
    *uint64_t v38 = 136315138;
    type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy();
    swift_retain();
    uint64_t v40 = String.init<A>(describing:)();
    uint64_t v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, (uint64_t *)&v47);
    OUTLINED_FUNCTION_12_49(v42);
    OUTLINED_FUNCTION_2_30();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_82(&dword_0, v43, v44, "#%s User asked to play the voicemail");
    OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_2_30();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return 1;
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makePromptForValue()()
{
  OUTLINED_FUNCTION_1_0();
  v1[27] = v2;
  v1[28] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v1[29] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NLContextUpdate();
  v1[30] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[31] = v4;
  v1[32] = swift_task_alloc();
  return _swift_task_switch(AnnounceVoicemailPromptForValueFlowStrategy.makePromptForValue(), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  Swift::String v11;
  unint64_t v12;
  uint64_t v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#AnnounceVoicemail Sending output for silent prompt", v4, 2u);
    OUTLINED_FUNCTION_6();
  }

  NLContextUpdate.init()();
  PhoneCallNLConstants.canonicalName.getter(1);
  NLContextUpdate.weightedPromptTargetDomain.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_467720;
  *(void *)(v5 + 32) = PhoneCallNLConstants.canonicalName.getter(15);
  *(void *)(v5 + 40) = v6;
  *(void *)(v5 + 48) = PhoneCallNLConstants.canonicalName.getter(14);
  *(void *)(v5 + 56) = v7;
  NLContextUpdate.weightedPromptResponseTargets.setter();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_46A250;
  *(Swift::String *)(v0 + 136) = String.uppercased()();
  *(void *)(v0 + 56) = 32;
  *(void *)(v0 + 64) = 0xE100000000000000;
  *(void *)(v0 + 72) = 95;
  *(void *)(v0 + 80) = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_2_103();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  uint64_t v9 = PhoneCallNLConstants.canonicalName.getter(14);
  OUTLINED_FUNCTION_1_87(v9, v10);
  uint64_t v11 = String.uppercased()();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = v30;
  *(void *)(v8 + 40) = v31;
  *(Swift::String *)(v0 + 88) = String.uppercased()();
  *(void *)(v0 + 104) = 32;
  *(void *)(v0 + 112) = 0xE100000000000000;
  *(void *)(v0 + 120) = 95;
  *(void *)(v0 + 128) = 0xE100000000000000;
  OUTLINED_FUNCTION_2_103();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = PhoneCallNLConstants.canonicalName.getter(15);
  OUTLINED_FUNCTION_1_87(v12, v13);
  Swift::Bool v14 = String.uppercased()();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 48) = v30;
  *(void *)(v8 + 56) = v31;
  *(Swift::String *)(v0 + 184) = String.uppercased()();
  *(void *)(v0 + 152) = 32;
  *(void *)(v0 + 160) = 0xE100000000000000;
  *(void *)(v0 + 168) = 95;
  *(void *)(v0 + 176) = 0xE100000000000000;
  OUTLINED_FUNCTION_2_103();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = PhoneCallNLConstants.canonicalName.getter(15);
  OUTLINED_FUNCTION_1_87(v15, v16);
  char v17 = String.uppercased()();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 64) = v30;
  *(void *)(v8 + 72) = v31;
  NLContextUpdate.weightedPromptResponseOptions.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  uint64_t v18 = type metadata accessor for Siri_Nlu_External_SystemDialogAct();
  OUTLINED_FUNCTION_19_0(v18);
  char v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_467710;
  AnnounceVoicemailPromptForValueFlowStrategy.getSystemDialogAct()(v21 + v20);
  uint64_t v23 = *(void *)(v0 + 248);
  uint64_t v22 = *(void *)(v0 + 256);
  char v24 = *(void *)(v0 + 232);
  uint64_t v25 = *(void *)(v0 + 240);
  uint64_t v26 = *(uint64_t **)(v0 + 216);
  NLContextUpdate.nluSystemDialogActs.setter();
  NLContextUpdate.submitAsSpokenNotificationContext.setter();
  NLContextUpdate.weightedPromptStrict.setter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v22, v25);
  __swift_storeEnumTagSinglePayload(v24, 0, 1, v25);
  os_log_type_t v27 = type metadata accessor for AceOutput();
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  v26[3] = v27;
  v26[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v26);
  static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)();
  outlined destroy of SubmitCommandError?(v0 + 16, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of SubmitCommandError?(v24, &demangling cache variable for type metadata for NLContextUpdate?);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v0 + 16) = type metadata accessor for PhoneError();
  *(void *)(v0 + 24) = swift_task_alloc();
  return _swift_task_switch(AnnounceVoicemailPromptForValueFlowStrategy.makeFlowCancelledResponse(), 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = *(void **)(v0 + 24);
  *uint64_t v1 = 0;
  v1[1] = 0;
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
  swift_allocError();
  PhoneError.logged()(v2);
  outlined destroy of PhoneError((uint64_t)v1);
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makeErrorResponse(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnnounceVoicemailPromptForValueFlowStrategy.makeErrorResponse(_:));
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makeErrorResponse(_:)()
{
  swift_willThrow();
  swift_errorRetain();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.getSystemDialogAct()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = type metadata accessor for Siri_Nlu_External_SystemGaveOptions();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v24 - v8;
  Siri_Nlu_External_SystemGaveOptions.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_UserDialogAct>);
  type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_46A250;
  uint64_t v11 = v29;
  AnnounceVoicemailPromptForValueFlowStrategy.playVoicemailDialogAct()();
  if (v11)
  {
    *(void *)(v10 + 16) = 0;
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v1);
  }
  else
  {
    uint64_t v26 = v3;
    os_log_type_t v27 = v7;
    uint64_t v29 = v1;
    AnnounceVoicemailPromptForValueFlowStrategy.callBackDialogAct()();
    AnnounceVoicemailPromptForValueFlowStrategy.callReferenceDialogAct()();
    Siri_Nlu_External_SystemGaveOptions.choices.setter();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
    Swift::Bool v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      int v25 = v16;
      char v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)char v17 = 136315138;
      v24[1] = v17 + 4;
      swift_beginAccess();
      Siri_Nlu_External_SystemGaveOptions.choices.getter();
      swift_endAccess();
      uint64_t v18 = Array.description.getter();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v14, (os_log_type_t)v25, "Returning NLUSystemGaveOptions: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v21 = v29;
    uint64_t v23 = v26;
    uint64_t v22 = v27;
    Siri_Nlu_External_SystemDialogAct.init()();
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v22, v9, v21);
    Siri_Nlu_External_SystemDialogAct.gaveOptions.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v21);
  }
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.playVoicemailDialogAct()()
{
  type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_9_65();
  OUTLINED_FUNCTION_21_0();
  UsoEntityBuilder_common_ReferenceType.init()();
  uint64_t v1 = OUTLINED_FUNCTION_8_80();
  v2(v1);
  dispatch thunk of UsoEntityBuilder_common_ReferenceType.setDefinedValue(value:)();
  uint64_t v3 = OUTLINED_FUNCTION_10_58();
  v4(v3);
  type metadata accessor for UsoEntityBuilder_common_Voicemail();
  OUTLINED_FUNCTION_21_0();
  UsoEntityBuilder_common_Voicemail.init()();
  swift_retain();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoReferenceType(value:)();
  swift_release();
  type metadata accessor for UsoTaskBuilder_play_common_Voicemail();
  OUTLINED_FUNCTION_21_0();
  UsoTaskBuilder_play_common_Voicemail.init()();
  dispatch thunk of Uso_VerbTemplateBuilder_Reference.setReference(value:)();
  UsoTaskBuilder.toUserStatedTaskDialogAct()();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.callBackDialogAct()()
{
  return swift_release();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.callReferenceDialogAct()()
{
  type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_9_65();
  OUTLINED_FUNCTION_21_0();
  UsoEntityBuilder_common_ReferenceType.init()();
  uint64_t v1 = OUTLINED_FUNCTION_8_80();
  v2(v1);
  dispatch thunk of UsoEntityBuilder_common_ReferenceType.setDefinedValue(value:)();
  uint64_t v3 = OUTLINED_FUNCTION_10_58();
  v4(v3);
  type metadata accessor for UsoEntityBuilder_common_Person();
  OUTLINED_FUNCTION_21_0();
  UsoEntityBuilder_common_Person.init()();
  swift_retain();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoReferenceType(value:)();
  swift_release();
  type metadata accessor for UsoEntityBuilder_common_PhoneCall();
  OUTLINED_FUNCTION_21_0();
  UsoEntityBuilder_common_PhoneCall.init()();
  swift_retain();
  dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)();
  swift_release();
  type metadata accessor for UsoTaskBuilder_call_common_PhoneCall();
  OUTLINED_FUNCTION_21_0();
  UsoTaskBuilder_call_common_PhoneCall.init()();
  swift_allocObject();
  UsoEntityBuilder_common_PhoneCall.init()();
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)();
  swift_release();
  UsoTaskBuilder.toUserStatedTaskDialogAct()();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.actionForInput(_:) in conformance AnnounceVoicemailPromptForValueFlowStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.parseValueResponse(input:) in conformance AnnounceVoicemailPromptForValueFlowStrategy(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v2 + 104) + **(int **)(*(void *)v2 + 104));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = protocol witness for PromptForValueFlowStrategyAsync.parseValueResponse(input:) in conformance AnnounceVoicemailPromptForValueFlowStrategy;
  return v7(a2);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.parseValueResponse(input:) in conformance AnnounceVoicemailPromptForValueFlowStrategy(char a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(unsigned char **)(v5 + 16) = a1;
  }
  uint64_t v7 = *(uint64_t (**)(void))(v6 + 8);
  return v7();
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makePromptForValue() in conformance AnnounceVoicemailPromptForValueFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 120) + **(int **)(*(void *)v1 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return v6(a1);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse() in conformance AnnounceVoicemailPromptForValueFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()(a1, a2, a3);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence() in conformance AnnounceVoicemailPromptForValueFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()(a1, a2, a3);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeFlowCancelledResponse() in conformance AnnounceVoicemailPromptForValueFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for CallNotificationContextProviding.update(aceServiceInvoker:refId:applicationId:) in conformance CallNotificationContextProvider;
  return v6(a1);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeErrorResponse(_:) in conformance AnnounceVoicemailPromptForValueFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return v8(a1, a2);
}

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse);
  }
  return result;
}

uint64_t type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3222D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse()
{
  return &type metadata for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse;
}

void OUTLINED_FUNCTION_1_87(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = a2;
  uint64_t v4 = 0x2E65756C61562ELL;
  unint64_t v5 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v4);
}

uint64_t OUTLINED_FUNCTION_8_80()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_65()
{
  return type metadata accessor for UsoEntityBuilder_common_ReferenceType();
}

uint64_t OUTLINED_FUNCTION_10_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_49(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void specialized static PhoneCallNLContextProvider.makeTCCConfirmationContext(app:)(uint64_t a1)
{
  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()(a1);
  id v1 = [objc_allocWithZone((Class)SAAceConfirmationContext) init];
  [v1 setReason:SAAceConfirmationReasonAUTHORIZE_SIRIKIT_APPValue];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_46A030;
  *(void *)(v2 + 32) = v1;
  specialized Array._endMutation()();
  id v3 = v1;
  NLContextUpdate.conversationStateAttachments.setter();
  type metadata accessor for MachineUtteranceBuilder();
  swift_allocObject();
  MachineUtteranceBuilder.init()();
  App.appIdentifier.getter();
  dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)();
  swift_release();
  swift_bridgeObjectRelease();
  dispatch thunk of MachineUtteranceBuilder.build()();
  swift_release();
  NLContextUpdate.nlInput.setter();
  specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter();
}

uint64_t PhoneTCCFlowStrategy.__allocating_init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)(a1, a2, a3, a4, a5, a6);
}

uint64_t SimpleConfirmationResponseProvider.init(phoneCallConfirmation:)(unsigned __int8 a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5 - v4;
  if (a1 - 1 >= 2)
  {
    if (a1)
    {
      uint64_t v13 = type metadata accessor for ConfirmationResponse();
      uint64_t v11 = v6;
      uint64_t v12 = 1;
      goto LABEL_7;
    }
    uint64_t v7 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
  }
  else
  {
    uint64_t v7 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
  }
  uint64_t v8 = *v7;
  uint64_t v9 = type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(v6, v8, v9);
  uint64_t v11 = v6;
  uint64_t v12 = 0;
  uint64_t v13 = v9;
LABEL_7:
  __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
  return SimpleConfirmationResponseProvider.init(_:)();
}

uint64_t PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  outlined init with copy of SignalProviding((uint64_t)a1, v6 + 272);
  outlined init with copy of SignalProviding(a4, v6 + 192);
  outlined init with copy of SignalProviding(a5, v6 + 232);
  outlined init with copy of SignalProviding(a3, (uint64_t)v29);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = OUTLINED_FUNCTION_25_33();
  v14(v13);
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  char v17 = __swift_project_boxed_opaque_existential_1(v26, v27);
  v25[3] = v15;
  v25[4] = *(void *)(v16 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1, v17, v15);
  outlined init with copy of SignalProviding(a6, (uint64_t)v24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v19 = OUTLINED_FUNCTION_25_33();
  v20(v19);
  uint64_t v21 = PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:)(a2, (uint64_t)v29, (uint64_t)v25, (uint64_t)v24, (uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v21;
}

uint64_t PhoneTCCFlowStrategy.makePromptForTCCAcceptance(app:intent:)()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return PhoneTCCFlowStrategy.makeTCCPrompt(app:)();
}

uint64_t PhoneTCCFlowStrategy.actionForInput(input:)()
{
  uint64_t v1 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_52();
  Input.parse.getter();
  int v5 = PhoneTCCFlowStrategy.parseForConfirmation(parse:)(v0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  if (v5 == 5)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_24_1(&dword_0, v9, v10, "#PhoneTCCAcceptanceFlowStrategy Did not receive a confirmation, ignoring Input");
      OUTLINED_FUNCTION_6();
    }

    return static ActionForInput.ignore()();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_24_1(&dword_0, v15, v16, "#PhoneTCCAcceptanceFlowStrategy Received a confirmation");
      OUTLINED_FUNCTION_6();
    }

    return static ActionForInput.handle()();
  }
}

uint64_t PhoneTCCFlowStrategy.parseTCCConfirmationResponse(input:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  uint64_t v4 = type metadata accessor for Parse();
  v1[6] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[7] = v5;
  v1[8] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t PhoneTCCFlowStrategy.parseTCCConfirmationResponse(input:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_19_13();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_48();
  a18 = v20;
  uint64_t v24 = *(void *)(v20 + 56);
  uint64_t v23 = *(void *)(v20 + 64);
  uint64_t v25 = *(void *)(v20 + 48);
  Input.parse.getter();
  unsigned __int8 v26 = PhoneTCCFlowStrategy.parseForConfirmation(parse:)(v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    a9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    *(unsigned char *)(v20 + 72) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v31 = String.init<A>(describing:)();
    *(void *)(v20 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &a9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v28, v29, "#PhoneTCCAcceptanceFlowStrategy User responded: %s", v30, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  SimpleConfirmationResponseProvider.init(phoneCallConfirmation:)(v26);
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_4_3();
  return v34(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

uint64_t PhoneTCCFlowStrategy.makeTCCConfirmationRejectedResponse(app:intent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[7] = v2;
  v1[8] = v0;
  uint64_t v3 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v3);
  v1[9] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v4);
  v1[10] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  uint64_t v1 = v0[8] + 272;
  type metadata accessor for PhoneCallCommonCATsSimple();
  static CATOption.defaultMode.getter();
  CATWrapperSimple.__allocating_init(options:globals:)();
  swift_retain();
  static DialogPhase.canceled.getter();
  outlined init with copy of SignalProviding(v1, (uint64_t)(v0 + 2));
  type metadata accessor for DialogOutputFactory();
  swift_allocObject();
  uint64_t v2 = DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  v0[11] = v2;
  swift_release();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = PhoneTCCFlowStrategy.makeTCCConfirmationRejectedResponse(app:intent:);
  uint64_t v4 = v0[7];
  return v6(v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t PhoneTCCFlowStrategy.makeTCCCancelledResponse(app:intent:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v0 + 248)
                                                          + **(int **)(*(void *)v0 + 248));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v10(v7, v5, v3);
}

uint64_t PhoneTCCFlowStrategy.parseForConfirmation(parse:)(uint64_t a1)
{
  uint64_t v72 = type metadata accessor for CommonDirectAction();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v65 = v5 - v4;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CommonDirectAction?, CommonDirectAction?));
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_5_8();
  uint64_t v68 = v7;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v8);
  uint64_t v10 = &v62[-v9];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  uint64_t v12 = OUTLINED_FUNCTION_11_0(v11);
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_5_8();
  uint64_t v64 = v13;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v14);
  uint64_t v67 = &v62[-v15];
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v16);
  uint64_t v66 = &v62[-v17];
  OUTLINED_FUNCTION_18_0();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = &v62[-v20];
  __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t *)&v62[-v22];
  uint64_t v24 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v69 = v25;
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_52();
  uint64_t v27 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  OUTLINED_FUNCTION_4();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v32 - v31, a1, v27);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v29 + 88))(v33, v27) != enum case for Parse.directInvocation(_:))
  {
    uint64_t v41 = v70[37];
    uint64_t v42 = v70[38];
    __swift_project_boxed_opaque_existential_1(v70 + 34, v41);
    uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 72))(v41, v42);
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v43 + 192))(v73, v34);
    swift_release();
    uint64_t v44 = v74;
    if (v74)
    {
      uint64_t v45 = v75;
      __swift_project_boxed_opaque_existential_1(v73, v74);
      uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 64))(v44, v45);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    }
    else
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v73, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      uint64_t v46 = 5;
    }
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v27);
    return v46;
  }
  (*(void (**)(uint64_t, uint64_t))(v29 + 96))(v33, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v1, v33, v24);
  static CommonDirectAction.from(_:)(v1, v23);
  uint64_t v35 = v72;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v35);
  uint64_t v36 = v71;
  uint64_t v37 = (uint64_t)&v10[*(int *)(v71 + 48)];
  outlined init with copy of CommonDirectAction?((uint64_t)v23, (uint64_t)v10);
  outlined init with copy of CommonDirectAction?((uint64_t)v21, v37);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v35);
  uint64_t v70 = (void *)v24;
  uint64_t v39 = (uint64_t)v23;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v21, &demangling cache variable for type metadata for CommonDirectAction?);
    OUTLINED_FUNCTION_9_66();
    if (!v40) {
      goto LABEL_11;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v10, &demangling cache variable for type metadata for CommonDirectAction?);
LABEL_23:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v39, &demangling cache variable for type metadata for CommonDirectAction?);
    OUTLINED_FUNCTION_15_48();
    v56();
    return 0;
  }
  long long v47 = v66;
  outlined init with copy of CommonDirectAction?((uint64_t)v10, (uint64_t)v66);
  OUTLINED_FUNCTION_9_66();
  if (!v40)
  {
    uint64_t v54 = v65;
    outlined init with take of CommonDirectAction(v37, v65);
    static CommonDirectAction.__derived_enum_equals(_:_:)((uint64_t)v47, v54);
    int v63 = v55;
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(v54, (void (*)(void))type metadata accessor for CommonDirectAction);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v21, &demangling cache variable for type metadata for CommonDirectAction?);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5((uint64_t)v47, (void (*)(void))type metadata accessor for CommonDirectAction);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v10, &demangling cache variable for type metadata for CommonDirectAction?);
    if ((v63 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v21, &demangling cache variable for type metadata for CommonDirectAction?);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5((uint64_t)v47, (void (*)(void))type metadata accessor for CommonDirectAction);
LABEL_11:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v10, &demangling cache variable for type metadata for (CommonDirectAction?, CommonDirectAction?));
LABEL_12:
  uint64_t v48 = (uint64_t)v67;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v48, 0, 1, v35);
  uint64_t v49 = v68;
  uint64_t v50 = v68 + *(int *)(v36 + 48);
  outlined init with copy of CommonDirectAction?(v39, v68);
  outlined init with copy of CommonDirectAction?(v48, v50);
  if (__swift_getEnumTagSinglePayload(v49, 1, v35) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v48, &demangling cache variable for type metadata for CommonDirectAction?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v39, &demangling cache variable for type metadata for CommonDirectAction?);
    OUTLINED_FUNCTION_15_48();
    v51();
    OUTLINED_FUNCTION_9_66();
    if (!v40) {
      goto LABEL_21;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v49, &demangling cache variable for type metadata for CommonDirectAction?);
  }
  else
  {
    uint64_t v52 = v64;
    outlined init with copy of CommonDirectAction?(v49, v64);
    OUTLINED_FUNCTION_9_66();
    if (v40)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v48, &demangling cache variable for type metadata for CommonDirectAction?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v39, &demangling cache variable for type metadata for CommonDirectAction?);
      OUTLINED_FUNCTION_15_48();
      v53();
      _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(v52, (void (*)(void))type metadata accessor for CommonDirectAction);
LABEL_21:
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v49, &demangling cache variable for type metadata for (CommonDirectAction?, CommonDirectAction?));
      return 5;
    }
    uint64_t v57 = v65;
    outlined init with take of CommonDirectAction(v50, v65);
    static CommonDirectAction.__derived_enum_equals(_:_:)(v52, v57);
    char v59 = v58;
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(v57, (void (*)(void))type metadata accessor for CommonDirectAction);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v48, &demangling cache variable for type metadata for CommonDirectAction?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v39, &demangling cache variable for type metadata for CommonDirectAction?);
    OUTLINED_FUNCTION_15_48();
    v60();
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(v52, (void (*)(void))type metadata accessor for CommonDirectAction);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v49, &demangling cache variable for type metadata for CommonDirectAction?);
    if ((v59 & 1) == 0) {
      return 5;
    }
  }
  return 1;
}

uint64_t PhoneTCCFlowStrategy.makeTCCPrompt(app:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[242] = v0;
  v1[241] = v2;
  v1[235] = v3;
  uint64_t v4 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v4);
  v1[243] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v1[244] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[245] = v6;
  v1[246] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for CommonDirectAction();
  v1[247] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[248] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for YesNoConfirmationModel();
  v1[249] = v8;
  OUTLINED_FUNCTION_11_0(v8);
  v1[250] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for NLContextUpdate();
  v1[251] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[252] = v10;
  v1[253] = OUTLINED_FUNCTION_35();
  uint64_t v11 = type metadata accessor for Locale();
  v1[254] = v11;
  OUTLINED_FUNCTION_19_0(v11);
  v1[255] = v12;
  v1[256] = OUTLINED_FUNCTION_35();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  OUTLINED_FUNCTION_11_0(v13);
  v1[257] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, void *, uint64_t, uint64_t);
  uint64_t v22;

  uint64_t v1 = v0[256];
  uint64_t v2 = v0[255];
  uint64_t v3 = (void *)v0[242];
  uint64_t v19 = v0[241];
  uint64_t v20 = v0[254];
  uint64_t v4 = v3[37];
  uint64_t v5 = v3[38];
  __swift_project_boxed_opaque_existential_1(v3 + 34, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v6 = v3[21];
  uint64_t v7 = v3[22];
  __swift_project_boxed_opaque_existential_1(v3 + 18, v6);
  __swift_project_boxed_opaque_existential_1(v0 + 177, v0[180]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(v19, v1, v6, v7);
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v20);
  if (v9)
  {
    App.isFirstParty()();
    AppDisplayInfo.init(displayName:isFirstParty:)();
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }
  uint64_t v11 = v0[257];
  uint64_t v12 = (void *)v0[242];
  uint64_t v13 = type metadata accessor for AppDisplayInfo();
  __swift_storeEnumTagSinglePayload(v11, v10, 1, v13);
  uint64_t v14 = v12[32];
  uint64_t v15 = v12[33];
  __swift_project_boxed_opaque_existential_1(v12 + 29, v14);
  outlined init with copy of SignalProviding((uint64_t)(v0 + 177), (uint64_t)(v0 + 167));
  uint64_t v21 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v15 + 8) + **(int **)(v15 + 8));
  uint64_t v16 = (void *)swift_task_alloc();
  v0[258] = v16;
  *uint64_t v16 = v0;
  v16[1] = PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  uint64_t v17 = v0[257];
  return v21(v17, v0 + 167, v14, v15);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  uint64_t v4 = v2 + 1336;
  *(void *)(v2 + 2072) = v5;
  *(void *)(v2 + 2080) = v0;
  swift_task_dealloc();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v4, &demangling cache variable for type metadata for DeviceState?);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_18_3();
  specialized static PhoneCallNLContextProvider.makeTCCConfirmationContext(app:)(*(void *)(v0 + 1928));
  swift_asyncLet_begin();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1848, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 1456);
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 2088) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v7;

  uint64_t v1 = v0[248];
  uint64_t v2 = (void *)v0[242];
  v0[262] = v0[231];
  v0[263] = v0[232];
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = v2[37];
  uint64_t v3 = v2[38];
  __swift_project_boxed_opaque_existential_1(v2 + 34, v4);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  swift_bridgeObjectRetain();
  v5(v4, v3);
  v0[264] = CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(v0 + 187);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 187));
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(v1, (void (*)(void))type metadata accessor for CommonDirectAction);
  return _swift_asyncLet_get_throwing(v0 + 2, v0 + 233, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 162);
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 2120) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 1656;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[250];
  (*(void (**)(void, void))(v0[245] + 8))(v0[246], v0[244]);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(v1, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 217));
  return _swift_asyncLet_finish(v0 + 2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 16);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

uint64_t PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v40 = (void *)v10[264];
  uint64_t v38 = v10[263];
  uint64_t v37 = v10[262];
  uint64_t v44 = (void *)v10[259];
  uint64_t v36 = v10[250];
  uint64_t v11 = v10[249];
  uint64_t v12 = v10[248];
  uint64_t v43 = v10[253];
  uint64_t v13 = (void *)v10[242];
  uint64_t v14 = v13 + 34;
  uint64_t v42 = v13 + 34;
  uint64_t v39 = v10[233];
  uint64_t v15 = v10[234];
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v13;
  uint64_t v17 = v13[37];
  uint64_t v16 = v13[38];
  __swift_project_boxed_opaque_existential_1(v14, v17);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain();
  v18(v17, v16);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(v10 + 197);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 197));
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(v12, (void (*)(void))type metadata accessor for CommonDirectAction);
  uint64_t v19 = (void *)(v36 + *(int *)(v11 + 32));
  *uint64_t v19 = 0xD000000000000011;
  v19[1] = 0x8000000000491230;
  v10[229] = v37;
  v10[230] = v38;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v20 = v40;
  CodableAceObject.init(wrappedValue:)();
  v10[227] = v39;
  v10[228] = v15;
  Loggable.init(wrappedValue:)();
  CodableAceObject.init(wrappedValue:)();

  static DialogPhase.confirmation.getter();
  uint64_t v21 = (void *)swift_task_alloc();
  v21[2] = v10 + 177;
  void v21[3] = v36;
  v21[4] = v43;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v22 = v41[37];
  uint64_t v23 = v41[38];
  __swift_project_boxed_opaque_existential_1(v42, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 136))(v22, v23);
  uint64_t v24 = v10[220];
  uint64_t v25 = v10[221];
  __swift_project_boxed_opaque_existential_1(v10 + 217, v24);
  v10[210] = type metadata accessor for PhoneSnippetDataModels();
  v10[211] = lazy protocol witness table accessor for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 207);
  outlined init with copy of YesNoConfirmationModel(v36, (uint64_t)boxed_opaque_existential_1);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_46A030;
  *(void *)(v27 + 32) = v44;
  uint64_t v45 = v27;
  specialized Array._endMutation()();
  v10[266] = v45;
  uint64_t v28 = *(void *)(v25 + 8);
  id v29 = v44;
  uint64_t v32 = (void *)swift_task_alloc();
  v10[267] = v32;
  *uint64_t v32 = v10;
  v32[1] = PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  uint64_t v33 = v10[246];
  uint64_t v34 = v10[235];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v34, v10 + 207, v45, v33, v24, v28, v30, v31, a9, a10);
}

uint64_t PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  uint64_t v13 = *(void *)(v12 + 2056);
  uint64_t v14 = *(void *)(v12 + 2024);
  uint64_t v15 = *(void *)(v12 + 2016);
  uint64_t v16 = *(void *)(v12 + 2008);
  uint64_t v26 = *(void *)(v12 + 1944);

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v13, &demangling cache variable for type metadata for AppDisplayInfo?);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  __swift_destroy_boxed_opaque_existential_1(v12 + 1416);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_4_3();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, v26, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(*(void *)(v12 + 2056), &demangling cache variable for type metadata for AppDisplayInfo?);
  __swift_destroy_boxed_opaque_existential_1(v12 + 1416);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_16_47();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v12, &demangling cache variable for type metadata for AppDisplayInfo?);
  uint64_t v13 = OUTLINED_FUNCTION_18_34();
  v14(v13);
  OUTLINED_FUNCTION_14_42();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_16_47();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v12, &demangling cache variable for type metadata for AppDisplayInfo?);
  uint64_t v13 = OUTLINED_FUNCTION_18_34();
  v14(v13);
  OUTLINED_FUNCTION_14_42();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t implicit closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  return static LabelTemplates.yes()();
}

uint64_t implicit closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
    return v11();
  }
  else
  {
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v13, v14, v15);
  }
}

uint64_t implicit closure #2 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #2 in PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  return static LabelTemplates.no()();
}

uint64_t implicit closure #2 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
    return v11();
  }
  else
  {
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v13, v14, v15);
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);

  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[2];
  *uint64_t v2 = v0[5];
  v2[1] = v1;
  OUTLINED_FUNCTION_6_0();
  return v3();
}

uint64_t closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OutputGenerationManifest.canUseServerTTS.setter();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  dispatch thunk of DeviceState.isCarPlay.getter();
  OutputGenerationManifest.listenAfterSpeaking.setter();
  type metadata accessor for YesNoConfirmationModel();
  swift_bridgeObjectRetain();
  OutputGenerationManifest.responseViewId.setter();
  uint64_t v9 = type metadata accessor for NLContextUpdate();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a4, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v9);
  return OutputGenerationManifest.nlContextUpdate.setter();
}

void PhoneTCCFlowStrategy.__allocating_init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:)()
{
}

void PhoneTCCFlowStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:)()
{
}

uint64_t PhoneTCCFlowStrategy.__ivar_destroyer()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);
  __swift_destroy_boxed_opaque_existential_1(v0 + 232);

  return __swift_destroy_boxed_opaque_existential_1(v0 + 272);
}

uint64_t PhoneTCCFlowStrategy.deinit()
{
  uint64_t v0 = PhoneCallStrategy.deinit();
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);
  __swift_destroy_boxed_opaque_existential_1(v0 + 232);
  __swift_destroy_boxed_opaque_existential_1(v0 + 272);
  return v0;
}

uint64_t PhoneTCCFlowStrategy.__deallocating_deinit()
{
  PhoneTCCFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.handoffTCCFlow(deviceState:) in conformance PhoneTCCFlowStrategy<A1, B1>()
{
  return ClientHandledRequestTCCAcceptanceFlowStrategyAsync.handoffTCCFlow(deviceState:)();
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.actionForInput(input:) in conformance PhoneTCCFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232))();
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.parseTCCConfirmationResponse(input:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 240)
                                                + **(int **)(**(void **)v2 + 240));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeTCCConfirmationRejectedResponse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v3 + 248)
                                                          + **(int **)(**(void **)v3 + 248));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v10(a1, a2, a3);
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeTCCCancelledResponse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v3 + 256)
                                                          + **(int **)(**(void **)v3 + 256));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v10(a1, a2, a3);
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for PhoneTCCFlowStrategy();
  *uint64_t v12 = v6;
  v12[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makePromptForTCCAcceptance(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v3 + 224)
                                                          + **(int **)(**(void **)v3 + 224));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v10(a1, a2, a3);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnEmptyParse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for PhoneTCCFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnEmptyParse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnLowConfidence(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for PhoneTCCFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnLowConfidence(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makePromptForDeviceUnlock(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for PhoneTCCFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return RequestTCCAcceptanceFlowStrategyAsync.makePromptForDeviceUnlock(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makeHandoffForAuthenticationResponse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for PhoneTCCFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return RequestTCCAcceptanceFlowStrategyAsync.makeHandoffForAuthenticationResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t base witness table accessor for RequestTCCAcceptanceFlowStrategyAsync in PhoneTCCFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for PhoneTCCFlowStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PhoneTCCFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1)
{
  return closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_5(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_9_66()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_14_42()
{
  __swift_destroy_boxed_opaque_existential_1(v0);
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_16_47()
{
  uint64_t v2 = *(void **)(v0 + 2072);
}

uint64_t OUTLINED_FUNCTION_18_34()
{
  return v0;
}

unsigned __int8 specialized static PhoneCallNLContextProvider.makeNeedsValueContextFor(parameter:)(uint64_t a1, void *a2)
{
  NLContextUpdate.init()();
  PhoneCallNLConstants.canonicalName.getter(1);
  NLContextUpdate.weightedPromptTargetDomain.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  String.uppercased()();
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_30_6();
  swift_bridgeObjectRelease();
  unint64_t v16 = PhoneCallNLConstants.canonicalName.getter(6);
  uint64_t v17 = v5;
  v6._uint64_t countAndFlagsBits = 0x2E65756C61562ELL;
  v6._object = (void *)0xE700000000000000;
  String.append(_:)(v6);
  Swift::String v7 = String.uppercased()();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 32) = v16;
  *(void *)(v4 + 40) = v17;
  unsigned __int8 result = NLContextUpdate.weightedPromptResponseOptions.setter();
  if (a2)
  {
    swift_bridgeObjectRetain();
    v9._uint64_t countAndFlagsBits = a1;
    v9._object = a2;
    unsigned __int8 result = PhoneCallSlotNames.init(rawValue:)(v9).value;
    if (result - 4 < 2 || result == 19)
    {
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_467720;
      *(void *)(v11 + 32) = PhoneCallNLConstants.canonicalName.getter(3);
      *(void *)(v11 + 40) = v12;
      *(void *)(v11 + 48) = PhoneCallNLConstants.canonicalName.getter(5);
      *(void *)(v11 + 56) = v13;
      NLContextUpdate.weightedPromptResponseTargets.setter();
      NLContextUpdate.weightedPromptStrict.setter();
      specialized static PhoneCallNLContextProvider.makeSDAForNeedsValueForContact()();
      return NLContextUpdate.nluSystemDialogActs.setter();
    }
    else if (result == 10)
    {
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_467710;
      *(void *)(v14 + 32) = PhoneCallNLConstants.canonicalName.getter(7);
      *(void *)(v14 + 40) = v15;
      NLContextUpdate.weightedPromptResponseTargets.setter();
      return NLContextUpdate.weightedPromptStrict.setter();
    }
  }
  return result;
}

PhoneCallFlowDelegatePlugin::PhoneCallSlotNames specialized static PhoneCallNLContextProvider.makeGenericConfirmationContextFor(parameter:)(uint64_t a1, void *a2)
{
  PhoneCallFlowDelegatePlugin::PhoneCallSlotNames result = specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()(a1);
  if (a2)
  {
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = a1;
    v5._object = a2;
    PhoneCallFlowDelegatePlugin::PhoneCallSlotNames result = PhoneCallSlotNames.init(rawValue:)(v5).value;
    if ((result & 0xFE) == 4)
    {
      specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
      return NLContextUpdate.nluSystemDialogActs.setter();
    }
  }
  return result;
}

void specialized static PhoneCallNLContextProvider.needsConfirmationContext(parameter:resolutionResult:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_1();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "#PhoneCallNLContextProvider needsConfirmationContext", v14, 2u);
    OUTLINED_FUNCTION_6();
  }

  specialized static PhoneCallNLContextProvider.makeGenericConfirmationContextFor(parameter:)(v4, v2);
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v4;
  v15._object = v2;
  if ((PhoneCallSlotNames.init(rawValue:)(v15).value & 0xFE) == 4)
  {
    uint64_t v36 = v9;
    uint64_t v16 = NLContextUpdate.weightedPromptResponseTargets.getter();
    if (v16) {
      uint64_t v17 = (void *)v16;
    }
    else {
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    unint64_t v18 = PhoneCallNLConstants.canonicalName.getter(3);
    uint64_t v20 = v19;
    unint64_t v21 = PhoneCallNLConstants.canonicalName.getter(13);
    unint64_t v23 = v17[2];
    unint64_t v24 = v23 + 2;
    if (__OFADD__(v23, 2))
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = v22;
      unint64_t v33 = v18;
      unint64_t v34 = v21;
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v25 = v17, (int64_t)v24 > v17[3] >> 1))
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v25 = v26;
      }
      uint64_t v35 = v7;
      unint64_t v23 = v25[2];
      unint64_t v27 = v25[3];
      unint64_t v24 = v23 + 1;
      swift_bridgeObjectRetain();
      uint64_t v7 = v6;
      if (v23 < v27 >> 1) {
        goto LABEL_14;
      }
    }
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v25 = v31;
LABEL_14:
    void v25[2] = v24;
    uint64_t v28 = &v25[2 * v23];
    v28[4] = v33;
    v28[5] = v20;
    unint64_t v29 = v25[3];
    swift_bridgeObjectRetain();
    if (v24 >= v29 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v25 = v32;
    }
    uint64_t v6 = v7;
    void v25[2] = v23 + 2;
    uint64_t v30 = &v25[2 * v24];
    v30[4] = v34;
    v30[5] = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NLContextUpdate.weightedPromptResponseTargets.setter();
    uint64_t v7 = v35;
    uint64_t v9 = v36;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v6, v0, v7);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v7);
  OUTLINED_FUNCTION_26_1();
}

uint64_t specialized static PhoneCallNLContextProvider.makeSDAForNeedsValueForContact()()
{
  uint64_t v43 = type metadata accessor for Siri_Nlu_External_SystemDialogAct();
  uint64_t v0 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for PhoneError();
  uint64_t v3 = __chkstk_darwin(v37);
  uint64_t v36 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v35 = (char *)v34 - v5;
  uint64_t v38 = type metadata accessor for Logger();
  v34[1] = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  v34[0] = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Siri_Nlu_External_UsoGraph();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_SystemPrompted();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v42 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v34 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UsoTaskBuilder_call_common_PhoneCall();
  swift_allocObject();
  uint64_t v16 = UsoTaskBuilder_call_common_PhoneCall.init()();
  type metadata accessor for UsoEntityBuilder_common_PhoneCall();
  swift_allocObject();
  uint64_t v17 = UsoEntityBuilder_common_PhoneCall.init()();
  type metadata accessor for UsoEntityBuilder_common_Person();
  swift_allocObject();
  UsoEntityBuilder_common_Person.init()();
  dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)();
  unint64_t v18 = v12;
  swift_release();
  uint64_t v39 = v17;
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_46A030;
  *(void *)(v19 + 32) = v16;
  uint64_t v45 = (char *)v19;
  specialized Array._endMutation()();
  uint64_t v20 = type metadata accessor for UsoBuilderOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v20);
  uint64_t v40 = v16;
  swift_retain();
  uint64_t v21 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
  swift_bridgeObjectRelease();
  outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for UsoBuilderOptions?);
  Siri_Nlu_External_SystemPrompted.init()();
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
  Siri_Nlu_External_SystemPrompted.target.setter();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v37 = v21;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v36 = (char *)swift_slowAlloc();
    uint64_t v45 = v36;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v35 = (char *)(v25 + 4);
    swift_beginAccess();
    uint64_t v27 = v41;
    uint64_t v26 = (uint64_t)v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v42, v18, v8);
    uint64_t v28 = specialized String.init(describing:)(v26);
    uint64_t v38 = v8;
    uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, (uint64_t *)&v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v8 = v38;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v22, v23, "#PhoneCallNLContextProvider Returning NLUSystemPrompted for prompt for start call: %s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v27 = v41;
    uint64_t v26 = (uint64_t)v42;
  }
  Siri_Nlu_External_SystemDialogAct.init()();
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v26, v18, v8);
  Siri_Nlu_External_SystemDialogAct.prompted.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  unint64_t v30 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v31 = v18;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_467710;
  (*(void (**)(unint64_t, char *, uint64_t))(v0 + 32))(v32 + v30, v2, v43);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v8);
  return v32;
}

void ParticipantOutputProvider.__allocating_init(sharedGlobals:app:cats:startCallCats:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for CATOption();
  uint64_t v11 = OUTLINED_FUNCTION_11_0(v10);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_4();
  outlined init with copy of SignalProviding(v9, (uint64_t)v30);
  outlined init with copy of SignalProviding(v9, (uint64_t)v28);
  type metadata accessor for PhoneCallDisplayTextCATs();
  OUTLINED_FUNCTION_34_25();
  uint64_t v12 = OUTLINED_FUNCTION_38_23();
  type metadata accessor for PhoneCallCommonCATs();
  OUTLINED_FUNCTION_34_25();
  uint64_t v13 = OUTLINED_FUNCTION_38_23();
  type metadata accessor for AppInfoBuilder();
  uint64_t v14 = swift_allocObject();
  type metadata accessor for StartCallCATs();
  OUTLINED_FUNCTION_34_25();
  Swift::String v15 = (void *)OUTLINED_FUNCTION_38_23();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v16 = OUTLINED_FUNCTION_21_0();
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0xD000000000000010, 0x800000000048C8D0, (uint64_t)v28, v12, v13, v14, 0, 0, 0, 0, (uint64_t)v15, v16, v20, v21[0], v21[1], v21[2], v22, (uint64_t)v23, v24[0],
    v24[1],
    v24[2],
    (uint64_t)v25,
    (uint64_t)v26,
    v27[0]);
  uint64_t v18 = v17;
  uint64_t v29 = 0;
  memset(v28, 0, sizeof(v28));
  type metadata accessor for StartCallCATPatternsExecutor(0);
  OUTLINED_FUNCTION_34_25();
  v27[3] = v15;
  v27[4] = &protocol witness table for StartCallCATPatternsExecutor;
  v27[0] = (void *)OUTLINED_FUNCTION_38_23();
  type metadata accessor for AddCallParticipantCATPatternsExecutor();
  OUTLINED_FUNCTION_34_25();
  uint64_t v25 = v15;
  uint64_t v26 = &protocol witness table for AddCallParticipantCATPatternsExecutor;
  v24[0] = OUTLINED_FUNCTION_38_23();
  uint64_t v19 = type metadata accessor for ResponseFactory();
  OUTLINED_FUNCTION_21_0();
  os_log_type_t v23 = &protocol witness table for ResponseFactory;
  uint64_t v22 = v19;
  v21[0] = ResponseFactory.init()();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, void **, uint64_t *, uint64_t *, unsigned char *))(v1 + 168))(v30, v7, v18, v5, v3, v27, v24, v21, v28);
  __swift_destroy_boxed_opaque_existential_1(v9);
  OUTLINED_FUNCTION_26_1();
}

uint64_t ParticipantOutputProvider.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 32, a1);
}

uint64_t ParticipantOutputProvider.templatingService.getter()
{
  return swift_retain();
}

uint64_t ParticipantOutputProvider.nlContextProvider.getter()
{
  return swift_retain();
}

uint64_t ParticipantOutputProvider.contactsSlotTemplating.getter@<X0>(uint64_t a1@<X8>)
{
  return _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v1 + 264, a1, &demangling cache variable for type metadata for ContactsSlotTemplating<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
}

uint64_t ParticipantOutputProvider.__allocating_init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  ParticipantOutputProvider.init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
    v29,
    vars0);
  return v17;
}

void ParticipantOutputProvider.init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  void (*v39)(unsigned char *__return_ptr, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  long long *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void v61[5];
  unsigned char v62[104];
  long long v63;
  uint64_t v64;

  OUTLINED_FUNCTION_24_0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v60 = v33;
  uint64_t v35 = v34;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v36);
  OUTLINED_FUNCTION_3_1();
  long long v22[2] = 0x73746361746E6F63;
  v22[3] = 0xE800000000000000;
  outlined init with copy of SignalProviding((uint64_t)v35, (uint64_t)(v22 + 4));
  v22[9] = v32;
  v22[10] = v30;
  outlined init with copy of SignalProviding(v28, (uint64_t)(v22 + 11));
  outlined init with copy of SignalProviding(v26, (uint64_t)(v22 + 21));
  outlined init with copy of SignalProviding(v24, (uint64_t)(v22 + 26));
  uint64_t v38 = v35[3];
  uint64_t v37 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v38);
  uint64_t v39 = *(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(v37 + 8);
  swift_retain();
  swift_retain();
  v39(v62, v38, v37);
  uint64_t v40 = v35[3];
  uint64_t v41 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v40);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v41 + 184))(&v63, v40, v41);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  OUTLINED_FUNCTION_21_0();
  uint64_t v42 = specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v62, &v63);
  v22[31] = v60;
  v22[32] = v42;
  uint64_t v43 = v22[8];
  __swift_project_boxed_opaque_existential_1(v22 + 4, v22[7]);
  uint64_t v44 = *(void (**)(uint64_t))(v43 + 8);
  swift_retain();
  uint64_t v45 = OUTLINED_FUNCTION_50_16();
  v44(v45);
  uint64_t v46 = v22[8];
  __swift_project_boxed_opaque_existential_1(v22 + 4, v22[7]);
  long long v47 = *(void (**)(uint64_t))(v46 + 8);
  swift_retain();
  uint64_t v48 = OUTLINED_FUNCTION_50_16();
  v47(v48);
  __swift_project_boxed_opaque_existential_1(v61, v61[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  *(void *)uint64_t v62 = Locale.identifier.getter();
  *(void *)&v62[8] = v49;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v50 = OUTLINED_FUNCTION_30_6();
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11();
  v53();
  uint64_t v54 = type metadata accessor for AppInfoBuilder();
  int v55 = swift_allocObject();
  *(void *)&v62[88] = v54;
  *(void *)&v62[96] = &protocol witness table for AppInfoBuilder;
  *(void *)&v62[64] = v55;
  outlined init with take of AppSelectionSignalComponent(&v63, (uint64_t)v62);
  *(void *)&v62[40] = v30;
  *(void *)&v62[48] = v50;
  *(void *)&v62[56] = v52;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  memcpy(v22 + 33, v62, 0x68uLL);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a21, (uint64_t)&v63, &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
  if (v64)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of UUID?(a21, &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
    uint64_t v56 = (long long *)OUTLINED_FUNCTION_20_37();
    outlined init with take of AppSelectionSignalComponent(v56, (uint64_t)v62);
  }
  else
  {
    App.appIdentifier.getter();
    type metadata accessor for CATGlobals();
    CATGlobals.__allocating_init()();
    uint64_t v57 = type metadata accessor for ContactResolutionSnippetGenerator();
    OUTLINED_FUNCTION_21_0();
    char v58 = ContactResolutionSnippetGenerator.init(appBundleId:globals:)();
    *(void *)&v62[24] = v57;
    *(void *)&v62[32] = &protocol witness table for ContactResolutionSnippetGenerator;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(void *)uint64_t v62 = v58;
    outlined destroy of UUID?(a21, &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
    char v59 = OUTLINED_FUNCTION_20_37();
    outlined destroy of UUID?(v59, &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
  }
  outlined init with take of AppSelectionSignalComponent((long long *)v62, (uint64_t)(v22 + 16));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  OUTLINED_FUNCTION_26_1();
}

uint64_t ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v1[6] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[7] = v6;
  v1[8] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  BOOL v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v8)(BOOL, uint64_t, uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = [*(id *)(v0 + 24) resolutionResultCode] == (char *)&dword_0 + 1;
  uint64_t v3 = v1 + 21;
  uint64_t v4 = v1[24];
  uint64_t v5 = v1[25];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v8 = (uint64_t (*)(BOOL, uint64_t, uint64_t))(*(void *)(v5 + 16) + **(int **)(v5 + 16));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *uint64_t v6 = v0;
  v6[1] = ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:);
  return v8(v2, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 80) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v6();
  }
  else
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v8, v9, v10);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 32);
  static DialogPhase.clarification.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  OUTLINED_FUNCTION_56_16((void *)(v1 + 208));
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v3;
  v2[1] = ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:);
  OUTLINED_FUNCTION_37_25();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v4, v5, v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();

  uint64_t v1 = OUTLINED_FUNCTION_96();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v3();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();

  uint64_t v1 = OUTLINED_FUNCTION_79_2();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

uint64_t closure #1 in ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OutputGenerationManifest.canUseServerTTS.setter();
  OutputGenerationManifest.listenAfterSpeaking.setter();
  specialized static PhoneCallNLContextProvider.makeNeedsValueContextFor(parameter:)(*(void *)(a2 + 16), *(void **)(a2 + 24));
  uint64_t v6 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  return OutputGenerationManifest.nlContextUpdate.setter();
}

uint64_t ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[14] = v2;
  v1[15] = v0;
  v1[12] = v3;
  v1[13] = v4;
  uint64_t v5 = type metadata accessor for ContactResolutionVerb();
  v1[16] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[17] = v6;
  v1[18] = OUTLINED_FUNCTION_28_2();
  v1[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v7);
  v1[20] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for OutputGenerationManifest();
  v1[21] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[22] = v9;
  v1[23] = OUTLINED_FUNCTION_35();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11_0(v10);
  v1[24] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  uint64_t v1 = v0[24];
  uint64_t v2 = (void *)v0[15];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  uint64_t v3 = OUTLINED_FUNCTION_38();
  v4(v3);
  static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(2, v0 + 2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INIntent, INIntentResponse>);
  specialized static PhoneCallNLContextProvider.needsConfirmationContext(parameter:resolutionResult:)();
  static DialogPhase.confirmation.getter();
  *(void *)(swift_task_alloc() + 16) = v1;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v5 = v2[7];
  uint64_t v6 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(v5, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 248))(v7);
  swift_release();
  if (v8)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    uint64_t v10 = Logger.logObject.getter();
    uint64_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "#ParticipantOutputProvider generateYesNoClarificationContactName by using SMART UI", v12, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v13 = v0[19];
    uint64_t v14 = v0[16];
    uint64_t v15 = v0[17];
    uint64_t v16 = v0[15];

    OutputGenerationManifest.responseViewId.setter();
    __swift_project_boxed_opaque_existential_1((void *)(v16 + 128), *(void *)(v16 + 152));
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v13, enum case for ContactResolutionVerb.phoneCallOrFacetimeAudio(_:), v14);
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    v0[25] = v17;
    *uint64_t v17 = v18;
    v17[1] = ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:);
    OUTLINED_FUNCTION_51_15();
    return dispatch thunk of ContactResolutionSnippetGenerating.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:dialogOverride:outputGenerationManifest:)(v0 + 7);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = Logger.logObject.getter();
    uint64_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "#ParticipantOutputProvider generateYesNoClarificationContactName by using crrPatternGenerator", v22, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v24 = v0[17];
    uint64_t v23 = v0[18];
    uint64_t v25 = v0[16];

    type metadata accessor for CATGlobals();
    CATGlobals.__allocating_init()();
    type metadata accessor for ContactResolutionPatternGenerator();
    OUTLINED_FUNCTION_21_0();
    v0[27] = ContactResolutionPatternGenerator.init(appBundleId:globals:)();
    (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v23, enum case for ContactResolutionVerb.facetime(_:), v25);
    uint64_t v26 = (void *)swift_task_alloc();
    v0[28] = v26;
    void *v26 = v0;
    v26[1] = ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:);
    uint64_t v27 = v0[18];
    uint64_t v28 = v0[14];
    return ContactResolutionPatternGenerator.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:)(v28, v27, 0xD000000000000029, 0x800000000049AA10, 0xD000000000000028, 0x800000000049AA40);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 208) = v0;
  swift_task_dealloc();
  uint64_t v7 = OUTLINED_FUNCTION_24_21();
  v8(v7);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 96);
  OUTLINED_FUNCTION_30_28();
  v3();
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 56), v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v7 + 232) = v6;
  *(void *)(v7 + 240) = v0;
  swift_task_dealloc();
  uint64_t v8 = OUTLINED_FUNCTION_24_21();
  v9(v8);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_56_16((void *)(*(void *)(v0 + 120) + 208));
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v0 + 248) = v1;
  *uint64_t v1 = v2;
  v1[1] = ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:);
  OUTLINED_FUNCTION_37_25();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 256) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t (*v4)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_47_22();
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_27_32();
  v2(v1);
  outlined destroy of UUID?(v0, &demangling cache variable for type metadata for NLContextUpdate?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_20_2();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t (*v4)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void *)(v0 + 192);
  OUTLINED_FUNCTION_30_28();
  v2();
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_46_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_20_2();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t (*v5)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_24_21();
  v3(v2);
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_46_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_20_2();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t (*v4)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_47_22();
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_27_32();
  v2(v1);
  outlined destroy of UUID?(v0, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_46_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_20_2();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t closure #1 in ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OutputGenerationManifest.canUseServerTTS.setter();
  OutputGenerationManifest.listenAfterSpeaking.setter();
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a2, (uint64_t)v5, &demangling cache variable for type metadata for NLContextUpdate?);
  return OutputGenerationManifest.nlContextUpdate.setter();
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedOutput(app:intent:intentResolutionResult:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  v1[4] = v5;
  uint64_t v6 = type metadata accessor for PhoneError();
  v1[9] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[10] = OUTLINED_FUNCTION_28_2();
  v1[11] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  unsigned char *v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;

  OUTLINED_FUNCTION_16_1();
  if ([*(id *)(v0 + 56) resolutionResultCode] == (char *)&dword_0 + 1
    && (self, uint64_t v1 = swift_dynamicCastObjCClass(), (*(void *)(v0 + 96) = v1) != 0))
  {
    uint64_t v2 = *(id *)(v0 + 56);
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    *(void *)(v0 + 104) = v3;
    *uint64_t v3 = v4;
    v3[1] = ParticipantOutputProvider.makeContactUnsupportedOutput(app:intent:intentResolutionResult:);
    return ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:)();
  }
  else
  {
    uint64_t v6 = *(unsigned char **)(v0 + 88);
    *uint64_t v6 = 1;
    OUTLINED_FUNCTION_96();
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_9((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v7);
    outlined destroy of PhoneError((uint64_t)v6);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v8();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v1();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  void *v14;
  uint64_t v15;

  uint64_t v14 = v0;
  v0[2] = v0[14];
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_96();
  if (swift_dynamicCast())
  {
    uint64_t v1 = v0[10];
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v2 = type metadata accessor for Logger();
      __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
      uint64_t v3 = Logger.logObject.getter();
      uint64_t v4 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (_DWORD *)swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *uint64_t v5 = 136315138;
        v0[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000040, 0x800000000049AA70, &v13);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_55(&dword_0, v6, v7, "#ParticipantOutputProvider %s Unmigrated dialog, falling back to legacy output");
        OUTLINED_FUNCTION_20_1();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_31_2();
      v0[15] = v8;
      *uint64_t v8 = v9;
      v8[1] = ParticipantOutputProvider.makeContactUnsupportedOutput(app:intent:intentResolutionResult:);
      return ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)();
    }
    outlined destroy of PhoneError(v1);
  }
  uint64_t v11 = (void *)v0[7];
  swift_errorRelease();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v12();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[21] = v2;
  v1[22] = v0;
  v1[19] = v3;
  v1[20] = v4;
  v1[18] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11_0(v6);
  v1[23] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for Logger();
  v1[24] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[25] = v8;
  v1[26] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for TemplatingResult();
  v1[27] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[28] = v10;
  v1[29] = OUTLINED_FUNCTION_28_2();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 264) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  void (*v5)(void);
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t (*v19)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  uint64_t v3 = OUTLINED_FUNCTION_11_57();
  v4(v3);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), *(void *)(v2 + 56));
  OUTLINED_FUNCTION_53_18();
  OUTLINED_FUNCTION_18_35();
  v5();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), *(void *)(v2 + 56));
  OUTLINED_FUNCTION_54_17();
  OUTLINED_FUNCTION_18_35();
  v6();
  uint64_t v7 = OUTLINED_FUNCTION_23_37();
  uint64_t v8 = type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_29_28(v8, v9, v10, v11, v12, v13, v14, v15, v21, v22);
  OUTLINED_FUNCTION_40_22();
  v0[3] = v16;
  v0[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_17_35();
  outlined destroy of UUID?(v2 + 32, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of UUID?(v1 + 56, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1(v7);
  uint64_t v17 = OUTLINED_FUNCTION_33_23();
  v18(v17);
  __swift_destroy_boxed_opaque_existential_1(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v19();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 288) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  void (*v5)(void);
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  uint64_t v3 = OUTLINED_FUNCTION_11_57();
  v4(v3);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), *(void *)(v2 + 56));
  OUTLINED_FUNCTION_53_18();
  OUTLINED_FUNCTION_18_35();
  v5();
  uint64_t v6 = *(void *)(v2 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), v6);
  OUTLINED_FUNCTION_54_17();
  OUTLINED_FUNCTION_18_35();
  v7();
  uint64_t v8 = OUTLINED_FUNCTION_23_37();
  uint64_t v9 = type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_29_28(v9, v10, v11, v12, v13, v14, v15, v16, v22, v23);
  OUTLINED_FUNCTION_40_22();
  v0[3] = v17;
  v0[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_17_35();
  outlined destroy of UUID?(v6, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of UUID?(v1 + 56, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1(v8);
  uint64_t v18 = OUTLINED_FUNCTION_33_23();
  v19(v18);
  __swift_destroy_boxed_opaque_existential_1(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v20();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_48_20();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_20_2();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_48_20();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_20_2();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

void ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v41 = v12;
  uint64_t v13 = (char *)[*(id *)(v12 + 168) unsupportedReason];
  if ((unint64_t)(v13 - 5) >= 2)
  {
    if (v13 == (unsigned char *)&dword_0 + 2)
    {
      uint64_t v23 = (void *)swift_task_alloc();
      *(void *)(v12 + 256) = v23;
      void *v23 = v12;
      v23[1] = ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:);
      OUTLINED_FUNCTION_41_21();
      __asm { BRAA            X2, X16 }
    }
    uint64_t v26 = *(void *)(v12 + 176);
    uint64_t v27 = *(void *)(v12 + 152);
    uint64_t v28 = (int8x16_t *)swift_task_alloc();
    *(void *)(v12 + 272) = v28;
    int8x16_t v29 = *(int8x16_t *)(v12 + 160);
    v28[1].i64[0] = v26;
    v28[1].i64[1] = v27;
    uint64_t v28[2] = vextq_s8(v29, v29, 8uLL);
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v12 + 280) = v30;
    *uint64_t v30 = v12;
    v30[1] = ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:);
    OUTLINED_FUNCTION_51_15();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_41_21();
    withCheckedThrowingContinuation<A>(isolation:function:_:)(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v15 = *(void *)(v12 + 200);
    uint64_t v14 = *(void *)(v12 + 208);
    uint64_t v16 = *(void *)(v12 + 192);
    uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (_DWORD *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *uint64_t v20 = 136315138;
      *(void *)(v12 + 136) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000064, 0x800000000049AC50, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_55(&dword_0, v21, v22, "%s");
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    _assertionFailure(_:_:file:line:flags:)();
    OUTLINED_FUNCTION_41_21();
  }
}

void closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v17 = a3;
  uint64_t v18 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  id v13 = ParticipantOutputProvider.mapToStartCallResolutionResult(_:)(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  specialized ContactsSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(v17, v12, v11, (uint64_t)v13, v18, 0, 1, (uint64_t)partial apply for closure #1 in closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:), v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,
    v26,
    v27);
  swift_release();
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[7] = v2;
  v1[8] = v0;
  v1[6] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[9] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[10] = OUTLINED_FUNCTION_35();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[11] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v6);
  v1[12] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for OutputGenerationManifest();
  v1[13] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[14] = v8;
  v1[15] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for NLContextUpdate();
  v1[16] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[17] = v10;
  v1[18] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  uint64_t v25 = v0;
  uint64_t v1 = (char *)[*(id *)(v0 + 56) unsupportedReason];
  if (v1 == (unsigned char *)&dword_0 + 2)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v2 + 200);
    OUTLINED_FUNCTION_56_16((void *)(v2 + 168));
    uint64_t v22 = (uint64_t (*)(uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v4;
    *uint64_t v4 = v0;
    v4[1] = ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:);
    uint64_t v5 = OUTLINED_FUNCTION_38();
    return v22(v5);
  }
  else
  {
    uint64_t v7 = v1;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    uint64_t v9 = Logger.logObject.getter();
    uint64_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      *(void *)(v0 + 16) = v7;
      *(unsigned char *)(v0 + 24) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantParticipantUnsupportedReason?);
      uint64_t v12 = String.init<A>(describing:)();
      *(void *)(v0 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v9, v10, "#ParticipantOutputProvider makeContactUnsupportedOutput: the dialog for %s hasn't been migrated to Response Framework.", v11, 0xCu);
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    unint64_t v14 = *(void **)(v0 + 80);
    uint64_t v15 = *(void **)(v0 + 56);
    uint64_t v23 = 0;
    uint64_t v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(79);
    v16._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    v16._object = (void *)0x800000000049ACC0;
    String.append(_:)(v16);
    *(void *)(v0 + 32) = [v15 unsupportedReason];
    v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._object = (void *)0x800000000049AD00;
    v18._uint64_t countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v18);
    uint64_t v19 = v24;
    *unint64_t v14 = v23;
    v14[1] = v19;
    v14[2] = 0xD00000000000003BLL;
    v14[3] = 0x800000000049AD20;
    v14[4] = 0xD000000000000042;
    void v14[5] = 0x800000000049AD60;
    v14[6] = 198;
    OUTLINED_FUNCTION_38();
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_9((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v20);
    outlined destroy of PhoneError((uint64_t)v14);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v21();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 160) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_20_2();
    return v7(v6, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_20_2();
    return _swift_task_switch(v15, v16, v17);
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[8];
  specialized static PhoneCallNLContextProvider.makeNeedsValueContextFor(parameter:)(0x73746361746E6F63, (void *)0xE800000000000000);
  static DialogPhase.clarification.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v3);
  OutputGenerationManifest.nlContextUpdate.setter();
  OUTLINED_FUNCTION_56_16((void *)(v5 + 208));
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v0[21] = v6;
  *uint64_t v6 = v7;
  v6[1] = ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:);
  OUTLINED_FUNCTION_37_25();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v8, v9, v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = OUTLINED_FUNCTION_96();
  v5(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v6();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = OUTLINED_FUNCTION_96();
  v5(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v6();
}

id ParticipantOutputProvider.mapToStartCallResolutionResult(_:)(void *a1)
{
  uint64_t v2 = (int *)[a1 unsupportedReason];
  if (v2 == &dword_4) {
    uint64_t v3 = 4;
  }
  else {
    uint64_t v3 = 1;
  }
  if (v2 == (int *)((char *)&dword_0 + 3)) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = v3;
  }
  type metadata accessor for INStartCallContactResolutionResult();
  id v5 = [a1 alternatives];
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return @nonobjc INStartCallContactResolutionResult.__allocating_init(unsupportedWithReason:alternativeItems:)(v4);
}

id @nonobjc INStartCallContactResolutionResult.__allocating_init(unsupportedWithReason:alternativeItems:)(uint64_t a1)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [(id)swift_getObjCClassFromMetadata() resolutionResultUnsupportedWithReason:a1 alternativeItems:isa];

  return v3;
}

uint64_t ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[22] = v2;
  v1[23] = v0;
  v1[20] = v3;
  v1[21] = v4;
  v1[18] = v5;
  v1[19] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11_0(v7);
  v1[24] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for NLContextUpdate();
  v1[25] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[26] = v9;
  v1[27] = OUTLINED_FUNCTION_35();
  uint64_t v10 = type metadata accessor for TemplatingResult();
  v1[28] = v10;
  OUTLINED_FUNCTION_19_0(v10);
  v1[29] = v11;
  v1[30] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 264) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  int8x16_t *v0;
  int8x16_t *v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[17].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[11], v0[11], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:);
  OUTLINED_FUNCTION_51_15();
  OUTLINED_FUNCTION_22_45();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 304) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(uint64_t **)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 32), *(void *)(v3 + 56));
  uint64_t v5 = OUTLINED_FUNCTION_35_30();
  v6(v5);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 32), *(void *)(v3 + 56));
  uint64_t v7 = OUTLINED_FUNCTION_35_30();
  v8(v7);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v15, v14);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v14);
  uint64_t v9 = type metadata accessor for AceOutput();
  *(_OWORD *)(v0 + 112) = 0u;
  *(void *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 96) = 0u;
  void v4[3] = v9;
  long long v4[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v4);
  static AceOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + 96, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of UUID?(v2, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);
  OUTLINED_FUNCTION_11();
  v11(v10);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v12();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

{
  void (*v0)(void);
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_30_28();
  v0();
  uint64_t v1 = OUTLINED_FUNCTION_79_2();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

uint64_t ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v13 = *(void *)(v12 + 184);
  uint64_t v15 = *(void *)(v12 + 152);
  uint64_t v14 = *(void *)(v12 + 160);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v12 + 248) = v16;
  long long v17 = *(_OWORD *)(v12 + 168);
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v15;
  *(_OWORD *)(v16 + 32) = v17;
  *(void *)(v16 + 48) = v14;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v12 + 256) = v18;
  *uint64_t v18 = v12;
  v18[1] = ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:);
  OUTLINED_FUNCTION_51_15();
  OUTLINED_FUNCTION_22_45();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  int8x16_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  OUTLINED_FUNCTION_16_1();
  uint64_t v13 = swift_task_alloc();
  *(void *)(v12 + 288) = v13;
  uint64_t v14 = vextq_s8(*(int8x16_t *)(v12 + 176), *(int8x16_t *)(v12 + 176), 8uLL);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(v12 + 152);
  *(int8x16_t *)(v13 + 32) = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v12 + 296) = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v15 = v12;
  v15[1] = ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v12 + 136, 0, 0, 0xD000000000000056, 0x800000000049AAC0, partial apply for closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:), v13, v16, a9, a10, a11, a12);
}

uint64_t closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a4;
  uint64_t v28 = a6;
  uint64_t v26 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v24 = a2[2];
  uint64_t v25 = a2 + 33;
  uint64_t v23 = a2[3];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  __swift_project_boxed_opaque_existential_1(a2 + 4, v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v29, v12, v13);
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  LOBYTE(v12) = DeviceState.isAuthenticatedForPhone.getter();
  uint64_t v14 = (void *)a2[31];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                              + *v14
                                                                              + 216))(a5, partial apply for closure #1 in closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:), v16);
  uint64_t v19 = v18;
  swift_release();
  specialized ContactsSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(v26, v24, v23, v27, a5, v12 & 1, v28, v17, v19, v21, v22, v23, v24, (uint64_t)v25, v26, v27, v28, v29[0], v29[1],
    v29[2]);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

uint64_t closure #1 in closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_1();
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, v1, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate, Never>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)a2[32];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = SiriKitDisambiguationList.rawItems.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t))(class metadata base offset for PhoneCallNLContextProvider
                                                                            + *v7
                                                                            + 40))(v9, v8, v10, partial apply for closure #1 in closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:), v12);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NLContextUpdate();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate, Never>);
  return CheckedContinuation.resume(returning:)();
}

uint64_t closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v27 = a3;
  uint64_t v28 = a5;
  uint64_t v26 = a2;
  uint64_t v29 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = type metadata accessor for CATOption();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = a4[3];
  uint64_t v25 = a4[2];
  uint64_t v11 = (uint64_t)(a4 + 4);
  uint64_t v12 = a4[7];
  uint64_t v13 = a4[8];
  __swift_project_boxed_opaque_existential_1(a4 + 4, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v30, v12, v13);
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  int v24 = DeviceState.isAuthenticatedForPhone.getter();
  type metadata accessor for PhoneCallDisplayTextCATs();
  static CATOption.defaultMode.getter();
  uint64_t v14 = CATWrapper.__allocating_init(options:globals:)();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "#StartCallViewBuilders Providing DefaultDisambiguationBuilder", v18, 2u);
    swift_slowDealloc();
  }

  outlined init with copy of SignalProviding(v11, (uint64_t)v33);
  v31[0] = v26;
  v31[1] = v27;
  v31[2] = v25;
  v31[3] = v10;
  v31[4] = v28;
  char v32 = v24 & 1;
  v33[5] = v14;
  swift_retain();
  id v19 = v27;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(&v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v29, v6);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v21 + v20, &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v6);
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)((unint64_t)_swiftEmptyArrayStorage, (void (*)(void, void))partial apply for closure #1 in closure #1 in ContactUnsetRelationshipFlowStrategy.makeMeCardNotFoundResponse(requestedRelationship:resolveRecord:), v21);
  swift_release();
  return outlined destroy of UUID?((uint64_t)v31, &demangling cache variable for type metadata for DefaultDisambiguationBuilder<INAddCallParticipantIntent>);
}

uint64_t ParticipantOutputProvider.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  swift_release();
  swift_release();
  outlined destroy of UUID?(v0 + 264, &demangling cache variable for type metadata for ContactsSlotTemplating<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  return v0;
}

uint64_t ParticipantOutputProvider.__deallocating_deinit()
{
  ParticipantOutputProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ResolveContactOutputProviding.makePromptForContactOutput(app:intent:intentResolutionResult:) in conformance ParticipantOutputProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 176)
                                                                   + **(int **)(**(void **)v4 + 176));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v12(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveContactOutputProviding.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:) in conformance ParticipantOutputProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v5 + 184)
                                                                            + **(int **)(**(void **)v5 + 184));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for ResolveContactOutputProviding.makeContactUnsupportedOutput(app:intent:intentResolutionResult:) in conformance ParticipantOutputProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 192)
                                                                   + **(int **)(**(void **)v4 + 192));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v12(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveContactOutputProviding.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:) in conformance ParticipantOutputProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v5 + 224)
                                                                            + **(int **)(**(void **)v5 + 224));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v14(a1, a2, a3, a4, a5);
}

void specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  void (*v52)(long long *__return_ptr, uint64_t, uint64_t);
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void v67[7];
  long long v68[2];
  void v69[5];
  void v70[6];

  OUTLINED_FUNCTION_24_0();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v66 = v30;
  uint64_t v65 = v31;
  uint64_t v33 = v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  uint64_t v35 = OUTLINED_FUNCTION_11_0(v34);
  __chkstk_darwin(v35);
  OUTLINED_FUNCTION_3_1();
  uint64_t v64 = v36;
  int v63 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v38 = v37;
  __chkstk_darwin(v39);
  OUTLINED_FUNCTION_4();
  uint64_t v42 = v41 - v40;
  v70[3] = type metadata accessor for AppInfoBuilder();
  v70[4] = &protocol witness table for AppInfoBuilder;
  v70[0] = v29;
  v69[3] = &type metadata for LabelTemplatesProvider;
  v69[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v43 = (void *)swift_allocObject();
  v69[0] = v43;
  v43[2] = v27;
  v43[3] = v25;
  v43[4] = a21;
  v43[5] = a22;
  uint64_t v44 = (void *)((char *)a24
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a24 + 16));
  *uint64_t v44 = 0x3D65737561705C1BLL;
  v44[1] = 0xEC0000005C303532;
  OUTLINED_FUNCTION_1_45();
  uint64_t v46 = (char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v45 + 56);
  *(_OWORD *)uint64_t v46 = 0u;
  *((_OWORD *)v46 + 1) = 0u;
  *((void *)v46 + 4) = 0;
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SignalProviding((uint64_t)v33, (uint64_t)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v47 + 72));
  uint64_t v48 = v33[3];
  uint64_t v49 = v33[4];
  uint64_t v50 = (void *)OUTLINED_FUNCTION_38();
  __swift_project_boxed_opaque_existential_1(v50, v51);
  uint64_t v52 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v49 + 8);
  swift_retain();
  v52(v68, v48, v49);
  uint64_t v53 = (void *)((char *)a24
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a24 + 40));
  outlined init with take of AppSelectionSignalComponent(v68, (uint64_t)v53);
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v54 + 24)) = v65;
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v55 + 32)) = v66;
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SignalProviding((uint64_t)v70, (uint64_t)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v56 + 48));
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SignalProviding((uint64_t)v69, (uint64_t)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v57 + 64));
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v58 + 80)) = a23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v53, v53[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  *(void *)&v68[0] = Locale.identifier.getter();
  *((void *)&v68[0] + 1) = v59;
  v67[0] = 45;
  v67[1] = 0xE100000000000000;
  v67[5] = 95;
  v67[6] = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v63);
  type metadata accessor for INIntentSlotValueType(0);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_9(&lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType, type metadata accessor for INIntentSlotValueType);
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v60 = v33[3];
  uint64_t v61 = v33[4];
  __swift_project_boxed_opaque_existential_1(v33, v60);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 24))(v68, v60, v61);
  outlined init with copy of SignalProviding((uint64_t)v53, (uint64_t)v67);
  uint64_t v62 = type metadata accessor for DucTemplatingLocalContext();
  __swift_storeEnumTagSinglePayload(v64, 1, 1, v62);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  OUTLINED_FUNCTION_26_1();
}

uint64_t partial apply for closure #1 in ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)(uint64_t a1)
{
  return closure #1 in ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)(a1, v1);
}

uint64_t partial apply for closure #1 in ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)(uint64_t a1)
{
  return closure #1 in ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)(a1, *(void *)(v1 + 16));
}

uint64_t partial apply for closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1)
{
  return closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t partial apply for closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1)
{
  return closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(a1, *(void **)(v1 + 16));
}

uint64_t partial apply for closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(uint64_t a1)
{
  return closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

_UNKNOWN **associated type witness table accessor for ResolveContactOutputProviding.IntentType : NCRResolvableIntent in ParticipantOutputProvider()
{
  return &protocol witness table for INAddCallParticipantIntent;
}

uint64_t type metadata accessor for ParticipantOutputProvider()
{
  return self;
}

unint64_t type metadata accessor for INStartCallContactResolutionResult()
{
  unint64_t result = lazy cache variable for type metadata for INStartCallContactResolutionResult;
  if (!lazy cache variable for type metadata for INStartCallContactResolutionResult)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for INStartCallContactResolutionResult);
  }
  return result;
}

uint64_t sub_32C494()
{
  return objectdestroyTm_18(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
}

uint64_t sub_32C4A0()
{
  return objectdestroyTm_18(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate, Never>);
}

uint64_t partial apply for closure #1 in closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate, Never>);
  OUTLINED_FUNCTION_13(v0);
  uint64_t v1 = OUTLINED_FUNCTION_49_18();

  return closure #1 in closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)(v1);
}

uint64_t sub_32C4F4()
{
  return objectdestroyTm_18(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

void partial apply for closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)(uint64_t a1)
{
  closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_32C510()
{
  return objectdestroyTm_18(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

uint64_t objectdestroyTm_18(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_15();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80) | 7;
  OUTLINED_FUNCTION_11();
  v3();
  uint64_t v4 = OUTLINED_FUNCTION_96();

  return _swift_deallocObject(v4, v5, v2);
}

uint64_t partial apply for closure #1 in closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  OUTLINED_FUNCTION_13(v0);
  uint64_t v1 = OUTLINED_FUNCTION_49_18();
  return closure #1 in closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)(v1);
}

uint64_t sub_32C5D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_9(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_11_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_35()
{
  return static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t OUTLINED_FUNCTION_20_37()
{
  __swift_destroy_boxed_opaque_existential_1(*(void *)(v0 - 328));
  __swift_destroy_boxed_opaque_existential_1(*(void *)(v0 - 320));
  __swift_destroy_boxed_opaque_existential_1(*(void *)(v0 - 312));
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_23_37()
{
  __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 80));
  return dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
}

uint64_t OUTLINED_FUNCTION_29_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __swift_storeEnumTagSinglePayload(a10, 1, 1, a1);
  return type metadata accessor for AceOutput();
}

uint64_t OUTLINED_FUNCTION_33_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_25()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_35_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_23()
{
  return CATWrapper.__allocating_init(options:globals:)();
}

uint64_t OUTLINED_FUNCTION_46_19()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_47_22()
{
  uint64_t v2 = *(void **)(v0 + 232);
}

uint64_t OUTLINED_FUNCTION_48_20()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_49_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_16()
{
  return v0;
}

void *OUTLINED_FUNCTION_56_16(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(AddCallParticipantHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:), 0, 0);
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  type metadata accessor for EmptyOutput();
  static EmptyOutput.instance.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[19] = v2;
  v1[20] = v0;
  v1[18] = v3;
  type metadata accessor for DialogPhase();
  v1[21] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  v1[22] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[23] = v5;
  v1[24] = OUTLINED_FUNCTION_35();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[25] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for Locale();
  v1[26] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[27] = v7;
  v1[28] = OUTLINED_FUNCTION_35();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  v1[29] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[30] = v9;
  v1[31] = OUTLINED_FUNCTION_35();
  return _swift_task_switch(AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:), 0, 0);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = v0[24];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[19];
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    uint64_t v9 = IntentResolutionRecord.intentResponse.getter();
    v0[17] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v51 = v9;
    uint64_t v10 = OUTLINED_FUNCTION_24_33();
    v11(v10);
    _os_log_impl(&dword_0, v6, v7, "#AddCallParticipantHandleIntentFlowStrategy Received failure = %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_24_33();
    v13(v12);
  }

  uint64_t v14 = (void *)v0[20];
  uint64_t v15 = v14[5];
  uint64_t v16 = v14[6];
  __swift_project_boxed_opaque_existential_1(v14 + 2, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 120))(v15, v16);
  uint64_t v17 = v0[5];
  uint64_t v18 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v17);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18))
  {
    swift_getObjectType();
    uint64_t v19 = SPHCall.toPhoneCallRecord()();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  v0[32] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  unint64_t v20 = (void *)IntentResolutionRecord.intent.getter();
  unint64_t v21 = outlined bridged method (ob) of @objc INAddCallParticipantIntent.participants.getter(v20);
  uint64_t v52 = v14 + 2;
  if (v21)
  {
    unint64_t v22 = v21;
    if (v21 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_12;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_12:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v22 & 0xC000000000000001) == 0);
      if ((v22 & 0xC000000000000001) != 0) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(v22 + 32);
      }
      uint64_t v24 = v23;
      uint64_t v25 = v0 + 7;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v25 = v0 + 7;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = v0 + 7;
  }
  uint64_t v24 = 0;
LABEL_19:
  uint64_t v26 = v0[28];
  uint64_t v27 = v0[26];
  uint64_t v28 = v0[27];
  type metadata accessor for PhonePerson(0);
  uint64_t v30 = v14[5];
  uint64_t v29 = v14[6];
  __swift_project_boxed_opaque_existential_1(v52, v30);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v29);
  __swift_project_boxed_opaque_existential_1(v25, v0[10]);
  dispatch thunk of DeviceState.siriLocale.getter();
  v0[33] = static PhonePerson.make(phonePerson:options:locale:)(v24, 0, v26);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  uint64_t v31 = (void *)IntentResolutionRecord.intentResponse.getter();
  id v32 = [v31 code];

  switch((unint64_t)v32)
  {
    case 6uLL:
    case 0xDuLL:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v33 = (__n128 *)OUTLINED_FUNCTION_93();
      v0[34] = v33;
      OUTLINED_FUNCTION_22_46(v33, (__n128)xmmword_46A030);
      uint64_t v34 = (void *)swift_task_alloc();
      v0[35] = v34;
      *uint64_t v34 = v0;
      v34[1] = AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
      OUTLINED_FUNCTION_27_3();
      __asm { BRAA            X3, X16 }
      return;
    case 8uLL:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v43 = (__n128 *)OUTLINED_FUNCTION_93();
      v0[38] = v43;
      OUTLINED_FUNCTION_22_46(v43, (__n128)xmmword_46A030);
      uint64_t v44 = (void *)swift_task_alloc();
      v0[39] = v44;
      *uint64_t v44 = v0;
      v44[1] = AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
      OUTLINED_FUNCTION_27_3();
      __asm { BRAA            X2, X16 }
      return;
    case 9uLL:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v47 = (__n128 *)OUTLINED_FUNCTION_93();
      v0[42] = v47;
      OUTLINED_FUNCTION_22_46(v47, (__n128)xmmword_46A030);
      uint64_t v48 = (void *)swift_task_alloc();
      v0[43] = v48;
      *uint64_t v48 = v0;
      v48[1] = AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
      OUTLINED_FUNCTION_27_3();
      __asm { BRAA            X4, X16 }
      return;
    default:
      uint64_t v37 = v0[25];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v38 = OUTLINED_FUNCTION_93();
      v0[46] = v38;
      *(_OWORD *)(v38 + 16) = xmmword_46A030;
      uint64_t v39 = type metadata accessor for SpeakableString();
      __swift_storeEnumTagSinglePayload(v37, 1, 1, v39);
      uint64_t v40 = (void *)swift_task_alloc();
      v0[47] = v40;
      void *v40 = v0;
      v40[1] = AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
      OUTLINED_FUNCTION_27_3();
      __asm { BRAA            X3, X16 }
      return;
  }
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_8_27();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 288) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 296) = a1;
  }
  OUTLINED_FUNCTION_7_27();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_8_27();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 320) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 328) = a1;
  }
  OUTLINED_FUNCTION_7_27();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_8_27();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 352) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 360) = a1;
  }
  OUTLINED_FUNCTION_7_27();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  *(void *)(v5 + 384) = v1;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v4 + 200);
  if (v1)
  {
    outlined destroy of SpeakableString?(v7);
    uint64_t v8 = AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
  }
  else
  {
    *(void *)(v5 + 392) = a1;
    outlined destroy of SpeakableString?(v7);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
  }
  return _swift_task_switch(v8, 0, 0);
}

#error "32D4A4: call analysis failed (funcsize=51)"

#error "32D658: call analysis failed (funcsize=51)"

#error "32D80C: call analysis failed (funcsize=51)"

#error "32DA14: call analysis failed (funcsize=51)"

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_7_73(*(void *)(v10 + 304));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_43();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_7_73(*(void *)(v10 + 336));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_43();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_7_73(*(void *)(v10 + 368));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_43();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_40();
  OUTLINED_FUNCTION_40_0();
  *(void *)(*(void *)(v10 + 272) + 16) = 0;
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_43();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.authenticationPolicy.getter in conformance AddCallParticipantHandleIntentFlowStrategy()
{
  return HandleIntentFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 104)
                                                + **(int **)(**(void **)v2 + 104));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 112)
                                                + **(int **)(**(void **)v2 + 112));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v8(a1, a2);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance AddCallParticipantHandleIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for Flow.onAsync(input:) in conformance RedirectToCompanionFlow;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t outlined bridged method (ob) of @objc INAddCallParticipantIntent.participants.getter(void *a1)
{
  id v2 = [a1 participants];

  if (!v2) {
    return 0;
  }
  type metadata accessor for INPerson();
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for AddCallParticipantHandleIntentFlowStrategy()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_1_88()
{
  uint64_t v2 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_3_91()
{
  return *(void *)(v0 + 144);
}

uint64_t OUTLINED_FUNCTION_4_84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 400) = a10;
  return static DialogPhase.completion.getter();
}

uint64_t OUTLINED_FUNCTION_7_73(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_11_58()
{
  return OutputGenerationManifest.init(dialogPhase:_:)();
}

uint64_t OUTLINED_FUNCTION_12_50@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 32) = a1;
  return specialized Array._endMutation()();
}

__n128 *OUTLINED_FUNCTION_22_46(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_33()
{
  return v0;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySSG_SSs5NeverOTg5242_s27PhoneCallFlowDelegatePlugin0a21AppResolutionOnDeviceC8StrategyC012executeSmartF12SelectAction014_2180D48ACD6B0Q17EE181017F885BCBA5LL05phoneB8NLIntent14recommendation07SiriKitC00fgN0CSgAA0abV0_p_0X9Inference0F14ResolverResultOtYaFS2SXEfU1_0fghI6Plugin0fklmnhP0CTf1cn_n(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a2 + 296) + 248);
      swift_bridgeObjectRetain();
      uint64_t v9 = v8(v6, v7);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      if (v12 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v5 += 2;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      void v13[4] = v9;
      void v13[5] = v11;
      --v3;
    }
    while (v3);
  }
  swift_release();
  return _swiftEmptyArrayStorage;
}

uint64_t specialized Sequence.first(where:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        OUTLINED_FUNCTION_80_5();
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(a1 + 8 * v7);
        swift_retain();
      }
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      OUTLINED_FUNCTION_22();
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 264))(v8, a3, a4))
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      swift_release();
      ++v7;
      if (v9 == v6) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t specialized Sequence.first(where:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = a1 & 0xC000000000000001;
    uint64_t v7 = 4;
    while (1)
    {
      if (v6)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(a1 + 8 * v7);
        swift_retain();
      }
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      uint64_t v10 = App.appIdentifier.getter();
      if (v11)
      {
        if (a3)
        {
          if (v10 == a2 && v11 == a3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_23:
            swift_bridgeObjectRelease();
            return v8;
          }
          unint64_t v13 = v6;
          uint64_t v14 = v5;
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_22;
          }
          swift_release();
          uint64_t v5 = v14;
          unint64_t v6 = v13;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (!a3)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        swift_release();
      }
      ++v7;
      if (v9 == v5) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t specialized static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_SystemDialogAct();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v42 - v9;
  uint64_t v10 = type metadata accessor for Siri_Nlu_External_SystemGaveOptions();
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v49 = (char *)&v42 - v14;
  uint64_t v15 = type metadata accessor for NLContextUpdate();
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppInfoBuilder();
  swift_initStackObject();
  unint64_t v52 = a1;
  uint64_t v53 = a2;
  specialized static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)();
  NLContextUpdate.init()();
  PhoneCallNLConstants.canonicalName.getter(1);
  NLContextUpdate.weightedPromptTargetDomain.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_46A250;
  if (one-time initialization token for appName != -1) {
    swift_once();
  }
  *(void *)(v18 + 32) = TerminalOntologyNode.name.getter();
  *(void *)(v18 + 40) = v19;
  if (one-time initialization token for reference != -1) {
    swift_once();
  }
  *(void *)(v18 + 48) = TerminalOntologyNode.name.getter();
  *(void *)(v18 + 56) = v20;
  if (one-time initialization token for confirmation != -1) {
    swift_once();
  }
  *(void *)(v18 + 64) = TerminalOntologyNode.name.getter();
  *(void *)(v18 + 72) = v21;
  NLContextUpdate.weightedPromptResponseTargets.setter();
  uint64_t v22 = swift_allocObject();
  long long v44 = xmmword_467710;
  *(_OWORD *)(v22 + 16) = xmmword_467710;
  Swift::String v57 = String.uppercased()();
  uint64_t v55 = 32;
  unint64_t v56 = 0xE100000000000000;
  uint64_t v58 = 95;
  unint64_t v59 = 0xE100000000000000;
  v41[0] = &type metadata for String;
  v41[1] = lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = PhoneCallNLConstants.canonicalName.getter(6);
  v57._object = v23;
  v24._uint64_t countAndFlagsBits = 0x2E65756C61562ELL;
  v24._object = (void *)0xE700000000000000;
  String.append(_:)(v24);
  Swift::String v25 = String.uppercased()();
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  object = v57._object;
  *(void *)(v22 + 32) = v57._countAndFlagsBits;
  *(void *)(v22 + 40) = object;
  NLContextUpdate.weightedPromptResponseOptions.setter();
  NLContextUpdate.weightedPromptStrict.setter();
  uint64_t v27 = NLContextUpdate.displayHints.setter();
  __chkstk_darwin(v27);
  v41[2] = v53;
  v41[3] = v45;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay17SiriAppResolution0E0CG_0D8NLUTypes0D27_Nlu_External_UserDialogActVs5NeverOTg5((void (*)(uint64_t *))partial apply for specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:), (uint64_t)v41, v52);
  uint64_t v28 = v49;
  Siri_Nlu_External_SystemGaveOptions.init()();
  Siri_Nlu_External_SystemGaveOptions.choices.setter();
  uint64_t v29 = v54;
  Siri_Nlu_External_SystemDialogAct.init()();
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v13, v28, v51);
  Siri_Nlu_External_SystemDialogAct.gaveOptions.setter();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    v57._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315138;
    swift_beginAccess();
    uint64_t v34 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v43, v54, v5);
    uint64_t v35 = specialized String.init(describing:)(v34);
    uint64_t v58 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v57._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v31, v32, "#PhoneCallNLContextProvider makeNLContextUpdateForDisambiguation: sending disambiguation system dialog acts: %s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v29 = v54;
    swift_slowDealloc();
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  unint64_t v37 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v44;
  unint64_t v39 = v38 + v37;
  swift_beginAccess();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 16))(v39, v29, v5);
  NLContextUpdate.nluSystemDialogActs.setter();
  static PhoneReferenceResolution.appsToRrEntities(apps:device:)(v52, v53);
  NLContextUpdate.rrEntities.setter();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v48, v17, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v29, v5);
}

uint64_t specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v50 = a3;
  uint64_t v45 = type metadata accessor for PhoneError();
  uint64_t v4 = __chkstk_darwin(v45);
  long long v44 = (uint64_t *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)&v40 - v6;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Siri_Nlu_External_UsoGraph();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for Siri_Nlu_External_UserStatedTask();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v40 - v18;
  Siri_Nlu_External_UserStatedTask.init()();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  uint64_t v20 = v49;
  static PhoneCallNLContextProvider.createUsoGraph(for:locale:)();
  if (v20)
  {
    uint64_t v23 = v41;
    uint64_t v22 = v42;
    uint64_t v24 = (uint64_t)v43;
    Swift::String v25 = v44;
    uint64_t v26 = v40;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v27, v22);
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIRINLUUserWantedToProceed.Type);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIRINLUUserWantedToProceed.Type.Type);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v30 = v29;
    swift_getErrorValue();
    uint64_t v31 = Error.localizedDescription.getter();
    *Swift::String v25 = v28;
    v25[1] = v30;
    void v25[2] = v31;
    v25[3] = v32;
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v24;
    PhoneError.logged()(v24);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6((uint64_t)v25, (void (*)(void))type metadata accessor for PhoneError);
    _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
    uint64_t v34 = Error.localizedDescription.getter();
    unint64_t v36 = v35;
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6(v33, (void (*)(void))type metadata accessor for PhoneError);
    swift_bridgeObjectRetain_n();
    unint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      *(_DWORD *)unint64_t v39 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v37, v38, "%s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
    Siri_Nlu_External_UserStatedTask.task.setter();
    Siri_Nlu_External_UserDialogAct.init()();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    Siri_Nlu_External_UserDialogAct.userStatedTask.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  return result;
}

void *specialized Sequence.compactMap<A>(_:)(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  uint64_t v41 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v7 - 8);
  uint64_t v39 = (uint64_t)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SpeakableString();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  os_log_type_t v38 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v30 = (char *)v29 - v12;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v13 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    v29[1] = v3;
    unint64_t v37 = a1 & 0xC000000000000001;
    uint64_t v34 = v42 + 9;
    unint64_t v35 = v42 + 25;
    uint64_t v32 = (void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    uint64_t v33 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t v15 = 4;
    uint64_t v36 = v13;
    while (1)
    {
      uint64_t v5 = v15 - 4;
      if (v37) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v16 = v15 - 3;
      if (__OFADD__(v5, 1)) {
        break;
      }
      uint64_t v45 = v14;
      unint64_t v17 = a1;
      uint64_t v18 = v42[28];
      uint64_t v19 = v42[29];
      __swift_project_boxed_opaque_existential_1(v35, v18);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v43, v18, v19);
      uint64_t v3 = v44;
      __swift_project_boxed_opaque_existential_1(v43, (uint64_t)v44);
      uint64_t v20 = v9;
      uint64_t v21 = (uint64_t)v40;
      dispatch thunk of DeviceState.siriLocale.getter();
      uint64_t v22 = v39;
      App.toSpeakableStringAppName(forLocale:appInfoBuilder:)(v21, v34, v39);
      uint64_t v23 = v21;
      uint64_t v9 = v20;
      (*v33)(v23, v41);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      swift_release();
      if (__swift_getEnumTagSinglePayload(v22, 1, v20) == 1)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v22, &demangling cache variable for type metadata for SpeakableString?);
        a1 = v17;
        uint64_t v24 = v36;
        uint64_t v14 = v45;
      }
      else
      {
        uint64_t v3 = *v32;
        Swift::String v25 = v30;
        (*v32)(v30, v22, v20);
        v3(v38, (uint64_t)v25, v20);
        uint64_t v14 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v14[2] + 1, 1, (uint64_t)v14);
        }
        a1 = v17;
        unint64_t v27 = v14[2];
        unint64_t v26 = v14[3];
        uint64_t v24 = v36;
        if (v27 >= v26 >> 1) {
          uint64_t v14 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1, (uint64_t)v14);
        }
        v14[2] = v27 + 1;
        v3((char *)v14+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v27, (uint64_t)v38, v9);
      }
      ++v15;
      if (v16 == v24)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t i;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void v30[5];
  void *v31;

  uint64_t v3 = v2;
  uint64_t v31 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDescription?);
  __chkstk_darwin(v5 - 8);
  unint64_t v27 = (unint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for AppDescription();
  uint64_t v23 = *(void *)(v29 - 8);
  uint64_t v7 = __chkstk_darwin(v29);
  uint64_t v28 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v22 = (uint64_t)&v21 - v9;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v21 = v3;
    Swift::String v25 = v31 + 25;
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v24 = v31 + 9;
    uint64_t v11 = _swiftEmptyArrayStorage;
    for (uint64_t i = 4; ; ++i)
    {
      if (v26) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v13 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v14 = a1;
      uint64_t v16 = v31[28];
      uint64_t v15 = v31[29];
      __swift_project_boxed_opaque_existential_1(v25, v16);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8))(v30, v16, v15);
      uint64_t v3 = v27;
      App.toAppDescription(deviceState:appInfoBuilder:)(v30, v24, v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      swift_release();
      if (__swift_getEnumTagSinglePayload(v3, 1, v29) == 1)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v3, &demangling cache variable for type metadata for AppDescription?);
        a1 = v14;
      }
      else
      {
        unint64_t v17 = v3;
        uint64_t v18 = v22;
        outlined init with take of AppDescription(v17, v22);
        outlined init with take of AppDescription(v18, v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v11[2] + 1, 1, (uint64_t)v11);
        }
        a1 = v14;
        uint64_t v3 = v11[2];
        uint64_t v19 = v11[3];
        if (v3 >= v19 >> 1) {
          uint64_t v11 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v3 + 1, 1, (uint64_t)v11);
        }
        void v11[2] = v3 + 1;
        outlined init with take of AppDescription(v28, (uint64_t)v11+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v3);
      }
      if (v13 == v10)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void PhoneAppResolutionOnDeviceFlowStrategy.__allocating_init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v42 = v8;
  uint64_t v43 = v9;
  uint64_t v40 = v10;
  uint64_t v41 = v11;
  uint64_t v39 = v12;
  swift_allocObject();
  uint64_t v13 = *(void *)(v7 + 24);
  uint64_t v38 = *(void *)(v7 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v7, v13);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v14);
  uint64_t v16 = OUTLINED_FUNCTION_53_19(v15, v35);
  v17(v16);
  uint64_t v18 = *(void *)(v5 + 24);
  uint64_t v36 = *(void *)(v5 + 32);
  uint64_t v19 = OUTLINED_FUNCTION_80_5();
  __swift_mutable_project_boxed_opaque_existential_1(v19, v20);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_4();
  uint64_t v24 = v23 - v22;
  OUTLINED_FUNCTION_106_3();
  v25();
  uint64_t v26 = *(void *)(v3 + 24);
  uint64_t v27 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v26);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v28);
  OUTLINED_FUNCTION_17_23(v29, v36);
  OUTLINED_FUNCTION_106_3();
  v30();
  OUTLINED_FUNCTION_132_3();
  specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)(v39, v40, v41, v42, v43, v0, v24, v1, v31, v32, v33, v34, v26, v18, v13, v27, v37, v38);
  __swift_destroy_boxed_opaque_existential_1(v3);
  __swift_destroy_boxed_opaque_existential_1(v5);
  __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_26_1();
}

void PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v40 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v41 = v9;
  uint64_t v38 = v10;
  uint64_t v39 = v11;
  uint64_t v37 = v12;
  uint64_t v13 = *(void *)(v7 + 24);
  uint64_t v36 = *(void *)(v7 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v7, v13);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v14);
  uint64_t v16 = OUTLINED_FUNCTION_53_19(v15, v33);
  v17(v16);
  uint64_t v18 = *(void *)(v6 + 24);
  uint64_t v35 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v18);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_4();
  uint64_t v22 = v21 - v20;
  OUTLINED_FUNCTION_106_3();
  v23();
  uint64_t v24 = *(void *)(v4 + 24);
  uint64_t v25 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v24);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_17_23(v27, v34);
  OUTLINED_FUNCTION_106_3();
  v28();
  OUTLINED_FUNCTION_132_3();
  specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)(v37, v38, v39, v40, v41, v0, v22, v1, v29, v30, v31, v32, v24, v18, v13, v25, v35, v36);
  __swift_destroy_boxed_opaque_existential_1(v4);
  __swift_destroy_boxed_opaque_existential_1(v6);
  __swift_destroy_boxed_opaque_existential_1(v8);
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.resolveAppByQuery(phoneCallIntent:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v72 = v1 + 25;
  uint64_t v4 = PhoneAppResolutionOnDeviceFlowStrategy.tryAppQueryFromCallNotifications(phoneCallNLIntent:sharedGlobals:)(a1, v1 + 25);
  if (!v6)
  {
    OUTLINED_FUNCTION_5_51(a1);
    Swift::Bool v7 = PhoneCallNLIntent.isAnswerCall()();
    outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)&v82);
    if (v7)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
      outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v81);
LABEL_5:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
LABEL_6:
      uint64_t v4 = PhoneAppResolutionOnDeviceFlowStrategy.makeAppQueryForIncomingCall(phoneCallNLIntent:sharedGlobals:)((uint64_t)a1, v72);
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_5_51(&v82);
    Swift::Bool v8 = PhoneCallNLIntent.isHangUpCall()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
    outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v81);
    if (v8) {
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_5_51(v81);
    Swift::Bool v59 = PhoneCallNLIntent.isIncomingCallSearch()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    if (v59) {
      goto LABEL_6;
    }
    PhoneAppResolutionOnDeviceFlowStrategy.makeAppQuery(phoneCallNLIntent:sharedGlobals:)((uint64_t)a1, (uint64_t)v72, v60, v61, v62, v63, v64, v65, (uint64_t)log, v68, type, (uint64_t)v72, v74, v75, v76, v77, (uint64_t)v78, v79, v80[0],
      v80[1],
      v80[2],
      v80[3],
      v80[4],
      v80[5],
      *(uint64_t *)&v81[0],
      *((uint64_t *)&v81[0] + 1));
  }
LABEL_7:
  uint64_t v9 = v4;
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  uint64_t v12 = v2[7];
  uint64_t v13 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v12);
  uint64_t v14 = v2[29];
  __swift_project_boxed_opaque_existential_1(v72, v2[28]);
  OUTLINED_FUNCTION_182_2();
  OUTLINED_FUNCTION_24_2();
  v15();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, long long *, uint64_t, uint64_t))(v13 + 8))(v80, v9, v10, v11, &v82, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  outlined init with take of AnnotatedApp?((uint64_t)v80, (uint64_t)v81, &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v81[0])
  {
    long long v82 = v81[0];
    long long v83 = v81[1];
    long long v84 = v81[2];
    uint64_t v16 = *((void *)&v81[0] + 1);
    uint64_t v17 = swift_bridgeObjectRetain();
    char v18 = specialized Set._isDisjoint<A>(with:)(v17, v16);
    swift_bridgeObjectRelease();
    if (v18)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_18_22();
      swift_retain_n();
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = OUTLINED_FUNCTION_11_7();
        uint64_t v73 = OUTLINED_FUNCTION_10_0();
        v85[0] = v73;
        *(_DWORD *)uint64_t v22 = 136315394;
        uint64_t v24 = v2[48];
        uint64_t v23 = v2[49];
        uint64_t v26 = v2[50];
        uint64_t v25 = v2[51];
        uint64_t v76 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v24, v23, v26, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_162_1(0);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_6_2();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v27 = Array.description.getter();
        unint64_t v29 = v28;
        swift_bridgeObjectRelease();
        uint64_t v75 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_6_2();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v20, v21, "%s App found but doesn't support requested intents: %s", (uint8_t *)v22, 0x16u);
        uint64_t v2 = (void *)v73;
        OUTLINED_FUNCTION_69_10();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release_n();
      }
      type metadata accessor for AppResolutionAction();
      static AppResolutionAction.appNotSupported(app:)();
      OUTLINED_FUNCTION_35_26();
      swift_release();
      outlined init with take of AnnotatedApp?((uint64_t)&v83, (uint64_t)&v75, &demangling cache variable for type metadata for String?);
      outlined release of String?((uint64_t)&v75);
      v85[0] = *((void *)&v84 + 1);
      uint64_t v54 = v85;
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
      outlined init with take of AnnotatedApp?((uint64_t)&v83, (uint64_t)v85, &demangling cache variable for type metadata for String?);
      v86[0] = *((void *)&v84 + 1);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      outlined retain of String?((uint64_t)v85);
      outlined retain of Set<String>((uint64_t)v86);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      outlined retain of String?((uint64_t)v85);
      outlined retain of Set<String>((uint64_t)v86);
      uint64_t v36 = (void *)Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v37))
      {
        uint64_t v38 = OUTLINED_FUNCTION_11_7();
        uint64_t typea = OUTLINED_FUNCTION_10_0();
        uint64_t v74 = typea;
        uint64_t v75 = 0;
        *(_DWORD *)uint64_t v38 = 136315394;
        LODWORD(v68) = v14;
        uint64_t v39 = v2[51];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v40 = OUTLINED_FUNCTION_145_3();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v40, v41, v42, v39);
        swift_bridgeObjectRelease();
        uint64_t v43 = swift_bridgeObjectRelease();
        uint64_t v75 = OUTLINED_FUNCTION_40_8(v43, v44, v45, v46, v47, v48, v49, v50, (uint64_t)v36, v68, typea, (uint64_t)v72, v74, v75, 0xE000000000000000);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_6_2();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        swift_retain();
        swift_bridgeObjectRetain();
        outlined retain of String?((uint64_t)v85);
        outlined retain of Set<String>((uint64_t)v86);
        uint64_t v51 = AnnotatedApp.description.getter();
        unint64_t v53 = v52;
        swift_bridgeObjectRelease();
        swift_release();
        outlined release of String?((uint64_t)v85);
        outlined release of Set<String>((uint64_t)v86);
        uint64_t v75 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, &v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        outlined release of String?((uint64_t)v85);
        outlined release of Set<String>((uint64_t)v86);
        swift_bridgeObjectRelease();
        swift_release();
        outlined release of String?((uint64_t)v85);
        outlined release of Set<String>((uint64_t)v86);
        _os_log_impl(&dword_0, loga, v69, "%s Selecting and caching app: %s", (uint8_t *)v38, 0x16u);
        OUTLINED_FUNCTION_27_6();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        OUTLINED_FUNCTION_6_2();
        outlined release of String?((uint64_t)v85);
        outlined release of Set<String>((uint64_t)v86);
        swift_bridgeObjectRelease();
        swift_release();
        outlined release of String?((uint64_t)v85);
        outlined release of Set<String>((uint64_t)v86);
      }
      __swift_project_boxed_opaque_existential_1(v72, v2[28]);
      uint64_t v55 = OUTLINED_FUNCTION_105_2();
      v56(v55);
      uint64_t v2 = v78;
      uint64_t v57 = v79;
      __swift_project_boxed_opaque_existential_1(&v75, (uint64_t)v78);
      (*(void (**)(long long *, void *, uint64_t))(v57 + 8))(&v82, v2, v57);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
      type metadata accessor for AppResolutionAction();
      static AppResolutionAction.select(app:)();
      OUTLINED_FUNCTION_35_26();
      swift_release();
      outlined release of String?((uint64_t)v85);
      uint64_t v54 = v86;
    }
    outlined release of Set<String>((uint64_t)v54);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_36_28();
    uint64_t v31 = (void *)Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_4_27(v32))
    {
      OUTLINED_FUNCTION_5_22();
      uint64_t v75 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_156_3(4.8149e-34);
      *(void *)&long long v82 = 0;
      *((void *)&v82 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17_36();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, *((unint64_t *)&v82 + 1), &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_10(&dword_0, v33, v34, "%s No matching app");
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
    type metadata accessor for AppResolutionAction();
    return static AppResolutionAction.noAppFound()();
  }
  return (uint64_t)v2;
}

void PhoneAppResolutionOnDeviceFlowStrategy.parseConfirmationResponse(input:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v143 = v2;
  uint64_t v3 = type metadata accessor for AppResolutionResult();
  OUTLINED_FUNCTION_1();
  uint64_t v136 = v4;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v135 = v6;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_1();
  uint64_t v141 = v8;
  uint64_t v142 = v7;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_8();
  uint64_t v139 = v9;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v133 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_5_8();
  uint64_t v140 = v15;
  OUTLINED_FUNCTION_18_0();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v133 - v18;
  __chkstk_darwin(v17);
  uint64_t v144 = (uint64_t)&v133 - v20;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_62_15();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = &unk_469000;
  uint64_t v137 = v3;
  if (v25)
  {
    uint64_t v27 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v28 = OUTLINED_FUNCTION_14_0();
    uint64_t v138 = v19;
    *(void *)&long long v146 = v28;
    uint64_t v134 = v22;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v133 = v12;
    uint64_t v30 = v0[44];
    uint64_t v29 = v0[45];
    *(void *)&v148[0] = 0;
    *((void *)&v148[0] + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    uint64_t v31 = v30;
    uint64_t v26 = (void *)&unk_469000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v31, v29, 0xD000000000000021, 0x800000000049AE00);
    swift_bridgeObjectRelease();
    uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*(uint64_t *)&v148[0], *((unint64_t *)&v148[0] + 1), (uint64_t *)&v146);
    OUTLINED_FUNCTION_33_5(v32);
    uint64_t v22 = v134;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_14_3();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v23, v24, "%s", v27, 0xCu);
    uint64_t v12 = v133;
    OUTLINED_FUNCTION_65_8();
    uint64_t v19 = v138;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_14_3();
  }
  outlined init with copy of SignalProviding((uint64_t)(v0 + 25), (uint64_t)v148);
  type metadata accessor for YesNoConfirmationParser();
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(v148, v33 + 24);
  YesNoConfirmationParser.parseConfirmationResponse(input:)(v144);
  swift_release();
  uint64_t v34 = OUTLINED_FUNCTION_6_23();
  outlined init with copy of ConfirmationResponse?(v34, v35, v36);
  type metadata accessor for ConfirmationResponse();
  uint64_t v37 = OUTLINED_FUNCTION_48_21();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v37, 1, v33);
  uint64_t v39 = v142;
  if (EnumTagSinglePayload == 1) {
    goto LABEL_15;
  }
  uint64_t v40 = v26;
  os_log_type_t v41 = v140;
  outlined init with copy of ConfirmationResponse?((uint64_t)v19, v140, &demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v42 = *(void *)(v33 - 8);
  OUTLINED_FUNCTION_100_4();
  int v44 = v43();
  if (v44 != enum case for ConfirmationResponse.confirmed(_:))
  {
    if (v44 == enum case for ConfirmationResponse.rejected(_:))
    {
      swift_retain_n();
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_131_3(v59))
      {
        uint64_t v60 = (_DWORD *)OUTLINED_FUNCTION_11_7();
        uint64_t v61 = OUTLINED_FUNCTION_10_0();
        OUTLINED_FUNCTION_144_3(v61);
        _DWORD *v60 = 136315394;
        uint64_t v138 = v19;
        uint64_t v62 = v1[44];
        uint64_t v63 = v1[45];
        uint64_t v64 = v1;
        uint64_t v65 = v1[46];
        uint64_t v66 = v64[47];
        *(void *)&v148[0] = 0;
        *((void *)&v148[0] + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v62, v63, v65, v66);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&v148[0] = OUTLINED_FUNCTION_3_64();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_43_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_118_4();
        type metadata accessor for App();
        swift_bridgeObjectRetain();
        uint64_t v67 = Array.description.getter();
        unint64_t v69 = v68;
        swift_bridgeObjectRelease();
        *(void *)&v148[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v69, (uint64_t *)&v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_43_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_81_9(&dword_0, v58, v41, "%s parseConfirmationResponse: no -> disambiguate app list '%s'");
        OUTLINED_FUNCTION_27_6();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release_n();
      }
      type metadata accessor for AppConfirmationResponse();
      swift_bridgeObjectRetain();
      static AppConfirmationResponse.disambiguate(apps:)();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    uint64_t v26 = v40;
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v140, v33);
LABEL_15:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v19, &demangling cache variable for type metadata for ConfirmationResponse?);
    Input.parse.getter();
    uint64_t v70 = v141;
    OUTLINED_FUNCTION_100_4();
    int v72 = v71();
    if (v72 != enum case for Parse.NLv3IntentOnly(_:))
    {
      if (v72 == enum case for Parse.NLv4IntentOnly(_:))
      {
        (*(void (**)(char *, uint8_t *))(v70 + 96))(v12, v39);
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
      if (v72 != enum case for Parse.uso(_:))
      {
        OUTLINED_FUNCTION_62_15();
        uint64_t v95 = Logger.logObject.getter();
        os_log_type_t v96 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_8_2(v96))
        {
          LODWORD(v143) = v22;
          uint64_t v97 = (_DWORD *)OUTLINED_FUNCTION_5_22();
          uint64_t v140 = OUTLINED_FUNCTION_14_0();
          *(void *)&long long v146 = v140;
          uint64_t v98 = v26[287];
          uint64_t v139 = v97;
          *uint64_t v97 = v98;
          uint64_t v138 = (char *)(v97 + 1);
          uint64_t v134 = v22;
          uint64_t v100 = v1[44];
          uint64_t v99 = v1[45];
          uint64_t v133 = v12;
          uint64_t v102 = v1[46];
          uint64_t v101 = v1[47];
          OUTLINED_FUNCTION_28_32();
          swift_bridgeObjectRetain();
          uint64_t v26 = (void *)&unk_469000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v100, v99, v102, v101);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v103 = OUTLINED_FUNCTION_3_64();
          OUTLINED_FUNCTION_33_5(v103);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_14_3();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_55_7(&dword_0, v95, (os_log_type_t)v143, "%s parseConfirmationResponse: unsupported parse");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          OUTLINED_FUNCTION_14_3();
        }
        uint64_t v111 = OUTLINED_FUNCTION_182_2();
        v112(v111);
        goto LABEL_52;
      }
    }
    (*(void (**)(char *, uint8_t *))(v70 + 8))(v12, v39);
LABEL_19:
    __swift_project_boxed_opaque_existential_1(v1 + 25, v1[28]);
    uint64_t v73 = OUTLINED_FUNCTION_3_35();
    v74(v73);
    Input.parse.getter();
    OUTLINED_FUNCTION_19();
    uint64_t v75 = OUTLINED_FUNCTION_120_3();
    v76(v75);
    swift_release();
    uint64_t v77 = OUTLINED_FUNCTION_143_3();
    v78(v77);
    if (!v147)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v146, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      OUTLINED_FUNCTION_62_15();
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_37_0(v89))
      {
        unint64_t v90 = (_DWORD *)OUTLINED_FUNCTION_5_22();
        uint64_t v91 = OUTLINED_FUNCTION_14_0();
        OUTLINED_FUNCTION_144_3(v91);
        *unint64_t v90 = v26[287];
        uint64_t v142 = (uint8_t *)(v90 + 1);
        OUTLINED_FUNCTION_28_32();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_9_26();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v92 = OUTLINED_FUNCTION_3_64();
        OUTLINED_FUNCTION_103_3(v92);
        OUTLINED_FUNCTION_42_23();
        swift_bridgeObjectRelease();
        uint64_t v94 = "%s parseConfirmationResponse: could not transform input to NLIntent, ignoring input";
LABEL_54:
        OUTLINED_FUNCTION_112_2(&dword_0, v88, v93, v94);
        OUTLINED_FUNCTION_41_3();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();

LABEL_56:
        type metadata accessor for AppConfirmationResponse();
        static AppConfirmationResponse.ignore()();
        uint64_t v110 = &demangling cache variable for type metadata for ConfirmationResponse?;
        uint64_t v109 = v144;
        goto LABEL_57;
      }
LABEL_55:

      OUTLINED_FUNCTION_14_3();
      goto LABEL_56;
    }
    outlined init with take of AppSelectionSignalComponent(&v146, (uint64_t)v148);
    if (OUTLINED_FUNCTION_101_5())
    {
      uint64_t v79 = OUTLINED_FUNCTION_102_6();
      uint64_t v81 = v80;
      outlined init with copy of SignalProviding((uint64_t)v148, (uint64_t)&v146);
      if (!v81)
      {
        uint64_t v79 = OUTLINED_FUNCTION_155_1(&v146);
        uint64_t v81 = v82;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v146);
      uint64_t v83 = v1[3];
      if (v83)
      {
        swift_retain();
        uint64_t v84 = App.appIdentifier.getter();
        if (v85)
        {
          if (v81)
          {
            if (v84 == v79 && v85 == v81)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v87 & 1) == 0)
              {
                swift_release();
LABEL_61:
                uint64_t v118 = v136;
                uint64_t v117 = v137;
                uint64_t v119 = v135;
                PhoneAppResolutionOnDeviceFlowStrategy.resolveAppByQuery(phoneCallIntent:)(v148);
                AppResolutionAction.result.getter();
                swift_release();
                OUTLINED_FUNCTION_105_2();
                OUTLINED_FUNCTION_100_4();
                if (v120() != enum case for AppResolutionResult.selected(_:))
                {
                  (*(void (**)(uint64_t *, uint64_t))(v118 + 8))(v119, v117);
                  OUTLINED_FUNCTION_62_15();
                  uint64_t v129 = Logger.logObject.getter();
                  os_log_type_t v130 = static os_log_type_t.debug.getter();
                  if (OUTLINED_FUNCTION_37_0(v130))
                  {
                    uint64_t v131 = (_DWORD *)OUTLINED_FUNCTION_5_22();
                    uint64_t v143 = OUTLINED_FUNCTION_14_0();
                    uint64_t v145 = v143;
                    *(void *)&long long v146 = 0;
                    _DWORD *v131 = v26[287];
                    uint64_t v142 = (uint8_t *)(v131 + 1);
                    *((void *)&v146 + 1) = 0xE000000000000000;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    OUTLINED_FUNCTION_9_26();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    *(void *)&long long v146 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v146, *((unint64_t *)&v146 + 1), &v145);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    OUTLINED_FUNCTION_42_23();
                    swift_bridgeObjectRelease();
                    OUTLINED_FUNCTION_112_2(&dword_0, v129, v132, "%s parseConfirmationResponse: User changed to an invalid app, re-run Flow to present error dialog");
                    OUTLINED_FUNCTION_41_3();
                    OUTLINED_FUNCTION_6();
                    OUTLINED_FUNCTION_6();
                  }
                  else
                  {

                    OUTLINED_FUNCTION_14_3();
                  }
                  type metadata accessor for AppConfirmationResponse();
                  static AppConfirmationResponse.ignore()();
                  goto LABEL_73;
                }
                (*(void (**)(uint64_t *, uint64_t))(v118 + 96))(v119, v117);
                uint64_t v121 = *v119;
                OUTLINED_FUNCTION_62_15();
                OUTLINED_FUNCTION_36_28();
                uint64_t v122 = Logger.logObject.getter();
                os_log_type_t v123 = static os_log_type_t.debug.getter();
                if (OUTLINED_FUNCTION_22_7(v123))
                {
                  uint64_t v124 = OUTLINED_FUNCTION_11_7();
                  uint64_t v143 = OUTLINED_FUNCTION_10_0();
                  uint64_t v145 = v143;
                  *(void *)&long long v146 = 0;
                  *(_DWORD *)uint64_t v124 = 136315394;
                  uint64_t v142 = (uint8_t *)(v124 + 4);
                  *((void *)&v146 + 1) = 0xE000000000000000;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  OUTLINED_FUNCTION_9_26();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v125 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v146, *((unint64_t *)&v146 + 1), &v145);
                  OUTLINED_FUNCTION_126_1(v125);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  OUTLINED_FUNCTION_2_30();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v124 + 12) = 2080;
                  *(void *)&long long v146 = v121;
                  type metadata accessor for App();
                  _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, 255, (void (*)(uint64_t))&type metadata accessor for App);
                  uint64_t v126 = OUTLINED_FUNCTION_174_2();
                  uint64_t v128 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, &v145);
                  OUTLINED_FUNCTION_169_1(v128);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  OUTLINED_FUNCTION_6_2();
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_81_9(&dword_0, v122, (os_log_type_t)v26, "%s parseConfirmationResponse: User changed  to %s");
                  OUTLINED_FUNCTION_27_6();
                  OUTLINED_FUNCTION_6();
                  OUTLINED_FUNCTION_6();
                }
                else
                {

                  OUTLINED_FUNCTION_6_2();
                  OUTLINED_FUNCTION_14_3();
                }
                type metadata accessor for AppConfirmationResponse();
                OUTLINED_FUNCTION_18_22();
                static AppConfirmationResponse.select(app:)();
                OUTLINED_FUNCTION_18_22();
LABEL_72:
                swift_release();
LABEL_73:
                outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v144, &demangling cache variable for type metadata for ConfirmationResponse?);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
                goto LABEL_58;
              }
            }
LABEL_71:
            PhoneAppResolutionOnDeviceFlowStrategy.selectAppConfirmation(by:)(v83);
            OUTLINED_FUNCTION_48_21();
            goto LABEL_72;
          }
          swift_release();
        }
        else
        {
          if (!v81) {
            goto LABEL_71;
          }
          swift_release();
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
LABEL_52:
    OUTLINED_FUNCTION_62_15();
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v113 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_37_0(v113))
    {
      uint64_t v114 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      uint64_t v115 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_144_3(v115);
      _DWORD *v114 = v26[287];
      uint64_t v142 = (uint8_t *)(v114 + 1);
      OUTLINED_FUNCTION_28_32();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_9_26();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v116 = OUTLINED_FUNCTION_3_64();
      OUTLINED_FUNCTION_103_3(v116);
      OUTLINED_FUNCTION_42_23();
      swift_bridgeObjectRelease();
      uint64_t v94 = "%s parseConfirmationResponse: unable to confirm. Ignoring..";
      goto LABEL_54;
    }
    goto LABEL_55;
  }
  uint64_t v45 = v1[3];
  if (v45)
  {
    swift_retain_n();
    OUTLINED_FUNCTION_62_15();
    uint64_t v46 = (void *)Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_58_16(v47))
    {
      OUTLINED_FUNCTION_11_7();
      uint64_t v48 = OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_144_3(v48);
      OUTLINED_FUNCTION_168_2(4.8151e-34);
      uint64_t v142 = v49;
      uint64_t v138 = v19;
      uint64_t v51 = v1[46];
      uint64_t v50 = v1[47];
      *(void *)&v148[0] = 0;
      *((void *)&v148[0] + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v52 = OUTLINED_FUNCTION_6_23();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v52, v53, v51, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&v148[0] = OUTLINED_FUNCTION_3_64();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_14_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_74_7();
      *(void *)&v148[0] = v45;
      type metadata accessor for App();
      _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, 255, (void (*)(uint64_t))&type metadata accessor for App);
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v148[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, (uint64_t *)&v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_45_3(&dword_0, v56, v57, "%s parseConfirmationResponse: yes -> select app: %s");
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
      OUTLINED_FUNCTION_14_3();
    }
    PhoneAppResolutionOnDeviceFlowStrategy.selectAppConfirmation(by:)(v45);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_62_15();
    uint64_t v104 = Logger.logObject.getter();
    os_log_type_t v105 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_131_3(v105))
    {
      uint64_t v106 = (uint8_t *)OUTLINED_FUNCTION_5_22();
      uint64_t v107 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_144_3(v107);
      uint64_t v108 = v40[287];
      uint64_t v138 = v19;
      *(_DWORD *)uint64_t v106 = v108;
      uint64_t v142 = v106 + 4;
      OUTLINED_FUNCTION_28_32();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_9_26();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&v148[0] = OUTLINED_FUNCTION_3_64();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v104, v41, "%s parseConfirmationResponse: yes -> found no app to confirm", v106, 0xCu);
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_14_3();
    }
    type metadata accessor for AppConfirmationResponse();
    static AppConfirmationResponse.select()();
  }
LABEL_46:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v144, &demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v109 = OUTLINED_FUNCTION_7_14();
LABEL_57:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v109, v110);
LABEL_58:
  OUTLINED_FUNCTION_26_1();
}

void PhoneAppResolutionOnDeviceFlowStrategy.parseDisambiguationResponse(input:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v198 = v2;
  uint64_t v188 = type metadata accessor for AppResolutionResult();
  OUTLINED_FUNCTION_1();
  uint64_t v187 = v3;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_3_1();
  v186 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_8();
  v190 = (uint64_t *)v8;
  OUTLINED_FUNCTION_18_0();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v184 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)v184 - v13);
  uint64_t v15 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_1();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_3_1();
  uint64_t v192 = v19;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_1();
  v195 = v21;
  v196 = v20;
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_5_8();
  uint64_t v193 = v22;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v23);
  v197 = (char *)v184 - v24;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_38_24();
  v194 = (_DWORD *)v26;
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = OUTLINED_FUNCTION_5_22();
    v189 = v12;
    uint64_t v30 = (uint8_t *)v29;
    uint64_t v185 = OUTLINED_FUNCTION_14_0();
    *(void *)&long long v202 = v185;
    *(_DWORD *)uint64_t v30 = 136315138;
    v184[1] = (uint64_t)(v30 + 4);
    uint64_t v31 = v14;
    uint64_t v191 = v17;
    uint64_t v32 = v15;
    uint64_t v33 = v1[44];
    uint64_t v34 = v1[45];
    uint64_t v204 = 0;
    unint64_t v205 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    uint64_t v35 = v33;
    uint64_t v14 = v31;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v35, v34, 0xD000000000000023, 0x800000000049AE30);
    uint64_t v15 = v32;
    uint64_t v17 = v191;
    swift_bridgeObjectRelease();
    uint64_t v36 = OUTLINED_FUNCTION_3_64();
    OUTLINED_FUNCTION_33_5(v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_4_0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v27, v28, "%s", v30, 0xCu);
    OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_6();
    uint64_t v12 = v189;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_4_0();
  }
  uint64_t v37 = v197;
  Input.parse.getter();
  uint64_t v39 = v195;
  uint64_t v38 = v196;
  uint64_t v40 = OUTLINED_FUNCTION_90_10();
  int v42 = v41(v40);
  if (v42 == enum case for Parse.NLv3IntentOnly(_:))
  {
LABEL_7:
    uint64_t v43 = OUTLINED_FUNCTION_90_10();
    v44(v43);
    goto LABEL_8;
  }
  if (v42 == enum case for Parse.directInvocation(_:))
  {
    (*((void (**)(char *, _DWORD *))v39 + 12))(v37, v38);
    uint64_t v52 = v37;
    uint64_t v53 = v192;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v192, v52, v15);
    static CommonDirectAction.from(_:)(v53, v14);
    outlined init with copy of ConfirmationResponse?((uint64_t)v14, (uint64_t)v12, &demangling cache variable for type metadata for CommonDirectAction?);
    uint64_t v54 = type metadata accessor for CommonDirectAction();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v54);
    v184[0] = (uint64_t)v14;
    if (EnumTagSinglePayload != 1)
    {
      uint64_t v56 = v190;
      outlined init with copy of ConfirmationResponse?((uint64_t)v12, (uint64_t)v190, &demangling cache variable for type metadata for CommonDirectAction?);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v191 = v17;
        uint64_t v198 = v15;
        uint64_t v113 = *v56;
        unint64_t v112 = v56[1];
        OUTLINED_FUNCTION_38_24();
        swift_bridgeObjectRetain_n();
        uint64_t v114 = OUTLINED_FUNCTION_37_26();
        os_log_type_t v115 = static os_log_type_t.debug.getter();
        int v116 = v115;
        if (os_log_type_enabled(v114, v115))
        {
          uint64_t v117 = OUTLINED_FUNCTION_11_7();
          v189 = v12;
          uint64_t v118 = (uint8_t *)v117;
          v197 = (char *)OUTLINED_FUNCTION_10_0();
          *(void *)&long long v202 = v197;
          OUTLINED_FUNCTION_168_2(4.8151e-34);
          v195 = v119;
          uint64_t v121 = v1[44];
          uint64_t v120 = v1[45];
          LODWORD(v196) = v116;
          uint64_t v123 = v1[46];
          uint64_t v122 = v1[47];
          uint64_t v204 = 0;
          unint64_t v205 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v121, v120, v123, v122);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v204 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v204, v205, (uint64_t *)&v202);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_4_0();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_159_2();
          uint64_t v204 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v113, v112, (uint64_t *)&v202);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v114, (os_log_type_t)v196, "%s parseDisambiguationResponse: item selected by button tap: %s", v118, 0x16u);
          OUTLINED_FUNCTION_69_10();
          OUTLINED_FUNCTION_6();
          uint64_t v12 = v189;
          OUTLINED_FUNCTION_6();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          OUTLINED_FUNCTION_4_0();
        }
        type metadata accessor for App();
        App.__allocating_init(appIdentifier:)();
        PhoneAppResolutionOnDeviceFlowStrategy.selectAppDisambiguation(by:)();
        swift_release();
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v184[0], &demangling cache variable for type metadata for CommonDirectAction?);
        (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v192, v198);
        goto LABEL_52;
      }
      if (EnumCaseMultiPayload == 7)
      {
        OUTLINED_FUNCTION_38_24();
        uint64_t v58 = OUTLINED_FUNCTION_37_26();
        os_log_type_t v59 = static os_log_type_t.debug.getter();
        int v60 = v59;
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v61 = OUTLINED_FUNCTION_5_22();
          LODWORD(v198) = v60;
          uint64_t v62 = (_DWORD *)v61;
          v197 = (char *)OUTLINED_FUNCTION_14_0();
          *(void *)&long long v202 = v197;
          v196 = v62;
          *uint64_t v62 = 136315138;
          v195 = v62 + 1;
          uint64_t v191 = v17;
          uint64_t v17 = v15;
          uint64_t v15 = (uint64_t)v12;
          uint64_t v12 = (char *)v1[46];
          OUTLINED_FUNCTION_28_32();
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_61_11();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v63 = OUTLINED_FUNCTION_3_64();
          OUTLINED_FUNCTION_104_3(v63);
          OUTLINED_FUNCTION_4_0();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_107_3(&dword_0, v58, (os_log_type_t)v198, "%s parseDisambiguationResponse: directInvocation .no -> cancel");
          OUTLINED_FUNCTION_41_3();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          OUTLINED_FUNCTION_4_0();
        }
        type metadata accessor for AppDisambiguationResponse();
        static AppDisambiguationResponse.cancel()();
LABEL_51:
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v184[0], &demangling cache variable for type metadata for CommonDirectAction?);
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v192, v15);
LABEL_52:
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v12, &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_53;
      }
      _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6((uint64_t)v56, (void (*)(void))type metadata accessor for CommonDirectAction);
    }
    OUTLINED_FUNCTION_38_24();
    uint64_t v124 = OUTLINED_FUNCTION_37_26();
    os_log_type_t v125 = static os_log_type_t.error.getter();
    int v126 = v125;
    if (os_log_type_enabled(v124, v125))
    {
      uint64_t v127 = OUTLINED_FUNCTION_5_22();
      LODWORD(v198) = v126;
      uint64_t v128 = (_DWORD *)v127;
      v197 = (char *)OUTLINED_FUNCTION_14_0();
      *(void *)&long long v202 = v197;
      v196 = v128;
      *uint64_t v128 = 136315138;
      v195 = v128 + 1;
      uint64_t v191 = v17;
      uint64_t v17 = v15;
      uint64_t v15 = (uint64_t)v12;
      uint64_t v12 = (char *)v1[46];
      OUTLINED_FUNCTION_28_32();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_61_11();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v129 = OUTLINED_FUNCTION_3_64();
      OUTLINED_FUNCTION_104_3(v129);
      OUTLINED_FUNCTION_4_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_107_3(&dword_0, v124, (os_log_type_t)v198, "%s parseDisambiguationResponse: unsupported direct invocation, ignoring");
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_4_0();
    }
    type metadata accessor for AppDisambiguationResponse();
    static AppDisambiguationResponse.ignore()();
    goto LABEL_51;
  }
  if (v42 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v42 != enum case for Parse.uso(_:))
    {
      OUTLINED_FUNCTION_38_24();
      uint64_t v85 = OUTLINED_FUNCTION_37_26();
      os_log_type_t v86 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_31_31(v86))
      {
        char v87 = (_DWORD *)OUTLINED_FUNCTION_5_22();
        uint64_t v198 = OUTLINED_FUNCTION_14_0();
        *(void *)&long long v202 = v198;
        *char v87 = 136315138;
        v194 = v87 + 1;
        uint64_t v88 = v1[44];
        uint64_t v89 = v1[45];
        uint64_t v91 = v1[46];
        uint64_t v90 = v1[47];
        uint64_t v204 = 0;
        unint64_t v205 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v92 = v88;
        uint64_t v93 = v91;
        uint64_t v39 = v195;
        uint64_t v38 = v196;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v92, v89, v93, v90);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v94 = OUTLINED_FUNCTION_3_64();
        OUTLINED_FUNCTION_33_5(v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_4_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_24_5(&dword_0, v85, v95, "%s parseDisambiguationResponse: unrecognized parse type, ignoring input");
        OUTLINED_FUNCTION_27_7();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        OUTLINED_FUNCTION_4_0();
      }
      type metadata accessor for AppDisambiguationResponse();
      static AppDisambiguationResponse.ignore()();
      (*((void (**)(char *, _DWORD *))v39 + 1))(v197, v38);
      goto LABEL_53;
    }
    goto LABEL_7;
  }
  uint64_t v70 = OUTLINED_FUNCTION_90_10();
  v71(v70);
  swift_unknownObjectRelease();
LABEL_8:
  uint64_t v45 = v1[29];
  __swift_project_boxed_opaque_existential_1(v1 + 25, v1[28]);
  uint64_t v46 = OUTLINED_FUNCTION_18_22();
  v47(v46, v45);
  uint64_t v48 = v193;
  Input.parse.getter();
  OUTLINED_FUNCTION_19();
  uint64_t v49 = OUTLINED_FUNCTION_120_3();
  v50(v49);
  swift_release();
  (*((void (**)(uint64_t, _DWORD *))v39 + 1))(v48, v38);
  if (v203)
  {
    outlined init with take of AppSelectionSignalComponent(&v202, (uint64_t)&v204);
    __swift_project_boxed_opaque_existential_1(&v204, v206);
    Swift::Bool v51 = PhoneCallNLIntent.hasCallConfirmation(_:)(PhoneCallFlowDelegatePlugin_PhoneCallConfirmation_no);
    outlined init with copy of SignalProviding((uint64_t)&v204, (uint64_t)&v202);
    if (v51)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v202);
LABEL_22:
      outlined init with copy of SignalProviding((uint64_t)&v204, (uint64_t)&v202);
      OUTLINED_FUNCTION_38_24();
      uint64_t v73 = OUTLINED_FUNCTION_37_26();
      os_log_type_t v74 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = OUTLINED_FUNCTION_11_7();
        uint64_t v198 = OUTLINED_FUNCTION_10_0();
        v199[0] = v198;
        *(_DWORD *)uint64_t v75 = 136315394;
        uint64_t v76 = v1[44];
        uint64_t v77 = v1[45];
        uint64_t v78 = v1[46];
        uint64_t v79 = v1[47];
        uint64_t v200 = 0;
        unint64_t v201 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v76, v77, v78, v79);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v200 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v200, v201, v199);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_65_3();
        swift_bridgeObjectRelease();
        *(_WORD *)(v75 + 12) = 2080;
        __swift_project_boxed_opaque_existential_1(&v202, v203);
        uint64_t v80 = OUTLINED_FUNCTION_61();
        char v82 = v81(v80);
        if (v82 == 5)
        {
          unint64_t v83 = 0xE300000000000000;
          uint64_t v84 = 7104878;
        }
        else
        {
          uint64_t v84 = PhoneCallConfirmation.rawValue.getter(v82);
          unint64_t v83 = v111;
        }
        uint64_t v200 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v83, v199);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v202);
        _os_log_impl(&dword_0, v73, v74, "%s Received %s -> cancel", (uint8_t *)v75, 0x16u);
        OUTLINED_FUNCTION_69_10();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        OUTLINED_FUNCTION_4_0();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v202);
      }

      type metadata accessor for AppDisambiguationResponse();
      static AppDisambiguationResponse.cancel()();
      goto LABEL_43;
    }
    __swift_project_boxed_opaque_existential_1(&v202, v203);
    Swift::Bool v72 = PhoneCallNLIntent.hasCallConfirmation(_:)(PhoneCallFlowDelegatePlugin_PhoneCallConfirmation_cancel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v202);
    if (v72) {
      goto LABEL_22;
    }
    __swift_project_boxed_opaque_existential_1(&v204, v206);
    uint64_t v96 = OUTLINED_FUNCTION_3_35();
    uint64_t v98 = v97(v96);
    if (v98 != 35)
    {
      uint64_t v99 = v98;
      if (v98 == 25)
      {
        unint64_t v100 = v1[2];
        if (v100 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
          if (v101)
          {
LABEL_35:
            if (__OFSUB__(v101, 1))
            {
              __break(1u);
            }
            else
            {
              OUTLINED_FUNCTION_170_1();
              if (!v99)
              {
                swift_retain();
                goto LABEL_38;
              }
            }
            specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_38:
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_38_24();
            OUTLINED_FUNCTION_14_5();
            uint64_t v102 = OUTLINED_FUNCTION_37_26();
            os_log_type_t v103 = static os_log_type_t.debug.getter();
            if (OUTLINED_FUNCTION_22_7(v103))
            {
              OUTLINED_FUNCTION_11_7();
              uint64_t v104 = OUTLINED_FUNCTION_10_0();
              OUTLINED_FUNCTION_149_4(v104);
              OUTLINED_FUNCTION_27_33(4.8151e-34);
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_64_5();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v105 = OUTLINED_FUNCTION_63_8();
              OUTLINED_FUNCTION_40_23(v105);
              OUTLINED_FUNCTION_4_0();
              swift_bridgeObjectRelease();
              *(void *)&long long v202 = OUTLINED_FUNCTION_158_2();
              *((void *)&v202 + 1) = v106;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
              uint64_t v107 = String.init<A>(describing:)();
              uint64_t v109 = OUTLINED_FUNCTION_173_2(v107, v108);
              OUTLINED_FUNCTION_125_3(v109);
              OUTLINED_FUNCTION_2_30();
              swift_bridgeObjectRelease();
              uint64_t v110 = "%s parseDisambiguationResponse: selected app using last ordinal reference '%s'";
LABEL_88:
              OUTLINED_FUNCTION_81_9(&dword_0, v102, (os_log_type_t)v12, v110);
              OUTLINED_FUNCTION_69_10();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_6();

              goto LABEL_90;
            }
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v101 = *(void *)((char *)&dword_10 + (v100 & 0xFFFFFFFFFFFFFF8));
          swift_bridgeObjectRetain();
          if (v101) {
            goto LABEL_35;
          }
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v161 = PhoneCallReference.ordinalIndex.getter(v99);
      if ((v162 & 1) == 0)
      {
        uint64_t v163 = v161;
        if ((v161 & 0x8000000000000000) == 0)
        {
          unint64_t v164 = v1[2];
          if (v164 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v165 = _CocoaArrayWrapper.endIndex.getter();
          }
          else
          {
            uint64_t v165 = *(void *)((char *)&dword_10 + (v164 & 0xFFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain();
          }
          if (v163 < v165)
          {
            OUTLINED_FUNCTION_170_1();
            if (v99) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_38_24();
            OUTLINED_FUNCTION_14_5();
            uint64_t v102 = OUTLINED_FUNCTION_37_26();
            os_log_type_t v166 = static os_log_type_t.debug.getter();
            if (OUTLINED_FUNCTION_22_7(v166))
            {
              OUTLINED_FUNCTION_11_7();
              uint64_t v167 = OUTLINED_FUNCTION_10_0();
              OUTLINED_FUNCTION_149_4(v167);
              OUTLINED_FUNCTION_27_33(4.8151e-34);
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_64_5();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v168 = OUTLINED_FUNCTION_63_8();
              OUTLINED_FUNCTION_40_23(v168);
              OUTLINED_FUNCTION_4_0();
              swift_bridgeObjectRelease();
              *(void *)&long long v202 = OUTLINED_FUNCTION_158_2();
              *((void *)&v202 + 1) = v169;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
              uint64_t v170 = String.init<A>(describing:)();
              uint64_t v172 = OUTLINED_FUNCTION_173_2(v170, v171);
              OUTLINED_FUNCTION_125_3(v172);
              OUTLINED_FUNCTION_2_30();
              swift_bridgeObjectRelease();
              uint64_t v110 = "%s parseDisambiguationResponse: selected app using ordinal reference '%s'";
              goto LABEL_88;
            }
LABEL_89:

            OUTLINED_FUNCTION_2_30();
            OUTLINED_FUNCTION_4_0();
            goto LABEL_90;
          }
          swift_bridgeObjectRelease();
        }
      }
      swift_retain_n();
      v173 = OUTLINED_FUNCTION_37_26();
      os_log_type_t v174 = static os_log_type_t.debug.getter();
      int v175 = v174;
      if (os_log_type_enabled(v173, v174))
      {
        uint64_t v176 = OUTLINED_FUNCTION_14_0();
        uint64_t v177 = swift_slowAlloc();
        OUTLINED_FUNCTION_149_4(v177);
        *(_DWORD *)uint64_t v176 = 136315650;
        LODWORD(v197) = v175;
        OUTLINED_FUNCTION_139_2();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_52_15();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v178 = OUTLINED_FUNCTION_63_8();
        OUTLINED_FUNCTION_126_1(v178);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_4_0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v176 + 12) = 2080;
        LOBYTE(v202) = v99;
        uint64_t v179 = String.init<A>(describing:)();
        *(void *)&long long v202 = OUTLINED_FUNCTION_173_2(v179, v180);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v176 + 22) = 2080;
        type metadata accessor for App();
        swift_bridgeObjectRetain();
        Array.description.getter();
        swift_bridgeObjectRelease();
        uint64_t v181 = OUTLINED_FUNCTION_61();
        *(void *)&long long v202 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v181, v182, v183);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_4_0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v173, (os_log_type_t)v197, "%s parseDisambiguationResponse: unable to resolve reference value '%s' in app list: '%s'", (uint8_t *)v176, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release_n();
      }
      type metadata accessor for AppDisambiguationResponse();
      swift_bridgeObjectRetain();
      static AppDisambiguationResponse.disambiguate(apps:)();
      OUTLINED_FUNCTION_35_26();
      goto LABEL_43;
    }
    if (OUTLINED_FUNCTION_101_5())
    {
      uint64_t v130 = OUTLINED_FUNCTION_102_6();
      uint64_t v132 = v131;
      outlined init with copy of SignalProviding((uint64_t)&v204, (uint64_t)&v200);
      if (!v132)
      {
        uint64_t v130 = OUTLINED_FUNCTION_155_1(&v200);
        uint64_t v132 = v133;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
      swift_bridgeObjectRetain();
      unint64_t v134 = swift_bridgeObjectRetain();
      uint64_t v135 = specialized Sequence.first(where:)(v134, v130, v132);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v135)
      {
        PhoneAppResolutionOnDeviceFlowStrategy.resolveAppByQuery(phoneCallIntent:)(&v204);
        uint64_t v136 = v186;
        AppResolutionAction.result.getter();
        swift_release();
        uint64_t v137 = v187;
        uint64_t v138 = v188;
        OUTLINED_FUNCTION_100_4();
        if (v139() != enum case for AppResolutionResult.selected(_:))
        {
          (*(void (**)(uint64_t *, uint64_t))(v137 + 8))(v136, v138);
          OUTLINED_FUNCTION_38_24();
          v155 = (void *)OUTLINED_FUNCTION_37_26();
          os_log_type_t v156 = static os_log_type_t.debug.getter();
          if (OUTLINED_FUNCTION_4_27(v156))
          {
            v157 = (_DWORD *)OUTLINED_FUNCTION_5_22();
            uint64_t v158 = OUTLINED_FUNCTION_14_0();
            OUTLINED_FUNCTION_149_4(v158);
            _DWORD *v157 = 136315138;
            v197 = (char *)(v157 + 1);
            OUTLINED_FUNCTION_139_2();
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_52_15();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)&long long v202 = OUTLINED_FUNCTION_63_8();
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            OUTLINED_FUNCTION_4_0();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_19_10(&dword_0, v159, v160, "%s parseDisambiguationResponse: User changed to an invalid app, re-run Flow to present error dialog");
            OUTLINED_FUNCTION_27_7();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }
          else
          {

            OUTLINED_FUNCTION_4_0();
          }
          type metadata accessor for AppDisambiguationResponse();
          static AppDisambiguationResponse.ignore()();
          goto LABEL_43;
        }
        (*(void (**)(uint64_t *, uint64_t))(v137 + 96))(v136, v138);
        uint64_t v140 = *v136;
        OUTLINED_FUNCTION_38_24();
        OUTLINED_FUNCTION_14_5();
        uint64_t v141 = OUTLINED_FUNCTION_37_26();
        os_log_type_t v142 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_22_7(v142))
        {
          uint64_t v143 = OUTLINED_FUNCTION_11_7();
          uint64_t v144 = OUTLINED_FUNCTION_10_0();
          OUTLINED_FUNCTION_149_4(v144);
          OUTLINED_FUNCTION_27_33(4.8151e-34);
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_64_5();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v145 = OUTLINED_FUNCTION_63_8();
          OUTLINED_FUNCTION_40_23(v145);
          OUTLINED_FUNCTION_4_0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v143 + 12) = 2080;
          *(void *)&long long v202 = v140;
          type metadata accessor for App();
          _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, 255, (void (*)(uint64_t))&type metadata accessor for App);
          uint64_t v146 = OUTLINED_FUNCTION_174_2();
          uint64_t v148 = OUTLINED_FUNCTION_173_2(v146, v147);
          OUTLINED_FUNCTION_169_1(v148);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_2_30();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_81_9(&dword_0, v141, (os_log_type_t)v12, "%s parseDisambiguationResponse: User changed  to %s");
          OUTLINED_FUNCTION_69_10();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          OUTLINED_FUNCTION_2_30();
          OUTLINED_FUNCTION_4_0();
        }
        type metadata accessor for AppDisambiguationResponse();
        OUTLINED_FUNCTION_48_21();
        static AppDisambiguationResponse.select(app:)();
        goto LABEL_91;
      }
LABEL_90:
      PhoneAppResolutionOnDeviceFlowStrategy.selectAppDisambiguation(by:)();
LABEL_91:
      swift_release();
LABEL_43:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v204);
      goto LABEL_53;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v204);
    OUTLINED_FUNCTION_38_24();
    uint64_t v149 = (void *)OUTLINED_FUNCTION_37_26();
    os_log_type_t v150 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_4_27(v150))
    {
      uint64_t v151 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      uint64_t v198 = OUTLINED_FUNCTION_14_0();
      *(void *)&long long v202 = v198;
      *uint64_t v151 = 136315138;
      v197 = (char *)(v151 + 1);
      OUTLINED_FUNCTION_28_32();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_52_15();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v152 = OUTLINED_FUNCTION_3_64();
      OUTLINED_FUNCTION_105_3(v152);
      OUTLINED_FUNCTION_4_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_10(&dword_0, v153, v154, "%s parseDisambiguationResponse: unable to disambiguate");
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_4_0();
    }
    type metadata accessor for AppDisambiguationResponse();
    swift_bridgeObjectRetain();
    static AppDisambiguationResponse.disambiguate(apps:)();
    OUTLINED_FUNCTION_35_26();
  }
  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v202, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    OUTLINED_FUNCTION_38_24();
    uint64_t v64 = (void *)OUTLINED_FUNCTION_37_26();
    os_log_type_t v65 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_4_27(v65))
    {
      uint64_t v66 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      uint64_t v198 = OUTLINED_FUNCTION_14_0();
      *(void *)&long long v202 = v198;
      *uint64_t v66 = 136315138;
      v197 = (char *)(v66 + 1);
      OUTLINED_FUNCTION_28_32();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_52_15();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v67 = OUTLINED_FUNCTION_3_64();
      OUTLINED_FUNCTION_105_3(v67);
      OUTLINED_FUNCTION_4_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_10(&dword_0, v68, v69, "%s could not transform input to NLIntent, ignoring input");
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_4_0();
    }
    type metadata accessor for AppDisambiguationResponse();
    static AppDisambiguationResponse.ignore()();
  }
LABEL_53:
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[36] = v2;
  v1[37] = v0;
  v1[35] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[38] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[39] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v5);
  v1[40] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for OutputGenerationManifest();
  v1[41] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[42] = v7;
  v1[43] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for PhoneSnippetDataModels();
  v1[44] = v8;
  OUTLINED_FUNCTION_11_0(v8);
  v1[45] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for CommonDirectAction();
  v1[46] = v9;
  OUTLINED_FUNCTION_11_0(v9);
  v1[47] = OUTLINED_FUNCTION_35();
  uint64_t v10 = type metadata accessor for YesNoConfirmationModel();
  v1[48] = v10;
  OUTLINED_FUNCTION_11_0(v10);
  v1[49] = OUTLINED_FUNCTION_35();
  uint64_t v11 = type metadata accessor for Locale();
  v1[50] = v11;
  OUTLINED_FUNCTION_19_0(v11);
  v1[51] = v12;
  v1[52] = OUTLINED_FUNCTION_35();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v13);
  v1[53] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v14, v15, v16);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 448) = v4;
  *(void *)(v2 + 456) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void **)(v0[37] + 248);
  v0[58] = v1;
  uint64_t v2 = App.appIdentifier.getter();
  static PhoneCallAppNameConstants.isPhone(appId:)(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                   + *v1
                                                   + 336)
                                       + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + *v1
                                                  + 336));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[59] = v4;
  *uint64_t v4 = v0;
  v4[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:);
  uint64_t v5 = OUTLINED_FUNCTION_128_3(v0[53]);
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  void *v11;
  uint64_t (*v13)(void);
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = v5;
  *(void *)(v3 + 480) = v6;
  *(void *)(v3 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + **(void **)(v3 + 464) + 80);
    uint64_t v13 = (uint64_t (*)(void))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v3 + 496) = v11;
    *uint64_t v11 = v5;
    v11[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:);
    return v13();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 504) = v4;
  *(void *)(v2 + 512) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 136;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 328);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6(v5, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6(v4, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v3, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

#error "333BE0: call analysis failed (funcsize=224)"

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_retain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  uint64_t v16 = &unk_469000;
  if (OUTLINED_FUNCTION_37_0(v15))
  {
    uint64_t v17 = *(void **)(v10 + 296);
    OUTLINED_FUNCTION_5_22();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_136_4(4.8149e-34);
    uint64_t v18 = v17[44];
    uint64_t v19 = v17[45];
    uint64_t v12 = v17[46];
    uint64_t v20 = v17[47];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v18, v19, v12, v20);
    uint64_t v16 = (void *)&unk_469000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 264) = OUTLINED_FUNCTION_134_3();
    uint64_t v13 = &type metadata for Any;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_55_7(&dword_0, v14, v11, "%s makeConfirmationPrompt: build yes no template..");
    OUTLINED_FUNCTION_65_8();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  p_name = &TemplatingOperationManager.name;
  id v22 = [*(id *)(v10 + 480) dialog];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for DialogElement);
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v23 >> 62)
  {
    OUTLINED_FUNCTION_172_2();
    uint64_t v24 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_6;
    }
LABEL_16:
    int v60 = *(uint64_t **)(v10 + 432);
    p_name = *(char ***)(v10 + 296);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_28();
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    BOOL v63 = OUTLINED_FUNCTION_31_31(v62);
    uint64_t v64 = *(void *)(v10 + 296);
    if (v63)
    {
      os_log_type_t v65 = (uint64_t *)OUTLINED_FUNCTION_5_22();
      uint64_t v95 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)os_log_type_t v65 = v16[287];
      uint64_t v13 = *(void **)(v64 + 360);
      uint64_t v24 = *(void **)(v64 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_55_14();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v10 + 256) = OUTLINED_FUNCTION_134_3();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_10();
      int v60 = v65;
      p_name = (char **)v95;
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_39_10();
    }

    OUTLINED_FUNCTION_183_1();
    id v66 = [v24 catId];
    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v69 = v68;

    uint64_t *v60 = v67;
    v60[1] = v69;
    v60[2] = 0xD000000000000048;
    v60[3] = 0x800000000049AE60;
    v60[4] = 0xD00000000000001CLL;
    v60[5] = 0x800000000049AEB0;
    uint64_t v70 = 225;
    goto LABEL_26;
  }
  uint64_t v24 = *(void **)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8));
  if (!v24) {
    goto LABEL_16;
  }
LABEL_6:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v23 & 0xC000000000000001) == 0);
  if ((v23 & 0xC000000000000001) != 0) {
    id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v25 = *(id *)(v23 + 32);
  }
  uint64_t v26 = v25;
  uint64_t v27 = *(void **)(v10 + 504);
  swift_bridgeObjectRelease();
  id v28 = [v26 fullPrint];

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v30;

  id v31 = [v27 dialog];
  unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v71) {
      goto LABEL_10;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_10:
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v32 & 0xC000000000000001) == 0);
    uint64_t v92 = v24;
    uint64_t v91 = v29;
    if ((v32 & 0xC000000000000001) != 0) {
      id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v33 = *(id *)(v32 + 32);
    }
    uint64_t v34 = v33;
    uint64_t v94 = *(void **)(v10 + 448);
    uint64_t v35 = *(void *)(v10 + 392);
    uint64_t v86 = *(void *)(v10 + 384);
    uint64_t v36 = *(void *)(v10 + 376);
    uint64_t v89 = *(void *)(v10 + 360);
    uint64_t v90 = *(void *)(v10 + 352);
    uint64_t v37 = *(void **)(v10 + 296);
    swift_bridgeObjectRelease();
    id v38 = [v34 fullPrint];

    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v40;
    uint64_t v88 = v39;

    OUTLINED_FUNCTION_189_1();
    swift_storeEnumTagMultiPayload();
    __swift_project_boxed_opaque_existential_1(v37 + 25, v37[28]);
    OUTLINED_FUNCTION_24_2();
    v41();
    id v42 = CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v10 + 56));
    __swift_destroy_boxed_opaque_existential_1(v10 + 56);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6(v36, (void (*)(void))type metadata accessor for CommonDirectAction);
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = (void *)OUTLINED_FUNCTION_7_14();
    __swift_project_boxed_opaque_existential_1(v43, v44);
    OUTLINED_FUNCTION_18_22();
    OUTLINED_FUNCTION_24_2();
    v45();
    CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v10 + 96));
    __swift_destroy_boxed_opaque_existential_1(v10 + 96);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6(v36, (void (*)(void))type metadata accessor for CommonDirectAction);
    uint64_t v46 = (void *)(v35 + *(int *)(v86 + 32));
    *uint64_t v46 = 0xD000000000000011;
    v46[1] = 0x8000000000491230;
    *(void *)(v10 + 232) = v91;
    *(void *)(v10 + 240) = v92;
    Loggable.init(wrappedValue:)();
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
    id v47 = v42;
    CodableAceObject.init(wrappedValue:)();
    *(void *)(v10 + 216) = v88;
    *(void *)(v10 + 224) = v87;
    Loggable.init(wrappedValue:)();
    OUTLINED_FUNCTION_80_5();
    CodableAceObject.init(wrappedValue:)();

    _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_2(v35, v89, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
    swift_storeEnumTagMultiPayload();
    *(void *)(v10 + 200) = v86;
    *(void *)(v10 + 208) = _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, 255, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 176));
    _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_2(v35, (uint64_t)boxed_opaque_existential_1, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
    static DialogPhase.confirmation.getter();
    *(void *)(swift_task_alloc() + 16) = v10 + 176;
    OutputGenerationManifest.init(dialogPhase:_:)();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v10 + 176);
    uint64_t v49 = v37[35];
    uint64_t v50 = v37[36];
    __swift_project_boxed_opaque_existential_1(v37 + 32, v49);
    *(void *)(v10 + 160) = v90;
    *(void *)(v10 + 168) = _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, 255, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
    Swift::Bool v51 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 136));
    _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_2(v89, (uint64_t)v51, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v52 = OUTLINED_FUNCTION_93();
    *(_OWORD *)(v52 + 16) = xmmword_46A030;
    *(void *)(v52 + 32) = v94;
    uint64_t v97 = v52;
    specialized Array._endMutation()();
    *(void *)(v10 + 520) = v97;
    id v53 = v94;
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    *(void *)(v10 + 528) = v56;
    void *v56 = v57;
    v56[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:);
    uint64_t v58 = *(void *)(v10 + 344);
    uint64_t v59 = *(void *)(v10 + 280);
    return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v59, v10 + 136, v97, v58, v49, v50, v54, v55, a9, a10);
  }
  int v60 = *(uint64_t **)(v10 + 432);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_5();
  Swift::Bool v72 = Logger.logObject.getter();
  os_log_type_t v73 = static os_log_type_t.error.getter();
  BOOL v74 = OUTLINED_FUNCTION_31_31(v73);
  uint64_t v75 = *(void *)(v10 + 296);
  if (v74)
  {
    uint64_t v76 = OUTLINED_FUNCTION_5_22();
    uint64_t v96 = OUTLINED_FUNCTION_14_0();
    uint64_t v93 = (uint64_t *)v76;
    OUTLINED_FUNCTION_98_7(COERCE_FLOAT(v16[287]));
    uint64_t v77 = *(void *)(v75 + 352);
    uint64_t v13 = *(void **)(v75 + 360);
    OUTLINED_FUNCTION_181_1();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v77, (uint64_t)v13, v29, (uint64_t)v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v78 = OUTLINED_FUNCTION_134_3();
    OUTLINED_FUNCTION_95_6(v78, (void *)(v10 + 248));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_0();
    int v60 = v93;
    p_name = (char **)v96;
    OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_43_0();
  }

  OUTLINED_FUNCTION_183_1();
  id v79 = [p_name catId];
  uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v82 = v81;

  uint64_t *v60 = v80;
  v60[1] = v82;
  v60[2] = 0xD000000000000048;
  v60[3] = 0x800000000049AE60;
  v60[4] = 0xD00000000000001CLL;
  v60[5] = 0x800000000049AEB0;
  uint64_t v70 = 230;
LABEL_26:
  v60[6] = v70;
  OUTLINED_FUNCTION_75();
  swift_storeEnumTagMultiPayload();
  _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
  swift_allocError();
  PhoneError.logged()(v83);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6((uint64_t)v60, (void (*)(void))type metadata accessor for PhoneError);
  swift_willThrow();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(*(void *)(v10 + 424), &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v84();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_41_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v12, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_19_13();

  OUTLINED_FUNCTION_41_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v12, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_19_13();
  uint64_t v14 = *(void **)(v13 + 448);

  OUTLINED_FUNCTION_41_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v12, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[8] = v2;
  v1[9] = v0;
  uint64_t v3 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v3);
  v1[10] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  v1[11] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[12] = v5;
  v1[13] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for PhoneSnippetDataModels();
  v1[14] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[15] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for ResponseMode();
  v1[16] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[17] = v8;
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for NLContextUpdate();
  v1[20] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[21] = v10;
  v1[22] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _DWORD *v30;
  unint64_t v31;
  void *v32;
  void *v33;
  const char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;

  uint64_t v54 = v0;
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INIntent, INIntentResponse>);
  uint64_t v3 = swift_bridgeObjectRetain();
  specialized static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)(v3, (void *)(v2 + 152), v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4 >> 62)
  {
LABEL_30:
    OUTLINED_FUNCTION_129_4();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 0;
      uint64_t v43 = "n19PhoneCallCommonCATs";
      uint64_t v39 = v2;
      uint64_t v40 = "com.apple.InCallService";
      os_log_type_t v41 = 0x8000000000493260;
      uint64_t v37 = "com.apple.Carousel";
      id v38 = 0x8000000000493280;
      uint64_t v35 = "com.apple.NanoPhone";
      uint64_t v36 = 0x80000000004932A0;
      while (1)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          OUTLINED_FUNCTION_189_1();
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          swift_retain();
        }
        uint64_t v7 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (App.isFaceTime()()) {
          goto LABEL_22;
        }
        uint64_t v8 = App.appIdentifier.getter();
        if (!v9)
        {
          swift_release();
LABEL_28:
          uint64_t v17 = 0;
          goto LABEL_32;
        }
        uint64_t v10 = v8;
        uint64_t v2 = v9;
        OUTLINED_FUNCTION_164_2();
        if (v12 == v11 + 5 && v2 == 0x8000000000493240) {
          break;
        }
        if (OUTLINED_FUNCTION_92_7()) {
          break;
        }
        OUTLINED_FUNCTION_164_2();
        if (v10 == v13 && v2 == 0x8000000000493260) {
          break;
        }
        if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
          break;
        }
        OUTLINED_FUNCTION_164_2();
        if (v10 == v14 + 1 && v2 == 0x8000000000493280) {
          break;
        }
        if (OUTLINED_FUNCTION_92_7()) {
          break;
        }
        OUTLINED_FUNCTION_164_2();
        if (v10 == v15 + 3 && v2 == 0x80000000004932A0) {
          break;
        }
        uint64_t v16 = OUTLINED_FUNCTION_92_7();
        swift_bridgeObjectRelease();
        swift_release();
        if ((v16 & 1) == 0) {
          goto LABEL_28;
        }
LABEL_23:
        ++v6;
        if (v7 == v5)
        {
          uint64_t v17 = 1;
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRelease();
LABEL_22:
      swift_release();
      goto LABEL_23;
    }
  }
  uint64_t v17 = 1;
LABEL_32:
  OUTLINED_FUNCTION_178_2();
  uint64_t v18 = swift_bridgeObjectRetain();
  PhoneAppResolutionOnDeviceFlowStrategy.getAppSpeakableString(apps:)(v18, v19, v20, v21, v22, v23, v24, v25, (uint64_t)v35, v36, (uint64_t)v37, v38, v39, (uint64_t)v40, v41, (uint64_t)v43, v44, v45, v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53);
  v0[23] = v26;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_44_4();
  id v28 = Logger.logObject.getter();
  uint64_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    uint64_t v44 = OUTLINED_FUNCTION_14_0();
    uint64_t v45 = 0;
    *uint64_t v30 = 136315138;
    OUTLINED_FUNCTION_181_1();
    uint64_t v46 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_184_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_55_7(&dword_0, v28, v29, "%s makeDisambiguationPrompt: disambiguating apps with RF2.0");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_43_0();
  }

  unint64_t v32 = *(void **)(v0[9] + 240);
  v0[24] = v32;
  id v42 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for StartCallCATsSimple + *v32 + 80)
                                        + **(int **)(class metadata base offset for StartCallCATsSimple + *v32 + 80));
  id v33 = (void *)swift_task_alloc();
  v0[25] = v33;
  uint8_t *v33 = v0;
  v33[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:);
  return v42(v17);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 208) = v5;
  *(void *)(v3 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  *(void *)(v4 + 232) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 240) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void *v3;
  void *v4;
  unint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  uint64_t v1 = OUTLINED_FUNCTION_185_2();
  v2(v1);
  uint64_t v29 = (void *)v0[30];
  v0[31] = (uint64_t)v29;
  uint64_t v3 = (void *)v0[26];
  uint64_t v4 = (void *)v0[9];
  swift_retain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = specialized Sequence.compactMap<A>(_:)(v5, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = [v3 dialog];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for DialogElement);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
    if (v9)
    {
LABEL_3:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v8 & 0xC000000000000001) == 0);
      if ((v8 & 0xC000000000000001) != 0) {
        uint64_t v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v10 = *(id *)(v8 + 32);
      }
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      uint64_t v12 = [v11 fullPrint];

      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v14;

      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = 0;
LABEL_8:
  uint64_t v15 = v0[22];
  uint64_t v17 = v0[14];
  uint64_t v16 = (void *)v0[15];
  uint64_t v18 = (void *)v0[9];
  *uint64_t v16 = v6;
  v16[1] = v13;
  v16[2] = v9;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static DialogPhase.clarification.getter();
  uint64_t v19 = (void *)swift_task_alloc();
  long long v19[2] = v15;
  void v19[3] = v6;
  v19[4] = v13;
  v19[5] = v9;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v20 = v18[35];
  uint64_t v21 = v18[36];
  __swift_project_boxed_opaque_existential_1(v18 + 32, v20);
  v0[5] = v17;
  v0[6] = _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, 255, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_2((uint64_t)v16, (uint64_t)boxed_opaque_existential_1, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  unint64_t v23 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v23 + 16) = xmmword_46A030;
  *(void *)(v23 + 32) = v29;
  uint64_t v30 = v23;
  specialized Array._endMutation()();
  v0[32] = v30;
  uint64_t v24 = v29;
  id v25 = (void *)swift_task_alloc();
  v0[33] = (uint64_t)v25;
  *id v25 = v0;
  v25[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:);
  uint64_t v26 = v0[13];
  uint64_t v27 = v0[8];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(v27, v0 + 2, v30, v26, v20, v21);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 16;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 120);

  uint64_t v6 = OUTLINED_FUNCTION_61();
  v7(v6);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6(v5, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  uint64_t v0 = OUTLINED_FUNCTION_51_16();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = OUTLINED_FUNCTION_51_16();
  v5(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v6();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_31_15();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v18 + 72) + 200), *(void *)(*(void *)(v18 + 72) + 224));
  uint64_t v19 = OUTLINED_FUNCTION_3_35();
  if (v20(v19))
  {
    uint64_t v22 = *(void *)(v18 + 144);
    uint64_t v21 = *(void *)(v18 + 152);
    uint64_t v23 = *(void *)(v18 + 128);
    uint64_t v24 = *(void *)(v18 + 136);
    CurrentRequest.responseMode.getter();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v21, v22, v23);
    if (ResponseMode.isVoiceMode()())
    {
      id v25 = *(int **)(class metadata base offset for StartCallCATsSimple + **(void **)(v18 + 192) + 96);
      uint64_t v67 = (char *)v25 + *v25;
      uint64_t v69 = class metadata base offset for StartCallCATsSimple + **(void **)(v18 + 192) + 96;
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v18 + 224) = v26;
      void *v26 = v18;
      v26[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:);
      OUTLINED_FUNCTION_39();
      return v29(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, v67, v69, a14, a15, a16, a17, a18);
    }
    uint64_t v36 = OUTLINED_FUNCTION_185_2();
    v37(v36);
  }
  id v38 = *(void **)(v18 + 208);
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void **)(v18 + 208);
  *(void *)(v18 + 248) = v39;
  uint64_t v40 = *(void **)(v18 + 72);
  id v41 = v38;
  swift_retain();
  unint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v68 = specialized Sequence.compactMap<A>(_:)(v42, v40);
  swift_bridgeObjectRelease();
  uint64_t v70 = v39;
  id v43 = [v39 dialog];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for DialogElement);
  unint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v44 >> 62)
  {
    OUTLINED_FUNCTION_172_2();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v45 = *(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFFF8));
    if (v45)
    {
LABEL_9:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v44 & 0xC000000000000001) == 0);
      if ((v44 & 0xC000000000000001) != 0) {
        id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v46 = *(id *)(v44 + 32);
      }
      id v47 = v46;
      swift_bridgeObjectRelease();
      id v48 = [v47 fullPrint];

      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = v50;

      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = 0;
LABEL_14:
  uint64_t v51 = *(void *)(v18 + 176);
  uint64_t v53 = *(void *)(v18 + 112);
  uint64_t v52 = *(void **)(v18 + 120);
  uint64_t v54 = *(void *)(v18 + 72);
  void *v52 = v68;
  v52[1] = v49;
  v52[2] = v45;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static DialogPhase.clarification.getter();
  uint64_t v55 = (void *)swift_task_alloc();
  v55[2] = v51;
  v55[3] = v68;
  v55[4] = v49;
  v55[5] = v45;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  __swift_project_boxed_opaque_existential_1((void *)(v54 + 256), *(void *)(v54 + 280));
  *(void *)(v18 + 40) = v53;
  *(void *)(v18 + 48) = _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, 255, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 16));
  _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_2((uint64_t)v52, (uint64_t)boxed_opaque_existential_1, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v57 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v57 + 16) = xmmword_46A030;
  *(void *)(v57 + 32) = v70;
  uint64_t v71 = v57;
  specialized Array._endMutation()();
  *(void *)(v18 + 256) = v71;
  id v58 = v70;
  uint64_t v59 = (void *)swift_task_alloc();
  *(void *)(v18 + 264) = v59;
  *uint64_t v59 = v18;
  v59[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:);
  OUTLINED_FUNCTION_39();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(v60, v61, v62, v63, v64, v65);
}

uint64_t closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ResponseType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OutputGenerationManifest.listenAfterSpeaking.setter();
  OutputGenerationManifest.canUseServerTTS.setter();
  uint64_t v10 = type metadata accessor for NLContextUpdate();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a2, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  OutputGenerationManifest.nlContextUpdate.setter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ResponseType.disambiguation(_:), v3);
  OutputGenerationManifest.responseType.setter();
  return OutputGenerationManifest.responseViewId.setter();
}

PhoneCallFlowDelegatePlugin::AppResolutionSource __swiftcall PhoneAppResolutionOnDeviceFlowStrategy.getAppResolutionSource()()
{
  return *(unsigned char *)(v0 + 344);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.selectAppConfirmation(by:)(uint64_t a1)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_36_28();
  swift_retain_n();
  uint64_t v6 = (void *)Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_58_16(v7))
  {
    uint64_t v2 = (_DWORD *)OUTLINED_FUNCTION_11_7();
    uint64_t v47 = OUTLINED_FUNCTION_10_0();
    uint64_t v57 = v47;
    *uint64_t v2 = 136315394;
    uint64_t v45 = (uint64_t)(v2 + 1);
    uint64_t v49 = v5;
    uint64_t v9 = v1[44];
    uint64_t v8 = v1[45];
    uint64_t v10 = v1[46];
    uint64_t v11 = v1[47];
    uint64_t v62 = 0;
    uint64_t v63 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v9, v8, v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v57);
    OUTLINED_FUNCTION_123_4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_6_2();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_74_7();
    uint64_t v62 = App.appIdentifier.getter();
    uint64_t v63 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_42_23();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_45_3(&dword_0, v15, v16, "%s selectAppConfirmation: user confirmed app: '%s'");
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_42_23();
    OUTLINED_FUNCTION_6_2();
  }
  PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)(a1, (uint64_t)&v51);
  uint64_t v17 = outlined init with take of AnnotatedApp?((uint64_t)&v51, (uint64_t)&v57, &demangling cache variable for type metadata for AnnotatedApp?);
  if (v57)
  {
    OUTLINED_FUNCTION_163_0(v17, v18, v19, v20, v21, v22, v23, v24, v43, v45, v47, v49, v51, v52, v53, v54, v55, v56, v57,
      v58,
      v59,
      v60,
      v61);
    type metadata accessor for AppConfirmationResponse();
    uint64_t v25 = static AppConfirmationResponse.select(app:)();
    swift_release();
    uint64_t v65 = v63;
    outlined release of Set<String>((uint64_t)&v65);
    outlined init with take of AnnotatedApp?((uint64_t)v64, (uint64_t)v66, &demangling cache variable for type metadata for String?);
    uint64_t v26 = outlined release of String?((uint64_t)v66);
    OUTLINED_FUNCTION_119_1(v26, v27, v28, v29, v30, v31, v32, v33, v44, v46, v48, v50, v51, v52, v53, v54, v55, v56, v57,
      v58,
      v59,
      v60,
      v61,
      *((uint64_t *)&v61 + 1),
      v62,
      v63,
      v64[0],
      v64[1],
      v64[2],
      v64[3]);
  }
  else if (v1[3])
  {
    OUTLINED_FUNCTION_36_28();
    swift_retain();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_31_31(v35))
    {
      uint64_t v36 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      v66[0] = OUTLINED_FUNCTION_14_0();
      *uint64_t v36 = 136315138;
      uint64_t v62 = 0;
      uint64_t v63 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_55_14();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_162_1(v62);
      OUTLINED_FUNCTION_123_4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_107_3(&dword_0, v34, (os_log_type_t)v2, "%s selectAppConfirmation: reprompt");
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
    type metadata accessor for AppConfirmationResponse();
    uint64_t v25 = static AppConfirmationResponse.confirm(app:)();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_36_28();
    uint64_t v37 = (void *)Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_4_27(v38))
    {
      OUTLINED_FUNCTION_5_22();
      v66[0] = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_156_3(4.8149e-34);
      OUTLINED_FUNCTION_73_9();
      uint64_t v62 = 0;
      uint64_t v63 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17_36();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = OUTLINED_FUNCTION_162_1(v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_10(&dword_0, v40, v41, "%s selectAppConfirmation: no app to reprompt with, cancelling");
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
    type metadata accessor for AppConfirmationResponse();
    return static AppConfirmationResponse.cancel()();
  }
  return v25;
}

void PhoneAppResolutionOnDeviceFlowStrategy.selectAppDisambiguation(by:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(v0 + 25, v0[28]);
  uint64_t v9 = OUTLINED_FUNCTION_72_14();
  v10(v9);
  OUTLINED_FUNCTION_23();
  (*(void (**)(void))(v11 + 88))();
  swift_release();
  uint64_t v12 = type metadata accessor for AppResolverResult();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v12);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v8, &demangling cache variable for type metadata for AppResolverResult?);
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v14 = v1[41];
    uint64_t v15 = v1[42];
    __swift_project_boxed_opaque_existential_1(v1 + 38, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(v3, v14, v15);
    swift_release();
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_36_28();
  OUTLINED_FUNCTION_62_15();
  uint64_t v17 = (void *)Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_58_16(v18))
  {
    OUTLINED_FUNCTION_11_7();
    *(void *)&v36[0] = OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_168_2(4.8151e-34);
    uint64_t v20 = v1[46];
    uint64_t v19 = v1[47];
    *(void *)&long long v37 = 0;
    *((void *)&v37 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = OUTLINED_FUNCTION_182_2();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v21, v22, v20, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, (uint64_t *)v36);
    OUTLINED_FUNCTION_14_27(v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_6_2();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_74_7();
    *(void *)&long long v37 = App.appIdentifier.getter();
    *((void *)&v37 + 1) = v24;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v25 = String.init<A>(describing:)();
    *(void *)&long long v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, (uint64_t *)v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_14_3();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_45_3(&dword_0, v27, v28, "%s selectAppDisambiguation: user selected app: '%s'");
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_6_2();
  }
  PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)(v3, (uint64_t)v35);
  outlined init with take of AnnotatedApp?((uint64_t)v35, (uint64_t)v36, &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v36[0])
  {
    long long v37 = v36[0];
    long long v38 = v36[1];
    long long v39 = v36[2];
    type metadata accessor for AppDisambiguationResponse();
    static AppDisambiguationResponse.select(app:)();
    swift_release();
    uint64_t v40 = *((void *)&v37 + 1);
    outlined release of Set<String>((uint64_t)&v40);
    outlined init with take of AnnotatedApp?((uint64_t)&v38, (uint64_t)v41, &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v41);
    uint64_t v42 = *((void *)&v39 + 1);
    outlined release of Set<String>((uint64_t)&v42);
  }
  else
  {
    OUTLINED_FUNCTION_36_28();
    uint64_t v29 = (void *)Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_4_27(v30))
    {
      OUTLINED_FUNCTION_5_22();
      v41[0] = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_114_1(4.8149e-34);
      OUTLINED_FUNCTION_73_9();
      *(void *)&long long v37 = 0;
      *((void *)&v37 + 1) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17_36();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = OUTLINED_FUNCTION_162_1(v37);
      OUTLINED_FUNCTION_14_27(v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_10(&dword_0, v33, v34, "%s selectAppDisambiguation: reprompt");
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
    type metadata accessor for AppDisambiguationResponse();
    swift_bridgeObjectRetain();
    static AppDisambiguationResponse.disambiguate(apps:)();
    OUTLINED_FUNCTION_35_26();
  }
  OUTLINED_FUNCTION_26_1();
}

void PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t *)v2;
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v7 = *(void *)(v2 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), v6);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 200), *(void *)(v2 + 224));
  OUTLINED_FUNCTION_24_2();
  v8();
  (*(void (**)(void *__return_ptr, uint64_t, long long *, void, uint64_t, uint64_t))(v7 + 16))(v66, a1, &v70, *(unsigned __int8 *)(v2 + 344), v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
  outlined init with take of AnnotatedApp?((uint64_t)v66, (uint64_t)&v67, &demangling cache variable for type metadata for AnnotatedApp?);
  uint64_t v9 = v67;
  if ((void)v67)
  {
    uint64_t v60 = (void *)(v2 + 200);
    long long v61 = v68;
    long long v70 = v67;
    long long v71 = v68;
    long long v72 = v69;
    uint64_t v10 = *((void *)&v67 + 1);
    uint64_t v11 = v69;
    uint64_t v12 = *((void *)&v69 + 1);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
    uint64_t v73 = *((void *)&v70 + 1);
    outlined init with take of AnnotatedApp?((uint64_t)&v71, (uint64_t)v74, &demangling cache variable for type metadata for String?);
    v75[0] = *((void *)&v72 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    outlined retain of Set<String>((uint64_t)&v73);
    outlined retain of String?((uint64_t)v74);
    outlined retain of Set<String>((uint64_t)v75);
    swift_retain();
    swift_retain();
    swift_retain();
    outlined retain of Set<String>((uint64_t)&v73);
    outlined retain of String?((uint64_t)v74);
    outlined retain of Set<String>((uint64_t)v75);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v58 = v9;
      uint64_t v17 = OUTLINED_FUNCTION_14_0();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v62 = v52;
      v63[0] = 0;
      *(_DWORD *)uint64_t v17 = 136315650;
      HIDWORD(v50) = v16;
      uint64_t v56 = v11;
      uint64_t v53 = v10;
      uint64_t v18 = v3[44];
      uint64_t v19 = v3[45];
      OUTLINED_FUNCTION_110_4();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v18, v19, 0xD000000000000024, 0x800000000049B080);
      uint64_t v20 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44_22(v20, v21, v22, v23, v24, v25, v26, v27, (uint64_t)v14, v50, v52, v53, v12, v56, v58, (uint64_t)v60, v61, *((uint64_t *)&v61 + 1), v62,
        v63[0],
        v63[1]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_2_30();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      v63[0] = a1;
      type metadata accessor for App();
      _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, 255, (void (*)(uint64_t))&type metadata accessor for App);
      uint64_t v10 = v54;
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      v63[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v62);
      uint64_t v12 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_42_23();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2080;
      swift_retain();
      outlined retain of Set<String>((uint64_t)&v73);
      outlined retain of String?((uint64_t)v74);
      outlined retain of Set<String>((uint64_t)v75);
      AnnotatedApp.description.getter();
      swift_release();
      outlined release of Set<String>((uint64_t)&v73);
      outlined release of String?((uint64_t)v74);
      outlined release of Set<String>((uint64_t)v75);
      uint64_t v30 = OUTLINED_FUNCTION_80_5();
      v63[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      uint64_t v11 = v57;
      swift_bridgeObjectRelease();
      outlined release of Set<String>((uint64_t)&v73);
      outlined release of String?((uint64_t)v74);
      outlined release of Set<String>((uint64_t)v75);
      swift_release();
      outlined release of Set<String>((uint64_t)&v73);
      outlined release of String?((uint64_t)v74);
      outlined release of Set<String>((uint64_t)v75);
      _os_log_impl(&dword_0, log, type, "%s for %s: %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      uint64_t v9 = v59;
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_42_23();
      OUTLINED_FUNCTION_2_30();
      outlined release of Set<String>((uint64_t)&v73);
      outlined release of String?((uint64_t)v74);
      outlined release of Set<String>((uint64_t)v75);
      swift_release();
      outlined release of Set<String>((uint64_t)&v73);
      outlined release of String?((uint64_t)v74);
      outlined release of Set<String>((uint64_t)v75);
    }
    __swift_project_boxed_opaque_existential_1(v60, v3[28]);
    uint64_t v44 = OUTLINED_FUNCTION_6_23();
    v45(v44);
    uint64_t v46 = v64;
    uint64_t v47 = v65;
    __swift_project_boxed_opaque_existential_1(v63, v64);
    (*(void (**)(long long *, uint64_t, uint64_t))(v47 + 8))(&v70, v46, v47);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    long long v48 = v61;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_48_21();
    swift_retain_n();
    swift_retain_n();
    uint64_t v34 = (void *)Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_58_16(v35))
    {
      uint64_t v36 = (_DWORD *)OUTLINED_FUNCTION_11_7();
      v63[0] = OUTLINED_FUNCTION_10_0();
      *uint64_t v36 = 136315394;
      uint64_t v38 = *(void *)(v2 + 352);
      uint64_t v37 = *(void *)(v2 + 360);
      *(void *)&long long v70 = 0;
      *((void *)&v70 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v38, v37, 0xD000000000000024, 0x800000000049B080);
      swift_bridgeObjectRelease();
      uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, *((unint64_t *)&v70 + 1), v63);
      OUTLINED_FUNCTION_14_27(v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_2_30();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_74_7();
      *(void *)&long long v70 = a1;
      type metadata accessor for App();
      _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, 255, (void (*)(uint64_t))&type metadata accessor for App);
      uint64_t v9 = 0;
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_42_23();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_45_3(&dword_0, v42, v43, "%s AnnotatedAppFinder didn't find on-device record for %s");
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_42_23();
      OUTLINED_FUNCTION_2_30();
    }
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    long long v48 = 0uLL;
  }
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v48;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
}

#error "337F2C: call analysis failed (funcsize=142)"

#error "338320: call analysis failed (funcsize=113)"

void PhoneAppResolutionOnDeviceFlowStrategy.buildUpInputIntent(phoneCallNLIntent:sharedGlobals:app:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_57();
  a25 = v27;
  a26 = v28;
  uint64_t v35 = static PhoneCallRequestSupportPolicy.getSiriKitIntent(phoneCallNLIntent:sharedGlobals:app:intentTypeName:)(v29, (void *)(v26 + 200), v30, 8, v31, v32, v33, v34);
  if (!v35) {
    goto LABEL_10;
  }
  uint64_t v36 = (void *)v35;
  swift_getObjectType();
  if (!dynamic_cast_existential_1_conditional((uint64_t)v36))
  {

LABEL_10:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    __swift_project_value_buffer(v49, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_36_28();
    uint64_t v50 = (void *)Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_4_27(v51))
    {
      OUTLINED_FUNCTION_5_22();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_114_1(4.8149e-34);
      OUTLINED_FUNCTION_73_9();
      unint64_t v57 = v53;
      a14 = v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17_36();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, v57, &a14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_10(&dword_0, v54, v55, "%s buildUpInputIntent, get nil INIntent");
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
    goto LABEL_17;
  }
  uint64_t v38 = v37;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v40 = *(void *)(*(void *)(v38 + 8) + 8);
  unint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(ObjectType, v40);
  if (v41)
  {
    unint64_t v42 = v41;
    if (v41 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_6;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_6:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v42 & 0xC000000000000001) == 0, v42);
      if ((v42 & 0xC000000000000001) != 0) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v42 + 32);
      }
      uint64_t v44 = v43;
      swift_bridgeObjectRelease();
      Swift::String v45 = INPerson.asBase64()();
      outlined bridged method (mbnn) of @objc INPerson.contactIdentifier.setter(v45._countAndFlagsBits, (uint64_t)v45._object, v44);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v46 = OUTLINED_FUNCTION_93();
      *(_OWORD *)(v46 + 16) = xmmword_46A030;
      *(void *)(v46 + 32) = v44;
      uint64_t v56 = v46;
      specialized Array._endMutation()();
      uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
      id v48 = v44;
      v47(v56, ObjectType, v40);
    }
    swift_bridgeObjectRelease();
  }
LABEL_17:
  OUTLINED_FUNCTION_143_3();
  OUTLINED_FUNCTION_34_20();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:));
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:)()
{
  uint64_t v187 = v0;
  unint64_t v1 = v0[13];
  uint64_t v2 = v1 >> 62;
  if (v1 >> 62) {
    goto LABEL_54;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    if (v3 < 2)
    {
      if (v3 != 1)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v52 = type metadata accessor for Logger();
        int v53 = __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
        OUTLINED_FUNCTION_44_4();
        int v54 = v53;
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        BOOL v57 = OUTLINED_FUNCTION_8_2(v56);
        uint64_t v58 = (void *)v0[14];
        if (v57)
        {
          LODWORD(v175) = v54;
          uint64_t v59 = (_DWORD *)OUTLINED_FUNCTION_5_22();
          os_log_t v168 = (os_log_t)OUTLINED_FUNCTION_14_0();
          uint64_t v179 = (uint64_t)v168;
          uint64_t v180 = 0;
          *uint64_t v59 = 136315138;
          uint64_t v157 = (uint64_t)(v59 + 1);
          uint64_t v161 = (uint64_t)v59;
          uint64_t v61 = v58[44];
          uint64_t v60 = v58[45];
          uint64_t v62 = v58[46];
          uint64_t v63 = v58[47];
          OUTLINED_FUNCTION_110_4();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v61, v60, v62, v63);
          swift_bridgeObjectRelease();
          uint64_t v64 = swift_bridgeObjectRelease();
          uint64_t v72 = OUTLINED_FUNCTION_44_22(v64, v65, v66, v67, v68, v69, v70, v71, v144, v146, v148, (uint64_t)log, type, v157, v161, (uint64_t)v168, (uint64_t)(v0 + 6), v175, v179,
                  v180,
                  v181);
          OUTLINED_FUNCTION_137_1(v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_39_10();
          OUTLINED_FUNCTION_55_7(&dword_0, v55, v176, "%s executeSmartAppSelect: Couldn't find an app. Skipping Smart enough App Selection ..");
          OUTLINED_FUNCTION_65_8();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
          OUTLINED_FUNCTION_39_10();
        }

        goto LABEL_50;
      }
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
      swift_bridgeObjectRetain_n();
      OUTLINED_FUNCTION_44_4();
      uint64_t v28 = Logger.logObject.getter();
      int v29 = static os_log_type_t.debug.getter();
      BOOL v30 = os_log_type_enabled(v28, (os_log_type_t)v29);
      uint64_t v31 = v0[13];
      uint64_t v32 = (void *)v0[14];
      if (v30)
      {
        LODWORD(v159) = v29;
        uint64_t v33 = OUTLINED_FUNCTION_11_7();
        uint64_t v156 = OUTLINED_FUNCTION_10_0();
        uint64_t v179 = v156;
        uint64_t v180 = 0;
        *(_DWORD *)uint64_t v33 = 136315394;
        uint64_t v35 = v32[44];
        uint64_t v34 = v32[45];
        uint64_t v36 = v32[46];
        uint64_t v37 = v32[47];
        OUTLINED_FUNCTION_110_4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v35, v34, v36, v37);
        swift_bridgeObjectRelease();
        uint64_t v38 = swift_bridgeObjectRelease();
        v0[4] = OUTLINED_FUNCTION_44_22(v38, v39, v40, v41, v42, v43, v44, v45, v144, (uint64_t)(v0 + 5), v33 + 4, (uint64_t)(v0 + 4), (uint64_t)(v0 + 2), v156, v159, (uint64_t)v28, (uint64_t)(v0 + 6), (uint64_t)(v0 + 7), v179,
                  v180,
                  v181);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_2_30();
        *(_WORD *)(v33 + 12) = 2080;
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v1 & 0xC000000000000001) == 0, v31);
        if ((v1 & 0xC000000000000001) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        uint64_t v46 = App.appIdentifier.getter();
        uint64_t v48 = v47;
        swift_release();
        v0[2] = v46;
        v0[3] = v48;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
        uint64_t v49 = String.init<A>(describing:)();
        v0[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, &v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v28 = v167;
        _os_log_impl(&dword_0, v167, v160, "%s executeSmartAppSelect: Found a single app '%s'. Skipping Smart enough App Selection ..", (uint8_t *)v33, 0x16u);
        OUTLINED_FUNCTION_69_10();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        OUTLINED_FUNCTION_2_30();
        swift_bridgeObjectRelease_n();
      }
LABEL_49:

      goto LABEL_50;
    }
    uint64_t v171 = (uint64_t)(v0 + 9);
    uint64_t v175 = (uint64_t)(v0 + 7);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_44_4();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    int v8 = v7;
    BOOL v9 = os_log_type_enabled(v6, v7);
    uint64_t v10 = v0[14];
    if (v9)
    {
      os_log_t v166 = (os_log_t)v5;
      uint64_t v11 = OUTLINED_FUNCTION_11_7();
      uint64_t v155 = OUTLINED_FUNCTION_10_0();
      uint64_t v179 = v155;
      uint64_t v180 = 0;
      *(_DWORD *)uint64_t v11 = 136315394;
      LODWORD(type) = v8;
      uint64_t v13 = *(void *)(v10 + 368);
      uint64_t v12 = *(void *)(v10 + 376);
      OUTLINED_FUNCTION_110_4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = OUTLINED_FUNCTION_7_14();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v14, v15, v13, v12);
      swift_bridgeObjectRelease();
      uint64_t v16 = swift_bridgeObjectRelease();
      v0[9] = OUTLINED_FUNCTION_44_22(v16, v17, v18, v19, v20, v21, v22, v23, v144, v11 + 4, (uint64_t)(v0 + 10), (uint64_t)v6, type, v155, v2, (uint64_t)v166, v171, v175, v179,
                v180,
                v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_65_3();
      *(_WORD *)(v11 + 12) = 2080;
      type metadata accessor for App();
      swift_bridgeObjectRetain();
      uint64_t v24 = Array.description.getter();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      v0[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v26, &v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v2 = v159;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, log, (os_log_type_t)type, "%s executeSmartAppSelect: Found more than 1 app:'%s'. Running Smart enough App Selection ..", (uint8_t *)v11, 0x16u);
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_65_3();
      swift_bridgeObjectRelease_n();
    }
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v51 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
    }
    if (!v51) {
      break;
    }
    uint64_t v2 = v1 & 0xC000000000000001;
    if ((v1 & 0xC000000000000001) != 0)
    {
      unint64_t v1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      unint64_t v1 = *(void *)(v0[13] + 32);
      swift_retain();
    }
    if (App.isFirstParty()())
    {
LABEL_27:
      v0[15] = v1;
      uint64_t v73 = v0[14];
      uint64_t v74 = v0[12];
      swift_bridgeObjectRelease();
      PhoneAppResolutionOnDeviceFlowStrategy.buildUpInputIntent(phoneCallNLIntent:sharedGlobals:app:)(v74, v75, v1, v76, v77, v78, v79, v80, v144, v146, v148, (uint64_t)log, type, v154, v159, (uint64_t)v165, v171, v175, v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186);
      v0[16] = v81;
      uint64_t v83 = v0[14];
      if (v81)
      {
        uint64_t v84 = v81;
        uint64_t v85 = v82;
        uint64_t v86 = v0[13];
        uint64_t v87 = *(void *)(v83 + 232);
        __swift_project_boxed_opaque_existential_1((void *)(v73 + 200), *(void *)(v83 + 224));
        uint64_t v88 = OUTLINED_FUNCTION_48_21();
        v89(v88, v87);
        OUTLINED_FUNCTION_23();
        uint64_t v91 = *(void (**)(void *, uint64_t))(v90 + 176);
        id v92 = v84;
        v91(v84, v85);

        swift_release();
        OUTLINED_FUNCTION_22();
        uint64_t v94 = (*(uint64_t (**)(uint64_t))(v93 + 240))(v86);
        v0[17] = v94;
        OUTLINED_FUNCTION_22();
        v173 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))(*(void *)(v95 + 216)
                                                                              + **(int **)(v95 + 216));
        swift_task_alloc();
        OUTLINED_FUNCTION_31_2();
        v0[18] = v96;
        void *v96 = v97;
        v96[1] = PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:);
        uint64_t v98 = v0[11];
        uint64_t v99 = v0[12];
        return v173(v98, v92, v85, v99, v94);
      }
      swift_retain_n();
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v122 = static os_log_type_t.error.getter();
      int v123 = v122;
      BOOL v124 = os_log_type_enabled(v28, v122);
      os_log_type_t v125 = (void *)v0[14];
      if (v124)
      {
        LODWORD(v162) = v123;
        uint64_t v126 = OUTLINED_FUNCTION_5_22();
        os_log_t v170 = (os_log_t)OUTLINED_FUNCTION_14_0();
        uint64_t v179 = (uint64_t)v170;
        uint64_t v180 = 0;
        OUTLINED_FUNCTION_98_7(4.8149e-34);
        uint64_t typea = v127;
        uint64_t v158 = v126;
        uint64_t v129 = v125[44];
        uint64_t v128 = v125[45];
        uint64_t v130 = v125[46];
        uint64_t v131 = v125[47];
        OUTLINED_FUNCTION_110_4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v129, v128, v130, v131);
        swift_bridgeObjectRelease();
        uint64_t v132 = swift_bridgeObjectRelease();
        uint64_t v140 = OUTLINED_FUNCTION_44_22(v132, v133, v134, v135, v136, v137, v138, v139, v145, v147, v149, (uint64_t)loga, typea, v158, v162, (uint64_t)v170, v172, (uint64_t)v28, v179,
                 v180,
                 v181);
        OUTLINED_FUNCTION_137_1(v140);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_39_10();
        uint64_t v28 = v178;
        OUTLINED_FUNCTION_107_3(&dword_0, v178, v164, "%s executeSmartAppSelect: couldn't convert phoneCallNLIntent to an INStartCallIntent (using a 1P Phone app)..");
        OUTLINED_FUNCTION_65_8();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
        swift_release();
      }
      else
      {
        swift_release();
        OUTLINED_FUNCTION_39_10();
      }
      goto LABEL_49;
    }
    swift_release();
    if (v51 == 1) {
      break;
    }
    uint64_t v101 = v0[13];
    uint64_t v102 = 5;
    while (1)
    {
      if (v2)
      {
        unint64_t v1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        unint64_t v1 = *(void *)(v101 + 8 * v102);
        swift_retain();
      }
      uint64_t v103 = v102 - 3;
      if (__OFADD__(v102 - 4, 1)) {
        break;
      }
      if (App.isFirstParty()()) {
        goto LABEL_27;
      }
      swift_release();
      ++v102;
      if (v103 == v51) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_39:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44_4();
  uint64_t v104 = Logger.logObject.getter();
  os_log_type_t v105 = static os_log_type_t.error.getter();
  BOOL v106 = OUTLINED_FUNCTION_4_27(v105);
  uint64_t v107 = (void *)v0[14];
  if (v106)
  {
    unint64_t v108 = OUTLINED_FUNCTION_5_22();
    uint64_t v174 = OUTLINED_FUNCTION_14_0();
    uint64_t v179 = v174;
    uint64_t v180 = 0;
    LODWORD(v108->isa) = 136315138;
    uint64_t v163 = (uint64_t)&v108->isa + 4;
    os_log_t v169 = v108;
    uint64_t v109 = v107[44];
    uint64_t v110 = v107[45];
    uint64_t v112 = v107[46];
    uint64_t v111 = v107[47];
    OUTLINED_FUNCTION_110_4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v109, v110, v112, v111);
    swift_bridgeObjectRelease();
    uint64_t v113 = swift_bridgeObjectRelease();
    uint64_t v121 = OUTLINED_FUNCTION_44_22(v113, v114, v115, v116, v117, v118, v119, v120, v144, v146, v148, (uint64_t)log, type, (uint64_t)(v0 + 8), v163, (uint64_t)v169, v174, v175, v179,
             v180,
             v181);
    *uint64_t v177 = v121;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_10();
    OUTLINED_FUNCTION_55_7(&dword_0, v104, (os_log_type_t)v1, "%s executeSmartAppSelect: can't find any 1p app..");
    OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_39_10();
  }

LABEL_50:
  uint64_t v141 = v0[11];
  uint64_t v142 = type metadata accessor for AppResolverResult();
  __swift_storeEnumTagSinglePayload(v141, 1, 1, v142);
  OUTLINED_FUNCTION_47_0();
  return v143();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  unint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  unint64_t v1 = *(void **)(v0 + 128);
  swift_release();

  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = type metadata accessor for AppResolverResult();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v3);
  OUTLINED_FUNCTION_47_0();
  return v4();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelectAction(phoneCallNLIntent:recommendation:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[29] = v2;
  v1[30] = v0;
  uint64_t v3 = type metadata accessor for AppResolverResult();
  v1[31] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[32] = v4;
  v1[33] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  os_log_type_t v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  os_log_type_t v43;
  BOOL v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  int v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  int v126;
  os_log_type_t v127;
  BOOL v128;
  void *v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  os_log_type_t v160;
  BOOL v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  unint64_t v177;
  void *v178;
  os_log_type_t v179;
  BOOL v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  NSObject *v199;
  os_log_type_t v200;
  BOOL v201;
  void *v202;
  _DWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  NSObject *v220;
  os_log_type_t v221;
  BOOL v222;
  uint64_t v223;
  _DWORD *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t (*v238)(uint64_t);
  uint64_t v240;
  uint64_t v241;
  NSObject *v242;
  uint64_t v243;
  os_log_t log;
  uint64_t type;
  uint64_t typea;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void *v257;
  void *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  void *v264;
  void *v265;
  void *v266;
  uint64_t v267;
  void *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void *v272;
  void *v273;
  os_log_type_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  void *v287;
  uint64_t v288;

  v287 = v0;
  unint64_t v1 = (uint64_t)v0;
  uint64_t v2 = v0 + 29;
  uint64_t v3 = (uint64_t)(v0 + 25);
  (*(void (**)(void, void, void))(v0[32] + 16))(v0[33], v0[29], v0[31]);
  uint64_t v4 = OUTLINED_FUNCTION_75();
  uint64_t v6 = v5(v4);
  if (v6 == enum case for AppResolverResult.resolved(_:))
  {
    uint64_t v7 = (uint64_t)(v0 + 27);
    int v8 = OUTLINED_FUNCTION_80_6();
    v9(v8);
    OUTLINED_FUNCTION_22();
    uint64_t v11 = (*(uint64_t (**)(void))(v10 + 248))();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    v260 = (uint64_t)(v0 + 26);
    uint64_t v14 = OUTLINED_FUNCTION_115_3();
    uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_44_4();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = (void *)Logger.logObject.getter();
    uint64_t v17 = static os_log_type_t.debug.getter();
    uint64_t v18 = OUTLINED_FUNCTION_21_19(v17);
    uint64_t v19 = (void *)v0[30];
    v270 = (uint64_t)(v0 + 25);
    v280 = (uint64_t)v0;
    if (v18)
    {
      OUTLINED_FUNCTION_11_7();
      v284 = OUTLINED_FUNCTION_10_0();
      v285 = 0;
      OUTLINED_FUNCTION_171_2(4.8151e-34);
      v256 = v15;
      uint64_t v20 = v19[44];
      uint64_t v21 = v19[45];
      uint64_t v22 = v19[46];
      unint64_t v1 = v19[47];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = v22;
      uint64_t v7 = (uint64_t)(v2 - 2);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v20, v21, v23, v1);
      swift_bridgeObjectRelease();
      uint64_t v24 = OUTLINED_FUNCTION_180_0();
      *(v2 - 2) = OUTLINED_FUNCTION_16_48(v24, v25, v26, v27, v28, v29, v30, v31, v240, v241, (uint64_t)v16, (uint64_t)(v2 - 1), type, v284, v11, v256, v260, v3, v280,
                    v284,
                    0,
                    0xE000000000000000);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_30();
      OUTLINED_FUNCTION_118_4();
      swift_bridgeObjectRetain();
      log->Class isa = (Class)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, &v284);
      OUTLINED_FUNCTION_105_2();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_81_9(&dword_0, v242, (os_log_type_t)type, "%s executeSmartAppSelect: AppSelection resolved to app: '%s'.");
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_2_30();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v64 = *(void *)(v1 + 240);
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v66 = PhoneAppResolutionOnDeviceFlowStrategy.getSeASPredictableAppsList(apps:)(v65);
    swift_bridgeObjectRelease();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v67 = specialized Sequence.first(where:)(v66, v64, v11, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v68 = *(void *)(v1 + 240);
    if (v67)
    {
      uint64_t v69 = v2 - 27;
      uint64_t v70 = v2 - 21;
      *(unsigned char *)(v68 + 344) = 3;
      PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)(v67, (uint64_t)v70);
      outlined release of AnnotatedApp?(v70);
      outlined init with take of AnnotatedApp?((uint64_t)v70, (uint64_t)v69, &demangling cache variable for type metadata for AnnotatedApp?);
      if (*v69)
      {
        type metadata accessor for AppResolutionAction();
        OUTLINED_FUNCTION_48_21();
        static AppResolutionAction.select(app:)();
        OUTLINED_FUNCTION_48_21();
LABEL_25:
        swift_release();
        goto LABEL_62;
      }
      swift_retain_n();
      uint64_t v144 = Logger.logObject.getter();
      uint64_t v145 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_131_3(v145))
      {
        OUTLINED_FUNCTION_5_22();
        v275 = OUTLINED_FUNCTION_14_0();
        v284 = v275;
        v285 = 0;
        OUTLINED_FUNCTION_188_2(4.8149e-34);
        v253 = v146;
        OUTLINED_FUNCTION_181_1();
        v286 = v147;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v148 = OUTLINED_FUNCTION_145_3();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v148, v149, v150, v66);
        swift_bridgeObjectRelease();
        uint64_t v151 = swift_bridgeObjectRelease();
        uint64_t v159 = OUTLINED_FUNCTION_16_48(v151, v152, v153, v154, v155, v156, v157, v158, v240, v241, (uint64_t)v242, (uint64_t)log, type, v7, v253, v255, v260, v275, v280,
                 v284,
                 v285,
                 v286);
        *v263 = v159;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_43_0();
        OUTLINED_FUNCTION_55_7(&dword_0, v144, (os_log_type_t)v1, "%s executeSmartAppSelect: AnnotatedAppFinder could not find the resolved app");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
        swift_release();
      }
      else
      {
        swift_release();
        OUTLINED_FUNCTION_43_0();
      }

      goto LABEL_61;
    }
    OUTLINED_FUNCTION_44_4();
    os_log_type_t v105 = Logger.logObject.getter();
    BOOL v106 = static os_log_type_t.error.getter();
    uint64_t v107 = OUTLINED_FUNCTION_37_0(v106);
    unint64_t v108 = *(void *)(v1 + 240);
    if (v107)
    {
      OUTLINED_FUNCTION_5_22();
      v259 = OUTLINED_FUNCTION_14_0();
      v284 = v259;
      v285 = 0;
      OUTLINED_FUNCTION_148_2(4.8149e-34);
      unint64_t v1 = *(void *)(v108 + 376);
      v286 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17_36();
      swift_bridgeObjectRelease();
      uint64_t v109 = OUTLINED_FUNCTION_180_0();
      uint64_t v117 = OUTLINED_FUNCTION_16_48(v109, v110, v111, v112, v113, v114, v115, v116, v240, v241, (uint64_t)v242, (uint64_t)log, type, v247, v249, v259, v260, v270, v280,
               v284,
               v285,
               v286);
      OUTLINED_FUNCTION_96_6(v117, v273);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_0();
      OUTLINED_FUNCTION_86(&dword_0, v118, v119, "%s executeSmartAppSelect: Could not find the resolved app");
LABEL_35:
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_6();
      goto LABEL_36;
    }
    goto LABEL_37;
  }
  if (v6 == enum case for AppResolverResult.needsConfirmation(_:))
  {
    v257 = v0 + 23;
    uint64_t v32 = v0[33];
    uint64_t v33 = OUTLINED_FUNCTION_80_6();
    v34(v33);
    uint64_t v35 = *(void *)(v32 + 8);
    OUTLINED_FUNCTION_22();
    uint64_t v37 = (*(uint64_t (**)(void))(v36 + 248))();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v40 = OUTLINED_FUNCTION_115_3();
    uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_44_4();
    swift_bridgeObjectRetain_n();
    uint64_t v42 = (void *)Logger.logObject.getter();
    uint64_t v43 = static os_log_type_t.debug.getter();
    uint64_t v44 = OUTLINED_FUNCTION_21_19(v43);
    uint64_t v45 = *(void **)(v1 + 240);
    v261 = (uint64_t)(v2 - 7);
    if (v44)
    {
      v243 = (uint64_t)(v2 - 5);
      uint64_t v46 = OUTLINED_FUNCTION_11_7();
      v248 = OUTLINED_FUNCTION_10_0();
      v284 = v248;
      v285 = 0;
      *(_DWORD *)uint64_t v46 = 136315394;
      v250 = v41;
      uint64_t v47 = v37;
      LODWORD(type) = v35;
      uint64_t v48 = v45[44];
      uint64_t v49 = v45[45];
      v271 = v3;
      unint64_t v50 = v1;
      uint64_t v51 = v45[46];
      uint64_t v52 = v45[47];
      OUTLINED_FUNCTION_146_3();
      swift_bridgeObjectRetain();
      int v53 = v48;
      uint64_t v37 = v47;
      int v54 = v51;
      unint64_t v1 = v50;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v53, v49, v54, v52);
      swift_bridgeObjectRelease();
      uint64_t v55 = swift_bridgeObjectRelease();
      uint64_t v63 = OUTLINED_FUNCTION_16_48(v55, v56, v57, v58, v59, v60, v61, v62, v240, v46 + 4, v243, (uint64_t)v42, type, v248, v250, (uint64_t)v257, v261, v271, v279,
              v284,
              v285,
              v286);
      OUTLINED_FUNCTION_95_6(v63, v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_3();
      *(_WORD *)(v46 + 12) = 2080;
      swift_bridgeObjectRetain();
      v242->Class isa = (Class)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v39, &v284);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, log, (os_log_type_t)type, "%s executeSmartAppSelect: AppSelection recommends to confirm app: '%s'.", (uint8_t *)v46, 0x16u);
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_14_3();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v120 = *(void *)(v1 + 240);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v121 = swift_bridgeObjectRetain();
    os_log_type_t v122 = specialized Sequence.first(where:)(v121, v120, v37, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v123 = *(void *)(v1 + 240);
    if (v122)
    {
      uint64_t v68 = *(void *)(v123 + 24);
      *(void *)(v123 + 24) = v122;
      swift_retain();
      swift_release();
      type metadata accessor for AppResolutionAction();
      OUTLINED_FUNCTION_18_22();
      static AppResolutionAction.confirmAfterAuthorizationChecks(app:)();
      OUTLINED_FUNCTION_18_22();
      goto LABEL_25;
    }
    swift_retain_n();
    os_log_type_t v105 = Logger.logObject.getter();
    os_log_type_t v160 = static os_log_type_t.error.getter();
    uint64_t v161 = OUTLINED_FUNCTION_37_0(v160);
    uint64_t v162 = *(void *)(v1 + 240);
    if (v161)
    {
      OUTLINED_FUNCTION_5_22();
      v276 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_148_2(4.8149e-34);
      v282 = v1;
      v284 = v163;
      unint64_t v1 = *(void *)(v162 + 376);
      v285 = 0;
      v286 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17_36();
      swift_bridgeObjectRelease();
      os_log_type_t v164 = OUTLINED_FUNCTION_180_0();
      uint64_t v172 = OUTLINED_FUNCTION_16_48(v164, v165, v166, v167, v168, v169, v170, v171, v240, v241, (uint64_t)v242, (uint64_t)log, type, v247, v249, (uint64_t)v257, v261, v276, v282,
               v284,
               v285,
               v286);
      OUTLINED_FUNCTION_96_6(v172, v264);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_0();
      OUTLINED_FUNCTION_86(&dword_0, v173, v174, "%s executeSmartAppSelect: Could not find the app to confirm");
      goto LABEL_35;
    }
LABEL_37:
    swift_release_n();
    goto LABEL_38;
  }
  if (v6 != enum case for AppResolverResult.needsDisambiguation(_:))
  {
    BOOL v124 = v0 + 15;
    if (v6 != enum case for AppResolverResult.noMatchFound(_:))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v198 = OUTLINED_FUNCTION_115_3();
      __swift_project_value_buffer(v198, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_44_4();
      v199 = Logger.logObject.getter();
      uint64_t v200 = static os_log_type_t.debug.getter();
      unint64_t v201 = os_log_type_enabled(v199, v200);
      v283 = v0;
      long long v202 = (void *)v0[30];
      if (v201)
      {
        uint64_t v203 = (_DWORD *)OUTLINED_FUNCTION_5_22();
        v277 = OUTLINED_FUNCTION_14_0();
        v284 = v277;
        v285 = 0;
        *uint64_t v203 = 136315138;
        unint64_t v205 = v202[44];
        uint64_t v204 = v202[45];
        v207 = v202[46];
        uint64_t v206 = v202[47];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v205, v204, v207, v206);
        swift_bridgeObjectRelease();
        v208 = swift_bridgeObjectRelease();
        v216 = OUTLINED_FUNCTION_16_48(v208, v209, v210, v211, v212, v213, v214, v215, v240, v241, (uint64_t)v242, (uint64_t)log, type, v247, (uint64_t)(v0 + 15), (uint64_t)(v203 + 1), (uint64_t)(v0 + 14), v277, (uint64_t)v0,
                 v284,
                 v285,
                 0xE000000000000000);
        OUTLINED_FUNCTION_95_6(v216, v266);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_43_0();
        OUTLINED_FUNCTION_107_3(&dword_0, v199, v200, "%s executeSmartAppSelect: AppSelection returned an unknown value, defaulting");
        OUTLINED_FUNCTION_41_3();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        OUTLINED_FUNCTION_43_0();
      }

      unint64_t v1 = (uint64_t)v283;
      (*(void (**)(void, void))(v283[32] + 8))(v283[33], v283[31]);
      goto LABEL_39;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    os_log_type_t v125 = OUTLINED_FUNCTION_115_3();
    uint64_t v126 = __swift_project_value_buffer(v125, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_44_4();
    os_log_type_t v105 = Logger.logObject.getter();
    uint64_t v127 = static os_log_type_t.debug.getter();
    uint64_t v128 = OUTLINED_FUNCTION_8_2(v127);
    uint64_t v129 = *(void **)(v1 + 240);
    if (v128)
    {
      LODWORD(v269) = v126;
      OUTLINED_FUNCTION_5_22();
      v262 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_188_2(4.8149e-34);
      v252 = v130;
      uint64_t v131 = v124;
      uint64_t v132 = v129[44];
      uint64_t v133 = v129[45];
      v281 = v1;
      v284 = v134;
      uint64_t v135 = v129[46];
      unint64_t v1 = v129[47];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v132, v133, v135, v1);
      swift_bridgeObjectRelease();
      uint64_t v136 = OUTLINED_FUNCTION_180_0();
      _DWORD *v131 = OUTLINED_FUNCTION_16_48(v136, v137, v138, v139, v140, v141, v142, v143, v240, v241, (uint64_t)v242, (uint64_t)log, type, v247, v252, v255, v262, v269, v281,
                v284,
                0,
                0xE000000000000000);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_3();
      OUTLINED_FUNCTION_55_7(&dword_0, v105, v274, "%s executeSmartAppSelect: AppSelection returned no app.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
LABEL_36:
      OUTLINED_FUNCTION_6();
LABEL_38:

LABEL_39:
      uint64_t v68 = 0;
      goto LABEL_62;
    }
    goto LABEL_37;
  }
  v272 = v0 + 20;
  uint64_t v71 = (uint64_t *)v0[33];
  uint64_t v72 = v0[30];
  uint64_t v73 = OUTLINED_FUNCTION_80_6();
  v74(v73);
  uint64_t v75 = *v71;
  swift_retain();
  uint64_t v76 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySSG_SSs5NeverOTg5242_s27PhoneCallFlowDelegatePlugin0a21AppResolutionOnDeviceC8StrategyC012executeSmartF12SelectAction014_2180D48ACD6B0Q17EE181017F885BCBA505phoneB8NLIntent14recommendation07SiriKitC00fgN0CSgAA0abV0_p_0X9Inference0F14ResolverResultOtYaFS2SXEfU1_0fghI6Plugin0fklmnhP0CTf1cn_n(v75, v72);
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  v258 = v2 - 11;
  uint64_t v77 = OUTLINED_FUNCTION_115_3();
  uint64_t v78 = __swift_project_value_buffer(v77, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_44_4();
  swift_bridgeObjectRetain_n();
  uint64_t v79 = Logger.logObject.getter();
  uint64_t v80 = static os_log_type_t.debug.getter();
  uint64_t v81 = v80;
  uint64_t v82 = os_log_type_enabled(v79, v80);
  uint64_t v83 = *(void *)(v1 + 240);
  if (v82)
  {
    v251 = v78;
    uint64_t v84 = OUTLINED_FUNCTION_11_7();
    uint64_t typea = OUTLINED_FUNCTION_10_0();
    v284 = typea;
    v285 = 0;
    *(_DWORD *)uint64_t v84 = 136315394;
    uint64_t v85 = v1;
    LODWORD(v242) = v81;
    uint64_t v86 = v76;
    uint64_t v88 = *(void *)(v83 + 368);
    uint64_t v87 = *(void *)(v83 + 376);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v89 = OUTLINED_FUNCTION_143_3();
    uint64_t v90 = v88;
    unint64_t v1 = v85;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v89, v91, v90, v87);
    swift_bridgeObjectRelease();
    uint64_t v76 = v86;
    id v92 = swift_bridgeObjectRelease();
    unint64_t v100 = OUTLINED_FUNCTION_16_48(v92, v93, v94, v95, v96, v97, v98, v99, v84 + 4, (uint64_t)(v2 - 8), (uint64_t)v242, (uint64_t)v79, typea, 0, v251, (uint64_t)v258, (uint64_t)(v2 - 7), (uint64_t)v272, v279,
             v284,
             v285,
             0xE000000000000000);
    OUTLINED_FUNCTION_95_6(v100, v272);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_10();
    *(_WORD *)(v84 + 12) = 2080;
    swift_bridgeObjectRetain();
    Array.description.getter();
    swift_bridgeObjectRelease();
    uint64_t v101 = OUTLINED_FUNCTION_6_23();
    uint64_t v104 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v101, v102, v103);
    OUTLINED_FUNCTION_137_1(v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, log, (os_log_type_t)v242, "%s executeSmartAppSelect: AppSelection recommends to disambiguate apps: '%s'.", (uint8_t *)v84, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_39_10();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v175 = *(void *)(v1 + 240);
  swift_bridgeObjectRetain();
  os_log_type_t v176 = swift_bridgeObjectRetain();
  uint64_t v177 = (unint64_t)specialized _ArrayProtocol.filter(_:)(v176, (uint64_t)v76);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v178 = (void *)Logger.logObject.getter();
  uint64_t v179 = static os_log_type_t.debug.getter();
  uint64_t v180 = OUTLINED_FUNCTION_21_19(v179);
  v280 = v1;
  unint64_t v181 = *(void **)(v1 + 240);
  if (v180)
  {
    OUTLINED_FUNCTION_11_7();
    v284 = OUTLINED_FUNCTION_10_0();
    v285 = 0;
    OUTLINED_FUNCTION_171_2(4.8151e-34);
    uint64_t v182 = v181[44];
    uint64_t v183 = v181[45];
    v254 = v175;
    uint64_t v185 = v181[46];
    uint64_t v184 = v181[47];
    OUTLINED_FUNCTION_146_3();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v182, v183, v185, v184);
    swift_bridgeObjectRelease();
    uint64_t v175 = v254;
    uint64_t v186 = swift_bridgeObjectRelease();
    v194 = OUTLINED_FUNCTION_16_48(v186, v187, v188, v189, v190, v191, v192, v193, v240, v241, (uint64_t)(v2 - 10), (uint64_t)v178, type, v284, v254, (uint64_t)v258, (uint64_t)v76, (uint64_t)v272, v280,
             v284,
             0,
             v286);
    OUTLINED_FUNCTION_95_6(v194, v258);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_3();
    OUTLINED_FUNCTION_118_4();
    type metadata accessor for App();
    swift_bridgeObjectRetain();
    v195 = Array.description.getter();
    v197 = v196;
    swift_bridgeObjectRelease();
    v242->Class isa = (Class)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v195, v197, &v284);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_178_2();
    OUTLINED_FUNCTION_81_9(&dword_0, log, (os_log_type_t)type, "%s executeSmartAppSelect: disambiguateApps after filter out: %s");
    uint64_t v178 = (void *)v247;
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_6();
    uint64_t v76 = v265;
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_65_3();
    OUTLINED_FUNCTION_178_2();
  }
  unint64_t v1 = v280;
  if (v177 >> 62)
  {
    OUTLINED_FUNCTION_26_24();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_58();
  }
  else
  {
    uint64_t v178 = *(void **)((char *)&dword_10 + (v177 & 0xFFFFFFFFFFFFFF8));
  }
  v217 = (void *)v76[2];
  swift_bridgeObjectRelease();
  v218 = *(void *)(v280 + 240);
  if (v178 == v217)
  {
    uint64_t v68 = *(void *)(v218 + 296);
    OUTLINED_FUNCTION_22();
    *(void *)(v175 + 16) = (*(uint64_t (**)(unint64_t))(v219 + 272))(v177);
    swift_bridgeObjectRelease();
    type metadata accessor for AppResolutionAction();
    OUTLINED_FUNCTION_48_21();
    static AppResolutionAction.disambiguateAfterAuthorizationChecks(apps:)();
    OUTLINED_FUNCTION_58();
    goto LABEL_62;
  }
  swift_bridgeObjectRelease();
  swift_retain_n();
  v220 = Logger.logObject.getter();
  v221 = static os_log_type_t.error.getter();
  v222 = OUTLINED_FUNCTION_4_27(v221);
  v223 = *(void *)(v280 + 240);
  if (v222)
  {
    v267 = (uint64_t)(v2 - 12);
    v224 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    v278 = OUTLINED_FUNCTION_14_0();
    v284 = v278;
    v285 = 0;
    *v224 = 136315138;
    v225 = *(void *)(v223 + 376);
    OUTLINED_FUNCTION_146_3();
    swift_bridgeObjectRetain();
    v226 = OUTLINED_FUNCTION_145_3();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v226, v227, v228, v225);
    swift_bridgeObjectRelease();
    v229 = swift_bridgeObjectRelease();
    v237 = OUTLINED_FUNCTION_16_48(v229, v230, v231, v232, v233, v234, v235, v236, v240, v241, (uint64_t)v242, (uint64_t)log, type, v247, (uint64_t)(v224 + 1), (uint64_t)v258, v267, v278, v280,
             v284,
             v285,
             v286);
    OUTLINED_FUNCTION_96_6(v237, v268);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_3();
    OUTLINED_FUNCTION_107_3(&dword_0, v220, (os_log_type_t)v218, "%s executeSmartAppSelect: Could not find all apps to disambiguate");
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_65_3();
  }

LABEL_61:
  uint64_t v68 = 0;
  unint64_t v1 = v280;
LABEL_62:
  swift_task_dealloc();
  v238 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return v238(v68);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeForceAppDisambiguate(phoneCallNLIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[18] = v2;
  v1[19] = v0;
  uint64_t v3 = type metadata accessor for Date();
  v1[20] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[21] = v4;
  v1[22] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  v0[23] = *(void *)(v0[19] + 296);
  OUTLINED_FUNCTION_22();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 168) + **(int **)(v1 + 168));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = v2;
  *uint64_t v2 = v0;
  v2[1] = PhoneAppResolutionOnDeviceFlowStrategy.executeForceAppDisambiguate(phoneCallNLIntent:);
  uint64_t v3 = v0[18];
  return v5(v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_7();
  *int v8 = v7;
  *(void *)(v5 + 200) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 208) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  int v23;
  BOOL v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t);
  void (*v105)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  os_log_type_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;

  uint64_t v134 = v1;
  uint64_t v3 = *(void *)(v1 + 152);
  *(void *)(v3 + 16) = *(void *)(v1 + 208);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_26_24();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_58();
    uint64_t v4 = *(void *)(v3 + 16);
  }
  else
  {
    uint64_t v0 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
  }
  if (v0 < 2)
  {
    if (v4 >> 62)
    {
      OUTLINED_FUNCTION_26_24();
      _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_58();
    }
    else
    {
      uint64_t v0 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    }
    if (v0 != 1)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v67 = OUTLINED_FUNCTION_152_3();
      __swift_project_value_buffer(v67, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_44_4();
      uint64_t v10 = Logger.logObject.getter();
      uint64_t v68 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_31_31(v68))
      {
        uint64_t v69 = (_DWORD *)OUTLINED_FUNCTION_5_22();
        uint64_t v130 = OUTLINED_FUNCTION_14_0();
        uint64_t v131 = v130;
        *uint64_t v69 = 136315138;
        OUTLINED_FUNCTION_99_7();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_55_14();
        swift_bridgeObjectRelease();
        uint64_t v70 = swift_bridgeObjectRelease();
        *(void *)(v1 + 112) = OUTLINED_FUNCTION_85_8(v70, v71, v72, v73, v74, v75, v76, v77, v110, v111, v113, v116, v119, (uint64_t)(v69 + 1), (uint64_t)v69, v1 + 112, v130, v131, v132,
                                  v133);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_39_10();
        OUTLINED_FUNCTION_55_7(&dword_0, v10, (os_log_type_t)v3, "%s executeForceAppDisambiguate: Couldn't find an app. Skipping Forced App disambiguation ..");
        goto LABEL_26;
      }
LABEL_27:
      OUTLINED_FUNCTION_39_10();
      goto LABEL_28;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = OUTLINED_FUNCTION_152_3();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v22 = Logger.logObject.getter();
    uint64_t v23 = static os_log_type_t.debug.getter();
    uint64_t v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
    unint64_t v25 = *(void **)(v1 + 152);
    if (!v24)
    {
      swift_release_n();
      goto LABEL_30;
    }
    LODWORD(v119) = v23;
    uint64_t v126 = v1 + 112;
    uint64_t v128 = v1;
    uint64_t v112 = v1 + 104;
    uint64_t v114 = v1 + 80;
    unint64_t v26 = (uint64_t *)(v1 + 96);
    uint64_t v27 = OUTLINED_FUNCTION_11_7();
    uint64_t v117 = OUTLINED_FUNCTION_10_0();
    uint64_t v131 = v117;
    uint64_t v132 = 0;
    *(_DWORD *)uint64_t v27 = 136315394;
    int v29 = v25[44];
    uint64_t v28 = v25[45];
    BOOL v30 = v3;
    uint64_t v32 = v25[46];
    uint64_t v31 = v25[47];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v29, v28, v32, v31);
    swift_bridgeObjectRelease();
    uint64_t v33 = swift_bridgeObjectRelease();
    void *v26 = OUTLINED_FUNCTION_85_8(v33, v34, v35, v36, v37, v38, v39, v40, v110, v112, v114, v117, v119, (uint64_t)v22, v123, v126, v128, v131, v132,
             0xE000000000000000);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_0();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v41 = *(void *)(v30 + 16);
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v41 & 0xC000000000000001) == 0, v41);
    if ((v41 & 0xC000000000000001) == 0)
    {
      swift_retain();
LABEL_17:
      uint64_t v42 = App.appIdentifier.getter();
      uint64_t v44 = v43;
      swift_release();
      v129[10] = v42;
      v129[11] = v44;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v45 = String.init<A>(describing:)();
      v129[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, &v131);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_2();
      uint64_t v22 = v121;
      OUTLINED_FUNCTION_81_9(&dword_0, v121, (os_log_type_t)v119, "%s executeForceAppDisambiguate: Found a single app '%s'. Skipping Forced App disambiguation..");
      OUTLINED_FUNCTION_69_10();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
LABEL_30:

      goto LABEL_50;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_22();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 184);
  uint64_t v7 = swift_bridgeObjectRetain();
  int v8 = v6(v7);
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v9 = OUTLINED_FUNCTION_152_3();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_44_4();
    uint64_t v10 = Logger.logObject.getter();
    uint64_t v11 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_31_31(v11))
    {
      uint64_t v12 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      os_log_type_t v125 = OUTLINED_FUNCTION_14_0();
      *uint64_t v12 = 136315138;
      OUTLINED_FUNCTION_99_7();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_55_14();
      swift_bridgeObjectRelease();
      uint64_t v13 = swift_bridgeObjectRelease();
      *(void *)(v1 + 136) = OUTLINED_FUNCTION_85_8(v13, v14, v15, v16, v17, v18, v19, v20, v110, v111, v113, v116, v119, (uint64_t)(v12 + 1), (uint64_t)v12, v125, v1 + 136, v125, v132,
                                v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_10();
      OUTLINED_FUNCTION_55_7(&dword_0, v10, (os_log_type_t)v3, "%s resolveApp: only found first party apps, skip forcing app disambiguation");
LABEL_26:
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
LABEL_28:

      goto LABEL_50;
    }
    goto LABEL_27;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v47 = OUTLINED_FUNCTION_152_3();
  __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_44_4();
  uint64_t v48 = Logger.logObject.getter();
  uint64_t v49 = static os_log_type_t.debug.getter();
  unint64_t v50 = v49;
  uint64_t v51 = os_log_type_enabled(v48, v49);
  uint64_t v52 = *(void *)(v1 + 152);
  if (v51)
  {
    LODWORD(v124) = v50;
    int v53 = OUTLINED_FUNCTION_5_22();
    os_log_type_t v122 = OUTLINED_FUNCTION_14_0();
    uint64_t v120 = v53;
    OUTLINED_FUNCTION_98_7(4.8149e-34);
    uint64_t v115 = v54;
    uint64_t v131 = v55;
    os_log_type_t v56 = *(void *)(v52 + 352);
    BOOL v57 = *(void *)(v52 + 360);
    OUTLINED_FUNCTION_99_7();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v56, v57, v2, (uint64_t)v6);
    swift_bridgeObjectRelease();
    uint64_t v58 = swift_bridgeObjectRelease();
    uint64_t v66 = OUTLINED_FUNCTION_85_8(v58, v59, v60, v61, v62, v63, v64, v65, v110, v111, v115, v1 + 128, v120, v122, v123, v124, v1 + 136, v131, v132,
            v133);
    OUTLINED_FUNCTION_95_6(v66, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_10();
    OUTLINED_FUNCTION_55_7(&dword_0, v48, v127, "%s executeForceAppDisambiguate: Found more than 1 app. Forcing app disambiguation..");
    OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_39_10();
  }

  OUTLINED_FUNCTION_22();
  uint64_t v79 = *(uint64_t (**)(uint64_t))(v78 + 272);
  uint64_t v80 = swift_bridgeObjectRetain();
  uint64_t v81 = v79(v80);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = v81;
  swift_bridgeObjectRelease();
  uint64_t v82 = *(void *)(v3 + 16);
  if (v82 >> 62)
  {
    OUTLINED_FUNCTION_129_4();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v83 = *(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
  }
  uint64_t v129 = (void *)v1;
  if (v83)
  {
    if (v83 >= 1)
    {
      uint64_t v84 = 0;
      uint64_t v85 = _swiftEmptyArrayStorage;
      do
      {
        if ((v82 & 0xC000000000000001) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        uint64_t v86 = App.appIdentifier.getter();
        uint64_t v88 = v87;
        swift_release();
        if (!v88)
        {
          uint64_t v86 = 0;
          uint64_t v88 = 0xE000000000000000;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v85 = v91;
        }
        uint64_t v89 = v85[2];
        if (v89 >= v85[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v85 = v92;
        }
        ++v84;
        uint64_t v85[2] = v89 + 1;
        uint64_t v90 = &v85[2 * v89];
        v90[4] = v86;
        v90[5] = v88;
      }
      while (v83 != v84);
      goto LABEL_49;
    }
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v85 = _swiftEmptyArrayStorage;
LABEL_49:
  uint64_t v93 = *(void **)(v1 + 152);
  OUTLINED_FUNCTION_178_2();
  uint64_t v94 = v93[29];
  __swift_project_boxed_opaque_existential_1(v93 + 25, v93[28]);
  uint64_t v95 = OUTLINED_FUNCTION_48_21();
  v96(v95, v94);
  uint64_t v97 = *(void *)(v1 + 40);
  uint64_t v98 = *(void *)(v1 + 48);
  uint64_t v99 = (void *)OUTLINED_FUNCTION_189_1();
  __swift_project_boxed_opaque_existential_1(v99, v100);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v102 = v101;
  uint64_t v103 = OUTLINED_FUNCTION_61();
  v104(v103);
  *(unsigned char *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = v102;
  *(void *)(v1 + 72) = v85;
  os_log_type_t v105 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v98 + 16);
  BOOL v106 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  v105(2, v1 + 56, &type metadata for ForcedAppDisambiguationHistory, v106, v97, v98);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v1 + 16);
  type metadata accessor for AppResolutionAction();
  swift_bridgeObjectRetain();
  static AppResolutionAction.disambiguateAfterAuthorizationChecks(apps:)();
  swift_bridgeObjectRelease();
LABEL_50:
  swift_task_dealloc();
  uint64_t v107 = OUTLINED_FUNCTION_3_21();
  return v108(v107);
}

#error "33B35C: call analysis failed (funcsize=111)"

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.tryAppQueryFromCallNotifications(phoneCallNLIntent:sharedGlobals:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_166_3(a1);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
  {
    OUTLINED_FUNCTION_5_51(a1);
    PhoneCallNLIntent.appName.getter();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    if (!v9)
    {
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      uint64_t v10 = OUTLINED_FUNCTION_0();
      v11(v10);
      OUTLINED_FUNCTION_23();
      char v13 = (*(uint64_t (**)(void))(v12 + 160))();
      swift_release();
      if (v13)
      {
        __swift_project_boxed_opaque_existential_1(a2, a2[3]);
        uint64_t v14 = OUTLINED_FUNCTION_0();
        if (v15(v14))
        {
          uint64_t v16 = CurrentRequest.refId.getter();
          uint64_t v18 = v17;
          swift_release();
          if (v18)
          {
            __swift_project_boxed_opaque_existential_1(a2, a2[3]);
            uint64_t v19 = OUTLINED_FUNCTION_68_8();
            v20(v19);
            uint64_t v21 = v51;
            uint64_t v22 = v52;
            OUTLINED_FUNCTION_111_4(&v49);
            char v24 = v23(v16, v18, v21, v22);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
            if ((v24 & 1) == 0) {
              goto LABEL_8;
            }
            __swift_project_boxed_opaque_existential_1(a2, a2[3]);
            uint64_t v25 = OUTLINED_FUNCTION_16_2();
            v26(v25);
            __swift_project_boxed_opaque_existential_1(&v49, v51);
            uint64_t v27 = OUTLINED_FUNCTION_16_2();
            v28(v27);
            __swift_project_boxed_opaque_existential_1(v48, v48[3]);
            uint64_t v29 = OUTLINED_FUNCTION_79_8();
            uint64_t v31 = v30(v29);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
            if (!v31)
            {
              __swift_project_boxed_opaque_existential_1(a2, a2[3]);
              uint64_t v33 = OUTLINED_FUNCTION_68_8();
              v34(v33);
              uint64_t v35 = v51;
              uint64_t v36 = v52;
              __swift_project_boxed_opaque_existential_1(&v49, v51);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 24))(v16, v18, v35, v36);
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
              if (one-time initialization token for siriPhone != -1) {
                swift_once();
              }
              uint64_t v37 = type metadata accessor for Logger();
              __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
              OUTLINED_FUNCTION_36_28();
              swift_bridgeObjectRetain_n();
              uint64_t v38 = (void *)Logger.logObject.getter();
              os_log_type_t v39 = static os_log_type_t.debug.getter();
              if (OUTLINED_FUNCTION_58_16(v39))
              {
                uint64_t v40 = (_DWORD *)OUTLINED_FUNCTION_11_7();
                v48[0] = OUTLINED_FUNCTION_10_0();
                _DWORD *v40 = 136315394;
                uint64_t v42 = *(void *)(v3 + 352);
                uint64_t v41 = *(void *)(v3 + 360);
                uint64_t v49 = 0;
                unint64_t v50 = 0xE000000000000000;
                swift_bridgeObjectRetain();
                DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v42, v41, 0xD000000000000042, 0x800000000049B030);
                swift_bridgeObjectRelease();
                uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, v48);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                OUTLINED_FUNCTION_6_2();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_159_2();
                uint64_t v43 = OUTLINED_FUNCTION_143_3();
                uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v45);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                OUTLINED_FUNCTION_45_3(&dword_0, v46, v47, "%s Resolving app %s from call notification");
                OUTLINED_FUNCTION_69_10();
                OUTLINED_FUNCTION_6();
                OUTLINED_FUNCTION_6();
              }
              else
              {

                swift_bridgeObjectRelease_n();
                OUTLINED_FUNCTION_6_2();
              }
            }
            else
            {
LABEL_8:
              swift_bridgeObjectRelease();
            }
          }
        }
      }
    }
  }
  return OUTLINED_FUNCTION_143_3();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeAppQueryForIncomingCall(phoneCallNLIntent:sharedGlobals:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  type metadata accessor for AppQuery.Builder();
  outlined init with copy of SignalProviding(a1, (uint64_t)&v88);
  AppQuery.Builder.__allocating_init(intent:)(&v88);
  OUTLINED_FUNCTION_23();
  (*(void (**)(void))(v6 + 160))();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_release();
  if (!v8
    || (type metadata accessor for App(),
        swift_bridgeObjectRetain(),
        OUTLINED_FUNCTION_105_2(),
        App.__allocating_init(appIdentifier:)(),
        Swift::Bool v11 = App.isFirstParty()(),
        swift_release(),
        v11))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    char v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_4(v14)) {
      goto LABEL_20;
    }
    uint64_t v15 = (_DWORD *)OUTLINED_FUNCTION_47();
    uint64_t v88 = OUTLINED_FUNCTION_14_0();
    *uint64_t v15 = 136315138;
    uint64_t v83 = OUTLINED_FUNCTION_141_2((uint64_t)"makeAppQueryForIncomingCall(phoneCallNLIntent:sharedGlobals:)", v68, v71, v74, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, *((uint64_t *)&v87 + 1));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v17 = "#PhoneAppResolutionOnDeviceFlowStrategy %s Not a 3P-specific incoming call request, use existing query";
    goto LABEL_19;
  }
  uint64_t v72 = v10;
  uint64_t v18 = one-time initialization token for siriPhone;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain();
  uint64_t v69 = v20;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = OUTLINED_FUNCTION_11_7();
    uint64_t v88 = OUTLINED_FUNCTION_10_0();
    *(_DWORD *)uint64_t v23 = 136315394;
    OUTLINED_FUNCTION_141_2((uint64_t)"makeAppQueryForIncomingCall(phoneCallNLIntent:sharedGlobals:)", v69, v72, v74, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, *((uint64_t *)&v87 + 1));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v24 = OUTLINED_FUNCTION_105_2();
    uint64_t v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v21, v22, "#PhoneAppResolutionOnDeviceFlowStrategy %s Requested 3P app %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 32), *(void *)(v3 + 56));
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  OUTLINED_FUNCTION_24_2();
  v27();
  uint64_t v28 = OUTLINED_FUNCTION_105_2();
  v29(v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v88);
  uint64_t v30 = outlined init with take of AnnotatedApp?((uint64_t)&v77, (uint64_t)&v83, &demangling cache variable for type metadata for AnnotatedApp?);
  if (!v83)
  {
LABEL_17:
    char v13 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_4(v56))
    {
LABEL_20:

      return OUTLINED_FUNCTION_105_2();
    }
    BOOL v57 = (_DWORD *)OUTLINED_FUNCTION_47();
    uint64_t v76 = OUTLINED_FUNCTION_14_0();
    _DWORD *v57 = 136315138;
    OUTLINED_FUNCTION_24_10();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000003DLL, v58, &v76);
    OUTLINED_FUNCTION_153_4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v17 = "#PhoneAppResolutionOnDeviceFlowStrategy %s 3P app has support, so use their SiriKit implementation";
LABEL_19:
    OUTLINED_FUNCTION_24_5(&dword_0, v13, v16, v17);
    OUTLINED_FUNCTION_65_8();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_163_0(v30, v31, v32, v33, v34, v35, v36, v37, v69, v72, v74, v76, v77, v78, v79, v80, v81, v82, v83,
    v84,
    v85,
    v86,
    v87);
  uint64_t v38 = v89;
  uint64_t v39 = swift_bridgeObjectRetain();
  char v40 = specialized Set._isDisjoint<A>(with:)(v39, v38);
  swift_bridgeObjectRelease();
  if ((v40 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    outlined init with take of AnnotatedApp?((uint64_t)&v90, (uint64_t)v94, &demangling cache variable for type metadata for String?);
    uint64_t v48 = outlined release of String?((uint64_t)v94);
    OUTLINED_FUNCTION_119_1(v48, v49, v50, v51, v52, v53, v54, v55, v70, v73, v75, v76, v77, v78, v79, v80, v81, v82, v83,
      v84,
      v85,
      v86,
      v87,
      *((uint64_t *)&v87 + 1),
      v88,
      v89,
      v90,
      v91,
      v92,
      v93);
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain_n();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = OUTLINED_FUNCTION_11_7();
    uint64_t v73 = OUTLINED_FUNCTION_10_0();
    v94[0] = v73;
    *(_DWORD *)uint64_t v43 = 136315394;
    OUTLINED_FUNCTION_24_10();
    uint64_t v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000003DLL, v44, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v43 + 12) = 2080;
    swift_bridgeObjectRetain();
    Array.description.getter();
    swift_bridgeObjectRelease();
    uint64_t v45 = OUTLINED_FUNCTION_182_2();
    uint64_t v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v41, v42, "#PhoneAppResolutionOnDeviceFlowStrategy %s 3P app does not declare support for %s, so fallback to system extension", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  swift_release();
  outlined init with take of AnnotatedApp?((uint64_t)&v90, (uint64_t)v94, &demangling cache variable for type metadata for String?);
  uint64_t v60 = outlined release of String?((uint64_t)v94);
  OUTLINED_FUNCTION_119_1(v60, v61, v62, v63, v64, v65, v66, v67, v70, v73, v75, v76, v77, v78, v79, v80, v81, v82, v83,
    v84,
    v85,
    v86,
    v87,
    *((uint64_t *)&v87 + 1),
    v88,
    v89,
    v90,
    v91,
    v92,
    v93);
  return OUTLINED_FUNCTION_105_2();
}

void PhoneAppResolutionOnDeviceFlowStrategy.makeAppQuery(phoneCallNLIntent:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_57();
  a25 = v27;
  a26 = v28;
  uint64_t v29 = v26;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  type metadata accessor for AppQuery.Builder();
  outlined init with copy of SignalProviding((uint64_t)v33, (uint64_t)&a10);
  AppQuery.Builder.__allocating_init(intent:)(&a10);
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  uint64_t v34 = OUTLINED_FUNCTION_79_8();
  uint64_t v36 = *(void *)v35(v34);
  LOBYTE(v31) = (*(uint64_t (**)(void))(v36 + 256))();
  swift_release();
  if (v31)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_4(v39))
    {
      char v40 = (_DWORD *)OUTLINED_FUNCTION_47();
      a10 = OUTLINED_FUNCTION_14_0();
      _DWORD *v40 = 136315138;
      OUTLINED_FUNCTION_24_10();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002ELL, v41, &a10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_24_5(&dword_0, v38, v42, "#PhoneAppResolutionOnDeviceFlowStrategy %s Request requires a userFacingAppId override");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_5_51(v33);
    Swift::Bool v43 = PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial()();
    outlined init with copy of SignalProviding((uint64_t)v33, (uint64_t)&a10);
    if (v43)
    {
      __swift_project_boxed_opaque_existential_1(&a10, a13);
      Swift::Bool v44 = PhoneCallNLIntent.isFaceTimeCall()();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
      if (v44)
      {
        uint64_t v45 = 2;
LABEL_12:
        uint64_t v46 = static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(v45, (void *)(v29 + 152));
        uint64_t v48 = v47;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AppQuery.Override>);
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_467710;
        *(void *)(v49 + 32) = v46;
        *(void *)(v49 + 40) = v48;
        OUTLINED_FUNCTION_135();
        v50();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
    }
    uint64_t v45 = 1;
    goto LABEL_12;
  }
LABEL_13:
  OUTLINED_FUNCTION_135();
  v51();
  swift_release();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_34_20();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.logAppSelectionActionToSelf(action:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AppResolutionResult();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    AppResolutionAction.result.getter();
    swift_release();
    OUTLINED_FUNCTION_6_23();
    OUTLINED_FUNCTION_100_4();
    int v11 = v10();
    if (v11 == enum case for AppResolutionResult.needsConfirmation(_:))
    {
      uint64_t v12 = OUTLINED_FUNCTION_60_12();
      v13(v12);
      swift_release();
      uint64_t v14 = 1;
    }
    else if (v11 == enum case for AppResolutionResult.needsDisambiguation(_:))
    {
      uint64_t v15 = OUTLINED_FUNCTION_60_12();
      v16(v15);
      swift_bridgeObjectRelease();
      uint64_t v14 = 2;
    }
    else if (v11 == enum case for AppResolutionResult.selected(_:))
    {
      uint64_t v17 = OUTLINED_FUNCTION_60_12();
      v18(v17);
      swift_release();
      uint64_t v14 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
      uint64_t v14 = 6;
    }
  }
  else
  {
    uint64_t v14 = 5;
  }
  uint64_t v19 = v2 + 38;
  uint64_t v21 = v2[41];
  uint64_t v20 = v2[42];
  __swift_project_boxed_opaque_existential_1(v19, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v14, v21, v20);
  return swift_release();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  outlined init with copy of SignalProviding(a1, (uint64_t)v11);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v1;
  outlined init with take of AppSelectionSignalComponent(v11, (uint64_t)(v9 + 5));
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v7, (uint64_t)&async function pointer to partial apply for closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:), (uint64_t)v9);
  return swift_release();
}

uint64_t closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v5[4] = a4;
  v5[5] = a5;
  void v5[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  return _swift_task_switch(closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:), 0, 0);
}

uint64_t closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0[4] + 16);
  v0[10] = v1;
  swift_bridgeObjectRetain();
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v0[11] = v2;
  *uint64_t v2 = v3;
  v2[1] = closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:);
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[5];
  return PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:)(v4, v5, v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  os_log_type_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  void *v28;
  uint64_t v29;

  uint64_t v28 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  outlined init with copy of ConfirmationResponse?(v1, v2, &demangling cache variable for type metadata for AppResolverResult?);
  OUTLINED_FUNCTION_44_4();
  uint64_t v5 = v4;
  uint64_t v6 = Logger.logObject.getter();
  uint64_t v7 = static os_log_type_t.debug.getter();
  uint64_t v8 = OUTLINED_FUNCTION_8_2(v7);
  uint64_t v9 = v0[8];
  if (v8)
  {
    uint64_t v26 = v0[7];
    uint64_t v10 = (void *)v0[4];
    int v11 = OUTLINED_FUNCTION_11_7();
    v27[0] = OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_168_2(4.8151e-34);
    unint64_t v25 = v9;
    uint64_t v12 = v10[44];
    char v13 = v10[45];
    uint64_t v14 = v10[46];
    uint64_t v15 = v10[47];
    v27[1] = 0;
    v27[2] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_3();
    *(_WORD *)(v11 + 12) = 2080;
    outlined init with copy of ConfirmationResponse?(v25, v26, &demangling cache variable for type metadata for AppResolverResult?);
    uint64_t v16 = String.init<A>(describing:)();
    v0[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v25, &demangling cache variable for type metadata for AppResolverResult?);
    _os_log_impl(&dword_0, v6, v5, "%s shadowPredictAndStore: predicting app in background for shadow-logging force disambig response: %s", (uint8_t *)v11, 0x16u);
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v9, &demangling cache variable for type metadata for AppResolverResult?);
  }

  uint64_t v18 = v0[9];
  uint64_t v19 = v0[7];
  __swift_project_boxed_opaque_existential_1((void *)(v0[4] + 200), *(void *)(v0[4] + 224));
  uint64_t v20 = OUTLINED_FUNCTION_72_14();
  v21(v20);
  outlined init with copy of ConfirmationResponse?(v18, v19, &demangling cache variable for type metadata for AppResolverResult?);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v22 + 96))(v19);
  swift_release();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v18, &demangling cache variable for type metadata for AppResolverResult?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v23();
}

void PhoneAppResolutionOnDeviceFlowStrategy.getAppSpeakableString(apps:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_57();
  a25 = v27;
  a26 = v28;
  unint64_t v30 = v29;
  swift_retain();
  uint64_t v31 = specialized Sequence.compactMap<A>(_:)(v30, v26);
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8));
  }
  if (v32 != v31[2])
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_36_28();
    uint64_t v34 = (void *)Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_4_27(v35))
    {
      OUTLINED_FUNCTION_5_22();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_114_1(4.8149e-34);
      OUTLINED_FUNCTION_73_9();
      unint64_t v40 = v37;
      a13 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17_36();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, v40, &a13);
      OUTLINED_FUNCTION_153_4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_10(&dword_0, v38, v39, "%s error on finding all app names, set app names as an empty array");
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
  }
  OUTLINED_FUNCTION_34_20();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.getSeASPredictableAppsList(apps:)(uint64_t a1)
{
  if (*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                + (a1 & 0xFFFFFFFFFFFFFF8)) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  OUTLINED_FUNCTION_7_14();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  OUTLINED_FUNCTION_6_2();
  return a1;
}

uint64_t protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeErrorResponse(error:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppResolutionOnDeviceFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.parseConfirmationResponse(input:) in conformance PhoneAppResolutionOnDeviceFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 312))();
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationPrompt(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 328)
                                                + **(int **)(**(void **)v2 + 328));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v8(a1, a2);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy;
  return AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeRepromptOnLowConfidence(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppConfirmationStrategyAsync.makeRepromptOnLowConfidence(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationRejectedResponse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppConfirmationStrategyAsync.makeConfirmationRejectedResponse(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationCancelledResponse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppConfirmationStrategyAsync.makeConfirmationCancelledResponse(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationErrorResponse(error:app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppConfirmationStrategyAsync.makeConfirmationErrorResponse(error:app:)(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.parseDisambiguationResponse(input:) in conformance PhoneAppResolutionOnDeviceFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 320))();
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeDisambiguationPrompt(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 336)
                                                + **(int **)(**(void **)v2 + 336));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v8(a1, a2);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeRepromptOnEmptyParse(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppDisambiguationStrategyAsync.makeRepromptOnEmptyParse(apps:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeRepromptOnLowConfidence(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppDisambiguationStrategyAsync.makeRepromptOnLowConfidence(apps:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeDisambiguationCancelResponse(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppDisambiguationStrategyAsync.makeDisambiguationCancelResponse(apps:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeDisambiguationErrorResponse(error:apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return AppDisambiguationStrategyAsync.makeDisambiguationErrorResponse(error:apps:)(a1, a2, a3, a4, a5);
}

uint64_t specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v54 = a8;
  uint64_t v52 = a7;
  uint64_t v53 = a5;
  uint64_t v59 = a4;
  uint64_t v56 = a1;
  uint64_t v57 = a11;
  uint64_t v55 = a10;
  unint64_t v58 = a9;
  uint64_t v21 = type metadata accessor for AppResolver();
  __chkstk_darwin(v21 - 8);
  uint64_t v50 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[3] = a15;
  v70[4] = a18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v70);
  uint64_t v24 = (uint64_t)a3;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32))(boxed_opaque_existential_1, a6, a15);
  v69[3] = a14;
  v69[4] = a17;
  uint64_t v51 = a17;
  unint64_t v25 = __swift_allocate_boxed_opaque_existential_1(v69);
  uint64_t v26 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32);
  uint64_t v27 = v52;
  uint64_t v52 = a14;
  v26(v25, v27, a14);
  v68[3] = a13;
  v68[4] = a16;
  uint64_t v28 = v53;
  unint64_t v29 = __swift_allocate_boxed_opaque_existential_1(v68);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(v29, v54, a13);
  *(void *)(a12 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a12 + 24) = 0;
  *(unsigned char *)(a12 + 344) = 1;
  uint64_t v30 = type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy();
  *(void *)(a12 + 352) = v30;
  *(void *)(a12 + 360) = &outlined read-only object #0 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a12 + 368) = 0;
  *(void *)(a12 + 376) = 0;
  *(void *)(a12 + 384) = v30;
  *(void *)(a12 + 392) = &outlined read-only object #1 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a12 + 400) = 0;
  *(void *)(a12 + 408) = 0;
  *(void *)(a12 + 416) = v30;
  *(void *)(a12 + 424) = &outlined read-only object #2 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a12 + 432) = 0;
  *(void *)(a12 + 440) = 0;
  *(void *)(a12 + 192) = v56;
  uint64_t v56 = a2;
  outlined init with copy of SignalProviding(a2, a12 + 32);
  uint64_t v31 = a3[3];
  uint64_t v32 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v31);
  uint64_t v33 = v55;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v65, v31, v32);
  outlined init with take of AppSelectionSignalComponent(&v65, a12 + 152);
  outlined init with copy of SignalProviding((uint64_t)a3, a12 + 200);
  outlined init with copy of SignalProviding((uint64_t)v69, a12 + 112);
  outlined init with copy of SignalProviding((uint64_t)v68, a12 + 72);
  *(void *)(a12 + 240) = v59;
  *(void *)(a12 + 248) = v28;
  outlined init with copy of SignalProviding((uint64_t)v70, a12 + 256);
  if (v33)
  {
    swift_retain();
    swift_retain();
    uint64_t v34 = v33;
  }
  else
  {
    outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)&v65);
    outlined init with copy of SignalProviding((uint64_t)v69, (uint64_t)&v63);
    type metadata accessor for AppUsageProvider();
    long long v60 = 0u;
    long long v61 = 0u;
    uint64_t v62 = 0;
    uint64_t v54 = swift_allocObject();
    os_log_type_t v35 = v58;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v36 = (uint64_t)v50;
    AppResolver.init(appResolutionRules:)();
    type metadata accessor for PhoneAppResolutionHelper();
    uint64_t v37 = swift_allocObject();
    uint64_t v38 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v63, v64);
    __chkstk_darwin(v38);
    unint64_t v40 = (char *)&v50 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v41 + 16))(v40);
    uint64_t v34 = specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)((uint64_t)&v65, (uint64_t)v40, v35, (uint64_t)&v60, v54, v36, v37, v52, v51);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
  }
  *(void *)(a12 + 296) = v34;
  uint64_t v42 = v57;
  outlined init with copy of ConfirmationResponse?(v57, (uint64_t)&v63, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
  if (v64)
  {
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v42, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    __swift_destroy_boxed_opaque_existential_1(v56);
    outlined init with take of AppSelectionSignalComponent(&v63, (uint64_t)&v65);
  }
  else
  {
    swift_retain();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v63, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    outlined init with copy of SignalProviding(v24, (uint64_t)&v63);
    id v43 = [self sharedAnalytics];
    id v44 = [v43 defaultMessageStream];

    if (one-time initialization token for instance != -1) {
      swift_once();
    }
    uint64_t v45 = static EligibleAppFinder.instance;
    uint64_t v46 = type metadata accessor for EligibleAppFinder();
    uint64_t v62 = &protocol witness table for EligibleAppFinder;
    *((void *)&v61 + 1) = v46;
    *(void *)&long long v60 = v45;
    uint64_t v66 = &type metadata for PhoneAppResolutionLogger;
    uint64_t v67 = &protocol witness table for PhoneAppResolutionLogger;
    uint64_t v47 = swift_allocObject();
    uint64_t v48 = (void *)(v47 + 16);
    *(void *)&long long v65 = v47;
    swift_retain();
    PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)(&v63, (uint64_t)v44, &v60, v48);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v42, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    __swift_destroy_boxed_opaque_existential_1(v56);
  }
  outlined init with take of AppSelectionSignalComponent(&v65, a12 + 304);
  __swift_destroy_boxed_opaque_existential_1(v24);
  return a12;
}

uint64_t _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_2(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = OUTLINED_FUNCTION_74();
  v5(v4);
  return a2;
}

uint64_t _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_6(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t partial apply for closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)(uint64_t a1)
{
  return closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)(a1, *(void *)(v1 + 16));
}

uint64_t base witness table accessor for AppConfirmationStrategyAsync in PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2)
{
  return _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1(&lazy protocol witness table cache variable for type PhoneAppResolutionOnDeviceFlowStrategy and conformance PhoneAppResolutionOnDeviceFlowStrategy, a2, (void (*)(uint64_t))type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy);
}

uint64_t base witness table accessor for AppDisambiguationStrategyAsync in PhoneAppResolutionOnDeviceFlowStrategy(uint64_t a1, uint64_t a2)
{
  return _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1(&lazy protocol witness table cache variable for type PhoneAppResolutionOnDeviceFlowStrategy and conformance PhoneAppResolutionOnDeviceFlowStrategy, a2, (void (*)(uint64_t))type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy);
}

uint64_t _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_1(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_33DFC0()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v8;
  v7[1] = protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy;
  return closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)(v3, v4, v5, v6, (uint64_t)(v0 + 5));
}

uint64_t specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)(*a1, a2, a3);
}

uint64_t partial apply for specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_33E118()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t OUTLINED_FUNCTION_16_48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  uint64_t v23 = a21;
  unint64_t v24 = a22;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &a20);
}

void OUTLINED_FUNCTION_17_36()
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v2, v3, v1, v0);
}

uint64_t OUTLINED_FUNCTION_28_32()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  return swift_bridgeObjectRetain();
}

BOOL OUTLINED_FUNCTION_31_31(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_36_28()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_37_26()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_38_24()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_44_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21)
{
  uint64_t v22 = a20;
  unint64_t v23 = a21;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &a19);
}

uint64_t OUTLINED_FUNCTION_48_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_17()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 48) + 304), *(void *)(*(void *)(v0 + 48) + 328));
  return 5;
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  return *(void *)(v0 + 176);
}

void OUTLINED_FUNCTION_52_15()
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v2, v3, v0, v1);
}

char *OUTLINED_FUNCTION_53_19@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_55_14()
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v3, v2, v1, v0);
}

BOOL OUTLINED_FUNCTION_58_16(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_60_12()
{
  return v0;
}

void OUTLINED_FUNCTION_61_11()
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v2, v3, v0, v1);
}

uint64_t OUTLINED_FUNCTION_62_15()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_63_8()
{
  uint64_t v2 = *(void *)(v0 - 168);
  unint64_t v3 = *(void *)(v0 - 160);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2, v3, (uint64_t *)(v0 - 208));
}

uint64_t OUTLINED_FUNCTION_68_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_69_10()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_72_14()
{
  return v0;
}

void OUTLINED_FUNCTION_74_7()
{
  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_80_6()
{
  return v0;
}

void OUTLINED_FUNCTION_81_9(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_85_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v21 = a19;
  unint64_t v22 = a20;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &a18);
}

uint64_t OUTLINED_FUNCTION_90_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_92_7()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_93_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_97_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  uint64_t v18 = a16;
  unint64_t v19 = a17;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &a15);
}

void OUTLINED_FUNCTION_98_7(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_99_7()
{
  return swift_bridgeObjectRetain();
}

BOOL OUTLINED_FUNCTION_101_5()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 128), *(void *)(v0 - 104));
  return PhoneCallNLIntent.hasApplicationNameOrId()();
}

uint64_t OUTLINED_FUNCTION_102_6()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 128), *(void *)(v0 - 104));
  return PhoneCallNLIntent.applicationId.getter();
}

uint64_t OUTLINED_FUNCTION_103_3(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_104_3(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_105_3(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void *OUTLINED_FUNCTION_111_4(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

void OUTLINED_FUNCTION_112_2(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0xCu);
}

void OUTLINED_FUNCTION_114_1(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_115_3()
{
  return type metadata accessor for Logger();
}

void OUTLINED_FUNCTION_118_4()
{
  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_120_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_125_3(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_126_1(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_127_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_129_4()
{
  return swift_bridgeObjectRetain_n();
}

BOOL OUTLINED_FUNCTION_131_3(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

__n128 OUTLINED_FUNCTION_132_3()
{
  return *(__n128 *)(v0 - 144);
}

uint64_t OUTLINED_FUNCTION_134_3()
{
  uint64_t v2 = *(void *)(v0 - 96);
  unint64_t v3 = *(void *)(v0 - 88);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2, v3, (uint64_t *)(v0 - 104));
}

void OUTLINED_FUNCTION_136_4(float a1)
{
  *uint64_t v1 = a1;
}

void *OUTLINED_FUNCTION_137_1(uint64_t a1)
{
  *uint64_t v1 = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_139_2()
{
  *(void *)(v0 - 168) = 0;
  *(void *)(v0 - 160) = 0xE000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_141_2@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000003DLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_143_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_144_3(uint64_t result)
{
  *(void *)(v1 - 192) = result;
  *(void *)(v1 - 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_145_3()
{
  return v0;
}

void OUTLINED_FUNCTION_148_2(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_149_4(uint64_t result)
{
  *(void *)(v1 - 232) = result;
  *(void *)(v1 - 208) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_152_3()
{
  return type metadata accessor for Logger();
}

uint64_t OUTLINED_FUNCTION_155_1(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return PhoneCallNLIntent.appName.getter();
}

void OUTLINED_FUNCTION_156_3(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_165_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_166_3(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return PhoneCallNLIntent.applicationId.getter();
}

void OUTLINED_FUNCTION_168_2(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_169_1(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_170_1()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v1, (v0 & 0xC000000000000001) == 0, v0);
}

void OUTLINED_FUNCTION_171_2(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_172_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_173_2(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 208));
}

uint64_t OUTLINED_FUNCTION_174_2()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t OUTLINED_FUNCTION_182_2()
{
  return v0;
}

void OUTLINED_FUNCTION_184_2()
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v3, v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_185_2()
{
  return *(void *)(v0 + 152);
}

void OUTLINED_FUNCTION_188_2(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t *AppResolutionProvider.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  return &static AppResolutionProvider.instance;
}

uint64_t static AppResolutionProvider.instance.getter()
{
  if (one-time initialization token for instance != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t key path setter for AppResolutionProvider.annotatedApps : AppResolutionProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t AppResolutionProvider.().init()()
{
  *(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return v0;
}

uint64_t key path getter for AppResolutionProvider.lastSetApp : AppResolutionProvider@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 128))(v4);
  return _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v4, a2, &demangling cache variable for type metadata for AnnotatedApp?);
}

uint64_t key path setter for AppResolutionProvider.lastSetApp : AppResolutionProvider(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = (void *)*a2;
  swift_beginAccess();
  uint64_t v10 = v8[3];
  v8[3] = v2;
  v8[4] = v3;
  v8[5] = v4;
  v8[6] = v5;
  v8[7] = v6;
  v8[8] = v7;
  outlined copy of AnnotatedApp?(v2);
  return outlined consume of AnnotatedApp?(v10);
}

uint64_t AppResolutionProvider.lastSetApp.getter@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t result = outlined copy of AnnotatedApp?(v3);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v8;
  a1[5] = v7;
  return result;
}

uint64_t AppResolutionProvider.deinit()
{
  swift_bridgeObjectRelease();
  outlined consume of AnnotatedApp?(*(void *)(v0 + 24));
  return v0;
}

uint64_t AppResolutionProvider.__deallocating_deinit()
{
  AppResolutionProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for AppResolutionProviding.lastSetApp.getter in conformance AppResolutionProvider@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)v1 + 128))(v4);
  return _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v4, a1, &demangling cache variable for type metadata for AnnotatedApp?);
}

uint64_t sub_33EE70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay27PhoneCallFlowDelegatePlugin16UsoVocIdentifier_pG_SSs5NeverOTg504_s27defg17Plugin0B21Controli42IdentifiersV03usoH0ACSay12SiriOntology0G10k14VG_tcfcSSAA0g3J61L0_pcfu0_33_708b1cfa6b73d3a2bcd73f98c7ddf494AaI_pSSTf3nnnpk_nTf1cn_n(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = (void *)(a1 + 32);
    do
    {
      uint64_t v4 = v3[3];
      uint64_t v5 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v4);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
      uint64_t v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      if (v9 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage[2 * v9];
      *((void *)v10 + 4) = v6;
      *((void *)v10 + 5) = v8;
      v3 += 5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t CallControlUsoIdentifiers.hasMicrophoneIdentifiers.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467710;
  *(void *)(inited + 56) = &type metadata for CallControlUsoIdentifiers.BoolSettingName;
  *(void *)(inited + 64) = &protocol witness table for CallControlUsoIdentifiers.BoolSettingName;
  OUTLINED_FUNCTION_2_104();
  OUTLINED_FUNCTION_10_59();
  uint64_t v2 = OUTLINED_FUNCTION_15_49();
  v0(v2);
  OUTLINED_FUNCTION_13_46();
  if (v4 && (OUTLINED_FUNCTION_12_51(v3), (v5 & 1) != 0))
  {
    OUTLINED_FUNCTION_5_66();
    swift_bridgeObjectRelease();
    uint64_t v6 = OUTLINED_FUNCTION_3_92();
    uint64_t v8 = v7(v6);
    OUTLINED_FUNCTION_16_49(v8, v9);
    char v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v11 = 0;
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  return v11 & 1;
}

uint64_t CallControlUsoIdentifiers.hasSpeakerphoneIdentifier.getter(uint64_t a1)
{
  return CallControlUsoIdentifiers.hasSpeakerphoneIdentifier.getter(a1, 8);
}

uint64_t CallControlUsoIdentifiers.hasCameraSettingIdentifier.getter(uint64_t a1)
{
  return CallControlUsoIdentifiers.hasSpeakerphoneIdentifier.getter(a1, 0);
}

uint64_t CallControlUsoIdentifiers.hasHoldCallIdentifier.getter(uint64_t a1)
{
  return CallControlUsoIdentifiers.hasSpeakerphoneIdentifier.getter(a1, 5);
}

uint64_t CallControlUsoIdentifiers.hasSpeakerphoneIdentifier.getter(uint64_t a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467710;
  *(unsigned char *)(inited + 32) = a2;
  *(void *)(inited + 56) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(inited + 64) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  OUTLINED_FUNCTION_2_104();
  OUTLINED_FUNCTION_10_59();
  uint64_t v5 = OUTLINED_FUNCTION_15_49();
  v2(v5);
  OUTLINED_FUNCTION_13_46();
  if (v7 && (OUTLINED_FUNCTION_12_51(v6), (v8 & 1) != 0))
  {
    OUTLINED_FUNCTION_5_66();
    swift_bridgeObjectRelease();
    uint64_t v9 = OUTLINED_FUNCTION_3_92();
    uint64_t v11 = v10(v9);
    OUTLINED_FUNCTION_16_49(v11, v12);
    char v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  return v14 & 1;
}

const char *CallControlUsoIdentifiers.PhoneSetting.namespace.unsafeMutableAddressor()
{
  return "phoneSetting";
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CallControlUsoIdentifiers.PhoneSetting()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CallControlUsoIdentifiers.PhoneSetting()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CallControlUsoIdentifiers.PhoneSetting()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CallControlUsoIdentifiers.PhoneSetting(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::PhoneSetting_optional protocol witness for RawRepresentable.init(rawValue:) in conformance CallControlUsoIdentifiers.PhoneSetting@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::PhoneSetting_optional *a2@<X8>)
{
  result.int value = CallControlUsoIdentifiers.PhoneSetting.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance CallControlUsoIdentifiers.PhoneSetting@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CallControlUsoIdentifiers.PhoneSetting.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *CallControlUsoIdentifiers.FloatSettingName.namespace.unsafeMutableAddressor()
{
  return &static CallControlUsoIdentifiers.FloatSettingName.namespace;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CallControlUsoIdentifiers.FloatSettingName(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CallControlUsoIdentifiers.FloatSettingName()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CallControlUsoIdentifiers.FloatSettingName(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CallControlUsoIdentifiers.FloatSettingName()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::FloatSettingName_optional protocol witness for RawRepresentable.init(rawValue:) in conformance CallControlUsoIdentifiers.FloatSettingName@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::FloatSettingName_optional *a2@<X8>)
{
  result.int value = CallControlUsoIdentifiers.FloatSettingName.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance CallControlUsoIdentifiers.FloatSettingName@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CallControlUsoIdentifiers.FloatSettingName.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *CallControlUsoIdentifiers.BoolSettingName.namespace.unsafeMutableAddressor()
{
  return &static CallControlUsoIdentifiers.BoolSettingName.namespace;
}

uint64_t static CallControlUsoIdentifiers.BoolSettingName.namespace.getter()
{
  return 0x747465536C6F6F62;
}

BOOL CallControlUsoIdentifiers.BoolSettingName.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of CallControlUsoIdentifiers.BoolSettingName.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t CallControlUsoIdentifiers.BoolSettingName.rawValue.getter()
{
  return 0x6F68706F7263696DLL;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance CallControlUsoIdentifiers.BoolSettingName@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = CallControlUsoIdentifiers.BoolSettingName.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance CallControlUsoIdentifiers.BoolSettingName(void *a1@<X8>)
{
  *a1 = 0x6F68706F7263696DLL;
  a1[1] = 0xEA0000000000656ELL;
}

BOOL protocol witness for UsoVocIdentifier.init(rawValue:) in conformance CallControlUsoIdentifiers.BoolSettingName@<W0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  BOOL result = CallControlUsoIdentifiers.BoolSettingName.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

double one-time initialization function for identifierTypeRegistry()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier.Type>);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 3;
  *(_OWORD *)(v0 + 16) = xmmword_46A250;
  *(void *)(v0 + 32) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(v0 + 40) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(v0 + 48) = &type metadata for CallControlUsoIdentifiers.FloatSettingName;
  *(void *)(v0 + 56) = &protocol witness table for CallControlUsoIdentifiers.FloatSettingName;
  *(void *)(v0 + 64) = &type metadata for CallControlUsoIdentifiers.BoolSettingName;
  *(void *)(v0 + 72) = &protocol witness table for CallControlUsoIdentifiers.BoolSettingName;
  static CallControlUsoIdentifiers.identifierTypeRegistry = (int *)v0;
  return result;
}

unint64_t lazy protocol witness table accessor for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting()
{
  unint64_t result = lazy protocol witness table cache variable for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting;
  if (!lazy protocol witness table cache variable for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName()
{
  unint64_t result = lazy protocol witness table cache variable for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName;
  if (!lazy protocol witness table cache variable for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName()
{
  unint64_t result = lazy protocol witness table cache variable for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName;
  if (!lazy protocol witness table cache variable for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName);
  }
  return result;
}

void type metadata accessor for CallControlUsoIdentifiers()
{
}

void type metadata accessor for CallControlUsoIdentifiers.PhoneSetting()
{
}

void type metadata accessor for CallControlUsoIdentifiers.FloatSettingName()
{
}

unsigned char *storeEnumTagSinglePayload for CallControlUsoIdentifiers.BoolSettingName(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x33F6E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for CallControlUsoIdentifiers.BoolSettingName()
{
}

uint64_t OUTLINED_FUNCTION_2_104()
{
  __swift_project_boxed_opaque_existential_1(v1, v0);
  return swift_getDynamicType();
}

uint64_t OUTLINED_FUNCTION_3_92()
{
  uint64_t v2 = *(void *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_4_85()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_74()
{
  return *(void *)(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_10_59()
{
  return swift_bridgeObjectRetain();
}

unint64_t OUTLINED_FUNCTION_12_51(uint64_t a1)
{
  return specialized __RawDictionaryStorage.find<A>(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_15_49()
{
  return v0;
}

void OUTLINED_FUNCTION_16_49(uint64_t a1, uint64_t a2)
{
  specialized Set.contains(_:)(a1, a2, v2);
}

uint64_t PhoneCallRecordProperties<>.isVideo.getter()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v3 - 8);
  OUTLINED_FUNCTION_12_0();
  outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, v2);
  uint64_t v4 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v2, 1, v4) == 1)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v5 = 0;
    uint64_t v0 = 0;
  }
  else
  {
    uint64_t v5 = v2;
    SpeakableString.print.getter();
    OUTLINED_FUNCTION_0_61();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  }
  uint64_t BackingType = INCallCapabilityGetBackingType();
  if (BackingType == 2)
  {
    char v8 = @"VIDEO_CALL";
    goto LABEL_8;
  }
  if (BackingType == 1)
  {
    char v8 = @"AUDIO_CALL";
LABEL_8:
    uint64_t v9 = v8;
    goto LABEL_10;
  }
  char v8 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
LABEL_10:
  char v10 = v8;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (v0)
  {
    if (v5 == v11 && v0 == v13) {
      char v15 = 1;
    }
    else {
      char v15 = OUTLINED_FUNCTION_0_11();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = 0;
  }
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t PhoneCallRecordProperties<>.callerWithAliases.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller)) {
    return 0;
  }
  v5[0] = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
  swift_retain();
  closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(v5, &v6);
  swift_release();
  uint64_t v1 = v6;
  type metadata accessor for PhonePersonWithAliasesList.Builder();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  *(void *)(v2 + 16) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for PhonePersonWithAliasesList();
  swift_allocObject();
  uint64_t v3 = PhonePersonList.init(builder:)(v2);
  swift_bridgeObjectRelease();
  return v3;
}

void closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_46A030;
  *(void *)(v4 + 32) = v3;
  uint64_t v5 = v4;
  specialized Array._endMutation()();
  swift_retain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  *a2 = v5;
}

uint64_t PhoneCallRecordProperties<>.isFaceTimeVideo.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider)) {
    return 0;
  }
  swift_retain();
  char v1 = specialized PhoneCallProviderProperties.isFaceTime.getter();
  swift_release();
  if ((v1 & 1) == 0) {
    return 0;
  }

  return PhoneCallRecordProperties<>.isVideo.getter();
}

uint64_t PhoneCallRecordProperties<>.isFaceTimeAudio.getter()
{
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v3 - 8);
  OUTLINED_FUNCTION_12_0();
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  if (!v4) {
    return v4 & 1;
  }
  swift_retain();
  char v5 = specialized PhoneCallProviderProperties.isFaceTime.getter();
  swift_release();
  if ((v5 & 1) == 0)
  {
    LOBYTE(v4) = 0;
    return v4 & 1;
  }
  outlined init with copy of SpeakableString?(v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, v1);
  uint64_t v6 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v1, 1, v6) == 1)
  {
    outlined destroy of SpeakableString?(v1);
    uint64_t v7 = 0;
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v7 = v1;
    SpeakableString.print.getter();
    OUTLINED_FUNCTION_0_61();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  }
  uint64_t BackingType = INCallCapabilityGetBackingType();
  if (BackingType == 2)
  {
    char v10 = @"VIDEO_CALL";
  }
  else
  {
    if (BackingType != 1)
    {
      char v10 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
      goto LABEL_13;
    }
    char v10 = @"AUDIO_CALL";
  }
  uint64_t v11 = v10;
LABEL_13:
  uint64_t v12 = v10;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (v2)
  {
    if (v7 == v13 && v2 == v15) {
      LOBYTE(v4) = 1;
    }
    else {
      LOBYTE(v4) = OUTLINED_FUNCTION_0_11();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t protocol witness for PhoneCallRecordProperties.callerWithAliases.getter in conformance PhoneCallRecord()
{
  return PhoneCallRecordProperties<>.callerWithAliases.getter();
}

uint64_t protocol witness for PhoneCallRecordProperties.isFaceTimeVideo.getter in conformance PhoneCallRecord()
{
  return PhoneCallRecordProperties<>.isFaceTimeVideo.getter() & 1;
}

uint64_t protocol witness for PhoneCallRecordProperties.isFaceTimeAudio.getter in conformance PhoneCallRecord()
{
  return PhoneCallRecordProperties<>.isFaceTimeAudio.getter() & 1;
}

uint64_t static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)()
{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)();
}

{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  long long v11[2];

  OUTLINED_FUNCTION_64_6();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  char v5 = v4;
  outlined init with copy of SignalProviding(v6, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = v5;
  v7[3] = v3;
  outlined init with take of AppSelectionSignalComponent(v11, (uint64_t)(v7 + 4));
  v7[9] = v1;
  uint64_t v8 = v1;
  swift_retain();
  uint64_t v9 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_24_34();
  return OUTLINED_FUNCTION_44_23();
}

{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)();
}

{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  long long v7;

  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_66_9(v2, v3);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v0;
  outlined init with take of AppSelectionSignalComponent(&v7, v4 + 32);
  char v5 = v0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_24_34();
  return OUTLINED_FUNCTION_44_23();
}

uint64_t static Transformer<>.transformer(app:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallIntentResponse);
  type metadata accessor for Input();
  OUTLINED_FUNCTION_41_23();

  return Transformer.init(transform:)();
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v33 = v6;
  uint64_t v34 = v5;
  OUTLINED_FUNCTION_61_12(v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_30_29(v9, v31);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_22_47(v13, v32);
  __chkstk_darwin(v14);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_37();
  [objc_allocWithZone((Class)INAnswerCallIntent) init];
  OUTLINED_FUNCTION_48_22();
  outlined init with copy of SignalProviding(v2, (uint64_t)v36);
  uint64_t v18 = OUTLINED_FUNCTION_60_1();
  outlined init with take of AppSelectionSignalComponent(v36, v18 + 16);
  *(void *)(v18 + 56) = v0;
  id v19 = v0;
  id v20 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0);
  Transformer.init(transform:)();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INAnswerCallIntentExport);
  OUTLINED_FUNCTION_65_9();
  Reducer.reduce.getter();
  uint64_t v21 = OUTLINED_FUNCTION_26_32();
  v22(v21);
  swift_release();
  if (v1)
  {

    OUTLINED_FUNCTION_9_68();
    v23();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v4, v35);
  }
  else
  {
    *(void *)(swift_allocObject() + 16) = v34;
    id v24 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    Transformer.init(transform:)();
    OUTLINED_FUNCTION_12_52();
    __chkstk_darwin(v25);
    OUTLINED_FUNCTION_50_18();
    OUTLINED_FUNCTION_60_13();
    Reducer.reduce.getter();
    uint64_t v26 = OUTLINED_FUNCTION_25_34();
    v27(v26);
    swift_release();
    uint64_t v28 = *(void (**)(void))(v11 + 8);
    OUTLINED_FUNCTION_9_68();
    v28();
    OUTLINED_FUNCTION_9_68();
    v28();

    OUTLINED_FUNCTION_11();
    v29();
    OUTLINED_FUNCTION_11();
    v30();
    void *v33 = v20;
  }
  OUTLINED_FUNCTION_9_58();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, void *);
  void *v32;
  void (*v33)(void);
  void (*v34)(void);
  void (*v35)(void);
  void (*v36)(void);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  long long v48[2];
  long long v49[2];
  uint64_t v50[5];
  void v51[6];

  OUTLINED_FUNCTION_11_51();
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v46 = v8;
  uint64_t v38 = v9;
  id v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INJoinCallIntentExport>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v11);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_13_29((uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_13_29((uint64_t)&v37 - v18);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallGroupConversationFilter?>);
  OUTLINED_FUNCTION_0_0();
  id v44 = v19;
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_53();
  uint64_t v21 = [objc_allocWithZone((Class)INJoinCallIntent) init];
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v7, v5);
  unint64_t v22 = v3[3];
  unint64_t v23 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v22);
  id v24 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 8);
  uint64_t v41 = v21;
  v24(v51, v22, v23);
  v50[3] = type metadata accessor for ContactGroupResolver();
  v50[4] = (uint64_t)&protocol witness table for ContactGroupResolver;
  __swift_allocate_boxed_opaque_existential_1(v50);
  ContactGroupResolver.init()();
  outlined init with copy of SignalProviding((uint64_t)v51, (uint64_t)v49);
  outlined init with copy of SignalProviding((uint64_t)v50, (uint64_t)v48);
  uint64_t v25 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v49, v25 + 16);
  outlined init with take of AppSelectionSignalComponent(v48, v25 + 56);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  uint64_t v26 = v39;
  Transformer.init(transform:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  uint64_t v27 = v40;
  uint64_t v28 = v42;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v40, v26, v42);
  unint64_t v29 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v30 + v29, v27, v28);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallGroupConversationFilter?);
  Transformer.init(transform:)();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v26, v28);
  uint64_t v47 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INJoinCallIntentExport);
  Reducer.init(builder:)();
  uint64_t v31 = (void (*)(uint64_t, void *))Reducer.reduce.getter();
  uint64_t v32 = v41;
  v51[0] = v41;
  v31(v46, v51);
  swift_release();
  if (v0)
  {

    OUTLINED_FUNCTION_11();
    v33();

    OUTLINED_FUNCTION_1_63();
    v34();
  }
  else
  {
    OUTLINED_FUNCTION_11();
    v35();

    OUTLINED_FUNCTION_1_63();
    v36();
    *uint64_t v38 = v32;
  }
  OUTLINED_FUNCTION_9_58();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, long long *);
  void (*v32)(void);
  void (*v33)(void);
  void (*v34)(void);
  void (*v35)(void);
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  long long v44[2];

  OUTLINED_FUNCTION_11_51();
  id v43 = v1;
  uint64_t v3 = v2;
  uint64_t v38 = v5;
  uint64_t v39 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = v4;
  uint64_t v37 = v9;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INHangUpCallIntentExport>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  unint64_t v40 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v18 = __chkstk_darwin(v17);
  id v19 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - v20;
  unint64_t v22 = [objc_allocWithZone((Class)INHangUpCallIntent) init];
  unint64_t v23 = v8;
  id v24 = v38;
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v23, v7);
  *(void *)(swift_allocObject() + 16) = v3;
  uint64_t v25 = v3;
  uint64_t v26 = v22;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Transformer.init(transform:)();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v42 = v21;
  v27(v19, v21, v12);
  outlined init with copy of SignalProviding(v24, (uint64_t)v44);
  uint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v29 = (v16 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v30 + v28, v19, v12);
  outlined init with take of AppSelectionSignalComponent(v44, v30 + v29);
  *(void *)(v30 + ((v29 + 47) & 0xFFFFFFFFFFFFFFF8)) = v39;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INHangUpCallIntentExport);
  Reducer.init(apply:)();
  uint64_t v31 = (void (*)(uint64_t, long long *))Reducer.reduce.getter();
  *(void *)&v44[0] = v26;
  v31(v43, v44);
  if (v0)
  {

    swift_release();
    OUTLINED_FUNCTION_11();
    v32();
    OUTLINED_FUNCTION_26();
    v33();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_11();
    v34();
    OUTLINED_FUNCTION_26();
    v35();

    *uint64_t v37 = v26;
  }
  OUTLINED_FUNCTION_9_58();
}

uint64_t closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  v15[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v1 = *(void *)(v15[0] - 8);
  __chkstk_darwin(v15[0]);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - v9;
  swift_getKeyPath();
  type metadata accessor for INCallAudioRoute(0);
  -- infix<A, B, C>(_:_:)();
  swift_release();
  swift_getKeyPath();
  --> infix<A, B, C, D>(_:_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, void))(v1 + 8))(v3, v15[0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INAnswerCallIntentExport);
  static ReducerBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>>);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_467710;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v13 + v12, v10, v4);
  static ReducerBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  unint64_t v12;
  uint64_t v13;
  void v15[2];

  v15[1] = a1;
  v15[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallGroupConversationFilter?>);
  uint64_t v1 = *(void *)(v15[0] - 8);
  __chkstk_darwin(v15[0]);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INJoinCallIntentExport>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - v9;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallGroupConversationFilter?);
  -- infix<A, B, C>(_:_:)();
  swift_release();
  swift_getKeyPath();
  --> infix<A, B, C, D>(_:_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, void))(v1 + 8))(v3, v15[0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INJoinCallIntentExport);
  static ReducerBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INJoinCallIntentExport>>);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_467710;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v13 + v12, v10, v4);
  static ReducerBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  unint64_t v12;
  uint64_t v13;
  void v15[2];

  v15[1] = a1;
  v15[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  uint64_t v1 = *(void *)(v15[0] - 8);
  __chkstk_darwin(v15[0]);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAddCallParticipantIntentExport>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - v9;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  -- infix<A, B, C>(_:_:)();
  swift_release();
  swift_getKeyPath();
  --> infix<A, B, C, D>(_:_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, void))(v1 + 8))(v3, v15[0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantIntentExport);
  static ReducerBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INAddCallParticipantIntentExport>>);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_467710;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v13 + v12, v10, v4);
  static ReducerBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

uint64_t closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  v15[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  uint64_t v1 = *(void *)(v15[0] - 8);
  __chkstk_darwin(v15[0]);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - v9;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  -- infix<A, B, C>(_:_:)();
  swift_release();
  swift_getKeyPath();
  --> infix<A, B, C, D>(_:_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, void))(v1 + 8))(v3, v15[0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INAnswerCallIntentExport);
  static ReducerBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>>);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_467710;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v13 + v12, v10, v4);
  static ReducerBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

void key path getter for INAnswerCallIntentExport.callIdentifier : INAnswerCallIntentExport(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 callIdentifier];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void key path setter for INAnswerCallIntentExport.callIdentifier : INAnswerCallIntentExport(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    NSString v3 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v3 = 0;
  }
  id v4 = v3;
  objc_msgSend(v2, "setCallIdentifier:");
}

id key path getter for INJoinCallIntentExport.groupConversationFilter : INJoinCallIntentExport@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 groupConversationFilter];
  *a2 = result;
  return result;
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_11_51();
  a19 = v21;
  a20 = v22;
  uint64_t v53 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v52 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAddCallParticipantIntentExport>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_4();
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v31 = v30;
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_4();
  uint64_t v35 = v34 - v33;
  id v36 = [objc_allocWithZone((Class)INAddCallParticipantIntent) init];
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v27, v25);
  id v37 = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  Transformer.init(transform:)();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantIntentExport);
  Reducer.init(builder:)();
  Reducer.reduce.getter();
  OUTLINED_FUNCTION_32_22();
  a10 = (uint64_t)v37;
  v38(v53, &a10);
  if (v20)
  {
    swift_release();

    OUTLINED_FUNCTION_10_8();
    v39();

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v35, v54);
  }
  else
  {
    swift_release();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
    id v41 = v37;
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      a10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315394;
      os_log_type_t v50 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAddCallParticipantIntent>);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAddCallParticipantIntent>.Type);
      uint64_t v45 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, &a10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2112;
      id v47 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v51 = v41;

      _os_log_impl(&dword_0, v42, v50, "%s --> %@", (uint8_t *)v44, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    OUTLINED_FUNCTION_10_8();
    v48();
    OUTLINED_FUNCTION_11();
    v49();
    void *v52 = v41;
  }
  OUTLINED_FUNCTION_9_58();
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v154)(long long *__return_ptr, void *);
  void (*v155)(void);
  uint64_t v156;
  void (*v157)(void);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t);
  void (*v167)(void);
  void (*v168)(void);
  void (*v169)(void);
  void (*v170)(void);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(uint64_t);
  void (*v181)(void);
  void (*v182)(void);
  void (*v183)(void);
  void (*v184)(void);
  uint64_t v185;
  void (*v186)(uint64_t);
  void (*v187)(void);
  void (*v188)(void);
  uint64_t v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void v217[5];
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  long long v221[2];
  long long v222[2];
  uint64_t v223[5];
  long long v224[3];

  OUTLINED_FUNCTION_11_51();
  a19 = v21;
  a20 = v22;
  v218 = v20;
  id v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  a10 = v29;
  v196 = v30;
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartCallIntent>);
  OUTLINED_FUNCTION_0_0();
  v197 = v31;
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v33);
  uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_0_0();
  v199 = v34;
  __chkstk_darwin(v35);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v36);
  uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordFilter?>);
  OUTLINED_FUNCTION_0_0();
  long long v202 = v37;
  __chkstk_darwin(v38);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v39);
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallCapability>);
  OUTLINED_FUNCTION_0_0();
  unint64_t v205 = v40;
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v42);
  uint64_t v206 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAudioCallTTYType>);
  OUTLINED_FUNCTION_0_0();
  v207 = v43;
  __chkstk_darwin(v44);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v45);
  v209 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_0_0();
  v210 = v46;
  __chkstk_darwin(v47);
  OUTLINED_FUNCTION_13_29((uint64_t)&v189 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v213 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_0_0();
  v215 = v49;
  __chkstk_darwin(v50);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v51);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  OUTLINED_FUNCTION_0_0();
  v214 = v52;
  __chkstk_darwin(v53);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v54);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v57 = v56;
  __chkstk_darwin(v58);
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v59);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v60);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v61);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v62);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  uint64_t v64 = __chkstk_darwin(v63);
  uint64_t v66 = (char *)&v189 - v65;
  __chkstk_darwin(v64);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v67);
  uint64_t v69 = (char *)&v189 - v68;
  v217[4] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_0_0();
  v217[3] = v70;
  __chkstk_darwin(v71);
  OUTLINED_FUNCTION_4();
  uint64_t v74 = v73 - v72;
  id v75 = [objc_allocWithZone((Class)INStartCallIntent) init];
  v211 = v28;
  uint64_t v76 = v28;
  uint64_t v77 = v26;
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v76, v26);
  v212 = v24;
  outlined init with copy of SignalProviding((uint64_t)v24, (uint64_t)v224);
  uint64_t v78 = OUTLINED_FUNCTION_60_1();
  outlined init with take of AppSelectionSignalComponent(v224, v78 + 16);
  *(void *)(v78 + 56) = v77;
  id v79 = v77;
  id v80 = v75;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0);
  Transformer.init(transform:)();
  v219 = v74;
  v220 = v74;
  v217[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  Reducer.init(builder:)();
  Reducer.reduce.getter();
  uint64_t v82 = OUTLINED_FUNCTION_45_20();
  uint64_t v83 = v218;
  v84(v82);
  if (v83)
  {
    swift_release();

    OUTLINED_FUNCTION_6_77();
    v85();

    OUTLINED_FUNCTION_16_50();
    goto LABEL_4;
  }
  v194 = v66;
  v195 = v69;
  v218 = v57;
  uint64_t v86 = v215;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  uint64_t v87 = v217[1];
  Transformer.init(transform:)();
  OUTLINED_FUNCTION_12_52();
  __chkstk_darwin(v88);
  OUTLINED_FUNCTION_17_37();
  *(void *)(v89 - 16) = v87;
  OUTLINED_FUNCTION_38_25();
  Reducer.reduce.getter();
  uint64_t v90 = OUTLINED_FUNCTION_45_20();
  v91(v90);
  swift_release();
  type metadata accessor for INCallDestinationType(0);
  Transformer.init(transform:)();
  OUTLINED_FUNCTION_12_52();
  __chkstk_darwin(v92);
  OUTLINED_FUNCTION_13_47();
  uint64_t v66 = v194;
  OUTLINED_FUNCTION_38_25();
  uint64_t v193 = v55;
  Reducer.reduce.getter();
  uint64_t v94 = v93;
  *(void *)&v224[0] = v80;
  uint64_t v95 = OUTLINED_FUNCTION_62_16();
  v96(v95);
  swift_release();
  outlined init with copy of SignalProviding((uint64_t)v212, (uint64_t)v224);
  uint64_t v97 = OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_42_24(v97);
  *(void *)(v94 + 56) = v211;
  type metadata accessor for INPreferredCallProvider(0);
  swift_retain();
  Transformer.init(transform:)();
  OUTLINED_FUNCTION_12_52();
  __chkstk_darwin(v98);
  OUTLINED_FUNCTION_13_47();
  uint64_t v192 = v81;
  OUTLINED_FUNCTION_38_25();
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_46_20();
  *(void *)(v99 - 256) = v80;
  *(void *)&v224[0] = v80;
  v100(a10, v224);
  OUTLINED_FUNCTION_16_50();
  swift_release();
  type metadata accessor for INAudioCallTTYType(0);
  Transformer.init(transform:)();
  OUTLINED_FUNCTION_12_52();
  __chkstk_darwin(v104);
  OUTLINED_FUNCTION_13_47();
  OUTLINED_FUNCTION_52_16();
  Reducer.init(builder:)();
  Reducer.reduce.getter();
  OUTLINED_FUNCTION_46_20();
  *(void *)&v224[0] = *(void *)(v105 - 256);
  uint64_t v106 = OUTLINED_FUNCTION_62_16();
  v107(v106);
  uint64_t v191 = 0;
  swift_release();
  outlined init with copy of SignalProviding((uint64_t)v212, (uint64_t)v224);
  uint64_t v108 = OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_42_24(v108);
  *(void *)(v86 + 56) = v211;
  type metadata accessor for INCallCapability(0);
  uint64_t v110 = v109;
  swift_retain();
  Transformer.init(transform:)();
  OUTLINED_FUNCTION_12_52();
  __chkstk_darwin(v111);
  OUTLINED_FUNCTION_13_47();
  Reducer.init(builder:)();
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_46_20();
  uint64_t v113 = *(void **)(v112 - 256);
  uint64_t v114 = OUTLINED_FUNCTION_33_24();
  v115(v114);
  uint64_t v191 = v110;
  if (v110)
  {

    swift_release();
    uint64_t v116 = *(void (**)(void))(v218 + 8);
    OUTLINED_FUNCTION_3_86();
    v116();
    OUTLINED_FUNCTION_3_86();
    v116();
    OUTLINED_FUNCTION_3_86();
    v116();
    OUTLINED_FUNCTION_3_86();
    v116();
    OUTLINED_FUNCTION_3_86();
    v116();
    OUTLINED_FUNCTION_3_86();
    v116();

    OUTLINED_FUNCTION_43_22();
    OUTLINED_FUNCTION_1_63();
    v117();
    OUTLINED_FUNCTION_14_4();
    v118();
LABEL_13:
    OUTLINED_FUNCTION_1_63();
    v145();
    OUTLINED_FUNCTION_47_23();
    OUTLINED_FUNCTION_11();
    v146();
    OUTLINED_FUNCTION_1_63();
    v147();
    goto LABEL_4;
  }
  swift_release();
  [v113 setCallRecordToCallBack:0];
  uint64_t v119 = v212[4];
  __swift_project_boxed_opaque_existential_1(v212, v212[3]);
  uint64_t v120 = OUTLINED_FUNCTION_56_17();
  v121(v120, v119);
  v190 = [v113 callCapability];
  id v122 = [v113 contacts];
  if (v122)
  {
    int v123 = v122;
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v189 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    v189 = 0;
  }
  uint64_t v124 = swift_allocObject();
  uint64_t v125 = v189;
  *(void *)(v124 + 16) = v190;
  *(void *)(v124 + 24) = v125;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
  Transformer.init(transform:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v224);
  OUTLINED_FUNCTION_12_52();
  __chkstk_darwin(v126);
  OUTLINED_FUNCTION_13_47();
  Reducer.init(builder:)();
  Reducer.reduce.getter();
  OUTLINED_FUNCTION_32_22();
  uint64_t v127 = OUTLINED_FUNCTION_33_24();
  v128(v127);
  uint64_t v191 = 0;
  swift_release();
  uint64_t v129 = v113;
  uint64_t v130 = v212[4];
  __swift_project_boxed_opaque_existential_1(v212, v212[3]);
  uint64_t v131 = OUTLINED_FUNCTION_56_17();
  v132(v131, v130);
  v223[3] = type metadata accessor for ContactGroupResolver();
  v223[4] = (uint64_t)&protocol witness table for ContactGroupResolver;
  __swift_allocate_boxed_opaque_existential_1(v223);
  ContactGroupResolver.init()();
  outlined init with copy of SignalProviding((uint64_t)v224, (uint64_t)v222);
  outlined init with copy of SignalProviding((uint64_t)v223, (uint64_t)v221);
  uint64_t v133 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v222, v133 + 16);
  outlined init with take of AppSelectionSignalComponent(v221, v133 + 56);
  uint64_t v134 = (void (*)(void))__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  uint64_t v135 = v201;
  Transformer.init(transform:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v223);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v224);
  OUTLINED_FUNCTION_12_52();
  __chkstk_darwin(v136);
  OUTLINED_FUNCTION_17_37();
  *(void *)(v137 - 16) = v135;
  OUTLINED_FUNCTION_52_16();
  Reducer.init(builder:)();
  Reducer.reduce.getter();
  OUTLINED_FUNCTION_32_22();
  uint64_t v138 = v129;
  *(void *)&v224[0] = v129;
  uint64_t v139 = a10;
  uint64_t v140 = v191;
  v141();
  uint64_t v191 = v140;
  if (v140)
  {

    swift_release();
    OUTLINED_FUNCTION_53_20();
    OUTLINED_FUNCTION_3_86();
    v134();
    OUTLINED_FUNCTION_3_86();
    v134();
    OUTLINED_FUNCTION_3_86();
    v134();
    OUTLINED_FUNCTION_3_86();
    v134();
    OUTLINED_FUNCTION_3_86();
    v134();
    OUTLINED_FUNCTION_3_86();
    v134();
    OUTLINED_FUNCTION_3_86();
    v134();
    OUTLINED_FUNCTION_3_86();
    v134();

    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_1_63();
    v142();
    OUTLINED_FUNCTION_39_25();
    OUTLINED_FUNCTION_11();
    v143();
    OUTLINED_FUNCTION_1_63();
    v144();
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v208, v206);
    goto LABEL_13;
  }
  swift_release();
  __swift_project_boxed_opaque_existential_1(v139, v139[3]);
  Swift::Bool v148 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  INStartCallIntent.updateIsGroupCall(isGroupCall:)(v148);
  uint64_t v149 = OUTLINED_FUNCTION_63_9();
  outlined init with copy of SignalProviding(v149, v150);
  uint64_t v151 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v224, v151 + 16);
  uint64_t v152 = v211;
  *(void *)(v151 + 56) = v138;
  *(void *)(v151 + 64) = v152;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  id v153 = v138;
  swift_retain();
  Transformer.init(transform:)();
  uint64_t v154 = (void (*)(long long *__return_ptr, void *))Transformer.transform.getter();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_11();
  v155();
  uint64_t v156 = v191;
  v154(v224, v139);
  if (!v156)
  {

    swift_release();
    os_log_t v170 = *(void (**)(void))(v218 + 8);
    OUTLINED_FUNCTION_6_77();
    v170();
    uint64_t v171 = OUTLINED_FUNCTION_4_86((uint64_t)v221 + 8);
    ((void (*)(uint64_t))v170)(v171);
    uint64_t v172 = OUTLINED_FUNCTION_4_86((uint64_t)v222);
    ((void (*)(uint64_t))v170)(v172);
    v173 = OUTLINED_FUNCTION_4_86((uint64_t)v223);
    ((void (*)(uint64_t))v170)(v173);
    uint64_t v174 = OUTLINED_FUNCTION_4_86((uint64_t)v224);
    ((void (*)(uint64_t))v170)(v174);
    uint64_t v175 = OUTLINED_FUNCTION_4_86((uint64_t)&v216);
    ((void (*)(uint64_t))v170)(v175);
    os_log_type_t v176 = OUTLINED_FUNCTION_4_86((uint64_t)&a10);
    ((void (*)(uint64_t))v170)(v176);
    uint64_t v177 = OUTLINED_FUNCTION_4_86((uint64_t)v217);
    ((void (*)(uint64_t))v170)(v177);
    uint64_t v178 = *(void *)&v224[0];
    uint64_t v179 = OUTLINED_FUNCTION_29_29();
    v180(v179);
    OUTLINED_FUNCTION_3_86();
    v181();
    OUTLINED_FUNCTION_1_63();
    v182();
    OUTLINED_FUNCTION_1_63();
    v183();
    OUTLINED_FUNCTION_1_63();
    v184();
    uint64_t v185 = OUTLINED_FUNCTION_55_15();
    v186(v185);
    OUTLINED_FUNCTION_1_63();
    v187();
    OUTLINED_FUNCTION_26();
    v188();
    _DWORD *v196 = v178;
    goto LABEL_5;
  }

  swift_release();
  uint64_t v157 = *(void (**)(void))(v218 + 8);
  OUTLINED_FUNCTION_6_77();
  v157();
  uint64_t v158 = OUTLINED_FUNCTION_4_86((uint64_t)v221 + 8);
  ((void (*)(uint64_t))v157)(v158);
  uint64_t v159 = OUTLINED_FUNCTION_4_86((uint64_t)v222);
  ((void (*)(uint64_t))v157)(v159);
  os_log_type_t v160 = OUTLINED_FUNCTION_4_86((uint64_t)v223);
  ((void (*)(uint64_t))v157)(v160);
  uint64_t v161 = OUTLINED_FUNCTION_4_86((uint64_t)v224);
  ((void (*)(uint64_t))v157)(v161);
  uint64_t v162 = OUTLINED_FUNCTION_4_86((uint64_t)&v216);
  ((void (*)(uint64_t))v157)(v162);
  uint64_t v163 = OUTLINED_FUNCTION_4_86((uint64_t)&a10);
  ((void (*)(uint64_t))v157)(v163);
  os_log_type_t v164 = OUTLINED_FUNCTION_4_86((uint64_t)v217);
  ((void (*)(uint64_t))v157)(v164);
  os_log_t v165 = OUTLINED_FUNCTION_29_29();
  v166(v165);
  OUTLINED_FUNCTION_3_86();
  v167();
  OUTLINED_FUNCTION_1_63();
  v168();
  OUTLINED_FUNCTION_1_63();
  v169();
  OUTLINED_FUNCTION_1_63();
  v101();
  OUTLINED_FUNCTION_55_15();
  OUTLINED_FUNCTION_14_4();
  v102();
  OUTLINED_FUNCTION_1_63();
  v103();
LABEL_4:
  (*((void (**)(uint64_t, uint64_t))v66 + 1))(v219, v81);
LABEL_5:
  OUTLINED_FUNCTION_9_58();
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v105 = v2;
  uint64_t v106 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v85 = v9;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAudioCallTTYType>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v86 = v10;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_13_29((uint64_t)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordType>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v88 = v13;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v15);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v90 = v16;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v18);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v94 = v19;
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_3_1();
  uint64_t v96 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v97 = v23;
  uint64_t v98 = v22;
  __chkstk_darwin(v22);
  OUTLINED_FUNCTION_3_1();
  uint64_t v99 = v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v30);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)v84 - v33;
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_5_17();
  uint64_t v100 = v35;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)v84 - v37;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v103 = v40;
  uint64_t v104 = v39;
  __chkstk_darwin(v39);
  OUTLINED_FUNCTION_37();
  id v41 = [objc_allocWithZone((Class)INStartAudioCallIntent) init];
  uint64_t v93 = v8;
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v8, v6);
  uint64_t v92 = v4;
  outlined init with copy of SignalProviding(v4, (uint64_t)v109);
  uint64_t v42 = OUTLINED_FUNCTION_60_1();
  outlined init with take of AppSelectionSignalComponent(v109, v42 + 16);
  *(void *)(v42 + 56) = v6;
  id v43 = v6;
  id v44 = v41;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0);
  Transformer.init(transform:)();
  uint64_t v102 = v1;
  uint64_t v108 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  uint64_t v101 = v45;
  Reducer.init(builder:)();
  uint64_t v107 = v25;
  Reducer.reduce.getter();
  OUTLINED_FUNCTION_32_22();
  uint64_t v110 = v44;
  *(void *)&v109[0] = v44;
  uint64_t v47 = v105;
  uint64_t v46 = v106;
  uint64_t v48 = OUTLINED_FUNCTION_63_9();
  v49(v48);
  if (v46)
  {
    swift_release();

    OUTLINED_FUNCTION_26();
    v50();

    uint64_t v51 = OUTLINED_FUNCTION_58_17();
    (*(void (**)(uint64_t))(v62 + 8))(v51);
  }
  else
  {
    v84[1] = v34;
    v84[2] = v38;
    uint64_t v106 = v27;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
    uint64_t v52 = v99;
    Transformer.init(transform:)();
    OUTLINED_FUNCTION_12_52();
    __chkstk_darwin(v53);
    OUTLINED_FUNCTION_17_37();
    *(void *)(v54 - 16) = v52;
    uint64_t v55 = v100;
    Reducer.init(builder:)();
    Reducer.reduce.getter();
    OUTLINED_FUNCTION_32_22();
    *(void *)&v109[0] = v110;
    v56(v47, v109);
    swift_release();
    type metadata accessor for INCallDestinationType(0);
    uint64_t v57 = v96;
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_12_52();
    __chkstk_darwin(v58);
    OUTLINED_FUNCTION_17_37();
    *(void *)(v59 - 16) = v57;
    OUTLINED_FUNCTION_51_17();
    Reducer.reduce.getter();
    OUTLINED_FUNCTION_32_22();
    *(void *)&v109[0] = v110;
    uint64_t v60 = OUTLINED_FUNCTION_63_9();
    v61(v60);
    swift_release();
    outlined init with copy of SignalProviding(v92, (uint64_t)v109);
    uint64_t v63 = OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_42_24(v63);
    uint64_t v64 = v93;
    *(void *)(v55 + 56) = v93;
    type metadata accessor for INPreferredCallProvider(0);
    swift_retain();
    OUTLINED_FUNCTION_52_16();
    Transformer.init(transform:)();
    OUTLINED_FUNCTION_12_52();
    __chkstk_darwin(v65);
    OUTLINED_FUNCTION_17_37();
    *(void *)(v66 - 16) = v64;
    OUTLINED_FUNCTION_51_17();
    Reducer.reduce.getter();
    *(void *)&v109[0] = v110;
    uint64_t v67 = OUTLINED_FUNCTION_63_9();
    v68(v67);
    swift_release();
    type metadata accessor for INCallRecordType(0);
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_12_52();
    __chkstk_darwin(v69);
    OUTLINED_FUNCTION_49_19();
    Reducer.init(builder:)();
    Reducer.reduce.getter();
    uint64_t v70 = OUTLINED_FUNCTION_20_38();
    v71(v70);
    swift_release();
    type metadata accessor for INAudioCallTTYType(0);
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_12_52();
    __chkstk_darwin(v72);
    OUTLINED_FUNCTION_49_19();
    OUTLINED_FUNCTION_52_16();
    Reducer.init(builder:)();
    Reducer.reduce.getter();
    uint64_t v73 = OUTLINED_FUNCTION_20_38();
    v74(v73);
    uint64_t v75 = v97;
    uint64_t v76 = v98;
    uint64_t v105 = 0;
    swift_release();
    uint64_t v77 = *(void (**)(void))(v106 + 8);
    OUTLINED_FUNCTION_11_33();
    v77();
    OUTLINED_FUNCTION_11_33();
    v77();
    OUTLINED_FUNCTION_11_33();
    v77();
    OUTLINED_FUNCTION_11_33();
    v77();
    OUTLINED_FUNCTION_11_33();
    v77();
    OUTLINED_FUNCTION_11_33();
    v77();

    OUTLINED_FUNCTION_1_63();
    v78();
    OUTLINED_FUNCTION_1_63();
    v79();
    uint64_t v80 = OUTLINED_FUNCTION_27_34();
    v81(v80);
    OUTLINED_FUNCTION_10_8();
    v82();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v99, v76);
    OUTLINED_FUNCTION_11();
    v83();
    *uint64_t v85 = v110;
  }
  OUTLINED_FUNCTION_9_58();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  void (*v26)(void);
  void (*v27)(void);
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  long long v33[2];

  OUTLINED_FUNCTION_11_51();
  OUTLINED_FUNCTION_61_12(v5);
  uint64_t v29 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_30_29(v8, v29);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartVideoCallIntentExport>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_22_47(v12, v30);
  __chkstk_darwin(v13);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_37();
  [objc_allocWithZone((Class)INStartVideoCallIntent) init];
  OUTLINED_FUNCTION_48_22();
  outlined init with copy of SignalProviding(v2, (uint64_t)v33);
  uint64_t v17 = OUTLINED_FUNCTION_60_1();
  outlined init with take of AppSelectionSignalComponent(v33, v17 + 16);
  *(void *)(v17 + 56) = v0;
  uint64_t v18 = v0;
  uint64_t v19 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0);
  Transformer.init(transform:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntentExport);
  OUTLINED_FUNCTION_65_9();
  Reducer.reduce.getter();
  uint64_t v20 = OUTLINED_FUNCTION_26_32();
  v21(v20);
  swift_release();
  if (v1)
  {

    OUTLINED_FUNCTION_9_68();
    v22();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v32);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
    Transformer.init(transform:)();
    OUTLINED_FUNCTION_12_52();
    __chkstk_darwin(v23);
    OUTLINED_FUNCTION_50_18();
    OUTLINED_FUNCTION_60_13();
    Reducer.reduce.getter();
    uint64_t v24 = OUTLINED_FUNCTION_25_34();
    v25(v24);
    swift_release();
    uint64_t v26 = *(void (**)(void))(v10 + 8);
    OUTLINED_FUNCTION_9_68();
    v26();
    OUTLINED_FUNCTION_9_68();
    v26();

    OUTLINED_FUNCTION_11();
    v27();
    OUTLINED_FUNCTION_11();
    v28();
    *uint64_t v31 = v19;
  }
  OUTLINED_FUNCTION_9_58();
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  id v6 = [objc_allocWithZone((Class)INIdentifyIncomingCallerIntent) init];
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(a1, a2);
  *a3 = v6;
}

void closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v10)(void *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void v15[5];

  uint64_t v9 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  uint64_t v10 = (void (*)(void *__return_ptr, uint64_t))Transformer.transform.getter();
  v10(v15, a1);
  if (v5)
  {
    swift_release();
    return;
  }
  swift_release();
  uint64_t v11 = v15[1];
  outlined init with copy of SignalProviding(a4, (uint64_t)v15);
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    static Transformer<>.getCallIdentifierFromCallNotifications(sharedGlobals:app:)(v15, a5);
    uint64_t v13 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    if (!v13)
    {
      uint64_t v14 = 0;
      goto LABEL_7;
    }
  }
  uint64_t v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_7:
  [v9 setCallIdentifier:v14];
}

uint64_t static Transformer<>.getCallIdentifierFromCallNotifications(sharedGlobals:app:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 160))(v6);
  swift_release();
  uint64_t v7 = 0;
  if ((v4 & 1) != 0 && a2)
  {
    swift_retain();
    if (!App.isFirstParty()())
    {
      uint64_t v8 = a1[3];
      uint64_t v9 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v8);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(v8, v9);
      if (!v7)
      {
        swift_release();
        return v7;
      }
      uint64_t v10 = CurrentRequest.refId.getter();
      uint64_t v12 = v11;
      swift_release();
      if (v12)
      {
        uint64_t v13 = a1[3];
        uint64_t v14 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v13);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 160))(v23, v13, v14);
        uint64_t v15 = v24;
        uint64_t v16 = v25;
        __swift_project_boxed_opaque_existential_1(v23, v24);
        char v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16))(v10, v12, v15, v16);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        if (v17)
        {
          uint64_t v18 = a1[3];
          uint64_t v19 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v18);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 160))(v23, v18, v19);
          uint64_t v20 = v24;
          uint64_t v21 = v25;
          __swift_project_boxed_opaque_existential_1(v23, v24);
          uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 32))(v10, v12, v20, v21);
          swift_bridgeObjectRelease();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
          return v7;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_release();
    return 0;
  }
  return v7;
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t result = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v30 = a2;
    uint64_t v31 = v2;
    uint64_t v39 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v12 = v9 + 32;
    do
    {
      outlined init with copy of SignalProviding(v12, (uint64_t)v36);
      static Signpost.begin(_:)();
      uint64_t v34 = v14;
      uint64_t v35 = v13;
      int v33 = v15;
      id v16 = objc_allocWithZone((Class)INPersonHandle);
      id v32 = @nonobjc INPersonHandle.init(value:type:)(0, 0, 0);
      uint64_t v17 = type metadata accessor for PersonNameComponents();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v17);
      uint64_t v19 = v37;
      uint64_t v18 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 408))(v19, v18);
      uint64_t v22 = v21;
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v24, v23);
      uint64_t v27 = v26;
      id v28 = objc_allocWithZone((Class)INPerson);
      @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:)(v32, (uint64_t)v8, v20, v22, 0, v25, v27, 0, 0, 0);
      Signpost.OpenSignpost.end()();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
      v12 += 40;
      --v10;
    }
    while (v10);
    uint64_t v11 = v39;
    a2 = v30;
  }
  *a2 = v11;
  return result;
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:)@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  Signpost.OpenSignpost.end()();
  return swift_release();
}

void closure #1 in static Transformer<>.transformer(app:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  uint64_t v7 = *(void *)(v2 + 8);
  static Signpost.begin(_:)();
  uint64_t ObjectType = swift_getObjectType();
  char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(ObjectType, v7);
  if (FollowUpOfferType.rawValue.getter(v9) == 0xD000000000000011 && v10 == 0x800000000048DCD0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      static PhoneCallNLv3Intent.placeCall()(v0);
      goto LABEL_7;
    }
  }
  static PhoneCallNLv3Intent.placeCallBack()(v0);
LABEL_7:
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v0, enum case for Parse.NLv3IntentOnly(_:), v3);
  Input.init(parse:)();
  Signpost.OpenSignpost.end()();
  swift_release();
  OUTLINED_FUNCTION_9_58();
}

uint64_t partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(a1);
}

{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(a1);
}

{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(a1);
}

const char *keypath_get_selector_participants()
{
  return "participants";
}

void sub_344E64(uint64_t a1)
{
}

void sub_344E94(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_344EC8()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_39_8();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  OUTLINED_FUNCTION_11();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

const char *keypath_get_selector_groupConversationFilter()
{
  return "groupConversationFilter";
}

id sub_344F64(void *a1, id *a2)
{
  return [*a2 setGroupConversationFilter:*a1];
}

uint64_t _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So08INAnswereS0C_TGm5TA_0()
{
  OUTLINED_FUNCTION_31();
  return specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(v0, v1, v2, v3);
}

uint64_t partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(a1);
}

const char *keypath_get_selector_callIdentifier()
{
  return "callIdentifier";
}

const char *keypath_get_selector_audioRoute()
{
  return "audioRoute";
}

uint64_t partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)()
{
  OUTLINED_FUNCTION_31();
  return specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(v0, v1, v2, v3);
}

uint64_t partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

uint64_t partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

const char *keypath_get_selector_contacts()
{
  return "contacts";
}

void sub_345030(uint64_t a1)
{
}

void sub_345060(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t partial apply for closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

uint64_t _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo011INPreferredE8ProviderVRs_rlE11transformer13sharedGlobals3app14previousIntentACyAdE_pAGGAD06SharedN9Providing_p_0A13AppResolution0T0CSgSo8INIntentCSgtFZAgdE_pcfU_TA_0()
{
  OUTLINED_FUNCTION_31();
  return closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(v0, v1, v2, v3);
}

uint64_t partial apply for closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X8>)
{
  return closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

uint64_t partial apply for closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X8>)
{
  return closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

uint64_t partial apply for closure #6 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X8>)
{
  return closure #6 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

{
  return closure #6 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1);
}

const char *keypath_get_selector_ttyType()
{
  return "ttyType";
}

const char *keypath_get_selector_recordTypeForRedialing()
{
  return "recordTypeForRedialing";
}

id sub_3450FC(uint64_t a1)
{
  id result = [(id)OUTLINED_FUNCTION_23_38(a1) recordTypeForRedialing];
  *uint64_t v1 = result;
  return result;
}

id sub_34512C(void *a1, id *a2)
{
  return [*a2 setRecordTypeForRedialing:*a1];
}

const char *keypath_get_selector_preferredCallProvider()
{
  return "preferredCallProvider";
}

const char *keypath_get_selector_destinationType()
{
  return "destinationType";
}

void sub_345158(uint64_t a1)
{
}

void sub_345188(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So07INStarteS0C_TGm5TA_0()
{
  OUTLINED_FUNCTION_31();
  return specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(v0, v1, v2, v3);
}

uint64_t _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallCapabilityVRs_rlE11transformer13sharedGlobals14previousIntent3appACyAdE_pAGGAD06SharedN9Providing_p_So8INIntentCSg0A13AppResolution0U0CSgtFZAgdE_pcfU_TA_0()
{
  OUTLINED_FUNCTION_31();
  return closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:app:)(v0, v1, v2, v3);
}

uint64_t sub_34522C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_345268()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

const char *keypath_get_selector_callGroups()
{
  return "callGroups";
}

void sub_3452C0(uint64_t a1)
{
}

void sub_3452F0(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

const char *keypath_get_selector_callRecordFilter()
{
  return "callRecordFilter";
}

id sub_345330(void *a1, id *a2)
{
  return [*a2 setCallRecordFilter:*a1];
}

const char *keypath_get_selector_callCapability()
{
  return "callCapability";
}

id sub_345350(uint64_t a1)
{
  id result = [(id)OUTLINED_FUNCTION_23_38(a1) callCapability];
  *uint64_t v1 = result;
  return result;
}

id sub_345380(void *a1, id *a2)
{
  return [*a2 setCallCapability:*a1];
}

id sub_345394(uint64_t a1)
{
  id result = [(id)OUTLINED_FUNCTION_23_38(a1) ttyType];
  *uint64_t v1 = result;
  return result;
}

id sub_3453C4(void *a1, id *a2)
{
  return [*a2 setTTYType:*a1];
}

id sub_3453D8(uint64_t a1)
{
  id result = [(id)OUTLINED_FUNCTION_23_38(a1) preferredCallProvider];
  *uint64_t v1 = result;
  return result;
}

id sub_345408(void *a1, id *a2)
{
  return [*a2 setPreferredCallProvider:*a1];
}

id sub_34541C(uint64_t a1)
{
  id result = [(id)OUTLINED_FUNCTION_23_38(a1) destinationType];
  *uint64_t v1 = result;
  return result;
}

id sub_34544C(void *a1, id *a2)
{
  return [*a2 setDestinationType:*a1];
}

void sub_345460(uint64_t a1)
{
}

void sub_345490(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_3454C0(uint64_t a1)
{
  id result = [(id)OUTLINED_FUNCTION_23_38(a1) audioRoute];
  *uint64_t v1 = result;
  return result;
}

id sub_3454F0(void *a1, id *a2)
{
  return [*a2 setAudioRoute:*a1];
}

uint64_t sub_345504()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_34553C()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  OUTLINED_FUNCTION_39_8();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (*(void *)(v1 + 64) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_11();
  v5();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  swift_release();

  return _swift_deallocObject(v0, ((v4 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v3);
}

void partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(uint64_t a1, void **a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>)
                 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(a1, a2, v2 + v6, v2 + v7, *(void *)(v2 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8)));
}

void closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:)partial apply(uint64_t *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_4_86@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_20_38()
{
  *(void *)(v1 - 128) = *(void *)(v1 - 72);
  return v0;
}

void OUTLINED_FUNCTION_22_47(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_23_38(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_24_34()
{
  return type metadata accessor for CNContactStore(0, v0);
}

uint64_t OUTLINED_FUNCTION_26_32()
{
  *(void *)(v1 - 120) = v0;
  return *(void *)(v1 - 72);
}

uint64_t OUTLINED_FUNCTION_29_29()
{
  return *(void *)(v0 - 520);
}

void OUTLINED_FUNCTION_30_29(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_33_24()
{
  *(void *)(v1 - 128) = v0;
  return *(void *)(v1 - 72);
}

uint64_t OUTLINED_FUNCTION_38_25()
{
  return Reducer.init(builder:)();
}

uint64_t OUTLINED_FUNCTION_39_25()
{
  return *(void *)(v0 - 488);
}

uint64_t OUTLINED_FUNCTION_42_24(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((long long *)(v1 - 128), a1 + 16);
}

uint64_t OUTLINED_FUNCTION_43_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_23()
{
  return Transformer.init(transform:)();
}

uint64_t OUTLINED_FUNCTION_45_20()
{
  *(void *)(v2 - 128) = v0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_47_23()
{
  return *(void *)(v0 - 360);
}

void OUTLINED_FUNCTION_48_22()
{
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_51_17()
{
  return Reducer.init(builder:)();
}

uint64_t OUTLINED_FUNCTION_53_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_15()
{
  return *(void *)(v0 - 360);
}

uint64_t OUTLINED_FUNCTION_56_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58_17()
{
  return *(void *)(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_59_14()
{
  return Reducer.reduce.getter();
}

uint64_t OUTLINED_FUNCTION_60_13()
{
  return Reducer.init(builder:)();
}

uint64_t OUTLINED_FUNCTION_61_12(uint64_t result)
{
  *(void *)(v1 - 72) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_62_16()
{
  return *(void *)(v0 - 72);
}

uint64_t OUTLINED_FUNCTION_63_9()
{
  return v0;
}

void SearchCallHistoryTemplatingService.__allocating_init(sharedGlobals:displayTextCats:phoneCallCommonCats:searchCallHistoryCatFamily:startCallCatFamily:appInfoBuilder:labelTemplating:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  uint64_t v25 = v8;
  uint64_t v28 = v9;
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocObject();
  uint64_t v14 = *(void *)(v5 + 24);
  uint64_t v13 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v14);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v15);
  uint64_t v17 = OUTLINED_FUNCTION_1_28(v16, v25);
  v18(v17);
  uint64_t v19 = *(void *)(v3 + 24);
  uint64_t v20 = *(void **)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v19);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v21);
  uint64_t v23 = OUTLINED_FUNCTION_1_90(v22, v26);
  v24(v23);
  specialized SearchCallHistoryTemplatingService.init(sharedGlobals:displayTextCats:phoneCallCommonCats:searchCallHistoryCatFamily:startCallCatFamily:appInfoBuilder:labelTemplating:)(v11, v27, v28, v29, v30, v1, v0, v12, v14, v19, v13, v20);
  __swift_destroy_boxed_opaque_existential_1(v3);
  __swift_destroy_boxed_opaque_existential_1(v5);
  OUTLINED_FUNCTION_26_1();
}

void specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter()
{
}

uint64_t SearchCallHistoryTemplatingService.searchCallHistoryCatFamily.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t SearchCallHistoryTemplatingService.startCallCatFamily.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

void SearchCallHistoryTemplatingService.init(sharedGlobals:displayTextCats:phoneCallCommonCats:searchCallHistoryCatFamily:startCallCatFamily:appInfoBuilder:labelTemplating:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v30 = v3;
  uint64_t v31 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v26 = v8;
  uint64_t v29 = v9;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v14 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v15);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v16);
  uint64_t v18 = OUTLINED_FUNCTION_1_28(v17, v26);
  v19(v18);
  uint64_t v20 = *(void *)(v5 + 24);
  uint64_t v21 = *(void **)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v20);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v22);
  uint64_t v24 = OUTLINED_FUNCTION_1_90(v23, v27);
  v25(v24);
  specialized SearchCallHistoryTemplatingService.init(sharedGlobals:displayTextCats:phoneCallCommonCats:searchCallHistoryCatFamily:startCallCatFamily:appInfoBuilder:labelTemplating:)(v13, v11, v28, v29, v30, v2, v1, v31, v15, v20, v14, v21);
  __swift_destroy_boxed_opaque_existential_1(v5);
  __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_26_1();
}

__n128 SearchCallHistoryTemplatingService.slotTemplating(for:)@<Q0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  switch(a1)
  {
    case 9:
      OUTLINED_FUNCTION_5_67(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2, v11);
      uint64_t v13 = *(void *)((char *)v2
                      + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily);
      swift_retain();
      OUTLINED_FUNCTION_4_87();
      specialized SlotTemplating.toAnySlotTemplating()();
      outlined destroy of CallTypesSlotTemplating((uint64_t)v12);
      break;
    case 11:
      OUTLINED_FUNCTION_5_67(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2, v11);
      uint64_t v5 = *(void *)((char *)v2 + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily);
      uint64_t v6 = *(void *)((char *)v2 + direct field offset for SearchCallHistoryTemplatingService.startCallCatFamily);
      uint64_t v13 = v5;
      uint64_t v14 = v6;
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_4_87();
      specialized SlotTemplating.toAnySlotTemplating()();
      outlined destroy of RecipientSlotTemplating((uint64_t)v12);
      break;
    case 12:
      OUTLINED_FUNCTION_5_67(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2, v11);
      uint64_t v13 = *(void *)((char *)v2
                      + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily);
      swift_retain();
      OUTLINED_FUNCTION_4_87();
      specialized SlotTemplating.toAnySlotTemplating()();
      outlined destroy of UnseenSlotTemplating((uint64_t)v12);
      break;
    default:
      OUTLINED_FUNCTION_5_67(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2, v11);
      uint64_t v13 = *(void *)((char *)v2
                      + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily);
      swift_retain();
      OUTLINED_FUNCTION_4_87();
      specialized SlotTemplating.toAnySlotTemplating()();
      outlined destroy of DateCreatedSlotTemplating((uint64_t)v12);
      break;
  }
  __n128 result = *(__n128 *)v3;
  long long v8 = *(_OWORD *)(v3 + 16);
  long long v9 = *(_OWORD *)(v3 + 32);
  long long v10 = *(_OWORD *)(v3 + 48);
  *a2 = *(_OWORD *)v3;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

void SearchCallHistoryTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  long long v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v12 - 8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v53 = v13;
  uint64_t v14 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_3_1();
  uint64_t v55 = v18;
  id v19 = v9;
  uint64_t v56 = v5;
  if (App.isFirstParty()())
  {
    uint64_t v20 = static SearchCallHistoryCatParameterHelper.makePhonePersons1P(intent:intentResponse:)(v19, v7);
  }
  else
  {
    id v21 = [v19 recipient];
    if (v21)
    {
      uint64_t v22 = v21;
      unint64_t v48 = v7;
      type metadata accessor for PhonePerson(0);
      id v23 = v22;
      static Device.current.getter();
      __swift_project_boxed_opaque_existential_1(v57, v57[3]);
      dispatch thunk of DeviceState.siriLocale.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      uint64_t v24 = static PhonePerson.make(phonePerson:options:locale:)(v22, 0, v55);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v55, v14);
      if (v24)
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_46A030;
        *(void *)(v25 + 32) = v24;
        v57[0] = v25;
        specialized Array._endMutation()();
        uint64_t v20 = (void *)v57[0];
      }
      else
      {

        uint64_t v20 = _swiftEmptyArrayStorage;
      }
      unint64_t v7 = v48;
    }
    else
    {
      uint64_t v20 = _swiftEmptyArrayStorage;
    }
  }
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  type metadata accessor for PhonePersonList();
  uint64_t v26 = PhonePersonList.__allocating_init(list:)((uint64_t)v20);
  uint64_t v27 = PhoneSearchCallHistoryIntent.__allocating_init(intent:recipients:)(v19, v26);
  swift_retain();
  specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
  char v29 = v28;
  swift_release();
  uint64_t v30 = *(void **)((char *)v1 + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily);
  if (v29)
  {
    if (v7)
    {
      double v31 = (double)INSearchCallHistoryIntentResponse.callRecordsCount.getter();
      INSearchCallHistoryIntentResponse.totalCallRecordsCount.getter();
      double v33 = (double)v32;
    }
    else
    {
      double v33 = 0.0;
      double v31 = 0.0;
    }
    uint64_t v35 = *(void (**)(void, void, void, void, uint64_t, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                                                           + *v30
                                                                                           + 288);
    swift_retain();
    v35(*(void *)&v31, 0, *(void *)&v33, 0, v27, v56, v3);
    swift_release_n();
  }
  else
  {
    uint64_t v54 = v3;
    uint64_t v51 = v16;
    uint64_t v52 = v14;
    if (v7)
    {
      double v47 = (double)INSearchCallHistoryIntentResponse.callRecordsCount.getter();
      INSearchCallHistoryIntentResponse.totalCallRecordsCount.getter();
      double v46 = (double)v34;
    }
    else
    {
      double v46 = 0.0;
      double v47 = 0.0;
    }
    type metadata accessor for SirikitDeviceState();
    uint64_t v36 = (void *)((char *)v1
                   + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v1 + 40));
    outlined init with copy of SignalProviding((uint64_t)v36, (uint64_t)v57);
    uint64_t v50 = SirikitDeviceState.__allocating_init(from:)();
    swift_retain();
    Swift::Bool v49 = App.isFirstParty()();
    uint64_t v37 = (void *)((char *)v1
                   + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v1 + 48));
    uint64_t v38 = v11;
    uint64_t v39 = v37[3];
    uint64_t v40 = v37[4];
    __swift_project_boxed_opaque_existential_1(v37, v39);
    __swift_project_boxed_opaque_existential_1(v36, v36[3]);
    dispatch thunk of DeviceState.siriLocale.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 16))(v38, v55, v39, v40);
    uint64_t v42 = v41;
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v55, v52);
    if (v42)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = v53;
      SpeakableString.init(print:speak:)();
      uint64_t v44 = type metadata accessor for SpeakableString();
      __swift_storeEnumTagSinglePayload(v53, 0, 1, v44);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v45 = type metadata accessor for SpeakableString();
      uint64_t v43 = v53;
      __swift_storeEnumTagSinglePayload(v53, 1, 1, v45);
    }
    (*(void (**)(double, void, double, void, uint64_t, uint64_t, Swift::Bool, uint64_t, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs + *v30 + 256))(COERCE_DOUBLE(*(void *)&v47), 0, COERCE_DOUBLE(*(void *)&v46), 0, v50, v27, v49, v43, v56, v54);
    swift_release();
    swift_release_n();
    outlined destroy of SpeakableString?(v43);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryTemplatingService.makeGenericErrorDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                     + **(void **)(v3
                                                                   + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily)
                                                     + 192))(a2, a3);
}

void SearchCallHistoryTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  unint64_t v6 = v5;
  long long v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (char *)[v6 code];
  id v21 = *(void **)(v0 + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily);
  if (v20 == (unsigned char *)&dword_4 + 1)
  {
    uint64_t v38 = v8;
    uint64_t v39 = v4;
    uint64_t v40 = v2;
    OUTLINED_FUNCTION_2();
    id v23 = (void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v22 + 48));
    uint64_t v37 = v10;
    uint64_t v25 = v23[3];
    uint64_t v24 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v25);
    OUTLINED_FUNCTION_2();
    uint64_t v27 = (void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v26 + 40));
    uint64_t v36 = v11;
    __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    dispatch thunk of DeviceState.siriLocale.getter();
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v24 + 16))(v37, v16, v25, v24);
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v36);
    if (v29)
    {
      swift_bridgeObjectRetain();
      SpeakableString.init(print:speak:)();
      uint64_t v30 = type metadata accessor for SpeakableString();
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = type metadata accessor for SpeakableString();
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v31);
    }
    uint64_t v32 = v38;
    uint64_t v33 = v39;
    type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v34 = PhoneSearchCallHistoryIntent.__allocating_init(intent:)(v32);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                              + *v21
                                                              + 224))(v19, v34, v33, v40);
    swift_release();
    outlined destroy of SpeakableString?((uint64_t)v19);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs + *v21 + 192))(v4, v2);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryTemplatingService.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = a2;
  v12._object = a3;
  v13.int value = PhoneCallSlotNames.init(rawValue:)(v12).value;
  __n128 v14 = SearchCallHistoryTemplatingService.slotTemplating(for:)(v13.value, &v16);
  ((void (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, __n128))v16)(a1, a2, a3, a4, a5, a6, v14);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t SearchCallHistoryTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)()
{
  OUTLINED_FUNCTION_7_75();
  swift_bridgeObjectRetain();
  v2._uint64_t countAndFlagsBits = v1;
  v2._object = v0;
  v3.int value = PhoneCallSlotNames.init(rawValue:)(v2).value;
  SearchCallHistoryTemplatingService.slotTemplating(for:)(v3.value, &v7);
  uint64_t v4 = OUTLINED_FUNCTION_9_69();
  v5(v4);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t SearchCallHistoryTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)()
{
  OUTLINED_FUNCTION_7_75();
  swift_bridgeObjectRetain();
  v2._uint64_t countAndFlagsBits = v1;
  v2._object = v0;
  v3.int value = PhoneCallSlotNames.init(rawValue:)(v2).value;
  SearchCallHistoryTemplatingService.slotTemplating(for:)(v3.value, &v7);
  uint64_t v4 = OUTLINED_FUNCTION_9_69();
  v5(v4);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t SearchCallHistoryTemplatingService.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = a2;
  v18._object = a3;
  v19.int value = PhoneCallSlotNames.init(rawValue:)(v18).value;
  __n128 v20 = SearchCallHistoryTemplatingService.slotTemplating(for:)(v19.value, &v24);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                     + *v9
                                                                     + 216))(a5, a8, a9, v20);
  v25(a1, a2, a3, a4, a5, a6, a7, v21, v22);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void SearchCallHistoryTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
}

uint64_t SearchCallHistoryTemplatingService.__ivar_destroyer()
{
  swift_release();

  return swift_release();
}

uint64_t SearchCallHistoryTemplatingService.deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SearchCallHistoryTemplatingService.__deallocating_deinit()
{
  SearchCallHistoryTemplatingService.deinit();

  return swift_deallocClassInstance();
}

uint64_t specialized SearchCallHistoryTemplatingService.init(sharedGlobals:displayTextCats:phoneCallCommonCats:searchCallHistoryCatFamily:startCallCatFamily:appInfoBuilder:labelTemplating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v40 = a7;
  uint64_t v41 = a2;
  uint64_t v34 = a6;
  uint64_t v35 = a5;
  uint64_t v42 = a3;
  uint64_t v36 = a1;
  uint64_t v15 = *(void *)(a10 - 8);
  uint64_t v38 = a12;
  uint64_t v39 = a11;
  __chkstk_darwin(a1);
  uint64_t v37 = (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CATOption();
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v19 = *(void *)(a9 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  long long v24 = (char *)&v32 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))((char *)&v32 - v23, v34, a9);
  uint64_t v32 = a8;
  uint64_t v33 = a4;
  *(void *)(a8 + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily) = a4;
  *(void *)(a8 + direct field offset for SearchCallHistoryTemplatingService.startCallCatFamily) = v35;
  outlined init with copy of SignalProviding(a1, (uint64_t)v43);
  type metadata accessor for StartCallCATs();
  swift_retain();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v25 = CATWrapper.__allocating_init(options:globals:)();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v24, a9);
  uint64_t v26 = v37;
  uint64_t v27 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v37, v40, a10);
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0xD000000000000010, 0x800000000048C8D0, (uint64_t)v43, v41, v42, (uint64_t)v22, v26, v25, v32, a9, a10, v39, (uint64_t)v38, v31, v32, v33, v34, v35, v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42);
  uint64_t v29 = v28;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v27, a10);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v24, a9);
  __swift_destroy_boxed_opaque_existential_1(v36);
  return v29;
}

uint64_t type metadata accessor for SearchCallHistoryTemplatingService()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryTemplatingService;
  if (!type metadata singleton initialization cache for SearchCallHistoryTemplatingService) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for SearchCallHistoryTemplatingService()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for SearchCallHistoryTemplatingService()
{
  return type metadata accessor for SearchCallHistoryTemplatingService();
}

uint64_t outlined destroy of DateCreatedSlotTemplating(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of UnseenSlotTemplating(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of RecipientSlotTemplating(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of CallTypesSlotTemplating(uint64_t a1)
{
  return a1;
}

char *OUTLINED_FUNCTION_1_90@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_9_69()
{
  return v0;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.__allocating_init(faceTimeLink:recipients:app:sharedGlobals:startCallCATs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = (void *)(v15 - v14);
  *uint64_t v16 = a1;
  v16[1] = a2;
  v16[2] = a3;
  swift_storeEnumTagMultiPayload();
  outlined init with copy of SignalProviding(a5, (uint64_t)v19);
  uint64_t v17 = (*(uint64_t (**)(void *, uint64_t, unsigned char *, uint64_t))(v6 + 136))(v16, a4, v19, a6);
  __swift_destroy_boxed_opaque_existential_1(a5);
  return v17;
}

uint64_t type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for MessagesFaceTimeLinkCompletionFlow.State);
}

uint64_t specialized static DICodable.adaptUserDataAfterEncoder(_:)(uint64_t result)
{
  uint64_t v1 = result;
  if (one-time initialization token for codableOverrides != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v2 = static MessageFlowDirectInvocation.codableOverrides;
  uint64_t v3 = *(void *)(static MessageFlowDirectInvocation.codableOverrides + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 56;
    do
    {
      uint64_t v5 = *(void (**)(uint64_t))(v4 - 24);
      v4 += 32;
      swift_retain();
      swift_retain();
      v5(v1);
      swift_release();
      swift_release();
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t specialized DICodable.toDirectInvocation()()
{
  v16[0] = (id)0xD000000000000028;
  v16[1] = (id)0x8000000000497530;
  v1._uint64_t countAndFlagsBits = 46;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._object = (void *)0x8000000000497560;
  v2._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v2);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  type metadata accessor for MessageFlowDirectInvocation();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_10(&lazy protocol witness table cache variable for type MessageFlowDirectInvocation and conformance MessageFlowDirectInvocation, (void (*)(uint64_t))type metadata accessor for MessageFlowDirectInvocation);
  uint64_t v3 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v0)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v6 = v3;
    unint64_t v7 = v4;
    swift_release();
    long long v8 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    v16[0] = 0;
    id v10 = [v8 propertyListWithData:isa options:0 format:0 error:v16];

    if (v10)
    {
      id v11 = v16[0];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
      if (swift_dynamicCast()) {
        uint64_t v12 = v14;
      }
      else {
        uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
      }
      uint64_t v15 = v12;
      specialized static DICodable.adaptUserDataAfterEncoder(_:)((uint64_t)&v15);
      outlined consume of Data._Representation(v6, v7);
      return Parse.DirectInvocation.init(identifier:userData:)();
    }
    else
    {
      id v13 = v16[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      outlined consume of Data._Representation(v6, v7);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t key path setter for MessagesFaceTimeLinkCompletionFlow.state : MessagesFaceTimeLinkCompletionFlow(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of MessagesFaceTimeLinkCompletionFlow.State(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
  swift_beginAccess();
  outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t MessagesFaceTimeLinkCompletionFlow.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
  swift_beginAccess();
  return outlined init with copy of MessagesFaceTimeLinkCompletionFlow.State(v3, a1);
}

uint64_t outlined init with copy of MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.__allocating_init(state:app:sharedGlobals:startCallCATs:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  MessagesFaceTimeLinkCompletionFlow.init(state:app:sharedGlobals:startCallCATs:)(a1, a2, a3, a4);
  return v8;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.init(state:app:sharedGlobals:startCallCATs:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(a1, v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state);
  *(void *)(v4 + 16) = a2;
  outlined init with take of AppSelectionSignalComponent(a3, v4 + 24);
  *(void *)(v4 + 64) = a4;
  return v4;
}

uint64_t outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5 - v4;
  type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9 - v8;
  (*(void (**)(void))(*(void *)v1 + 112))();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    OUTLINED_FUNCTION_15();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(a1, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "#MessagesFaceTimeLinkCompletionFlow Encountered invalid exitValue", v16, 2u);
      OUTLINED_FUNCTION_6();
    }

    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    uint64_t v17 = swift_allocError();
    PhoneError.logged()(v18);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6(v6, (void (*)(void))type metadata accessor for PhoneError);
    *(void *)a1 = v17;
    *(unsigned char *)(a1 + 8) = 0;
    uint64_t v19 = enum case for RCHFlowResult.error<A, B>(_:);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    OUTLINED_FUNCTION_15();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 104))(a1, v19);
  }
}

uint64_t MessagesFaceTimeLinkCompletionFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[16] = v2;
  v1[17] = v0;
  uint64_t v3 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v3);
  v1[18] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  v1[19] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  return _swift_task_switch(MessagesFaceTimeLinkCompletionFlow.execute(), 0, 0);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(MessagesFaceTimeLinkCompletionFlow.execute(), 0, 0);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

void MessagesFaceTimeLinkCompletionFlow.execute()()
{
  (*(void (**)(void))(**(void **)(v0 + 136) + 112))();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = *(void *)(v0 + 176);
    static ExecuteResponse.complete()();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6(v1, (void (*)(void))type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 176);
    uint64_t v3 = *(void **)(v0 + 136);
    *(void *)(v0 + 184) = *(void *)(v2 + 8);
    *(void *)(v0 + 192) = *(void *)(v2 + 16);
    uint64_t v4 = (uint64_t)(v3 + 3);
    uint64_t v5 = v3[6];
    uint64_t v6 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    DeviceState.isSendingFaceTimeLinkDeviceUnsupported(app:)();
    char v8 = v7;
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    if ((v8 & 1) == 0)
    {
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v27;
      *uint64_t v27 = v0;
      v27[1] = MessagesFaceTimeLinkCompletionFlow.execute();
      OUTLINED_FUNCTION_39();
      __asm { BRAA            X5, X16 }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "#MessagesFaceTimeLinkCompletionFlow sending FaceTime Link is unsupported for idiom", v12, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v13 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 136);

    outlined init with copy of SignalProviding(v4, v0 + 56);
    type metadata accessor for StartCallCATs();
    OUTLINED_FUNCTION_4_64();
    uint64_t v15 = CATWrapper.__allocating_init(options:globals:)();
    type metadata accessor for StartCallCATsSimple();
    OUTLINED_FUNCTION_4_64();
    uint64_t v16 = CATWrapperSimple.__allocating_init(options:globals:)();
    type metadata accessor for PhoneCallDisplayTextCATsSimple();
    OUTLINED_FUNCTION_4_64();
    uint64_t v17 = CATWrapperSimple.__allocating_init(options:globals:)();
    type metadata accessor for UnsupportedFlowCATs();
    OUTLINED_FUNCTION_4_64();
    uint64_t v18 = CATWrapper.__allocating_init(options:globals:)();
    type metadata accessor for UnsupportedFaceTimeOutputProvider();
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)(8, (long long *)(v0 + 56), v15, v16, v17, v18, 0, 0, 0, 0, v19);
    uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 144))(v20);
    uint64_t v22 = enum case for RCHFlowResult.cancelled<A, B>(_:);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    OUTLINED_FUNCTION_15();
    (*(void (**)(uint64_t, uint64_t))(v23 + 104))(v14, v22);
    swift_storeEnumTagMultiPayload();
    outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v14, v13);
    uint64_t v24 = v30 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
    OUTLINED_FUNCTION_0_38();
    outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(v13, v24);
    swift_endAccess();
    *(void *)(v0 + 120) = v21;
    type metadata accessor for SimpleOutputFlowAsync();
    static ExecuteResponse.complete<A>(next:)();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_39();
  __asm { BRAA            X1, X16 }
}

uint64_t MessagesFaceTimeLinkCompletionFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[18] = v2;
  v1[19] = v0;
  v1[16] = v3;
  v1[17] = v4;
  v1[15] = v5;
  uint64_t v6 = type metadata accessor for PhoneError();
  v1[20] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[21] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  v1[22] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse.DirectInvocation?);
  OUTLINED_FUNCTION_11_0(v8);
  v1[25] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for Parse.DirectInvocation();
  v1[26] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[27] = v10;
  v1[28] = OUTLINED_FUNCTION_35();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_11_0(v11);
  v1[29] = OUTLINED_FUNCTION_35();
  uint64_t v12 = type metadata accessor for URL();
  v1[30] = v12;
  OUTLINED_FUNCTION_19_0(v12);
  v1[31] = v13;
  v1[32] = OUTLINED_FUNCTION_35();
  return _swift_task_switch(MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:), 0, 0);
}

void MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[17];
  if (v4)
  {
    uint64_t v6 = v0[16];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[14] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v2, v3, "#MessagesFaceTimeLinkCompletionFlow URL : %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v8 = v0[17];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v0[16] & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    uint64_t v10 = v0[29];
    uint64_t v11 = v0[30];
    URL.init(string:)();
    if (__swift_getEnumTagSinglePayload(v10, 1, v11) == 1)
    {
      uint64_t v12 = v0[29];
      uint64_t v13 = (uint64_t *)&demangling cache variable for type metadata for URL?;
    }
    else
    {
      uint64_t v14 = v0[32];
      uint64_t v16 = v0[25];
      uint64_t v15 = v0[26];
      uint64_t v17 = v0[18];
      (*(void (**)(uint64_t, void, void))(v0[31] + 32))(v14, v0[29], v0[30]);
      MessagesFaceTimeLinkCompletionFlow.constructDirectInvocation(url:recipients:)(v14, v17, v16);
      if (__swift_getEnumTagSinglePayload(v16, 1, v15) != 1)
      {
        uint64_t v33 = v0[28];
        uint64_t v34 = (void *)v0[19];
        (*(void (**)(uint64_t, void, void))(v0[27] + 32))(v33, v0[25], v0[26]);
        uint64_t v35 = v34[6];
        uint64_t v36 = v34[7];
        __swift_project_boxed_opaque_existential_1(v34 + 3, v35);
        (*(void (**)(uint64_t, uint64_t))(v36 + 48))(v35, v36);
        uint64_t v37 = v0[5];
        uint64_t v38 = v0[6];
        __swift_project_boxed_opaque_existential_1(v0 + 2, v37);
        uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 8))(v33, v37, v38);
        if (v39)
        {
          uint64_t v40 = v39;
          uint64_t v41 = v0[31];
          uint64_t v62 = v0[30];
          uint64_t v64 = v0[32];
          uint64_t v42 = v0[27];
          uint64_t v43 = v0[28];
          uint64_t v44 = v0[26];
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
          v0[13] = v40;
          type metadata accessor for AnyFlow();
          swift_retain();
          static ExecuteResponse.ongoing<A>(next:childCompletion:)();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
          (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v64, v62);
          swift_release();
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
          uint64_t v45 = Logger.logObject.getter();
          os_log_type_t v46 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v45, v46))
          {
            double v47 = (uint8_t *)OUTLINED_FUNCTION_7_2();
            *(_WORD *)double v47 = 0;
            _os_log_impl(&dword_0, v45, v46, "#MessagesFaceTimeLinkCompletionFlow Phone flow not found for direct invocation", v47, 2u);
            OUTLINED_FUNCTION_6();
          }
          uint64_t v48 = v0[31];
          uint64_t v61 = v0[30];
          uint64_t v63 = v0[32];
          uint64_t v49 = v0[27];
          uint64_t v59 = v0[26];
          uint64_t v60 = v0[28];
          uint64_t v50 = v0[23];
          uint64_t v51 = v0[24];
          uint64_t v52 = v0[21];
          uint64_t v53 = v0[19];

          swift_storeEnumTagMultiPayload();
          _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
          uint64_t v54 = swift_allocError();
          PhoneError.logged()(v55);
          _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6(v52, (void (*)(void))type metadata accessor for PhoneError);
          *(void *)uint64_t v51 = v54;
          *(unsigned char *)(v51 + 8) = 0;
          uint64_t v56 = enum case for RCHFlowResult.error<A, B>(_:);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
          OUTLINED_FUNCTION_15();
          (*(void (**)(uint64_t, uint64_t))(v57 + 104))(v51, v56);
          swift_storeEnumTagMultiPayload();
          outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v51, v50);
          uint64_t v58 = v53 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
          OUTLINED_FUNCTION_0_38();
          outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(v50, v58);
          swift_endAccess();
          static ExecuteResponse.complete()();
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v60, v59);
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v63, v61);
        }
LABEL_17:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_47_0();
        OUTLINED_FUNCTION_39();
        __asm { BRAA            X1, X16 }
      }
      uint64_t v18 = v0[25];
      (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
      uint64_t v13 = (uint64_t *)&demangling cache variable for type metadata for Parse.DirectInvocation?;
      uint64_t v12 = v18;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v12, v13);
  }
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "#MessagesFaceTimeLinkCompletionFlow Error generating direct invocation. Exiting", v21, 2u);
    OUTLINED_FUNCTION_6();
  }
  uint64_t v22 = v0[23];
  uint64_t v23 = v0[24];
  uint64_t v24 = v0[21];
  uint64_t v25 = v0[19];

  swift_storeEnumTagMultiPayload();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
  uint64_t v26 = swift_allocError();
  PhoneError.logged()(v27);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6(v24, (void (*)(void))type metadata accessor for PhoneError);
  *(void *)uint64_t v23 = v26;
  *(unsigned char *)(v23 + 8) = 0;
  uint64_t v28 = enum case for RCHFlowResult.error<A, B>(_:);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v29 + 104))(v23, v28);
  swift_storeEnumTagMultiPayload();
  outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v23, v22);
  uint64_t v30 = v25 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
  OUTLINED_FUNCTION_0_38();
  outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(v22, v30);
  swift_endAccess();
  static ExecuteResponse.complete()();
  goto LABEL_17;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.flowOnCompletion(exitValue:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v57 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  OUTLINED_FUNCTION_15();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v56 = (char *)&v49 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v49 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v49 - v22;
  outlined init with copy of Any(a1, (uint64_t)v59);
  if (swift_dynamicCast())
  {
    uint64_t v54 = v2;
    uint64_t v55 = v7;
    __swift_storeEnumTagSinglePayload(v13, 0, 1, v14);
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
    v53(v23, v13, v14);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v25(v21, v23, v14);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      int v52 = v28;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v51 = swift_slowAlloc();
      v59[0] = v51;
      uint64_t v49 = v30;
      os_log_t v50 = v26;
      *(_DWORD *)uint64_t v30 = 136315138;
      v25(v18, v21, v14);
      uint64_t v31 = String.init<A>(describing:)();
      uint64_t v58 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v33 = OUTLINED_FUNCTION_11_60();
      v34(v33);
      os_log_t v35 = v50;
      _os_log_impl(&dword_0, v50, (os_log_type_t)v52, "#MessagesFaceTimeLinkCompletionFlow received exitValue: %s", v49, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      uint64_t v43 = OUTLINED_FUNCTION_11_60();
      v44(v43);
    }
    uint64_t v45 = v56;
    v53(v56, (uint64_t)v23, v14);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = (uint64_t)v45;
    uint64_t v47 = (uint64_t)v55;
    outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v46, (uint64_t)v55);
    uint64_t v41 = v54 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
    OUTLINED_FUNCTION_0_38();
    uint64_t v42 = v47;
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v13, &demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_0, v37, v38, "#MessagesFaceTimeLinkCompletionFlow Invalid user exitValue", v39, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v40 = (uint64_t)v56;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v56, enum case for RCHFlowResult.cancelled<A, B>(_:), v14);
    swift_storeEnumTagMultiPayload();
    outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v40, (uint64_t)v7);
    uint64_t v41 = v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
    OUTLINED_FUNCTION_0_38();
    uint64_t v42 = (uint64_t)v7;
  }
  outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(v42, v41);
  return swift_endAccess();
}

uint64_t MessagesFaceTimeLinkCompletionFlow.constructDirectInvocation(url:recipients:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for MessageFlowDirectInvocation();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = (void *)(v10 - v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14 - v13;
  (*(void (**)(void))(class metadata base offset for StartCallCATs + **(void **)(v3 + 64) + 1272))();
  uint64_t v16 = Result<>.firstPrint.getter();
  uint64_t v18 = v17;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (v18)
  {
    uint64_t v19 = (char *)v11 + *(int *)(v7 + 24);
    type metadata accessor for URL();
    OUTLINED_FUNCTION_15();
    (*(void (**)(char *, uint64_t))(v20 + 16))(v19, a1);
    *uint64_t v11 = a2;
    v11[1] = v16;
    long long v11[2] = v18;
    swift_bridgeObjectRetain();
    specialized DICodable.toDirectInvocation()();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6((uint64_t)v11, (void (*)(void))type metadata accessor for MessageFlowDirectInvocation);
    uint64_t v25 = 0;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "#MessagesFaceTimeLinkCompletionFlow failed to generate join my facetime message", v24, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v25 = 1;
  }
  uint64_t v26 = type metadata accessor for Parse.DirectInvocation();
  return __swift_storeEnumTagSinglePayload(a3, v25, 1, v26);
}

uint64_t MessagesFaceTimeLinkCompletionFlow.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state, (void (*)(void))type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State);
  return v0;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.__deallocating_deinit()
{
  MessagesFaceTimeLinkCompletionFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance MessagesFaceTimeLinkCompletionFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance MessagesFaceTimeLinkCompletionFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t protocol witness for Flow.execute() in conformance MessagesFaceTimeLinkCompletionFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 160) + **(int **)(**(void **)v1 + 160));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance MessagesFaceTimeLinkCompletionFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MessagesFaceTimeLinkCompletionFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for MessagesFaceTimeLinkCompletionFlow);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for implicit closure #3 in implicit closure #2 in MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_349A08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 112))();
}

uint64_t ObjC metadata update function for MessagesFaceTimeLinkCompletionFlow()
{
  return type metadata accessor for MessagesFaceTimeLinkCompletionFlow(0);
}

uint64_t type metadata completion function for MessagesFaceTimeLinkCompletionFlow()
{
  uint64_t result = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagesFaceTimeLinkCompletionFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void *initializeWithCopy for MessagesFaceTimeLinkCompletionFlow.State(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for MessagesFaceTimeLinkCompletionFlow.State(void *a1, void *a2)
{
  if (a1 != a2)
  {
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6((uint64_t)a1, (void (*)(void))type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for MessagesFaceTimeLinkCompletionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for MessagesFaceTimeLinkCompletionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_6((uint64_t)a1, (void (*)(void))type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void type metadata completion function for MessagesFaceTimeLinkCompletionFlow.State()
{
  type metadata accessor for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

void type metadata accessor for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>()
{
  if (!lazy cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>)
  {
    type metadata accessor for CNContactStore(255, &lazy cache variable for type metadata for INSendMessageIntent);
    type metadata accessor for CNContactStore(255, &lazy cache variable for type metadata for INSendMessageIntentResponse);
    unint64_t v0 = type metadata accessor for RCHFlowResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    }
  }
}

uint64_t OUTLINED_FUNCTION_11_60()
{
  return v0;
}

void *CommonDirectAction.contactPickerId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.contactPickerId;
}

void *CommonDirectAction.disambiguationSelectionIndexId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.disambiguationSelectionIndexId;
}

id CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(void *a1)
{
  uint64_t v2 = self;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = (void *)DeviceState.asInvocationContext.getter();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SKIDirectInvocationPayload);
  CommonDirectAction.identifier.getter();
  id v4 = SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v5 = CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v5);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v7, v4);
  id v8 = [v2 runSiriKitExecutorCommandWithContext:v3 payload:v4];

  return v8;
}

void static CommonDirectAction.from(_:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = Parse.DirectInvocation.identifier.getter();
  uint64_t v11 = v10;
  if (v9 == 0xD000000000000029)
  {
    OUTLINED_FUNCTION_2_105();
    if (v12) {
      goto LABEL_6;
    }
  }
  if (OUTLINED_FUNCTION_0_62()) {
    goto LABEL_6;
  }
  if (v9 == 0xD000000000000028)
  {
    OUTLINED_FUNCTION_2_105();
    if (v12) {
      goto LABEL_6;
    }
  }
  if (OUTLINED_FUNCTION_0_62()) {
    goto LABEL_6;
  }
  if (v9 == 0xD000000000000033 && (OUTLINED_FUNCTION_2_105(), v12) || (OUTLINED_FUNCTION_0_62() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = Parse.DirectInvocation.userData.getter();
    static CommonDirectAction.parseContactPicker(userData:)(v18, a2);
LABEL_28:
    OUTLINED_FUNCTION_26_1();
    swift_bridgeObjectRelease();
    return;
  }
  if (v9 == 0xD000000000000043 && (OUTLINED_FUNCTION_2_105(), v12)
    || (OUTLINED_FUNCTION_0_62() & 1) != 0
    || v9 == 0xD000000000000042 && (OUTLINED_FUNCTION_2_105(), v12)
    || (OUTLINED_FUNCTION_0_62() & 1) != 0
    || v9 == 0xD000000000000040 && (OUTLINED_FUNCTION_2_105(), v12)
    || (OUTLINED_FUNCTION_0_62() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = Parse.DirectInvocation.userData.getter();
    static CommonDirectAction.parseDisambiguationSelection(userData:)(v19, a2);
    goto LABEL_28;
  }
  if (v9 == 0xD000000000000039 && (OUTLINED_FUNCTION_2_105(), v12) || (OUTLINED_FUNCTION_0_62() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = Parse.DirectInvocation.userData.getter();
    static CommonDirectAction.parseUserDialogAct(userData:)(v21, (uint64_t)a2);
    goto LABEL_28;
  }
  if (v9 == 0xD00000000000002CLL && (OUTLINED_FUNCTION_2_105(), v12)
    || (OUTLINED_FUNCTION_0_62() & 1) != 0
    || v9 == 0xD00000000000002ALL && v11 == 0x800000000049B340
    || (OUTLINED_FUNCTION_8_81() & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    type metadata accessor for CommonDirectAction();
    OUTLINED_FUNCTION_6_78();
LABEL_7:
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_26_1();
    __swift_storeEnumTagSinglePayload(v13, v14, v15, v16);
    return;
  }
  if (v9 == 0xD00000000000002ALL && v11 == 0x800000000049B370)
  {
    swift_bridgeObjectRelease();
LABEL_56:
    type metadata accessor for CommonDirectAction();
    OUTLINED_FUNCTION_6_78();
    goto LABEL_7;
  }
  char v22 = OUTLINED_FUNCTION_8_81();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_56;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a1, v5);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v27 = Parse.DirectInvocation.identifier.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v29 = OUTLINED_FUNCTION_13_48();
    v30(v29);
    _os_log_impl(&dword_0, v24, v25, "unsupported direct invocation identifier: %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v31 = OUTLINED_FUNCTION_13_48();
    v32(v31);
  }

  uint64_t v33 = type metadata accessor for CommonDirectAction();
  __swift_storeEnumTagSinglePayload((uint64_t)a2, 1, 1, v33);
  OUTLINED_FUNCTION_26_1();
}

id CommonDirectAction.toStartLocalRequest(deviceState:)(void *a1)
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SKIDirectInvocationPayload);
  CommonDirectAction.identifier.getter();
  id v2 = SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v3 = CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v3);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v5, v2);
  id v6 = SKIDirectInvocationPayload.toStartLocalRequest(deviceState:)(a1);

  return v6;
}

id SKIDirectInvocationPayload.__allocating_init(identifier:)()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithIdentifier:v1];

  return v2;
}

id CommonDirectAction.toDirectInvocationPayload()()
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SKIDirectInvocationPayload);
  CommonDirectAction.identifier.getter();
  id v0 = SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v1 = CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v1);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v3, v0);
  return v0;
}

void *CommonDirectAction.yesConfirmationId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.yesConfirmationId;
}

void *CommonDirectAction.noConfirmationId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.noConfirmationId;
}

unint64_t static CommonDirectAction.yesConfirmationId.getter()
{
  return OUTLINED_FUNCTION_10_2(41);
}

unint64_t static CommonDirectAction.noConfirmationId.getter()
{
  return OUTLINED_FUNCTION_10_2(40);
}

unint64_t static CommonDirectAction.contactPickerId.getter()
{
  return OUTLINED_FUNCTION_10_2(51);
}

void *CommonDirectAction.disambiguationSelectionPersonId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.disambiguationSelectionPersonId;
}

unint64_t static CommonDirectAction.disambiguationSelectionPersonId.getter()
{
  return OUTLINED_FUNCTION_10_2(67);
}

unint64_t static CommonDirectAction.disambiguationSelectionIndexId.getter()
{
  return OUTLINED_FUNCTION_10_2(66);
}

void *CommonDirectAction.disambiguationSelectionAppId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.disambiguationSelectionAppId;
}

unint64_t static CommonDirectAction.disambiguationSelectionAppId.getter()
{
  return OUTLINED_FUNCTION_10_2(64);
}

void *CommonDirectAction.selectUserDialogAct.unsafeMutableAddressor()
{
  return &static CommonDirectAction.selectUserDialogAct;
}

unint64_t static CommonDirectAction.selectUserDialogAct.getter()
{
  return OUTLINED_FUNCTION_10_2(57);
}

void *CommonDirectAction.readAgainId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.readAgainId;
}

unint64_t static CommonDirectAction.readAgainId.getter()
{
  return OUTLINED_FUNCTION_10_2(44);
}

void *CommonDirectAction.nextId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.nextId;
}

unint64_t static CommonDirectAction.nextId.getter()
{
  return OUTLINED_FUNCTION_10_2(42);
}

void *CommonDirectAction.callId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.callId;
}

unint64_t static CommonDirectAction.callId.getter()
{
  return OUTLINED_FUNCTION_10_2(42);
}

const char *CommonDirectAction.disambiguationSelectionPersonDataKey.unsafeMutableAddressor()
{
  return "personData";
}

uint64_t static CommonDirectAction.disambiguationSelectionPersonDataKey.getter()
{
  return 0x61446E6F73726570;
}

const char *CommonDirectAction.disambiguationSelectionIndexKey.unsafeMutableAddressor()
{
  return "index";
}

uint64_t static CommonDirectAction.disambiguationSelectionIndexKey.getter()
{
  return 0x7865646E69;
}

const char *CommonDirectAction.disambiguationSelectionAppIdKey.unsafeMutableAddressor()
{
  return "appId";
}

uint64_t static CommonDirectAction.disambiguationSelectionAppIdKey.getter()
{
  return 0x6449707061;
}

const char *CommonDirectAction.contactPickerContactIdKey.unsafeMutableAddressor()
{
  return "contactId";
}

uint64_t static CommonDirectAction.contactPickerContactIdKey.getter()
{
  return 0x49746361746E6F63;
}

const char *CommonDirectAction.userDialogActKey.unsafeMutableAddressor()
{
  return "userDialogAct";
}

uint64_t static CommonDirectAction.userDialogActKey.getter()
{
  return 0x6C61694472657375;
}

void *CommonDirectAction.getContact.unsafeMutableAddressor()
{
  return &static CommonDirectAction.getContact;
}

unint64_t static CommonDirectAction.getContact.getter()
{
  return OUTLINED_FUNCTION_10_2(34);
}

uint64_t static CommonDirectAction.parseContactPicker(userData:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ContactResolutionResponseHandler.DirectInvocationValue();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for ContactResolutionResponseHandler();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  ContactResolutionResponseHandler.init(userData:)();
  ContactResolutionResponseHandler.directInvocationValue.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4) == enum case for ContactResolutionResponseHandler.DirectInvocationValue.contactId(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v12 = *v7;
    uint64_t v13 = v7[1];
    swift_bridgeObjectRelease();
    *a2 = v12;
    a2[1] = v13;
    uint64_t v14 = type metadata accessor for CommonDirectAction();
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = (uint64_t)a2;
    uint64_t v16 = 0;
    uint64_t v17 = v14;
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      if (a1)
      {
        uint64_t v22 = Dictionary.description.getter();
        unint64_t v24 = v23;
      }
      else
      {
        unint64_t v24 = 0xE300000000000000;
        uint64_t v22 = 7104878;
      }
      uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v19, v20, "#CommonDirectAction invalid user data for contactPicker: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v17 = type metadata accessor for CommonDirectAction();
    uint64_t v15 = (uint64_t)a2;
    uint64_t v16 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v15, v16, 1, v17);
}

uint64_t static CommonDirectAction.parseUserDialogAct(userData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_6;
  }
  specialized Dictionary.subscript.getter(0x6C61694472657375, 0xED0000746341676FLL, a1, &v23);
  if (!*((void *)&v24 + 1))
  {
LABEL_6:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v23, &demangling cache variable for type metadata for Any?);
    goto LABEL_7;
  }
  if (swift_dynamicCast())
  {
    uint64_t v25 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
    BinaryDecodingOptions.init()();
    lazy protocol witness table accessor for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct();
    Message.init(serializedData:extensions:partial:options:)();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
    uint64_t v17 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32);
    v17(v11, v7, v8);
    v17((unsigned char *)a2, v11, v8);
    uint64_t v18 = type metadata accessor for CommonDirectAction();
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a2;
    uint64_t v20 = 0;
    uint64_t v21 = v18;
    return __swift_storeEnumTagSinglePayload(v19, v20, 1, v21);
  }
LABEL_7:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x6C61694472657375, 0xED0000746341676FLL, (uint64_t *)&v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v13, v14, "#CommonDirectAction invalid user data for %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v21 = type metadata accessor for CommonDirectAction();
  uint64_t v19 = a2;
  uint64_t v20 = 1;
  return __swift_storeEnumTagSinglePayload(v19, v20, 1, v21);
}

uint64_t static CommonDirectAction.parseDisambiguationSelection(userData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.getter(0x61446E6F73726570, 0xEA00000000006174, a1, v31);
    if (v32)
    {
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        static CommonDirectAction.parseDisambiguationSelectionPerson(personData:)(v29, v30, a2);
        return outlined consume of Data._Representation(v29, v30);
      }
    }
    else
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v31, &demangling cache variable for type metadata for Any?);
    }
    specialized Dictionary.subscript.getter(0x7865646E69, 0xE500000000000000, a1, v31);
    if (v32)
    {
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v13 = 0;
          _os_log_impl(&dword_0, v11, v12, "#CommonDirectAction parsed index", v13, 2u);
          swift_slowDealloc();
        }

        *a2 = v29;
        uint64_t v14 = type metadata accessor for CommonDirectAction();
LABEL_28:
        swift_storeEnumTagMultiPayload();
        uint64_t v19 = (uint64_t)a2;
        uint64_t v20 = 0;
        uint64_t v21 = v14;
        return __swift_storeEnumTagSinglePayload(v19, v20, 1, v21);
      }
    }
    else
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v31, &demangling cache variable for type metadata for Any?);
    }
    specialized Dictionary.subscript.getter(0x6449707061, 0xE500000000000000, a1, v31);
    if (v32)
    {
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl(&dword_0, v16, v17, "#CommonDirectAction parsed appId", v18, 2u);
          swift_slowDealloc();
        }

        *a2 = v29;
        a2[1] = v30;
        uint64_t v14 = type metadata accessor for CommonDirectAction();
        goto LABEL_28;
      }
    }
    else
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v31, &demangling cache variable for type metadata for Any?);
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain();
    long long v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v31[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v26 = Dictionary.description.getter();
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v23, v24, "Invalid user data for disambiguationSelection: %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = type metadata accessor for CommonDirectAction();
    uint64_t v19 = (uint64_t)a2;
    uint64_t v20 = 1;
    return __swift_storeEnumTagSinglePayload(v19, v20, 1, v21);
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "Nil user data for disambiguationSelection", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t v9 = type metadata accessor for CommonDirectAction();

  return __swift_storeEnumTagSinglePayload((uint64_t)a2, 1, 1, v9);
}

unint64_t CommonDirectAction.identifier.getter()
{
  type metadata accessor for CommonDirectAction();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = (id *)(v3 - v2);
  outlined init with copy of CommonDirectAction(v0, v3 - v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0xD000000000000029;
  switch(EnumCaseMultiPayload)
  {
    case 1:

      unint64_t result = 0xD000000000000043;
      break;
    case 2:
      unint64_t result = 0xD000000000000042;
      break;
    case 3:
      swift_bridgeObjectRelease();
      unint64_t result = 0xD000000000000040;
      break;
    case 4:
      type metadata accessor for Siri_Nlu_External_UserDialogAct();
      OUTLINED_FUNCTION_15();
      (*(void (**)(id *))(v7 + 8))(v4);
      unint64_t result = 0xD000000000000039;
      break;
    case 5:
      swift_bridgeObjectRelease();
      unint64_t result = 0xD000000000000022;
      break;
    case 6:
      return result;
    case 7:
      unint64_t result = 0xD000000000000028;
      break;
    case 8:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 9:
    case 10:
      unint64_t result = 0xD00000000000002ALL;
      break;
    default:
      swift_bridgeObjectRelease();
      unint64_t result = 0xD000000000000033;
      break;
  }
  return result;
}

uint64_t CommonDirectAction.userData.getter()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for CommonDirectAction();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9 - v8;
  outlined init with copy of CommonDirectAction(v2, v9 - v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      os_log_type_t v17 = *(void **)v10;
      uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
      uint64_t v28 = v12;
      id v18 = (id)INIntentSlotValueTransformToContact();
      if (!v18)
      {
        __break(1u);
        JUMPOUT(0x34BEC8);
      }
      uint64_t v19 = outlined bridged method (ob) of @objc PBCodable.data.getter(v18);
      if (v20 >> 60 != 15)
      {
        uint64_t v23 = v19;
        unint64_t v24 = v20;
        outlined copy of Data._Representation(v19, v20);
        uint64_t v25 = OUTLINED_FUNCTION_12_53();
        specialized Dictionary.subscript.setter(v25, 0x61446E6F73726570, 0xEA00000000006174);

        outlined consume of Data?(v23, v24);
        return v28;
      }

      return v12;
    case 2u:
      uint64_t v28 = Dictionary.init(dictionaryLiteral:)();
      uint64_t v13 = OUTLINED_FUNCTION_12_53();
      uint64_t v14 = 0x7865646E69;
      goto LABEL_6;
    case 3u:
      uint64_t v28 = Dictionary.init(dictionaryLiteral:)();
      uint64_t v13 = OUTLINED_FUNCTION_12_53();
      uint64_t v14 = 0x6449707061;
LABEL_6:
      uint64_t v15 = 0xE500000000000000;
      goto LABEL_14;
    case 4u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v10, v3);
      uint64_t v28 = Dictionary.init(dictionaryLiteral:)();
      lazy protocol witness table accessor for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct();
      Message.serializedData(partial:)();
      uint64_t v26 = OUTLINED_FUNCTION_12_53();
      specialized Dictionary.subscript.setter(v26, 0x6C61694472657375, 0xED0000746341676FLL);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
      return v28;
    case 5u:
      uint64_t v21 = *(void *)(v10 + 8);
      uint64_t v11 = Dictionary.init(dictionaryLiteral:)();
      uint64_t v28 = v11;
      if (!v21) {
        return v11;
      }
      uint64_t v13 = OUTLINED_FUNCTION_9_70();
      uint64_t v14 = v22 & 0xFFFFFFFFFFFFLL | 0x4E74000000000000;
      uint64_t v15 = 0xEB00000000656D61;
      goto LABEL_14;
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
      return Dictionary.init(dictionaryLiteral:)();
    default:
      uint64_t v28 = Dictionary.init(dictionaryLiteral:)();
      uint64_t v13 = OUTLINED_FUNCTION_9_70();
      uint64_t v14 = v16 & 0xFFFFFFFFFFFFLL | 0x4974000000000000;
      uint64_t v15 = 0xE900000000000064;
LABEL_14:
      specialized Dictionary.subscript.setter(v13, v14, v15);
      return v28;
  }
}

uint64_t CommonDirectAction.toDireactInvocation()()
{
  CommonDirectAction.identifier.getter();
  CommonDirectAction.userData.getter();

  return Parse.DirectInvocation.init(identifier:userData:)();
}

uint64_t static CommonDirectAction.parseDisambiguationSelectionPerson(personData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  objc_allocWithZone((Class)_INPBContact);
  outlined copy of Data._Representation(a1, a2);
  uint64_t v6 = @nonobjc _INPBContact.init(data:)(a1, a2);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = (id)INIntentSlotValueTransformFromContact();
    if (v8)
    {
      id v9 = v8;
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_0, v11, v12, "#CommonDirectAction parsed personData", v13, 2u);
        swift_slowDealloc();
        uint64_t v14 = v7;
      }
      else
      {
        uint64_t v14 = v11;
        uint64_t v11 = v7;
      }

      *a3 = v9;
      uint64_t v22 = type metadata accessor for CommonDirectAction();
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = (uint64_t)a3;
      uint64_t v21 = 0;
      uint64_t v19 = v22;
      goto LABEL_15;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "Couldn't deserialized INPerson from data.", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = type metadata accessor for CommonDirectAction();
  uint64_t v20 = (uint64_t)a3;
  uint64_t v21 = 1;
LABEL_15:

  return __swift_storeEnumTagSinglePayload(v20, v21, 1, v19);
}

void static CommonDirectAction.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_0_0();
  uint64_t v48 = v4;
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v47 = v6 - v5;
  type metadata accessor for CommonDirectAction();
  OUTLINED_FUNCTION_15();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (void **)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (void **)((char *)&v47 - v15);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (void **)((char *)&v47 - v21);
  __chkstk_darwin(v20);
  unint64_t v24 = (void **)((char *)&v47 - v23);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CommonDirectAction, CommonDirectAction));
  __chkstk_darwin(v25 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v28 = v27 - v26;
  unint64_t v30 = (void **)(v27 - v26 + *(int *)(v29 + 56));
  outlined init with copy of CommonDirectAction(a1, v27 - v26);
  outlined init with copy of CommonDirectAction(v50, (uint64_t)v30);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      outlined init with copy of CommonDirectAction(v28, (uint64_t)v22);
      uint64_t v34 = *v22;
      if (OUTLINED_FUNCTION_4_88() == 1)
      {
        os_log_t v35 = *v30;
        type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        static NSObject.== infix(_:_:)();

        goto LABEL_43;
      }

      goto LABEL_41;
    case 2u:
      outlined init with copy of CommonDirectAction(v28, (uint64_t)v19);
      if (OUTLINED_FUNCTION_4_88() == 2) {
        goto LABEL_43;
      }
      goto LABEL_41;
    case 3u:
      outlined init with copy of CommonDirectAction(v28, (uint64_t)v16);
      uint64_t v37 = *v16;
      uint64_t v36 = v16[1];
      if (OUTLINED_FUNCTION_4_88() != 3) {
        goto LABEL_28;
      }
      if (v37 != *v30 || v36 != v30[1]) {
        goto LABEL_17;
      }
      goto LABEL_42;
    case 4u:
      outlined init with copy of CommonDirectAction(v28, (uint64_t)v13);
      if (OUTLINED_FUNCTION_4_88() == 4)
      {
        uint64_t v40 = v47;
        uint64_t v39 = v48;
        uint64_t v41 = v49;
        (*(void (**)(uint64_t, void **, uint64_t))(v48 + 32))(v47, v30, v49);
        static Siri_Nlu_External_UserDialogAct.== infix(_:_:)();
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v42(v40, v41);
        v42((uint64_t)v13, v41);
        goto LABEL_43;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v49);
      goto LABEL_41;
    case 5u:
      outlined init with copy of CommonDirectAction(v28, (uint64_t)v10);
      uint64_t v44 = *v10;
      uint64_t v43 = v10[1];
      if (OUTLINED_FUNCTION_4_88() != 5) {
        goto LABEL_28;
      }
      uint64_t v45 = v30[1];
      if (!v43)
      {
        if (!v45) {
          goto LABEL_43;
        }
        goto LABEL_46;
      }
      if (!v45)
      {
LABEL_46:
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      if (v44 == *v30 && v43 == v45)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_17:
        _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_43:
      outlined destroy of CommonDirectAction(v28);
LABEL_44:
      OUTLINED_FUNCTION_26_1();
      return;
    case 6u:
      if (OUTLINED_FUNCTION_4_88() == 6) {
        goto LABEL_43;
      }
      goto LABEL_41;
    case 7u:
      if (OUTLINED_FUNCTION_4_88() == 7) {
        goto LABEL_43;
      }
      goto LABEL_41;
    case 8u:
      if (OUTLINED_FUNCTION_4_88() == 8) {
        goto LABEL_43;
      }
      goto LABEL_41;
    case 9u:
      if (OUTLINED_FUNCTION_4_88() == 9) {
        goto LABEL_43;
      }
      goto LABEL_41;
    case 0xAu:
      if (OUTLINED_FUNCTION_4_88() == 10) {
        goto LABEL_43;
      }
      goto LABEL_41;
    default:
      outlined init with copy of CommonDirectAction(v28, (uint64_t)v24);
      uint64_t v32 = *v24;
      uint64_t v31 = v24[1];
      if (OUTLINED_FUNCTION_4_88())
      {
LABEL_28:
        swift_bridgeObjectRelease();
LABEL_41:
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v28, &demangling cache variable for type metadata for (CommonDirectAction, CommonDirectAction));
        goto LABEL_44;
      }
      if (v32 == *v30 && v31 == v30[1])
      {
LABEL_42:
        swift_bridgeObjectRelease_n();
        goto LABEL_43;
      }
      goto LABEL_17;
  }
}

void outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setUserData:isa];
}

uint64_t type metadata accessor for CommonDirectAction()
{
  uint64_t result = type metadata singleton initialization cache for CommonDirectAction;
  if (!type metadata singleton initialization cache for CommonDirectAction) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct()
{
  unint64_t result = lazy protocol witness table cache variable for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct;
  if (!lazy protocol witness table cache variable for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct)
  {
    type metadata accessor for Siri_Nlu_External_UserDialogAct();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for CommonDirectAction(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        uint64_t v11 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v11;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 1u:
        uint64_t v8 = *a2;
        *(void *)a1 = *a2;
        uint64_t v9 = v8;
        goto LABEL_8;
      case 4u:
        uint64_t v10 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for CommonDirectAction(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      uint64_t v2 = *a1;

      break;
    case 4u:
      uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
      uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    default:
      return;
  }
}

void *initializeWithCopy for CommonDirectAction(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 5u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 1u:
      uint64_t v6 = (void *)*a2;
      *a1 = *a2;
      id v7 = v6;
      goto LABEL_6;
    case 4u:
      uint64_t v8 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for CommonDirectAction(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of CommonDirectAction((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 1u:
        uint64_t v6 = (void *)*a2;
        *a1 = *a2;
        id v7 = v6;
        goto LABEL_7;
      case 4u:
        uint64_t v8 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for CommonDirectAction(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for CommonDirectAction(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of CommonDirectAction((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata completion function for CommonDirectAction()
{
  uint64_t result = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_62()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_4_88()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_6_78()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_81()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_9_70()
{
  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_12_53()
{
  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_13_48()
{
  return v0;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySnySS5IndexVGG_Sss5NeverOTg5095_s27PhoneCallFlowDelegatePlugin21UsoContactConvertiblePAAE23isNameLikelyNonBusinessSbyFSsSnySS5D8VGXEfU0_SSTf1cn_n(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = a1 + 40;
    do
    {
      uint64_t v4 = String.subscript.getter();
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v3 += 16;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[4 * v11];
      void v12[4] = v4;
      v12[5] = v6;
      v12[6] = v8;
      v12[7] = v10;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

BOOL specialized Sequence.allSatisfy(_:)()
{
  swift_bridgeObjectRetain();
  do
  {
    object = String.Iterator.next()().value._object;
    if (!object) {
      break;
    }
    char v1 = Character.isWhitespace.getter();
    swift_bridgeObjectRelease();
  }
  while ((v1 & 1) != 0);
  swift_bridgeObjectRelease();
  return object == 0;
}

void UsoContactConvertible.emergencyType.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v121 = type metadata accessor for IdentifierValue();
  OUTLINED_FUNCTION_0_0();
  uint64_t v112 = v5;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v120 = v7;
  OUTLINED_FUNCTION_36();
  uint64_t v8 = type metadata accessor for IdentifierNamespace();
  OUTLINED_FUNCTION_0_0();
  uint64_t v117 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v11);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
  OUTLINED_FUNCTION_10();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_46_0();
  uint64_t v15 = v13 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v111 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdentifierNamespace?);
  uint64_t v20 = OUTLINED_FUNCTION_11_0(v19);
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_5_8();
  uint64_t v123 = v21;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v22);
  uint64_t v124 = (uint64_t *)((char *)&v111 - v23);
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v24);
  uint64_t v135 = (uint64_t)&v111 - v25;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v26);
  uint64_t v125 = (char *)&v111 - v27;
  OUTLINED_FUNCTION_18_0();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v111 - v30;
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_10_14();
  uint64_t v134 = v32;
  OUTLINED_FUNCTION_36();
  uint64_t v33 = type metadata accessor for UsoIdentifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  OUTLINED_FUNCTION_5_8();
  uint64_t v138 = v37;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v38);
  OUTLINED_FUNCTION_10_14();
  uint64_t v133 = v39;
  uint64_t v142 = _swiftEmptyArrayStorage;
  uint64_t v40 = (void (*)(void, void))v4;
  uint64_t v41 = UsoContactConvertible.nameIdentifiers.getter(v4, v2)[2];
  uint64_t v132 = v15;
  uint64_t v137 = v33;
  uint64_t v116 = v2;
  uint64_t v115 = v0;
  uint64_t v114 = v40;
  uint64_t v113 = v35;
  if (v41)
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    uint64_t v42 = v35 + 16;
    uint64_t v130 = v43;
    OUTLINED_FUNCTION_55_1();
    uint64_t v111 = v44;
    uint64_t v2 = v44 + v45;
    uint64_t v129 = *(void *)(v42 + 56);
    uint64_t v128 = (void (**)(uint64_t))(v117 + 104);
    uint64_t v118 = v117 + 32;
    LODWORD(v127) = enum case for IdentifierNamespace.nsEmergencyOrganization(_:);
    id v122 = (void (**)(uint64_t *, uint64_t))(v117 + 8);
    uint64_t v131 = v42;
    uint64_t v126 = v42 - 8;
    uint64_t v46 = (uint64_t)v125;
    uint64_t v47 = v133;
    while (1)
    {
      v130(v47, v2, v33);
      uint64_t v40 = v134;
      UsoIdentifier.namespaceSemantic.getter();
      ((void (*)(char *, void, uint64_t))*v128)(v31, v127, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v8);
      uint64_t v48 = (uint64_t)&v18[*(int *)(v136 + 48)];
      _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0((uint64_t)v40, (uint64_t)v18, &demangling cache variable for type metadata for IdentifierNamespace?);
      _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0((uint64_t)v31, v48, &demangling cache variable for type metadata for IdentifierNamespace?);
      OUTLINED_FUNCTION_0_3((uint64_t)v18);
      if (v49) {
        break;
      }
      uint64_t v40 = (void (*)(void, void))v46;
      _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0((uint64_t)v18, v46, &demangling cache variable for type metadata for IdentifierNamespace?);
      OUTLINED_FUNCTION_0_3(v48);
      if (v49)
      {
        outlined destroy of FlowActivity?((uint64_t)v31, &demangling cache variable for type metadata for IdentifierNamespace?);
        outlined destroy of FlowActivity?((uint64_t)v134, &demangling cache variable for type metadata for IdentifierNamespace?);
        OUTLINED_FUNCTION_25_35();
        OUTLINED_FUNCTION_11();
        v51(v50);
LABEL_11:
        outlined destroy of FlowActivity?((uint64_t)v18, &demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
        uint64_t v33 = v137;
        uint64_t v47 = v133;
        goto LABEL_18;
      }
      uint64_t v52 = OUTLINED_FUNCTION_26_33();
      v53(v52, v48, v8);
      lazy protocol witness table accessor for type IdentifierNamespace and conformance IdentifierNamespace(&lazy protocol witness table cache variable for type IdentifierNamespace and conformance IdentifierNamespace, (void (*)(uint64_t))&type metadata accessor for IdentifierNamespace);
      LODWORD(v119) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v40 = (void (*)(void, void))*v122;
      uint64_t v15 = v132;
      (*v122)(&demangling cache variable for type metadata for IdentifierNamespace?, v8);
      outlined destroy of FlowActivity?((uint64_t)v31, &demangling cache variable for type metadata for IdentifierNamespace?);
      outlined destroy of FlowActivity?((uint64_t)v134, &demangling cache variable for type metadata for IdentifierNamespace?);
      v40(v125, v8);
      uint64_t v46 = (uint64_t)v125;
      outlined destroy of FlowActivity?((uint64_t)v18, &demangling cache variable for type metadata for IdentifierNamespace?);
      uint64_t v33 = v137;
      uint64_t v47 = v133;
      if (v119) {
        goto LABEL_13;
      }
LABEL_18:
      OUTLINED_FUNCTION_11();
      v60(v59);
      v2 += v129;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_20_39();
        goto LABEL_21;
      }
    }
    outlined destroy of FlowActivity?((uint64_t)v31, &demangling cache variable for type metadata for IdentifierNamespace?);
    outlined destroy of FlowActivity?((uint64_t)v40, &demangling cache variable for type metadata for IdentifierNamespace?);
    OUTLINED_FUNCTION_0_3(v48);
    if (v49)
    {
      outlined destroy of FlowActivity?((uint64_t)v18, &demangling cache variable for type metadata for IdentifierNamespace?);
LABEL_13:
      uint64_t v54 = UsoIdentifier.value.getter();
      uint64_t v40 = v55;
      uint64_t v56 = v142;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v56 = v61;
      }
      unint64_t v57 = v56[2];
      if (v57 >= v56[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v56 = v62;
      }
      v56[2] = v57 + 1;
      uint64_t v58 = &v56[2 * v57];
      v58[4] = v54;
      v58[5] = v40;
      uint64_t v142 = v56;
      uint64_t v15 = v132;
      uint64_t v47 = v133;
      uint64_t v33 = v137;
      uint64_t v46 = (uint64_t)v125;
      goto LABEL_18;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v63 = UsoContactConvertible.nameIdentifiers.getter((uint64_t)v40, v2)[2];
  if (v63)
  {
    uint64_t v134 = *(void (**)(void, void))(v113 + 16);
    OUTLINED_FUNCTION_55_1();
    uint64_t v113 = v65;
    uint64_t v67 = v65 + v66;
    uint64_t v133 = *(void *)(v64 + 56);
    LODWORD(v131) = enum case for IdentifierNamespace.nsPhoneCallContactName(_:);
    uint64_t v130 = (void (*)(uint64_t, uint64_t, uint64_t))(v68 + 104);
    uint64_t v125 = (char *)(v68 + 32);
    uint64_t v128 = (void (**)(uint64_t))(v68 + 8);
    uint64_t v129 = v64 - 8;
    uint64_t v127 = (uint64_t (**)(uint64_t, uint64_t))(v112 + 88);
    LODWORD(v126) = enum case for IdentifierValue.vEmergencyServices(_:);
    LODWORD(v122) = enum case for IdentifierValue.vEmergencyContact(_:);
    uint64_t v118 = v112 + 8;
    long long v119 = xmmword_467750;
    uint64_t v40 = (void (*)(void, void))v124;
    while (1)
    {
      uint64_t v2 = v64;
      ((void (*)(uint64_t, uint64_t, uint64_t))v134)(v138, v67, v33);
      uint64_t v69 = v135;
      UsoIdentifier.namespaceSemantic.getter();
      (*(void (**)(void (*)(void, void), void, uint64_t))v130)(v40, v131, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v8);
      uint64_t v70 = v15 + *(int *)(v136 + 48);
      _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0(v69, v15, &demangling cache variable for type metadata for IdentifierNamespace?);
      _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0((uint64_t)v40, v70, &demangling cache variable for type metadata for IdentifierNamespace?);
      OUTLINED_FUNCTION_0_3(v15);
      if (v49)
      {
        outlined destroy of FlowActivity?((uint64_t)v40, &demangling cache variable for type metadata for IdentifierNamespace?);
        outlined destroy of FlowActivity?(v69, &demangling cache variable for type metadata for IdentifierNamespace?);
        OUTLINED_FUNCTION_0_3(v70);
        uint64_t v33 = v137;
        if (!v49) {
          goto LABEL_31;
        }
        outlined destroy of FlowActivity?(v15, &demangling cache variable for type metadata for IdentifierNamespace?);
      }
      else
      {
        _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0(v15, v123, &demangling cache variable for type metadata for IdentifierNamespace?);
        OUTLINED_FUNCTION_0_3(v70);
        if (v71)
        {
          outlined destroy of FlowActivity?((uint64_t)v40, &demangling cache variable for type metadata for IdentifierNamespace?);
          outlined destroy of FlowActivity?(v135, &demangling cache variable for type metadata for IdentifierNamespace?);
          OUTLINED_FUNCTION_11();
          v73(v72);
          uint64_t v33 = v137;
LABEL_31:
          outlined destroy of FlowActivity?(v15, &demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
LABEL_32:
          uint64_t v74 = *(void (**)(uint64_t, uint64_t))v129;
          uint64_t v75 = v138;
          uint64_t v76 = v33;
          goto LABEL_33;
        }
        uint64_t v77 = OUTLINED_FUNCTION_26_33();
        v78(v77, v70, v8);
        lazy protocol witness table accessor for type IdentifierNamespace and conformance IdentifierNamespace(&lazy protocol witness table cache variable for type IdentifierNamespace and conformance IdentifierNamespace, (void (*)(uint64_t))&type metadata accessor for IdentifierNamespace);
        char v79 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v80 = *v128;
        uint64_t v15 = v132;
        OUTLINED_FUNCTION_26();
        v80(v81);
        outlined destroy of FlowActivity?((uint64_t)v124, &demangling cache variable for type metadata for IdentifierNamespace?);
        outlined destroy of FlowActivity?(v135, &demangling cache variable for type metadata for IdentifierNamespace?);
        uint64_t v40 = (void (*)(void, void))v124;
        OUTLINED_FUNCTION_26();
        v80(v82);
        outlined destroy of FlowActivity?(v15, &demangling cache variable for type metadata for IdentifierNamespace?);
        uint64_t v33 = v137;
        if ((v79 & 1) == 0) {
          goto LABEL_32;
        }
      }
      uint64_t v83 = v120;
      UsoIdentifier.valueSemantic.getter();
      int v84 = (*v127)(v83, v121);
      if (v84 == v126)
      {
        uint64_t v85 = v142;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_34_26();
          uint64_t v85 = v93;
        }
        unint64_t v86 = v85[2];
        if (v86 >= v85[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v85 = v94;
        }
        uint64_t v85[2] = v86 + 1;
        *(_OWORD *)&v85[2 * v86 + 4] = v119;
LABEL_47:
        uint64_t v142 = v85;
        OUTLINED_FUNCTION_11();
        v90(v89);
        uint64_t v15 = v132;
        goto LABEL_48;
      }
      if (v84 == v122)
      {
        uint64_t v85 = v142;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_34_26();
          uint64_t v85 = v95;
        }
        unint64_t v87 = v85[2];
        if (v87 >= v85[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v85 = v96;
        }
        uint64_t v85[2] = v87 + 1;
        uint64_t v88 = &v85[2 * v87];
        v88[4] = 0;
        v88[5] = 0;
        goto LABEL_47;
      }
      OUTLINED_FUNCTION_11();
      v92(v91);
      OUTLINED_FUNCTION_25_35();
      uint64_t v75 = v120;
      uint64_t v76 = v121;
LABEL_33:
      v74(v75, v76);
LABEL_48:
      v67 += v133;
      --v63;
      uint64_t v64 = v2;
      if (!v63)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_20_39();
        goto LABEL_52;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_52:
  if ((*(uint64_t (**)(void, uint64_t))(v2 + 32))(v40, v2))
  {
    CodeGenBase.entity.getter();
    swift_release();
  }
  type metadata accessor for UsoEntity_common_PhoneNumber();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  swift_release();
  if (v140)
  {
    swift_retain();
    UsoEntity_common_PhoneNumber.tags.getter();
    uint64_t v98 = v97;
    swift_release();
  }
  else
  {
    uint64_t v98 = _swiftEmptyArrayStorage;
  }
  BOOL v99 = specialized Sequence<>.contains(_:)((uint64_t)v98);
  swift_bridgeObjectRelease();
  if (v99)
  {
    uint64_t v100 = v142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v100 = v109;
    }
    unint64_t v101 = v100[2];
    if (v101 >= v100[3] >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v100 = v110;
    }
    v100[2] = v101 + 1;
    *(_OWORD *)&v100[2 * v101 + 4] = xmmword_46A560;
    uint64_t v142 = v100;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v102 = type metadata accessor for Logger();
  __swift_project_value_buffer(v102, (uint64_t)static Logger.siriPhone);
  uint64_t v103 = Logger.logObject.getter();
  os_log_type_t v104 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v103, v104))
  {
    uint64_t v105 = swift_slowAlloc();
    uint64_t v139 = swift_slowAlloc();
    uint64_t v140 = 0;
    *(_DWORD *)uint64_t v105 = 136315394;
    unint64_t v141 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of UsoContactConvertible.emergencyType.getter, 0, 0);
    uint64_t v140 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v140, v141, &v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v105 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v106 = Array.description.getter();
    unint64_t v108 = v107;
    swift_bridgeObjectRelease();
    uint64_t v140 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v106, v108, &v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v103, v104, "%s Parsed emergencyTypes: %s, returning first entry", (uint8_t *)v105, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  swift_beginAccess();
  if (v142[2]) {
    outlined copy of PhoneCallEmergencyType(v142[4], v142[5]);
  }
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

void *UsoContactConvertible.nameSpans.getter(uint64_t a1, uint64_t a2)
{
  return UsoContactConvertible.nameSpans.getter(a1, a2, (uint64_t (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getEntitySpansFor(attributeName:));
}

uint64_t UsoEntity_common_Person.getRedactCommonPerson()()
{
  uint64_t v1 = v0;
  if (!dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter()) {
    goto LABEL_11;
  }
  uint64_t v2 = dispatch thunk of UsoEntity_common_Person.name.getter();
  char v4 = specialized Optional<A>.isNilOrEmpty.getter(v2, v3);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0
    || (CodeGenBase.entity.getter(),
        type metadata accessor for UsoEntity_common_PhoneNumber(),
        static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(),
        swift_release(),
        swift_release(),
        !v15))
  {
LABEL_10:
    swift_release();
LABEL_11:
    swift_retain();
    return v1;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_5_22();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v16 = v9;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of UsoEntity_common_Person.getRedactCommonPerson(), 0, 0);
    uint64_t v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v6, v7, "%s needs to clean uso person that has both request name and request handle", v8, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  type metadata accessor for UsoEntityBuilder_common_Person();
  swift_allocObject();
  UsoEntityBuilder_common_Person.init()();
  type metadata accessor for UsoEntityBuilder_common_ContactAddress();
  swift_allocObject();
  UsoEntityBuilder_common_ContactAddress.init()();
  swift_retain();
  CodeGenBase.entity.getter();
  swift_release();
  static UsoBuilderConversionUtils.copyEntityDataToEntityBuilder(entityBuilder:entity:copyValueType:copyIdentifiers:copyUtteranceAlignments:)();
  swift_release();
  swift_retain();
  dispatch thunk of UsoEntityBuilder_common_Person.setSpecifyingContactAddress(value:)();
  swift_release();
  static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)();
  type metadata accessor for UsoEntity_common_Person();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  if (!v15)
  {
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_5_22();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v16 = v14;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of UsoEntity_common_Person.getRedactCommonPerson(), 0, 0);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v11, v12, "%s can't create a new entity, returns the current one", v13, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {

      swift_release();
      swift_release();
      swift_release();
    }
    goto LABEL_10;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

uint64_t protocol witness for UsoContactConvertible.name.getter in conformance UsoEntity_common_Person()
{
  return dispatch thunk of UsoEntity_common_Person.name.getter();
}

uint64_t protocol witness for UsoContactConvertible.identifyingRelationship.getter in conformance UsoEntity_common_Person()
{
  return dispatch thunk of UsoEntity_common_Person.identifyingRelationship.getter();
}

uint64_t protocol witness for UsoContactConvertible.specifyingContactAddress.getter in conformance UsoEntity_common_Person()
{
  return dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter();
}

uint64_t protocol witness for UsoContactConvertible.usoPerson.getter in conformance UsoEntity_common_Person()
{
  return UsoEntity_common_Person.usoPerson.getter();
}

void UsoContactConvertible.vocabularyAppsBundleSet.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UsoIdentifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_12_0();
  uint64_t v9 = UsoContactConvertible.nameIdentifiers.getter(v4, v2)[2];
  if (v9)
  {
    os_log_type_t v12 = *(void (**)(void))(v7 + 16);
    uint64_t v10 = v7 + 16;
    uint64_t v11 = v12;
    OUTLINED_FUNCTION_55_1();
    uint64_t v15 = v13 + v14;
    uint64_t v16 = *(void *)(v10 + 56);
    do
    {
      OUTLINED_FUNCTION_42_25();
      v11();
      uint64_t v17 = UsoIdentifier.namespace.getter();
      if (v18)
      {
        if (v17 == 0x64695F6D657469 && v18 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0) {
            goto LABEL_12;
          }
        }
        UsoIdentifier.appBundleId.getter();
        specialized Set._Variant.insert(_:)();
        swift_bridgeObjectRelease();
      }
LABEL_12:
      (*(void (**)(uint64_t, uint64_t))(v10 - 8))(v0, v5);
      v15 += v16;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t protocol witness for UsoContactConvertible.name.getter in conformance UsoEntity_common_Agent()
{
  return dispatch thunk of UsoEntity_common_Agent.name.getter();
}

uint64_t protocol witness for UsoContactConvertible.identifyingRelationship.getter in conformance UsoEntity_common_Agent()
{
  return UsoEntity_common_Agent.identifyingRelationship.getter();
}

uint64_t protocol witness for UsoContactConvertible.usoReferenceType.getter in conformance UsoEntity_common_Agent()
{
  return dispatch thunk of CodeGenGlobalArgs.usoReferenceType.getter();
}

uint64_t protocol witness for UsoContactConvertible.specifyingContactAddress.getter in conformance UsoEntity_common_Agent()
{
  return dispatch thunk of UsoEntity_common_Agent.specifyingContactAddress.getter();
}

uint64_t protocol witness for UsoContactConvertible.usoSearchQualifier.getter in conformance UsoEntity_common_Agent()
{
  return dispatch thunk of CodeGenGlobalArgs.usoSearchQualifier.getter();
}

uint64_t protocol witness for UsoContactConvertible.usoPerson.getter in conformance UsoEntity_common_Agent()
{
  return UsoEntity_common_Agent.usoPerson.getter();
}

void *UsoContactConvertible.nameIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return UsoContactConvertible.nameSpans.getter(a1, a2, (uint64_t (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:));
}

void *UsoContactConvertible.utteranceAlignment.getter(uint64_t a1, uint64_t a2)
{
  return UsoContactConvertible.nameSpans.getter(a1, a2, (uint64_t (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenBase.getUtteranceAlignmentsHelper(attributeName:));
}

void *UsoContactConvertible.nameSpans.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  if (!(*(uint64_t (**)(void))(a2 + 48))() || (uint64_t v4 = a3(1701667182, 0xE400000000000000), swift_release(), !v4))
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return (void *)v4;
}

void UsoContactConvertible.hasFullBusinessNameProperty.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  type metadata accessor for UsoEntitySpan();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  uint64_t v8 = UsoContactConvertible.nameSpans.getter(v4, v2)[2];
  if (v8)
  {
    uint64_t v9 = *(void (**)(void))(v6 + 16);
    OUTLINED_FUNCTION_55_1();
    uint64_t v12 = v10 + v11;
    uint64_t v13 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      OUTLINED_FUNCTION_42_25();
      v9();
      char v14 = closure #1 in UsoContactConvertible.hasFullBusinessNameProperty.getter(v0);
      OUTLINED_FUNCTION_26();
      v15();
      if (v14) {
        break;
      }
      v12 += v13;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in UsoContactConvertible.hasFullBusinessNameProperty.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpanProperty?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_3_1();
  uint64_t v63 = v4;
  OUTLINED_FUNCTION_36();
  uint64_t v68 = type metadata accessor for UsoEntitySpan();
  OUTLINED_FUNCTION_0_0();
  uint64_t v67 = v5;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v66 = v7;
  OUTLINED_FUNCTION_36();
  uint64_t v8 = type metadata accessor for PayloadAttachmentInfo.AttachmentType();
  OUTLINED_FUNCTION_0_0();
  uint64_t v64 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  uint64_t v62 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
  OUTLINED_FUNCTION_10();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo?);
  uint64_t v18 = OUTLINED_FUNCTION_11_0(v17);
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_4();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  uint64_t v23 = OUTLINED_FUNCTION_11_0(v22);
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_46_0();
  uint64_t v26 = v24 - v25;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v61 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v61 - v31;
  uint64_t v65 = a1;
  UsoEntitySpan.payloadAttachmentInfo.getter();
  uint64_t v33 = type metadata accessor for PayloadAttachmentInfo();
  if (__swift_getEnumTagSinglePayload(v21, 1, v33) == 1)
  {
    outlined destroy of FlowActivity?(v21, &demangling cache variable for type metadata for PayloadAttachmentInfo?);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 1, 1, v8);
  }
  else
  {
    PayloadAttachmentInfo.attachmentType.getter();
    OUTLINED_FUNCTION_10();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v21, v33);
  }
  uint64_t v35 = v64;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v30, enum case for PayloadAttachmentInfo.AttachmentType.full(_:), v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v8);
  uint64_t v36 = v16 + *(int *)(v12 + 48);
  _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0((uint64_t)v32, v16, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0((uint64_t)v30, v36, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  OUTLINED_FUNCTION_22_35(v16);
  if (v41)
  {
    uint64_t v37 = OUTLINED_FUNCTION_38_26();
    outlined destroy of FlowActivity?(v37, v38);
    outlined destroy of FlowActivity?((uint64_t)v32, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    OUTLINED_FUNCTION_22_35(v36);
    if (v41)
    {
      outlined destroy of FlowActivity?(v16, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      uint64_t v39 = OUTLINED_FUNCTION_3_93();
      v40(v39);
      goto LABEL_14;
    }
LABEL_12:
    outlined destroy of FlowActivity?(v16, &demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
    uint64_t v42 = OUTLINED_FUNCTION_3_93();
    v43(v42);
LABEL_16:
    uint64_t v50 = OUTLINED_FUNCTION_28_33();
    v51(v50);
    char v52 = 0;
    return v52 & 1;
  }
  _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0(v16, v26, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  OUTLINED_FUNCTION_22_35(v36);
  if (v41)
  {
    outlined destroy of FlowActivity?((uint64_t)v30, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    outlined destroy of FlowActivity?((uint64_t)v32, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v26, v8);
    goto LABEL_12;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v62, v36, v8);
  lazy protocol witness table accessor for type IdentifierNamespace and conformance IdentifierNamespace(&lazy protocol witness table cache variable for type PayloadAttachmentInfo.AttachmentType and conformance PayloadAttachmentInfo.AttachmentType, (void (*)(uint64_t))&type metadata accessor for PayloadAttachmentInfo.AttachmentType);
  char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v45 = *(void (**)(void))(v35 + 8);
  OUTLINED_FUNCTION_26();
  v45();
  outlined destroy of FlowActivity?((uint64_t)v30, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  outlined destroy of FlowActivity?((uint64_t)v32, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  OUTLINED_FUNCTION_26();
  v45();
  outlined destroy of FlowActivity?(v16, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  uint64_t v46 = OUTLINED_FUNCTION_3_93();
  v47(v46);
  if ((v44 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  UsoEntitySpan.properties.getter();
  uint64_t v48 = v63;
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v49 = type metadata accessor for SpanProperty();
  if (__swift_getEnumTagSinglePayload(v48, 1, v49) == 1)
  {
    outlined destroy of FlowActivity?(v48, &demangling cache variable for type metadata for SpanProperty?);
    goto LABEL_16;
  }
  uint64_t v54 = SpanProperty.key.getter();
  uint64_t v56 = v55;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v57();
  if (v54 == 0x7373656E69737562 && v56 == 0xEC000000656D614ELL) {
    char v52 = 1;
  }
  else {
    char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v59 = OUTLINED_FUNCTION_28_33();
  v60(v59);
  swift_bridgeObjectRelease();
  return v52 & 1;
}

Swift::Bool __swiftcall UsoContactConvertible.isNameLikelyNonBusiness()()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v209 = type metadata accessor for IndexSet.RangeView();
  OUTLINED_FUNCTION_0_0();
  uint64_t v208 = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for PayloadAttachmentInfo.AttachmentType();
  OUTLINED_FUNCTION_0_0();
  uint64_t v207 = v13;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v15);
  uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
  OUTLINED_FUNCTION_10();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_5_1();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo?);
  uint64_t v18 = OUTLINED_FUNCTION_11_0(v17);
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_12_0();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  uint64_t v20 = OUTLINED_FUNCTION_11_0(v19);
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_5_8();
  uint64_t v218 = v21;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v22);
  v221 = (char *)&v189 - v23;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v24);
  OUTLINED_FUNCTION_10_14();
  uint64_t v217 = v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpanProperty?);
  uint64_t v27 = OUTLINED_FUNCTION_11_0(v26);
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_5_8();
  uint64_t v213 = v28;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v29);
  v214 = (char *)&v189 - v30;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v31);
  OUTLINED_FUNCTION_10_14();
  unint64_t v222 = v32;
  OUTLINED_FUNCTION_36();
  uint64_t v220 = type metadata accessor for UsoEntitySpan();
  OUTLINED_FUNCTION_0_0();
  uint64_t v230 = v33;
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_5_8();
  uint64_t v223 = v35;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v36);
  v224 = (char *)&v189 - v37;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v38);
  v225 = (char *)&v189 - v39;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v40);
  OUTLINED_FUNCTION_10_14();
  uint64_t v229 = v41;
  OUTLINED_FUNCTION_36();
  uint64_t v211 = type metadata accessor for IndexSet();
  OUTLINED_FUNCTION_0_0();
  uint64_t v210 = v42;
  __chkstk_darwin(v43);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v44);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  uint64_t v46 = OUTLINED_FUNCTION_11_0(v45);
  __chkstk_darwin(v46);
  OUTLINED_FUNCTION_46_0();
  uint64_t v49 = v47 - v48;
  __chkstk_darwin(v50);
  char v52 = (char *)&v189 - v51;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceAlignment?);
  uint64_t v54 = OUTLINED_FUNCTION_11_0(v53);
  __chkstk_darwin(v54);
  OUTLINED_FUNCTION_4();
  uint64_t v57 = v56 - v55;
  uint64_t v226 = type metadata accessor for UtteranceAlignment();
  OUTLINED_FUNCTION_0_0();
  uint64_t v216 = v58;
  __chkstk_darwin(v59);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v60);
  uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v227 = v0;
  uint64_t v228 = v6;
  uint64_t v62 = v61(v6, v4);
  if (!v63) {
    goto LABEL_10;
  }
  uint64_t v64 = v63;
  uint64_t v65 = HIBYTE(v63) & 0xF;
  if ((v63 & 0x2000000000000000) == 0) {
    uint64_t v65 = v62 & 0xFFFFFFFFFFFFLL;
  }
  if (!v65)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    __swift_project_value_buffer(v69, (uint64_t)static Logger.siriPhone);
    uint64_t v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)OUTLINED_FUNCTION_5_22();
      uint64_t v73 = swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 136315138;
      v231 = 0;
      unint64_t v232 = 0xE000000000000000;
      uint64_t v233 = v73;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of UsoContactConvertible.isNameLikelyNonBusiness(), 0xD000000000000019, 0x800000000049B3D0);
      v231 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v231, v232, &v233);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v70, v71, "%s -  Name is nil or empty, returning false", v72, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    goto LABEL_15;
  }
  uint64_t v201 = v62;
  uint64_t v202 = v12;
  uint64_t v203 = v11;
  uint64_t v66 = v228;
  uint64_t v67 = UsoContactConvertible.nameSpans.getter(v228, v4)[2];
  swift_bridgeObjectRelease();
  if (v67)
  {
    UsoContactConvertible.utteranceAlignment.getter(v66, v4);
    specialized Collection.first.getter();
    swift_bridgeObjectRelease();
    uint64_t v68 = v226;
    OUTLINED_FUNCTION_28_6(v57, 1, v226);
    if (!v112)
    {
      unint64_t v199 = v1;
      uint64_t v204 = v2;
      uint64_t v75 = v216;
      uint64_t v76 = v215;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v216 + 32))(v215, v57, v68);
      uint64_t v77 = v4;
      UsoContactConvertible.hasFullBusinessNameProperty.getter();
      if (v78)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v68);
        goto LABEL_15;
      }
      UtteranceAlignment.spans.getter();
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      uint64_t v79 = type metadata accessor for UtteranceSpan();
      OUTLINED_FUNCTION_28_6((uint64_t)v52, 1, v79);
      uint64_t v80 = v75;
      uint64_t v81 = v76;
      if (!v112)
      {
        unsigned int v82 = UtteranceSpan.startIndex.getter();
        OUTLINED_FUNCTION_10();
        int v84 = *(void (**)(char *, uint64_t))(v83 + 8);
        v84(v52, v79);
        UtteranceAlignment.spans.getter();
        specialized Collection.first.getter();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_28_6(v49, 1, v79);
        if (!v112)
        {
          unsigned int v85 = UtteranceSpan.endIndex.getter();
          uint64_t v86 = OUTLINED_FUNCTION_38_26();
          LOBYTE(v74) = ((uint64_t (*)(uint64_t))v84)(v86);
          if (v85 < v82)
          {
LABEL_102:
            __break(1u);
            return v74;
          }
          IndexSet.init(integersIn:)();
          uint64_t v87 = v227;
          uint64_t v88 = v77;
          uint64_t v89 = UsoContactConvertible.nameSpans.getter(v228, v77);
          uint64_t v90 = v202;
          unint64_t v91 = v222;
          if (!v89[2])
          {
            swift_bridgeObjectRelease();
LABEL_99:
            uint64_t v178 = IndexSet.rangeView.getter();
            __chkstk_darwin(v178);
            *(&v189 - 12) = v228;
            *(&v189 - 11) = v88;
            *(&v189 - 10) = v201;
            *(&v189 - 9) = v64;
            *((_DWORD *)&v189 - 16) = v82;
            *(&v189 - 7) = (uint64_t)&type metadata for String;
            *(&v189 - 6) = (uint64_t)&outlined read-only object #0 of UsoContactConvertible.isNameLikelyNonBusiness();
            *(&v189 - 5) = 0;
            *(&v189 - 4) = 0;
            *(&v189 - 3) = v215;
            *(&v189 - 2) = v87;
            uint64_t v179 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF10Foundation8IndexSetV9RangeViewV_SnySS0E0VGs5NeverOTg5();
            OUTLINED_FUNCTION_11();
            v180();
            swift_bridgeObjectRetain();
            unint64_t v181 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySnySS5IndexVGG_Sss5NeverOTg5095_s27PhoneCallFlowDelegatePlugin21UsoContactConvertiblePAAE23isNameLikelyNonBusinessSbyFSsSnySS5D8VGXEfU0_SSTf1cn_n(v179);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v231 = v181;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Substring]);
            lazy protocol witness table accessor for type [Substring] and conformance [A]();
            lazy protocol witness table accessor for type Substring and conformance Substring();
            Sequence<>.joined(separator:)();
            swift_bridgeObjectRelease();
            specialized Sequence.allSatisfy(_:)();
            OUTLINED_FUNCTION_11();
            v182();
            OUTLINED_FUNCTION_11();
            v183();
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
          uint64_t v190 = v88;
          unsigned int v191 = v82;
          uint64_t v206 = *(void *)(v230 + 16);
          OUTLINED_FUNCTION_55_1();
          uint64_t v192 = v93;
          uint64_t v95 = v93 + v94;
          uint64_t v205 = v96 - 8;
          unsigned int v196 = enum case for PayloadAttachmentInfo.AttachmentType.full(_:);
          uint64_t v195 = v207 + 104;
          uint64_t v193 = v207 + 32;
          v194 = (void (**)(uint64_t, uint64_t))(v207 + 8);
          uint64_t v230 = v96;
          uint64_t v197 = *(void *)(v96 + 56);
          while (1)
          {
            uint64_t v207 = v92;
            uint64_t v200 = v95;
            OUTLINED_FUNCTION_41_5();
            v97();
            uint64_t v98 = *(void *)(UsoEntitySpan.properties.getter() + 16);
            uint64_t v99 = type metadata accessor for SpanProperty();
            if (v98)
            {
              OUTLINED_FUNCTION_10();
              OUTLINED_FUNCTION_36_29();
              OUTLINED_FUNCTION_41_5();
              v100();
              uint64_t v101 = 0;
            }
            else
            {
              uint64_t v101 = 1;
            }
            OUTLINED_FUNCTION_31_32(v91, v101);
            int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v91, 1, v99);
            uint64_t v103 = (void (*)(void))(v205 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
            uint64_t v198 = v103;
            if (EnumTagSinglePayload == 1)
            {
              outlined destroy of FlowActivity?(v91, &demangling cache variable for type metadata for SpanProperty?);
              OUTLINED_FUNCTION_43_23();
              v104();
            }
            else
            {
              uint64_t v107 = SpanProperty.key.getter();
              uint64_t v109 = v108;
              OUTLINED_FUNCTION_10();
              OUTLINED_FUNCTION_11();
              v110();
              OUTLINED_FUNCTION_18_36();
              BOOL v112 = v107 == (v111 & 0xFFFFFFFFFFFFLL | 0x614E000000000000) && v109 == 0xEA0000000000656DLL;
              if (v112)
              {
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_43_23();
                v114();
LABEL_41:
                uint64_t v115 = OUTLINED_FUNCTION_80_5();
                uint64_t v103 = v116;
                ((void (*)(uint64_t))v116)(v115);
                OUTLINED_FUNCTION_41_24();
                goto LABEL_54;
              }
              OUTLINED_FUNCTION_13_49();
              unint64_t v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_4_89();
              v113();
              if (v91) {
                goto LABEL_41;
              }
            }
            if (*(void *)(UsoEntitySpan.properties.getter() + 16))
            {
              OUTLINED_FUNCTION_10();
              OUTLINED_FUNCTION_36_29();
              uint64_t v105 = (uint64_t)v214;
              OUTLINED_FUNCTION_41_5();
              v106();
            }
            else
            {
              uint64_t v105 = (uint64_t)v214;
            }
            OUTLINED_FUNCTION_41_24();
            OUTLINED_FUNCTION_31_32(v105, v117);
            OUTLINED_FUNCTION_28_6(v105, 1, v99);
            if (v112)
            {
              outlined destroy of FlowActivity?(v105, &demangling cache variable for type metadata for SpanProperty?);
              uint64_t v118 = OUTLINED_FUNCTION_6_79();
              v119(v118);
              OUTLINED_FUNCTION_4_89();
              v120();
            }
            else
            {
              uint64_t v121 = SpanProperty.key.getter();
              uint64_t v123 = v122;
              OUTLINED_FUNCTION_10();
              OUTLINED_FUNCTION_11();
              v124();
              OUTLINED_FUNCTION_18_36();
              if (v121 == (v125 & 0xFFFFFFFFFFFFLL | 0x7250000000000000) && v123 == 0xEC00000078696665)
              {
                uint64_t v134 = OUTLINED_FUNCTION_6_79();
                v135(v134);
                swift_bridgeObjectRelease();
LABEL_54:
                OUTLINED_FUNCTION_15_50();
                v136();
LABEL_55:
                uint64_t v137 = OUTLINED_FUNCTION_80_5();
                ((void (*)(uint64_t))v103)(v137);
                uint64_t v138 = (uint64_t)v221;
LABEL_56:
                OUTLINED_FUNCTION_15_50();
                v139();
LABEL_57:
                uint64_t v140 = OUTLINED_FUNCTION_80_5();
                ((void (*)(uint64_t))v103)(v140);
                goto LABEL_58;
              }
              OUTLINED_FUNCTION_13_49();
              char v127 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v128 = OUTLINED_FUNCTION_6_79();
              v129(v128);
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_4_89();
              v130();
              if (v127) {
                goto LABEL_55;
              }
            }
            if (*(void *)(UsoEntitySpan.properties.getter() + 16))
            {
              OUTLINED_FUNCTION_10();
              OUTLINED_FUNCTION_36_29();
              uint64_t v131 = v213;
              OUTLINED_FUNCTION_41_5();
              v132();
              uint64_t v133 = 0;
            }
            else
            {
              uint64_t v133 = 1;
              uint64_t v131 = v213;
            }
            OUTLINED_FUNCTION_31_32(v131, v133);
            OUTLINED_FUNCTION_28_6(v131, 1, v99);
            if (v112)
            {
              outlined destroy of FlowActivity?(v131, &demangling cache variable for type metadata for SpanProperty?);
              OUTLINED_FUNCTION_1_91();
              v103();
              OUTLINED_FUNCTION_4_89();
              v163();
              uint64_t v138 = (uint64_t)v221;
            }
            else
            {
              uint64_t v170 = SpanProperty.key.getter();
              uint64_t v172 = v171;
              OUTLINED_FUNCTION_10();
              OUTLINED_FUNCTION_11();
              v173();
              unint64_t v91 = 0xEC00000078696666;
              OUTLINED_FUNCTION_18_36();
              if (v170 == (v174 & 0xFFFFFFFFFFFFLL | 0x7553000000000000) && v172 == 0xEC00000078696666)
              {
                OUTLINED_FUNCTION_1_91();
                v103();
                swift_bridgeObjectRelease();
                uint64_t v138 = (uint64_t)v221;
                OUTLINED_FUNCTION_41_24();
                goto LABEL_56;
              }
              OUTLINED_FUNCTION_13_49();
              unint64_t v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
              OUTLINED_FUNCTION_1_91();
              v103();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_4_89();
              v176();
              uint64_t v138 = (uint64_t)v221;
              if (v91)
              {
                OUTLINED_FUNCTION_41_24();
                goto LABEL_57;
              }
            }
            UsoEntitySpan.label.getter();
            if (!v164)
            {
              uint64_t v177 = OUTLINED_FUNCTION_80_5();
              ((void (*)(uint64_t))v103)(v177);
              goto LABEL_95;
            }
            OUTLINED_FUNCTION_18_36();
            BOOL v168 = v167 == (v166 & 0xFFFFFFFFFFFFLL | 0x7546000000000000) && v165 == 0xEE00656D614E6C6CLL;
            unint64_t v91 = v199;
            if (v168)
            {
              OUTLINED_FUNCTION_1_91();
              v103();
              swift_bridgeObjectRelease();
            }
            else
            {
              OUTLINED_FUNCTION_13_49();
              char v169 = _stringCompareWithSmolCheck(_:_:expecting:)();
              OUTLINED_FUNCTION_1_91();
              v103();
              swift_bridgeObjectRelease();
              if ((v169 & 1) == 0) {
                goto LABEL_95;
              }
            }
LABEL_58:
            UsoEntitySpan.payloadAttachmentInfo.getter();
            uint64_t v141 = type metadata accessor for PayloadAttachmentInfo();
            OUTLINED_FUNCTION_28_6(v91, 1, v141);
            if (v112)
            {
              outlined destroy of FlowActivity?(v91, &demangling cache variable for type metadata for PayloadAttachmentInfo?);
              uint64_t v143 = v217;
              __swift_storeEnumTagSinglePayload(v217, 1, 1, v90);
            }
            else
            {
              uint64_t v142 = v217;
              PayloadAttachmentInfo.attachmentType.getter();
              uint64_t v143 = v142;
              OUTLINED_FUNCTION_10();
              uint64_t v144 = OUTLINED_FUNCTION_38_26();
              v145(v144);
            }
            OUTLINED_FUNCTION_25_35();
            v146(v138, v196, v90);
            __swift_storeEnumTagSinglePayload(v138, 0, 1, v90);
            uint64_t v147 = v204;
            uint64_t v148 = v204 + *(int *)(v219 + 48);
            _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0(v143, v204, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
            _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0(v138, v148, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
            OUTLINED_FUNCTION_28_6(v147, 1, v90);
            if (v112)
            {
              outlined destroy of FlowActivity?(v138, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
              outlined destroy of FlowActivity?(v143, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
              OUTLINED_FUNCTION_28_6(v148, 1, v90);
              if (v112)
              {
                uint64_t v184 = OUTLINED_FUNCTION_40_25();
                outlined destroy of FlowActivity?(v184, v185);
LABEL_100:
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_1_91();
                v103();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_11();
                v186();
                OUTLINED_FUNCTION_11();
                v187();
                goto LABEL_15;
              }
              goto LABEL_69;
            }
            uint64_t v149 = OUTLINED_FUNCTION_40_25();
            uint64_t v150 = v218;
            _s16SiriDialogEngine15SpeakableStringVSgWOcTm_0(v149, v218, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
            OUTLINED_FUNCTION_28_6(v148, 1, v90);
            if (v151)
            {
              outlined destroy of FlowActivity?(v138, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
              outlined destroy of FlowActivity?(v143, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
              OUTLINED_FUNCTION_25_35();
              v152(v150, v90);
LABEL_69:
              uint64_t v153 = OUTLINED_FUNCTION_40_25();
              outlined destroy of FlowActivity?(v153, &demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
              goto LABEL_71;
            }
            OUTLINED_FUNCTION_25_35();
            uint64_t v154 = v212;
            uint64_t v155 = OUTLINED_FUNCTION_38_26();
            v156(v155);
            lazy protocol witness table accessor for type IdentifierNamespace and conformance IdentifierNamespace(&lazy protocol witness table cache variable for type PayloadAttachmentInfo.AttachmentType and conformance PayloadAttachmentInfo.AttachmentType, (void (*)(uint64_t))&type metadata accessor for PayloadAttachmentInfo.AttachmentType);
            uint64_t v157 = v143;
            char v158 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v159 = *v194;
            (*v194)(v154, v90);
            outlined destroy of FlowActivity?(v138, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
            outlined destroy of FlowActivity?(v157, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
            v159(v218, v90);
            uint64_t v160 = OUTLINED_FUNCTION_40_25();
            outlined destroy of FlowActivity?(v160, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
            if (v158) {
              goto LABEL_100;
            }
LABEL_71:
            uint64_t v161 = UsoEntitySpan.startIndex.getter();
            if ((v161 & 0x100000000) == 0)
            {
              unsigned int v162 = v161;
              uint64_t v74 = UsoEntitySpan.endIndex.getter();
              if ((v74 & 0x100000000) == 0)
              {
                if (v74 < (unint64_t)v162)
                {
                  __break(1u);
                  goto LABEL_102;
                }
                IndexSet.remove(integersIn:)();
              }
            }
LABEL_95:
            OUTLINED_FUNCTION_1_91();
            v103();
            uint64_t v95 = v200 + v197;
            uint64_t v92 = v207 - 1;
            unint64_t v91 = v222;
            if (v207 == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v87 = v227;
              unsigned int v82 = v191;
              uint64_t v88 = v190;
              goto LABEL_99;
            }
          }
        }
        char v52 = (char *)v49;
      }
      swift_bridgeObjectRelease();
      outlined destroy of FlowActivity?((uint64_t)v52, &demangling cache variable for type metadata for UtteranceSpan?);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v226);
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    outlined destroy of FlowActivity?(v57, &demangling cache variable for type metadata for UtteranceAlignment?);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_15:
  OUTLINED_FUNCTION_26_1();
  return v74;
}

unint64_t closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, unint64_t *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v63 = a7;
  uint64_t v64 = a6;
  uint64_t v58 = a5;
  uint64_t v66 = a8;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v59 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *(void *)(a11 - 8);
  uint64_t v68 = a11;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v60 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v22 = type metadata accessor for UtteranceAlignment();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFSUB__(*a1, a4))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v56 = *a1;
  uint64_t v57 = v15;
  uint64_t v15 = v24;
  uint64_t v65 = a1[1];
  unint64_t result = String.index(_:offsetBy:limitedBy:)();
  if (v28)
  {
LABEL_7:
    a2 = a9;
    a3 = a10;
    if (one-time initialization token for siriPhone == -1)
    {
LABEL_8:
      uint64_t v31 = type metadata accessor for Logger();
      __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
      unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
      uint64_t v61 = v26;
      uint64_t v62 = v15;
      v32(v26, a2, v15);
      uint64_t v34 = v67;
      uint64_t v33 = v68;
      uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      v55(v21, a3, v68);
      swift_bridgeObjectRetain_n();
      uint64_t v35 = v64;
      swift_bridgeObjectRetain_n();
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.fault.getter();
      int v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v51 = v21;
        uint64_t v40 = v39;
        uint64_t v54 = swift_slowAlloc();
        uint64_t v71 = v54;
        *(_DWORD *)uint64_t v40 = 136315906;
        int v53 = v38;
        uint64_t v69 = 0;
        unint64_t v70 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        os_log_t v52 = v36;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v58, v35, 0xD000000000000019, 0x800000000049B3D0);
        swift_bridgeObjectRelease();
        uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        uint64_t v41 = specialized Range.description.getter();
        uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 22) = 2080;
        uint64_t v43 = v61;
        UtteranceAlignment.spans.getter();
        specialized Collection.first.getter();
        swift_bridgeObjectRelease();
        uint64_t v44 = String.init<A>(describing:)();
        uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v43, v62);
        *(_WORD *)(v40 + 32) = 2080;
        uint64_t v46 = v51;
        uint64_t v47 = v68;
        v55(v60, (uint64_t)v51, v68);
        uint64_t v48 = String.init<A>(describing:)();
        uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v47);
        uint64_t v36 = v52;
        _os_log_impl(&dword_0, v52, (os_log_type_t)v53, "%s- Unexpected: UtteranceAlignment range is greater than name - Current Range: %s -- Alignment Span: %s -- Self: %s", (uint8_t *)v40, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v61, v62);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v33);
      }

      unint64_t v29 = 15;
      unint64_t result = 15;
      goto LABEL_12;
    }
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  if (!__OFSUB__(v65, a4))
  {
    unint64_t v29 = result;
    unint64_t result = String.index(_:offsetBy:limitedBy:)();
    if ((v30 & 1) == 0)
    {
      if (result >> 14 >= v29 >> 14)
      {
LABEL_12:
        uint64_t v50 = v66;
        *uint64_t v66 = v29;
        v50[1] = result;
        return result;
      }
      __break(1u);
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t partial apply for closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(_DWORD *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 80), a2, *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 16));
}

uint64_t lazy protocol witness table accessor for type IdentifierNamespace and conformance IdentifierNamespace(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_93()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_6_79()
{
  return *(void *)(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_26_33()
{
  return *(void *)(v0 - 280);
}

uint64_t OUTLINED_FUNCTION_28_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_32(uint64_t a1, uint64_t a2)
{
  __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_34_26()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_38_26()
{
  return v0;
}

void AppResolutionStateProvider.init(requestedBundleId:)(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)SAIntentGroupSiriKitAppSelectionState) init];
  id v6 = [objc_allocWithZone((Class)SASyncAppIdentifyingInfo) init];
  outlined bridged method (mbnn) of @objc SASyncAppIdentifyingInfo.bundleId.setter(a1, a2, v6);
  [v4 setRequestedApp:v6];
  id v5 = v4;
  AppResolutionStateProvider.init(appSelectionState:)();
}

void outlined bridged method (mbnn) of @objc SASyncAppIdentifyingInfo.bundleId.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setBundleId:v4];
}

Swift::Bool __swiftcall AnnotatedApp.isAppInferred()()
{
  return *(unsigned char *)(v0 + 32) == 3;
}

uint64_t AnnotatedApp.init(app:supportedIntents:actionsRestrictedWhileLocked:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = App.appIdentifier.getter();
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = result;
  *(void *)(a4 + 24) = v9;
  *(unsigned char *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = a3;
  return result;
}

uint64_t AnnotatedAppFinder.init(firstPartyAnnotatedAppStore:thirdPartyAnnotatedAppStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  return outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a5 + 3));
}

uint64_t AnnotatedApp.init(app:supportedIntents:launchId:source:actionsRestrictedWhileLocked:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

Swift::Bool __swiftcall AnnotatedApp.supports(intentTypeName:)(Swift::String intentTypeName)
{
  specialized Set.contains(_:)(intentTypeName._countAndFlagsBits, (uint64_t)intentTypeName._object, *(void *)(v1 + 8));
  return result;
}

uint64_t AnnotatedApp.init(app:supportedIntents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = App.appIdentifier.getter();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = result;
  *(void *)(a3 + 24) = v7;
  *(unsigned char *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = &_swiftEmptySetSingleton;
  return result;
}

uint64_t AnnotatedApp.withAppIdentifier(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = v3;
  uint64_t v10 = *v3;
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    App.systemExtensionBundleId.getter();
    uint64_t v7 = v11;
    App.systemUIExtensionBundleId.getter();
    uint64_t v6 = App.pluginIdentifier.getter();
    type metadata accessor for App();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v10 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
    OUTLINED_FUNCTION_1_92();
    swift_bridgeObjectRetain();
  }
  else
  {
    OUTLINED_FUNCTION_1_92();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  uint64_t result = swift_bridgeObjectRetain();
  char v13 = *((unsigned char *)v8 + 32);
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v5;
  *(unsigned char *)(a3 + 32) = v13;
  *(void *)(a3 + 40) = v6;
  return result;
}

void specialized static Set.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v34 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v35 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v36 = v3;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v19 = a1;
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v23 = Hasher._finalize()();
    uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v25 = v23 & ~v24;
    if (((*(void *)(v8 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_45;
    }
    uint64_t v26 = *(void *)(a2 + 48);
    uint64_t v27 = (void *)(v26 + 16 * v25);
    BOOL v28 = *v27 == v22 && v27[1] == v21;
    if (!v28 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v29 = ~v24;
      for (unint64_t j = v25 + 1; ; unint64_t j = v31 + 1)
      {
        uint64_t v31 = j & v29;
        if (((*(void *)(v8 + (((j & v29) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v29)) & 1) == 0) {
          break;
        }
        unint64_t v32 = (void *)(v26 + 16 * v31);
        BOOL v33 = *v32 == v22 && v32[1] == v21;
        if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_34;
        }
      }
LABEL_45:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    a1 = v19;
    uint64_t v3 = v36;
    if (v7) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v11 >= v35) {
      return;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      OUTLINED_FUNCTION_3_94();
      if (v14 == v15) {
        return;
      }
      OUTLINED_FUNCTION_2_106();
      if (!v12)
      {
        OUTLINED_FUNCTION_3_94();
        if (v14 == v15) {
          return;
        }
        OUTLINED_FUNCTION_2_106();
        if (!v12)
        {
          OUTLINED_FUNCTION_3_94();
          if (v14 == v15) {
            return;
          }
          OUTLINED_FUNCTION_2_106();
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v36 = v13;
  }
  int64_t v17 = v16 + 4;
  if (v17 >= v35) {
    return;
  }
  unint64_t v12 = *(void *)(v34 + 8 * v17);
  if (v12)
  {
    int64_t v13 = v17;
    goto LABEL_27;
  }
  while (!__OFADD__(v17, 1))
  {
    OUTLINED_FUNCTION_3_94();
    if (v14 == v15) {
      return;
    }
    OUTLINED_FUNCTION_2_106();
    int64_t v17 = v18 + 1;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_48:
  __break(1u);
}

uint64_t AnnotatedAppFinder.firstPartyAnnotatedAppStore.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  swift_retain();
  return v1;
}

void AnnotatedAppFinder.find(appQuery:device:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  void (*v37)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  uint64_t v6 = v5;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  int64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    int v38 = a5;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016, 0x800000000049B3F0, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v16 = AppQuery.description.getter(a1, a2, a3);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v13, v14, "#AnnotatedAppFinder %s appQuery=%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    a5 = v38;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (AppQuery.isFirstParty.getter(a1, a2))
  {
    if (a2)
    {
      uint64_t v19 = (void *)a2;
    }
    else
    {
      uint64_t v30 = AppQuery.defaultAppId.getter(a1, 0, a3);
      if (!v31)
      {
        FirstPartyAnnotatedAppStore.getDefaultApp(for:)(a4, (uint64_t)&v39);
        uint64_t v29 = v44;
        uint64_t v26 = v41;
        uint64_t v27 = v42;
        uint64_t v28 = 1;
        uint64_t v24 = v39;
        uint64_t v25 = v40;
        goto LABEL_22;
      }
      a1 = v30;
      uint64_t v19 = v31;
    }
    unint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))v6;
    uint64_t v33 = *(void *)(v6 + 16);
    swift_bridgeObjectRetain();
    FirstPartyAnnotatedAppStore.getApp(for:device:)(a1, v19, a4, v32, v33, &v39);
    uint64_t v24 = v39;
    uint64_t v25 = v40;
    uint64_t v26 = v41;
    uint64_t v27 = v42;
    uint64_t v34 = v43;
    uint64_t v29 = v44;
    goto LABEL_18;
  }
  if (a2)
  {
    type metadata accessor for App();
    swift_bridgeObjectRetain();
    App.__allocating_init(appIdentifier:)();
    Swift::Bool v20 = App.isFirstParty()();
    swift_release();
    if (!v20)
    {
      uint64_t v35 = *(void *)(v6 + 48);
      uint64_t v36 = *(void *)(v6 + 56);
      __swift_project_boxed_opaque_existential_1((void *)(v6 + 24), v35);
      os_log_type_t v37 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8);
      swift_bridgeObjectRetain();
      v37(&v39, a1, a2, v35, v36);
      uint64_t v24 = v39;
      uint64_t v25 = v40;
      uint64_t v26 = v41;
      uint64_t v27 = v42;
      uint64_t v34 = v43;
      uint64_t v29 = v44;
LABEL_18:
      swift_bridgeObjectRelease();
      uint64_t v28 = 1;
      if (a2) {
        uint64_t v28 = 2;
      }
      if (!v24) {
        uint64_t v28 = v34;
      }
      goto LABEL_22;
    }
  }
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    Swift::Int v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::Int v23 = 0;
    _os_log_impl(&dword_0, v21, v22, "#AnnotatedAppFinder Malformed query! Returning nil", v23, 2u);
    OUTLINED_FUNCTION_6();
  }

  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
LABEL_22:
  *a5 = v24;
  a5[1] = v25;
  a5[2] = v26;
  a5[3] = v27;
  a5[4] = v28;
  a5[5] = v29;
}

uint64_t AnnotatedApp.withSource(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[5];
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = a1;
  *(void *)(a2 + 40) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void AnnotatedAppFinder.findForAppSelection(app:device:appResolutionSource:)(void *a1@<X1>, unsigned __int8 a2@<W2>, uint64_t *a3@<X8>)
{
  swift_retain();
  uint64_t v6 = App.appIdentifier.getter();
  uint64_t v8 = v7;
  type metadata accessor for AppQuery.Builder();
  swift_allocObject();
  unint64_t v9 = AppQuery.Builder.init(requestedAppId:overrides:)(v6, v8, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = swift_release();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*v9 + 160))(v10);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_release();
  AnnotatedAppFinder.find(appQuery:device:)(v11, v13, v15, a1, v30);
  uint64_t v17 = v30[0];
  uint64_t v16 = v30[1];
  uint64_t v19 = v30[2];
  uint64_t v18 = v30[3];
  uint64_t v20 = v30[4];
  uint64_t v28 = v30[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v30, (uint64_t)v31, &demangling cache variable for type metadata for AnnotatedApp?);
  if (v31[0])
  {
    uint64_t v20 = a2;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    os_log_type_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v27 = v19;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034, 0x800000000049B410, &v29);
      OUTLINED_FUNCTION_2_0();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v24 + 12) = 2080;
      type metadata accessor for App();
      lazy protocol witness table accessor for type App and conformance App();
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v29);
      OUTLINED_FUNCTION_2_0();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v22, v23, "#AnnotatedAppFinder %s Could not find AnnotatedApp for %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      uint64_t v19 = v27;
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
  }
  *a3 = v17;
  a3[1] = v16;
  a3[2] = v19;
  a3[3] = v18;
  a3[4] = v20;
  a3[5] = v28;
}

uint64_t protocol witness for AnnotatedAppFinding.find(appQuery:device:) in conformance AnnotatedAppFinder@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  AnnotatedAppFinder.find(appQuery:device:)(a1, a2, a3, a4, v7);
  return _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v7, a5, &demangling cache variable for type metadata for AnnotatedApp?);
}

uint64_t protocol witness for AnnotatedAppFinding.findForAppSelection(app:device:appResolutionSource:) in conformance AnnotatedAppFinder@<X0>(void *a1@<X1>, unsigned __int8 a2@<W2>, uint64_t a3@<X8>)
{
  AnnotatedAppFinder.findForAppSelection(app:device:appResolutionSource:)(a1, a2, v5);
  return _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v5, a3, &demangling cache variable for type metadata for AnnotatedApp?);
}

BOOL protocol witness for AnnotatedAppFinding.isInstalledOnDevice(appBundleId:) in conformance AnnotatedAppFinder(uint64_t a1, uint64_t a2)
{
  return AnnotatedAppFinder.isInstalledOnDevice(appBundleId:)(*(Swift::String *)&a1);
}

uint64_t AnnotatedApp.source.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AnnotatedApp.actionsRestrictedWhileLocked.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnnotatedApp.init(app:supportedIntents:launchId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = &_swiftEmptySetSingleton;
  return result;
}

uint64_t AnnotatedApp.description.getter()
{
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(102);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  v1._object = (void *)0x800000000049B450;
  v1._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  v15[0] = *(void *)v0;
  type metadata accessor for App();
  lazy protocol witness table accessor for type App and conformance App();
  swift_retain();
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_release();
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0xD000000000000014;
  v3._object = (void *)0x800000000049B470;
  String.append(_:)(v3);
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x68636E75616C202CLL;
  v5._object = (void *)0xEC000000203A6449;
  String.append(_:)(v5);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0(v0 + 16, (uint64_t)v15, &demangling cache variable for type metadata for String?);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v15, (uint64_t)&v12, &demangling cache variable for type metadata for String?);
  outlined retain of String?((uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  v6._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x656372756F73202CLL;
  v7._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = AppResolutionSource.description.getter(*(unsigned char *)(v0 + 32));
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0xD000000000000020;
  v9._object = (void *)0x800000000049B490;
  String.append(_:)(v9);
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

void static AnnotatedApp.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for App();
  if ((static App.== infix(_:_:)() & 1) == 0) {
    return;
  }
  specialized static Set.== infix(_:_:)(*(void *)(a1 + 8), *(void *)(a2 + 8));
  if ((v4 & 1) == 0) {
    return;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if (v5)
  {
    if (!v6) {
      return;
    }
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v5 == v6;
    if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return;
    }
  }
  else if (v6)
  {
    return;
  }
  if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
  {
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = *(void *)(a2 + 40);
    specialized static Set.== infix(_:_:)(v8, v9);
  }
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnnotatedApp()
{
  return AnnotatedApp.description.getter();
}

unint64_t AppResolutionSource.description.getter(char a1)
{
  unint64_t result = 0x6E776F6E6B6E752ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x716552726573752ELL;
      break;
    case 3:
      unint64_t result = 0x736165732ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppResolutionSource()
{
  return AppResolutionSource.description.getter(*v0);
}

id @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

unint64_t lazy protocol witness table accessor for type AppResolutionSource and conformance AppResolutionSource()
{
  unint64_t result = lazy protocol witness table cache variable for type AppResolutionSource and conformance AppResolutionSource;
  if (!lazy protocol witness table cache variable for type AppResolutionSource and conformance AppResolutionSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppResolutionSource and conformance AppResolutionSource);
  }
  return result;
}

void *assignWithCopy for AnnotatedAppFinder(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  return a1;
}

uint64_t assignWithTake for AnnotatedAppFinder(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void type metadata accessor for AnnotatedAppFinder()
{
}

uint64_t destroy for AnnotatedApp()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnnotatedApp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnnotatedApp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnnotatedApp(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for AnnotatedApp()
{
}

unsigned char *storeEnumTagSinglePayload for AppResolutionSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3522A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for AppResolutionSource()
{
}

uint64_t OUTLINED_FUNCTION_1_92()
{
  return swift_bridgeObjectRetain();
}

void *ResponseViewIdConstants.contactConfirmationViewId.unsafeMutableAddressor()
{
  return &static ResponseViewIdConstants.contactConfirmationViewId;
}

unint64_t static ResponseViewIdConstants.contactConfirmationViewId.getter()
{
  return 0xD000000000000011;
}

void *ResponseViewIdConstants.contactDisambiguationViewId.unsafeMutableAddressor()
{
  return &static ResponseViewIdConstants.contactDisambiguationViewId;
}

unint64_t static ResponseViewIdConstants.contactDisambiguationViewId.getter()
{
  return 0xD000000000000015;
}

ValueMetadata *type metadata accessor for ResponseViewIdConstants()
{
  return &type metadata for ResponseViewIdConstants;
}

uint64_t one-time initialization function for messageStore()
{
  type metadata accessor for MessageStoreController();
  uint64_t result = static MessageStoreController.shared.getter();
  static SiriPhoneMessageStoreController.messageStore = result;
  return result;
}

uint64_t SiriPhoneMessageStoreController.getMessages(recordUUIDs:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(SiriPhoneMessageStoreController.getMessages(recordUUIDs:), 0, 0);
}

uint64_t SiriPhoneMessageStoreController.getMessages(recordUUIDs:)()
{
  if (one-time initialization token for messageStore != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = SiriPhoneMessageStoreController.getMessages(recordUUIDs:);
  uint64_t v2 = *(void *)(v0 + 16);
  return MessageStoreController.getMessages(recordUUIDs:)(v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_0_44();
  unsigned int v6 = *v2;
  int v3 = swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v6 + 8);
  if (!v1) {
    int v3 = v0;
  }
  return v4(v3);
}

uint64_t protocol witness for SiriPhoneMessageStoreProtocol.getMessages(recordUUIDs:) in conformance SiriPhoneMessageStoreController(uint64_t a1)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for SiriPhoneMessageStoreProtocol.getMessages(recordUUIDs:) in conformance SiriPhoneMessageStoreController;
  return v6(a1);
}

uint64_t protocol witness for SiriPhoneMessageStoreProtocol.getMessages(recordUUIDs:) in conformance SiriPhoneMessageStoreController()
{
  OUTLINED_FUNCTION_0_44();
  uint64_t v6 = *v2;
  uint64_t v3 = swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v6 + 8);
  if (!v1) {
    uint64_t v3 = v0;
  }
  return v4(v3);
}

uint64_t type metadata accessor for SiriPhoneMessageStoreController()
{
  return self;
}

void *HangUpCallIntentRCHFlowStrategy.__allocating_init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)()
{
  OUTLINED_FUNCTION_11_14();
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(v0, *(void *)(v0 + 24));
  OUTLINED_FUNCTION_1_93();
  __chkstk_darwin(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_75(v2, v7);
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_5_68();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v5;
}

void *HangUpCallIntentRCHFlowStrategy.init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)()
{
  OUTLINED_FUNCTION_11_14();
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(void *)(v1 + 24));
  OUTLINED_FUNCTION_1_93();
  __chkstk_darwin(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_75(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_5_68();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v6;
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return _swift_task_switch(HangUpCallIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:), 0, 0);
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)()
{
  uint64_t v31 = v0;
  uint64_t v1 = (long long *)(v0 + 7);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[14];
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[2] = v6;
    type metadata accessor for HangUpCallIntentRCHFlowStrategy();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = (long long *)(v0 + 7);
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2080;
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000029, 0x8000000000496B80, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v3, v4, "#%s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  id v10 = (void *)v0[14];
  uint64_t v11 = v0[12];
  uint64_t v12 = v10[6];
  uint64_t v13 = v10[7];
  __swift_project_boxed_opaque_existential_1(v10 + 3, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 72))(v12, v13);
  (*(void (**)(uint64_t))(*(void *)v14 + 192))(v11);
  swift_release();
  if (v0[10])
  {
    uint64_t v15 = (void *)v0[13];
    uint64_t v16 = v0[14];
    outlined init with take of AppSelectionSignalComponent(v1, (uint64_t)(v0 + 2));
    uint64_t v17 = v10[6];
    uint64_t v18 = v10[7];
    __swift_project_boxed_opaque_existential_1(v10 + 3, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 80))(v17, v18);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = v0[5];
    uint64_t v21 = v0[6];
    os_log_type_t v22 = __swift_project_boxed_opaque_existential_1(v0 + 2, v20);
    swift_retain();
    id v23 = v15;
    uint64_t v24 = specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)((uint64_t)v22, v19, (uint64_t)v15, 0, (uint64_t)v1, v20, v21);
    swift_release();

    outlined destroy of SKTransformer((uint64_t)v1);
    if (v24)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      uint64_t v25 = (uint64_t (*)(uint64_t))v0[1];
      return v25(v24);
    }
    lazy protocol witness table accessor for type ParseError and conformance ParseError();
    swift_allocError();
    *uint64_t v28 = xmmword_46A560;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  }
  else
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)v1);
    lazy protocol witness table accessor for type ParseError and conformance ParseError();
    swift_allocError();
    *uint64_t v27 = xmmword_46A560;
    swift_willThrow();
  }
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[15] = v2;
  v1[16] = v0;
  v1[14] = v3;
  type metadata accessor for DialogPhase();
  v1[17] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  v1[18] = v4;
  v1[19] = *(void *)(v4 - 8);
  v1[20] = swift_task_alloc();
  return _swift_task_switch(HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  void *v11;
  uint64_t (*v12)(void);
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  uint64_t v15 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000003FLL, 0x800000000049B570, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v2, v3, "#HangUpIntentRCHFlowStrategy %s", v4, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  BOOL v5 = *(void *)(v0 + 128);
  uint64_t v6 = (char *)[*(id *)(v0 + 120) code];
  uint64_t v7 = **(void **)(v5 + 64);
  if (v6 == (unsigned char *)&dword_4 + 2)
  {
    uint64_t v12 = (uint64_t (*)(void))(*(void *)(class metadata base offset for HangUpCallCATsSimple + v7 + 16)
                            + **(int **)(class metadata base offset for HangUpCallCATsSimple + v7 + 16));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v8;
    *uint64_t v8 = v0;
    v8[1] = HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
    unint64_t v9 = v12;
  }
  else
  {
    uint64_t v13 = (uint64_t (*)(void))(*(void *)(v7 + class metadata base offset for HangUpCallCATsSimple)
                            + **(int **)(v7 + class metadata base offset for HangUpCallCATsSimple));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v11;
    *uint64_t v11 = v0;
    v11[1] = HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
    unint64_t v9 = v13;
  }
  return v9();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_0_1();
  v3[7] = v1;
  v3[8] = v2;
  v3[9] = v0;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *BOOL v5 = v4;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
    return v6();
  }
  else
  {
    return _swift_task_switch(HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:), 0, 0);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_0_1();
  v3[10] = v1;
  v3[11] = v2;
  v3[12] = v0;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *BOOL v5 = v4;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
    return v6();
  }
  else
  {
    return _swift_task_switch(HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:), 0, 0);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[8];
  OUTLINED_FUNCTION_10_60();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v12 = OUTLINED_FUNCTION_4_90();
  v13(v12);
  __swift_project_boxed_opaque_existential_1(v10 + 2, v10[5]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_16_5(v14, (__n128)xmmword_46A030);
  v10[24] = v26;
  id v15 = v11;
  uint64_t v16 = (void *)swift_task_alloc();
  v10[25] = v16;
  *uint64_t v16 = v10;
  v16[1] = HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  uint64_t v17 = OUTLINED_FUNCTION_6_80();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

{
  void *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  __n128 *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  uint64_t v11 = (void *)v10[11];
  OUTLINED_FUNCTION_10_60();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v12 = OUTLINED_FUNCTION_4_90();
  v13(v12);
  __swift_project_boxed_opaque_existential_1(v10 + 2, v10[5]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_16_5(v14, (__n128)xmmword_46A030);
  v10[24] = v26;
  id v15 = v11;
  uint64_t v16 = (void *)swift_task_alloc();
  v10[25] = v16;
  *uint64_t v16 = v10;
  v16[1] = HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  uint64_t v17 = OUTLINED_FUNCTION_6_80();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t HangUpCallIntentRCHFlowStrategy.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return v0;
}

uint64_t HangUpCallIntentRCHFlowStrategy.__deallocating_deinit()
{
  HangUpCallIntentRCHFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for RCHFlowStrategyAsync.actionForInput(input:) in conformance HangUpCallIntentRCHFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 128)
                                                + **(int **)(**(void **)v2 + 128));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v8(a1, a2);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeParameterMetadata(intent:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();

  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeErrorResponse(error:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *id v10 = v5;
  v10[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *id v10 = v5;
  v10[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *id v10 = v5;
  v10[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *uint64_t v12 = v6;
  v12[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 136)
                                                                   + **(int **)(**(void **)v4 + 136));
  id v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *id v10 = v5;
  v10[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  return v12(a1, a2, a3, a4);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for Flow.onAsync(input:) in conformance RedirectToCompanionFlow;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

void *specialized HangUpCallIntentRCHFlowStrategy.init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  a5[12] = a6;
  a5[13] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a5 + 9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  a5[2] = a1;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a5 + 3));
  a5[8] = a3;
  return a5;
}

uint64_t type metadata accessor for HangUpCallIntentRCHFlowStrategy()
{
  return self;
}

uint64_t base witness table accessor for ResolveConfirmFlowStrategyAsync in HangUpCallIntentRCHFlowStrategy()
{
  return lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy(&lazy protocol witness table cache variable for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy);
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in HangUpCallIntentRCHFlowStrategy()
{
  return lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy(&lazy protocol witness table cache variable for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy);
}

uint64_t base witness table accessor for RouteConfirmIntentResponseFlowStrategyAsync in HangUpCallIntentRCHFlowStrategy()
{
  return lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy(&lazy protocol witness table cache variable for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy);
}

uint64_t lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HangUpCallIntentRCHFlowStrategy();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_90()
{
  uint64_t v1 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_6_80()
{
  return *(void *)(v0 + 112);
}

uint64_t OUTLINED_FUNCTION_10_60()
{
  *(void *)(v0 + 184) = v1;
  return static DialogPhase.completion.getter();
}

uint64_t SearchCallHistorySharedGlobals.init(appInfoBuilder:searchCallCatPatterns:responseGenerator:phoneCommonCats:phoneCallCommonCatPatterns:callHistoryPromptDialogProvider:searchCallHistoryCATs:searchCallHistoryCATsSimple:phoneCallDisplayTextCATsSimple:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  outlined init with take of AppSelectionSignalComponent(a1, (uint64_t)a9);
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a9 + 5));
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)(a9 + 10));
  a9[15] = a4;
  uint64_t result = outlined init with take of AppSelectionSignalComponent(a5, (uint64_t)(a9 + 16));
  a9[21] = a6;
  a9[22] = a7;
  a9[23] = a8;
  a9[24] = a10;
  return result;
}

uint64_t SearchCallHistorySharedGlobals.searchCallHistoryCATsSimple.getter()
{
  return swift_retain();
}

uint64_t SearchCallHistorySharedGlobals.phoneCallDisplayTextCATsSimple.getter()
{
  return swift_retain();
}

uint64_t destroy for SearchCallHistorySharedGlobals(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SearchCallHistorySharedGlobals(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  long long v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 128, a2 + 128, v8);
  uint64_t v10 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v10;
  uint64_t v12 = *(void *)(a2 + 184);
  uint64_t v11 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = v12;
  *(void *)(a1 + 192) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for SearchCallHistorySharedGlobals(uint64_t *a1, uint64_t *a2)
{
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 16, a2 + 16);
  a1[21] = a2[21];
  swift_retain();
  swift_release();
  a1[22] = a2[22];
  swift_retain();
  swift_release();
  a1[23] = a2[23];
  swift_retain();
  swift_release();
  a1[24] = a2[24];
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy200_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for SearchCallHistorySharedGlobals(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  uint64_t v6 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v6;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  uint64_t v8 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v8;
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistorySharedGlobals(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 200))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistorySharedGlobals(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchCallHistorySharedGlobals()
{
  return &type metadata for SearchCallHistorySharedGlobals;
}

void *CallingIntentHandleIntentFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return CallingIntentHandleIntentFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

void CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_53();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = OUTLINED_FUNCTION_25_0(v15, (uint64_t)static Logger.siriPhone);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentResponse", v18, 2u);
    OUTLINED_FUNCTION_6();
  }

  uint64_t v19 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v19);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v2;
  v20[5] = v12;
  v20[6] = v10;
  v20[7] = v8;
  v20[8] = v6;
  v20[9] = v4;
  swift_retain();
  swift_retain();
  id v21 = v10;
  id v22 = v8;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:), (uint64_t)v20);
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = a8;
  void v8[25] = v17;
  v8[22] = a6;
  v8[23] = a7;
  v8[20] = a4;
  v8[21] = a5;
  v8[26] = type metadata accessor for PhoneError();
  v8[27] = swift_task_alloc();
  uint64_t v15 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)a4 + 344)
                                                                    + **(int **)(*(void *)a4 + 344));
  uint64_t v13 = (void *)swift_task_alloc();
  v8[28] = v13;
  *uint64_t v13 = v8;
  v13[1] = closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
  return v15(v8 + 14, a5, a6, a7);
}

uint64_t closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 192);
  outlined init with copy of SignalProviding(v0 + 112, v0 + 64);
  *(unsigned char *)(v0 + 104) = 0;
  v1(v0 + 64);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v0 + 64, &demangling cache variable for type metadata for Result<Output, Error>);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t (*v4)(void);
  uint64_t v6;

  *(void *)(v0 + 152) = *(void *)(v0 + 232);
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 216);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      swift_errorRelease();
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_7(v1, (void (*)(void))type metadata accessor for PhoneError);
      CallingIntentHandleIntentFlowStrategy.makeLegacyFailureHandlingIntentOutput(app:intent:intentResponse:_:)();
      swift_errorRelease();
      goto LABEL_6;
    }
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_7(v1, (void (*)(void))type metadata accessor for PhoneError);
  }
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 192);
  swift_errorRelease();
  *(void *)(v0 + 16) = v2;
  *(unsigned char *)(v0 + 56) = 1;
  swift_errorRetain();
  v3(v0 + 16);
  swift_errorRelease();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v0 + 16, &demangling cache variable for type metadata for Result<Output, Error>);
LABEL_6:
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

void CallingIntentHandleIntentFlowStrategy.makeLegacyFailureHandlingIntentOutput(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for CATOption();
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = OUTLINED_FUNCTION_25_0(v6, (uint64_t)static Logger.siriPhone);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "#CallingIntentHandleIntentFlowStrategy makeLegacyFailureHandlingIntentOutput ", v9, 2u);
    OUTLINED_FUNCTION_6();
  }

  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (v10)
    {
      OUTLINED_FUNCTION_40_26(v10);
      type metadata accessor for StartCallCATs();
      v3;
      id v11 = v1;
      static CATOption.defaultMode.getter();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for PhoneCallDisplayTextCATs();
      OUTLINED_FUNCTION_57_3();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for PhoneCallCommonCATs();
      OUTLINED_FUNCTION_57_3();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for UnsupportedFlowCATs();
      OUTLINED_FUNCTION_57_3();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for AppInfoBuilder();
      swift_allocObject();
      OUTLINED_FUNCTION_58_18();
      type metadata accessor for TemplatingOperationManager();
      swift_allocObject();
      TemplatingOperationManager.init()();
      type metadata accessor for StartCallCatTemplatingService();
      swift_allocObject();
      specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)();
      uint64_t v12 = (void *)swift_allocObject();
      id v13 = OUTLINED_FUNCTION_29_30(v12);
      id v14 = v11;
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_14:
      dispatch thunk of DucTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)();

      swift_release();
      swift_release();

      goto LABEL_15;
    }
    goto LABEL_15;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      OUTLINED_FUNCTION_40_26(v15);
      type metadata accessor for StartCallCATs();
      v3;
      id v16 = v1;
      static CATOption.defaultMode.getter();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for PhoneCallDisplayTextCATs();
      OUTLINED_FUNCTION_57_3();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for PhoneCallCommonCATs();
      OUTLINED_FUNCTION_57_3();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for AppInfoBuilder();
      swift_allocObject();
      OUTLINED_FUNCTION_58_18();
      type metadata accessor for StartAudioCallCatTemplatingService();
      swift_allocObject();
      uint64_t v17 = OUTLINED_FUNCTION_50_19();
      specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)(v17, v18, v19, v20, v21, v22);
      uint64_t v23 = (void *)swift_allocObject();
      id v13 = OUTLINED_FUNCTION_29_30(v23);
      id v14 = v16;
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_14;
    }
LABEL_15:
    OUTLINED_FUNCTION_26_1();
    return;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    uint64_t v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      OUTLINED_FUNCTION_40_26(v24);
      type metadata accessor for StartCallCATs();
      v3;
      id v25 = v1;
      static CATOption.defaultMode.getter();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for PhoneCallDisplayTextCATs();
      OUTLINED_FUNCTION_57_3();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for PhoneCallCommonCATs();
      OUTLINED_FUNCTION_57_3();
      OUTLINED_FUNCTION_34_27();
      type metadata accessor for AppInfoBuilder();
      swift_allocObject();
      OUTLINED_FUNCTION_58_18();
      type metadata accessor for StartVideoCallTemplatingService();
      swift_allocObject();
      uint64_t v26 = OUTLINED_FUNCTION_50_19();
      specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)(v26, v27, v28, v29, v30, v31);
      uint64_t v32 = (void *)swift_allocObject();
      id v13 = OUTLINED_FUNCTION_29_30(v32);
      id v14 = v25;
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  os_log_type_t v37 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v33))
  {
    uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl(&dword_0, v37, v33, "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentLegacyOutput: intent is not a calling intent", v34, 2u);
    OUTLINED_FUNCTION_6();
  }
  OUTLINED_FUNCTION_26_1();
}

void CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v60 = v4;
  uint64_t v6 = v5;
  uint64_t v54 = v7;
  uint64_t v55 = v8;
  OUTLINED_FUNCTION_2();
  uint64_t v52 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  uint64_t v11 = OUTLINED_FUNCTION_19_0(v10);
  uint64_t v56 = v12;
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v11);
  uint64_t v57 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v59 = (uint64_t)&v47 - v16;
  uint64_t v58 = type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v18 = v17;
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v22 = __chkstk_darwin(v21);
  int v53 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v47 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v25);
  OUTLINED_FUNCTION_4();
  uint64_t v28 = (char *)(v27 - v26);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v6, v27 - v26, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)v0 + 224))(*(void *)v28, v60, v3);
    swift_errorRelease();
  }
  else
  {
    uint64_t v51 = v3;
    uint64_t v29 = *(void (**)(unint64_t, char *, uint64_t))(v18 + 32);
    unint64_t v49 = v24;
    uint64_t v50 = v29;
    uint64_t v30 = v58;
    v29((unint64_t)v24, v28, v58);
    uint64_t v31 = *(void *)(v52 + 264);
    uint64_t v48 = *(void *)(v52 + 272);
    uint64_t v52 = v31;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    type metadata accessor for PhoneCallNLContextProvider();
    uint64_t v32 = v59;
    static PhoneCallNLContextProvider.makeContextForHandleIntent(intent:handleIntentResponse:)();
    os_log_type_t v33 = v53;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v53, v24, v30);
    uint64_t v34 = v57;
    _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v32, v57, &demangling cache variable for type metadata for NLContextUpdate?);
    unint64_t v35 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v36 = (v20 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (*(unsigned __int8 *)(v56 + 80) + v36 + 8) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = v48;
    *(void *)(v38 + 16) = v52;
    *(void *)(v38 + 24) = v39;
    uint64_t v40 = v33;
    uint64_t v41 = v58;
    v50(v38 + v35, v40, v58);
    *(void *)(v38 + v36) = v1;
    outlined init with take of AnnotatedApp?(v34, v38 + v37, &demangling cache variable for type metadata for NLContextUpdate?);
    unint64_t v42 = (void *)(v38 + ((v14 + v37 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v43 = v51;
    *unint64_t v42 = v60;
    v42[1] = v43;
    swift_retain();
    uint64_t v44 = swift_retain();
    CallingIntentHandleIntentFlowStrategy.makeUnsupportedViews(app:intent:intentResponse:_:)(v44, v45, v46, (uint64_t (*)(void *, void))partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:));
    swift_release();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v59, &demangling cache variable for type metadata for NLContextUpdate?);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v49, v41);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *))
{
  if (a2)
  {
    v11[0] = a1;
    swift_errorRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    closure #1 in closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)(a4, v11);
    outlined consume of Result<[SAAceView], Error>(a1, 0);
  }
  char v12 = a2 & 1;
  a6(v11);
  return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v11, &demangling cache variable for type metadata for Result<Output, Error>);
}

uint64_t closure #1 in closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  void *(*v4)(void *__return_ptr);
  void *v5;
  _OWORD v7[2];
  uint64_t v8;
  void v9[4];
  void v10[5];

  TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(0);
  uint64_t v4 = *(void *(**)(void *__return_ptr))(*(void *)a1 + 208);
  uint64_t v5 = v4(v10);
  ((void (*)(void *__return_ptr, void *))v4)(v9, v5);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
  memset(v7, 0, sizeof(v7));
  uint64_t v8 = 0;
  a2[3] = type metadata accessor for AceOutput();
  a2[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(a2);
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v7, &demangling cache variable for type metadata for FlowActivity?);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:)(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:)()
{
  uint64_t v8 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = OUTLINED_FUNCTION_25_0(v1, (uint64_t)static Logger.siriPhone);
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000033, 0x800000000049B600, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v2, v3, "#CallingIntentHandleIntentFlowStrategy %s: This should not provide output.", v4, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  type metadata accessor for EmptyOutput();
  static EmptyOutput.instance.getter();
  OUTLINED_FUNCTION_6_0();
  return v5();
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[25] = v2;
  v1[26] = v0;
  v1[23] = v3;
  v1[24] = v4;
  v1[22] = v5;
  OUTLINED_FUNCTION_2();
  v1[27] = v6;
  uint64_t v7 = type metadata accessor for PhoneError();
  v1[28] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[29] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for ButtonConfigurationModel();
  v1[30] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[31] = v9;
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for OutputGenerationManifest();
  v1[34] = v10;
  OUTLINED_FUNCTION_19_0(v10);
  v1[35] = v11;
  v1[36] = OUTLINED_FUNCTION_35();
  uint64_t v12 = type metadata accessor for Locale();
  v1[37] = v12;
  OUTLINED_FUNCTION_19_0(v12);
  v1[38] = v13;
  v1[39] = OUTLINED_FUNCTION_35();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonConfigurationModel?);
  OUTLINED_FUNCTION_11_0(v14);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v15);
  v1[46] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v7 + 392) = v6;
  *(void *)(v7 + 400) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                + **(void **)(*(void *)(v0 + 208) + 176)
                + 328);
  uint64_t v4 = (uint64_t (*)(void))(*v1 + *(int *)*v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v2;
  *uint64_t v2 = v0;
  v2[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  *(void *)(v5 + 416) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 424) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[55] = v5;
  v3[56] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v6, v7, v8);
  }
  else
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    v3[57] = v9;
    *uint64_t v9 = v10;
    v9[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_35_31();
    return CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 464) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[60] = v5;
  v3[61] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v6, v7, v8);
  }
  else
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    v3[62] = v9;
    *uint64_t v9 = v10;
    v9[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_35_31();
    return CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 504) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[65] = v5;
  v3[66] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v6, v7, v8);
  }
  else
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    v3[67] = v9;
    *uint64_t v9 = v10;
    v9[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_35_31();
    return CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v6 + 544) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_11_20();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v2;
  *(void *)(v4 + 576) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (!v0) {
    *(void *)(v4 + 584) = v1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  *(void *)(v5 + 600) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 608) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_11_20();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v2;
  *(void *)(v4 + 624) = v0;
  swift_task_dealloc();
  swift_release();
  if (!v0) {
    *(void *)(v4 + 632) = v1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_11_20();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v2;
  *(void *)(v4 + 648) = v0;
  swift_task_dealloc();
  swift_release();
  if (!v0) {
    *(void *)(v4 + 656) = v1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  *(void *)(v5 + 680) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 688) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

void CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  void (*v8)(uint64_t *__return_ptr, void *);
  id v9;
  uint64_t v10;
  int *v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  void *v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  void *v33;
  void *v34;
  Swift::String v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  void *v43;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v49;
  id v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void (**v56)(uint64_t, uint64_t);
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v64;
  void *v65;
  uint64_t v67;
  void *v68;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  BOOL v77;
  void *v78;
  uint8_t *v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  unint64_t v96;
  Swift::String v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v106;
  unint64_t v107;
  id v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;

  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      uint64_t v108 = v2;
      uint64_t v111 = (id)v3;
      BOOL v112 = v0;
      uint64_t v4 = *(void *)(v0 + 360);
      uint64_t v109 = *(void *)(v0 + 240);
      uint64_t v5 = *(void *)(v0 + 208);
      uint64_t v6 = *(void **)(v0 + 200);
      uint64_t v7 = *(void **)(v0 + 192);
      type metadata accessor for SirikitDeviceState();
      uint64_t v8 = *(void (**)(uint64_t *__return_ptr, void *))(*(void *)v5 + 208);
      uint64_t v9 = v7;
      v8(&v113, v6);
      *(void *)(v112 + 376) = SirikitDeviceState.__allocating_init(from:)();
      uint64_t v10 = v112;
      OUTLINED_FUNCTION_16();
      CallingIntentHandleIntentFlowStrategy.getSpeakableAppName(app:intent:)();
      *(unsigned char *)(v112 + 736) = App.isFirstParty()();
      __swift_storeEnumTagSinglePayload(v4, 1, 1, v109);
      uint64_t v11 = (int *)[v111 code];
      switch((unint64_t)v11)
      {
        case 6uLL:
          OUTLINED_FUNCTION_31_33();
          uint64_t v12 = (void *)swift_task_alloc();
          *(void *)(v112 + 472) = v12;
          *uint64_t v12 = v112;
          v12[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
          OUTLINED_FUNCTION_11_5();
          __asm { BRAA            X1, X16 }
          return;
        case 7uLL:
          OUTLINED_FUNCTION_31_33();
          uint64_t v43 = (void *)swift_task_alloc();
          *(void *)(v112 + 512) = v43;
          *uint64_t v43 = v112;
          v43[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
          OUTLINED_FUNCTION_68_9();
          OUTLINED_FUNCTION_11_5();
          __asm { BRAA            X2, X16 }
          return;
        case 8uLL:
          uint64_t v46 = *(id *)(v112 + 200);
          static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v108, v111);

          swift_retain();
          uint64_t v47 = (void *)swift_task_alloc();
          *(void *)(v112 + 384) = v47;
          *uint64_t v47 = v112;
          v47[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
          OUTLINED_FUNCTION_11_5();
          __asm { BRAA            X3, X16 }
          return;
        case 0xAuLL:
          OUTLINED_FUNCTION_31_33();
          uint64_t v62 = (void *)swift_task_alloc();
          *(void *)(v112 + 432) = v62;
          *uint64_t v62 = v112;
          v62[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
          OUTLINED_FUNCTION_68_9();
          OUTLINED_FUNCTION_11_5();
          __asm { BRAA            X2, X16 }
          return;
        default:
          if ((int *)_INStartCallIntentResponseCodeFailureDownTimeRestrictionEnabled != v11)
          {
            if ((int *)_INStartCallIntentResponseCodeFailureScreenTimeRestrictionEnabled == v11)
            {
              OUTLINED_FUNCTION_31_33();
              uint64_t v65 = (void *)swift_task_alloc();
              *(void *)(v112 + 592) = v65;
              uint64_t *v65 = v112;
              v65[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
              OUTLINED_FUNCTION_11_5();
              __asm { BRAA            X1, X16 }
            }
            if (v11 != (int *)((char *)&dword_8 + 1))
            {
              if (v11 != &dword_C)
              {
                if (v11 == (int *)((char *)&dword_8 + 3))
                {
                  OUTLINED_FUNCTION_31_33();
                  swift_retain();
                  uint64_t v68 = (void *)swift_task_alloc();
                  *(void *)(v112 + 616) = v68;
                  void *v68 = v112;
                  v68[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
                  OUTLINED_FUNCTION_11_5();
                  __asm { BRAA            X2, X16 }
                }
                unsigned int v85 = *(void **)(v112 + 208);
                uint64_t v86 = v85[6];
                uint64_t v87 = v85[7];
                __swift_project_boxed_opaque_existential_1(v85 + 3, v86);
                (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v87 + 8))(&v113, v86, v87);
                *(void *)(v112 + 664) = SirikitDeviceState.__allocating_init(from:)();
                uint64_t v88 = (void *)swift_task_alloc();
                *(void *)(v112 + 672) = v88;
                *uint64_t v88 = v112;
                v88[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
                OUTLINED_FUNCTION_11_5();
                __asm { BRAA            X2, X16 }
              }
              OUTLINED_FUNCTION_31_33();
              swift_retain();
              unsigned int v82 = (void *)swift_task_alloc();
              *(void *)(v112 + 640) = v82;
              void *v82 = v112;
              v82[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
              OUTLINED_FUNCTION_11_5();
              __asm { BRAA            X2, X16 }
            }
            if (one-time initialization token for siriPhone == -1) {
              goto LABEL_56;
            }
            goto LABEL_73;
          }
          uint64_t v50 = [v108 contacts];
          if (!v50)
          {
            uint64_t v71 = _swiftEmptyArrayStorage;
            goto LABEL_69;
          }
          uint64_t v51 = v50;
          type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
          uint64_t v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v113 = (uint64_t)_swiftEmptyArrayStorage;
          if (v52 >> 62)
          {
            swift_bridgeObjectRetain();
            int v53 = _CocoaArrayWrapper.endIndex.getter();
            if (v53) {
              goto LABEL_30;
            }
          }
          else
          {
            int v53 = *(void *)((char *)&dword_10 + (v52 & 0xFFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain();
            if (v53)
            {
LABEL_30:
              uint64_t v111 = (id)type metadata accessor for PhonePerson(0);
              if (v53 >= 1)
              {
                uint64_t v54 = 0;
                uint64_t v55 = (void *)(v112 + 16);
                uint64_t v107 = v52 & 0xC000000000000001;
                uint64_t v56 = (void (**)(uint64_t, uint64_t))(*(void *)(v112 + 304) + 8);
                uint64_t v110 = v52;
                do
                {
                  if (v107) {
                    uint64_t v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    uint64_t v57 = *(id *)(v52 + 8 * v54 + 32);
                  }
                  uint64_t v58 = v57;
                  uint64_t v59 = *(void *)(v112 + 312);
                  uint64_t v60 = *(void *)(v112 + 296);
                  static Device.current.getter();
                  __swift_project_boxed_opaque_existential_1(v55, *(void *)(v112 + 40));
                  dispatch thunk of DeviceState.siriLocale.getter();
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
                  uint64_t v61 = static PhonePerson.make(phonePerson:options:locale:)(v58, 0, v59);
                  (*v56)(v59, v60);

                  if (v61)
                  {
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                    if (*(void *)((char *)&dword_10 + (v113 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v113 & 0xFFFFFFFFFFFFFF8)) >> 1) {
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    }
                    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                    specialized Array._endMutation()();
                  }
                  ++v54;
                  uint64_t v52 = v110;
                }
                while (v53 != v54);
                swift_bridgeObjectRelease();
                uint64_t v10 = v112;
                uint64_t v71 = (void *)v113;
                goto LABEL_68;
              }
              __break(1u);
LABEL_73:
              swift_once();
LABEL_56:
              uint64_t v72 = *(void **)(v112 + 200);
              uint64_t v73 = type metadata accessor for Logger();
              __swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
              uint64_t v74 = v72;
              uint64_t v75 = Logger.logObject.getter();
              uint64_t v76 = static os_log_type_t.error.getter();
              uint64_t v77 = os_log_type_enabled(v75, v76);
              char v78 = *(void **)(v112 + 200);
              if (v77)
              {
                uint64_t v79 = (uint8_t *)swift_slowAlloc();
                uint64_t v113 = swift_slowAlloc();
                *(_DWORD *)uint64_t v79 = 136315138;
                *(void *)(v112 + 144) = [v111 code];
                type metadata accessor for INStartCallIntentResponseCode(0);
                uint64_t v80 = String.init<A>(describing:)();
                *(void *)(v112 + 152) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v81, &v113);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();

                _os_log_impl(&dword_0, v75, v76, "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentIntentOutput: the dialog for %s hasn't been migrated to Response Framework.", v79, 0xCu);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_6();
                OUTLINED_FUNCTION_6();
              }
              else
              {
              }
              unint64_t v91 = *(void *)(v112 + 368);
              uint64_t v92 = *(void *)(v112 + 360);
              uint64_t v93 = *(void **)(v112 + 232);
              uint64_t v94 = *(void **)(v112 + 200);
              uint64_t v95 = *(void **)(v112 + 192);
              OUTLINED_FUNCTION_55_16();
              _StringGuts.grow(_:)(57);
              uint64_t v96 = v114;
              *(void *)(v112 + 120) = v113;
              *(void *)(v112 + 128) = v96;
              v97._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
              v97._object = (void *)0x800000000049B6F0;
              String.append(_:)(v97);
              *(void *)(v112 + 168) = [v111 code];
              type metadata accessor for INStartCallIntentResponseCode(0);
              _print_unlocked<A, B>(_:_:)();
              v98._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
              v98._object = (void *)0x800000000049B710;
              String.append(_:)(v98);
              uint64_t v99 = *(void *)(v112 + 128);
              *uint64_t v93 = *(void *)(v112 + 120);
              v93[1] = v99;
              v93[2] = 0xD000000000000047;
              v93[3] = 0x800000000049B670;
              v93[4] = 0xD00000000000003BLL;
              void v93[5] = 0x800000000049A440;
              v93[6] = 150;
              swift_storeEnumTagMultiPayload();
              _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_11((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
              swift_allocError();
              PhoneError.logged()(v100);
              _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_7((uint64_t)v93, (void (*)(void))type metadata accessor for PhoneError);
              swift_willThrow();

              swift_release();
              outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v92, &demangling cache variable for type metadata for ButtonConfigurationModel?);
              outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v91, &demangling cache variable for type metadata for SpeakableString?);
              goto LABEL_17;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v71 = _swiftEmptyArrayStorage;
LABEL_68:
          swift_bridgeObjectRelease();
LABEL_69:
          uint64_t v101 = *(id *)(v10 + 192);
          specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
          *(void *)(v10 + 552) = v102;
          type metadata accessor for PhonePersonList.Builder();
          uint64_t v103 = swift_allocObject();
          *(void *)(v103 + 16) = _swiftEmptyArrayStorage;
          swift_beginAccess();
          *(void *)(v103 + 16) = v71;
          swift_bridgeObjectRelease();
          type metadata accessor for PhonePersonList();
          swift_allocObject();
          *(void *)(v10 + 560) = PhonePersonList.init(builder:)(v103);
          os_log_type_t v104 = (void *)swift_task_alloc();
          *(void *)(v10 + 568) = v104;
          *os_log_type_t v104 = v10;
          v104[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
          OUTLINED_FUNCTION_11_5();
          __asm { BRAA            X3, X16 }
          return;
      }
    }
    uint64_t v26 = one-time initialization token for siriPhone;
    uint64_t v27 = *(id *)(v0 + 192);
    if (v26 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    uint64_t v29 = OUTLINED_FUNCTION_25_0(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v29, v30, "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentIntentOutput: unexpected intentResponse type", v31, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v32 = *(void **)(v0 + 232);
    uint64_t v34 = *(void **)(v0 + 192);
    os_log_type_t v33 = *(void **)(v0 + 200);

    OUTLINED_FUNCTION_55_16();
    _StringGuts.grow(_:)(58);
    v35._uint64_t countAndFlagsBits = 0x6552746E65746E69;
    v35._object = (void *)0xEF3D65736E6F7073;
    String.append(_:)(v35);
    *(void *)(v0 + 160) = v33;
    swift_getAssociatedTypeWitness();
    unint64_t v36 = v33;
    swift_getWitnessTable();
    v37._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = 0xD000000000000029;
    v38._object = (void *)0x800000000049B6C0;
    String.append(_:)(v38);
    uint64_t v39 = v114;
    *uint64_t v32 = v113;
    v32[1] = v39;
    v32[2] = 0xD000000000000047;
    uint64_t v32[3] = 0x800000000049B670;
    v32[4] = 0xD00000000000003BLL;
    v32[5] = 0x800000000049A440;
    OUTLINED_FUNCTION_62_17(103);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_11((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    OUTLINED_FUNCTION_61_13();
    PhoneError.logged()(v40);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_7((uint64_t)v32, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    uint64_t v16 = OUTLINED_FUNCTION_25_0(v15, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentIntentOutput: unexpected intent type", v18, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v19 = *(void **)(v0 + 232);
    uint64_t v20 = *(void **)(v0 + 192);

    OUTLINED_FUNCTION_55_16();
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease();
    uint64_t v113 = 0x3D746E65746E69;
    uint64_t v114 = 0xE700000000000000;
    *(void *)(v0 + 136) = v20;
    swift_getAssociatedTypeWitness();
    uint64_t v21 = v20;
    swift_getWitnessTable();
    v22._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0xD000000000000021;
    v23._object = (void *)0x800000000049B640;
    String.append(_:)(v23);
    uint64_t v24 = v114;
    *uint64_t v19 = v113;
    v19[1] = v24;
    long long v19[2] = 0xD000000000000047;
    void v19[3] = 0x800000000049B670;
    v19[4] = 0xD00000000000003BLL;
    v19[5] = 0x800000000049A440;
    OUTLINED_FUNCTION_62_17(99);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_11((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    OUTLINED_FUNCTION_61_13();
    PhoneError.logged()(v25);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_7((uint64_t)v19, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
  }
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_11_5();
  __asm { BRAA            X1, X16 }
}

#error "3576D4: call analysis failed (funcsize=165)"

#error "357B5C: call analysis failed (funcsize=145)"

#error "357FE4: call analysis failed (funcsize=145)"

#error "358470: call analysis failed (funcsize=145)"

#error "3587E0: call analysis failed (funcsize=78)"

#error "358A14: call analysis failed (funcsize=78)"

#error "358C64: call analysis failed (funcsize=78)"

#error "358EB4: call analysis failed (funcsize=78)"

#error "359110: call analysis failed (funcsize=88)"

uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  uint64_t v16 = *(void **)(v14 + 696);
  uint64_t v17 = *(void *)(v14 + 264);
  uint64_t v18 = *(void **)(v14 + 200);

  swift_release();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_7(v17, (void (*)(void))type metadata accessor for ButtonConfigurationModel);
  uint64_t v19 = OUTLINED_FUNCTION_24_35();
  v20(v19);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v18, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_28_1();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  uint64_t v17 = *(void **)(v14 + 696);
  uint64_t v18 = *(void **)(v14 + 200);

  swift_release();
  uint64_t v19 = OUTLINED_FUNCTION_24_35();
  v20(v19);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v16, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_28_1();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_44_24(*(void **)(v16 + 392));

  swift_release();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_44_24(*(void **)(v16 + 440));

  swift_release();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_44_24(*(void **)(v16 + 480));

  swift_release();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_44_24(*(void **)(v16 + 520));

  swift_release();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_22_48();
  swift_release();

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  uint64_t v15 = *(void *)(v14 + 368);
  uint64_t v16 = *(void *)(v14 + 360);
  uint64_t v17 = *(void **)(v14 + 200);

  swift_release();
  swift_release();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v16, &demangling cache variable for type metadata for ButtonConfigurationModel?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v15, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_1_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeUnsupportedViews(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void))
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = OUTLINED_FUNCTION_25_0(v5, (uint64_t)static Logger.siriPhone);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "#CallingIntentHandleIntentFlowStrategy makeUnsupportedViews: returning empty views", v8, 2u);
    OUTLINED_FUNCTION_6();
  }

  return a4(_swiftEmptyArrayStorage, 0);
}

uint64_t CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 106) = v2;
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v0;
  *(void *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v5;
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v7;
  uint64_t v8 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_11_0(v8);
  *(void *)(v1 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  Swift::Bool v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t, BOOL);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[7];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  v0[9] = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
  char v2 = *(void **)(v1 + 176);
  uint64_t v3 = App.isFirstParty()();
  uint64_t v7 = (uint64_t (*)(uint64_t, BOOL))(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                         + *v2
                                                         + 296)
                                             + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                        + *v2
                                                        + 296));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:);
  uint64_t v5 = v0[6];
  return v7(v5, !v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 88) = v4;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  if (*(unsigned char *)(v0 + 106) == 1) {
    *(unsigned char *)(v0 + 105) = 1;
  }
  else {
    *(unsigned char *)(v0 + 104) = 0;
  }
  uint64_t v1 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v3 = v2;
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = *(id *)(v0 + 72);
  UUID.init()();
  ButtonConfigurationModel.init(label:action:id:)(v1, v3, v4);

  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v6();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

void CallingIntentHandleIntentFlowStrategy.getSpeakableAppName(app:intent:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  uint64_t v24 = v4;
  if (App.isFirstParty()())
  {
    swift_getAssociatedTypeWitness();
    uint64_t v12 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 8) + 16);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    uint64_t v14 = swift_checkMetadataState();
    uint64_t v15 = v13(v14, v12);
    uint64_t v16 = v0[6];
    uint64_t v17 = v0[7];
    __swift_project_boxed_opaque_existential_1(v0 + 3, v16);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v25, v16, v17);
    uint64_t v2 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(v2, v15, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    swift_retain();
  }
  uint64_t v18 = v0[41];
  uint64_t v19 = v0[42];
  __swift_project_boxed_opaque_existential_1(v0 + 38, v18);
  (*(void (**)(void *__return_ptr))(*v0 + 208))(v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16))(v2, v11, v18, v19);
  uint64_t v21 = v20;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if (v21)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    uint64_t v22 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v24, 0, 1, v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v24, 1, 1, v23);
  }
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t *CallingIntentHandleIntentFlowStrategy.makeIntentExecutionBehavior(app:intent:completion:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = v3[6];
  uint64_t v5 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 152))(v35, v4, v5);
  uint64_t v6 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  uint64_t v7 = App.appIdentifier.getter();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v6 + 16))(v36, v7);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  CallingIntent.populateCallIntentMetadata(resolvedApp:)((uint64_t)v36, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 120))(v12);
  uint64_t v15 = v14;
  swift_release();
  if (!v15) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8);
  unint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(AssociatedTypeWitness, v16);
  if (!v17)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  unint64_t v18 = v17;
  if (v17 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
  if (!*(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_5:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v18 & 0xC000000000000001) == 0);
  if ((v18 & 0xC000000000000001) != 0) {
    id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v19 = *(id *)(v18 + 32);
  }
  id v20 = v19;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = OUTLINED_FUNCTION_25_0(v21, (uint64_t)static Logger.siriPhone);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "#CallingIntentHandleIntentFlowStrategy: overwriting intent before going to Intent extension", v24, 2u);
    OUTLINED_FUNCTION_6();
  }

  Class isa = INPerson.mutableCopyOrCrash()().super.isa;
  id v26 = objc_allocWithZone((Class)INPersonHandle);
  id v27 = @nonobjc INPersonHandle.init(value:type:)(v13, v15, 2);
  [(objc_class *)isa setPersonHandle:v27];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v28 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v28 + 16) = xmmword_46A030;
  *(void *)(v28 + 32) = isa;
  v35[0] = v28;
  specialized Array._endMutation()();
  uint64_t v29 = v35[0];
  uint64_t v30 = v20;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v32 = isa;
  v31(v29, AssociatedTypeWitness, v16);

  swift_bridgeObjectRelease();
LABEL_16:
  type metadata accessor for SiriKitIntentExecutionBehavior();
  static SiriKitIntentExecutionBehavior.standard()();
  a3();
  swift_release();
  return outlined release of AnnotatedApp?(v36);
}

void *CallingIntentHandleIntentFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + direct field offset for CallingIntentHandleIntentFlowStrategy.cancellable) = 0;
  outlined init with copy of SignalProviding(a3, (uint64_t)v26);
  outlined init with copy of SignalProviding(a7, (uint64_t)v25);
  outlined init with copy of SignalProviding(a9, (uint64_t)v24);
  outlined init with copy of SignalProviding(a10, (uint64_t)v23);
  outlined init with copy of SignalProviding(a11, (uint64_t)v22);
  unint64_t v17 = CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(a1, a2, (uint64_t)v26, a4, a5, a6, (uint64_t)v25, a8, (uint64_t)v24, (uint64_t)v23, v22);
  __swift_destroy_boxed_opaque_existential_1(a11);
  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v17;
}

uint64_t sub_35AE74()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v12;
  v11[1] = protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy;
  return closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t CallingIntentHandleIntentFlowStrategy.__ivar_destroyer()
{
  return swift_release();
}

uint64_t CallingIntentHandleIntentFlowStrategy.deinit()
{
  uint64_t v0 = CallingIntentBaseFlowStrategy.deinit();
  swift_release();
  return v0;
}

uint64_t CallingIntentHandleIntentFlowStrategy.__deallocating_deinit()
{
  CallingIntentHandleIntentFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = type metadata accessor for CallingIntentHandleIntentFlowStrategy();

  return a8(a1, a2, a3, a4, a5, v14, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 312))();
}

uint64_t protocol witness for IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CallingIntentHandleIntentFlowStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CallingIntentHandleIntentFlowStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:) in conformance CallingIntentHandleIntentFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CallingIntentHandleIntentFlowStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:) in conformance CallingIntentHandleIntentFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 376))();
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_7(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t base witness table accessor for IntentExtensionCommunicating in CallingIntentHandleIntentFlowStrategy<A>()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for CallingIntentHandleIntentFlowStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CallingIntentHandleIntentFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_35B408()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_19_0(v7);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  uint64_t v10 = type metadata accessor for NLContextUpdate();
  if (!__swift_getEnumTagSinglePayload(v0 + v9, 1, v10)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v9, v10);
  }
  swift_release();
  OUTLINED_FUNCTION_26_1();
  return _swift_deallocObject(v11, v12, v13);
}

uint64_t partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_19_0(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = (*(void *)(v8 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_19_0(v10);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = (v9 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = *(void *)(v2 + v9);
  unint64_t v17 = *(void (**)(uint64_t *))(v2 + ((*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8));

  return closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)(a1, v4, v2 + v7, v16, v2 + v15, v17);
}

void specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for CATOption();
  uint64_t v17 = OUTLINED_FUNCTION_11_0(v16);
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_4();
  *(void *)((char *)v1 + direct field offset for StartCallCatTemplatingService.startCallCatFamily) = v13;
  *(void *)((char *)v1 + direct field offset for StartCallCatTemplatingService.unsupportedFlowCats) = v7;
  *(void *)((char *)v1 + direct field offset for StartCallCatTemplatingService.operationManager) = v3;
  outlined init with copy of SignalProviding(v15, (uint64_t)v19);
  type metadata accessor for StartCallCATs();
  swift_retain();
  swift_retain();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v18 = CATWrapper.__allocating_init(options:globals:)();
  swift_retain();
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0x6C61437472617473, 0xEF3256736375446CLL, v19, v11, v9, v5, 0, 0, 0, 0, v18, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v15);
  OUTLINED_FUNCTION_26_1();
}

uint64_t objectdestroy_22Tm()
{
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void partial apply for closure #3 in CallingIntentHandleIntentFlowStrategy.makeLegacyFailureHandlingIntentOutput(app:intent:intentResponse:_:)()
{
}

uint64_t sub_35BE94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_11(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_94()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_6_81()
{
  return *(void *)(v0 + 176);
}

uint64_t OUTLINED_FUNCTION_7_76(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = a11;
  return specialized Array._endMutation()();
}

void *OUTLINED_FUNCTION_8_82()
{
  return __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 208) + 184), *(void *)(*(void *)(v0 + 208) + 208));
}

void OUTLINED_FUNCTION_13_50(uint64_t a1@<X8>)
{
  *(void *)(v1 + 696) = a1;
}

uint64_t OUTLINED_FUNCTION_15_51()
{
  __swift_getEnumTagSinglePayload(v1, 1, v2);
  return *(void *)(v0 + 320);
}

uint64_t OUTLINED_FUNCTION_16_51()
{
  return *(void *)(v0 + 176);
}

uint64_t OUTLINED_FUNCTION_20_40(uint64_t result)
{
  *(void *)(v1 + 728) = result;
  return result;
}

void OUTLINED_FUNCTION_22_48()
{
  uint64_t v2 = *(void **)(v0 + 192);
}

uint64_t OUTLINED_FUNCTION_23_39()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 184), *(void *)(v0 + 208));
  return type metadata accessor for PhoneSnippetDataModels();
}

uint64_t OUTLINED_FUNCTION_24_35()
{
  return *(void *)(v0 + 288);
}

uint64_t OUTLINED_FUNCTION_26_34(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = 1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_28_34()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  return outlined init with take of AnnotatedApp?(v0, v1, v3);
}

id OUTLINED_FUNCTION_29_30(void *a1)
{
  a1[2] = v4;
  a1[3] = v1;
  a1[4] = v3;
  a1[5] = v2;
  uint64_t v7 = *(void *)(v5 - 128);
  a1[6] = *(void *)(v5 - 144);
  a1[7] = v7;
  return v3;
}

uint64_t OUTLINED_FUNCTION_34_27()
{
  return CATWrapper.__allocating_init(options:globals:)();
}

void OUTLINED_FUNCTION_38_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 720) = a11;
}

uint64_t OUTLINED_FUNCTION_42_26(uint64_t result)
{
  *(void *)(v1 + 712) = result;
  return result;
}

void OUTLINED_FUNCTION_44_24(void *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_46_21()
{
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 264);
  return outlined init with take of ButtonConfigurationModel(v2, v3);
}

uint64_t OUTLINED_FUNCTION_48_23(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return outlined init with take of ButtonConfigurationModel(v3, (uint64_t)a1 + v2);
}

uint64_t OUTLINED_FUNCTION_50_19()
{
  return v0 - 120;
}

uint64_t OUTLINED_FUNCTION_58_18()
{
  return 0;
}

unint64_t OUTLINED_FUNCTION_60_14()
{
  return StackedButtonsModel.responseViewId.getter(v0, 1);
}

uint64_t OUTLINED_FUNCTION_61_13()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_62_17@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_67_11(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_68_9()
{
  return *(void *)(v0 + 368);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional __swiftcall AddCallParticipantCATs.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATs.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xB) {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional)11;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional)v3;
  }
}

unint64_t AddCallParticipantCATs.Properties.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000025;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000024;
      break;
    case 4:
    case 5:
    case 6:
      unint64_t result = 0xD000000000000030;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000028;
      break;
    case 9:
      unint64_t result = 0xD000000000000027;
      break;
    case 10:
      unint64_t result = 0xD000000000000045;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATs.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATs.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATs.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional *a2@<X8>)
{
  result.int value = AddCallParticipantCATs.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATs.Properties@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AddCallParticipantCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v1 + 16) = xmmword_467710;
  *(void *)(v1 + 32) = 0xD000000000000010;
  *(void *)(v1 + 40) = 0x80000000004938E0;
  if (v0)
  {
    uint64_t v2 = type metadata accessor for DialogPerson();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_11_61();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.confirmParticipant(contactToConfirm:));
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_95(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_19_2();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_72(v6);
  *uint64_t v7 = v8;
  v7[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_130_1();
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v12;

  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_19_2();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_43_12(v6);
  *uint64_t v7 = v8;
  v7[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  uint64_t v9 = OUTLINED_FUNCTION_32_0(0xD000000000000025);
  return v10(v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v1 + 16) = xmmword_467710;
  *(void *)(v1 + 32) = 0xD000000000000010;
  *(void *)(v1 + 40) = 0x80000000004938E0;
  if (v0)
  {
    uint64_t v2 = type metadata accessor for DialogPerson();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_88();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.confirmParticipant(contactToConfirm:));
}

uint64_t AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_1_61((__n128 *)v7, (__n128)xmmword_467720);
  if (a1)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_33_12();
  }
  *(void *)(v7 + 48) = v9;
  *(void *)(v7 + 72) = v8;
  *(void *)(v7 + 80) = 0xD000000000000011;
  OUTLINED_FUNCTION_49_0((uint64_t)"unsupportedReason");
  outlined init with copy of SpeakableString?(a2, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v2, 1, v10) == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v10;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 96));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v11 + 32))();
    swift_retain();
  }
  OUTLINED_FUNCTION_11_61();
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[6] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void (*v10)(void);
  void *v11;
  uint64_t (*v13)(void);
  uint64_t v14;

  OUTLINED_FUNCTION_40_0();
  uint64_t v2 = v1[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  v1[7] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_2_66((__n128 *)v3, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }
  else
  {
    *(void *)(v3 + 56) = 0;
    *(void *)(v3 + 64) = 0;
  }
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[4];
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = 0xD000000000000011;
  *(void *)(v3 + 88) = 0x8000000000492220;
  outlined init with copy of SpeakableString?(v6, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  uint64_t v8 = OUTLINED_FUNCTION_37_2(v7);
  uint64_t v9 = v1[6];
  if (v8 == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v9, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v3 + 96) = 0u;
    *(_OWORD *)(v3 + 112) = 0u;
  }
  else
  {
    *(void *)(v3 + 120) = v0;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 96));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_59();
    v10();
    swift_retain();
  }
  uint64_t v11 = (void *)OUTLINED_FUNCTION_9_0();
  v1[8] = v11;
  *uint64_t v11 = v1;
  v11[1] = AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:);
  OUTLINED_FUNCTION_23_13();
  return v13();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void (*v10)(void);
  void *v11;
  uint64_t v12;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;

  OUTLINED_FUNCTION_40_0();
  uint64_t v2 = v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  v1[6] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_2_66((__n128 *)v3, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }
  else
  {
    *(void *)(v3 + 56) = 0;
    *(void *)(v3 + 64) = 0;
  }
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[3];
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = 0xD000000000000011;
  *(void *)(v3 + 88) = 0x8000000000492220;
  outlined init with copy of SpeakableString?(v6, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  uint64_t v8 = OUTLINED_FUNCTION_37_2(v7);
  uint64_t v9 = v1[5];
  if (v8 == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v9, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v3 + 96) = 0u;
    *(_OWORD *)(v3 + 112) = 0u;
  }
  else
  {
    *(void *)(v3 + 120) = v0;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 96));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_59();
    v10();
    swift_retain();
  }
  uint64_t v11 = (void *)OUTLINED_FUNCTION_9_0();
  v1[7] = v11;
  *uint64_t v11 = v1;
  v11[1] = AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:);
  uint64_t v12 = OUTLINED_FUNCTION_11_6(0xD000000000000025);
  return v14(v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v9, v10, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v7 + 8);
    return v12(v3);
  }
}

void AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_28();
  a17 = v19;
  a18 = v20;
  uint64_t v22 = v21;
  OUTLINED_FUNCTION_102_3();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v24 = OUTLINED_FUNCTION_11_0(v23);
  __chkstk_darwin(v24);
  id v26 = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v27 = OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_1_61((__n128 *)v27, (__n128)xmmword_467720);
  if (v18)
  {
    uint64_t v28 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v29 = v18;
  }
  else
  {
    uint64_t v28 = OUTLINED_FUNCTION_37_15();
  }
  *(void *)(v27 + 48) = v29;
  *(void *)(v27 + 72) = v28;
  *(void *)(v27 + 80) = 0xD000000000000011;
  *(void *)(v27 + 88) = 0x8000000000492220;
  outlined init with copy of SpeakableString?(v22, (uint64_t)v26, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v30 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v30) == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v26, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v27 + 96) = 0u;
    *(_OWORD *)(v27 + 112) = 0u;
  }
  else
  {
    *(void *)(v27 + 120) = v30;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v27 + 96));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v31 + 32))();
    swift_retain();
  }
  OUTLINED_FUNCTION_88();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24();
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_1_61(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:));
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(46);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_1_61(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:));
}

uint64_t AddCallParticipantCATs.errorNoTargetCall(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t AddCallParticipantCATs.errorNoTargetCall()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(v1, 0xD000000000000024, 0x800000000048DD80, _swiftEmptyArrayStorage);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v4)(unint64_t, unint64_t, void *);
  uint64_t v5;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v4(0xD000000000000024, 0x800000000048DD80, _swiftEmptyArrayStorage);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:completion:)()
{
  OUTLINED_FUNCTION_28();
  unint64_t v1 = v0;
  char v3 = v2;
  unint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_23(v6, (__n128)xmmword_46A250);
  if (v5)
  {
    uint64_t v7 = type metadata accessor for PhonePerson(0);
    unint64_t v8 = v5;
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_33_12();
  }
  v6[3].n128_u64[0] = v8;
  v6[4].n128_u64[1] = v7;
  v6[5].n128_u64[0] = 0xD000000000000018;
  OUTLINED_FUNCTION_49_0((uint64_t)"shouldIncludeHandleLabel");
  v6[6].n128_u8[0] = v3 & 1;
  OUTLINED_FUNCTION_74_8();
  v6[7].n128_u64[1] = v9;
  v6[8].n128_u64[0] = v10;
  v6[8].n128_u64[1] = 0xEB000000006C6C61;
  if (v1)
  {
    uint64_t v11 = type metadata accessor for PhoneCallRecord(0);
    unint64_t v12 = v1;
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_34();
    v6[9].n128_u64[1] = 0;
    v6[10].n128_u64[0] = 0;
  }
  v6[9].n128_u64[0] = v12;
  v6[10].n128_u64[1] = v11;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_11_61();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(unsigned char *)(v5 + 72) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v11 = v1;
  OUTLINED_FUNCTION_40_0();
  uint64_t v2 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = (__n128 *)OUTLINED_FUNCTION_24_3();
  v0[6] = v3;
  OUTLINED_FUNCTION_23_23(v3, (__n128)xmmword_46A250);
  if (v2) {
    type metadata accessor for PhonePerson(0);
  }
  else {
    OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_167_0();
  unint64_t v4 = v0[4];
  v3[3].n128_u64[0] = v5;
  OUTLINED_FUNCTION_47_12(v6, (uint64_t)"shouldIncludeHandleLabel");
  uint64_t v7 = OUTLINED_FUNCTION_15_28((uint64_t)&type metadata for Bool);
  if (v4)
  {
    uint64_t v7 = type metadata accessor for PhoneCallRecord(v7);
  }
  else
  {
    v3[9].n128_u64[1] = 0;
    v3[10].n128_u64[0] = 0;
  }
  v3[9].n128_u64[0] = v4;
  v3[10].n128_u64[1] = v7;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  unint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  *unint64_t v8 = v0;
  v8[1] = AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_30_4();
  return v9();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *unint64_t v4 = v3;
  unint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_29_0();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_40_0();
  char v3 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v4 = (__n128 *)OUTLINED_FUNCTION_24_3();
  v0[5] = v4;
  OUTLINED_FUNCTION_23_23(v4, (__n128)xmmword_46A250);
  if (v3) {
    type metadata accessor for PhonePerson(0);
  }
  else {
    OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_167_0();
  unint64_t v5 = v0[3];
  v4[3].n128_u64[0] = v6;
  OUTLINED_FUNCTION_47_12(v7, (uint64_t)"shouldIncludeHandleLabel");
  unint64_t v8 = OUTLINED_FUNCTION_15_28((uint64_t)&type metadata for Bool);
  if (v5)
  {
    unint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }
  else
  {
    v4[9].n128_u64[1] = 0;
    v4[10].n128_u64[0] = 0;
  }
  v4[9].n128_u64[0] = v5;
  v4[10].n128_u64[1] = v8;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  unint64_t v9 = (void *)swift_task_alloc();
  v0[6] = v9;
  *unint64_t v9 = v0;
  v9[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  unint64_t v10 = OUTLINED_FUNCTION_26_2(v1 + 24);
  return v11(v10);
}

{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_28();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_23(v7, (__n128)xmmword_46A250);
  if (v6) {
    type metadata accessor for PhonePerson(0);
  }
  else {
    OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_167_0();
  v7[3].n128_u64[0] = v8;
  v7[4].n128_u64[1] = v9;
  v7[5].n128_u64[0] = v0;
  v7[5].n128_u64[1] = 0x80000000004964B0;
  v7[6].n128_u8[0] = v4 & 1;
  OUTLINED_FUNCTION_74_8();
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = v11;
  v7[8].n128_u64[1] = 0xEB000000006C6C61;
  if (v2)
  {
    unint64_t v12 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v13 = v2;
  }
  else
  {
    unint64_t v12 = OUTLINED_FUNCTION_34();
    v7[9].n128_u64[1] = 0;
    v7[10].n128_u64[0] = 0;
  }
  v7[9].n128_u64[0] = v13;
  v7[10].n128_u64[1] = v12;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a2;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_35_32(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for DialogLocationAddress();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:));
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_95(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x6E6F697461636F6CLL);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x6E6F697461636F6CLL);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(48);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_35_32(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for DialogLocationAddress();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:));
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:completion:)()
{
  OUTLINED_FUNCTION_28();
  char v2 = v1;
  unint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_23_23(v5, (__n128)xmmword_467720);
  if (v4)
  {
    type metadata accessor for PhonePerson(0);
    unint64_t v6 = v4;
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
  }
  v5[3].n128_u64[0] = v6;
  OUTLINED_FUNCTION_167_0();
  v5[4].n128_u64[1] = v7;
  v5[5].n128_u64[0] = v0;
  OUTLINED_FUNCTION_49_0((uint64_t)"shouldIncludeHandleLabel");
  v5[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[6].n128_u8[0] = v2 & 1;
  swift_retain();
  OUTLINED_FUNCTION_11_61();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:));
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = OUTLINED_FUNCTION_95(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  uint64_t v5 = OUTLINED_FUNCTION_17_22(v4, 0x7069636974726170);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhonePerson(v5);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v0 + 64);
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 88) = 0x80000000004964B0;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v6;
  OUTLINED_FUNCTION_24_4(v5);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_130_1();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467720;
  char v6 = OUTLINED_FUNCTION_17_22(v5, 0x7069636974726170);
  if (v3)
  {
    char v6 = type metadata accessor for PhonePerson(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  uint64_t v7 = *(unsigned char *)(v0 + 56);
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 88) = 0x80000000004964B0;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v7;
  OUTLINED_FUNCTION_24_4(v6);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  uint64_t v11 = OUTLINED_FUNCTION_32_0(v2 + 24);
  return v12(v11);
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:));
}

{
  unint64_t v2;
  __n128 *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_23_23(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhonePerson(0);
    char v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_33_12();
  }
  v4[3].n128_u64[0] = v6;
  v4[4].n128_u64[1] = v5;
  v4[5].n128_u64[0] = 0xD000000000000018;
  OUTLINED_FUNCTION_49_0((uint64_t)"shouldIncludeHandleLabel");
  v4[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v4[6].n128_u8[0] = a2 & 1;
  swift_retain();
  OUTLINED_FUNCTION_54_11();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_1_61(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorSelfAdd(currentCall:));
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(31);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_1_61(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.errorSelfAdd(currentCall:));
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:completion:)()
{
  OUTLINED_FUNCTION_28();
  char v1 = v0;
  unint64_t v3 = v2;
  unint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_26_20(v6, (__n128)xmmword_46A250);
  if (v5)
  {
    uint64_t v7 = type metadata accessor for PhoneCallInvite(0);
    unint64_t v8 = v5;
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_33_12();
  }
  v6[3].n128_u64[0] = v8;
  v6[4].n128_u64[1] = v7;
  v6[5].n128_u64[0] = 0x656369766564;
  v6[5].n128_u64[1] = 0xE600000000000000;
  if (v3)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
    unint64_t v10 = v3;
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_34();
    v6[6].n128_u64[1] = 0;
    v6[7].n128_u64[0] = 0;
  }
  v6[6].n128_u64[0] = v10;
  v6[7].n128_u64[1] = v9;
  v6[8].n128_u64[0] = 0xD000000000000015;
  v6[8].n128_u64[1] = 0x80000000004964D0;
  v6[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[9].n128_u8[0] = v1 & 1;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_11_61();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 72) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v12 = v1;
  OUTLINED_FUNCTION_40_0();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 48) = v3;
  OUTLINED_FUNCTION_26_20(v3, (__n128)xmmword_46A250);
  if (v2)
  {
    uint64_t v4 = type metadata accessor for PhoneCallInvite(0);
    uint64_t v5 = v2;
  }
  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_22_23();
  }
  unint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = OUTLINED_FUNCTION_32_14(v4, v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v3[6].n128_u64[1] = 0;
    v3[7].n128_u64[0] = 0;
  }
  unsigned __int8 v8 = *(unsigned char *)(v0 + 72);
  v3[6].n128_u64[0] = v6;
  v3[8].n128_u64[1] = 0x80000000004964D0;
  v3[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v3[9].n128_u8[0] = v8;
  OUTLINED_FUNCTION_27_18(v7);
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v9;
  *uint64_t v9 = v0;
  v9[1] = AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:);
  OUTLINED_FUNCTION_30_4();
  return v10();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *unint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_29_0();
  uint64_t v14 = v2;
  OUTLINED_FUNCTION_40_0();
  unint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 40) = v4;
  OUTLINED_FUNCTION_26_20(v4, (__n128)xmmword_46A250);
  if (v3)
  {
    uint64_t v5 = type metadata accessor for PhoneCallInvite(0);
    unint64_t v6 = v3;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  unsigned __int8 v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    unsigned __int8 v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v4[6].n128_u64[1] = 0;
    v4[7].n128_u64[0] = 0;
  }
  uint64_t v9 = *(unsigned char *)(v0 + 64);
  v4[6].n128_u64[0] = v7;
  v4[8].n128_u64[1] = 0x80000000004964D0;
  v4[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v4[9].n128_u8[0] = v9;
  OUTLINED_FUNCTION_27_18(v8);
  swift_retain();
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v10;
  *unint64_t v10 = v0;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  uint64_t v11 = OUTLINED_FUNCTION_26_2(v1 + 19);
  return v12(v11);
}

{
  char v0;
  char v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __n128 *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v6 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_26_20(v6, (__n128)xmmword_46A250);
  if (v5)
  {
    uint64_t v7 = type metadata accessor for PhoneCallInvite(0);
    unsigned __int8 v8 = v5;
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_37_15();
  }
  v6[3].n128_u64[0] = v8;
  v6[4].n128_u64[1] = v7;
  v6[5].n128_u64[0] = 0x656369766564;
  v6[5].n128_u64[1] = 0xE600000000000000;
  if (v3)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
    unint64_t v10 = v3;
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_34();
    v6[6].n128_u64[1] = 0;
    v6[7].n128_u64[0] = 0;
  }
  v6[6].n128_u64[0] = v10;
  v6[7].n128_u64[1] = v9;
  v6[8].n128_u64[0] = 0xD000000000000015;
  v6[8].n128_u64[1] = 0x80000000004964D0;
  v6[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[9].n128_u8[0] = v1 & 1;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:completion:)(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  *(void *)(v2 + 32) = 0xD000000000000015;
  *(void *)(v2 + 40) = 0x80000000004964F0;
  *(void *)(v2 + 72) = &type metadata for Bool;
  *(unsigned char *)(v2 + 48) = a1;
  OUTLINED_FUNCTION_11_61();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 32) = 0xD000000000000015;
  *(void *)(v1 + 40) = 0x80000000004964F0;
  *(void *)(v1 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_178_0(v1, (uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = v2;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_43_12(v3);
  *uint64_t v4 = v5;
  v4[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  OUTLINED_FUNCTION_23_13();
  return v7();
}

{
  uint64_t v0;
  uint64_t v1;
  long long v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 32) = 0xD000000000000015;
  *(void *)(v1 + 40) = 0x80000000004964F0;
  *(void *)(v1 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_178_0(v1, (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v1 + 16) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  uint64_t v4 = OUTLINED_FUNCTION_11_6(0xD000000000000027);
  return v6(v4);
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:));
}

{
  uint64_t v2;
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  *(void *)(v2 + 32) = 0xD000000000000015;
  *(void *)(v2 + 40) = 0x80000000004964F0;
  *(void *)(v2 + 72) = &type metadata for Bool;
  *(unsigned char *)(v2 + 48) = a1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.unsupportedParticipantsMultipleContactsUnsupported(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t AddCallParticipantCATs.unsupportedParticipantsMultipleContactsUnsupported()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(v1, 0xD000000000000045, 0x800000000048DEF0, _swiftEmptyArrayStorage);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v4)(unint64_t, unint64_t, void *);
  uint64_t v5;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v4(0xD000000000000045, 0x800000000048DEF0, _swiftEmptyArrayStorage);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t AddCallParticipantCATs.__allocating_init(templateDir:options:globals:)()
{
  OUTLINED_FUNCTION_67();
  swift_allocObject();
  return AddCallParticipantCATs.init(templateDir:options:globals:)(v1, v0);
}

uint64_t AddCallParticipantCATs.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CATOption();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a2, v5);
  uint64_t v10 = CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v10;
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties);
  }
  return result;
}

uint64_t type metadata accessor for AddCallParticipantCATs()
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantCATs;
  if (!type metadata singleton initialization cache for AddCallParticipantCATs) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantCATs()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for AddCallParticipantCATs()
{
  return type metadata accessor for AddCallParticipantCATs();
}

unsigned char *storeEnumTagSinglePayload for AddCallParticipantCATs.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x35F5E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddCallParticipantCATs.Properties()
{
  return &type metadata for AddCallParticipantCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_11_61()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
}

__n128 *OUTLINED_FUNCTION_35_32(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6E6F697461636F6CLL;
  result[2].n128_u64[1] = 0xE800000000000000;
  return result;
}

void BargeInCapablePromptForConfirmationFlow.__allocating_init<A>(itemToConfirm:strategy:sharedGlobals:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  uint64_t v4 = v3;
  uint64_t v24 = v5;
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = *(void *)(v0 + 80);
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15 - v14;
  type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v24 - v18;
  *(uint64_t *)((char *)&v24 - v18) = 0;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_12();
  v20();
  OUTLINED_FUNCTION_12();
  v21();
  uint64_t v22 = v25;
  outlined init with copy of SharedGlobalsProviding(v25, (uint64_t)v27);
  (*(void (**)(char *, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))(v0 + 208))(v19, v16, v9, v27, v4, v26);
  __swift_destroy_boxed_opaque_existential_1(v22);
  OUTLINED_FUNCTION_5_30();
  v23();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v24, v10);
  OUTLINED_FUNCTION_26_1();
}

uint64_t type metadata accessor for BargeInCapablePromptForConfirmationFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t BargeInCapableSection.makeOutput()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v2 = v1;
  v0[18] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AceOutput?);
  OUTLINED_FUNCTION_11_0(v4);
  v0[19] = OUTLINED_FUNCTION_35();
  uint64_t v8 = (uint64_t (*)(void *))((char *)v2 + *v2);
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v0[20] = v5;
  *uint64_t v5 = v6;
  v5[1] = BargeInCapableSection.makeOutput();
  return v8(v0 + 2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t BargeInCapableSection.makeOutput()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, long long a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_31_15();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v24 + 2), (uint64_t)(v24 + 7));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Output);
  uint64_t v27 = type metadata accessor for AceOutput();
  int v28 = swift_dynamicCast();
  uint64_t v29 = v24[19];
  if (v28)
  {
    uint64_t v30 = v24[18];
    __swift_storeEnumTagSinglePayload(v24[19], 0, 1, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v24 + 2));
    OUTLINED_FUNCTION_10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v29, v27);
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v24[19], 1, 1, v27);
    outlined destroy of UUID?(v29, &demangling cache variable for type metadata for AceOutput?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    outlined init with copy of SharedGlobalsProviding((uint64_t)(v24 + 2), (uint64_t)(v24 + 12));
    os_log_type_t v33 = (void *)Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_8_4(v34))
    {
      a10 = v24 + 17;
      unint64_t v35 = (_DWORD *)swift_slowAlloc();
      *(void *)&a11 = swift_slowAlloc();
      _DWORD *v35 = 136315138;
      __swift_project_boxed_opaque_existential_1(v24 + 12, v24[15]);
      swift_getDynamicType();
      uint64_t v36 = _typeName(_:qualified:)();
      v24[17] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, (uint64_t *)&a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v24 + 12));
      OUTLINED_FUNCTION_55_17();
      _os_log_impl(v38, v39, v40, v41, v42, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v24 + 12));
    }

    a13 = 0;
    a11 = 0u;
    a12 = 0u;
    AceOutput.init(commands:flowActivity:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v24 + 2));
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_39();
  return v44(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, *((void *)&a11 + 1), a12, *((void *)&a12 + 1), a13, a14, a15, a16);
}

void BargeInCapablePromptForConfirmationFlow.exitValue.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v3 = *v0;
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = (void *)(v6 - v5);
  uint64_t v8 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  OUTLINED_FUNCTION_1();
  uint64_t v27 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_46_0();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v26 - v13);
  uint64_t v15 = *(void (**)(void))(v3 + 184);
  ((void (*)(uint64_t))v15)(v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    *(void *)uint64_t v2 = *v14;
    *(unsigned char *)(v2 + 8) = 1;
    OUTLINED_FUNCTION_86_9();
    OUTLINED_FUNCTION_15();
    uint64_t v18 = OUTLINED_FUNCTION_10_18();
    v19(v18);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    OUTLINED_FUNCTION_86_9();
    OUTLINED_FUNCTION_15();
    (*(void (**)(uint64_t, void *))(v17 + 32))(v2, v14);
  }
  else
  {
    v15();
    swift_getWitnessTable();
    uint64_t v20 = String.init<A>(describing:)();
    *uint64_t v7 = 0xD000000000000027;
    v7[1] = 0x8000000000484F60;
    void v7[2] = v20;
    v7[3] = v21;
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_12((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    uint64_t v22 = swift_allocError();
    PhoneError.logged()(v23);
    outlined destroy of PhoneError((uint64_t)v7);
    *(void *)uint64_t v2 = v22;
    *(unsigned char *)(v2 + 8) = 0;
    OUTLINED_FUNCTION_86_9();
    OUTLINED_FUNCTION_15();
    uint64_t v24 = OUTLINED_FUNCTION_10_18();
    v25(v24);
    (*(void (**)(void *, uint64_t))(v27 + 8))(v14, v8);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t key path setter for BargeInCapablePromptForConfirmationFlow.sections : <A, B>BargeInCapablePromptForConfirmationFlow<A, B>(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*(void *)a2 + *(void *)(**(void **)a2 + 136));
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t BargeInCapablePromptForConfirmationFlow.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for BargeInCapablePromptForConfirmationFlow.state : <A, B>BargeInCapablePromptForConfirmationFlow<A, B>(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - v3;
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - v3, a1);
  return BargeInCapablePromptForConfirmationFlow.state.setter((uint64_t)v4);
}

void BargeInCapablePromptForConfirmationFlow.state.willset(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    uint64_t v20 = v13;
    *(_DWORD *)uint64_t v13 = 136315138;
    v19[1] = v13 + 4;
    v10(v6, (uint64_t)v8, v2);
    uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v8, v2);
    BargeInCapablePromptForConfirmationFlow.State.description.getter();
    uint64_t v16 = v15;
    unint64_t v18 = v17;
    v14(v6, v2);
    uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, v12, "#BargeInCapablePromptForConfirmationFlow state = %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

uint64_t BargeInCapablePromptForConfirmationFlow.state.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v4 = v1 + *(void *)(v3 + 144);
  swift_beginAccess();
  OUTLINED_FUNCTION_13_4();
  type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  OUTLINED_FUNCTION_15();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t BargeInCapablePromptForConfirmationFlow.state.setter(uint64_t a1)
{
  BargeInCapablePromptForConfirmationFlow.state.willset(a1);
  OUTLINED_FUNCTION_22();
  uint64_t v4 = v1 + *(void *)(v3 + 144);
  swift_beginAccess();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_13_4();
  type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t BargeInCapablePromptForConfirmationFlow.__allocating_init<A>(state:itemToConfirm:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = *(void **)v7;
  uint64_t v12 = (uint64_t *)(v7 + *(void *)(*(void *)v7 + 136));
  *uint64_t v12 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v13 = v11[10];
  uint64_t v32 = v11[11];
  uint64_t v33 = v11[12];
  uint64_t v14 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  OUTLINED_FUNCTION_1_44();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_12();
  v17();
  OUTLINED_FUNCTION_1_44();
  uint64_t v19 = v18;
  OUTLINED_FUNCTION_12();
  v20();
  outlined init with copy of SharedGlobalsProviding(a4, v7 + *(void *)(*(void *)v7 + 112));
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a2, a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a2, v13);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v14);
  swift_beginAccess();
  *uint64_t v12 = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(a3, v13, v32, a5, v33, a6);
  uint64_t v23 = (uint64_t (**)())(v7 + *(void *)(*(void *)v7 + 120));
  void *v23 = v22;
  v23[1] = v24;
  uint64_t v25 = implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(a3, v13, v32, a5, v33, a6);
  uint64_t v27 = v26;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v28();
  uint64_t v29 = (void *)(v7 + *(void *)(*(void *)v7 + 128));
  void *v29 = v25;
  v29[1] = v27;
  return v7;
}

uint64_t (*implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(a1);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  *((void *)v15 + 5) = a5;
  *((void *)v15 + 6) = a6;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[v14], v13, a4);
  return partial apply for implicit closure #2 in implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:);
}

void *implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(a1);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  *((void *)v15 + 5) = a5;
  *((void *)v15 + 6) = a6;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[v14], v13, a4);
  return &async function pointer to partial apply for implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:);
}

uint64_t implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a9 + 40) + **(int **)(a9 + 40));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *uint64_t v17 = v9;
  v17[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v19(a1, a2, a3, a4, a5, a6, a7, v21, a9);
}

void BargeInCapablePromptForConfirmationFlow.on(input:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v71 = v2;
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_9_11();
  uint64_t v3 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_46_0();
  uint64_t v66 = (uint64_t *)(v7 - v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)v64 - v10);
  uint64_t v69 = type metadata accessor for ActionForInput();
  OUTLINED_FUNCTION_1();
  uint64_t v67 = v12;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_46_0();
  uint64_t v16 = v14 - v15;
  uint64_t v18 = __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  uint64_t v72 = (void (*)(void))((char *)v64 - v19);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v68 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v70 = v16;
  if (v23)
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v64[0] = v3;
    uint64_t v74 = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v73 = OUTLINED_FUNCTION_40_27();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v21, v22, "#BargeInCapablePromptForConfirmationFlow %s", v24, 0xCu);
    swift_arrayDestroy();
    uint64_t v3 = v64[0];
    OUTLINED_FUNCTION_6();
    uint64_t v16 = v70;
    OUTLINED_FUNCTION_6();
  }

  OUTLINED_FUNCTION_78_8();
  uint64_t v27 = *(void (**)(void))(v26 + 184);
  uint64_t v28 = v26 + 184;
  v27();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v64[1] = v28;
  uint64_t v65 = v27;
  if (EnumCaseMultiPayload == 5)
  {
    v64[0] = v3;
    OUTLINED_FUNCTION_78_8();
    unint64_t v37 = *(void (**)(void))(v36 + 160);
    OUTLINED_FUNCTION_54_18();
    v37();
    OUTLINED_FUNCTION_54_18();
    unint64_t v38 = *(void *)(((uint64_t (*)(void))v37)() + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_78_8();
    os_log_type_t v40 = *(void (**)(uint64_t))(v1 + *(void *)(v39 + 120));
    OUTLINED_FUNCTION_54_18();
    v37();
    if (!v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    OUTLINED_FUNCTION_82_7();
    if (v38 > v41)
    {
LABEL_26:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v42 = OUTLINED_FUNCTION_74_9();
    v40(v42);
    unint64_t v35 = v27;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v16 = v70;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v30 = *v11;
      OUTLINED_FUNCTION_78_8();
      uint64_t v32 = *(void *)(v1 + *(void *)(v31 + 120));
      (*(void (**)(void))(v31 + 160))();
      if ((v30 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        OUTLINED_FUNCTION_82_7();
        if (v30 < v33)
        {
          v64[0] = v32;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v34 = OUTLINED_FUNCTION_74_9();
          ((void (*)(uint64_t))v64[0])(v34);
          unint64_t v35 = v27;
          uint64_t v16 = v70;
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_14;
        }
      }
      __break(1u);
      goto LABEL_25;
    }
    unint64_t v35 = v72;
    static ActionForInput.ignore()();
    (*(void (**)(unint64_t *, uint64_t))(v5 + 8))(v11, v3);
  }
LABEL_14:
  static ActionForInput.handle()();
  char v43 = static ActionForInput.== infix(_:_:)();
  uint64_t v44 = v67;
  uint64_t v45 = *(void (**)(void))(v67 + 8);
  uint64_t v46 = v69;
  OUTLINED_FUNCTION_43_24();
  v45();
  (*(void (**)(uint64_t, void (*)(void), uint64_t))(v44 + 16))(v16, v35, v46);
  if (v43)
  {
    OUTLINED_FUNCTION_43_24();
    v45();
  }
  else
  {
    static ActionForInput.cancel()();
    char v47 = static ActionForInput.== infix(_:_:)();
    OUTLINED_FUNCTION_43_24();
    v45();
    OUTLINED_FUNCTION_43_24();
    v45();
    if ((v47 & 1) == 0)
    {
      int v52 = 0;
      goto LABEL_19;
    }
  }
  type metadata accessor for Input();
  swift_getTupleTypeMetadata2();
  uint64_t v48 = swift_allocBox();
  OUTLINED_FUNCTION_10();
  uint64_t v50 = (*(uint64_t (**)(void))(v49 + 16))();
  ((void (*)(uint64_t))v65)(v50);
  uint64_t v51 = (uint64_t)v66;
  *uint64_t v66 = v48;
  swift_storeEnumTagMultiPayload();
  BargeInCapablePromptForConfirmationFlow.state.setter(v51);
  int v52 = 1;
LABEL_19:
  int v53 = (void *)Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_4(v54))
  {
    uint64_t v55 = v46;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 136315394;
    uint64_t v73 = OUTLINED_FUNCTION_40_27();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v56 + 12) = 1024;
    LODWORD(v73) = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_55_17();
    _os_log_impl(v57, v58, v59, v60, v61, 0x12u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();

    uint64_t v62 = v72;
    uint64_t v63 = v55;
  }
  else
  {

    uint64_t v62 = v72;
    uint64_t v63 = v46;
  }
  ((void (*)(void (*)(void), uint64_t))v45)(v62, v63);
  OUTLINED_FUNCTION_26_1();
}

uint64_t BargeInCapablePromptForConfirmationFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t BargeInCapablePromptForConfirmationFlow.execute()()
{
  OUTLINED_FUNCTION_16_1();
  v1[6] = v2;
  v1[7] = v0;
  uint64_t v3 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v3);
  v1[8] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[9] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[10] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_86_2();
  v1[11] = *(void *)(v5 + 88);
  uint64_t v6 = OUTLINED_FUNCTION_86_9();
  v1[12] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[13] = v7;
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Input();
  v1[16] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[17] = v9;
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  OUTLINED_FUNCTION_86_2();
  v1[20] = *(void *)(v10 + 80);
  OUTLINED_FUNCTION_86_2();
  v1[21] = *(void *)(v11 + 96);
  uint64_t v12 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  v1[22] = v12;
  OUTLINED_FUNCTION_19_0(v12);
  v1[23] = v13;
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 240) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 280) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  void (*v4)(uint64_t);
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t (*v16)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_83_5();
  uint64_t v19 = *(void *)(v0 + 128);
  uint64_t v20 = *(void *)(v0 + 152);
  OUTLINED_FUNCTION_12();
  v2();
  swift_storeEnumTagMultiPayload();
  BargeInCapablePromptForConfirmationFlow.state.setter(v1);
  static ExecuteResponse.complete()();
  uint64_t v3 = OUTLINED_FUNCTION_65_11();
  v4(v3);
  OUTLINED_FUNCTION_5_30();
  v5();
  uint64_t v6 = swift_release();
  uint64_t v14 = OUTLINED_FUNCTION_57_15(v6, v7, v8, v9, v10, v11, v12, v13, v18, v19, v20, v21, v22);
  v15(v14);
  OUTLINED_FUNCTION_16_52();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v16();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 312) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  void (*v4)(uint64_t);
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t (*v16)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_83_5();
  uint64_t v19 = *(void *)(v0 + 128);
  uint64_t v20 = *(void *)(v0 + 144);
  OUTLINED_FUNCTION_12();
  v2();
  swift_storeEnumTagMultiPayload();
  BargeInCapablePromptForConfirmationFlow.state.setter(v1);
  static ExecuteResponse.complete()();
  uint64_t v3 = OUTLINED_FUNCTION_65_11();
  v4(v3);
  OUTLINED_FUNCTION_5_30();
  v5();
  uint64_t v6 = swift_release();
  uint64_t v14 = OUTLINED_FUNCTION_57_15(v6, v7, v8, v9, v10, v11, v12, v13, v18, v19, v20, v21, v22);
  v15(v14);
  OUTLINED_FUNCTION_16_52();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v16();
}

uint64_t BargeInCapablePromptForConfirmationFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_31_15();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
  swift_retain();
  unint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = v26[28];
    uint64_t v33 = v26[23];
    a11 = v26 + 5;
    a12 = v26[22];
    uint64_t v34 = v26[7];
    uint64_t v35 = OUTLINED_FUNCTION_11_7();
    a13 = OUTLINED_FUNCTION_10_0();
    a14 = a13;
    *(_DWORD *)uint64_t v35 = 136315394;
    v26[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x2865747563657865, 0xE900000000000029, &a14);
    uint64_t v36 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 12) = 2080;
    a10 = v35 + 14;
    (*(void (**)(uint64_t))(*(void *)v34 + 184))(v36);
    BargeInCapablePromptForConfirmationFlow.State.description.getter();
    uint64_t v38 = v37;
    unint64_t v40 = v39;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, a12);
    v26[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, &a14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "#BargeInCapablePromptForConfirmationFlow %s state = %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release();
  }
  OUTLINED_FUNCTION_22();
  uint64_t v42 = *(void (**)(void))(v41 + 184);
  v42();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      OUTLINED_FUNCTION_12();
      v44();
      swift_task_alloc();
      OUTLINED_FUNCTION_31_2();
      v26[29] = v45;
      *uint64_t v45 = v46;
      v45[1] = BargeInCapablePromptForConfirmationFlow.execute();
      OUTLINED_FUNCTION_39();
      return BargeInCapablePromptForConfirmationFlow.executeSection(idx:)();
    case 1u:
    case 5u:
      OUTLINED_FUNCTION_30_28();
      v43();
      static ExecuteResponse.ongoing(requireInput:)();
      goto LABEL_24;
    case 2u:
      uint64_t v49 = (unint64_t *)v26[25];
      uint64_t v50 = *(void (**)(unint64_t *, uint64_t, void))(v26[23] + 16);
      v50(v49, v26[27], v26[22]);
      v26[31] = *v49;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v52 = swift_projectBox();
      uint64_t v53 = v52 + *(int *)(TupleTypeMetadata2 + 48);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v65 = (unint64_t *)v26[24];
        uint64_t v67 = v26[17];
        uint64_t v66 = v26[18];
        uint64_t v68 = v26[16];
        uint64_t v69 = v26[7];
        v50(v65, v53, v26[22]);
        unint64_t v70 = *v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v66, v52, v68);
        OUTLINED_FUNCTION_22();
        (*(void (**)(void))(v71 + 160))();
        if ((v70 & 0x8000000000000000) == 0)
        {
          OUTLINED_FUNCTION_82_7();
          if (v70 < v72)
          {
            uint64_t v73 = v69 + 32 * v70;
            v26[36] = *(void *)(v73 + 40);
            v26[37] = *(void *)(v73 + 56);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_26_35();
            uint64_t v116 = (char *)v74 + *v74;
            swift_task_alloc();
            OUTLINED_FUNCTION_31_2();
            v26[38] = v75;
            *uint64_t v75 = v76;
            v75[1] = BargeInCapablePromptForConfirmationFlow.execute();
            OUTLINED_FUNCTION_72_15();
            goto LABEL_19;
          }
LABEL_30:
          __break(1u);
          JUMPOUT(0x361FD0);
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (EnumCaseMultiPayload == 5)
      {
        uint64_t v55 = v26[7];
        OUTLINED_FUNCTION_12();
        v56();
        OUTLINED_FUNCTION_22();
        os_log_t v58 = *(void (**)(void))(v57 + 160);
        v58();
        OUTLINED_FUNCTION_54_18();
        unint64_t v59 = *(void *)(((uint64_t (*)(void))v58)() + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_54_18();
        v58();
        if (v59)
        {
          OUTLINED_FUNCTION_82_7();
          if (v59 <= v60)
          {
            uint64_t v61 = v55 + 32 * v59;
            v26[32] = *(void *)(v61 + 8);
            v26[33] = *(void *)(v61 + 24);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_26_35();
            uint64_t v116 = (char *)v62 + *v62;
            swift_task_alloc();
            OUTLINED_FUNCTION_31_2();
            v26[34] = v63;
            *uint64_t v63 = v64;
            v63[1] = BargeInCapablePromptForConfirmationFlow.execute();
            OUTLINED_FUNCTION_72_15();
LABEL_19:
            OUTLINED_FUNCTION_39();
            return v84(v77, v78, v79, v80, v81, v82, v83, v84, a9, a10, a11, a12, v116, a14, a15, a16, a17, a18);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_29;
      }
      swift_release();
LABEL_23:
      uint64_t v86 = v26[28];
      uint64_t v87 = v26[22];
      uint64_t v88 = v26[23];
      uint64_t v89 = (uint64_t *)v26[10];
      a12 = v26[9];
      a13 = (uint64_t)(v26 + 3);
      OUTLINED_FUNCTION_2();
      _OWORD v26[2] = v90;
      type metadata accessor for BargeInCapablePromptForConfirmationFlow();
      swift_getMetatypeMetadata();
      uint64_t v91 = String.init<A>(describing:)();
      uint64_t v93 = v92;
      v42();
      BargeInCapablePromptForConfirmationFlow.State.description.getter();
      uint64_t v95 = v94;
      uint64_t v97 = v96;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v87);
      *uint64_t v89 = v91;
      v89[1] = v93;
      v89[2] = v95;
      v89[3] = v97;
      swift_storeEnumTagMultiPayload();
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_12((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
      uint64_t v98 = swift_allocError();
      PhoneError.logged()(v99);
      outlined destroy of PhoneError((uint64_t)v89);
      swift_willThrow();
      uint64_t v100 = (uint64_t *)v26[28];
      uint64_t v101 = v26[7];
      (*(void (**)(void, void))(v26[23] + 8))(v26[27], v26[22]);
      *uint64_t v100 = v98;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      BargeInCapablePromptForConfirmationFlow.state.setter((uint64_t)v100);
      OUTLINED_FUNCTION_22();
      uint64_t v103 = v101 + *(void *)(v102 + 112);
      type metadata accessor for StartCallCATsSimple();
      static CATOption.defaultMode.getter();
      uint64_t v104 = CATWrapperSimple.__allocating_init(options:globals:)();
      uint64_t v105 = static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)(v103, v104);
      uint64_t v106 = swift_release();
      uint64_t v107 = (*(uint64_t (**)(uint64_t))(*(void *)v105 + 112))(v106);
      swift_release();
      void v26[3] = v107;
      type metadata accessor for SimpleOutputFlowAsync();
      static ExecuteResponse.complete<A>(next:)();
      swift_errorRelease();
      swift_release();
LABEL_24:
      OUTLINED_FUNCTION_16_52();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_47_0();
      OUTLINED_FUNCTION_39();
      return v109(v108, v109, v110, v111, v112, v113, v114, v115, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    default:
      goto LABEL_23;
  }
}

uint64_t BargeInCapablePromptForConfirmationFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_30_28();
  v12();
  OUTLINED_FUNCTION_4_91();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  uint64_t v13 = OUTLINED_FUNCTION_14_43();
  v14(v13);
  OUTLINED_FUNCTION_41_25();
  swift_errorRetain();
  BargeInCapablePromptForConfirmationFlow.state.setter(v12);
  OUTLINED_FUNCTION_22();
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v15 = CATWrapperSimple.__allocating_init(options:globals:)();
  OUTLINED_FUNCTION_61_14(v15);
  swift_release();
  OUTLINED_FUNCTION_81_10();
  OUTLINED_FUNCTION_73_10();
  v16();
  swift_release();
  OUTLINED_FUNCTION_58_19();
  static ExecuteResponse.complete<A>(next:)();
  swift_errorRelease();
  swift_release();
  OUTLINED_FUNCTION_4_91();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_30_28();
  v13();
  swift_release();
  uint64_t v14 = OUTLINED_FUNCTION_14_43();
  v15(v14);
  OUTLINED_FUNCTION_41_25();
  swift_errorRetain();
  BargeInCapablePromptForConfirmationFlow.state.setter(v12);
  OUTLINED_FUNCTION_22();
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v16 = CATWrapperSimple.__allocating_init(options:globals:)();
  OUTLINED_FUNCTION_61_14(v16);
  swift_release();
  OUTLINED_FUNCTION_81_10();
  OUTLINED_FUNCTION_73_10();
  v17();
  swift_release();
  OUTLINED_FUNCTION_58_19();
  static ExecuteResponse.complete<A>(next:)();
  swift_errorRelease();
  swift_release();
  OUTLINED_FUNCTION_4_91();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_30_28();
  v13();
  swift_release();
  uint64_t v14 = OUTLINED_FUNCTION_14_43();
  v15(v14);
  OUTLINED_FUNCTION_41_25();
  swift_errorRetain();
  BargeInCapablePromptForConfirmationFlow.state.setter(v12);
  OUTLINED_FUNCTION_22();
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v16 = CATWrapperSimple.__allocating_init(options:globals:)();
  OUTLINED_FUNCTION_61_14(v16);
  swift_release();
  OUTLINED_FUNCTION_81_10();
  OUTLINED_FUNCTION_73_10();
  v17();
  swift_release();
  OUTLINED_FUNCTION_58_19();
  static ExecuteResponse.complete<A>(next:)();
  swift_errorRelease();
  swift_release();
  OUTLINED_FUNCTION_4_91();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_3();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void BargeInCapablePromptForConfirmationFlow.State.description.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PromptResult();
  OUTLINED_FUNCTION_1();
  uint64_t v31 = v3;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - v5;
  type metadata accessor for Input();
  OUTLINED_FUNCTION_1();
  uint64_t v33 = v8;
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_4();
  uint64_t v32 = v10 - v9;
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_46_0();
  uint64_t v16 = v14 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v30 - v18);
  uint64_t v20 = *(void (**)(void))(v12 + 16);
  OUTLINED_FUNCTION_80_7();
  v20();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      OUTLINED_FUNCTION_37_27();
      _StringGuts.grow(_:)(32);
      swift_bridgeObjectRelease();
      *(void *)&long long v36 = 0xD00000000000001DLL;
      *((void *)&v36 + 1) = 0x800000000049B780;
      goto LABEL_4;
    case 2u:
      uint64_t v31 = *v19;
      swift_getTupleTypeMetadata2();
      swift_projectBox();
      OUTLINED_FUNCTION_12();
      v22();
      OUTLINED_FUNCTION_80_7();
      v20();
      *(void *)&long long v36 = 0;
      *((void *)&v36 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      v23._uint64_t countAndFlagsBits = 0x657669656365722ELL;
      v23._object = (void *)0xEF287475706E4964;
      String.append(_:)(v23);
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_12((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, (void (*)(uint64_t))&type metadata accessor for Input);
      v24._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      v25._uint64_t countAndFlagsBits = 0x6F6976657270202CLL;
      v25._object = (void *)0xEC000000203A7375;
      String.append(_:)(v25);
      swift_getWitnessTable();
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      OUTLINED_FUNCTION_6_46();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v1);
      OUTLINED_FUNCTION_5_30();
      v26();
      swift_release();
      break;
    case 3u:
      uint64_t v27 = v31;
      (*(void (**)(char *, uint64_t *, uint64_t))(v31 + 32))(v6, v19, v2);
      *(void *)&long long v36 = 0;
      *((void *)&v36 + 1) = 0xE000000000000000;
      v28._uint64_t countAndFlagsBits = 0x74656C706D6F632ELL;
      v28._object = (void *)0xEA00000000002865;
      String.append(_:)(v28);
      swift_getWitnessTable();
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      OUTLINED_FUNCTION_6_46();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v2);
      break;
    case 4u:
      OUTLINED_FUNCTION_37_27();
      v29._uint64_t countAndFlagsBits = 0x28726F7272652ELL;
      v29._object = (void *)0xE700000000000000;
      String.append(_:)(v29);
      uint64_t v35 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      _print_unlocked<A, B>(_:_:)();
      OUTLINED_FUNCTION_6_46();
      swift_errorRelease();
      break;
    case 5u:
      break;
    default:
      OUTLINED_FUNCTION_37_27();
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      strcpy((char *)&v36, ".section(idx: ");
      HIBYTE(v36) = -18;
LABEL_4:
      uint64_t v35 = v1;
      v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_46();
      break;
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[22] = v2;
  v1[23] = v0;
  v1[21] = v3;
  uint64_t v4 = type metadata accessor for BargeInError();
  v1[24] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[25] = v5;
  v1[26] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_86_2();
  uint64_t v6 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  v1[27] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[28] = OUTLINED_FUNCTION_35();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11_0(v7);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for NLContextUpdate();
  v1[31] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[32] = v9;
  v1[33] = OUTLINED_FUNCTION_35();
  uint64_t v10 = type metadata accessor for AceOutput();
  v1[34] = v10;
  OUTLINED_FUNCTION_19_0(v10);
  v1[35] = v11;
  v1[36] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v12, v13, v14);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = v0[22];
  OUTLINED_FUNCTION_22();
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 160);
  v0[37] = v3;
  v0[38] = (v2 + 160) & 0xFFFFFFFFFFFFLL | 0x280E000000000000;
  uint64_t result = v3();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = v0[22];
  if (*(void *)(result + 16) <= v5)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result + 32 * v5;
  v0[39] = *(void *)(v6 + 40);
  v0[40] = *(void *)(v6 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v0[41] = v7;
  *uint64_t v7 = v8;
  v7[1] = BargeInCapablePromptForConfirmationFlow.executeSection(idx:);
  return BargeInCapableSection.makeOutput()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 336) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 352) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 104);
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void (*v5)(void);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  os_log_type_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t (*v38)(void);
  void *v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_48();
  unint64_t v40 = v2;
  OUTLINED_FUNCTION_30_28();
  v5();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  uint64_t v6 = AceOutput.commands.getter();
  *(void *)(v2 + 360) = v6;
  if (v6 >> 62) {
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  }
  *(void *)(v2 + 368) = v7;
  if (v7)
  {
    *(void *)(v2 + 376) = *(void *)(**(void **)(v2 + 184) + 112);
    uint64_t v8 = *(void *)(v2 + 360);
    if ((v8 & 0xC000000000000001) != 0) {
      uint64_t v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v9 = *(id *)(v8 + 32);
    }
    uint64_t v14 = v9;
    *(void *)(v2 + 384) = v9;
    *(void *)(v2 + 392) = 1;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = v14;
    uint64_t v18 = (void *)Logger.logObject.getter();
    uint64_t v19 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_63_0(v19))
    {
      uint64_t v16 = OUTLINED_FUNCTION_11_7();
      uint64_t v4 = (void *)OUTLINED_FUNCTION_10_0();
      unint64_t v39 = v4;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v20 = outlined bridged method (pb) of @objc AceObject.encodedClassName()(v17);
      if (v21)
      {
        os_log_type_t v22 = v21;
      }
      else
      {
        uint64_t v20 = 4271950;
        os_log_type_t v22 = 0xE300000000000000;
      }
      *(void *)(v16 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, (uint64_t *)&v39);

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      Swift::String v23 = outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(v17);
      if (v24)
      {
        Swift::String v25 = v24;
      }
      else
      {
        Swift::String v23 = 4271950;
        Swift::String v25 = 0xE300000000000000;
      }
      *(void *)(v16 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v25, (uint64_t *)&v39);

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8(&dword_0, v26, v27, "#BargeInCapablePromptForConfirmationFlow Submitting AceCommand: %s, aceId=%s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    Swift::String v28 = OUTLINED_FUNCTION_18_37();
    v29(v28);
    __swift_project_boxed_opaque_existential_1((void *)v16, *(void *)(v2 + 88));
    uint64_t v30 = swift_task_alloc();
    OUTLINED_FUNCTION_69_11(v30);
    OUTLINED_FUNCTION_68_10();
    *uint64_t v4 = v31;
    v4[1] = BargeInCapablePromptForConfirmationFlow.executeSection(idx:);
    uint64_t v32 = OUTLINED_FUNCTION_62_18();
    return AceServiceInvokerAsync.submitWithBargeInDetection<A>(_:)(v32, v33, v34, v35);
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_71_9();
    v1(v10);
    uint64_t result = swift_bridgeObjectRelease();
    if (__OFADD__(v3, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t))(v2 + 296))(result);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_70_8();
      if (v12 != v13) {
        OUTLINED_FUNCTION_67_12();
      }
      swift_storeEnumTagMultiPayload();
      BargeInCapablePromptForConfirmationFlow.state.setter(v0);
      OUTLINED_FUNCTION_42_27();
      long long v36 = OUTLINED_FUNCTION_79_2();
      v37(v36);
      OUTLINED_FUNCTION_5_69();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6_0();
      return v38();
    }
  }
  return result;
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 408) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  else {

  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_31_15();
  a23 = v27;
  a24 = v28;
  a22 = v24;
  uint64_t v30 = *(void (**)(uint64_t))(v24 + 240);
  uint64_t v29 = *(void *)(v24 + 248);
  AceOutput.nlContextUpdate.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v29) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v24 + 256) + 32))(*(void *)(v24 + 264), *(void *)(v24 + 240), *(void *)(v24 + 248));
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    long long v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_0, v36, v37, "#BargeInCapablePromptForConfirmationFlow Submitting NLContextUpdate", v38, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v39 = *(void *)(v24 + 264);
    uint64_t v90 = *(void *)(v24 + 272);
    uint64_t v40 = *(void *)(v24 + 248);
    uint64_t v41 = *(void *)(v24 + 256);
    uint64_t v42 = *(void *)(v24 + 232);
    uint64_t v43 = *(void *)(v24 + 184);

    OUTLINED_FUNCTION_81_10();
    uint64_t v45 = (void *)(v43 + *(void *)(v44 + 112));
    uint64_t v46 = v45[3];
    uint64_t v47 = v45[4];
    __swift_project_boxed_opaque_existential_1(v45, v46);
    (*(void (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
    __swift_project_boxed_opaque_existential_1((void *)(v24 + 16), *(void *)(v24 + 40));
    a13 = 0;
    a11 = 0u;
    a12 = 0u;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v42, v39, v40);
    __swift_storeEnumTagSinglePayload(v42, 0, 1, v40);
    *(void *)(v24 + 128) = v90;
    *(void *)(v24 + 136) = &protocol witness table for AceOutput;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v24 + 104));
    AceOutput.init(commands:flowActivity:nlContextUpdate:)();
    uint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v24 + 344) = v48;
    *uint64_t v48 = v24;
    v48[1] = BargeInCapablePromptForConfirmationFlow.executeSection(idx:);
    OUTLINED_FUNCTION_39();
    return dispatch thunk of OutputPublisherAsync.publish(output:)(v49, v50, v51);
  }
  outlined destroy of UUID?(*(void *)(v24 + 240), &demangling cache variable for type metadata for NLContextUpdate?);
  unint64_t v31 = AceOutput.commands.getter();
  *(void *)(v24 + 360) = v31;
  if (v31 >> 62) {
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v32 = *(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8));
  }
  *(void *)(v24 + 368) = v32;
  if (v32)
  {
    *(void *)(v24 + 376) = *(void *)(**(void **)(v24 + 184) + 112);
    uint64_t v33 = *(void *)(v24 + 360);
    if ((v33 & 0xC000000000000001) != 0) {
      id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v34 = *(id *)(v33 + 32);
    }
    uint64_t v56 = v34;
    *(void *)(v24 + 384) = v34;
    *(void *)(v24 + 392) = 1;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)static Logger.siriPhone);
    id v59 = v56;
    unint64_t v60 = (void *)Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_63_0(v61))
    {
      uint64_t v58 = OUTLINED_FUNCTION_11_7();
      uint64_t v26 = (void *)OUTLINED_FUNCTION_10_0();
      *(void *)&a11 = v26;
      *(_DWORD *)uint64_t v58 = 136315394;
      uint64_t v62 = outlined bridged method (pb) of @objc AceObject.encodedClassName()(v59);
      if (v63)
      {
        unint64_t v64 = v63;
      }
      else
      {
        uint64_t v62 = 4271950;
        unint64_t v64 = 0xE300000000000000;
      }
      *(void *)(v58 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v64, (uint64_t *)&a11);

      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2080;
      uint64_t v65 = outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(v59);
      if (v66)
      {
        unint64_t v67 = v66;
      }
      else
      {
        uint64_t v65 = 4271950;
        unint64_t v67 = 0xE300000000000000;
      }
      *(void *)(v58 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v67, (uint64_t *)&a11);

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8(&dword_0, v68, v69, "#BargeInCapablePromptForConfirmationFlow Submitting AceCommand: %s, aceId=%s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    uint64_t v70 = OUTLINED_FUNCTION_18_37();
    v71(v70);
    __swift_project_boxed_opaque_existential_1((void *)v58, *(void *)(v24 + 88));
    uint64_t v72 = swift_task_alloc();
    OUTLINED_FUNCTION_69_11(v72);
    OUTLINED_FUNCTION_68_10();
    void *v26 = v73;
    v26[1] = BargeInCapablePromptForConfirmationFlow.executeSection(idx:);
    OUTLINED_FUNCTION_62_18();
    OUTLINED_FUNCTION_39();
    return AceServiceInvokerAsync.submitWithBargeInDetection<A>(_:)(v74, v75, v76, v77);
  }
  uint64_t v53 = OUTLINED_FUNCTION_71_9();
  v30(v53);
  uint64_t v49 = swift_bridgeObjectRelease();
  if (__OFADD__(v25, 1))
  {
    __break(1u);
    return dispatch thunk of OutputPublisherAsync.publish(output:)(v49, v50, v51);
  }
  (*(uint64_t (**)(uint64_t))(v24 + 296))(v49);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_70_8();
  if (v54 != v55) {
    OUTLINED_FUNCTION_67_12();
  }
  swift_storeEnumTagMultiPayload();
  BargeInCapablePromptForConfirmationFlow.state.setter(v29);
  OUTLINED_FUNCTION_42_27();
  uint64_t v80 = OUTLINED_FUNCTION_79_2();
  v81(v80);
  OUTLINED_FUNCTION_5_69();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_39();
  return v83(v82, v83, v84, v85, v86, v87, v88, v89, a9, a10, a11, *((void *)&a11 + 1), a12, *((void *)&a12 + 1), a13, a14, a15, a16);
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_19_13();
  a19 = v22;
  a20 = v23;
  OUTLINED_FUNCTION_48();
  a18 = v20;
  uint64_t v24 = *(void (**)(uint64_t))(v20 + 392);
  uint64_t v25 = *(void (**)(uint64_t))(v20 + 368);

  __swift_destroy_boxed_opaque_existential_1(v20 + 64);
  if (v24 == v25)
  {
    uint64_t v26 = OUTLINED_FUNCTION_71_9();
    v25(v26);
    uint64_t v27 = swift_bridgeObjectRelease();
    if (!__OFADD__(v21, 1))
    {
      (*(uint64_t (**)(uint64_t))(v20 + 296))(v27);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_70_8();
      if (v28 != v29) {
        OUTLINED_FUNCTION_67_12();
      }
      swift_storeEnumTagMultiPayload();
      BargeInCapablePromptForConfirmationFlow.state.setter(v20 + 64);
      OUTLINED_FUNCTION_42_27();
      uint64_t v33 = OUTLINED_FUNCTION_79_2();
      v34(v33);
      OUTLINED_FUNCTION_5_69();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_4_3();
      return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12);
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v30 = *(void *)(v20 + 392);
  uint64_t v31 = *(void *)(v20 + 360);
  if ((v31 & 0xC000000000000001) != 0) {
    uint64_t v32 = (void (*)(uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    uint64_t v32 = (void (*)(uint64_t))*(id *)(v31 + 8 * v30 + 32);
  }
  uint64_t v24 = v32;
  *(void *)(v20 + 384) = v32;
  *(void *)(v20 + 392) = v30 + 1;
  if (__OFADD__(v30, 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (one-time initialization token for siriPhone != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v44 = type metadata accessor for Logger();
  __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
  uint64_t v45 = v24;
  uint64_t v46 = (void *)Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_4(v47))
  {
    uint64_t v48 = OUTLINED_FUNCTION_11_7();
    a9 = OUTLINED_FUNCTION_10_0();
    *(_DWORD *)uint64_t v48 = 136315394;
    uint64_t v49 = outlined bridged method (pb) of @objc AceObject.encodedClassName()(v45);
    if (v50)
    {
      unint64_t v51 = v50;
    }
    else
    {
      uint64_t v49 = 4271950;
      unint64_t v51 = 0xE300000000000000;
    }
    *(void *)(v48 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, &a9);

    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    uint64_t v52 = outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(v45);
    if (v53)
    {
      unint64_t v54 = v53;
    }
    else
    {
      uint64_t v52 = 4271950;
      unint64_t v54 = 0xE300000000000000;
    }
    *(void *)(v48 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v54, &a9);

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_55_17();
    _os_log_impl(v55, v56, v57, v58, v59, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  unint64_t v60 = (void *)(*(void *)(v20 + 184) + *(void *)(v20 + 376));
  uint64_t v61 = v60[3];
  uint64_t v62 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v61);
  (*(void (**)(uint64_t, uint64_t))(v62 + 32))(v61, v62);
  __swift_project_boxed_opaque_existential_1((void *)(v20 + 64), *(void *)(v20 + 88));
  uint64_t v63 = swift_task_alloc();
  OUTLINED_FUNCTION_69_11(v63);
  OUTLINED_FUNCTION_68_10();
  *(void *)uint64_t v62 = v64;
  *(void *)(v62 + 8) = BargeInCapablePromptForConfirmationFlow.executeSection(idx:);
  OUTLINED_FUNCTION_4_3();
  return AceServiceInvokerAsync.submitWithBargeInDetection<A>(_:)(v65, v66, v67, v68);
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v12 + 336);
  OUTLINED_FUNCTION_52_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_60_15())
  {
    swift_errorRelease();
LABEL_5:
    swift_errorRelease();
    OUTLINED_FUNCTION_21_39();
    BargeInCapablePromptForConfirmationFlow.state.setter(v13);
    static ExecuteResponse.ongoing(requireInput:)();
    OUTLINED_FUNCTION_5_69();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_36_30();
  *(void *)(v12 + 152) = v13;
  swift_errorRetain();
  if (OUTLINED_FUNCTION_28_35())
  {
    OUTLINED_FUNCTION_75_8();
    uint64_t v14 = OUTLINED_FUNCTION_23_40();
    v15(v14);
    goto LABEL_5;
  }
  swift_errorRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_63_0(v17))
  {
    uint64_t v18 = (float *)OUTLINED_FUNCTION_35_33();
    OUTLINED_FUNCTION_19_38(v18, 3.852e-34);
    OUTLINED_FUNCTION_38_28(&dword_0, v19, v20, "#BargeInCapablePromptForConfirmationFlow error executing section %ld");
    OUTLINED_FUNCTION_6();
  }
  OUTLINED_FUNCTION_34_28();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_10();
LABEL_11:
  OUTLINED_FUNCTION_4_3();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  os_log_type_t v20;
  float *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_30_28();
  v13();
  uint64_t v14 = OUTLINED_FUNCTION_23_40();
  v15(v14);
  __swift_destroy_boxed_opaque_existential_1(v12 + 104);
  __swift_destroy_boxed_opaque_existential_1(v12 + 16);
  uint64_t v16 = *(void *)(v12 + 352);
  OUTLINED_FUNCTION_52_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_60_15())
  {
    swift_errorRelease();
LABEL_5:
    swift_errorRelease();
    OUTLINED_FUNCTION_21_39();
    BargeInCapablePromptForConfirmationFlow.state.setter(v16);
    static ExecuteResponse.ongoing(requireInput:)();
    OUTLINED_FUNCTION_5_69();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_36_30();
  *(void *)(v12 + 152) = v16;
  swift_errorRetain();
  if (OUTLINED_FUNCTION_28_35())
  {
    OUTLINED_FUNCTION_75_8();
    os_log_type_t v17 = OUTLINED_FUNCTION_23_40();
    v18(v17);
    goto LABEL_5;
  }
  swift_errorRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter();
  uint64_t v20 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_63_0(v20))
  {
    uint64_t v21 = (float *)OUTLINED_FUNCTION_35_33();
    OUTLINED_FUNCTION_19_38(v21, 3.852e-34);
    OUTLINED_FUNCTION_38_28(&dword_0, v22, v23, "#BargeInCapablePromptForConfirmationFlow error executing section %ld");
    OUTLINED_FUNCTION_6();
  }
  OUTLINED_FUNCTION_34_28();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_10();
LABEL_11:
  OUTLINED_FUNCTION_4_3();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  os_log_type_t v20;
  float *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  uint64_t v14 = *(void *)(v12 + 280);
  uint64_t v13 = *(void *)(v12 + 288);
  uint64_t v15 = *(void *)(v12 + 272);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  __swift_destroy_boxed_opaque_existential_1(v12 + 64);
  uint64_t v16 = *(void *)(v12 + 408);
  OUTLINED_FUNCTION_52_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_60_15())
  {
    swift_errorRelease();
LABEL_5:
    swift_errorRelease();
    OUTLINED_FUNCTION_21_39();
    BargeInCapablePromptForConfirmationFlow.state.setter(v16);
    static ExecuteResponse.ongoing(requireInput:)();
    OUTLINED_FUNCTION_5_69();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_36_30();
  *(void *)(v12 + 152) = v16;
  swift_errorRetain();
  if (OUTLINED_FUNCTION_28_35())
  {
    OUTLINED_FUNCTION_75_8();
    os_log_type_t v17 = OUTLINED_FUNCTION_23_40();
    v18(v17);
    goto LABEL_5;
  }
  swift_errorRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter();
  uint64_t v20 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_63_0(v20))
  {
    uint64_t v21 = (float *)OUTLINED_FUNCTION_35_33();
    OUTLINED_FUNCTION_19_38(v21, 3.852e-34);
    OUTLINED_FUNCTION_38_28(&dword_0, v22, v23, "#BargeInCapablePromptForConfirmationFlow error executing section %ld");
    OUTLINED_FUNCTION_6();
  }
  OUTLINED_FUNCTION_34_28();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_10();
LABEL_11:
  OUTLINED_FUNCTION_4_3();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

uint64_t BargeInCapablePromptForConfirmationFlow.deinit()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v1();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 112));
  OUTLINED_FUNCTION_22();
  swift_release();
  OUTLINED_FUNCTION_22();
  swift_release();
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_13_4();
  type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v2();
  return v0;
}

uint64_t BargeInCapablePromptForConfirmationFlow.__deallocating_deinit()
{
  BargeInCapablePromptForConfirmationFlow.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance BargeInCapablePromptForConfirmationFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance BargeInCapablePromptForConfirmationFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 224))();
}

uint64_t protocol witness for Flow.execute() in conformance BargeInCapablePromptForConfirmationFlow<A, B>(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 232) + **(int **)(**(void **)v1 + 232));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance BargeInCapablePromptForConfirmationFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t type metadata accessor for BargeInCapablePromptForConfirmationFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_12(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_364B78@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 160))();
  *a1 = result;
  return result;
}

uint64_t sub_364BCC()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 184))();
}

ValueMetadata *type metadata accessor for BargeInCapableSection()
{
  return &type metadata for BargeInCapableSection;
}

uint64_t type metadata completion function for BargeInCapablePromptForConfirmationFlow()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State();
    if (v2 <= 0x3F)
    {
      uint64_t inited = swift_initClassMetadata2();
      if (inited) {
        return inited;
      }
      else {
        return 0;
      }
    }
  }
  return v0;
}

uint64_t type metadata completion function for BargeInCapablePromptForConfirmationFlow.State()
{
  uint64_t result = type metadata accessor for PromptResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BargeInCapablePromptForConfirmationFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        uint64_t v9 = *a2;
        swift_errorRetain();
        *a1 = v9;
        break;
      case 3:
        uint64_t v10 = type metadata accessor for PromptResult();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 2:
        *a1 = *a2;
        swift_retain();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BargeInCapablePromptForConfirmationFlow.State(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 4:
      return swift_errorRelease();
    case 3:
      uint64_t v3 = type metadata accessor for PromptResult();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 2:
      return swift_release();
  }
  return result;
}

uint64_t *initializeWithCopy for BargeInCapablePromptForConfirmationFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 4:
      uint64_t v7 = *a2;
      swift_errorRetain();
      *a1 = v7;
      break;
    case 3:
      uint64_t v8 = type metadata accessor for PromptResult();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      break;
    case 2:
      *a1 = *a2;
      swift_retain();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for BargeInCapablePromptForConfirmationFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        uint64_t v7 = *a2;
        swift_errorRetain();
        *a1 = v7;
        break;
      case 3:
        uint64_t v8 = type metadata accessor for PromptResult();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2:
        *a1 = *a2;
        swift_retain();
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for BargeInCapablePromptForConfirmationFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = type metadata accessor for PromptResult();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for BargeInCapablePromptForConfirmationFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = type metadata accessor for PromptResult();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(void *a1)
{
  id v1 = [a1 aceId];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_1_44();
  uint64_t v15 = v9 + ((*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v10 + 16) = v16;
  *uint64_t v16 = v17;
  v16[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(a1, a2, a3, a4, a5, a6, a7, v15, a9);
}

uint64_t objectdestroyTm_19()
{
  OUTLINED_FUNCTION_10();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 56) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  OUTLINED_FUNCTION_11();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 48) + 32))();
}

uint64_t OUTLINED_FUNCTION_4_91()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_43()
{
  return *(void *)(v0 + 216);
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_18_37()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 184) + *(void *)(v0 + 376));
  uint64_t v2 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_19_38(float *a1, float a2)
{
  *a1 = a2;
  *(void *)(v2 + 160) = v3;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_23_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_35()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_34_28()
{
}

uint64_t OUTLINED_FUNCTION_35_33()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_36_30()
{
  return swift_errorRelease();
}

void OUTLINED_FUNCTION_37_27()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_38_28(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_41_25()
{
  *uint64_t v1 = v0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_42_27()
{
  return static ExecuteResponse.ongoing(requireInput:)();
}

uint64_t OUTLINED_FUNCTION_52_17()
{
  *(void *)(v1 + 144) = v0;
  return swift_errorRetain();
}

uint64_t OUTLINED_FUNCTION_58_19()
{
  *(void *)(v1 + 24) = v0;
  return type metadata accessor for SimpleOutputFlowAsync();
}

uint64_t OUTLINED_FUNCTION_60_15()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_61_14(uint64_t a1)
{
  return static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)(v1, a1);
}

uint64_t OUTLINED_FUNCTION_62_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_63_10()
{
  return v0 + 8;
}

void *OUTLINED_FUNCTION_67_12()
{
  *uint64_t v0 = v1;
  return v0;
}

unint64_t OUTLINED_FUNCTION_69_11(uint64_t a1)
{
  *(void *)(v1 + 400) = a1;
  return type metadata accessor for SABaseCommand();
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_74_9()
{
  return *(void *)(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_75_8()
{
  return swift_errorRelease();
}

uint64_t OUTLINED_FUNCTION_86_9()
{
  return type metadata accessor for PromptResult();
}

uint64_t YesNoConfirmationParser.__allocating_init(sharedGlobals:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(a1, v2 + 24);
  return v2;
}

void YesNoConfirmationParser.promptResponse.didset()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v4 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v1, v2, "#YesNoConfirmationParser promptResponse: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t YesNoConfirmationParser.promptResponse.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

void YesNoConfirmationParser.promptResponse.setter(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  YesNoConfirmationParser.promptResponse.didset();
}

uint64_t YesNoConfirmationParser.init(sharedGlobals:)(long long *a1)
{
  *(unsigned char *)(v1 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(a1, v1 + 24);
  return v1;
}

uint64_t YesNoConfirmationParser.parseConfirmationResponse(input:)@<X0>(uint64_t a1@<X8>)
{
  os_log_type_t v2 = (unsigned char *)v1;
  uint64_t v70 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v69 = (uint64_t *)((char *)&v68 - v7);
  uint64_t v68 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v68 - v20;
  Input.parse.getter();
  uint64_t v22 = OUTLINED_FUNCTION_2_107();
  int v24 = v23(v22);
  if (v24 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_2;
  }
  if (v24 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v21, v13);
    uint64_t v33 = v9;
    uint64_t v34 = v68;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v21, v68);
    uint64_t v35 = v69;
    static CommonDirectAction.from(_:)((uint64_t)v12, v69);
    uint64_t v36 = type metadata accessor for CommonDirectAction();
    if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36) != 1)
    {
      outlined init with copy of CommonDirectAction?((uint64_t)v35, (uint64_t)v6);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 6)
      {
        OUTLINED_FUNCTION_0_63();
        *(unsigned char *)(v1 + 16) = 0;
LABEL_28:
        YesNoConfirmationParser.promptResponse.didset();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
        outlined destroy of SubmitCommandError?((uint64_t)v35, &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_29;
      }
      if (EnumCaseMultiPayload == 7)
      {
        OUTLINED_FUNCTION_0_63();
        char v38 = 2;
LABEL_27:
        v2[16] = v38;
        goto LABEL_28;
      }
      outlined destroy of CommonDirectAction((uint64_t)v6);
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    __swift_project_value_buffer(v45, (uint64_t)static Logger.siriPhone);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_0, v46, v47, "#YesNoConfirmationParser Unrecognized directInvocation", v48, 2u);
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_0_63();
    char v38 = 5;
    goto LABEL_27;
  }
  if (v24 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v39 = OUTLINED_FUNCTION_2_107();
    v40(v39);
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  if (v24 == enum case for Parse.uso(_:))
  {
LABEL_2:
    uint64_t v25 = OUTLINED_FUNCTION_2_107();
    v26(v25);
LABEL_3:
    uint64_t v27 = *(void *)(v1 + 48);
    uint64_t v28 = *(void *)(v1 + 56);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), v27);
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 72))(v27, v28);
    Input.parse.getter();
    (*(void (**)(void *__return_ptr, char *))(*(void *)v29 + 192))(v71, v19);
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v13);
    uint64_t v30 = v72;
    if (v72)
    {
      uint64_t v31 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      char v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 64))(v30, v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    }
    else
    {
      outlined destroy of SubmitCommandError?((uint64_t)v71, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      char v32 = 5;
    }
    OUTLINED_FUNCTION_0_63();
    *(unsigned char *)(v1 + 16) = v32;
    YesNoConfirmationParser.promptResponse.didset();
    goto LABEL_29;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&dword_0, v42, v43, "#YesNoConfirmationParser Unrecognized parse type", v44, 2u);
    OUTLINED_FUNCTION_6();
  }

  OUTLINED_FUNCTION_0_63();
  v2[16] = 5;
  YesNoConfirmationParser.promptResponse.didset();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v13);
LABEL_29:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  __swift_project_value_buffer(v49, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  unint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 136315394;
    uint64_t v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000021, 0x800000000049AE00, &v75);
    uint64_t v53 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v52 + 12) = 2080;
    char v54 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 96))(v53);
    if (v54 == 5)
    {
      unint64_t v55 = 0xE300000000000000;
      uint64_t v56 = 7104878;
    }
    else
    {
      uint64_t v56 = PhoneCallConfirmation.rawValue.getter(v54);
      unint64_t v55 = v58;
    }
    uint64_t v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v55, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v50, v51, "#YesNoConfirmationParser %s received response: %s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    uint64_t v57 = swift_release_n();
  }
  int v59 = (*(unsigned __int8 (**)(uint64_t))(*(void *)v2 + 96))(v57);
  if ((v59 - 1) >= 2)
  {
    if (v59)
    {
      uint64_t v66 = type metadata accessor for ConfirmationResponse();
      uint64_t v64 = v70;
      uint64_t v65 = 1;
      return __swift_storeEnumTagSinglePayload(v64, v65, 1, v66);
    }
    unint64_t v60 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
  }
  else
  {
    unint64_t v60 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
  }
  uint64_t v61 = *v60;
  uint64_t v62 = type metadata accessor for ConfirmationResponse();
  uint64_t v63 = v70;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 104))(v70, v61, v62);
  uint64_t v64 = v63;
  uint64_t v65 = 0;
  uint64_t v66 = v62;
  return __swift_storeEnumTagSinglePayload(v64, v65, 1, v66);
}

uint64_t YesNoConfirmationParser.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t YesNoConfirmationParser.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ConfirmationResponseParsing.parseConfirmationResponse(input:) in conformance YesNoConfirmationParser()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t sub_36666C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

void sub_3666B8(char *a1)
{
}

uint64_t type metadata accessor for YesNoConfirmationParser()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_0_63()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_107()
{
  return v0;
}

uint64_t specialized PhoneCallRecordProperties<>.isVideo.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_12_0();
  outlined init with copy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, v1);
  uint64_t v4 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v1, 1, v4) == 1)
  {
    outlined destroy of SpeakableString?(v1);
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v5 = SpeakableString.print.getter();
    uint64_t v6 = v7;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v1, v4);
  }
  uint64_t BackingType = INCallCapabilityGetBackingType();
  if (BackingType == 2)
  {
    uint64_t v9 = @"VIDEO_CALL";
    goto LABEL_8;
  }
  if (BackingType == 1)
  {
    uint64_t v9 = @"AUDIO_CALL";
LABEL_8:
    uint64_t v10 = v9;
    goto LABEL_10;
  }
  uint64_t v9 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
LABEL_10:
  uint64_t v11 = v9;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  if (v6)
  {
    if (v5 == v12 && v6 == v14) {
      char v16 = 1;
    }
    else {
      char v16 = OUTLINED_FUNCTION_4_20();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = 0;
  }
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t PhoneCallRecord.Builder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PhoneCallRecord.Builder.init()();
  return v0;
}

uint64_t specialized PhoneCallRecordProperties<>.callerWithAliases.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller)) {
    return 0;
  }
  uint64_t v1 = swift_retain();
  uint64_t v2 = specialized closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(v1);
  swift_release();
  type metadata accessor for PhonePersonWithAliasesList.Builder();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for PhonePersonWithAliasesList();
  swift_allocObject();
  uint64_t v4 = PhonePersonList.init(builder:)(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t specialized closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_46A030;
  *(void *)(v2 + 32) = a1;
  uint64_t v4 = v2;
  specialized Array._endMutation()();
  swift_retain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  return v4;
}

uint64_t specialized PhoneCallRecordProperties<>.isFaceTimeVideo.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider)) {
    return 0;
  }
  swift_retain();
  char v1 = specialized PhoneCallProviderProperties.isFaceTime.getter();
  swift_release();
  if ((v1 & 1) == 0) {
    return 0;
  }

  return specialized PhoneCallRecordProperties<>.isVideo.getter();
}

uint64_t specialized PhoneCallRecordProperties<>.isFaceTimeAudio.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  if (!v5) {
    return v5 & 1;
  }
  swift_retain();
  char v6 = specialized PhoneCallProviderProperties.isFaceTime.getter();
  swift_release();
  if ((v6 & 1) == 0)
  {
    LOBYTE(v5) = 0;
    return v5 & 1;
  }
  outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, (uint64_t)v4);
  uint64_t v7 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v7) == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v4);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v8 = SpeakableString.print.getter();
    uint64_t v9 = v10;
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  }
  uint64_t BackingType = INCallCapabilityGetBackingType();
  if (BackingType == 2)
  {
    uint64_t v12 = @"VIDEO_CALL";
  }
  else
  {
    if (BackingType != 1)
    {
      uint64_t v12 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
      goto LABEL_13;
    }
    uint64_t v12 = @"AUDIO_CALL";
  }
  uint64_t v13 = v12;
LABEL_13:
  uint64_t v14 = v12;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  if (v9)
  {
    if (v8 == v15 && v9 == v17) {
      LOBYTE(v5) = 1;
    }
    else {
      LOBYTE(v5) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v5) = 0;
  }
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t key path setter for PhoneCallRecord.Builder.identifier : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 280))(v6);
}

uint64_t PhoneCallRecord.Builder.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_identifier, a1);
}

uint64_t PhoneCallRecord.Builder.identifier.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_identifier);
}

uint64_t (*PhoneCallRecord.Builder.identifier.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.dateCreated : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 304);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.dateCreated.getter()
{
  return PhoneCallRecord.Builder.dateCreated.getter();
}

{
  OUTLINED_FUNCTION_4_7();
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.dateCreated.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.dateCreated.setter(a1);
}

{
  void *v1;

  OUTLINED_FUNCTION_36_21();
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t (*PhoneCallRecord.Builder.dateCreated.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.caller : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 328);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.caller.getter()
{
  return PhoneCallRecord.Builder.dateCreated.getter();
}

uint64_t PhoneCallRecord.Builder.caller.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.dateCreated.setter(a1);
}

uint64_t (*PhoneCallRecord.Builder.caller.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.aliases : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 352);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.aliases.getter()
{
  return PhoneCallRecord.Builder.aliases.getter();
}

{
  OUTLINED_FUNCTION_4_7();
  return swift_bridgeObjectRetain();
}

uint64_t PhoneCallRecord.Builder.aliases.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.aliases.setter(a1);
}

{
  void *v1;

  OUTLINED_FUNCTION_36_21();
  *uint64_t v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallRecord.Builder.aliases.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.callRecordType : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 376))(v6);
}

uint64_t PhoneCallRecord.Builder.callRecordType.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callRecordType, a1);
}

uint64_t PhoneCallRecord.Builder.callRecordType.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callRecordType);
}

uint64_t (*PhoneCallRecord.Builder.callRecordType.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.callMetrics : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 400);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.callMetrics.getter()
{
  return PhoneCallRecord.Builder.dateCreated.getter();
}

uint64_t PhoneCallRecord.Builder.callMetrics.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.dateCreated.setter(a1);
}

uint64_t (*PhoneCallRecord.Builder.callMetrics.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneCallRecord.Builder.unseen.getter()
{
  OUTLINED_FUNCTION_4_7();
  return *v0;
}

uint64_t PhoneCallRecord.Builder.unseen.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_36_21();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PhoneCallRecord.Builder.unseen.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.callCapability : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 448))(v6);
}

uint64_t PhoneCallRecord.Builder.callCapability.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callCapability, a1);
}

uint64_t PhoneCallRecord.Builder.callCapability.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callCapability);
}

uint64_t (*PhoneCallRecord.Builder.callCapability.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path getter for PhoneCallRecord.Builder.numberOfCalls : PhoneCallRecord.Builder@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 464))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t key path setter for PhoneCallRecord.Builder.numberOfCalls : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)a2 + 472))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t PhoneCallRecord.Builder.numberOfCalls.getter()
{
  return PhoneCallRecord.Builder.numberOfCalls.getter();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_4_7();
  return *(void *)v0;
}

uint64_t PhoneCallRecord.Builder.numberOfCalls.setter(uint64_t a1, char a2)
{
  return PhoneCallRecord.Builder.numberOfCalls.setter(a1, a2);
}

{
  uint64_t v2;
  uint64_t result;

  uint64_t result = OUTLINED_FUNCTION_36_21();
  *(void *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*PhoneCallRecord.Builder.numberOfCalls.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.callProvider : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 496);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.callProvider.getter()
{
  return PhoneCallRecord.Builder.dateCreated.getter();
}

uint64_t PhoneCallRecord.Builder.callProvider.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.dateCreated.setter(a1);
}

uint64_t (*PhoneCallRecord.Builder.callProvider.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneCallRecord.Builder.isCallerIdBlocked.getter()
{
  OUTLINED_FUNCTION_4_7();
  return *v0;
}

uint64_t PhoneCallRecord.Builder.isCallerIdBlocked.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_36_21();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PhoneCallRecord.Builder.isCallerIdBlocked.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.displayName : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 544))(v6);
}

uint64_t PhoneCallRecord.Builder.displayName.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayName, a1);
}

uint64_t PhoneCallRecord.Builder.displayName.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayName);
}

uint64_t (*PhoneCallRecord.Builder.displayName.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.displayDateTime : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 568))(v6);
}

uint64_t PhoneCallRecord.Builder.displayDateTime.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayDateTime, a1);
}

uint64_t PhoneCallRecord.Builder.displayDateTime.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayDateTime);
}

uint64_t (*PhoneCallRecord.Builder.displayDateTime.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.displayTextColor : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 592))(v6);
}

uint64_t PhoneCallRecord.Builder.displayTextColor.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayTextColor, a1);
}

uint64_t PhoneCallRecord.Builder.displayTextColor.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayTextColor);
}

uint64_t (*PhoneCallRecord.Builder.displayTextColor.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.displaySymbolIcon : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 616))(v6);
}

uint64_t PhoneCallRecord.Builder.displaySymbolIcon.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displaySymbolIcon, a1);
}

uint64_t PhoneCallRecord.Builder.displaySymbolIcon.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displaySymbolIcon);
}

uint64_t (*PhoneCallRecord.Builder.displaySymbolIcon.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.displayCallDetail : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 640))(v6);
}

uint64_t PhoneCallRecord.Builder.displayCallDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayCallDetail, a1);
}

uint64_t PhoneCallRecord.Builder.displayCallDetail.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayCallDetail);
}

uint64_t (*PhoneCallRecord.Builder.displayCallDetail.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.selectAction : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 664))(v6);
}

uint64_t PhoneCallRecord.Builder.selectAction.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_selectAction, a1);
}

uint64_t PhoneCallRecord.Builder.selectAction.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_selectAction);
}

uint64_t (*PhoneCallRecord.Builder.selectAction.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.playVoicemailAction : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 688))(v6);
}

uint64_t PhoneCallRecord.Builder.playVoicemailAction.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_playVoicemailAction, a1);
}

uint64_t PhoneCallRecord.Builder.playVoicemailAction.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_playVoicemailAction);
}

uint64_t (*PhoneCallRecord.Builder.playVoicemailAction.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.openCallRecordAction : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 712))(v6);
}

uint64_t PhoneCallRecord.Builder.openCallRecordAction.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_openCallRecordAction, a1);
}

uint64_t PhoneCallRecord.Builder.openCallRecordAction.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_openCallRecordAction);
}

uint64_t (*PhoneCallRecord.Builder.openCallRecordAction.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.callDuration : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 736))(v6);
}

uint64_t PhoneCallRecord.Builder.callDuration.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDuration, a1);
}

uint64_t PhoneCallRecord.Builder.callDuration.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDuration);
}

uint64_t (*PhoneCallRecord.Builder.callDuration.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.participants : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 760);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.participants.getter()
{
  return PhoneCallRecord.Builder.aliases.getter();
}

uint64_t PhoneCallRecord.Builder.participants.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.aliases.setter(a1);
}

uint64_t (*PhoneCallRecord.Builder.participants.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.participantsNames : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 784);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.participantsNames.getter()
{
  return PhoneCallRecord.Builder.aliases.getter();
}

uint64_t PhoneCallRecord.Builder.participantsNames.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.aliases.setter(a1);
}

uint64_t (*PhoneCallRecord.Builder.participantsNames.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallRecord.Builder.contactIds : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 808);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneCallRecord.Builder.contactIds.getter()
{
  return PhoneCallRecord.Builder.aliases.getter();
}

uint64_t PhoneCallRecord.Builder.contactIds.setter(uint64_t a1)
{
  return PhoneCallRecord.Builder.aliases.setter(a1);
}

uint64_t (*PhoneCallRecord.Builder.contactIds.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path getter for PhoneCallRecord.Builder.callDurationInterval : PhoneCallRecord.Builder@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 824))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t key path setter for PhoneCallRecord.Builder.callDurationInterval : PhoneCallRecord.Builder(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)a2 + 832))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t PhoneCallRecord.Builder.callDurationInterval.getter()
{
  return PhoneCallRecord.Builder.numberOfCalls.getter();
}

uint64_t PhoneCallRecord.Builder.callDurationInterval.setter(uint64_t a1, char a2)
{
  return PhoneCallRecord.Builder.numberOfCalls.setter(a1, a2);
}

uint64_t (*PhoneCallRecord.Builder.callDurationInterval.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneCallRecord.Builder.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_identifier;
  uint64_t v2 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_dateCreated) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_caller) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_aliases) = _swiftEmptyArrayStorage;
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callRecordType);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callMetrics) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_unseen) = 0;
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callCapability);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_numberOfCalls;
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callProvider) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_isCallerIdBlocked) = 0;
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayName);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayDateTime);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayTextColor);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displaySymbolIcon);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayCallDetail);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_selectAction);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_playVoicemailAction);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_openCallRecordAction);
  OUTLINED_FUNCTION_15_52(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDuration);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_participants) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_participantsNames) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_contactIds) = _swiftEmptyArrayStorage;
  uint64_t v4 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDurationInterval;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  return v0;
}

uint64_t PhoneCallRecord.Builder.withIdentifier(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withIdentifier(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDateCreated(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 304);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDateCreated(_:)(uint64_t a1)
{
  if (a1) {
    dispatch thunk of DialogCalendar.Builder.build()();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_135();
  v1();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCaller(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 328);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCaller(_:)(uint64_t a1)
{
  if (a1) {
    dispatch thunk of DialogPerson.Builder.build()();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_135();
  v1();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withAliases(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 352);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallRecordType(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallRecordType(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallMetrics(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 400);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallMetrics(_:)(uint64_t a1)
{
  if (a1) {
    (*(void (**)(void))(*(void *)a1 + 168))();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_135();
  v1();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withUnseen(_:)()
{
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v0 + 424))();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallCapability(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallCapability(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withNumberOfCalls(_:)()
{
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v0 + 472))();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallProvider(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 496);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallProvider(_:)(uint64_t a1)
{
  if (a1) {
    (*(void (**)(void))(*(void *)a1 + 240))();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_135();
  v1();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withIsCallerIdBlocked(_:)()
{
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v0 + 520))();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayName(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayName(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayDateTime(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayDateTime(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayTextColor(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayTextColor(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplaySymbolIcon(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplaySymbolIcon(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayCallDetail(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withDisplayCallDetail(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withSelectAction(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withSelectAction(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withPlayVoicemailAction(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withPlayVoicemailAction(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withOpenCallRecordAction(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withOpenCallRecordAction(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallDuration(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_35_34();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallDuration(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_37_28();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withParticipants(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 760);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withParticipantsNames(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 784);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withContactIds(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 808);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.withCallDurationInterval(_:)()
{
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v0 + 832))();

  return swift_retain();
}

uint64_t PhoneCallRecord.Builder.build()()
{
  type metadata accessor for PhoneCallRecord(0);
  uint64_t v0 = swift_allocObject();
  swift_retain();
  PhoneCallRecord.init(builder:)();
  return v0;
}

uint64_t PhoneCallRecord.__allocating_init(builder:)()
{
  uint64_t v0 = swift_allocObject();
  PhoneCallRecord.init(builder:)();
  return v0;
}

uint64_t type metadata accessor for PhoneCallRecord(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallRecord);
}

uint64_t PhoneCallRecord.Builder.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_identifier);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callRecordType);
  swift_release();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callCapability);
  swift_release();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayName);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayDateTime);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayTextColor);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displaySymbolIcon);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayCallDetail);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_selectAction);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_playVoicemailAction);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_openCallRecordAction);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDuration);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PhoneCallRecord.Builder.__deallocating_deinit()
{
  return PhoneCallRecord.Builder.__deallocating_deinit((void (*)(void))PhoneCallRecord.Builder.deinit);
}

unint64_t static PhoneCallRecord.catTypeName.getter()
{
  return 0xD000000000000010;
}

uint64_t key path setter for PhoneCallRecord.mockGlobals : PhoneCallRecord(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 304);
  id v4 = *a1;
  return v3(v2);
}

uint64_t PhoneCallRecord.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
}

uint64_t PhoneCallRecord.dateCreated.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t PhoneCallRecord.caller.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t PhoneCallRecord.aliases.getter()
{
  return OUTLINED_FUNCTION_34_29();
}

uint64_t PhoneCallRecord.callRecordType.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
}

uint64_t PhoneCallRecord.callMetrics.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t PhoneCallRecord.unseen.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen);
}

uint64_t PhoneCallRecord.callCapability.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
}

uint64_t PhoneCallRecord.numberOfCalls.getter()
{
  return OUTLINED_FUNCTION_60_16(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls);
}

uint64_t PhoneCallRecord.callProvider.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t PhoneCallRecord.isCallerIdBlocked.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked);
}

uint64_t PhoneCallRecord.displayName.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
}

uint64_t PhoneCallRecord.displayDateTime.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
}

uint64_t PhoneCallRecord.displayTextColor.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
}

uint64_t PhoneCallRecord.displaySymbolIcon.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
}

uint64_t PhoneCallRecord.displayCallDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
}

uint64_t PhoneCallRecord.selectAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
}

uint64_t PhoneCallRecord.playVoicemailAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
}

uint64_t PhoneCallRecord.openCallRecordAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
}

uint64_t PhoneCallRecord.callDuration.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
}

uint64_t PhoneCallRecord.participants.getter()
{
  return OUTLINED_FUNCTION_34_29();
}

uint64_t PhoneCallRecord.participantsNames.getter()
{
  return OUTLINED_FUNCTION_34_29();
}

uint64_t PhoneCallRecord.contactIds.getter()
{
  return OUTLINED_FUNCTION_34_29();
}

uint64_t PhoneCallRecord.callDurationInterval.getter()
{
  return OUTLINED_FUNCTION_60_16(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval);
}

uint64_t PhoneCallRecord.init(builder:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_12_0();
  *(void *)(v0 + 16) = 0;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v3();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated) = (*(uint64_t (**)(void))(v4 + 296))();
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller) = (*(uint64_t (**)(void))(v5 + 320))();
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases) = (*(uint64_t (**)(void))(v6 + 344))();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v7();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics) = (*(uint64_t (**)(void))(v8 + 392))();
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen) = (*(uint64_t (**)(void))(v9 + 416))() & 1;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v10();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = (*(uint64_t (**)(void))(v11 + 464))();
  OUTLINED_FUNCTION_74_10(v12, v13, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls);
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider) = (*(uint64_t (**)(void))(v14 + 488))();
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked) = (*(uint64_t (**)(void))(v15 + 512))() & 1;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v16();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v17();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v18();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v19();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v20();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v21();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v22();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v23();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_26();
  v24();
  OUTLINED_FUNCTION_38_29(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants) = (*(uint64_t (**)(void))(v25 + 752))();
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames) = (*(uint64_t (**)(void))(v26 + 776))();
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds) = (*(uint64_t (**)(void))(v27 + 800))();
  OUTLINED_FUNCTION_2();
  uint64_t v29 = (*(uint64_t (**)(void))(v28 + 824))();
  char v31 = v30;
  swift_release();
  uint64_t v32 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval;
  *(void *)uint64_t v32 = v29;
  *(unsigned char *)(v32 + 8) = v31 & 1;
  return v0;
}

uint64_t PhoneCallRecord.__allocating_init(identifier:dateCreated:caller:aliases:callRecordType:callMetrics:unseen:callCapability:numberOfCalls:callProvider:isCallerIdBlocked:displayName:displayDateTime:displayTextColor:displaySymbolIcon:displayCallDetail:selectAction:playVoicemailAction:openCallRecordAction:callDuration:participants:participantsNames:contactIds:callDurationInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  type metadata accessor for PhoneCallRecord.Builder(0);
  swift_allocObject();
  PhoneCallRecord.Builder.init()();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v32 + 856))(a1);
  swift_release();
  OUTLINED_FUNCTION_19_24();
  (*(void (**)(uint64_t))(v33 + 872))(a2);
  swift_release();
  OUTLINED_FUNCTION_2();
  uint64_t v34 = OUTLINED_FUNCTION_35_34();
  v35(v34);
  swift_release();
  OUTLINED_FUNCTION_19_24();
  (*(void (**)(uint64_t))(v36 + 904))(a4);
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v37 + 912))(a5);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v38 + 928))(a6);
  swift_release();
  OUTLINED_FUNCTION_2();
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v39 + 944))(a7);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v40 + 952))(a8);
  swift_release();
  OUTLINED_FUNCTION_2();
  uint64_t v42 = (*(uint64_t (**)(uint64_t, void))(v41 + 968))(a9, a10 & 1);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v42 + 976))(a11);
  swift_release();
  OUTLINED_FUNCTION_2();
  (*(void (**)(void))(v43 + 992))(a12);
  OUTLINED_FUNCTION_55_18();
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_56_18();
  v44();
  OUTLINED_FUNCTION_54_19();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v45 + 1016))(a14);
  OUTLINED_FUNCTION_55_18();
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_56_18();
  v46();
  OUTLINED_FUNCTION_54_19();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v47 + 1048))(a16);
  OUTLINED_FUNCTION_55_18();
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_56_18();
  v48();
  OUTLINED_FUNCTION_54_19();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v49 + 1080))(a18);
  OUTLINED_FUNCTION_55_18();
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_56_18();
  v50();
  OUTLINED_FUNCTION_54_19();
  OUTLINED_FUNCTION_2();
  uint64_t v51 = OUTLINED_FUNCTION_35_34();
  v52(v51);
  OUTLINED_FUNCTION_55_18();
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_56_18();
  v53();
  OUTLINED_FUNCTION_54_19();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v54 + 1144))(a22);
  OUTLINED_FUNCTION_55_18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_56_18();
  v55();
  OUTLINED_FUNCTION_54_19();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v56 + 1160))(a24);
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_6();
  uint64_t v58 = (*(uint64_t (**)(uint64_t, void))(v57 + 1168))(a25, a26 & 1);
  swift_release();
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v62 + 320))(v58);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of SpeakableString?(a21);
  outlined destroy of SpeakableString?(a20);
  outlined destroy of SpeakableString?(a19);
  outlined destroy of SpeakableString?(a18);
  outlined destroy of SpeakableString?(a17);
  outlined destroy of SpeakableString?(a16);
  outlined destroy of SpeakableString?(a15);
  outlined destroy of SpeakableString?(a14);
  outlined destroy of SpeakableString?(a13);
  outlined destroy of SpeakableString?(a8);
  outlined destroy of SpeakableString?(a5);
  outlined destroy of SpeakableString?(a1);
  return v59;
}

uint64_t type metadata accessor for PhoneCallRecord.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallRecord.Builder);
}

void PhoneCallRecord.getProperty(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v107 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_8();
  uint64_t v105 = v9;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_17();
  uint64_t v104 = v11;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_5_17();
  uint64_t v103 = v13;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_5_17();
  uint64_t v102 = v15;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_5_17();
  uint64_t v101 = v17;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_17();
  uint64_t v100 = v19;
  OUTLINED_FUNCTION_18_0();
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v100 - v22;
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_40_18();
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v100 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  char v30 = (char *)&v100 - v29;
  __chkstk_darwin(v28);
  OUTLINED_FUNCTION_46_11();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v100 - v32;
  BOOL v34 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v34 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    uint64_t v35 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
    outlined init with copy of SpeakableString?(v35, (uint64_t)v33);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_2_63((uint64_t)v33);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = (uint64_t)v33;
    goto LABEL_9;
  }
  BOOL v38 = a1 == 0x6165724365746164 && a2 == 0xEB00000000646574;
  if (v38 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    OUTLINED_FUNCTION_52_18();
    if (!v23) {
      goto LABEL_10;
    }
    uint64_t v39 = type metadata accessor for DialogCalendar();
    goto LABEL_19;
  }
  BOOL v40 = a1 == 0x72656C6C6163 && a2 == 0xE600000000000000;
  if (v40 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    OUTLINED_FUNCTION_52_18();
    if (!v23) {
      goto LABEL_10;
    }
    uint64_t v39 = type metadata accessor for PhonePerson(0);
    goto LABEL_19;
  }
  BOOL v41 = a1 == 0x73657361696C61 && a2 == 0xE700000000000000;
  if (v41 || (OUTLINED_FUNCTION_4_20() & 1) != 0) {
    goto LABEL_34;
  }
  OUTLINED_FUNCTION_67_13();
  BOOL v46 = a1 == (v45 | 0x6F63655200000000) && a2 == v44;
  if (v46 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    uint64_t v47 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
    outlined init with copy of SpeakableString?(v47, v4);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_2_63(v4);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = v4;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_67_13();
  BOOL v50 = a1 == (v49 | 0x7274654D00000000) && a2 == v48;
  if (v50 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    OUTLINED_FUNCTION_52_18();
    if (!v23) {
      goto LABEL_10;
    }
    uint64_t v39 = type metadata accessor for PhoneCallMetrics();
    goto LABEL_19;
  }
  BOOL v51 = a1 == 0x6E6565736E75 && a2 == 0xE600000000000000;
  if (v51 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    uint64_t v52 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen;
LABEL_59:
    uint64_t v53 = (unsigned char *)v107;
    char v54 = *(unsigned char *)(v106 + v52);
    *(void *)(v107 + 24) = &type metadata for Bool;
    *uint64_t v53 = v54;
    return;
  }
  OUTLINED_FUNCTION_67_13();
  BOOL v57 = a1 == (v56 | 0x6170614300000000) && a2 == v55;
  if (v57 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    uint64_t v58 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
    outlined init with copy of SpeakableString?(v58, (uint64_t)v30);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_2_63((uint64_t)v30);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = (uint64_t)v30;
    goto LABEL_9;
  }
  BOOL v59 = a1 == 0x664F7265626D756ELL && a2 == 0xED0000736C6C6143;
  if (v59 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    uint64_t v60 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls;
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_67_13();
  BOOL v66 = a1 == (v65 | 0x766F725000000000) && a2 == v64;
  if (v66 || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    OUTLINED_FUNCTION_52_18();
    if (!v23) {
      goto LABEL_10;
    }
    uint64_t v39 = type metadata accessor for PhoneCallProvider(0);
LABEL_19:
    OUTLINED_FUNCTION_57_16(v39);
    swift_retain();
    return;
  }
  if (a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_32_23(), v34) || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v52 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked;
    goto LABEL_59;
  }
  BOOL v67 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v67 || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v68 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
    outlined init with copy of SpeakableString?(v68, (uint64_t)v27);
    uint64_t v69 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_16_53(v69);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = (uint64_t)v27;
    goto LABEL_9;
  }
  BOOL v70 = a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461;
  if (v70 || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v71 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
    outlined init with copy of SpeakableString?(v71, v3);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_2_63(v3);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = v3;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000010 && (OUTLINED_FUNCTION_32_23(), v34) || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v72 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
    outlined init with copy of SpeakableString?(v72, (uint64_t)v23);
    uint64_t v73 = type metadata accessor for SpeakableString();
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v73) != 1)
    {
      uint64_t v74 = (uint64_t *)v107;
      *(void *)(v107 + 24) = v73;
      __swift_allocate_boxed_opaque_existential_1(v74);
      uint64_t v75 = *(void (**)(void))(*(void *)(v73 - 8) + 32);
LABEL_11:
      v75();
      return;
    }
    uint64_t v36 = (uint64_t)v23;
LABEL_9:
    outlined destroy of SpeakableString?(v36);
LABEL_10:
    uint64_t v37 = v107;
    *(_OWORD *)uint64_t v107 = 0u;
    *(_OWORD *)(v37 + 16) = 0u;
    return;
  }
  if (a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_32_23(), v34) || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v76 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
    outlined init with copy of SpeakableString?(v76, v100);
    uint64_t v77 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_16_53(v77);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = v100;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_32_23(), v34) || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v78 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
    outlined init with copy of SpeakableString?(v78, v101);
    uint64_t v79 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_16_53(v79);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = v101;
    goto LABEL_9;
  }
  BOOL v80 = a1 == 0x63417463656C6573 && a2 == 0xEC0000006E6F6974;
  if (v80 || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v81 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
    outlined init with copy of SpeakableString?(v81, v102);
    uint64_t v82 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_16_53(v82);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = v102;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000013 && (OUTLINED_FUNCTION_32_23(), v34) || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v83 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
    outlined init with copy of SpeakableString?(v83, v103);
    uint64_t v84 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_16_53(v84);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = v103;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000014 && (OUTLINED_FUNCTION_32_23(), v34) || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    uint64_t v85 = OUTLINED_FUNCTION_41_26(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
    outlined init with copy of SpeakableString?(v85, v104);
    uint64_t v86 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_16_53(v86);
    if (!v34) {
      goto LABEL_147;
    }
    uint64_t v36 = v104;
    goto LABEL_9;
  }
  BOOL v87 = a1 == 0x617275446C6C6163 && a2 == 0xEC0000006E6F6974;
  if (v87 || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v106 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration, v105);
    uint64_t v88 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_16_53(v88);
    if (!v34)
    {
LABEL_147:
      OUTLINED_FUNCTION_40_28();
      OUTLINED_FUNCTION_9_52();
      uint64_t v75 = *(void (**)(void))(v89 + 32);
      goto LABEL_11;
    }
    uint64_t v36 = v105;
    goto LABEL_9;
  }
  BOOL v90 = a1 == 0x7069636974726170 && a2 == 0xEC00000073746E61;
  if (v90 || (OUTLINED_FUNCTION_11_62() & 1) != 0)
  {
LABEL_34:
    OUTLINED_FUNCTION_52_18();
    uint64_t v42 = &demangling cache variable for type metadata for [PhonePerson];
LABEL_35:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(v42);
    OUTLINED_FUNCTION_57_16(v43);
    swift_bridgeObjectRetain();
    return;
  }
  if (a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_32_23(), v34)
    || (OUTLINED_FUNCTION_11_62() & 1) != 0
    || (a1 == 0x49746361746E6F63 ? (BOOL v91 = a2 == 0xEA00000000007364) : (BOOL v91 = 0),
        v91 || (OUTLINED_FUNCTION_11_62() & 1) != 0))
  {
    OUTLINED_FUNCTION_52_18();
    uint64_t v42 = &demangling cache variable for type metadata for [SpeakableString];
    goto LABEL_35;
  }
  if (a1 != 0xD000000000000014 || (OUTLINED_FUNCTION_32_23(), !v34))
  {
    if ((OUTLINED_FUNCTION_11_62() & 1) == 0)
    {
      if (a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_32_23(), v34) || (OUTLINED_FUNCTION_11_62() & 1) != 0)
      {
        uint64_t v92 = specialized PhoneCallRecordProperties<>.callerWithAliases.getter();
        if (!v92) {
          goto LABEL_10;
        }
        uint64_t v93 = v92;
        uint64_t v94 = type metadata accessor for PhonePersonWithAliasesList();
        uint64_t v95 = (uint64_t *)v107;
        *(void *)(v107 + 24) = v94;
        *uint64_t v95 = v93;
      }
      else
      {
        BOOL v96 = a1 == 0x6954656361467369 && a2 == 0xEF6F65646956656DLL;
        if (v96 || (OUTLINED_FUNCTION_62_19(), (OUTLINED_FUNCTION_11_62() & 1) != 0))
        {
          char v97 = specialized PhoneCallRecordProperties<>.isFaceTimeVideo.getter();
        }
        else
        {
          if (a1 != 0x6954656361467369 || a2 != 0xEF6F69647541656DLL)
          {
            OUTLINED_FUNCTION_62_19();
            if ((OUTLINED_FUNCTION_11_62() & 1) == 0) {
              goto LABEL_10;
            }
          }
          char v97 = specialized PhoneCallRecordProperties<>.isFaceTimeAudio.getter();
        }
        uint64_t v98 = (unsigned char *)v107;
        *(void *)(v107 + 24) = &type metadata for Bool;
        *uint64_t v98 = v97 & 1;
      }
      return;
    }
  }
  uint64_t v60 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval;
LABEL_74:
  uint64_t v61 = (uint64_t *)(v106 + v60);
  if (v61[1]) {
    goto LABEL_10;
  }
  uint64_t v62 = *v61;
  uint64_t v63 = (void *)v107;
  *(void *)(v107 + 24) = &type metadata for Double;
  *uint64_t v63 = v62;
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional __swiftcall PhoneCallRecord.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v1 >= 0x18) {
    return (PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional)24;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional)v1;
  }
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional __swiftcall PhoneCallRecord.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional)24;
}

unint64_t PhoneCallRecord.CodingKeys.rawValue.getter(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6165724365746164;
      break;
    case 2:
      unint64_t result = 0x72656C6C6163;
      break;
    case 3:
      unint64_t result = 0x73657361696C61;
      break;
    case 4:
      unint64_t result = 0x6F6365526C6C6163;
      break;
    case 5:
      unint64_t result = 0x7274654D6C6C6163;
      break;
    case 6:
      unint64_t result = 0x6E6565736E75;
      break;
    case 7:
      unint64_t result = 0x617061436C6C6163;
      break;
    case 8:
      unint64_t result = 0x664F7265626D756ELL;
      break;
    case 9:
      unint64_t result = 0x766F72506C6C6163;
      break;
    case 10:
    case 14:
    case 15:
    case 21:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 12:
      unint64_t result = 0x4479616C70736964;
      break;
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 16:
      unint64_t result = 0x63417463656C6573;
      break;
    case 17:
      unint64_t result = 0xD000000000000013;
      break;
    case 18:
      unint64_t result = 0xD000000000000014;
      break;
    case 19:
      unint64_t result = 0x617275446C6C6163;
      break;
    case 20:
      unint64_t result = 0x7069636974726170;
      break;
    case 22:
      unint64_t result = 0x49746361746E6F63;
      break;
    case 23:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallRecord.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallRecord.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallRecord.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallRecord.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallRecord.CodingKeys@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneCallRecord.CodingKeys.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallRecord.CodingKeys@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PhoneCallRecord.CodingKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneCallRecord.CodingKeys()
{
  return PhoneCallRecord.CodingKeys.stringValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneCallRecord.CodingKeys@<W0>(uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneCallRecord.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneCallRecord.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallRecord.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneCallRecord.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneCallRecord.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
  swift_release();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
  swift_release();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PhoneCallRecord.__deallocating_deinit()
{
  return PhoneCallRecord.Builder.__deallocating_deinit((void (*)(void))PhoneCallRecord.deinit);
}

uint64_t PhoneCallRecord.Builder.__deallocating_deinit(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t PhoneCallRecord.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneCallRecord.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v16 = 0;
  type metadata accessor for SpeakableString();
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated);
    OUTLINED_FUNCTION_64_8(1);
    type metadata accessor for DialogCalendar();
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type DialogCalendar and conformance DialogCalendar, (void (*)(uint64_t))&type metadata accessor for DialogCalendar);
    OUTLINED_FUNCTION_21_40();
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
    uint64_t v9 = OUTLINED_FUNCTION_64_8(2);
    type metadata accessor for PhonePerson(v9);
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson, (void (*)(uint64_t))type metadata accessor for PhonePerson);
    OUTLINED_FUNCTION_21_40();
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases);
    char v15 = 3;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    uint64_t v11 = _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_1(&lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A], &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson);
    v14[2] = v10;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v14[1] = v11;
    OUTLINED_FUNCTION_3_95(4);
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics);
    OUTLINED_FUNCTION_64_8(5);
    type metadata accessor for PhoneCallMetrics();
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhoneCallMetrics and conformance PhoneCallMetrics, (void (*)(uint64_t))type metadata accessor for PhoneCallMetrics);
    OUTLINED_FUNCTION_21_40();
    OUTLINED_FUNCTION_58_20(6);
    OUTLINED_FUNCTION_3_95(7);
    OUTLINED_FUNCTION_59_15(8);
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
    uint64_t v12 = OUTLINED_FUNCTION_64_8(9);
    type metadata accessor for PhoneCallProvider(v12);
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhoneCallProvider and conformance PhoneCallProvider, (void (*)(uint64_t))type metadata accessor for PhoneCallProvider);
    OUTLINED_FUNCTION_21_40();
    OUTLINED_FUNCTION_58_20(10);
    OUTLINED_FUNCTION_3_95(11);
    OUTLINED_FUNCTION_3_95(12);
    OUTLINED_FUNCTION_3_95(13);
    OUTLINED_FUNCTION_3_95(14);
    OUTLINED_FUNCTION_3_95(15);
    OUTLINED_FUNCTION_3_95(16);
    OUTLINED_FUNCTION_3_95(17);
    OUTLINED_FUNCTION_3_95(18);
    OUTLINED_FUNCTION_3_95(19);
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants);
    char v15 = 20;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames);
    char v15 = 21;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
    lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A](&lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A], &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString);
    OUTLINED_FUNCTION_50_20();
    OUTLINED_FUNCTION_48_24(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds);
    char v15 = 22;
    OUTLINED_FUNCTION_50_20();
    OUTLINED_FUNCTION_59_15(23);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }
  return result;
}

uint64_t _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SpeakableString]);
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(a2, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    uint64_t result = OUTLINED_FUNCTION_69_12();
    atomic_store(result, a1);
  }
  return result;
}

{
  uint64_t result;

  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SpeakableString]);
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(a2, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhoneCallRecord.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PhoneCallRecord.init(from:)(a1);
  return v2;
}

uint64_t PhoneCallRecord.init(from:)(void *a1)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_5_8();
  uint64_t v92 = v7;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_17();
  uint64_t v91 = v9;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_17();
  uint64_t v89 = v11;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_5_17();
  uint64_t v90 = v13;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_5_17();
  uint64_t v93 = v15;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_5_17();
  uint64_t v94 = v17;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_17();
  uint64_t v95 = v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_40_18();
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_46_11();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)v84 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)v84 - v27;
  __chkstk_darwin(v26);
  char v97 = (char *)v84 - v29;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneCallRecord.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v96 = v30;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = a1;
  uint64_t v102 = v1;
  *(void *)(v1 + 16) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();
  uint64_t v99 = v33;
  uint64_t v34 = v100;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v34)
  {
    uint64_t v42 = v102;

    uint64_t v43 = (uint64_t)v101;
    goto LABEL_4;
  }
  uint64_t v35 = (uint64_t)v28;
  uint64_t v36 = (uint64_t)v25;
  uint64_t v100 = v3;
  uint64_t v88 = v2;
  int v37 = v96;
  uint64_t v38 = type metadata accessor for SpeakableString();
  LOBYTE(v104) = 0;
  uint64_t v39 = _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  uint64_t v40 = (uint64_t)v97;
  int v41 = v98;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v86 = v38;
  uint64_t v87 = v39;
  uint64_t v45 = v102;
  outlined init with take of SpeakableString?(v40, v102 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  type metadata accessor for DialogCalendar();
  char v103 = 1;
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type DialogCalendar and conformance DialogCalendar, (void (*)(uint64_t))&type metadata accessor for DialogCalendar);
  OUTLINED_FUNCTION_53_21();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(void *)(v45 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated) = v104;
  type metadata accessor for PhonePerson(0);
  char v103 = 2;
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson, (void (*)(uint64_t))type metadata accessor for PhonePerson);
  OUTLINED_FUNCTION_51_18();
  uint64_t v85 = 0;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v46 = v45;
  *(void *)(v45 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller) = v104;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  char v103 = 3;
  uint64_t v48 = _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_1(&lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A], &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v84[0] = v47;
  v84[1] = v48;
  *(void *)(v46 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases) = v104;
  OUTLINED_FUNCTION_42_28(4);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  outlined init with take of SpeakableString?(v35, v46 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
  int v49 = type metadata accessor for PhoneCallMetrics();
  char v103 = 5;
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhoneCallMetrics and conformance PhoneCallMetrics, (void (*)(uint64_t))type metadata accessor for PhoneCallMetrics);
  OUTLINED_FUNCTION_51_18();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(void *)(v46 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics) = v104;
  LOBYTE(v104) = 6;
  *(unsigned char *)(v46 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  OUTLINED_FUNCTION_42_28(7);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  outlined init with take of SpeakableString?(v36, v46 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
  LOBYTE(v104) = 8;
  uint64_t v50 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v97 = 0;
  OUTLINED_FUNCTION_74_10(v50, v51, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls);
  type metadata accessor for PhoneCallProvider(0);
  char v103 = 9;
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhoneCallProvider and conformance PhoneCallProvider, (void (*)(uint64_t))type metadata accessor for PhoneCallProvider);
  OUTLINED_FUNCTION_53_21();
  uint64_t v52 = v97;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  char v97 = v52;
  if (v52)
  {
    uint64_t v53 = OUTLINED_FUNCTION_8_83();
    v54(v53);
    int v41 = 0;
    OUTLINED_FUNCTION_13_51();
  }
  else
  {
    OUTLINED_FUNCTION_68_11(v104);
    OUTLINED_FUNCTION_63_11(10);
    char v55 = KeyedDecodingContainer.decode(_:forKey:)();
    char v97 = 0;
    *(unsigned char *)(v102 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked) = v55 & 1;
    OUTLINED_FUNCTION_42_28(11);
    int v49 = (int)v99;
    unsigned int v56 = v97;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v97 = v56;
    if (v56)
    {
      uint64_t v57 = OUTLINED_FUNCTION_8_83();
      v58(v57);
      OUTLINED_FUNCTION_13_51();
      int v41 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_47_24();
      outlined init with take of SpeakableString?(v100, v60);
      OUTLINED_FUNCTION_42_28(12);
      uint64_t v61 = v97;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      char v97 = v61;
      if (v61)
      {
        uint64_t v62 = OUTLINED_FUNCTION_8_83();
        v63(v62);
        LODWORD(v89) = 0;
        LODWORD(v90) = 0;
        LODWORD(v91) = 0;
        LODWORD(v92) = 0;
        LODWORD(v93) = 0;
        LODWORD(v94) = 0;
        LODWORD(v95) = 0;
        LODWORD(v96) = 0;
        LODWORD(v98) = 0;
        LODWORD(v99) = 0;
        LODWORD(v100) = 0;
        LODWORD(v35) = 1;
        LODWORD(v36) = 1;
        int v49 = 1;
        LODWORD(v47) = 1;
        int v37 = 1;
        int v41 = 1;
        LODWORD(v88) = 1;
      }
      else
      {
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v88, v64);
        OUTLINED_FUNCTION_42_28(13);
        OUTLINED_FUNCTION_22_49();
        char v97 = 0;
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v95, v65);
        OUTLINED_FUNCTION_42_28(14);
        OUTLINED_FUNCTION_22_49();
        char v97 = 0;
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v94, v66);
        OUTLINED_FUNCTION_42_28(15);
        OUTLINED_FUNCTION_22_49();
        char v97 = 0;
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v93, v67);
        OUTLINED_FUNCTION_42_28(16);
        OUTLINED_FUNCTION_22_49();
        char v97 = 0;
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v90, v68);
        OUTLINED_FUNCTION_42_28(17);
        OUTLINED_FUNCTION_22_49();
        char v97 = 0;
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v89, v69);
        OUTLINED_FUNCTION_42_28(18);
        OUTLINED_FUNCTION_22_49();
        char v97 = 0;
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v91, v70);
        OUTLINED_FUNCTION_42_28(19);
        OUTLINED_FUNCTION_22_49();
        char v97 = 0;
        OUTLINED_FUNCTION_47_24();
        outlined init with take of SpeakableString?(v92, v71);
        char v103 = 20;
        int v49 = (int)v99;
        uint64_t v72 = v97;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        char v97 = v72;
        if (!v72)
        {
          OUTLINED_FUNCTION_68_11(v104);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
          char v103 = 21;
          lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A](&lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A], &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString);
          OUTLINED_FUNCTION_49_20();
          char v97 = 0;
          OUTLINED_FUNCTION_68_11(v104);
          char v103 = 22;
          OUTLINED_FUNCTION_49_20();
          char v97 = 0;
          OUTLINED_FUNCTION_68_11(v104);
          OUTLINED_FUNCTION_63_11(23);
          uint64_t v76 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
          char v97 = 0;
          uint64_t v77 = v76;
          char v79 = v78;
          uint64_t v80 = OUTLINED_FUNCTION_8_83();
          v81(v80);
          uint64_t v82 = (uint64_t)v101;
          uint64_t v42 = v102;
          uint64_t v83 = v102 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval;
          *(void *)uint64_t v83 = v77;
          *(unsigned char *)(v83 + 8) = v79 & 1;
          __swift_destroy_boxed_opaque_existential_1(v82);
          return v42;
        }
        uint64_t v73 = OUTLINED_FUNCTION_8_83();
        v74(v73);
        OUTLINED_FUNCTION_25_36();
        LODWORD(v96) = v75;
      }
    }
  }
  uint64_t v59 = v85;
  uint64_t v42 = v102;

  outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  if (v59)
  {
    if (v35) {
      goto LABEL_8;
    }
  }
  else
  {
    swift_release();
    if (v35)
    {
LABEL_8:
      swift_release();
      if ((v36 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  if (!v36)
  {
LABEL_9:
    if (v49) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  if (v49)
  {
LABEL_10:
    outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
    if ((v47 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  if (!v47)
  {
LABEL_11:
    uint64_t v43 = (uint64_t)v101;
    if (v37) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  swift_release();
  uint64_t v43 = (uint64_t)v101;
  if (v37)
  {
LABEL_12:
    outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
    if ((v41 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  if (!v41)
  {
LABEL_13:
    if (v88) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  swift_release();
  if (v88)
  {
LABEL_14:
    outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
    if ((v89 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  if (!v89)
  {
LABEL_15:
    if (v90) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
  if (v90)
  {
LABEL_16:
    outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
    if ((v91 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  if (!v91)
  {
LABEL_17:
    if (v92) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
  if (v92)
  {
LABEL_18:
    outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
    if ((v93 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  if (!v93)
  {
LABEL_19:
    if (v94) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
  if (v94)
  {
LABEL_20:
    outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
    if ((v95 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  if (!v95)
  {
LABEL_21:
    if (v96) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_40:
  outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
  if (v96)
  {
LABEL_22:
    outlined destroy of SpeakableString?(v42 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
    if ((v98 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_42;
  }
LABEL_41:
  if (!v98)
  {
LABEL_23:
    if (v99) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  if (v99)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    if (v100) {
      goto LABEL_44;
    }
    goto LABEL_4;
  }
LABEL_43:
  if (v100) {
LABEL_44:
  }
    swift_bridgeObjectRelease();
LABEL_4:
  type metadata accessor for PhoneCallRecord(0);
  OUTLINED_FUNCTION_26_6();
  swift_deallocPartialClassInstance();
  __swift_destroy_boxed_opaque_existential_1(v43);
  return v42;
}

uint64_t _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_1(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhonePerson]);
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(a2, (void (*)(uint64_t))type metadata accessor for PhonePerson);
    uint64_t result = OUTLINED_FUNCTION_69_12();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in PhoneCallRecord()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord, (void (*)(uint64_t))type metadata accessor for PhoneCallRecord);
}

uint64_t base witness table accessor for Encodable in PhoneCallRecord()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_2(&lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord, (void (*)(uint64_t))type metadata accessor for PhoneCallRecord);
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t protocol witness for CATType.mockGlobals.getter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 296))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 304))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneCallRecord(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 312))();
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 336))();
}

uint64_t protocol witness for PhoneCallRecordProperties.identifier.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.dateCreated.getter in conformance PhoneCallRecord()
{
  return swift_retain();
}

uint64_t protocol witness for PhoneCallRecordProperties.caller.getter in conformance PhoneCallRecord()
{
  return swift_retain();
}

uint64_t protocol witness for PhoneCallRecordProperties.participantsNames.getter in conformance PhoneCallRecord()
{
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for PhoneCallRecordProperties.callRecordType.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.callMetrics.getter in conformance PhoneCallRecord()
{
  return swift_retain();
}

uint64_t protocol witness for PhoneCallRecordProperties.unseen.getter in conformance PhoneCallRecord()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen);
}

uint64_t protocol witness for PhoneCallRecordProperties.callCapability.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.numberOfCalls.getter in conformance PhoneCallRecord()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls);
}

uint64_t protocol witness for PhoneCallRecordProperties.callProvider.getter in conformance PhoneCallRecord()
{
  return swift_retain();
}

uint64_t protocol witness for PhoneCallRecordProperties.isCallerIdBlocked.getter in conformance PhoneCallRecord()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayName.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayDateTime.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayTextColor.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displaySymbolIcon.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayCallDetail.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.selectAction.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.playVoicemailAction.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction, a1);
}