uint64_t protocol witness for PhoneCallRecordProperties.openCallRecordAction.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  void *v1;

  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.callDuration.getter in conformance PhoneCallRecord@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration, a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.callDurationInterval.getter in conformance PhoneCallRecord()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval);
}

uint64_t protocol witness for PhoneCallRecordProperties.participants.getter in conformance PhoneCallRecord()
{
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for PhoneCallRecordProperties.contactIds.getter in conformance PhoneCallRecord()
{
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneCallRecord@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 352))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 344))();
}

uint64_t sub_36DA84()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t sub_36DACC@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 296))();
  *a1 = result;
  return result;
}

uint64_t sub_36DB1C@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 320))();
  *a1 = result;
  return result;
}

uint64_t sub_36DB6C@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 344))();
  *a1 = result;
  return result;
}

uint64_t sub_36DBBC()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t sub_36DC04@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 392))();
  *a1 = result;
  return result;
}

uint64_t sub_36DC54@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 416))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_36DCA4()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t sub_36DCF0()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t sub_36DD40@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 488))();
  *a1 = result;
  return result;
}

uint64_t sub_36DD90@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 512))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_36DDE0()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t sub_36DE2C()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 536))();
}

uint64_t sub_36DE74()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 560))();
}

uint64_t sub_36DEBC()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 584))();
}

uint64_t sub_36DF04()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 608))();
}

uint64_t sub_36DF4C()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 632))();
}

uint64_t sub_36DF94()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 656))();
}

uint64_t sub_36DFDC()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 680))();
}

uint64_t sub_36E024()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 704))();
}

uint64_t sub_36E06C()
{
  OUTLINED_FUNCTION_6_82();
  return (*(uint64_t (**)(void))(v0 + 728))();
}

uint64_t sub_36E0B4@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 752))();
  *a1 = result;
  return result;
}

uint64_t sub_36E104@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 776))();
  *a1 = result;
  return result;
}

uint64_t sub_36E154@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 800))();
  *a1 = result;
  return result;
}

uint64_t sub_36E1AC@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_6_82();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 296))();
  *a1 = result;
  return result;
}

uint64_t ObjC metadata update function for PhoneCallRecord()
{
  return type metadata accessor for PhoneCallRecord(0);
}

void type metadata completion function for PhoneCallRecord()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for PhoneCallRecord.Builder()
{
  return type metadata accessor for PhoneCallRecord.Builder(0);
}

void type metadata completion function for PhoneCallRecord.Builder()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t getEnumTagSinglePayload for PhoneCallRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE9)
  {
    if (a2 + 23 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 23) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 24;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v5 = v6 - 24;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhoneCallRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *uint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x36E51CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallRecord.CodingKeys()
{
  return &type metadata for PhoneCallRecord.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_3_95@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_8_83()
{
  return *(void *)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_11_62()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void OUTLINED_FUNCTION_13_51()
{
  *(_DWORD *)(v0 - 216) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 200) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
}

void OUTLINED_FUNCTION_14_44()
{
  *(_DWORD *)(v0 - 216) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 200) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
}

uint64_t OUTLINED_FUNCTION_15_52@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v2 + a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_16_53(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_22_49()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

void OUTLINED_FUNCTION_24_36()
{
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 216) = 1;
  *(_DWORD *)(v0 - 208) = 1;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 184) = 1;
  *(_DWORD *)(v0 - 176) = 1;
  *(_DWORD *)(v0 - 168) = 1;
  *(_DWORD *)(v0 - 160) = 1;
  *(_DWORD *)(v0 - 152) = 1;
  *(_DWORD *)(v0 - 136) = 1;
}

void OUTLINED_FUNCTION_26_36()
{
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 216) = 1;
  *(_DWORD *)(v0 - 208) = 1;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 184) = 1;
  *(_DWORD *)(v0 - 176) = 1;
}

void OUTLINED_FUNCTION_28_36()
{
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 216) = 1;
  *(_DWORD *)(v0 - 208) = 1;
}

void OUTLINED_FUNCTION_30_30()
{
  *(_DWORD *)(v0 - 216) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 200) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
}

uint64_t OUTLINED_FUNCTION_34_29()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_35_34()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_29@<X0>(uint64_t a1@<X8>)
{
  return outlined init with take of SpeakableString?(v2, v1 + a1);
}

uint64_t OUTLINED_FUNCTION_41_26@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 96) + a1;
}

void OUTLINED_FUNCTION_42_28(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
}

void OUTLINED_FUNCTION_48_24(uint64_t a1@<X8>)
{
  *(void *)(v2 - 72) = *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_49_20()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_50_20()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_51_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_54_19()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_55_18()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_58_20@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_59_15@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_60_16@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_62_19()
{
  return 0x6954656361467369;
}

uint64_t OUTLINED_FUNCTION_63_11@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return v1 - 72;
}

void OUTLINED_FUNCTION_68_11(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v2 - 104) + v1) = a1;
}

uint64_t OUTLINED_FUNCTION_69_12()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_73_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_74_10@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3 + a3;
  *(void *)uint64_t v4 = result;
  *(unsigned char *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t ButtonConfigurationModel.init(label:directInvocation:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  OUTLINED_FUNCTION_12_54(a1, a2, a3);
  [objc_allocWithZone((Class)SABaseCommand) init];
  uint64_t v5 = type metadata accessor for ButtonConfigurationModel();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  CodableAceObject.init(wrappedValue:)();
  *(unsigned char *)(v4 + *(int *)(v5 + 32)) = 1;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();
  uint64_t v6 = v4 + *(int *)(v5 + 28);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_15();
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);

  return v9(v6, v3, v7);
}

uint64_t type metadata accessor for ButtonConfigurationModel()
{
  uint64_t result = type metadata singleton initialization cache for ButtonConfigurationModel;
  if (!type metadata singleton initialization cache for ButtonConfigurationModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t StackedButtonsModel.responseViewId.getter(uint64_t a1, char a2)
{
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v3 = 0x747465536E65706FLL;
    }
    else {
      unint64_t v3 = 0xD000000000000011;
    }
    if (a2 == 1) {
      unint64_t v4 = 0xEC00000073676E69;
    }
    else {
      unint64_t v4 = 0x8000000000490B10;
    }
  }
  else
  {
    unint64_t v4 = 0xEF74706D6F72506CLL;
    unint64_t v3 = 0x6C6143724F646461;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t StackedButtonsModel.init(buttonConfiguration:useCase:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v2 = *(void *)(type metadata accessor for ButtonConfigurationModel() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  outlined init with take of ButtonConfigurationModel(a1, v4 + v3);
  return v4;
}

uint64_t ButtonConfigurationModel.init(label:action:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  OUTLINED_FUNCTION_12_54(a1, a2, a3);
  uint64_t v6 = type metadata accessor for ButtonConfigurationModel();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  id v7 = v5;
  CodableAceObject.init(wrappedValue:)();
  uint64_t v8 = v4 + *(int *)(v6 + 28);
  uint64_t v9 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_6();
  uint64_t v13 = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v3, v9);
  *(unsigned char *)(v4 + *(int *)(v6 + 32)) = 0;
  [objc_allocWithZone((Class)SAIntentGroupRunSiriKitExecutor) init];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();

  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);

  return v11(v3, v9);
}

void ButtonConfigurationModel.init(label:url:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_52();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8 - 8);
  OUTLINED_FUNCTION_11_25();
  id v9 = [objc_allocWithZone((Class)SAUIAppPunchOut) init];
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for URL();
  v12 = 0;
  if (__swift_getEnumTagSinglePayload(v3, 1, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    v12 = v13;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
  }
  [v9 setPunchOutUri:v12];

  id v14 = v9;
  UUID.init()();
  uint64_t v15 = UUID.uuidString.getter();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_26();
  v18();
  outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v15, v17, v14);

  id v19 = v14;
  UUID.init()();
  ButtonConfigurationModel.init(label:action:id:)(a1, a2, a3);
}

uint64_t StackedButtonsModel.shouldHideSnippet(on:)(uint64_t a1, uint64_t a2, int a3)
{
  int v23 = a3;
  uint64_t v4 = type metadata accessor for DeviceIdiom();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v12 = &v22[-v11];
  uint64_t v13 = *(void (**)(uint64_t))(v6 + 104);
  uint64_t v14 = OUTLINED_FUNCTION_3_96();
  v13(v14);
  lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom(&lazy protocol witness table cache variable for type DeviceIdiom and conformance DeviceIdiom, (void (*)(uint64_t))&type metadata accessor for DeviceIdiom);
  char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v16 = *(void (**)(void))(v6 + 8);
  OUTLINED_FUNCTION_26();
  v16();
  if (v15)
  {
    char v17 = 1;
  }
  else if (v23 == 1)
  {
    uint64_t v18 = OUTLINED_FUNCTION_3_96();
    v13(v18);
    char v19 = static DeviceIdiom.== infix(_:_:)();
    OUTLINED_FUNCTION_26();
    v16();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v10, a1, v4);
    if (v19)
    {
      char v17 = 1;
    }
    else
    {
      uint64_t v20 = OUTLINED_FUNCTION_3_96();
      v13(v20);
      char v17 = static DeviceIdiom.== infix(_:_:)();
      ((void (*)(unsigned char *, uint64_t))v16)(v12, v4);
    }
    ((void (*)(unsigned char *, uint64_t))v16)(v10, v4);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.action()
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);

  return CodableAceObject.init(wrappedValue:)();
}

uint64_t ButtonConfigurationModel.action.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for ButtonConfigurationModel.action : ButtonConfigurationModel(id *a1)
{
  id v1 = *a1;
  return ButtonConfigurationModel.action.setter();
}

uint64_t ButtonConfigurationModel.action.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*ButtonConfigurationModel.action.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t ButtonConfigurationModel.directInvocation.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for ButtonConfigurationModel.directInvocation : ButtonConfigurationModel(id *a1)
{
  id v1 = *a1;
  return ButtonConfigurationModel.directInvocation.setter();
}

uint64_t ButtonConfigurationModel.directInvocation.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*ButtonConfigurationModel.directInvocation.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t ButtonConfigurationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ButtonConfigurationModel() + 28);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_15();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t ButtonConfigurationModel.isDirectInvocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ButtonConfigurationModel() + 32));
}

uint64_t ButtonConfigurationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000000004915E0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 25705 && a2 == 0xE200000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x8000000000495CF0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

uint64_t ButtonConfigurationModel.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 0x6C6562616CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F69746361;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 25705;
      break;
    case 4:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ButtonConfigurationModel.CodingKeys()
{
  return ButtonConfigurationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ButtonConfigurationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = ButtonConfigurationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ButtonConfigurationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ButtonConfigurationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ButtonConfigurationModel.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ButtonConfigurationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ButtonConfigurationModel();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    OUTLINED_FUNCTION_5_70();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    OUTLINED_FUNCTION_5_70();
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  OUTLINED_FUNCTION_26();
  return v4();
}

uint64_t ButtonConfigurationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  uint64_t v38 = v5;
  uint64_t v39 = v6;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v36 = v7;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v40 = v8;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_3_1();
  uint64_t v37 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v42 = v12;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_11_25();
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ButtonConfigurationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v41 = v14;
  __chkstk_darwin(v15);
  char v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)type metadata accessor for ButtonConfigurationModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_52();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  v45 = v17;
  uint64_t v20 = (uint64_t)v46;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v20) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v42;
  uint64_t v22 = v43;
  v46 = a1;
  uint64_t v34 = v11;
  char v51 = 0;
  *unint64_t v2 = KeyedDecodingContainer.decode(_:forKey:)();
  v2[1] = v23;
  v33 = v2;
  char v50 = 1;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v24 = v34;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))((char *)v33 + v18[5], v3, v24);
  char v49 = 2;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v25 = v37;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v26 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))((char *)v33 + v18[6], v25, v22);
  char v48 = 3;
  lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v27 = v36;
  uint64_t v28 = v38;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v26 + v18[7], v27, v28);
  char v47 = 4;
  char v29 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v30 = OUTLINED_FUNCTION_2_108();
  v31(v30);
  *(unsigned char *)(v26 + v18[8]) = v29 & 1;
  outlined init with copy of ButtonConfigurationModel(v26, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return outlined destroy of ButtonConfigurationModel(v26);
}

uint64_t protocol witness for Identifiable.id.getter in conformance ButtonConfigurationModel@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ButtonConfigurationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ButtonConfigurationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ButtonConfigurationModel(void *a1)
{
  return ButtonConfigurationModel.encode(to:)(a1);
}

PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional __swiftcall StackedButtonsModel.UseCase.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of StackedButtonsModel.UseCase.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional)v3;
  }
}

uint64_t StackedButtonsModel.UseCase.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6C6143724F646461;
  }
  if (a1 == 1) {
    return 0x747465536E65706FLL;
  }
  return 0xD000000000000011;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StackedButtonsModel.UseCase(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StackedButtonsModel.UseCase(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StackedButtonsModel.UseCase@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional *a2@<X8>)
{
  result.value = StackedButtonsModel.UseCase.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StackedButtonsModel.UseCase@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = StackedButtonsModel.UseCase.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel.UseCase()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel.UseCase()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t StackedButtonsModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000000049B970
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736143657375 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t StackedButtonsModel.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x65736143657375;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance StackedButtonsModel.CodingKeys()
{
  return StackedButtonsModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance StackedButtonsModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = StackedButtonsModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance StackedButtonsModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance StackedButtonsModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t StackedButtonsModel.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<StackedButtonsModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
  lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  OUTLINED_FUNCTION_26();
  return v4();
}

uint64_t StackedButtonsModel.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<StackedButtonsModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v3);
  uint64_t v4 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v4 = v8;
    lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v6 = OUTLINED_FUNCTION_11_63();
    v7(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance StackedButtonsModel(uint64_t a1)
{
  return StackedButtonsModel.responseViewId.getter(a1, *(unsigned char *)(v1 + 8));
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = StackedButtonsModel.init(from:)(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel(void *a1)
{
  return StackedButtonsModel.encode(to:)(a1);
}

void outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setAceId:v4];
}

unint64_t lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom(a2, (void (*)(uint64_t))type metadata accessor for ButtonConfigurationModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom(&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (void (*)(uint64_t))type metadata accessor for ButtonConfigurationModel);
}

uint64_t base witness table accessor for Encodable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom(&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (void (*)(uint64_t))type metadata accessor for ButtonConfigurationModel);
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t lazy protocol witness table accessor for type DeviceIdiom and conformance DeviceIdiom(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for StackedButtonsModel(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_370CD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ButtonConfigurationModel.action.getter();
  *a1 = result;
  return result;
}

uint64_t sub_370D08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ButtonConfigurationModel.directInvocation.getter();
  *a1 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t destroy for ButtonConfigurationModel(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

void *initializeWithCopy for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  char v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *assignWithCopy for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for ButtonConfigurationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonConfigurationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3714BC);
}

uint64_t sub_3714BC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      OUTLINED_FUNCTION_1_6();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }
      else
      {
        uint64_t v10 = type metadata accessor for UUID();
        uint64_t v11 = a3[7];
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ButtonConfigurationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3715A8);
}

uint64_t sub_3715A8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      OUTLINED_FUNCTION_1_6();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        uint64_t v10 = type metadata accessor for UUID();
        uint64_t v11 = a4[7];
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for ButtonConfigurationModel()
{
  type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseCommand>, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StackedButtonsModel()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for StackedButtonsModel()
{
  return &type metadata for StackedButtonsModel;
}

unsigned char *storeEnumTagSinglePayload for StackedButtonsModel.UseCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x371970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StackedButtonsModel.UseCase()
{
  return &type metadata for StackedButtonsModel.UseCase;
}

unsigned char *storeEnumTagSinglePayload for StackedButtonsModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x371A74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for StackedButtonsModel.CodingKeys()
{
  return &unk_568B08;
}

unsigned char *storeEnumTagSinglePayload for ButtonConfigurationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x371B78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ButtonConfigurationModel.CodingKeys()
{
  return &unk_568B98;
}

uint64_t OUTLINED_FUNCTION_2_108()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_3_96()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_92()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_11_63()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_54@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

Swift::Void __swiftcall AudioSessionManager.allowAppToInitiateRecordingTemporarily(appIdentifier:)(Swift::String appIdentifier)
{
  object = appIdentifier._object;
  uint64_t countAndFlagsBits = appIdentifier._countAndFlagsBits;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  unsigned int v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)unsigned int v6 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v4, v5, "#AudioSessionManager: set allowAppToInitiateRecordingTemporarily for bundleId %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v7 = [self sharedInstance];
  if (v7)
  {
    uint64_t v8 = v7;
    outlined bridged method (mbgnn) of @objc AVSystemController.allowApp(toInitiateRecordingTemporarily:)(countAndFlagsBits, (uint64_t)object, v7);
  }
  else
  {
    __break(1u);
  }
}

id outlined bridged method (mbgnn) of @objc AVSystemController.allowApp(toInitiateRecordingTemporarily:)(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a3 allowAppToInitiateRecordingTemporarily:v4];

  return v5;
}

ValueMetadata *type metadata accessor for AudioSessionManager()
{
  return &type metadata for AudioSessionManager;
}

void static StartCallViewBuilders.makeSiriSettingsButton(templatingService:sharedGlobals:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)SAUIOpenLink) init];
  URL.init(string:)();
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v12 = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }
  [v9 setRef:v12];

  outlined init with copy of SignalProviding(a1, (uint64_t)v20);
  outlined init with copy of SignalProviding(a2, (uint64_t)v19);
  a3[3] = &type metadata for ButtonBuilder;
  a3[4] = &protocol witness table for ButtonBuilder;
  uint64_t v14 = (void *)OUTLINED_FUNCTION_31_0();
  *a3 = v14;
  outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v18);
  uint64_t v15 = OUTLINED_FUNCTION_57_1();
  outlined init with take of AppSelectionSignalComponent(v18, v15 + 16);
  id v16 = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  v14[2] = partial apply for implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
  v14[3] = v15;
  v14[4] = v16;
  outlined init with take of AppSelectionSignalComponent(v19, (uint64_t)(v14 + 5));
}

uint64_t sub_37227C()
{
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t static SCHViewBuilders.makeErrorButtonBuilder(templatingService:app:preferredCallProvider:sharedGlobals:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "#SCHViewBuilders Providing ErrorButtonBuilder", v13, 2u);
    swift_slowDealloc();
  }

  if (App.isFirstParty()())
  {
    uint64_t v14 = a4[3];
    uint64_t v15 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v14);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8))(v37, v14, v15);
    a2 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(a2, a3, v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    swift_retain();
  }
  outlined init with copy of SignalProviding(a1, (uint64_t)v37);
  uint64_t v16 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp);
  uint64_t v17 = swift_retain_n();
  id v18 = SAAppsLaunchApp.init(app:)(v17);
  OUTLINED_FUNCTION_0_64((uint64_t)v18, v19, v20, v21, v22, v23);
  a5[3] = &type metadata for ButtonBuilder;
  a5[4] = &protocol witness table for ButtonBuilder;
  uint64_t v24 = (void *)OUTLINED_FUNCTION_31_0();
  *a5 = v24;
  outlined init with copy of SignalProviding((uint64_t)v37, (uint64_t)&v35);
  uint64_t v25 = OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_3_97(v25, v26, v27, v28, v29, v30, v31, v32, v34, v35);
  *(void *)(v25 + 56) = a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v24[2] = partial apply for closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
  v24[3] = v25;
  v24[4] = v16;
  outlined init with take of AppSelectionSignalComponent(&v36, (uint64_t)(v24 + 5));
  return swift_release();
}

uint64_t static StartCallViewBuilders.makeErrorButtonBuilder(templatingService:app:intent:intentResponse:sharedGlobals:)@<X0>(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, void *a5@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "#StartCallViewBuilders Providing ErrorButtonBuilder", v13, 2u);
    swift_slowDealloc();
  }

  BOOL v14 = App.isFirstParty()();
  if (!v14)
  {
    OUTLINED_FUNCTION_9_72(v14, v15, v16, v17, v18, v19, v20, v21, v86, *(uint64_t *)&v89[0], *((uint64_t *)&v89[0] + 1));
    uint64_t v52 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    uint64_t v53 = OUTLINED_FUNCTION_7_77();
    OUTLINED_FUNCTION_0_64(v53, v54, v55, v56, v57, v58);
    a5[3] = &type metadata for ButtonBuilder;
    a5[4] = &protocol witness table for ButtonBuilder;
    v59 = (void *)OUTLINED_FUNCTION_31_0();
    *a5 = v59;
    outlined init with copy of SignalProviding((uint64_t)v91, (uint64_t)v89);
    uint64_t v60 = OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_3_97(v60, v61, v62, v63, v64, v65, v66, v67, v88, v89[0]);
    *(void *)(v60 + 56) = a1;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    v59[2] = closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    v59[3] = v60;
    v59[4] = v52;
    return outlined init with take of AppSelectionSignalComponent(v90, (uint64_t)(v59 + 5));
  }
  id v22 = [a2 preferredCallProvider];
  uint64_t v23 = a4[3];
  uint64_t v24 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v23);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 8))(v91, v23, v24);
  uint64_t v25 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(a1, (uint64_t)v22, v91);
  uint64_t v26 = (int *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  if (!a3) {
    goto LABEL_11;
  }
  uint64_t v26 = (int *)[a3 code];
  if (v26 == (int *)((char *)&dword_4 + 2))
  {
    OUTLINED_FUNCTION_9_72(6, v27, v28, v29, v30, v31, v32, v33, v86, *(uint64_t *)&v89[0], *((uint64_t *)&v89[0] + 1));
    uint64_t v34 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    swift_retain();
    uint64_t v78 = OUTLINED_FUNCTION_7_77();
    OUTLINED_FUNCTION_0_64(v78, v79, v80, v81, v82, v83);
    a5[3] = &type metadata for ButtonBuilder;
    a5[4] = &protocol witness table for ButtonBuilder;
    uint64_t v84 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_2_109(v84, v85);
    uint64_t v43 = OUTLINED_FUNCTION_60_1();
    outlined init with take of AppSelectionSignalComponent(v89, v43 + 16);
    *(void *)(v43 + 56) = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    char v51 = partial apply for closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
    goto LABEL_13;
  }
  if (v26 == &dword_8)
  {
    OUTLINED_FUNCTION_9_72(8, v27, v28, v29, v30, v31, v32, v33, v86, *(uint64_t *)&v89[0], *((uint64_t *)&v89[0] + 1));
    uint64_t v34 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    uint64_t v35 = OUTLINED_FUNCTION_7_77();
    OUTLINED_FUNCTION_0_64(v35, v36, v37, v38, v39, v40);
    a5[3] = &type metadata for ButtonBuilder;
    a5[4] = &protocol witness table for ButtonBuilder;
    uint64_t v41 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_2_109(v41, v42);
    uint64_t v43 = OUTLINED_FUNCTION_57_1();
    OUTLINED_FUNCTION_3_97(v43, v44, v45, v46, v47, v48, v49, v50, v87, v89[0]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    char v51 = (uint64_t (*)(uint64_t, uint64_t))implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }
  else
  {
LABEL_11:
    OUTLINED_FUNCTION_9_72((uint64_t)v26, v27, v28, v29, v30, v31, v32, v33, v86, *(uint64_t *)&v89[0], *((uint64_t *)&v89[0] + 1));
    uint64_t v34 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp);
    uint64_t v69 = swift_retain_n();
    id v70 = SAAppsLaunchApp.init(app:)(v69);
    OUTLINED_FUNCTION_0_64((uint64_t)v70, v71, v72, v73, v74, v75);
    a5[3] = &type metadata for ButtonBuilder;
    a5[4] = &protocol witness table for ButtonBuilder;
    uint64_t v76 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_2_109(v76, v77);
    uint64_t v43 = OUTLINED_FUNCTION_60_1();
    outlined init with take of AppSelectionSignalComponent(v89, v43 + 16);
    *(void *)(v43 + 56) = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    char v51 = (uint64_t (*)(uint64_t, uint64_t))closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }
LABEL_13:
  a4[2] = v51;
  a4[3] = v43;
  a4[4] = v34;
  outlined init with take of AppSelectionSignalComponent(v90, (uint64_t)(a4 + 5));
  return swift_release();
}

uint64_t (*ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(uint64_t a1, unint64_t a2))()
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      outlined init with copy of SignalProviding(a1, (uint64_t)v31);
      uint64_t v3 = OUTLINED_FUNCTION_60_1();
      OUTLINED_FUNCTION_3_97(v3, v4, v5, v6, v7, v8, v9, v10, v30, v31[0]);
      *(void *)(v3 + 56) = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }
    else
    {
      outlined init with copy of SignalProviding(a1, (uint64_t)v31);
      uint64_t v20 = OUTLINED_FUNCTION_57_1();
      OUTLINED_FUNCTION_3_97(v20, v21, v22, v23, v24, v25, v26, v27, v30, v31[0]);
      uint64_t v11 = implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }
  }
  else
  {
    outlined init with copy of SignalProviding(a1, (uint64_t)v31);
    uint64_t v12 = OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_3_97(v12, v13, v14, v15, v16, v17, v18, v19, v30, v31[0]);
    *(void *)(v12 + 56) = a2;
    uint64_t v11 = closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }
  uint64_t v28 = v11;
  outlined copy of ErrorButtonLabelOptions(a2);
  return v28;
}

uint64_t closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 72))(a4, a1, a2, v7, v8);
}

uint64_t closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 80))(a4, a1, a2, v7, v8);
}

uint64_t implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 88))(a1, a2, v5, v6);
}

uint64_t ButtonBuilder.init(label:templatingService:command:sharedGlobals:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)()@<X2>, long long *a4@<X3>, uint64_t (**a5)()@<X8>)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      outlined init with copy of SignalProviding(a2, (uint64_t)v22);
      uint64_t v10 = OUTLINED_FUNCTION_60_1();
      outlined init with take of AppSelectionSignalComponent(v22, v10 + 16);
      *(void *)(v10 + 56) = a1 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }
    else
    {
      outlined init with copy of SignalProviding(a2, (uint64_t)v22);
      uint64_t v10 = OUTLINED_FUNCTION_57_1();
      OUTLINED_FUNCTION_3_97(v10, v12, v13, v14, v15, v16, v17, v18, v21, v22[0]);
      uint64_t v11 = implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }
  }
  else
  {
    outlined init with copy of SignalProviding(a2, (uint64_t)v22);
    uint64_t v10 = OUTLINED_FUNCTION_60_1();
    outlined init with take of AppSelectionSignalComponent(v22, v10 + 16);
    *(void *)(v10 + 56) = a1;
    uint64_t v11 = closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }
  uint64_t v19 = v11;
  __swift_destroy_boxed_opaque_existential_1(a2);
  *a5 = v19;
  a5[1] = (uint64_t (*)())v10;
  a5[2] = a3;
  return outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a5 + 3));
}

uint64_t sub_372C64()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(uint64_t a1, uint64_t a2)
{
  return implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(a1, a2, (void *)(v2 + 16));
}

uint64_t ButtonBuilder.labelProvider.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t partial apply for closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(a1, a2, (void *)(v2 + 16), *(void *)(v2 + 56));
}

uint64_t ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(a1, a2, a3, (uint64_t)&unk_568DF0, (uint64_t)_s27PhoneCallFlowDelegatePlugin13ButtonBuilderV17makeViewsForWatch09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0);
}

uint64_t closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(a1, a2, a3, a4, a5, (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:));
}

void closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(unint64_t a1@<X1>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = a1;
  if (a1 >> 62)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    swift_bridgeObjectRetain();
    uint64_t v11 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    uint64_t v4 = v11;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
  }
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SASTItemGroup);
  uint64_t v6 = (void *)TemplatingResult.print.getter();
  if (!v6[2])
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = v6[4];
  uint64_t v8 = v6[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_46A030;
  *(void *)(v9 + 32) = a2[2];
  uint64_t v13 = v9;
  specialized Array._endMutation()();
  swift_unknownObjectRetain();
  id v10 = static SASTItemGroup.makeButtonGroup(label:commands:centered:)(v7, v8, v13, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v4;
  swift_bridgeObjectRetain();
  a2 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                 + (v12 & 0xFFFFFFFFFFFFFF8)) >> 1)
LABEL_8:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

  *a3 = v12;
}

uint64_t ButtonBuilder.makeViewsForMac(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void (*)(uint64_t (*)(), void *))*v3;
  outlined init with copy of ButtonBuilder((uint64_t)v3, (uint64_t)v18);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  OUTLINED_FUNCTION_4_93((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v18[0], v18[1], v16, v18[2]);
  swift_retain();
  swift_bridgeObjectRetain();
  v7(_s27PhoneCallFlowDelegatePlugin13ButtonBuilderV15makeViewsForIOS09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0, v8);
  return swift_release();
}

uint64_t ButtonBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(a1, a2, a3, (uint64_t)&unk_568E40, (uint64_t)closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)partial apply);
}

uint64_t ButtonBuilder.makeViewsForCar(utteranceViews:_:)(unint64_t a1, void (*a2)(uint64_t, void))
{
  if (a1 >> 62)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    swift_bridgeObjectRetain();
    uint64_t v4 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    uint64_t v4 = a1;
  }
  a2(v4, 0);

  return swift_bridgeObjectRelease();
}

uint64_t ButtonBuilder.makeViewsForTV(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(a1, a2, a3, (uint64_t)&unk_568E68, (uint64_t)_s27PhoneCallFlowDelegatePlugin13ButtonBuilderV14makeViewsForTV09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0);
}

uint64_t ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void (*)(uint64_t, void *))*v5;
  outlined init with copy of ButtonBuilder((uint64_t)v5, (uint64_t)v21);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a1;
  OUTLINED_FUNCTION_4_93((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, v21[0], v21[1], v19, v21[2]);
  swift_retain();
  swift_bridgeObjectRetain();
  v10(a5, v11);
  return swift_release();
}

uint64_t closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(a1, a2, a3, a4, a5, (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:));
}

void closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)(unint64_t a1@<X1>, void *a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(TemplatingResult.sections.getter() + 16);
  swift_bridgeObjectRelease();
  if (!v7)
  {
    if (a1 >> 62)
    {
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
      swift_bridgeObjectRetain();
      uint64_t v17 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a1 = v17;
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    }
    goto LABEL_10;
  }
  id v8 = (id)type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAUIButton);
  uint64_t v9 = (void *)TemplatingResult.print.getter();
  if (!v9[2])
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = v9[4];
  uint64_t v11 = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_46A030;
  *(void *)(v12 + 32) = a2[2];
  uint64_t v18 = v12;
  specialized Array._endMutation()();
  swift_unknownObjectRetain();
  a2 = SAUIButton.init(text:commands:)(v10, v11, v18);
  id v8 = [objc_allocWithZone((Class)SAUIDialogPunchout) init];
  [v8 setButtonView:a2];
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_46A030;
  *(void *)(v13 + 32) = v8;
  uint64_t v19 = v13;
  specialized Array._endMutation()();
  unint64_t v3 = v19;
  if (a1 >> 62)
  {
LABEL_12:
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    id v15 = v8;
    swift_bridgeObjectRetain();
    uint64_t v16 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    a1 = v16;
    goto LABEL_5;
  }
  id v14 = v8;
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
LABEL_5:
  if (v3 >> 62)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_10:
  *a3 = a1;
}

uint64_t closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(a1, a2, a3, a4, a5, (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:));
}

uint64_t closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, char *))
{
  uint64_t v7 = _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSaySo9SAAceViewCGTg5(a6);
  char v9 = v8 & 1;
  a2(v7, v8 & 1);
  return outlined consume of Result<[SAAceView], Error>(v7, v9);
}

void closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)(unint64_t a1@<X1>, void *a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(TemplatingResult.sections.getter() + 16);
  swift_bridgeObjectRelease();
  unint64_t v7 = a1 >> 62;
  if (v6)
  {
    if (v7)
    {
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
      swift_bridgeObjectRetain();
      uint64_t v14 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a1 = v14;
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    }
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAUIButton);
    char v8 = (void *)TemplatingResult.print.getter();
    if (v8[2])
    {
      uint64_t v9 = v8[4];
      uint64_t v10 = v8[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_46A030;
      *(void *)(v11 + 32) = a2[2];
      uint64_t v16 = v11;
      specialized Array._endMutation()();
      swift_unknownObjectRetain();
      id v12 = SAUIButton.init(text:commands:)(v9, v10, v16);
      uint64_t v15 = a1;
      swift_bridgeObjectRetain();
      a2 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18
                                                                                    + (v15 & 0xFFFFFFFFFFFFFF8)) >> 1)
      {
LABEL_6:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v13 = v15;
        swift_bridgeObjectRelease();

        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_6;
  }
  if (!v7)
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
    goto LABEL_10;
  }
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
  swift_bridgeObjectRetain();
  uint64_t v13 = _bridgeCocoaArray<A>(_:)();
  swift_bridgeObjectRelease();
LABEL_7:
  a1 = v13;
LABEL_10:
  *a3 = a1;
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForCar(utteranceViews:_:) in conformance ButtonBuilder(unint64_t a1, void (*a2)(uint64_t, void))
{
  return ButtonBuilder.makeViewsForCar(utteranceViews:_:)(a1, a2);
}

uint64_t partial apply for closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)(a1, a2, (void *)(v2 + 16), *(void *)(v2 + 56));
}

unint64_t outlined copy of ErrorButtonLabelOptions(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_retain();
  }
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin13ButtonBuilderV17makeViewsForWatch09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0()
{
  OUTLINED_FUNCTION_6_83();
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(v0, v1, v2, v3, v4, (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:));
}

uint64_t _s27PhoneCallFlowDelegatePlugin13ButtonBuilderV15makeViewsForIOS09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0()
{
  OUTLINED_FUNCTION_6_83();
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(v0, v1, v2, v3, v4, (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:));
}

uint64_t _s27PhoneCallFlowDelegatePlugin13ButtonBuilderV14makeViewsForTV09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0()
{
  OUTLINED_FUNCTION_6_83();
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(v0, v1, v2, v3, v4, (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:));
}

unint64_t *initializeBufferWithCopyOfBuffer for ErrorButtonLabelOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  outlined copy of ErrorButtonLabelOptions(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ErrorButtonLabelOptions(unint64_t *a1)
{
  return outlined consume of ErrorButtonLabelOptions(*a1);
}

unint64_t outlined consume of ErrorButtonLabelOptions(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_release();
  }
  return result;
}

unint64_t *assignWithCopy for ErrorButtonLabelOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  outlined copy of ErrorButtonLabelOptions(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  outlined consume of ErrorButtonLabelOptions(v4);
  return a1;
}

unint64_t *assignWithTake for ErrorButtonLabelOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  outlined consume of ErrorButtonLabelOptions(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorButtonLabelOptions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ErrorButtonLabelOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

unint64_t *destructiveInjectEnumTag for ErrorButtonLabelOptions(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ErrorButtonLabelOptions()
{
  return &type metadata for ErrorButtonLabelOptions;
}

uint64_t destroy for ButtonBuilder(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

uint64_t initializeWithCopy for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  unint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_unknownObjectRetain();
  v7(a1 + 24, v4, v6);
  return a1;
}

void *assignWithCopy for ButtonBuilder(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  return a1;
}

uint64_t assignWithTake for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for ButtonBuilder()
{
  return &type metadata for ButtonBuilder;
}

void partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)(unint64_t *a1@<X8>)
{
  closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)(unint64_t *a1@<X8>)
{
  closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t *a1@<X8>)
{
  closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t OUTLINED_FUNCTION_0_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return outlined init with copy of SignalProviding(v6, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_2_109(uint64_t a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  *uint64_t v2 = a1;
  return outlined init with copy of SignalProviding((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_3_97(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10)
{
  return outlined init with take of AppSelectionSignalComponent(&a10, a1 + 16);
}

__n128 OUTLINED_FUNCTION_4_93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, __n128 a11, long long a12)
{
  *(_OWORD *)(a1 + 40) = a9;
  *(_OWORD *)(a1 + 56) = a10;
  __n128 result = a11;
  *(__n128 *)(a1 + 72) = a11;
  *(_OWORD *)(a1 + 88) = a12;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_77()
{
  return static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
}

uint64_t OUTLINED_FUNCTION_9_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  return outlined init with copy of SignalProviding(v11, (uint64_t)va);
}

uint64_t PhoneCallProviderProperties.isFirstPartyPhone.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = OUTLINED_FUNCTION_0_65();
  v6(v5);
  uint64_t v7 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v2, 1, v7) == 1)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v8 = 0;
    a2 = 0;
  }
  else
  {
    uint64_t v8 = v2;
    SpeakableString.print.getter();
    OUTLINED_FUNCTION_0_61();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  }
  uint64_t v10 = INPreferredCallProviderGetBackingType();
  switch(v10)
  {
    case 4:
      uint64_t v11 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v11 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v11 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v12 = v11;
      goto LABEL_12;
  }
  uint64_t v11 = +[NSString stringWithFormat:@"(unknown: %i)", v10];
LABEL_12:
  uint64_t v13 = v11;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (a2)
  {
    if (v8 == v14 && a2 == v16) {
      char v18 = 1;
    }
    else {
      char v18 = OUTLINED_FUNCTION_0_11();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = 0;
  }
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t PhoneCallProviderProperties.isFaceTime.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = OUTLINED_FUNCTION_0_65();
  v6(v5);
  uint64_t v7 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v2, 1, v7) == 1)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v8 = 0;
    a2 = 0;
  }
  else
  {
    uint64_t v8 = v2;
    SpeakableString.print.getter();
    OUTLINED_FUNCTION_0_61();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  }
  uint64_t v10 = INPreferredCallProviderGetBackingType();
  switch(v10)
  {
    case 4:
      uint64_t v11 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v11 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v11 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v12 = v11;
      goto LABEL_12;
  }
  uint64_t v11 = +[NSString stringWithFormat:@"(unknown: %i)", v10];
LABEL_12:
  uint64_t v13 = v11;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (a2)
  {
    if (v8 == v14 && a2 == v16) {
      char v18 = 1;
    }
    else {
      char v18 = OUTLINED_FUNCTION_0_11();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = 0;
  }
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t OUTLINED_FUNCTION_0_65()
{
  return v0;
}

void UnsupportedFaceTimeOutputProvider.__allocating_init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v17 = v3;
  OUTLINED_FUNCTION_57_17();
  uint64_t v4 = swift_allocObject();
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v6);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v7);
  uint64_t v9 = OUTLINED_FUNCTION_1_28(v8, v16);
  v10(v9);
  char v11 = OUTLINED_FUNCTION_9_69();
  specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)(v11, v12, v13, v14, v15, v17, v0, v4, v6, v5);
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_26_1();
}

void UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v19 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_57_17();
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v7 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v9);
  char v11 = OUTLINED_FUNCTION_1_28(v10, v18);
  v12(v11);
  char v13 = OUTLINED_FUNCTION_9_69();
  specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)(v13, v14, v15, v16, v17, v5, v1, v19, v8, v7);
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_26_1();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 16))(v10, v1, v2);
  uint64_t v3 = v11;
  uint64_t v4 = v12;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v10, v11);
  v9[3] = v3;
  v9[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  type metadata accessor for SimpleOutputFlowAsync();
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  uint64_t v7 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7;
}

uint64_t closure #1 in UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a2 + 152) + **(int **)(*(void *)a2 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedOutput()()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = type metadata accessor for PhoneError();
  v1[5] = v3;
  OUTLINED_FUNCTION_11_0(v3);
  v1[6] = OUTLINED_FUNCTION_35();
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v1[7] = v4;
  *uint64_t v4 = v5;
  v4[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedOutput();
  return UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  uint64_t v6;

  v0[2] = v0[8];
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast())
  {
    uint64_t v1 = v0[6];
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      swift_errorRelease();
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_8(v1, (void (*)(void))type metadata accessor for PhoneError);
      swift_task_alloc();
      OUTLINED_FUNCTION_31_2();
      v0[9] = v2;
      *uint64_t v2 = v3;
      v2[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedOutput();
      return UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()();
    }
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_8(v1, (void (*)(void))type metadata accessor for PhoneError);
  }
  swift_errorRelease();
  swift_willThrow();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v5();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_errorRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v0();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_errorRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()()
{
  OUTLINED_FUNCTION_1_0();
  v1[28] = v2;
  v1[29] = v0;
  uint64_t v3 = type metadata accessor for PhoneError();
  v1[30] = v3;
  OUTLINED_FUNCTION_11_0(v3);
  v1[31] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v4);
  v1[32] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for TemplatingResult();
  v1[33] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[34] = v6;
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 344) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 376) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 400) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 448) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = *(uint64_t **)(v0 + 224);
  v1[3] = type metadata accessor for AceOutput();
  v1[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v1);
  UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = OUTLINED_FUNCTION_7_78();
  v3(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v4();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_41_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_38();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_41_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_38();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  swift_release();
  OUTLINED_FUNCTION_41_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_38();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[34];
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  OUTLINED_FUNCTION_41_27();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_15_38();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

void UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v1[39] = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v5);
    _os_log_impl(&dword_0, v3, v4, "#UnsupportedFaceTimeOutputProvider makeUnsupportedLegacyResponse: returning legacy unsupported dialog", v0, 2u);
    OUTLINED_FUNCTION_6();
  }
  uint64_t v6 = v1[29];

  int v7 = *(unsigned __int8 *)(v6 + 96);
  if (v7 != 12)
  {
    if (v7 != 9)
    {
      if (v7 == 8)
      {
        uint64_t v8 = v1[29];
        type metadata accessor for StartCallCATs();
        static CATOption.defaultMode.getter();
        v1[40] = CATWrapper.__allocating_init(options:globals:)();
        type metadata accessor for SirikitDeviceState();
        __swift_project_boxed_opaque_existential_1((void *)(v8 + 16), *(void *)(v8 + 40));
        uint64_t v9 = OUTLINED_FUNCTION_35_30();
        v10(v9);
        v1[41] = SirikitDeviceState.__allocating_init(from:)();
        swift_task_alloc();
        OUTLINED_FUNCTION_31_2();
        v1[42] = v11;
        void *v11 = v12;
        v11[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
        OUTLINED_FUNCTION_37_29();
        OUTLINED_FUNCTION_54_20();
        __asm { BRAA            X3, X16 }
      }
      uint64_t v29 = v1[31];
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      v30._uint64_t countAndFlagsBits = UnsupportedPhoneCall.rawValue.getter(v7);
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      *(void *)uint64_t v29 = 0xD000000000000018;
      *(void *)(v29 + 8) = 0x800000000049BA00;
      OUTLINED_FUNCTION_134();
      *(void *)(v29 + 16) = v31;
      *(void *)(v29 + 24) = v32;
      OUTLINED_FUNCTION_134();
      *(void *)(v29 + 32) = v33;
      *(void *)(v29 + 40) = v34;
      *(void *)(v29 + 48) = 71;
      *(unsigned char *)(v29 + 56) = 0;
      swift_storeEnumTagMultiPayload();
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
      swift_allocError();
      PhoneError.logged()(v35);
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_8(v29, (void (*)(void))type metadata accessor for PhoneError);
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_47_0();
      OUTLINED_FUNCTION_54_20();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v22 = v1[29];
    type metadata accessor for StartCallCATs();
    static CATOption.defaultMode.getter();
    v1[44] = CATWrapper.__allocating_init(options:globals:)();
    type metadata accessor for SirikitDeviceState();
    __swift_project_boxed_opaque_existential_1((void *)(v22 + 16), *(void *)(v22 + 40));
    uint64_t v23 = OUTLINED_FUNCTION_35_30();
    v24(v23);
    v1[45] = SirikitDeviceState.__allocating_init(from:)();
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    v1[46] = v25;
    *uint64_t v25 = v26;
    v25[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
    OUTLINED_FUNCTION_37_29();
    OUTLINED_FUNCTION_54_20();
    __asm { BRAA            X3, X16 }
  }
  uint64_t v15 = v1[29];
  type metadata accessor for SirikitDeviceState();
  __swift_project_boxed_opaque_existential_1((void *)(v15 + 16), *(void *)(v15 + 40));
  uint64_t v16 = OUTLINED_FUNCTION_35_30();
  v17(v16);
  v1[48] = SirikitDeviceState.__allocating_init(from:)();
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v1[49] = v18;
  *uint64_t v18 = v19;
  v18[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
  OUTLINED_FUNCTION_37_29();
  OUTLINED_FUNCTION_54_20();
  __asm { BRAA            X3, X16 }
}

uint64_t UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_42_29();
  v17();
  uint64_t v18 = v16[6];
  __swift_project_boxed_opaque_existential_1(v16 + 2, v16[5]);
  uint64_t v19 = OUTLINED_FUNCTION_35_30();
  v20(v19);
  if (OUTLINED_FUNCTION_23_41())
  {
    __swift_destroy_boxed_opaque_existential_1(v15 + 16);
LABEL_4:
    uint64_t v23 = OUTLINED_FUNCTION_4_94();
    v24(v23);
    char v25 = OUTLINED_FUNCTION_20_41();
    __swift_destroy_boxed_opaque_existential_1(v18);
    if (v25)
    {
      if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
        swift_once();
      }
      uint64_t v26 = &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
    }
    else
    {
      if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
        swift_once();
      }
      uint64_t v26 = &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
    }
    OUTLINED_FUNCTION_15_53(v26);
    type metadata accessor for StartCallCATs();
    swift_retain();
    static CATOption.defaultMode.getter();
    uint64_t v64 = OUTLINED_FUNCTION_34_27();
    type metadata accessor for PhoneCallDisplayTextCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for PhoneCallCommonCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for UnsupportedFlowCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for AppInfoBuilder();
    swift_allocObject();
    type metadata accessor for TemplatingOperationManager();
    swift_allocObject();
    TemplatingOperationManager.init()();
    type metadata accessor for StartCallCatTemplatingService();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_11_64();
    uint64_t v28 = OUTLINED_FUNCTION_5_71(v27);
    v29(v28);
    uint64_t v30 = OUTLINED_FUNCTION_49_21();
    uint64_t v31 = (void *)OUTLINED_FUNCTION_43_25(v30);
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v32))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_34_30(&dword_0, v33, v34, "#UnsupportedFaceTimeOutputProvider Adding Open FaceTime button.");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v35 = (void *)swift_task_alloc();
    OUTLINED_FUNCTION_39_27(v35);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v15 + 440) = v36;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
    OUTLINED_FUNCTION_53_22();
    *uint64_t v36 = v37;
    v36[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
    OUTLINED_FUNCTION_13_52();
    OUTLINED_FUNCTION_28_1();
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v38, v39, v40, v41, v42, v43, v44, v45, v64, a10, a11, a12);
  }
  uint64_t v21 = OUTLINED_FUNCTION_8_84();
  v22(v21);
  OUTLINED_FUNCTION_22_50();
  OUTLINED_FUNCTION_58_21();
  if (v14) {
    goto LABEL_4;
  }
  uint64_t v47 = (void *)Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_48_25(v48))
  {
    uint64_t v49 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v49);
    OUTLINED_FUNCTION_40_29(&dword_0, v50, v51, "#UnsupportedFaceTimeOutputProvider No FaceTime button shown");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v52 = *(uint64_t **)(v15 + 224);

  v52[3] = type metadata accessor for AceOutput();
  v52[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v52);
  UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)();
  uint64_t v53 = OUTLINED_FUNCTION_7_78();
  v54(v53);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_28_1();
  return v56(v55, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, a13, a14);
}

{
  char v14;
  uint64_t v15;
  void *v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t);
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  os_log_type_t v48;
  _WORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t (*v56)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_42_29();
  v17();
  uint64_t v18 = v16[6];
  __swift_project_boxed_opaque_existential_1(v16 + 2, v16[5]);
  uint64_t v19 = OUTLINED_FUNCTION_35_30();
  v20(v19);
  if (OUTLINED_FUNCTION_23_41())
  {
    __swift_destroy_boxed_opaque_existential_1(v15 + 16);
LABEL_4:
    uint64_t v23 = OUTLINED_FUNCTION_4_94();
    v24(v23);
    char v25 = OUTLINED_FUNCTION_20_41();
    __swift_destroy_boxed_opaque_existential_1(v18);
    if (v25)
    {
      if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
        swift_once();
      }
      uint64_t v26 = &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
    }
    else
    {
      if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
        swift_once();
      }
      uint64_t v26 = &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
    }
    OUTLINED_FUNCTION_15_53(v26);
    type metadata accessor for StartCallCATs();
    swift_retain();
    static CATOption.defaultMode.getter();
    uint64_t v64 = OUTLINED_FUNCTION_34_27();
    type metadata accessor for PhoneCallDisplayTextCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for PhoneCallCommonCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for UnsupportedFlowCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for AppInfoBuilder();
    swift_allocObject();
    type metadata accessor for TemplatingOperationManager();
    swift_allocObject();
    TemplatingOperationManager.init()();
    type metadata accessor for StartCallCatTemplatingService();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_11_64();
    uint64_t v28 = OUTLINED_FUNCTION_5_71(v27);
    v29(v28);
    uint64_t v30 = OUTLINED_FUNCTION_49_21();
    uint64_t v31 = (void *)OUTLINED_FUNCTION_43_25(v30);
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v32))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_34_30(&dword_0, v33, v34, "#UnsupportedFaceTimeOutputProvider Adding Open FaceTime button.");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v35 = (void *)swift_task_alloc();
    OUTLINED_FUNCTION_39_27(v35);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v15 + 440) = v36;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
    OUTLINED_FUNCTION_53_22();
    *uint64_t v36 = v37;
    v36[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
    OUTLINED_FUNCTION_13_52();
    OUTLINED_FUNCTION_28_1();
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v38, v39, v40, v41, v42, v43, v44, v45, v64, a10, a11, a12);
  }
  uint64_t v21 = OUTLINED_FUNCTION_8_84();
  v22(v21);
  OUTLINED_FUNCTION_22_50();
  OUTLINED_FUNCTION_58_21();
  if (v14) {
    goto LABEL_4;
  }
  uint64_t v47 = (void *)Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_48_25(v48))
  {
    uint64_t v49 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v49);
    OUTLINED_FUNCTION_40_29(&dword_0, v50, v51, "#UnsupportedFaceTimeOutputProvider No FaceTime button shown");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v52 = *(uint64_t **)(v15 + 224);

  v52[3] = type metadata accessor for AceOutput();
  v52[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v52);
  UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)();
  uint64_t v53 = OUTLINED_FUNCTION_7_78();
  v54(v53);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_28_1();
  return v56(v55, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, a13, a14);
}

{
  char v14;
  uint64_t v15;
  void *v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t);
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  os_log_type_t v48;
  _WORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t (*v56)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_42_29();
  v17();
  uint64_t v18 = v16[6];
  __swift_project_boxed_opaque_existential_1(v16 + 2, v16[5]);
  uint64_t v19 = OUTLINED_FUNCTION_35_30();
  v20(v19);
  if (OUTLINED_FUNCTION_23_41())
  {
    __swift_destroy_boxed_opaque_existential_1(v15 + 16);
LABEL_4:
    uint64_t v23 = OUTLINED_FUNCTION_4_94();
    v24(v23);
    char v25 = OUTLINED_FUNCTION_20_41();
    __swift_destroy_boxed_opaque_existential_1(v18);
    if (v25)
    {
      if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
        swift_once();
      }
      uint64_t v26 = &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
    }
    else
    {
      if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
        swift_once();
      }
      uint64_t v26 = &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
    }
    OUTLINED_FUNCTION_15_53(v26);
    type metadata accessor for StartCallCATs();
    swift_retain();
    static CATOption.defaultMode.getter();
    uint64_t v64 = OUTLINED_FUNCTION_34_27();
    type metadata accessor for PhoneCallDisplayTextCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for PhoneCallCommonCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for UnsupportedFlowCATs();
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_34_27();
    type metadata accessor for AppInfoBuilder();
    swift_allocObject();
    type metadata accessor for TemplatingOperationManager();
    swift_allocObject();
    TemplatingOperationManager.init()();
    type metadata accessor for StartCallCatTemplatingService();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_11_64();
    uint64_t v28 = OUTLINED_FUNCTION_5_71(v27);
    v29(v28);
    uint64_t v30 = OUTLINED_FUNCTION_49_21();
    uint64_t v31 = (void *)OUTLINED_FUNCTION_43_25(v30);
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v32))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_34_30(&dword_0, v33, v34, "#UnsupportedFaceTimeOutputProvider Adding Open FaceTime button.");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v35 = (void *)swift_task_alloc();
    OUTLINED_FUNCTION_39_27(v35);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v15 + 440) = v36;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
    OUTLINED_FUNCTION_53_22();
    *uint64_t v36 = v37;
    v36[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
    OUTLINED_FUNCTION_13_52();
    OUTLINED_FUNCTION_28_1();
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v38, v39, v40, v41, v42, v43, v44, v45, v64, a10, a11, a12);
  }
  uint64_t v21 = OUTLINED_FUNCTION_8_84();
  v22(v21);
  OUTLINED_FUNCTION_22_50();
  OUTLINED_FUNCTION_58_21();
  if (v14) {
    goto LABEL_4;
  }
  uint64_t v47 = (void *)Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_48_25(v48))
  {
    uint64_t v49 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v49);
    OUTLINED_FUNCTION_40_29(&dword_0, v50, v51, "#UnsupportedFaceTimeOutputProvider No FaceTime button shown");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v52 = *(uint64_t **)(v15 + 224);

  v52[3] = type metadata accessor for AceOutput();
  v52[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v52);
  UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)();
  uint64_t v53 = OUTLINED_FUNCTION_7_78();
  v54(v53);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_28_1();
  return v56(v55, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, a13, a14);
}

uint64_t closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  v18[3] = type metadata accessor for StartCallCatTemplatingService();
  long long v18[4] = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
  v18[0] = a3;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp);
  swift_retain();
  uint64_t v11 = swift_retain();
  id v12 = SAAppsLaunchApp.init(app:)(v11);
  outlined init with copy of SignalProviding(a4 + 16, (uint64_t)v17);
  outlined init with copy of SignalProviding((uint64_t)v18, (uint64_t)&v19);
  uint64_t v13 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(&v19, v13 + 16);
  *(void *)(v13 + 56) = a2;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  *(void *)&long long v19 = partial apply for closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
  *((void *)&v19 + 1) = v13;
  id v20 = v12;
  outlined init with take of AppSelectionSignalComponent(v17, (uint64_t)&v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)((unint64_t)_swiftEmptyArrayStorage, (void (*)(void, void))partial apply for closure #1 in closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse(), v15);
  swift_release();
  return outlined destroy of ButtonBuilder((uint64_t)&v19);
}

uint64_t UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText()()
{
  OUTLINED_FUNCTION_1_0();
  v1[12] = v0;
  uint64_t v2 = type metadata accessor for Locale();
  v1[13] = v2;
  OUTLINED_FUNCTION_19_0(v2);
  v1[14] = v3;
  v1[15] = OUTLINED_FUNCTION_35();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[16] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;

  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = (void *)v0[12];
  uint64_t v21 = v0[13];
  type metadata accessor for App();
  uint64_t v4 = App.__allocating_init(appIdentifier:)();
  v0[17] = v4;
  uint64_t v5 = v3 + 2;
  __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
  uint64_t v6 = OUTLINED_FUNCTION_25_33();
  v7(v6);
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v23 = (uint64_t)(v0 + 2);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
  uint64_t v10 = v3[5];
  uint64_t v11 = v3[6];
  __swift_project_boxed_opaque_existential_1(v5, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v4, v1, v8, v9);
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  unint64_t v14 = v0[16];
  if (v13)
  {
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v15 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v14, 0, 1, v15);
    __swift_destroy_boxed_opaque_existential_1(v23);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v23);
    uint64_t v16 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v14, 1, 1, v16);
  }
  uint64_t v17 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + **(void **)(v0[12] + 128) + 24);
  uint64_t v22 = (uint64_t (*)(uint64_t))((char *)v17 + *v17);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[18] = v18;
  *uint64_t v18 = v0;
  v18[1] = UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText();
  long long v19 = v0[16];
  return v22(v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void *)(v0 + 128);
  dispatch thunk of LabelExecutionResult.subscript.getter();
  swift_release();
  swift_release();
  outlined destroy of PhoneCallNLIntent?(v1, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_15_38();
  return v5(v2, v3, v4, v5, v6, v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  outlined destroy of PhoneCallNLIntent?(v1, &demangling cache variable for type metadata for SpeakableString?);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText()(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 152) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 160) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()()
{
  OUTLINED_FUNCTION_1_0();
  v1[23] = v2;
  v1[24] = v0;
  uint64_t v3 = type metadata accessor for PhoneError();
  v1[25] = v3;
  OUTLINED_FUNCTION_11_0(v3);
  v1[26] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v4);
  v1[27] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v1[28] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[29] = v6;
  v1[30] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for PhoneSnippetDataModels();
  v1[31] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[32] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for ButtonConfigurationModel();
  OUTLINED_FUNCTION_19_0(v8);
  v1[33] = v9;
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v1[36] = v10;
  *uint64_t v10 = v1;
  v10[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
  return UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText()();
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  v3[12] = v1;
  v3[13] = v5;
  v3[14] = v6;
  v3[15] = v0;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  v3[37] = v9;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_59_16();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_15_38();
    return v11(v10, v11, v12, v13, v14, v15, v16, v17);
  }
  else
  {
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_15_38();
    return _swift_task_switch(v19, v20, v21);
  }
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_24_37();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v4 = v3;
  v3[16] = v1;
  v3[17] = v5;
  v3[18] = v0;
  OUTLINED_FUNCTION_63_12();
  *uint64_t v6 = *v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_12();
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59_16();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_15_38();
    return v8(v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_15_38();
    return _swift_task_switch(v16, v17, v18);
  }
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_24_37();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v4 = v3;
  v3[19] = v1;
  v3[20] = v5;
  v3[21] = v0;
  OUTLINED_FUNCTION_63_12();
  *uint64_t v6 = *v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_12();
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59_16();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_15_38();
    return v8(v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_15_38();
    return _swift_task_switch(v16, v17, v18);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[32];
  uint64_t v5 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v6 = v0[28];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_8(v3, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_8(v2, (void (*)(void))type metadata accessor for ButtonConfigurationModel);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v7();
}

void UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()()
{
  uint64_t v1 = v0[24];
  int v2 = *(unsigned __int8 *)(v1 + 96);
  if (v2 != 9)
  {
    if (v2 == 8)
    {
      type metadata accessor for SirikitDeviceState();
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      uint64_t v3 = OUTLINED_FUNCTION_35_30();
      v4(v3);
      v0[38] = SirikitDeviceState.__allocating_init(from:)();
      uint64_t v5 = (void *)swift_task_alloc();
      v0[39] = v5;
      *uint64_t v5 = v0;
      v5[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
      OUTLINED_FUNCTION_65_12();
      OUTLINED_FUNCTION_2_49();
      __asm { BRAA            X2, X16 }
    }
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      unint64_t v17 = specialized String.init<A>(describing:)(v2);
      v0[22] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v14, v15, "#UnsupportedFaceTimeOutputProvider makeUnsupportedOutput: the dialog for %s hasn't been migrated to Response Framework.", v16, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    long long v19 = (void *)v0[26];
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    uint64_t v29 = 0xD000000000000013;
    unint64_t v30 = 0x800000000049BA90;
    v20._uint64_t countAndFlagsBits = UnsupportedPhoneCall.rawValue.getter(v2);
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    unint64_t v21 = v30;
    *long long v19 = v29;
    v19[1] = v21;
    OUTLINED_FUNCTION_134();
    long long v19[2] = v22;
    v19[3] = v23;
    OUTLINED_FUNCTION_134();
    v19[4] = v24;
    v19[5] = v25;
    v19[6] = 125;
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v26);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_8((uint64_t)v19, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_2_49();
    __asm { BRAA            X1, X16 }
  }
  type metadata accessor for SirikitDeviceState();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v8 = OUTLINED_FUNCTION_35_30();
  v9(v8);
  v0[40] = SirikitDeviceState.__allocating_init(from:)();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[41] = v10;
  *uint64_t v10 = v0;
  v10[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
  OUTLINED_FUNCTION_65_12();
  OUTLINED_FUNCTION_2_49();
  __asm { BRAA            X2, X16 }
}

uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v46 = OUTLINED_FUNCTION_18_38(*(void **)(v13 + 136));
  OUTLINED_FUNCTION_35_35();
  outlined init with copy of ButtonConfigurationModel(v10, v12, (uint64_t (*)(void))type metadata accessor for ButtonConfigurationModel);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v17 = OUTLINED_FUNCTION_46_22();
  *(_OWORD *)(v17 + 16) = xmmword_467710;
  outlined init with take of ButtonConfigurationModel(v12, v17 + v11);
  OUTLINED_FUNCTION_45_21();
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static DialogPhase.completion.getter();
  swift_task_alloc();
  OUTLINED_FUNCTION_68_12();
  *(void *)(v18 + 16) = v19;
  *(void *)(v18 + 24) = 0x8000000000494D20;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v20 = OUTLINED_FUNCTION_25_37();
  v21(v20);
  __swift_project_boxed_opaque_existential_1(v15, *(void *)(v13 + 40));
  *(void *)(v13 + 80) = v16;
  *(void *)(v13 + 88) = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
  outlined init with copy of ButtonConfigurationModel((uint64_t)v14, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v23 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_56_19(v23, (__n128)xmmword_46A030, v24, v25, v26, v27, v28, v29, v30, v42, v43, v44, (uint64_t)v45, (unint64_t)v46);
  *(void *)(v13 + 344) = 0;
  id v31 = v14;
  os_log_type_t v32 = (void *)swift_task_alloc();
  *(void *)(v13 + 352) = v32;
  *os_log_type_t v32 = v13;
  v32[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
  uint64_t v33 = OUTLINED_FUNCTION_31_34();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t *boxed_opaque_existential_1;
  __n128 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  id v46;
  uint64_t v47;

  id v46 = OUTLINED_FUNCTION_18_38(*(void **)(v13 + 160));
  OUTLINED_FUNCTION_35_35();
  outlined init with copy of ButtonConfigurationModel(v10, v12, (uint64_t (*)(void))type metadata accessor for ButtonConfigurationModel);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v17 = OUTLINED_FUNCTION_46_22();
  *(_OWORD *)(v17 + 16) = xmmword_467710;
  outlined init with take of ButtonConfigurationModel(v12, v17 + v11);
  OUTLINED_FUNCTION_45_21();
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static DialogPhase.completion.getter();
  swift_task_alloc();
  OUTLINED_FUNCTION_68_12();
  *(void *)(v18 + 16) = v19;
  *(void *)(v18 + 24) = 0x8000000000494D20;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v20 = OUTLINED_FUNCTION_25_37();
  v21(v20);
  __swift_project_boxed_opaque_existential_1(v15, *(void *)(v13 + 40));
  *(void *)(v13 + 80) = v16;
  *(void *)(v13 + 88) = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
  outlined init with copy of ButtonConfigurationModel((uint64_t)v14, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v23 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_56_19(v23, (__n128)xmmword_46A030, v24, v25, v26, v27, v28, v29, v30, v42, v43, v44, (uint64_t)v45, (unint64_t)v46);
  *(void *)(v13 + 344) = 0;
  id v31 = v14;
  os_log_type_t v32 = (void *)swift_task_alloc();
  *(void *)(v13 + 352) = v32;
  *os_log_type_t v32 = v13;
  v32[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
  uint64_t v33 = OUTLINED_FUNCTION_31_34();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10);
}

void UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4 - v3;
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v6 = OUTLINED_FUNCTION_25_33();
  v7(v6);
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v13, v9, v8);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
  uint64_t v10 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v10);
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  outlined destroy of PhoneCallNLIntent?((uint64_t)v11, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of PhoneCallNLIntent?(v5, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  OUTLINED_FUNCTION_26_1();
}

void static UnsupportedFaceTimeOutputProvider.makeAssistantUtteranceViewForTemplatingResultOnAppleTV(template:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v56 = v0;
  type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_1();
  uint64_t v53 = v2;
  uint64_t v54 = v1;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v49 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v55 = (char *)&v49 - v5;
  type metadata accessor for TemplatingText();
  OUTLINED_FUNCTION_1();
  uint64_t v51 = v7;
  uint64_t v52 = v6;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TemplatingSection?);
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for TemplatingSection();
  OUTLINED_FUNCTION_1();
  uint64_t v50 = v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_4();
  uint64_t v24 = v23 - v22;
  id v25 = [objc_allocWithZone((Class)SAUIAssistantUtteranceView) init];
  UUID.init()();
  uint64_t v26 = UUID.uuidString.getter();
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v18);
  uint64_t v29 = v56;
  outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v26, v28, v25, (SEL *)&selRef_setAceId_);

  uint64_t v30 = TemplatingResult.templateIdentifier.getter();
  outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v30, v31, v25, (SEL *)&selRef_setDialogIdentifier_);
  TemplatingResult.sections.getter();
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v12, 1, v13) == 1)
  {
    outlined destroy of PhoneCallNLIntent?(v12, &demangling cache variable for type metadata for TemplatingSection?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    uint64_t v33 = v53;
    uint64_t v34 = v54;
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    uint64_t v36 = v55;
    v35(v55, v29, v54);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v58 = v56;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v52 = v39 + 4;
      v35(v49, (uint64_t)v36, v34);
      uint64_t v40 = String.init<A>(describing:)();
      uint64_t v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v55, v34);
      _os_log_impl(&dword_0, v37, v38, "Received an invalid templatingResult while rendering SAUIDialogPunchout: %s", v39, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v34);
    }
  }
  else
  {
    uint64_t v42 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v17, v12, v13);
    TemplatingSection.content.getter();
    uint64_t v43 = TemplatingText.text.getter();
    uint64_t v45 = v44;
    OUTLINED_FUNCTION_11();
    v46();
    outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v43, v45, v25, (SEL *)&selRef_setText_);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v13);
  }
  [v25 setCanUseServerTTS:0];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  id v47 = v25;
  Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  [v47 setListenAfterSpeaking:isa];

  [v47 setCanBeRefreshed:0];
  OUTLINED_FUNCTION_26_1();
}

uint64_t UnsupportedFaceTimeOutputProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t UnsupportedFaceTimeOutputProvider.__deallocating_deinit()
{
  UnsupportedFaceTimeOutputProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)(char a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a8 + 80) = a9;
  *(void *)(a8 + 88) = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a8 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(boxed_opaque_existential_1, a7, a9);
  *(unsigned char *)(a8 + 96) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, a8 + 16);
  *(void *)(a8 + 120) = a4;
  *(void *)(a8 + 128) = a5;
  *(void *)(a8 + 104) = a3;
  *(void *)(a8 + 112) = a6;
  return a8;
}

uint64_t partial apply for closure #1 in UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v5;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()(v3, v0);
}

uint64_t type metadata accessor for UnsupportedFaceTimeOutputProvider()
{
  return self;
}

uint64_t partial apply for closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(uint64_t a1)
{
  return closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_3785C4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_378604()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  OUTLINED_FUNCTION_39_8();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  OUTLINED_FUNCTION_11();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

uint64_t partial apply for closure #1 in closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);

  return closure #1 in closure #1 in ContactUnsetRelationshipFlowStrategy.makeMeCardNotFoundResponse(requestedRelationship:resolveRecord:)(a1, v3);
}

uint64_t outlined destroy of ButtonBuilder(uint64_t a1)
{
  return a1;
}

uint64_t outlined init with copy of ButtonConfigurationModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_39_8();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_94()
{
  uint64_t v2 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_7_78()
{
  return *(void *)(v0 + 304);
}

uint64_t OUTLINED_FUNCTION_8_84()
{
  uint64_t v2 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

void OUTLINED_FUNCTION_11_64()
{
  specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)();
}

uint64_t OUTLINED_FUNCTION_13_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_53@<X0>(void *a1@<X8>)
{
  *(void *)(v3 + 408) = *a1;
  return outlined init with copy of SignalProviding(v1, v2);
}

id OUTLINED_FUNCTION_18_38@<X0>(void *a1@<X8>)
{
  *(void *)(v1 + 336) = a1;
  return a1;
}

uint64_t OUTLINED_FUNCTION_20_41()
{
  __swift_project_boxed_opaque_existential_1(v1, *(void *)(v0 + 120));
  return dispatch thunk of DeviceState.isMac.getter();
}

uint64_t OUTLINED_FUNCTION_22_50()
{
  __swift_project_boxed_opaque_existential_1(v1, *(void *)(v0 + 80));
  return dispatch thunk of DeviceState.isAppleTV.getter();
}

uint64_t OUTLINED_FUNCTION_23_41()
{
  __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 40));
  return dispatch thunk of DeviceState.isMac.getter();
}

uint64_t OUTLINED_FUNCTION_31_34()
{
  return *(void *)(v0 + 184);
}

void OUTLINED_FUNCTION_34_30(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_35_35()
{
  ButtonConfigurationModel.init(label:url:)(v2, v1, v0);
}

void *OUTLINED_FUNCTION_39_27(void *result)
{
  *(void *)(v2 + 432) = result;
  result[2] = v1;
  result[3] = v3;
  result[4] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_27()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_43_25(uint64_t a1)
{
  *(void *)(v2 + 424) = a1;
  __swift_destroy_boxed_opaque_existential_1(v1);
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_45_21()
{
  *(void *)uint64_t v1 = v0;
  *(unsigned char *)(v1 + 8) = 1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_46_22()
{
  return swift_allocObject();
}

BOOL OUTLINED_FUNCTION_48_25(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_49_21()
{
  return static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(v1, 2, v0);
}

uint64_t OUTLINED_FUNCTION_56_19(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = a14;
  return specialized Array._endMutation()();
}

uint64_t OUTLINED_FUNCTION_58_21()
{
  __swift_destroy_boxed_opaque_existential_1(v1);
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_59_16()
{
  return swift_task_dealloc();
}

uint64_t PhoneCallRecord.__allocating_init(callRecord:options:appInfoBuilder:locale:)(__CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a3, v9);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13 - v12;
  (*(void (**)(uint64_t))(v15 + 16))(v13 - v12);
  uint64_t v16 = specialized PhoneCallRecord.__allocating_init(callRecord:options:appInfoBuilder:locale:)(a1, a2, v14, a4, v4, v9, v10);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v16;
}

void *PhoneCallRecord.Options.callHistoryForDisplay.unsafeMutableAddressor()
{
  return &static PhoneCallRecord.Options.callHistoryForDisplay;
}

void *PhoneCallRecord.Options.announceCalls.unsafeMutableAddressor()
{
  return &static PhoneCallRecord.Options.announceCalls;
}

uint64_t PhoneCallRecord.Options.description.getter(char a1)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v2 = v3;
  unint64_t v4 = v3[2];
  if (v4 >= v3[3] >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v10;
  }
  v2[2] = v4 + 1;
  os_log_type_t v5 = &v2[2 * v4];
  v5[4] = 0xD000000000000016;
  v5[5] = 0x800000000049BAD0;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_1_95();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v2 = v11;
    }
    unint64_t v6 = v2[2];
    if (v6 >= v2[3] >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v2 = v12;
    }
    v2[2] = v6 + 1;
    uint64_t v7 = (char *)&v2[2 * v6];
    strcpy(v7 + 32, ".announceCalls");
    v7[47] = -18;
  }
LABEL_12:
  uint64_t v8 = Array.description.getter();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallRecord.Options()
{
  return PhoneCallRecord.Options.description.getter(*v0);
}

uint64_t protocol witness for SetAlgebra.intersection(_:) in conformance PhoneCallRecord.Options@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized OptionSet.intersection(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.remove(_:) in conformance PhoneCallRecord.Options@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.remove(_:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.update(with:) in conformance PhoneCallRecord.Options@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.update(with:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance PhoneCallRecord.Options(void *a1)
{
  return specialized OptionSet<>.formSymmetricDifference(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.subtracting(_:) in conformance PhoneCallRecord.Options@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized SetAlgebra.subtracting(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.isDisjoint(with:) in conformance PhoneCallRecord.Options(void *a1)
{
  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

uint64_t protocol witness for SetAlgebra.subtract(_:) in conformance PhoneCallRecord.Options(void *a1)
{
  return specialized SetAlgebra.subtract(_:)(*a1);
}

uint64_t protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance PhoneCallRecord.Options@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized SetAlgebra<>.init(arrayLiteral:)();
  *a1 = result;
  return result;
}

uint64_t static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(__CFString *a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a3, v8);

  return specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(a1, a2, v10, a4, v4, v8, v9);
}

uint64_t specialized Double.init<A>(exactly:)(uint64_t result)
{
  double v1 = (double)result;
  if ((double)result >= 9.22337204e18)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if ((uint64_t)v1 == result) {
    *(double *)&uint64_t result = (double)result;
  }
  else {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t PhoneCallRecord.description.getter()
{
  type metadata accessor for PhoneCallRecord(0);
  lazy protocol witness table accessor for type PhoneCallRecord and conformance PhoneCallRecord();
  CATType.toDictionary.getter();
  uint64_t v0 = Dictionary.description.getter();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallRecord()
{
  return PhoneCallRecord.description.getter();
}

uint64_t outlined bridged method (ob) of @objc INPerson.alternatives.getter(void *a1)
{
  id v2 = [a1 alternatives];

  if (!v2) {
    return 0;
  }
  type metadata accessor for INPerson();
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t specialized PhoneCallRecord.__allocating_init(callRecord:options:appInfoBuilder:locale:)(__CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  OUTLINED_FUNCTION_1();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_4();
  uint64_t v18 = (void *)(v17 - v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v17 - v16, v19, v20);
  uint64_t v21 = specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(a1, a2, v18, a4, a5, a6, a7);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(a5 + 320))(v21);

  type metadata accessor for Locale();
  OUTLINED_FUNCTION_39_8();
  (*(void (**)(uint64_t))(v23 + 8))(a4);
  (*(void (**)(void *, unint64_t))(v14 + 8))(v18, a6);
  return v22;
}

uint64_t specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(__CFString *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v231 = a6;
  uint64_t v230 = a4;
  v234 = a3;
  uint64_t v223 = a2;
  v236 = (void (*)(uint64_t, char *, uint64_t))type metadata accessor for Locale();
  uint64_t v216 = *((void *)v236 - 1);
  __chkstk_darwin(v236);
  v235 = (char *)&v206 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CATOption();
  __chkstk_darwin(v10 - 8);
  v217 = (char *)&v206 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SpeakableString();
  uint64_t v229 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  v232 = (char *)&v206 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  v228 = (char *)&v206 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v215 = (char *)&v206 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v214 = (uint64_t)&v206 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v227 = (char *)&v206 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v226 = (char *)&v206 - v24;
  __chkstk_darwin(v23);
  v225 = (char *)&v206 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (__CFString *)((char *)&v206 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v206 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v206 - v34;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  v233 = (char *)&v206 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  v209 = (char *)&v206 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v208 = (uint64_t)&v206 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v212 = (char *)&v206 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v213 = (char *)&v206 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v220 = (uint64_t)&v206 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v211 = (char *)&v206 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  v224 = (char *)&v206 - v52;
  __chkstk_darwin(v51);
  uint64_t v54 = (char *)&v206 - v53;
  type metadata accessor for App();
  outlined bridged method (pb) of @objc INCallRecord.providerBundleId.getter(a1);
  uint64_t v219 = App.__allocating_init(appIdentifier:)();
  AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)(v219, v230, v231, a7);
  if (v55)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 1, 1, v12);
  }
  id v56 = [(__CFString *)a1 dateCreated];
  if (v56)
  {
    uint64_t v57 = v56;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v58 = *(void (**)(__CFString *, char *, uint64_t))(v30 + 32);
    v58(v28, v33, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v29);
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29) != 1)
    {
      v58((__CFString *)v35, (char *)v28, v29);
      goto LABEL_9;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  }
  Date.init()();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v28, &demangling cache variable for type metadata for Date?);
LABEL_9:
  type metadata accessor for DialogCalendar();
  uint64_t v222 = static DialogCalendar.make(date:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
  if ([(__CFString *)a1 callRecordType])
  {
    uint64_t BackingType = INCallRecordTypeGetBackingType();
    switch((int)BackingType)
    {
      case 2:
        uint64_t v60 = @"OUTGOING";
        goto LABEL_21;
      case 3:
        uint64_t v60 = @"MISSED";
        goto LABEL_21;
      case 4:
        uint64_t v60 = @"RECEIVED";
        goto LABEL_21;
      case 5:
        uint64_t v60 = @"LATEST";
        goto LABEL_21;
      case 7:
        uint64_t v60 = @"VOICEMAIL";
        goto LABEL_21;
      case 8:
        uint64_t v60 = @"RINGING";
        goto LABEL_21;
      case 9:
        uint64_t v60 = @"IN_PROGRESS";
        goto LABEL_21;
      case 10:
        uint64_t v60 = @"ON_HOLD";
LABEL_21:
        uint64_t v62 = v60;
        break;
      default:
        uint64_t v60 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        break;
    }
    uint64_t v61 = (uint64_t)v233;
    uint64_t v28 = v60;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v61 = (uint64_t)v233;
  }
  SpeakableString.init(serializedValue:)();
  SpeakableString.init(print:speak:)();
  SpeakableString.init(print:speak:)();
  uint64_t v63 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(a1);
  unint64_t v64 = (unint64_t)_swiftEmptyArrayStorage;
  if (v63) {
    unint64_t v65 = v63;
  }
  else {
    unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
  }
  v237[0] = _swiftEmptyArrayStorage;
  v234 = (void *)v65;
  if (v65 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v65 = (unint64_t)v234;
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v66 = *(void *)((char *)&dword_10 + (v65 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v230 = v12;
  v221 = v54;
  v218 = a1;
  if (v66)
  {
    unint64_t v231 = type metadata accessor for PhonePerson(0);
    if (v66 < 1)
    {
      __break(1u);
      goto LABEL_99;
    }
    uint64_t v67 = 0;
    char v68 = v223 & 2;
    unint64_t v69 = v65 & 0xC000000000000001;
    id v70 = (void (**)(uint64_t, void (*)(uint64_t, char *, uint64_t)))(v216 + 8);
    do
    {
      if (v69) {
        id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v71 = *(id *)(v65 + 8 * v67 + 32);
      }
      uint64_t v72 = v71;
      static Device.current.getter();
      __swift_project_boxed_opaque_existential_1(v239, (uint64_t)v239[3]);
      uint64_t v73 = (uint64_t)v235;
      dispatch thunk of DeviceState.siriLocale.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v239);
      uint64_t v74 = static PhonePerson.make(phonePerson:options:locale:)(v72, v68, v73);
      (*v70)(v73, v236);

      uint64_t v61 = (uint64_t)v233;
      if (v74)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v237[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                           + (v237[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v67;
      unint64_t v65 = (unint64_t)v234;
    }
    while (v66 != v67);
    swift_bridgeObjectRelease();
    uint64_t v75 = (void *)v237[0];
    uint64_t v12 = v230;
    a1 = v218;
    unint64_t v64 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = _swiftEmptyArrayStorage;
  }
  unint64_t v231 = (unint64_t)v75;
  swift_bridgeObjectRelease();
  uint64_t v76 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(a1);
  if (v76) {
    unint64_t v64 = v76;
  }
  if (!(v64 >> 62))
  {
    uint64_t v28 = *(__CFString **)((char *)&dword_10 + (v64 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v28) {
      goto LABEL_45;
    }
LABEL_61:
    v234 = _swiftEmptyArrayStorage;
    goto LABEL_62;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = (__CFString *)_CocoaArrayWrapper.endIndex.getter();
  if (!v28) {
    goto LABEL_61;
  }
LABEL_45:
  if ((uint64_t)v28 < 1)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  uint64_t v77 = 0;
  uint64_t v78 = (void (**)(char *, uint64_t, uint64_t))(v229 + 32);
  v234 = _swiftEmptyArrayStorage;
  do
  {
    if ((v64 & 0xC000000000000001) != 0) {
      id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v79 = *(id *)(v64 + 8 * (void)v77 + 32);
    }
    uint64_t v80 = v79;
    outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v79);
    SpeakableString.init(print:speak:)();
    __swift_storeEnumTagSinglePayload(v61, 0, 1, v12);

    if (__swift_getEnumTagSinglePayload(v61, 1, v12) == 1)
    {
      _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v61, &demangling cache variable for type metadata for SpeakableString?);
    }
    else
    {
      uint64_t v81 = v61;
      uint64_t v82 = *v78;
      uint64_t v83 = v228;
      (*v78)(v228, v81, v12);
      v82(v232, (uint64_t)v83, v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v234 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v234[2] + 1, 1, (uint64_t)v234);
      }
      unint64_t v85 = v234[2];
      unint64_t v84 = v234[3];
      if (v85 >= v84 >> 1) {
        v234 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v84 > 1, v85 + 1, 1, (uint64_t)v234);
      }
      uint64_t v86 = v234;
      v234[2] = v85 + 1;
      unint64_t v87 = (unint64_t)v86
          + ((*(unsigned __int8 *)(v229 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v229 + 80))
          + *(void *)(v229 + 72) * v85;
      uint64_t v12 = v230;
      v82((char *)v87, (uint64_t)v232, v230);
      uint64_t v61 = (uint64_t)v233;
    }
    uint64_t v77 = (__CFString *)((char *)v77 + 1);
  }
  while (v28 != v77);
LABEL_62:
  swift_bridgeObjectRelease_n();
  unint64_t v88 = v231;
  if (v231 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v89 = *(void *)((char *)&dword_10 + (v231 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v28 = v218;
  if (v89)
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v88 & 0xC000000000000001) == 0, v88);
    if ((v88 & 0xC000000000000001) == 0)
    {
      uint64_t v90 = *(void *)(v88 + 32);
      swift_retain();
LABEL_67:
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
LABEL_100:
    uint64_t v90 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_67;
  }
  swift_bridgeObjectRelease();
  uint64_t v90 = 0;
LABEL_69:
  v91 = v28;
  static Device.current.getter();
  type metadata accessor for PhoneCallDisplayTextCATs();
  static CATOption.defaultMode.getter();
  v92 = (void *)CATWrapper.__allocating_init(options:globals:)();
  v232 = v91;
  v239[0] = v91;
  v239[6] = v92;
  CallRecordDisplayTextComponents.callDateText.getter();
  uint64_t v93 = v214;
  static CallRecordViewUtils.generateDisplayTime(dateTime:formattedDate:)(v214);
  swift_bridgeObjectRelease();
  uint64_t v94 = v229;
  v95 = (__CFString *)(v229 + 8);
  v96 = v226;
  v228 = *(char **)(v229 + 8);
  ((void (*)(char *, uint64_t))v228)(v226, v12);
  uint64_t v97 = v12;
  v98 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 32);
  v98(v96, v93, v97);
  uint64_t v99 = INCallRecord.callDuration.getter();
  if ((v100 & 1) == 0)
  {
    double v101 = *(double *)&v99;
    id v102 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v102 setUnitsStyle:0];
    [v102 setAllowedUnits:192];
    [v102 setZeroFormattingBehavior:0x10000];
    id v103 = [v102 stringFromTimeInterval:ceil(v101)];
    if (v103)
    {
      v104 = v103;
      uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v107 = v106;

      swift_bridgeObjectRetain();
      v108._uint64_t countAndFlagsBits = 48;
      v108._object = (void *)0xE100000000000000;
      LOBYTE(v104) = String.hasPrefix(_:)(v108);
      swift_bridgeObjectRelease();
      if (v104)
      {
        specialized Collection.dropFirst(_:)(1uLL, v105, v107);
        static String._fromSubstring(_:)();
        swift_bridgeObjectRelease();
      }
    }
  }
  v109 = v215;
  SpeakableString.init(print:speak:)();
  v110 = v227;
  uint64_t v111 = v230;
  ((void (*)(char *, uint64_t))v228)(v227, v230);
  v98(v110, (uint64_t)v109, v111);
  v112 = v232;
  v113 = (char *)[v232 callRecordType];
  v218 = v95;
  if (v113 != (unsigned char *)&dword_4 + 1)
  {
    if (![v112 preferredCallProvider])
    {
      uint64_t v214 = 0xE700000000000000;
      uint64_t v210 = 0x4E574F4E4B4E55;
      uint64_t v116 = v230;
      goto LABEL_88;
    }
    uint64_t v117 = INPreferredCallProviderGetBackingType();
    uint64_t v116 = v230;
    switch(v117)
    {
      case 4:
        v118 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        v118 = @"FACETIME_PROVIDER";
        break;
      case 2:
        v118 = @"TELEPHONY_PROVIDER";
        break;
      default:
        v118 = +[NSString stringWithFormat:@"(unknown: %i)", v117];
        goto LABEL_86;
    }
    v119 = v118;
LABEL_86:
    v114 = v118;
    goto LABEL_87;
  }
  v114 = @"TELEPHONY_PROVIDER";
  v115 = @"TELEPHONY_PROVIDER";
  uint64_t v116 = v230;
LABEL_87:
  v120 = v114;
  uint64_t v210 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v214 = v121;

LABEL_88:
  type metadata accessor for PhoneCallRecord.Builder(0);
  swift_allocObject();
  uint64_t v122 = PhoneCallRecord.Builder.init()();
  id v123 = [v112 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v124 = (uint64_t)v224;
  SpeakableString.init(serializedValue:)();
  __swift_storeEnumTagSinglePayload(v124, 0, 1, v116);
  uint64_t v125 = (*(uint64_t (**)(uint64_t))(*(void *)v122 + 856))(v124);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v124, &demangling cache variable for type metadata for SpeakableString?);
  v126 = *(uint64_t (**)(uint64_t))(*(void *)v125 + 872);
  uint64_t v127 = swift_retain();
  uint64_t v128 = v126(v127);
  swift_release();
  swift_release();
  uint64_t v129 = (*(uint64_t (**)(uint64_t))(*(void *)v128 + 888))(v90);
  swift_release();
  unint64_t v130 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(v112);
  if (!v130)
  {
    unint64_t v135 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_103;
  }
  unint64_t v131 = v130;
  if (v130 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_91;
    }
LABEL_102:
    swift_bridgeObjectRelease();
    unint64_t v135 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_103;
  }
  if (!*(void *)((char *)&dword_10 + (v130 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_102;
  }
LABEL_91:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v131 & 0xC000000000000001) == 0, v131);
  if ((v131 & 0xC000000000000001) != 0) {
    goto LABEL_140;
  }
  for (id i = *(id *)(v131 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    v133 = i;
    swift_bridgeObjectRelease();
    v134 = (void *)outlined bridged method (ob) of @objc INPerson.alternatives.getter(v133);
    unint64_t v135 = (unint64_t)(v134 ? v134 : _swiftEmptyArrayStorage);
LABEL_103:
    v215 = (char *)v90;
    unint64_t v238 = (unint64_t)_swiftEmptyArrayStorage;
    if (v135 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v136 = _CocoaArrayWrapper.endIndex.getter();
      if (!v136)
      {
LABEL_117:
        swift_bridgeObjectRelease();
        v145 = _swiftEmptyArrayStorage;
        goto LABEL_118;
      }
    }
    else
    {
      uint64_t v136 = *(void *)((char *)&dword_10 + (v135 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v136) {
        goto LABEL_117;
      }
    }
    v233 = (char *)type metadata accessor for PhonePerson(0);
    if (v136 >= 1) {
      break;
    }
    __break(1u);
LABEL_140:
    ;
  }
  uint64_t v207 = v129;
  uint64_t v137 = 0;
  unint64_t v138 = v135 & 0xC000000000000001;
  v139 = (void (**)(uint64_t, void (*)(uint64_t, char *, uint64_t)))(v216 + 8);
  v140 = (void *)v135;
  uint64_t v141 = (uint64_t)v235;
  do
  {
    if (v138) {
      id v142 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v142 = *(id *)(v135 + 8 * v137 + 32);
    }
    v143 = v142;
    static Device.current.getter();
    __swift_project_boxed_opaque_existential_1(v237, v237[3]);
    dispatch thunk of DeviceState.siriLocale.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v237);
    uint64_t v144 = static PhonePerson.make(phonePerson:options:locale:)(v143, 0, v141);
    (*v139)(v141, v236);

    if (v144)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + (v238 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                      + (v238 & 0xFFFFFFFFFFFFFF8)) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    ++v137;
    unint64_t v135 = (unint64_t)v140;
  }
  while (v136 != v137);
  swift_bridgeObjectRelease();
  v145 = (void *)v238;
  uint64_t v129 = v207;
LABEL_118:
  swift_bridgeObjectRelease();
  uint64_t v146 = (*(uint64_t (**)(void *))(*(void *)v129 + 904))(v145);
  swift_release();
  swift_bridgeObjectRelease();
  v147 = *(void (**)(char *, char *, uint64_t))(v229 + 16);
  uint64_t v148 = (uint64_t)v224;
  uint64_t v149 = v230;
  v147(v224, v225, v230);
  __swift_storeEnumTagSinglePayload(v148, 0, 1, v149);
  uint64_t v150 = (*(uint64_t (**)(uint64_t))(*(void *)v146 + 912))(v148);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v148, &demangling cache variable for type metadata for SpeakableString?);
  v151 = v232;
  id v152 = INCallRecord.refinedCallDurationAsDouble.getter();
  LOBYTE(v148) = v153;
  type metadata accessor for PhoneCallMetrics();
  if (v148) {
    uint64_t v154 = 0;
  }
  else {
    uint64_t v154 = (uint64_t)v152;
  }
  uint64_t v155 = PhoneCallMetrics.__allocating_init(timeToEstablish:duration:)(0, 0, v154, 0);
  uint64_t v156 = (*(uint64_t (**)(uint64_t))(*(void *)v150 + 928))(v155);
  swift_release();
  swift_release();
  char v157 = INCallRecord.refinedUnseenAsBool.getter();
  uint64_t v158 = (*(uint64_t (**)(void))(*(void *)v156 + 944))(v157 & 1);
  swift_release();
  id v159 = [v151 callCapability];
  uint64_t v160 = (uint64_t)v213;
  if (!v159)
  {
    uint64_t v162 = (uint64_t)v212;
    uint64_t v164 = (uint64_t)v211;
    goto LABEL_130;
  }
  uint64_t v161 = INCallCapabilityGetBackingType();
  uint64_t v162 = (uint64_t)v212;
  if (v161 == 2)
  {
    v163 = @"VIDEO_CALL";
  }
  else
  {
    if (v161 != 1)
    {
      v163 = +[NSString stringWithFormat:@"(unknown: %i)", v161];
      goto LABEL_129;
    }
    v163 = @"AUDIO_CALL";
  }
  v165 = v163;
LABEL_129:
  v166 = v163;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v164 = (uint64_t)v211;
LABEL_130:
  SpeakableString.init(serializedValue:)();
  uint64_t v167 = v230;
  __swift_storeEnumTagSinglePayload(v164, 0, 1, v230);
  uint64_t v168 = (*(uint64_t (**)(uint64_t))(*(void *)v158 + 952))(v164);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v164, &demangling cache variable for type metadata for SpeakableString?);
  id v169 = INCallRecord.refinedNumberOfCallsAsInt.getter();
  if (v170) {
    id v169 = 0;
  }
  uint64_t v171 = specialized Double.init<A>(exactly:)((uint64_t)v169);
  uint64_t v173 = (*(uint64_t (**)(uint64_t, void))(*(void *)v168 + 968))(v171, v172 & 1);
  swift_release();
  uint64_t v174 = v220;
  SpeakableString.init(print:speak:)();
  __swift_storeEnumTagSinglePayload(v174, 0, 1, v167);
  outlined init with copy of SpeakableString?((uint64_t)v221, v160);
  App.appIdentifier.getter();
  if (v175)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    __swift_storeEnumTagSinglePayload(v162, 0, 1, v167);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v162, 1, 1, v167);
  }
  char v176 = v223 & 1;
  type metadata accessor for PhoneCallProvider(0);
  uint64_t v177 = PhoneCallProvider.__allocating_init(preferredCallProvider:providerName:providerBundleId:)(v220, v160, v162);
  uint64_t v178 = (*(uint64_t (**)(uint64_t))(*(void *)v173 + 976))(v177);
  swift_release();
  swift_release();
  v179 = v232;
  char IsCallerIDBlockedAs = INCallRecord.refinedIsCallerIDBlockedAsBool.getter();
  uint64_t v181 = (*(uint64_t (**)(void))(*(void *)v178 + 992))(IsCallerIDBlockedAs & 1);
  swift_release();
  uint64_t v182 = (uint64_t)v224;
  v147(v224, v226, v167);
  __swift_storeEnumTagSinglePayload(v182, 0, 1, v167);
  uint64_t v183 = (*(uint64_t (**)(uint64_t))(*(void *)v181 + 1016))(v182);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v182, &demangling cache variable for type metadata for SpeakableString?);
  v236 = (void (*)(uint64_t, char *, uint64_t))v147;
  uint64_t v184 = SpeakableString.print.getter();
  static CallRecordViewUtils.generatedDisplayTextColor(callRecordType:forCallHistoryDisplay:)(v184, v185);
  swift_bridgeObjectRelease();
  uint64_t v186 = (*(uint64_t (**)(uint64_t))(*(void *)v183 + 1032))(v182);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v182, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v187 = SpeakableString.print.getter();
  static CallRecordViewUtils.generatedDisplaySymbolIcon(callRecordType:forCallHistoryDisplay:)(v187, v188);
  swift_bridgeObjectRelease();
  uint64_t v189 = (*(uint64_t (**)(uint64_t))(*(void *)v186 + 1048))(v182);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v182, &demangling cache variable for type metadata for SpeakableString?);
  static Device.current.getter();
  static CallRecordViewUtils.generatedSelectedAction(callRecord:forCallHistoryDisplay:deviceState:)(v179, v176, v237, v182);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v237);
  uint64_t v190 = (*(uint64_t (**)(uint64_t))(*(void *)v189 + 1080))(v182);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v182, &demangling cache variable for type metadata for SpeakableString?);
  static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)(v176, v182);
  uint64_t v191 = (*(uint64_t (**)(uint64_t))(*(void *)v190 + 1096))(v182);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v182, &demangling cache variable for type metadata for SpeakableString?);
  static CallRecordViewUtils.generatedActionForOpeningCallRecord(callRecord:forCallHistoryDisplay:)(v176, v182);
  uint64_t v192 = (*(uint64_t (**)(uint64_t))(*(void *)v191 + 1112))(v182);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v182, &demangling cache variable for type metadata for SpeakableString?);
  v236(v182, v227, v167);
  __swift_storeEnumTagSinglePayload(v182, 0, 1, v167);
  uint64_t v193 = (*(uint64_t (**)(uint64_t))(*(void *)v192 + 1128))(v182);
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v182, &demangling cache variable for type metadata for SpeakableString?);
  id v194 = INCallRecord.refinedCallDurationAsDouble.getter();
  uint64_t v196 = (*(uint64_t (**)(id, void))(*(void *)v193 + 1168))(v194, v195 & 1);
  swift_release();
  unint64_t v197 = v231;
  uint64_t v198 = (*(uint64_t (**)(unint64_t))(*(void *)v196 + 1144))(v231);
  swift_release();
  v199 = specialized Sequence.compactMap<A>(_:)(v197);
  swift_bridgeObjectRelease();
  uint64_t v200 = (*(uint64_t (**)(void *))(*(void *)v198 + 1152))(v199);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v201 = (*(uint64_t (**)(void *))(*(void *)v200 + 1160))(v234);
  swift_release();
  swift_bridgeObjectRelease();
  if (v223)
  {
    type metadata accessor for PhoneCallRecord(0);
    swift_allocObject();
    swift_retain();
    PhoneCallRecord.init(builder:)();
    type metadata accessor for SearchCallHistoryCATs();
    static CATOption.defaultMode.getter();
    CATWrapper.__allocating_init(options:globals:)();
    uint64_t v202 = v208;
    static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATs:callRecord:)(v208);
    uint64_t v203 = (uint64_t)v209;
    (*(void (**)(uint64_t))(*(void *)v201 + 1000))(v202);
    swift_release();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v202, &demangling cache variable for type metadata for SpeakableString?);
    static CallRecordViewUtils.generatedDisplayCallDetail(searchCallHistoryCATs:callRecord:)(v203);
    (*(void (**)(uint64_t))(*(void *)v201 + 1064))(v203);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v203, &demangling cache variable for type metadata for SpeakableString?);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  outlined destroy of CallRecordDisplayTextComponents(v239);
  v204 = v228;
  ((void (*)(char *, uint64_t))v228)(v227, v167);
  ((void (*)(char *, uint64_t))v204)(v226, v167);
  ((void (*)(char *, uint64_t))v204)(v225, v167);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v221, &demangling cache variable for type metadata for SpeakableString?);
  return v201;
}

unint64_t lazy protocol witness table accessor for type PhoneCallRecord and conformance PhoneCallRecord()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord)
  {
    type metadata accessor for PhoneCallRecord(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallRecord.Options()
{
  return &type metadata for PhoneCallRecord.Options;
}

uint64_t OUTLINED_FUNCTION_1_95()
{
  return 0;
}

PhoneCallFlowDelegatePlugin::PhoneCallCommonCATPatternsIdentifiers_optional __swiftcall PhoneCallCommonCATPatternsIdentifiers.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallCommonCATPatternsIdentifiers.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallCommonCATPatternsIdentifiers_promptCancelled;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallCommonCATPatternsIdentifiers_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t PhoneCallCommonCATPatternsIdentifiers.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD00000000000001FLL;
  }
  else {
    return 0xD000000000000028;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallCommonCATPatternsIdentifiers(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallCommonCATPatternsIdentifiers()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallCommonCATPatternsIdentifiers()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallCommonCATPatternsIdentifiers(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneCallCommonCATPatternsIdentifiers_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCommonCATPatternsIdentifiers@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallCommonCATPatternsIdentifiers_optional *a2@<X8>)
{
  result.value = PhoneCallCommonCATPatternsIdentifiers.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallCommonCATPatternsIdentifiers@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PhoneCallCommonCATPatternsIdentifiers.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallCommonCATPatternsExecutor.phoneFeaturesUnavailable()()
{
  double v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallCommonCATPatternsExecutor.phoneFeaturesUnavailable();
  return v3(0xD000000000000028, 0x800000000048C850, _swiftEmptyArrayStorage);
}

uint64_t PhoneCallCommonCATPatternsExecutor.promptCancelled()()
{
  double v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallCommonCATPatternsExecutor.promptCancelled();
  return v3(0xD00000000000001FLL, 0x800000000048C880, _swiftEmptyArrayStorage);
}

uint64_t PhoneCallCommonCATPatternsExecutor.promptCancelled()(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

unint64_t lazy protocol witness table accessor for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers);
  }
  return result;
}

uint64_t protocol witness for PhoneCallCommonCATPatternsExecuting.phoneFeaturesUnavailable() in conformance PhoneCallCommonCATPatternsExecutor()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**v0 + class metadata base offset for PhoneCallCommonCATPatternsExecutor)
                         + **(int **)(**v0 + class metadata base offset for PhoneCallCommonCATPatternsExecutor));
  Swift::String v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *Swift::String v2 = v1;
  v2[1] = PhoneCallCommonCATPatternsExecutor.phoneFeaturesUnavailable();
  return v4();
}

uint64_t protocol witness for PhoneCallCommonCATPatternsExecuting.promptCancelled() in conformance PhoneCallCommonCATPatternsExecutor()
{
  Swift::String v2 = *(int **)(class metadata base offset for PhoneCallCommonCATPatternsExecutor + **v0 + 8);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  Swift::Int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *Swift::Int v3 = v1;
  v3[1] = PhoneCallCommonCATPatternsExecutor.phoneFeaturesUnavailable();
  return v5();
}

unsigned char *storeEnumTagSinglePayload for PhoneCallCommonCATPatternsIdentifiers(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x37BE78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallCommonCATPatternsIdentifiers()
{
  return &type metadata for PhoneCallCommonCATPatternsIdentifiers;
}

uint64_t type metadata completion function for PhoneCallCommonCATPatternsExecutor()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for PhoneCallCommonCATPatternsExecutor()
{
  return type metadata accessor for PhoneCallCommonCATPatternsExecutor();
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.__allocating_init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  VoiceOnlyEmergencyConfirmationFlow.init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)(a1, a2, a3, a4);
  return v8;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.state.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 80) = a1;
  return result;
}

uint64_t (*VoiceOnlyEmergencyConfirmationFlow.state.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

void VoiceOnlyEmergencyConfirmationFlow.promptResponse.didset()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)int v3 = 136315138;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v4 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v1, v2, "#VoiceOnlyEmergencyConfirmationFlow promptResponse: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.promptResponse.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 81);
}

void VoiceOnlyEmergencyConfirmationFlow.promptResponse.setter(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 81) = a1;
  VoiceOnlyEmergencyConfirmationFlow.promptResponse.didset();
}

void (*VoiceOnlyEmergencyConfirmationFlow.promptResponse.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_7_19();
  return VoiceOnlyEmergencyConfirmationFlow.promptResponse.modify;
}

void VoiceOnlyEmergencyConfirmationFlow.promptResponse.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    VoiceOnlyEmergencyConfirmationFlow.promptResponse.didset();
  }
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.State.description.getter(unsigned __int8 a1)
{
  int v1 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x46676E6974696177;
    }
    else {
      uint64_t v2 = 0x6365527475706E69;
    }
    if (v1 == 1) {
      unint64_t v3 = 0xEF7475706E49726FLL;
    }
    else {
      unint64_t v3 = 0xED00006465766965;
    }
  }
  else
  {
    unint64_t v3 = 0xEB0000000064657ALL;
    uint64_t v2 = OUTLINED_FUNCTION_20_42();
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return 46;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.State.rawValue.getter(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_20_42();
  }
  if (a1 == 1) {
    return 0x46676E6974696177;
  }
  return 0x6365527475706E69;
}

PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional __swiftcall VoiceOnlyEmergencyConfirmationFlow.State.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VoiceOnlyEmergencyConfirmationFlow.State.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VoiceOnlyEmergencyConfirmationFlow.State(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance VoiceOnlyEmergencyConfirmationFlow.State()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoiceOnlyEmergencyConfirmationFlow.State(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance VoiceOnlyEmergencyConfirmationFlow.State()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VoiceOnlyEmergencyConfirmationFlow.State@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional *a2@<X8>)
{
  result.value = VoiceOnlyEmergencyConfirmationFlow.State.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance VoiceOnlyEmergencyConfirmationFlow.State@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = VoiceOnlyEmergencyConfirmationFlow.State.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VoiceOnlyEmergencyConfirmationFlow.State()
{
  return VoiceOnlyEmergencyConfirmationFlow.State.description.getter(*v0);
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  Swift::String v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  __chkstk_darwin(v4 - 8);
  uint64_t v54 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v47 - v13;
  OUTLINED_FUNCTION_22();
  uint64_t v50 = *(uint64_t (**)(void))(v15 + 152);
  char v16 = v50();
  if (v16 != 5)
  {
    if (PhoneCallConfirmation.rawValue.getter(v16) == 7562617 && v17 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_7;
      }
    }
    uint64_t v26 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v20 = v12;
  uint64_t v21 = v2[5];
  uint64_t v22 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v21);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 224);
  uint64_t v24 = v22;
  uint64_t v12 = v20;
  v23(v21, v24);
  OUTLINED_FUNCTION_23();
  LOBYTE(v21) = (*(uint64_t (**)(uint64_t))(v25 + 120))(1);
  swift_release();
  uint64_t v26 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
  if (v21) {
    uint64_t v26 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
  }
LABEL_12:
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v14, *v26, v6);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v53 = v14;
  v52(v12, v14, v6);
  swift_retain_n();
  uint64_t v28 = Logger.logObject.getter();
  uint64_t v51 = v12;
  uint64_t v29 = v28;
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  int v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v49 = a1;
    uint64_t v33 = v32;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v56 = v48;
    *(_DWORD *)uint64_t v33 = 136315394;
    LOBYTE(v55) = v50();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    _s11SiriKitFlow20ConfirmationResponseOACs23CustomStringConvertibleAAWlTm_0(&lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse, 255, (void (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
    LODWORD(v50) = v31;
    uint64_t v36 = v51;
    uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v8 + 8);
    v39(v36, v6);
    _os_log_impl(&dword_0, v29, (os_log_type_t)v50, "#VoiceOnlyEmergencyConfirmationFlow promptResponse=%s produced confirmationResponse=%s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    a1 = v49;
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v8 + 8);
    v39(v51, v6);
  }

  uint64_t v41 = v53;
  uint64_t v40 = (uint64_t)v54;
  v52(v54, v53, v6);
  __swift_storeEnumTagSinglePayload(v40, 0, 1, v6);
  uint64_t v42 = (void *)v2[7];
  type metadata accessor for INStartCallIntent();
  id v43 = v42;
  ConfirmIntentAnswer.init(confirmationResponse:intent:)();
  v39(v41, v6);
  uint64_t v44 = enum case for PromptResult.answered<A>(_:);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
  OUTLINED_FUNCTION_10();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 104))(a1, v44);
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(unsigned char *)(v5 + 81) = 5;
  outlined init with copy of SignalProviding(a1, v5 + 16);
  *(unsigned char *)(v5 + 80) = 0;
  *(void *)(v5 + 56) = a2;
  *(void *)(v5 + 64) = a3;
  *(void *)(v5 + 72) = a4;
  uint64_t v9 = *(void *)(v5 + 40);
  uint64_t v10 = *(void *)(v5 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), v9);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 224);
  id v12 = a2;
  swift_retain();
  swift_retain();
  v11(v9, v10);
  OUTLINED_FUNCTION_23();
  (*(void (**)(void))(v13 + 128))();

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.on(input:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v98 = a1;
  uint64_t v3 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v99 = (char *)&v93 - v10;
  uint64_t v11 = type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  char v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22();
  int v18 = (*(unsigned __int8 (**)(void))(v17 + 128))();
  if (v18)
  {
    if (v18 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    OUTLINED_FUNCTION_20_42();
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
    int v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_55;
    }
    uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v33 = 0;
    goto LABEL_54;
  }
LABEL_6:
  v95 = v9;
  uint64_t v96 = v5;
  uint64_t v97 = v3;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v98, v11);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v93 = v21;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v100 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v94 = v1;
    _s11SiriKitFlow20ConfirmationResponseOACs23CustomStringConvertibleAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, 255, (void (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    v106[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v100);
    uint64_t v2 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = OUTLINED_FUNCTION_25_38();
    v29(v28);
    _os_log_impl(&dword_0, v22, v23, "#VoiceOnlyEmergencyConfirmationFlow got input: %s", v25, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    uint64_t v35 = OUTLINED_FUNCTION_25_38();
    v36(v35);
  }

  uint64_t v37 = v99;
  Input.parse.getter();
  uint64_t v39 = v96;
  uint64_t v38 = v97;
  int v40 = (*(uint64_t (**)(char *, uint64_t))(v96 + 88))(v37, v97);
  if (v40 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v41 = OUTLINED_FUNCTION_2_111((void *)(v2 + 16));
    v42(v41);
    OUTLINED_FUNCTION_30_31();
    uint64_t v43 = OUTLINED_FUNCTION_27_37();
    v44(v43);
    swift_release();
    uint64_t v45 = *(void (**)(void))(v39 + 8);
    OUTLINED_FUNCTION_21_41();
    v45();
    outlined init with copy of PhoneCallNLIntent?((uint64_t)v106, (uint64_t)&v100);
    if (v102)
    {
      uint64_t v46 = OUTLINED_FUNCTION_7_79();
      int v48 = v47(v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v100);
      if (v48 != 5)
      {
        OUTLINED_FUNCTION_10_61();
        goto LABEL_19;
      }
    }
    else
    {
      _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)&v100, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }
    uint64_t v58 = OUTLINED_FUNCTION_2_111((void *)(v2 + 16));
    v59(v58);
    OUTLINED_FUNCTION_23();
    uint64_t v61 = (*(uint64_t (**)(void))(v60 + 128))();
    swift_release();
    specialized BidirectionalCollection.last.getter(v61, (uint64_t)&v100);
    swift_bridgeObjectRelease();
    if (v103 == 1)
    {
      uint64_t v62 = (uint64_t *)&demangling cache variable for type metadata for TransformationResult?;
      uint64_t v63 = &v100;
    }
    else
    {
      outlined init with copy of PhoneCallNLIntent?((uint64_t)&v101, (uint64_t)v104);
      outlined destroy of TransformationResult((uint64_t)&v100);
      if (v105)
      {
        BOOL v64 = OUTLINED_FUNCTION_14_45();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
        outlined init with copy of PhoneCallNLIntent?((uint64_t)v106, (uint64_t)&v100);
        if (v64)
        {
          outlined init with copy of PhoneCallNLIntent?((uint64_t)&v100, (uint64_t)v104);
          if (v105)
          {
            BOOL v65 = OUTLINED_FUNCTION_14_45();
            _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)&v100, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
            if (!v65) {
              goto LABEL_49;
            }
            uint64_t v66 = Logger.logObject.getter();
            os_log_type_t v67 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v66, v67))
            {
              *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
              OUTLINED_FUNCTION_24_1(&dword_0, v68, v69, "#VoiceOnlyEmergencyConfirmationFlow NLv3IntentOnly emergency reprompt with emergency call parse");
              OUTLINED_FUNCTION_6();
            }

            __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
            uint64_t v70 = OUTLINED_FUNCTION_12_55();
            v71(v70);
            OUTLINED_FUNCTION_23();
            (*(void (**)(void))(v72 + 112))();
            swift_release();
            OUTLINED_FUNCTION_10_61();
LABEL_19:
            OUTLINED_FUNCTION_19_39();
            v49();
LABEL_49:
            _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v106, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            ((void (*)(char *, uint64_t))v45)(v99, v38);
            goto LABEL_50;
          }
          _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)&v100, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          uint64_t v86 = (uint64_t *)v104;
LABEL_48:
          _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v86, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          goto LABEL_49;
        }
LABEL_47:
        uint64_t v86 = &v100;
        goto LABEL_48;
      }
      uint64_t v62 = &demangling cache variable for type metadata for PhoneCallNLIntent?;
      uint64_t v63 = (uint64_t *)v104;
    }
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v63, v62);
    outlined init with copy of PhoneCallNLIntent?((uint64_t)v106, (uint64_t)&v100);
    goto LABEL_47;
  }
  int v50 = v40;
  if (v40 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v39 + 96))(v99, v38);
    swift_unknownObjectRelease();
LABEL_24:
    uint64_t v51 = OUTLINED_FUNCTION_2_111((void *)(v2 + 16));
    v52(v51);
    OUTLINED_FUNCTION_30_31();
    uint64_t v53 = OUTLINED_FUNCTION_27_37();
    v54(v53);
    swift_release();
    OUTLINED_FUNCTION_21_41();
    v55();
    if (v102)
    {
      uint64_t v56 = OUTLINED_FUNCTION_7_79();
      v57(v56);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v100);
    }
    else
    {
      _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)&v100, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }
    OUTLINED_FUNCTION_10_61();
LABEL_38:
    OUTLINED_FUNCTION_19_39();
    v73();
    goto LABEL_50;
  }
  if (v40 == enum case for Parse.uso(_:))
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v99, v38);
    goto LABEL_24;
  }
  int v74 = enum case for Parse.empty(_:);
  uint64_t v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.debug.getter();
  BOOL v77 = os_log_type_enabled(v75, v76);
  if (v50 == v74)
  {
    if (v77)
    {
      uint64_t v78 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl(&dword_0, v75, v76, "#VoiceOnlyEmergencyConfirmationFlow received an empty parse", v78, 2u);
      OUTLINED_FUNCTION_6();
    }

    __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
    uint64_t v79 = OUTLINED_FUNCTION_12_55();
    v80(v79);
    OUTLINED_FUNCTION_23();
    (*(void (**)(void))(v81 + 112))();
    swift_release();
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v82, v83))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_24_1(&dword_0, v84, v85, "#VoiceOnlyEmergencyConfirmationFlow emergency call reprompt. Handling request.");
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_10_61();
    goto LABEL_38;
  }
  if (v77)
  {
    uint64_t v90 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v90 = 0;
    _os_log_impl(&dword_0, v75, v76, "#VoiceOnlyEmergencyConfirmationFlow input received is of wrong type", v90, 2u);
    OUTLINED_FUNCTION_6();
  }

  OUTLINED_FUNCTION_10_61();
  OUTLINED_FUNCTION_19_39();
  v91();
  OUTLINED_FUNCTION_21_41();
  v92();
LABEL_50:
  OUTLINED_FUNCTION_10_61();
  if ((*(unsigned __int8 (**)(void))(v87 + 152))() <= 2u)
  {
    OUTLINED_FUNCTION_10_61();
    (*(void (**)(uint64_t))(v88 + 136))(2);
    return 1;
  }
  int v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v33 = 0;
    uint64_t v34 = "#StartCallConfirmIntentStrategy not emergency call reprompt";
LABEL_54:
    _os_log_impl(&dword_0, v31, v32, v34, v33, 2u);
    OUTLINED_FUNCTION_6();
  }
LABEL_55:

  return 0;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.execute(completion:)()
{
  type metadata accessor for VoiceOnlyEmergencyConfirmationFlow();
  _s11SiriKitFlow20ConfirmationResponseOACs23CustomStringConvertibleAAWlTm_0(&lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow and conformance VoiceOnlyEmergencyConfirmationFlow, v0, (void (*)(uint64_t))type metadata accessor for VoiceOnlyEmergencyConfirmationFlow);
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v1;
  return _swift_task_switch(VoiceOnlyEmergencyConfirmationFlow.execute(), 0, 0);
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v36 = v0;
  uint64_t v1 = v0 + 16;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 112);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    unsigned __int8 v8 = (*(uint64_t (**)(void))(*(void *)v6 + 128))();
    uint64_t v9 = VoiceOnlyEmergencyConfirmationFlow.State.description.getter(v8);
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v3, v4, "#VoiceOnlyEmergencyConfirmationFlow executing with state = %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    uint64_t v1 = v0 + 16;
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }
  int v11 = (*(unsigned __int8 (**)(void))(**(void **)(v0 + 112) + 128))();
  if (v11)
  {
    if (v11 == 1)
    {
      static ExecuteResponse.ongoing(requireInput:)();
      goto LABEL_29;
    }
    char v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      int v18 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)int v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "#VoiceOnlyEmergencyConfirmationFlow returning .complete()", v18, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v19 = *(void *)(v0 + 112);

    uint64_t v20 = *(uint64_t (**)(void))(*(void *)v19 + 152);
    uint64_t v21 = v20();
    if (v21 != 5)
    {
      if (PhoneCallConfirmation.rawValue.getter(v21) == 0x6C65636E6163 && v22 == 0xE600000000000000)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v21 = swift_bridgeObjectRelease();
      if (v24)
      {
LABEL_27:
        __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 112) + 16), *(void *)(*(void *)(v0 + 112) + 40));
        uint64_t v29 = OUTLINED_FUNCTION_8_85();
        v30(v29);
        OUTLINED_FUNCTION_16_54();
        OUTLINED_FUNCTION_10();
        OUTLINED_FUNCTION_46_14();
        v31();
        type metadata accessor for SimpleOutputFlowAsync();
        swift_allocObject();
        swift_retain();
        uint64_t v32 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
        __swift_destroy_boxed_opaque_existential_1(v1);
        *(void *)(v0 + 16) = v32;
        static ExecuteResponse.complete<A>(next:)();
        goto LABEL_28;
      }
    }
    char v25 = ((uint64_t (*)(uint64_t))v20)(v21);
    if (v25 == 5)
    {
LABEL_19:
      static ExecuteResponse.complete()();
      goto LABEL_29;
    }
    if (PhoneCallConfirmation.rawValue.getter(v25) != 28526 || v26 != 0xE200000000000000)
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0) {
        goto LABEL_19;
      }
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 112) + 16), *(void *)(*(void *)(v0 + 112) + 40));
  uint64_t v12 = OUTLINED_FUNCTION_8_85();
  v13(v12);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_46_14();
  v14();
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  swift_retain();
  uint64_t v15 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1(v1);
  *(void *)(v0 + 16) = v15;
  swift_retain();
  static ExecuteResponse.ongoing<A>(next:childCompletion:)();
  swift_release();
LABEL_28:
  swift_release();
LABEL_29:
  OUTLINED_FUNCTION_47_0();
  return v33();
}

uint64_t closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  type metadata accessor for DialogPhase();
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0, 0);
}

uint64_t closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)(class metadata base offset for StartCallCATsSimple + **(void **)(*(void *)(v0 + 64) + 64) + 528);
  os_log_type_t v4 = (uint64_t (*)(void))(*v1 + *(int *)*v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v8();
  }
  else
  {
    *(void *)(v5 + 112) = v3;
    return _swift_task_switch(closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0, 0);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0, 0);
}

uint64_t closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_18_39();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v13 = OUTLINED_FUNCTION_6_84();
  v14(v13);
  __swift_project_boxed_opaque_existential_1(v10, v11[5]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_16_5(v15, (__n128)xmmword_46A030);
  v11[15] = v27;
  id v16 = v12;
  os_log_type_t v17 = (void *)swift_task_alloc();
  v11[16] = (uint64_t)v17;
  *os_log_type_t v17 = v11;
  v17[1] = closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute();
  uint64_t v18 = OUTLINED_FUNCTION_13_53();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
}

uint64_t closure #1 in closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OutputGenerationManifest.canUseServerTTS.setter();
  uint64_t v3 = OutputGenerationManifest.listenAfterSpeaking.setter();
  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()(v3);
  specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter();
  uint64_t v4 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v4);
  return OutputGenerationManifest.nlContextUpdate.setter();
}

uint64_t closure #2 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_0, v4, v5, "#VoiceOnlyEmergencyConfirmationFlow offered to call emergency services. Updating state to .waitingForInput", v6, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 136))(1);
}

uint64_t closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  type metadata accessor for DialogPhase();
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0, 0);
}

uint64_t closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(int **)(class metadata base offset for PhoneCallCommonCATsSimple
               + **(void **)(*(void *)(v0 + 64) + 72)
               + 48);
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v8();
  }
  else
  {
    *(void *)(v5 + 112) = v3;
    return _swift_task_switch(closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0, 0);
  }
}

uint64_t closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_18_39();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v13 = OUTLINED_FUNCTION_6_84();
  v14(v13);
  __swift_project_boxed_opaque_existential_1(v10, v11[5]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_16_5(v15, (__n128)xmmword_46A030);
  v11[15] = v27;
  id v16 = v12;
  os_log_type_t v17 = (void *)swift_task_alloc();
  v11[16] = (uint64_t)v17;
  *os_log_type_t v17 = v11;
  v17[1] = closure #1 in CommunalDeviceEmergencyFlow.execute();
  uint64_t v18 = OUTLINED_FUNCTION_13_53();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_release();
  swift_release();
  return v0;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.__deallocating_deinit()
{
  VoiceOnlyEmergencyConfirmationFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance VoiceOnlyEmergencyConfirmationFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance VoiceOnlyEmergencyConfirmationFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

uint64_t protocol witness for Flow.execute() in conformance VoiceOnlyEmergencyConfirmationFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 208) + **(int **)(**(void **)v1 + 208));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance VoiceOnlyEmergencyConfirmationFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t type metadata accessor for VoiceOnlyEmergencyConfirmationFlow()
{
  return self;
}

uint64_t _s11SiriKitFlow20ConfirmationResponseOACs23CustomStringConvertibleAAWlTm_0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()(v3, v0);
}

uint64_t partial apply for closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()(v3, v0);
}

uint64_t partial apply for closure #2 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1)
{
  return closure #2 in VoiceOnlyEmergencyConfirmationFlow.execute()(a1, v1);
}

unint64_t lazy protocol witness table accessor for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State()
{
  unint64_t result = lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State;
  if (!lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State);
  }
  return result;
}

uint64_t base witness table accessor for Flow in VoiceOnlyEmergencyConfirmationFlow(uint64_t a1, uint64_t a2)
{
  return _s11SiriKitFlow20ConfirmationResponseOACs23CustomStringConvertibleAAWlTm_0(&lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow and conformance VoiceOnlyEmergencyConfirmationFlow, a2, (void (*)(uint64_t))type metadata accessor for VoiceOnlyEmergencyConfirmationFlow);
}

uint64_t sub_37EB60@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 128))();
  *a1 = result;
  return result;
}

uint64_t sub_37EBA8()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 136))(*v1);
}

uint64_t sub_37EBEC@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 152))();
  *a1 = result;
  return result;
}

uint64_t sub_37EC34()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 160))(*v1);
}

unsigned char *storeEnumTagSinglePayload for VoiceOnlyEmergencyConfirmationFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x37ED44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceOnlyEmergencyConfirmationFlow.State()
{
  return &type metadata for VoiceOnlyEmergencyConfirmationFlow.State;
}

uint64_t OUTLINED_FUNCTION_2_111(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_6_84()
{
  uint64_t v1 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_7_79()
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 216), v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_85()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_53()
{
  return *(void *)(v0 + 56);
}

BOOL OUTLINED_FUNCTION_14_45()
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 168), v0);
  return PhoneCallNLIntent.isEmergencyCall()();
}

uint64_t *OUTLINED_FUNCTION_16_54()
{
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[7];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v0[11] = v3;
  v0[12] = v4;
  return __swift_allocate_boxed_opaque_existential_1(v2);
}

uint64_t OUTLINED_FUNCTION_18_39()
{
  return static DialogPhase.confirmation.getter();
}

uint64_t OUTLINED_FUNCTION_20_42()
{
  return 0x696C616974696E69;
}

uint64_t OUTLINED_FUNCTION_30_31()
{
  return Input.parse.getter();
}

PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationHistory __swiftcall ForcedAppDisambiguationHistory.init()()
{
  uint64_t v0 = type metadata accessor for Date();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5 - v4;
  static Date.distantPast.getter();
  Date.timeIntervalSince1970.getter();
  double v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  uint64_t v9 = _swiftEmptyArrayStorage;
  PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationPhase v10 = PhoneCallFlowDelegatePlugin_ForcedAppDisambiguationPhase_showedForcedAppDisambiguation;
  double v11 = v8;
  result.timestamp = v11;
  result.apps._rawValue = v9;
  result.phase = v10;
  return result;
}

double ForcedAppDisambiguationHistory.init(phase:date:apps:)(uint64_t a1, uint64_t a2)
{
  Date.timeIntervalSince1970.getter();
  double v4 = v3;
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  return v4;
}

PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationPhase_optional __swiftcall ForcedAppDisambiguationPhase.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ForcedAppDisambiguationPhase.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_ForcedAppDisambiguationPhase_loggedForcedAppDisambiguation;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_ForcedAppDisambiguationPhase_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t ForcedAppDisambiguationPhase.rawValue.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ForcedAppDisambiguationPhase(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ForcedAppDisambiguationPhase()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ForcedAppDisambiguationPhase()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ForcedAppDisambiguationPhase(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationPhase_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ForcedAppDisambiguationPhase@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationPhase_optional *a2@<X8>)
{
  result.value = ForcedAppDisambiguationPhase.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ForcedAppDisambiguationPhase@<X0>(void *a1@<X8>)
{
  unint64_t result = ForcedAppDisambiguationPhase.rawValue.getter();
  *a1 = 0xD00000000000001DLL;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ForcedAppDisambiguationPhase()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for Decodable.init(from:) in conformance ForcedAppDisambiguationPhase()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t ForcedAppDisambiguationHistory.description.getter(char a1)
{
  _StringGuts.grow(_:)(28);
  v2._uint64_t countAndFlagsBits = 0x3A65736168700A7BLL;
  v2._object = (void *)0xE900000000000020;
  String.append(_:)(v2);
  if (a1) {
    uint64_t v3 = (void *)0x8000000000490B70;
  }
  else {
    uint64_t v3 = (void *)0x8000000000490B50;
  }
  v4._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x7473656D69740A2CLL;
  v5._object = (void *)0xED0000203A706D61;
  String.append(_:)(v5);
  Double.write<A>(to:)();
  v6._uint64_t countAndFlagsBits = 32010;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  return 0;
}

uint64_t static ForcedAppDisambiguationHistory.__derived_struct_equals(_:_:)(double a1, double a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if ((specialized == infix<A>(_:_:)() & 1) == 0 || a1 != a2) {
    return 0;
  }

  return specialized static Array<A>.== infix(_:_:)(a4, a6);
}

uint64_t ForcedAppDisambiguationHistory.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6573616870 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1936748641 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t ForcedAppDisambiguationHistory.CodingKeys.stringValue.getter(char a1)
{
  if (!a1) {
    return 0x6573616870;
  }
  if (a1 == 1) {
    return 0x6D617473656D6974;
  }
  return 1936748641;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ForcedAppDisambiguationHistory.CodingKeys()
{
  return ForcedAppDisambiguationHistory.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ForcedAppDisambiguationHistory.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = ForcedAppDisambiguationHistory.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ForcedAppDisambiguationHistory.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ForcedAppDisambiguationHistory.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ForcedAppDisambiguationHistory.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ForcedAppDisambiguationHistory.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    KeyedEncodingContainer.encode(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

double ForcedAppDisambiguationHistory.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ForcedAppDisambiguationHistory.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  KeyedDecodingContainer.decode(_:forKey:)();
  double v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v6 = OUTLINED_FUNCTION_11_63();
  v7(v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

uint64_t protocol witness for SiriPhoneDefaultsCodable.init() in conformance ForcedAppDisambiguationHistory@<X0>(uint64_t a1@<X8>)
{
  PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationHistory v3 = ForcedAppDisambiguationHistory.init()();
  *(unsigned char *)a1 = 0;
  *(Swift::Double *)(a1 + 8) = v3.timestamp;
  *(void *)(a1 + 16) = _swiftEmptyArrayStorage;
  LOBYTE(result) = v3.phase;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ForcedAppDisambiguationHistory()
{
  return ForcedAppDisambiguationHistory.description.getter(*v0);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ForcedAppDisambiguationHistory(double *a1, double *a2)
{
  return static ForcedAppDisambiguationHistory.__derived_struct_equals(_:_:)(a1[1], a2[1], *(unsigned __int8 *)a1, *((void **)a1 + 2), *(unsigned __int8 *)a2, *((void **)a2 + 2));
}

void protocol witness for Decodable.init(from:) in conformance ForcedAppDisambiguationHistory(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = ForcedAppDisambiguationHistory.init(from:)(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = v4 & 1;
    *(double *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = v5;
  }
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ForcedAppDisambiguationHistory(void *a1)
{
  return ForcedAppDisambiguationHistory.encode(to:)(a1);
}

unint64_t lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase()
{
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for ForcedAppDisambiguationHistory(void *a1)
{
  a1[1] = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  a1[2] = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  unint64_t result = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for ForcedAppDisambiguationHistory(uint64_t a1)
{
  *(void *)(a1 + 8) = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  unint64_t result = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  *(void *)(a1 + 16) = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForcedAppDisambiguationPhase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x37FE50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForcedAppDisambiguationPhase()
{
  return &type metadata for ForcedAppDisambiguationPhase;
}

uint64_t initializeBufferWithCopyOfBuffer for ForcedAppDisambiguationHistory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ForcedAppDisambiguationHistory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ForcedAppDisambiguationHistory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ForcedAppDisambiguationHistory()
{
  return &type metadata for ForcedAppDisambiguationHistory;
}

unsigned char *storeEnumTagSinglePayload for ForcedAppDisambiguationHistory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x38002CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ForcedAppDisambiguationHistory.CodingKeys()
{
  return &unk_5693C8;
}

void IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_9_1();
  __chkstk_darwin(v9);
  double v11 = (uint64_t *)&v12[-v10];
  v13[0] = v8;
  type metadata accessor for RCHFlowResult();
  type metadata accessor for AnyValueFlow();
  swift_getWitnessTable();
  uint64_t *v11 = Flow.eraseToAnyValueFlow()();
  swift_storeEnumTagMultiPayload();
  outlined init with copy of SignalProviding(v4, (uint64_t)v13);
  outlined init with copy of SignalProviding(v2, (uint64_t)v12);
  (*(void (**)(uint64_t *, uint64_t, void *, unsigned char *))(v0 + 304))(v11, v6, v13, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2);
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_26_1();
}

void IncomingCallFlow.__allocating_init(state:app:strategy:sharedGlobals:)()
{
}

void IncomingCallFlow.init(state:app:strategy:sharedGlobals:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *v0;
  uint64_t v10 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_9_1();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v18 - v14;
  outlined init with copy of SignalProviding(v4, (uint64_t)v0 + *(void *)(v9 + 288));
  OUTLINED_FUNCTION_22();
  *(uint64_t *)((char *)v0 + *(void *)(v16 + 296)) = v6;
  OUTLINED_FUNCTION_12();
  v17();
  outlined init with copy of SignalProviding(v2, (uint64_t)v19);
  PhoneFlow.init(state:sharedGlobals:)((uint64_t)v15, v19);
  __swift_destroy_boxed_opaque_existential_1(v2);
  __swift_destroy_boxed_opaque_existential_1(v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v10);
  OUTLINED_FUNCTION_26_1();
}

uint64_t IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_9_1();
  __chkstk_darwin(v7);
  uint64_t v9 = &v12[-v8];
  swift_storeEnumTagMultiPayload();
  outlined init with copy of SignalProviding(a2, (uint64_t)v13);
  outlined init with copy of SignalProviding(a3, (uint64_t)v12);
  uint64_t v10 = (*(uint64_t (**)(unsigned char *, uint64_t, unsigned char *, unsigned char *))(v3 + 304))(v9, a1, v13, v12);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v10;
}

void IncomingCallFlow.on(input:)()
{
  void (*v28)(uint64_t *__return_ptr, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v5;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v35 - v10;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  swift_retain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = OUTLINED_FUNCTION_5_22();
    uint64_t v38 = v4;
    os_log_type_t v17 = (uint8_t *)v16;
    uint64_t v18 = OUTLINED_FUNCTION_14_0();
    uint64_t v36 = v3;
    *(_DWORD *)os_log_type_t v17 = 136315138;
    v40[0] = v18;
    v35[1] = v17 + 4;
    (*(void (**)(void))(*v0 + 128))();
    uint64_t v19 = PhoneCallFlowState.description.getter(v38);
    v35[2] = v13;
    uint64_t v20 = v9;
    unint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v38);
    uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v22, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    uint64_t v9 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v15, "#IncomingCallFlow: State = %s", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v3 = v36;
    OUTLINED_FUNCTION_6();
    uint64_t v4 = v38;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    uint64_t v23 = swift_release();
  }
  (*(void (**)(uint64_t))(*v1 + 128))(v23);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    dispatch thunk of AnyValueFlow.on(input:)();
    swift_release();
  }
  else if (EnumCaseMultiPayload == 5)
  {
    uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState))
                 + 48);
    type metadata accessor for Input();
    OUTLINED_FUNCTION_15();
    (*(void (**)(char *, uint64_t))(v26 + 16))(v11, v3);
    uint64_t v27 = *v1;
    *(void *)&v11[v25] = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 296));
    uint64_t v28 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v27 + 152);
    uint64_t v29 = swift_retain();
    v28(v40, v29);
    uint64_t v30 = v41;
    int v31 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))(*v1 + 136))(v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  else
  {
    uint64_t v32 = Logger.logObject.getter();
    uint64_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "#IncomingCallFlow: Flow is not in a state that will expect input.", v34, 2u);
      OUTLINED_FUNCTION_6();
    }

    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v4);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t IncomingCallFlow.execute()(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = *v1;
  v2[14] = *v1;
  uint64_t v4 = type metadata accessor for Input();
  v2[15] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v2[16] = v5;
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = *(void *)(v3 + 256);
  v2[21] = *(void *)(v3 + 264);
  uint64_t v6 = type metadata accessor for PhoneCallFlowState();
  v2[22] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v2[23] = v7;
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return _swift_task_switch(IncomingCallFlow.execute(), 0, 0);
}

uint64_t IncomingCallFlow.execute()()
{
  void (*v36)(long long *__return_ptr);
  id v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  void (*v45)(long long *__return_ptr, uint64_t);
  uint64_t v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t (*v61)(void);
  long long v63;
  os_log_type_t type;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  os_log_t log;
  uint64_t v70;
  os_log_type_t v71;
  long long v72[2];
  uint64_t v73;
  uint64_t v74;

  uint64_t v73 = v0;
  OUTLINED_FUNCTION_22();
  uint64_t v2 = *(void (**)(void))(v1 + 128);
  v2();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v3 = *(void *)(v0 + 216);
      uint64_t v4 = *(void *)(v0 + 152);
      uint64_t v6 = *(void *)(v0 + 120);
      uint64_t v5 = *(void *)(v0 + 128);
      OUTLINED_FUNCTION_12();
      v7();
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      uint64_t v70 = *(void *)(v3 + *(int *)(v8 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_15_54();
      v10();
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v11, v12))
      {
        type = v12;
        uint64_t v13 = *(void *)(v0 + 144);
        uint64_t v14 = *(void *)(v0 + 120);
        uint64_t v15 = *(void *)(v0 + 128);
        uint64_t v66 = v8;
        uint64_t v16 = swift_slowAlloc();
        *(void *)&v72[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 136315394;
        lazy protocol witness table accessor for type Input and conformance Input();
        uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 80) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, (uint64_t *)v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v68(v13, v14);
        *(_WORD *)(v16 + 12) = 2080;
        swift_getMetatypeMetadata();
        uint64_t v19 = _typeName(_:qualified:)();
        *(void *)(v0 + 88) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, (uint64_t *)v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v11, type, "#IncomingCallFlow: Converting input: %s to intent of type %s.", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        uint64_t v8 = v66;
        OUTLINED_FUNCTION_6();
      }
      else
      {
        uint64_t v68 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 128) + 8);
        v68(*(void *)(v0 + 144), *(void *)(v0 + 120));
      }

      int v40 = *(void *)(v0 + 136);
      uint64_t v42 = *(void *)(v0 + 112);
      uint64_t v41 = *(void *)(v0 + 120);
      uint64_t v43 = *(void *)(v0 + 104);
      BOOL v65 = *(void *)(v0 + 152);
      os_log_type_t v67 = *(void *)(v0 + 216) + *(int *)(v8 + 64);
      uint64_t v63 = *(_OWORD *)(v0 + 160);
      type metadata accessor for IntentConversionFlow();
      OUTLINED_FUNCTION_15_54();
      v44();
      uint64_t v45 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)v43 + 152);
      uint64_t v46 = swift_retain();
      v45(v72, v46);
      *(void *)(v0 + 72) = IntentConversionFlow.__allocating_init(input:app:sharedGlobals:)(v40, v70, v72);
      uint64_t v47 = implicit closure #3 in IncomingCallFlow.execute()();
      uint64_t v49 = v48;
      int v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v63;
      *(void *)(v50 + 32) = *(void *)(v42 + 272);
      *(void *)(v50 + 40) = *(void *)(v42 + 280);
      *(void *)(v50 + 48) = v47;
      *(void *)(v50 + 56) = v49;
      swift_getWitnessTable();
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      swift_release();
      swift_release();
      v68(v65, v41);
      __swift_destroy_boxed_opaque_existential_1(v67);
      goto LABEL_24;
    case 2u:
      OUTLINED_FUNCTION_12();
      v21();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_0, v23, v24, "#IncomingCallFlow: Executing first RCHFlow. IncomingCallFlow will stay on the stack.", v25, 2u);
        OUTLINED_FUNCTION_6();
      }

      implicit closure #5 in IncomingCallFlow.execute()();
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      goto LABEL_13;
    case 3u:
      uint64_t v26 = *(void *)(v0 + 200);
      OUTLINED_FUNCTION_12();
      v27();
      uint64_t v28 = type metadata accessor for RCHFlowResult();
      uint64_t v29 = *(void *)(v28 - 8);
      int v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 88))(v26, v28);
      uint64_t v31 = *(void *)(v0 + 200);
      if (v30 == enum case for RCHFlowResult.complete<A, B>(_:))
      {
        uint64_t v32 = *(void *)(v0 + 104);
        (*(void (**)(uint64_t, uint64_t))(v29 + 96))(v31, v28);
        uint64_t v33 = *(void **)(v31 + 8);
        log = *(os_log_t *)(v31 + 16);
        type metadata accessor for IncomingCallFollowUpFlow();
        OUTLINED_FUNCTION_22();
        outlined init with copy of SignalProviding(v32 + *(void *)(v34 + 288), v0 + 16);
        OUTLINED_FUNCTION_22();
        uint64_t v36 = *(void (**)(long long *__return_ptr))(v35 + 152);
        swift_retain();
        uint64_t v37 = v33;
        uint64_t v38 = log;
        v36(v72);
        *(void *)(v0 + 64) = IncomingCallFollowUpFlow.__allocating_init(app:intent:intentResponse:strategy:sharedGlobals:)();
        swift_getWitnessTable();
        static ExecuteResponse.complete<A>(next:)();
        swift_release();

LABEL_13:
        swift_release();
      }
      else
      {
        (*(void (**)(void, uint64_t))(v29 + 8))(*(void *)(v0 + 200), v28);
LABEL_18:
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v51 = type metadata accessor for Logger();
        __swift_project_value_buffer(v51, (uint64_t)static Logger.siriPhone);
        swift_retain();
        uint64_t v52 = Logger.logObject.getter();
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = *(void *)(v0 + 184);
          uint64_t v55 = *(void *)(v0 + 192);
          uint64_t v56 = *(void *)(v0 + 176);
          id v71 = v53;
          uint64_t v57 = (uint8_t *)OUTLINED_FUNCTION_5_22();
          *(void *)&v72[0] = OUTLINED_FUNCTION_14_0();
          *(_DWORD *)uint64_t v57 = 136315138;
          v2();
          uint64_t v58 = PhoneCallFlowState.description.getter(v56);
          uint64_t v60 = v59;
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v56);
          *(void *)(v0 + 56) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, (uint64_t *)v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_release();
          _os_log_impl(&dword_0, v52, v71, "#IncomingCallFlow: encountered unexpected state %s", v57, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
          swift_release();
        }
LABEL_23:
        static ExecuteResponse.complete()();
      }
LABEL_24:
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 176));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v61 = *(uint64_t (**)(void))(v0 + 8);
      return v61();
    case 6u:
      OUTLINED_FUNCTION_22();
      (*(void (**)(void))(v39 + 232))();
      goto LABEL_24;
    case 7u:
      goto LABEL_23;
    default:
      goto LABEL_18;
  }
}

uint64_t (*implicit closure #3 in IncomingCallFlow.execute()())()
{
  return partial apply for implicit closure #4 in implicit closure #3 in IncomingCallFlow.execute();
}

uint64_t (*implicit closure #5 in IncomingCallFlow.execute()())()
{
  return partial apply for implicit closure #6 in implicit closure #5 in HangUpCallFlow.execute();
}

void IncomingCallFlow.onRCHFlowComplete(exitValue:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_1_96();
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 264);
  uint64_t v6 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_9_1();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for RCHFlowResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_9_1();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v48 - v12;
  uint64_t v14 = *(void (**)(void))(v10 + 16);
  uint64_t v56 = v1;
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_15_54();
  v16();
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v13, v8) == enum case for RCHFlowResult.complete<A, B>(_:))
  {
    uint64_t v55 = v6;
    (*(void (**)(char *, uint64_t))(v10 + 96))(v13, v8);
    uint64_t v17 = (void *)*((void *)v13 + 1);
    id v18 = (id)*((void *)v13 + 2);
    swift_release();

    OUTLINED_FUNCTION_19();
    if ((*(uint64_t (**)(id))(v19 + 240))(v18))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
      unint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_0, v21, v22, "#IncomingCallFlow: First RCHFlow complete with intent response indicating we should dismiss Siri -> will dismiss Siri", v23, 2u);
        OUTLINED_FUNCTION_6();

        goto LABEL_28;
      }

LABEL_27:
      goto LABEL_28;
    }
    uint64_t v24 = *(void *)(v3 + 280);
    uint64_t v53 = *(uint64_t (**)(uint64_t))(v24 + 24);
    uint64_t v54 = v24;
    char v25 = v53(v5);
    if (FollowUpOfferType.rawValue.getter(v25) == 1162760014 && v26 == 0xE400000000000000)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v36 = type metadata accessor for Logger();
        __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
        id v18 = v18;
        uint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.debug.getter();
        int v39 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          os_log_t v52 = v37;
          int v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v51 = OUTLINED_FUNCTION_14_0();
          uint64_t v57 = v51;
          int v50 = v39;
          *(_DWORD *)int v40 = 136315138;
          v48[1] = v40 + 4;
          uint64_t v49 = v40;
          char v41 = ((uint64_t (*)(uint64_t, uint64_t))v53)(v5, v54);
          unint64_t v42 = FollowUpOfferType.rawValue.getter(v41);
          uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, &v57);
          OUTLINED_FUNCTION_8_44(v44);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          os_log_t v45 = v52;
          _os_log_impl(&dword_0, v52, (os_log_type_t)v50, "#IncomingCallFlow: First RCHFlow complete with followUpAction=%s.", v49, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
        }
        OUTLINED_FUNCTION_15_54();
        v15();
        swift_storeEnumTagMultiPayload();
        OUTLINED_FUNCTION_19();
        uint64_t v46 = OUTLINED_FUNCTION_11_65();
        v47(v46);
        goto LABEL_27;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
  int v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_16_37(&dword_0, v32, v33, "#IncomingCallFlow: First RCHFlow complete with no followUpAction.");
    OUTLINED_FUNCTION_6();
  }

  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_19();
  uint64_t v34 = OUTLINED_FUNCTION_11_65();
  v35(v34);
LABEL_28:
  OUTLINED_FUNCTION_26_1();
}

void IncomingCallFlow.processIntentConversionResult(exitValue:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_1_96();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t v14 = *(void (**)(uint64_t))(v3 + 128);
  v14(v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v4);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_5_22();
      uint64_t v24 = OUTLINED_FUNCTION_14_0();
      v35[1] = v24;
      uint64_t v36 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      v35[0] = v23 + 4;
      v14(v24);
      swift_getWitnessTable();
      uint64_t v25 = String.init<A>(describing:)();
      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v36);
      OUTLINED_FUNCTION_8_44(v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v21, v22, "Unexpected state, stopping: %s", v23, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    goto LABEL_14;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13[*(int *)(v15 + 64)]);
  type metadata accessor for Input();
  OUTLINED_FUNCTION_15();
  (*(void (**)(char *))(v16 + 8))(v13);
  if (!v1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_16_37(&dword_0, v31, v32, "Could not convert Intent, stopping");
      OUTLINED_FUNCTION_6();
    }

LABEL_14:
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_19();
    uint64_t v33 = OUTLINED_FUNCTION_11_65();
    v34(v33);
    goto LABEL_15;
  }
  id v17 = v1;
  *uint64_t v10 = IncomingCallFlow.makeRCHFlow(intent:)();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_19();
  uint64_t v19 = *(void (**)(uint64_t *))(v18 + 136);
  swift_retain();
  v19(v10);

  swift_release();
LABEL_15:
  OUTLINED_FUNCTION_26_1();
}

uint64_t IncomingCallFlow.makeRCHFlow(intent:)()
{
  OUTLINED_FUNCTION_1_96();
  (*(void (**)(void *__return_ptr))(v0 + 152))(v4);
  static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)();
  uint64_t v2 = v1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

void IncomingCallFlow.__allocating_init(sharedGlobals:)()
{
}

void IncomingCallFlow.init(sharedGlobals:)()
{
}

void IncomingCallFlow.__allocating_init(state:sharedGlobals:)()
{
}

void IncomingCallFlow.init(state:sharedGlobals:)()
{
}

uint64_t IncomingCallFlow.__ivar_destroyer()
{
  OUTLINED_FUNCTION_22();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(v1 + 288));
  OUTLINED_FUNCTION_22();

  return swift_release();
}

uint64_t IncomingCallFlow.deinit()
{
  uint64_t v0 = PhoneFlow.deinit();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 288));
  OUTLINED_FUNCTION_19();
  swift_release();
  return v0;
}

uint64_t IncomingCallFlow.__deallocating_deinit()
{
  IncomingCallFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_382200()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed A?) -> ()(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 48))(*a1);
}

uint64_t type metadata completion function for IncomingCallFlow()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for IncomingCallFlow()
{
  return swift_getGenericMetadata();
}

uint64_t OUTLINED_FUNCTION_11_65()
{
  return v0;
}

uint64_t AceOutput.copyAndPrepend(commands:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v0 - 8);
  AceOutput.commands.getter();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  AceOutput.flowActivity.getter();
  AceOutput.nlContextUpdate.getter();
  return AceOutput.init(commands:flowActivity:nlContextUpdate:)();
}

uint64_t AceOutput.withContextCommandsFirst()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = AceOutput.commands.getter();
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    unint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v5[0] = v2;
  specialized MutableCollection<>.sort(by:)(v5);
  swift_bridgeObjectRelease();
  AceOutput.flowActivity.getter();
  AceOutput.nlContextUpdate.getter();
  return AceOutput.init(commands:flowActivity:nlContextUpdate:)();
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void *a1, unint64_t a2, unint64_t a3, void *a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a1;
  uint64_t v7 = a2 - (void)a1;
  uint64_t v8 = (uint64_t)(a2 - (void)a1) / 8;
  uint64_t v9 = a3 - a2;
  uint64_t v10 = (uint64_t)(a3 - a2) / 8;
  if (v8 >= v10)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - a2) / 8, a4);
    uint64_t v14 = (void *)a2;
    unint64_t v12 = (unint64_t)&v4[v10];
    if ((unint64_t)v6 >= a2 || v9 < 8) {
      goto LABEL_59;
    }
    id v17 = (void *)(a3 - 8);
    while (1)
    {
      uint64_t v18 = (void *)(v12 - 8);
      unint64_t v32 = (unint64_t)v14;
      uint64_t v19 = v14 - 1;
      self;
      if (swift_dynamicCastObjCClass())
      {
        unint64_t v20 = 0;
      }
      else
      {
        self;
        unint64_t v20 = swift_dynamicCastObjCClass() ? 1 : 2;
      }
      unint64_t v21 = v17 + 1;
      self;
      if (swift_dynamicCastObjCClass()) {
        break;
      }
      self;
      if (swift_dynamicCastObjCClass())
      {
        if (v20) {
          break;
        }
      }
      else if (v20 > 1)
      {
        break;
      }
      BOOL v24 = v21 != (void *)v32 || (unint64_t)v17 >= v32;
      uint64_t v18 = v19;
      uint64_t v14 = v19;
      if (!v24) {
        goto LABEL_25;
      }
LABEL_24:
      *id v17 = *v18;
LABEL_25:
      --v17;
      if (v14 <= v6 || v12 <= (unint64_t)v4) {
        goto LABEL_59;
      }
    }
    BOOL v22 = v21 != (void *)v12 || (unint64_t)v17 >= v12;
    v12 -= 8;
    uint64_t v14 = (void *)v32;
    if (!v22) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (uint64_t)(a2 - (void)a1) / 8, a4);
  unint64_t v12 = (unint64_t)&v4[v8];
  if (a2 < a3 && v7 >= 8)
  {
    uint64_t v25 = (void *)a2;
    while (1)
    {
      unint64_t v26 = v25;
      self;
      if (swift_dynamicCastObjCClass())
      {
        unint64_t v27 = 0;
      }
      else
      {
        self;
        if (swift_dynamicCastObjCClass()) {
          unint64_t v27 = 1;
        }
        else {
          unint64_t v27 = 2;
        }
      }
      self;
      if (!swift_dynamicCastObjCClass())
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          if (!v27) {
            goto LABEL_57;
          }
        }
        else if (v27 <= 1)
        {
LABEL_57:
          uint64_t v28 = v26;
          uint64_t v25 = v26 + 1;
          if (v6 == v26) {
            goto LABEL_47;
          }
LABEL_46:
          *uint64_t v6 = *v28;
          goto LABEL_47;
        }
      }
      uint64_t v28 = v4;
      BOOL v29 = v6 == v4++;
      uint64_t v25 = v26;
      if (!v29) {
        goto LABEL_46;
      }
LABEL_47:
      ++v6;
      if ((unint64_t)v4 >= v12 || (unint64_t)v25 >= a3)
      {
        uint64_t v14 = v6;
        goto LABEL_59;
      }
    }
  }
  uint64_t v14 = v6;
LABEL_59:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (uint64_t)(v12 - (void)v4) / 8, v14);
  return 1;
}

uint64_t AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (App.isFirstParty()()) {
    return 0;
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a2, a3, a4);
  }
}

uint64_t AppInfoBuilder.build(_:)()
{
  return static SAAppInfoFactory.createAppInfo(app:)();
}

uint64_t protocol witness for AppInfoBuilding.build(_:) in conformance AppInfoBuilder()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 80))();
}

uint64_t IdiomSensitiveViewBuilding.makeViews(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(&_swiftEmptyArrayStorage, a1, a2, a3, a4);
}

uint64_t IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  static Signpost.begin(_:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  __int16 v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v9;
  *(void *)(v16 + 24) = v11;
  *(void *)(v16 + 32) = v13;
  *(unsigned char *)(v16 + 40) = v15;
  *(unsigned char *)(v16 + 41) = HIBYTE(v15) & 1;
  *(void *)(v16 + 48) = a2;
  *(void *)(v16 + 56) = a3;
  id v17 = *(void (**)(uint64_t))(a5 + 16);
  swift_retain();
  swift_retain();
  uint64_t v18 = OUTLINED_FUNCTION_2_113();
  v17(v18);
  __swift_project_boxed_opaque_existential_1(v72, v73);
  uint64_t v19 = OUTLINED_FUNCTION_0_66();
  v20(v19);
  OUTLINED_FUNCTION_5_72(v71);
  LOBYTE(a3) = dispatch thunk of DeviceState.isWatch.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  if (a3)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    BOOL v22 = (void *)Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_48_2(v23))
    {
      BOOL v24 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_11_30(v24);
      OUTLINED_FUNCTION_3_98(&dword_0, v25, v26, "#IdiomSensitiveViewBuilder: Building views for Watch");
      OUTLINED_FUNCTION_4_60();
    }
  }
  else
  {
    uint64_t v27 = OUTLINED_FUNCTION_2_113();
    v17(v27);
    __swift_project_boxed_opaque_existential_1(v72, v73);
    uint64_t v28 = OUTLINED_FUNCTION_0_66();
    v29(v28);
    OUTLINED_FUNCTION_5_72(v71);
    char v30 = dispatch thunk of DeviceState.isMac.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    if (v30)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
      BOOL v22 = (void *)Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_48_2(v32))
      {
        uint64_t v33 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_11_30(v33);
        OUTLINED_FUNCTION_3_98(&dword_0, v34, v35, "#IdiomSensitiveViewBuilder: Building views for Mac");
        OUTLINED_FUNCTION_4_60();
      }
    }
    else
    {
      uint64_t v36 = OUTLINED_FUNCTION_2_113();
      v17(v36);
      __swift_project_boxed_opaque_existential_1(v72, v73);
      uint64_t v37 = OUTLINED_FUNCTION_0_66();
      v38(v37);
      OUTLINED_FUNCTION_5_72(v71);
      char v39 = dispatch thunk of DeviceState.isCarPlay.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
      if (v39)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v40 = type metadata accessor for Logger();
        __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
        BOOL v22 = (void *)Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.info.getter();
        if (OUTLINED_FUNCTION_48_2(v41))
        {
          unint64_t v42 = (_WORD *)OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_11_30(v42);
          OUTLINED_FUNCTION_3_98(&dword_0, v43, v44, "#IdiomSensitiveViewBuilder: Building views for CarPlay");
          OUTLINED_FUNCTION_4_60();
        }
      }
      else
      {
        uint64_t v45 = OUTLINED_FUNCTION_2_113();
        v17(v45);
        __swift_project_boxed_opaque_existential_1(v72, v73);
        uint64_t v46 = OUTLINED_FUNCTION_0_66();
        v47(v46);
        OUTLINED_FUNCTION_5_72(v71);
        char v48 = dispatch thunk of DeviceState.isAppleTV.getter();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
        if (v48)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v49 = type metadata accessor for Logger();
          __swift_project_value_buffer(v49, (uint64_t)static Logger.siriPhone);
          BOOL v22 = (void *)Logger.logObject.getter();
          os_log_type_t v50 = static os_log_type_t.info.getter();
          if (OUTLINED_FUNCTION_48_2(v50))
          {
            uint64_t v51 = (_WORD *)OUTLINED_FUNCTION_7_2();
            OUTLINED_FUNCTION_11_30(v51);
            OUTLINED_FUNCTION_3_98(&dword_0, v52, v53, "#IdiomSensitiveViewBuilder: Building views for AppleTV");
            OUTLINED_FUNCTION_4_60();
          }
        }
        else
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v54 = type metadata accessor for Logger();
          __swift_project_value_buffer(v54, (uint64_t)static Logger.siriPhone);
          BOOL v22 = (void *)Logger.logObject.getter();
          os_log_type_t v55 = static os_log_type_t.info.getter();
          if (OUTLINED_FUNCTION_48_2(v55))
          {
            uint64_t v56 = (_WORD *)OUTLINED_FUNCTION_7_2();
            OUTLINED_FUNCTION_11_30(v56);
            OUTLINED_FUNCTION_3_98(&dword_0, v57, v58, "#IdiomSensitiveViewBuilder: Building views for IOS");
            OUTLINED_FUNCTION_4_60();
          }
        }
      }
    }
  }

  uint64_t v66 = OUTLINED_FUNCTION_1_97(v59, (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:), v60, v61, v62, v63, v64, v65, v69, a1);
  v67(v66);
  swift_release();
  return swift_release();
}

uint64_t protocol witness for IdiomSensitiveViewBuilding.makeViews(utteranceViews:_:) in conformance DefaultDisambiguationBuilder<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(a1, a2, a3, a4, (uint64_t)&protocol witness table for DefaultDisambiguationBuilder<A>);
}

uint64_t protocol witness for IdiomSensitiveViewBuilding.makeViews(utteranceViews:_:) in conformance ConfirmationViewBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(a1, a2, a3, a4, (uint64_t)&protocol witness table for ConfirmationViewBuilder);
}

uint64_t IdiomSensitiveViewBuilding.makeViews()(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = IdiomSensitiveViewBuilding.makeViews();
  return IdiomSensitiveViewBuilding.makeViews(utteranceViews:)((uint64_t)_swiftEmptyArrayStorage, a1, a2);
}

uint64_t IdiomSensitiveViewBuilding.makeViews()(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(IdiomSensitiveViewBuilding.makeViews(utteranceViews:), 0, 0);
}

uint64_t IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = *(void *)(v12 + 48);
  uint64_t v14 = *(void *)(v12 + 24);
  uint64_t v15 = swift_task_alloc();
  *(void *)(v12 + 56) = v15;
  *(_OWORD *)(v15 + 16) = *(_OWORD *)(v12 + 32);
  *(void *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v14;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v12 + 64) = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v16 = v12;
  v16[1] = IdiomSensitiveViewBuilding.makeViews(utteranceViews:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v12 + 16, 0, 0, 0xD00000000000001ALL, 0x800000000049BC40, partial apply for closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:), v15, v17, a9, a10, a11, a12);
}

uint64_t IdiomSensitiveViewBuilding.makeViews(utteranceViews:)()
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = IdiomSensitiveViewBuilding.makeViews(utteranceViews:);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = IdiomSensitiveViewBuilding.makeViews(utteranceViews:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(a5 + 8))(a3, partial apply for closure #1 in closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse(), v13, a4, a5);
  return swift_release();
}

void closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void, void))
{
  char v8 = a2;
  uint64_t v9 = a1;
  if (a2)
  {
    swift_errorRetain();
    uint64_t v10 = (void *)v9;
  }
  else
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      outlined consume of Result<[SAAceView], Error>(v9, 0);
    }
    else
    {
      uint64_t v11 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    }
    uint64_t v10 = _swiftEmptyArrayStorage;
    if (v11)
    {
      char v39 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v11 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v36 = a7;
      uint64_t v12 = 0;
      a7 = (void (*)(void, void))(v9 & 0xC000000000000001);
      uint64_t v10 = v39;
      unint64_t v13 = 0xE300000000000000;
      while (v11 != v12)
      {
        if (a7) {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v14 = *(id *)(v9 + 8 * v12 + 32);
        }
        uint64_t v15 = v14;
        uint64_t v16 = outlined bridged method (pb) of @objc AceObject.encodedClassName()(v14);
        if (v17) {
          uint64_t v18 = v16;
        }
        else {
          uint64_t v18 = 0x416E776F6E6B6E55;
        }
        if (v17) {
          unint64_t v19 = v17;
        }
        else {
          unint64_t v19 = 0xEE00776569566563;
        }
        uint64_t v20 = outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(v15);
        if (v21) {
          uint64_t v22 = v20;
        }
        else {
          uint64_t v22 = 7104878;
        }
        if (v21) {
          os_log_type_t v23 = v21;
        }
        else {
          os_log_type_t v23 = (void *)0xE300000000000000;
        }
        v24._uint64_t countAndFlagsBits = 0x3D64496563615BLL;
        v24._object = (void *)0xE700000000000000;
        String.append(_:)(v24);
        v25._uint64_t countAndFlagsBits = v22;
        v25._object = v23;
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        v26._uint64_t countAndFlagsBits = 93;
        v26._object = (void *)0xE100000000000000;
        String.append(_:)(v26);

        unint64_t v27 = v19;
        char v39 = v10;
        unint64_t v28 = v10[2];
        if (v28 >= v10[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v10 = v39;
        }
        ++v12;
        v10[2] = v28 + 1;
        BOOL v29 = &v10[2 * v28];
        v29[4] = v18;
        v29[5] = v27;
        uint64_t v9 = a1;
        if (v11 == v12)
        {
          a7 = v36;
          goto LABEL_28;
        }
      }
      __break(1u);
      goto LABEL_35;
    }
LABEL_28:
    char v8 = a2;
  }
  unint64_t v13 = v8 & 1;
  if (one-time initialization token for siriPhone != -1) {
LABEL_35:
  }
    swift_once();
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
  outlined copy of Result<[String], Error>((uint64_t)v10, v13);
  outlined copy of Result<[String], Error>((uint64_t)v10, v13);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    char v39 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315138;
    outlined copy of Result<[String], Error>((uint64_t)v10, v13);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<[String], Error>);
    uint64_t v34 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v9 = a1;
    swift_bridgeObjectRelease();
    outlined consume of Result<[SAAceView], Error>((uint64_t)v10, v13);
    outlined consume of Result<[SAAceView], Error>((uint64_t)v10, v13);
    _os_log_impl(&dword_0, v31, v32, "IdiomSensitiveViewBuilder: Built views: %s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined consume of Result<[SAAceView], Error>((uint64_t)v10, v13);
    outlined consume of Result<[SAAceView], Error>((uint64_t)v10, v13);
  }

  Signpost.OpenSignpost.end()();
  a7(v9, v13);
  outlined consume of Result<[SAAceView], Error>((uint64_t)v10, v13);
}

uint64_t sub_38418C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(uint64_t a1)
{
  return closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(a1, v1[4], v1[5], v1[2], v1[3]);
}

ValueMetadata *type metadata accessor for StartCallViewBuilders()
{
  return &type metadata for StartCallViewBuilders;
}

ValueMetadata *type metadata accessor for SCHViewBuilders()
{
  return &type metadata for SCHViewBuilders;
}

uint64_t sub_384200()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t outlined copy of Result<[String], Error>(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t OUTLINED_FUNCTION_0_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_97(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t OUTLINED_FUNCTION_2_113()
{
  return v0;
}

void OUTLINED_FUNCTION_3_98(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

uint64_t InferenceSource.rawValue.getter()
{
  return 0x747369486C6C6163;
}

BOOL InferenceSource.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of InferenceSource.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t lazy protocol witness table accessor for type InferenceSource and conformance InferenceSource()
{
  unint64_t result = lazy protocol witness table cache variable for type InferenceSource and conformance InferenceSource;
  if (!lazy protocol witness table cache variable for type InferenceSource and conformance InferenceSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InferenceSource and conformance InferenceSource);
  }
  return result;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance InferenceSource@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = InferenceSource.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance InferenceSource(void *a1@<X8>)
{
  *a1 = 0x747369486C6C6163;
  a1[1] = 0xEB0000000079726FLL;
}

unsigned char *storeEnumTagSinglePayload for InferenceSource(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *BOOL result = a2;
        return result;
      case 2:
        *(_WORD *)BOOL result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)BOOL result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *BOOL result = 0;
      break;
    case 2:
      *(_WORD *)BOOL result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3844D8);
    case 4:
      *(_DWORD *)BOOL result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceSource()
{
  return &type metadata for InferenceSource;
}

uint64_t static StartCallViewBuilders.makeFaceTimeSettingsViewBuilder(templatingService:sharedGlobals:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CATOption();
  __chkstk_darwin(v6 - 8);
  OUTLINED_FUNCTION_5_1();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  char v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "#StartCallViewBuilders Providing FaceTimeSettingsBuilder", v10, 2u);
    swift_slowDealloc();
  }

  outlined init with copy of SignalProviding(a2, (uint64_t)(a3 + 1));
  *a3 = a1;
  type metadata accessor for PhoneCallDisplayTextCATs();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t result = CATWrapper.__allocating_init(options:globals:)();
  a3[6] = result;
  return result;
}

uint64_t FaceTimeSettingsBuilder.init(templatingService:sharedGlobals:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CATOption();
  __chkstk_darwin(v6 - 8);
  OUTLINED_FUNCTION_5_1();
  *a3 = a1;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a3 + 1));
  type metadata accessor for PhoneCallDisplayTextCATs();
  static CATOption.defaultMode.getter();
  uint64_t result = CATWrapper.__allocating_init(options:globals:)();
  a3[6] = result;
  return result;
}

uint64_t FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)v3;
  char v8 = *v3;
  outlined init with copy of FaceTimeSettingsBuilder(v4, (uint64_t)v13);
  uint64_t v9 = swift_allocObject();
  long long v10 = v13[1];
  *(_OWORD *)(v9 + 16) = v13[0];
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = v13[2];
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 72) = a1;
  *(void *)(v9 + 80) = a2;
  *(void *)(v9 + 88) = a3;
  uint64_t v11 = *(void (**)(void *(*)(uint64_t), uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                        + *v8
                                                                        + 120);
  swift_bridgeObjectRetain();
  swift_retain();
  v11(partial apply for closure #1 in FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:), v9);
  return swift_release();
}

void *closure #1 in FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v7 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for TemplatingResult();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_4();
  unint64_t v19 = (uint64_t *)(v18 - v17);
  outlined init with copy of Result<TemplatingResult, Error>(a1, v18 - v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = *v19;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      Swift::String v24 = (uint8_t *)swift_slowAlloc();
      Swift::String v25 = (void *)swift_slowAlloc();
      *(_DWORD *)Swift::String v24 = 138412290;
      swift_errorRetain();
      v42[0] = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::String v25 = v42[0];
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v22, v23, "#FaceTimeSettingsBuilder failed to generate templating result for appSettings: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a4(v20, 1);
    swift_errorRelease();
    return (void *)swift_errorRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v12 + 32))(v15, v19, v11);
    id v26 = [objc_allocWithZone((Class)SAUIOpenLink) init];
    URL.init(string:)();
    uint64_t v27 = type metadata accessor for URL();
    BOOL v29 = 0;
    if (__swift_getEnumTagSinglePayload(v10, 1, v27) != 1)
    {
      URL._bridgeToObjectiveC()(v28);
      BOOL v29 = v30;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v10, v27);
    }
    [v26 setRef:v29];

    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAUIButton);
    uint64_t result = (void *)TemplatingResult.print.getter();
    if (result[2])
    {
      os_log_type_t v41 = a4;
      uint64_t v33 = result[4];
      uint64_t v32 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_46A030;
      *(void *)(v34 + 32) = v26;
      v42[0] = v34;
      specialized Array._endMutation()();
      id v35 = v26;
      id v36 = SAUIButton.init(text:commands:)(v33, v32, v42[0]);
      type metadata accessor for SiriKitAceViewBuilder();
      uint64_t v37 = a2 + 1;
      uint64_t v39 = a2[4];
      uint64_t v38 = a2[5];
      __swift_project_boxed_opaque_existential_1(v37, v39);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 8))(v42, v39, v38);
      dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      dispatch thunk of SiriKitAceViewBuilder.addButton(button:)();
      swift_release();
      dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)();
      swift_release();
      uint64_t v40 = dispatch thunk of SiriKitAceViewBuilder.build()();
      swift_release();
      v41(v40, 0);

      swift_bridgeObjectRelease();
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForWatch(utteranceViews:_:) in conformance FaceTimeSettingsBuilder()
{
  return FaceTimeSettingsBuilder.makeViewsForWatch(utteranceViews:_:)();
}

uint64_t sub_384DA4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t destroy for FaceTimeSettingsBuilder(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);

  return swift_release();
}

uint64_t initializeWithCopy for FaceTimeSettingsBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  return a1;
}

void *assignWithCopy for FaceTimeSettingsBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FaceTimeSettingsBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FaceTimeSettingsBuilder()
{
  return &type metadata for FaceTimeSettingsBuilder;
}

_UNKNOWN **sub_384FBC()
{
  return &protocol witness table for FaceTimeSettingsBuilder;
}

uint64_t Transformer<>.transformer.unsafeMutableAddressor()
{
  return INPersonCodable.transformer.unsafeMutableAddressor(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>, (uint64_t)static Transformer<>.transformer);
}

{
  return INPersonCodable.transformer.unsafeMutableAddressor(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<IncomingCallIntentResponse, Input>, (uint64_t)static Transformer<>.transformer);
}

{
  return INPersonCodable.transformer.unsafeMutableAddressor(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallAudioRoute?>, (uint64_t)static Transformer<>.transformer);
}

{
  return INPersonCodable.transformer.unsafeMutableAddressor(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<UsoTask_noVerb_common_PhoneNumber, UsoTask?>, (uint64_t)static Transformer<>.transformer);
}

uint64_t NLv4Transformer.__allocating_init(referenceResolver:featureManager:)(uint64_t a1)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v2);
  uint64_t v4 = OUTLINED_FUNCTION_28_11(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_51_19();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t UsoIdentifierAppBundleType.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0x746163696C707041;
  }
}

uint64_t UsoIdentifierNamespaceType.rawValue.getter(char a1)
{
  uint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
    case 6:
      uint64_t result = 0xD000000000000014;
      break;
    case 2:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      uint64_t result = 0x73746361746E6F43;
      break;
    case 4:
      uint64_t result = 0x64695F6D657469;
      break;
    case 5:
      uint64_t result = 0xD000000000000015;
      break;
    case 7:
      uint64_t result = 0x656D614E707061;
      break;
    case 8:
      uint64_t result = 0x6369746E616D6573;
      break;
    case 9:
      uint64_t result = 0xD000000000000016;
      break;
    case 10:
      uint64_t result = OUTLINED_FUNCTION_23_42();
      break;
    case 11:
      uint64_t result = 0x65746C615F727361;
      break;
    case 12:
      uint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

void specialized SiriPhoneContact.update(person:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v186 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v4 - 8);
  OUTLINED_FUNCTION_5_8();
  uint64_t v178 = v5;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_5_17();
  uint64_t v185 = v7;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_17();
  uint64_t v174 = v9;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_17();
  uint64_t v175 = v11;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_5_17();
  uint64_t v172 = v13;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_5_17();
  uint64_t v173 = v15;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_5_17();
  uint64_t v183 = v17;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_17();
  uint64_t v184 = v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_5_17();
  uint64_t v181 = v21;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v22);
  OUTLINED_FUNCTION_5_17();
  uint64_t v182 = v23;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v24);
  OUTLINED_FUNCTION_5_17();
  uint64_t v179 = v25;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_5_17();
  uint64_t v180 = v27;
  OUTLINED_FUNCTION_18_0();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v168 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v168 - v33;
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_46_11();
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v168 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  os_log_type_t v41 = (char *)&v168 - v40;
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v168 - v42;
  id v188 = v3;
  id v44 = [v3 nameComponents];
  if (v44)
  {
    uint64_t v45 = v44;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = type metadata accessor for PersonNameComponents();
    uint64_t v47 = (uint64_t)v41;
    uint64_t v48 = 0;
  }
  else
  {
    uint64_t v46 = type metadata accessor for PersonNameComponents();
    uint64_t v47 = (uint64_t)v41;
    uint64_t v48 = 1;
  }
  OUTLINED_FUNCTION_16_3(v47, v48);
  outlined init with take of AnnotatedApp?((uint64_t)v41, (uint64_t)v43, &demangling cache variable for type metadata for PersonNameComponents?);
  type metadata accessor for PersonNameComponents();
  int v49 = OUTLINED_FUNCTION_12_15((uint64_t)v43);
  id v50 = v188;
  uint64_t v187 = v46;
  if (v49)
  {
    outlined destroy of UUID?((uint64_t)v43, &demangling cache variable for type metadata for PersonNameComponents?);
    uint64_t v185 = 0;
    uint64_t v171 = 0;
    goto LABEL_25;
  }
  uint64_t v51 = PersonNameComponents.givenName.getter();
  unint64_t v53 = v52;
  outlined destroy of UUID?((uint64_t)v43, &demangling cache variable for type metadata for PersonNameComponents?);
  if (!v53) {
    goto LABEL_24;
  }
  uint64_t v54 = HIBYTE(v53) & 0xF;
  if ((v53 & 0x2000000000000000) == 0) {
    uint64_t v54 = v51 & 0xFFFFFFFFFFFFLL;
  }
  if (!v54) {
    goto LABEL_23;
  }
  uint64_t v177 = v53;
  id v55 = OUTLINED_FUNCTION_39_28();
  if (v55)
  {
    uint64_t v56 = v55;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v57 = 0;
  }
  else
  {
    uint64_t v57 = 1;
  }
  OUTLINED_FUNCTION_16_3(v1, v57);
  outlined init with take of AnnotatedApp?(v1, (uint64_t)v38, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_12_15((uint64_t)v38))
  {
    swift_bridgeObjectRelease();
    outlined destroy of UUID?((uint64_t)v38, &demangling cache variable for type metadata for PersonNameComponents?);
LABEL_24:
    uint64_t v185 = 0;
    uint64_t v171 = 0;
    goto LABEL_25;
  }
  uint64_t v58 = PersonNameComponents.familyName.getter();
  unint64_t v60 = v59;
  outlined destroy of UUID?((uint64_t)v38, &demangling cache variable for type metadata for PersonNameComponents?);
  if (!v60)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v61 = HIBYTE(v60) & 0xF;
  if ((v60 & 0x2000000000000000) == 0) {
    uint64_t v61 = v58 & 0xFFFFFFFFFFFFLL;
  }
  if (!v61)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v176 = v58;
  id v62 = OUTLINED_FUNCTION_39_28();
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = v178;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v65 = 0;
    uint64_t v66 = v185;
  }
  else
  {
    uint64_t v65 = 1;
    uint64_t v66 = v185;
    uint64_t v64 = v178;
  }
  OUTLINED_FUNCTION_16_3(v64, v65);
  outlined init with take of AnnotatedApp?(v64, v66, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_12_15(v66))
  {
    outlined destroy of UUID?(v66, &demangling cache variable for type metadata for PersonNameComponents?);
  }
  else
  {
    uint64_t v162 = PersonNameComponents.middleName.getter();
    unint64_t v164 = v163;
    outlined destroy of UUID?(v66, &demangling cache variable for type metadata for PersonNameComponents?);
    if (v164)
    {
      uint64_t v165 = HIBYTE(v164) & 0xF;
      if ((v164 & 0x2000000000000000) == 0) {
        uint64_t v165 = v162 & 0xFFFFFFFFFFFFLL;
      }
      if (v165)
      {
        uint64_t v193 = v51;
        uint64_t v194 = v177;
        v166._uint64_t countAndFlagsBits = 32;
        v166._object = (void *)0xE100000000000000;
        String.append(_:)(v166);
        v167._uint64_t countAndFlagsBits = v162;
        v167._object = (void *)v164;
        String.append(_:)(v167);
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v193 = v51;
  uint64_t v194 = v177;
LABEL_94:
  v160._uint64_t countAndFlagsBits = 32;
  v160._object = (void *)0xE100000000000000;
  String.append(_:)(v160);
  v161._uint64_t countAndFlagsBits = v176;
  v161._object = (void *)v60;
  String.append(_:)(v161);
  swift_bridgeObjectRelease();
  uint64_t v185 = v193;
  uint64_t v171 = v194;
LABEL_25:
  [v50 isMe];
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v67 + 320))();
  id v68 = [v50 contactIdentifier];
  if (v68)
  {
    uint64_t v69 = v68;
    uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v72 = v71;
  }
  else
  {
    uint64_t v70 = 0;
    uint64_t v72 = 0;
  }
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t, uint64_t))(v73 + 272))(v70, v72);
  id v74 = OUTLINED_FUNCTION_39_28();
  if (v74)
  {
    uint64_t v75 = v74;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v76 = 0;
  }
  else
  {
    uint64_t v76 = 1;
  }
  uint64_t v78 = v181;
  uint64_t v77 = v182;
  OUTLINED_FUNCTION_16_3((uint64_t)v31, v76);
  outlined init with take of AnnotatedApp?((uint64_t)v31, (uint64_t)v34, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_12_15((uint64_t)v34))
  {
    uint64_t v181 = 0;
    uint64_t v182 = 0;
  }
  else
  {
    uint64_t v79 = PersonNameComponents.givenName.getter();
    uint64_t v181 = v80;
    uint64_t v182 = v79;
  }
  uint64_t v81 = v180;
  outlined destroy of UUID?((uint64_t)v34, &demangling cache variable for type metadata for PersonNameComponents?);
  id v82 = OUTLINED_FUNCTION_39_28();
  if (v82)
  {
    os_log_type_t v83 = v82;
    uint64_t v84 = v179;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v85 = v84;
    uint64_t v86 = 0;
    uint64_t v87 = v184;
  }
  else
  {
    uint64_t v86 = 1;
    uint64_t v87 = v184;
    uint64_t v85 = v179;
  }
  OUTLINED_FUNCTION_16_3(v85, v86);
  outlined init with take of AnnotatedApp?(v85, v81, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_12_15(v81))
  {
    uint64_t v179 = 0;
    uint64_t v180 = 0;
  }
  else
  {
    uint64_t v88 = PersonNameComponents.middleName.getter();
    uint64_t v179 = v89;
    uint64_t v180 = v88;
  }
  outlined destroy of UUID?(v81, &demangling cache variable for type metadata for PersonNameComponents?);
  id v90 = OUTLINED_FUNCTION_39_28();
  if (v90)
  {
    v91 = v90;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v92 = 0;
  }
  else
  {
    uint64_t v92 = 1;
  }
  OUTLINED_FUNCTION_16_3(v78, v92);
  outlined init with take of AnnotatedApp?(v78, v77, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_12_15(v77))
  {
    uint64_t v93 = 0;
    uint64_t v94 = 0;
  }
  else
  {
    uint64_t v93 = PersonNameComponents.familyName.getter();
    uint64_t v94 = v95;
  }
  outlined destroy of UUID?(v77, &demangling cache variable for type metadata for PersonNameComponents?);
  id v96 = OUTLINED_FUNCTION_39_28();
  if (v96)
  {
    uint64_t v97 = v96;
    uint64_t v98 = v183;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v99 = 0;
  }
  else
  {
    uint64_t v99 = 1;
    uint64_t v98 = v183;
  }
  OUTLINED_FUNCTION_16_3(v98, v99);
  outlined init with take of AnnotatedApp?(v98, v87, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_12_15(v87))
  {
    uint64_t v100 = 0;
    uint64_t v101 = 0;
  }
  else
  {
    uint64_t v100 = PersonNameComponents.nickname.getter();
    uint64_t v101 = v102;
  }
  outlined destroy of UUID?(v87, &demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_2();
  (*(void (**)(void *__return_ptr))(v103 + 360))(v191);
  outlined init with take of AnnotatedApp?((uint64_t)v191, (uint64_t)&v193, &demangling cache variable for type metadata for PhoneCallPersonName?);
  outlined init with take of AnnotatedApp?((uint64_t)v191, (uint64_t)v192, &demangling cache variable for type metadata for PhoneCallPersonName?);
  uint64_t v177 = v94;
  uint64_t v178 = v93;
  uint64_t v183 = v100;
  uint64_t v176 = v101;
  if (v192[1] == 1)
  {
    uint64_t v105 = v174;
    uint64_t v104 = v175;
    uint64_t v106 = v171;
    uint64_t v107 = v172;
    uint64_t v108 = v173;
  }
  else
  {
    uint64_t v109 = v201;
    uint64_t v110 = v202;
    uint64_t v111 = v194;
    uint64_t v184 = v193;
    uint64_t v169 = v196;
    uint64_t v170 = v199;
    long long v168 = v203;
    swift_bridgeObjectRetain();
    *(void *)&long long v168 = v109;
    id v50 = v188;
    outlined consume of PhoneCallPersonName?(v184, v111);
    uint64_t v105 = v174;
    uint64_t v104 = v175;
    uint64_t v106 = v171;
    uint64_t v107 = v172;
    uint64_t v108 = v173;
    uint64_t v184 = v110;
    if (v110)
    {
      uint64_t v185 = v168;
      goto LABEL_57;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v184 = v106;
LABEL_57:
  id v112 = [v50 nameComponents];
  if (v112)
  {
    v113 = v112;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v114 = 0;
  }
  else
  {
    uint64_t v114 = 1;
  }
  OUTLINED_FUNCTION_16_3(v107, v114);
  outlined init with take of AnnotatedApp?(v107, v108, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_12_15(v108))
  {
    uint64_t v115 = 0;
    uint64_t v116 = 0;
  }
  else
  {
    uint64_t v115 = PersonNameComponents.namePrefix.getter();
    uint64_t v116 = v117;
  }
  outlined destroy of UUID?(v108, &demangling cache variable for type metadata for PersonNameComponents?);
  id v118 = [v50 nameComponents];
  if (v118)
  {
    v119 = v118;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v120 = 0;
  }
  else
  {
    uint64_t v120 = 1;
  }
  uint64_t v121 = v178;
  uint64_t v122 = v187;
  __swift_storeEnumTagSinglePayload(v105, v120, 1, v187);
  outlined init with take of AnnotatedApp?(v105, v104, &demangling cache variable for type metadata for PersonNameComponents?);
  if (__swift_getEnumTagSinglePayload(v104, 1, v122))
  {
    uint64_t v123 = 0;
    uint64_t v124 = 0;
  }
  else
  {
    uint64_t v123 = PersonNameComponents.nameSuffix.getter();
    uint64_t v124 = v125;
  }
  uint64_t v126 = v176;
  outlined destroy of UUID?(v104, &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v193 = v182;
  uint64_t v194 = v181;
  uint64_t v195 = v180;
  uint64_t v196 = v179;
  uint64_t v197 = v121;
  uint64_t v198 = v177;
  uint64_t v199 = v183;
  uint64_t v200 = v126;
  uint64_t v201 = v185;
  uint64_t v202 = v184;
  *(void *)&long long v203 = v115;
  *((void *)&v203 + 1) = v116;
  uint64_t v204 = v123;
  uint64_t v205 = v124;
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t *))(v127 + 368))(&v193);
  id v128 = v188;
  if ([v188 relationship])
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_66_10();
  }
  OUTLINED_FUNCTION_22();
  uint64_t v129 = OUTLINED_FUNCTION_38_30();
  v130(v129);
  id v131 = OUTLINED_FUNCTION_29_31();
  if (v131)
  {
    v132 = v131;
    v133 = (char *)[v131 type];

    if (v133 == (unsigned char *)&dword_0 + 2)
    {
      id v134 = OUTLINED_FUNCTION_29_31();
      unint64_t v135 = v134;
      if (!v134) {
        goto LABEL_81;
      }
      id v136 = [v134 value];

      if (!v136) {
        goto LABEL_81;
      }
      goto LABEL_80;
    }
  }
  id v137 = OUTLINED_FUNCTION_29_31();
  if (v137)
  {
    unint64_t v138 = v137;
    v139 = (char *)[v137 type];

    if (v139 == (unsigned char *)&dword_0 + 1)
    {
      id v140 = OUTLINED_FUNCTION_29_31();
      uint64_t v141 = v140;
      if (!v140) {
        goto LABEL_81;
      }
      id v142 = [v140 value];

      if (!v142) {
        goto LABEL_81;
      }
LABEL_80:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_66_10();
LABEL_81:
      OUTLINED_FUNCTION_22();
      uint64_t v143 = OUTLINED_FUNCTION_38_30();
      v144(v143);
      OUTLINED_FUNCTION_22();
      (*(void (**)(void))(v145 + 464))();
    }
  }
  id v146 = OUTLINED_FUNCTION_29_31();
  v147 = v146;
  if (v146)
  {
    id v148 = [v146 label];

    if (v148)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_66_10();
    }
  }
  OUTLINED_FUNCTION_22();
  uint64_t v149 = OUTLINED_FUNCTION_38_30();
  v150(v149);
  id v151 = OUTLINED_FUNCTION_29_31();
  if (!v151
    || (id v152 = v151,
        char v153 = (char *)[v151 emergencyType],
        v152,
        v153 != (unsigned char *)&dword_0 + 1))
  {
    id v154 = OUTLINED_FUNCTION_29_31();
    if (v154)
    {
      uint64_t v155 = v154;
      [v154 emergencyType];
    }
  }
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v156 + 536))();
  v189[0] = v128;
  char v190 = 0;
  OUTLINED_FUNCTION_2();
  uint64_t v158 = *(void (**)(id *))(v157 + 632);
  id v159 = v128;
  v158(v189);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void *String.UsoAttributeNameRelationshipType.unsafeMutableAddressor()
{
  return &static String.UsoAttributeNameRelationshipType;
}

PhoneCallFlowDelegatePlugin::UsoIdentifierAppBundleType_optional __swiftcall UsoIdentifierAppBundleType.init(rawValue:)(Swift::String rawValue)
{
  return (PhoneCallFlowDelegatePlugin::UsoIdentifierAppBundleType_optional)UsoIdentifierAppBundleType.init(rawValue:)();
}

uint64_t static Transformer<>.transformer(sharedGlobals:app:sirikitIntent:)(uint64_t a1, uint64_t a2, void *a3)
{
  _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
  uint64_t v5 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(&v8, v5 + 16);
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 64) = a2;
  swift_retain();
  id v6 = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  return Transformer.init(transform:)();
}

void *specialized UsoContactConvertible.nameSpans.getter(uint64_t (*a1)(uint64_t, unint64_t))
{
  swift_retain();
  uint64_t v2 = a1(1701667182, 0xE400000000000000);
  swift_release();
  if (v2) {
    return (void *)v2;
  }
  else {
    return _swiftEmptyArrayStorage;
  }
}

uint64_t specialized UsoContactConvertible.hasFullBusinessNameProperty.getter()
{
  uint64_t v0 = type metadata accessor for UsoEntitySpan();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = specialized UsoContactConvertible.nameSpans.getter((uint64_t (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getEntitySpansFor(attributeName:));
  uint64_t v5 = v4[2];
  if (v5)
  {
    long long v8 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    uint64_t v6 = v1 + 16;
    uint64_t v7 = v8;
    uint64_t v9 = (char *)v4 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v13 = v4;
    swift_bridgeObjectRetain();
    while (1)
    {
      v7(v3, v9, v0);
      char v11 = closure #1 in UsoContactConvertible.hasFullBusinessNameProperty.getter((uint64_t)v3);
      (*(void (**)(char *, uint64_t))(v6 - 8))(v3, v0);
      if (v11) {
        break;
      }
      v9 += v10;
      if (!--v5)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t EntitySpanPropertyKey.rawValue.getter(char a1)
{
  uint64_t result = 0x7373656E69737562;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_23_42();
      break;
    case 2:
      uint64_t result = 0x72506E6F73726570;
      break;
    case 3:
      uint64_t result = 0x75536E6F73726570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t specialized UsoContactConvertible.isNameLikelyNonBusiness()()
{
  uint64_t v1 = type metadata accessor for PayloadAttachmentInfo.AttachmentType();
  uint64_t v141 = *(char **)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
  __chkstk_darwin(v153);
  uint64_t v149 = (char *)v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo?);
  __chkstk_darwin(v5 - 8);
  uint64_t v155 = (char *)v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v152 = (char *)v126 - v12;
  __chkstk_darwin(v11);
  id v159 = (char *)v126 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpanProperty?);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  id v148 = (char *)v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v150 = (char *)v126 - v18;
  __chkstk_darwin(v17);
  uint64_t v157 = (char *)v126 - v19;
  uint64_t v20 = type metadata accessor for UsoEntitySpan();
  uint64_t v162 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v156 = (char *)v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v158 = (char *)v126 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  Swift::String v161 = (char *)v126 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v126 - v27;
  uint64_t v144 = type metadata accessor for IndexSet.RangeView();
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  id v142 = (char *)v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for IndexSet();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v147 = (char *)v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v34 = (char *)v126 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)v126 - v35;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceAlignment?);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (char *)v126 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for UtteranceAlignment();
  uint64_t v154 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  id v151 = (char *)v126 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = v0;
  uint64_t v41 = dispatch thunk of UsoEntity_common_Person.name.getter();
  if (!v42) {
    goto LABEL_9;
  }
  unint64_t v43 = v42;
  uint64_t v44 = HIBYTE(v42) & 0xF;
  if ((v42 & 0x2000000000000000) == 0) {
    uint64_t v44 = v41 & 0xFFFFFFFFFFFFLL;
  }
  if (!v44)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v49))
    {
      id v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)id v50 = 136315138;
      unint64_t v163 = 0;
      unint64_t v164 = 0xE000000000000000;
      uint64_t v165 = v51;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized UsoContactConvertible.isNameLikelyNonBusiness(), 0xD000000000000019, 0x800000000049B3D0);
      unint64_t v163 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v163, v164, &v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v48, v49, "%s -  Name is nil or empty, returning false", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v137 = v41;
  unint64_t v138 = v3;
  uint64_t v45 = specialized UsoContactConvertible.nameSpans.getter((uint64_t (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getEntitySpansFor(attributeName:))[2];
  swift_bridgeObjectRelease();
  if (!v45)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  specialized UsoContactConvertible.nameSpans.getter((uint64_t (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenBase.getUtteranceAlignmentsHelper(attributeName:));
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v46 = v160;
  if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v160) == 1)
  {
    swift_bridgeObjectRelease();
    outlined destroy of UUID?((uint64_t)v39, &demangling cache variable for type metadata for UtteranceAlignment?);
    return 0;
  }
  v133 = v10;
  uint64_t v134 = v1;
  uint64_t v54 = v154;
  id v55 = v151;
  (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v151, v39, v46);
  if (specialized UsoContactConvertible.hasFullBusinessNameProperty.getter())
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v46);
    return 0;
  }
  UtteranceAlignment.spans.getter();
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v56 = type metadata accessor for UtteranceSpan();
  uint64_t v57 = v55;
  if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v56) == 1)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    outlined destroy of UUID?((uint64_t)v36, &demangling cache variable for type metadata for UtteranceSpan?);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v57, v46);
    return 0;
  }
  unsigned int v58 = UtteranceSpan.startIndex.getter();
  unint64_t v59 = (uint64_t (**)(char *, uint64_t))(*(void *)(v56 - 8) + 8);
  unint64_t v60 = v36;
  uint64_t v61 = *v59;
  (*v59)(v60, v56);
  UtteranceAlignment.spans.getter();
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v56) == 1)
  {
    uint64_t v36 = v34;
    uint64_t v46 = v160;
    goto LABEL_22;
  }
  unsigned int v62 = UtteranceSpan.endIndex.getter();
  uint64_t result = v61(v34, v56);
  if (v62 < v58) {
    goto LABEL_95;
  }
  unsigned int v127 = v58;
  IndexSet.init(integersIn:)();
  uint64_t v63 = specialized UsoContactConvertible.nameSpans.getter((uint64_t (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getEntitySpansFor(attributeName:));
  uint64_t v64 = v63[2];
  uint64_t v65 = (uint64_t)v149;
  uint64_t v66 = v158;
  if (!v64)
  {
LABEL_92:
    swift_bridgeObjectRelease();
    uint64_t v120 = v142;
    uint64_t v121 = v147;
    uint64_t v122 = IndexSet.rangeView.getter();
    __chkstk_darwin(v122);
    v126[-10] = v137;
    v126[-9] = v43;
    LODWORD(v126[-8]) = v127;
    v126[-7] = &type metadata for String;
    v126[-6] = &outlined read-only object #0 of specialized UsoContactConvertible.isNameLikelyNonBusiness();
    v126[-5] = 0;
    v126[-4] = 0;
    uint64_t v123 = v151;
    v126[-3] = v151;
    v126[-2] = &v166;
    uint64_t v124 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF10Foundation8IndexSetV9RangeViewV_SnySS0E0VGs5NeverOTg5();
    (*(void (**)(char *, uint64_t))(v143 + 8))(v120, v144);
    swift_bridgeObjectRetain();
    uint64_t v125 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySnySS5IndexVGG_Sss5NeverOTg5095_s27PhoneCallFlowDelegatePlugin21UsoContactConvertiblePAAE23isNameLikelyNonBusinessSbyFSsSnySS5D8VGXEfU0_SSTf1cn_n(v124);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v163 = v125;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Substring]);
    lazy protocol witness table accessor for type [Substring] and conformance [A]();
    lazy protocol witness table accessor for type Substring and conformance Substring();
    Sequence<>.joined(separator:)();
    swift_bridgeObjectRelease();
    BOOL v52 = specialized Sequence.allSatisfy(_:)();
    (*(void (**)(char *, uint64_t))(v145 + 8))(v121, v146);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v123, v160);
    swift_bridgeObjectRelease();
    return v52;
  }
  id v140 = *(void (**)(char *))(v162 + 16);
  unint64_t v67 = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
  v126[1] = v63;
  id v68 = (char *)v63 + v67;
  v139 = (char **)(v162 + 8);
  unsigned int v131 = enum case for PayloadAttachmentInfo.AttachmentType.full(_:);
  unint64_t v130 = (void (**)(char *, void, uint64_t))(v141 + 104);
  id v128 = (void (**)(char *, uint64_t, uint64_t))(v141 + 32);
  uint64_t v129 = (void (**)(uint64_t, uint64_t))(v141 + 8);
  v162 += 16;
  uint64_t v132 = *(void *)(v162 + 56);
  while (1)
  {
    uint64_t v136 = v64;
    unint64_t v135 = v68;
    v140(v28);
    uint64_t v69 = UsoEntitySpan.properties.getter();
    uint64_t v70 = *(void *)(v69 + 16);
    uint64_t v71 = type metadata accessor for SpanProperty();
    uint64_t v72 = v71;
    if (v70)
    {
      uint64_t v73 = (uint64_t)v157;
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v157, v69+ ((*(unsigned __int8 *)(*(void *)(v71 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v71 - 8) + 80)), v71);
      uint64_t v74 = 0;
    }
    else
    {
      uint64_t v74 = 1;
      uint64_t v73 = (uint64_t)v157;
    }
    __swift_storeEnumTagSinglePayload(v73, v74, 1, v72);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v73, 1, v72) == 1)
    {
      outlined destroy of UUID?(v73, &demangling cache variable for type metadata for SpanProperty?);
      ((void (*)(char *, char *, uint64_t))v140)(v161, v28, v20);
    }
    else
    {
      uint64_t v78 = SpanProperty.key.getter();
      uint64_t v80 = v79;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v73, v72);
      if (v78 == 0x614E6E6F73726570 && v80 == 0xEA0000000000656DLL)
      {
        swift_bridgeObjectRelease();
        os_log_type_t v83 = v161;
        ((void (*)(char *, char *, uint64_t))v140)(v161, v28, v20);
LABEL_40:
        uint64_t v141 = *v139;
        ((void (*)(char *, uint64_t))v141)(v83, v20);
LABEL_52:
        ((void (*)(char *, char *, uint64_t))v140)(v66, v28, v20);
LABEL_53:
        ((void (*)(char *, uint64_t))v141)(v66, v20);
        goto LABEL_54;
      }
      char v82 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      os_log_type_t v83 = v161;
      ((void (*)(char *, char *, uint64_t))v140)(v161, v28, v20);
      if (v82) {
        goto LABEL_40;
      }
    }
    uint64_t v75 = UsoEntitySpan.properties.getter();
    if (*(void *)(v75 + 16))
    {
      uint64_t v76 = (uint64_t)v150;
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v150, v75+ ((*(unsigned __int8 *)(*(void *)(v72 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v72 - 8) + 80)), v72);
      uint64_t v77 = 0;
    }
    else
    {
      uint64_t v77 = 1;
      uint64_t v76 = (uint64_t)v150;
    }
    __swift_storeEnumTagSinglePayload(v76, v77, 1, v72);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v76, 1, v72) == 1)
    {
      outlined destroy of UUID?(v76, &demangling cache variable for type metadata for SpanProperty?);
      uint64_t v141 = *v139;
      ((void (*)(char *, uint64_t))v141)(v161, v20);
      ((void (*)(char *, char *, uint64_t))v140)(v66, v28, v20);
      goto LABEL_49;
    }
    uint64_t v84 = SpanProperty.key.getter();
    uint64_t v86 = v85;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v76, v72);
    if (v84 == 0x72506E6F73726570 && v86 == 0xEC00000078696665)
    {
      uint64_t v141 = *v139;
      ((void (*)(char *, uint64_t))v141)(v161, v20);
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v141 = *v139;
    ((void (*)(char *, uint64_t))v141)(v161, v20);
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v140)(v66, v28, v20);
    if (v88) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v89 = UsoEntitySpan.properties.getter();
    if (*(void *)(v89 + 16))
    {
      uint64_t v90 = (uint64_t)v148;
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v148, v89+ ((*(unsigned __int8 *)(*(void *)(v72 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v72 - 8) + 80)), v72);
      uint64_t v91 = 0;
    }
    else
    {
      uint64_t v91 = 1;
      uint64_t v90 = (uint64_t)v148;
    }
    __swift_storeEnumTagSinglePayload(v90, v91, 1, v72);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v90, 1, v72) == 1)
    {
      outlined destroy of UUID?(v90, &demangling cache variable for type metadata for SpanProperty?);
      ((void (*)(char *, uint64_t))v141)(v66, v20);
      uint64_t v92 = v156;
      ((void (*)(char *, char *, uint64_t))v140)(v156, v28, v20);
      uint64_t v93 = (uint64_t)v155;
      goto LABEL_73;
    }
    uint64_t v113 = SpanProperty.key.getter();
    uint64_t v114 = v90;
    uint64_t v115 = v113;
    uint64_t v117 = v116;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v114, v72);
    if (v115 == 0x75536E6F73726570 && v117 == 0xEC00000078696666)
    {
      ((void (*)(char *, uint64_t))v141)(v66, v20);
      swift_bridgeObjectRelease();
      uint64_t v65 = (uint64_t)v149;
LABEL_54:
      uint64_t v93 = (uint64_t)v155;
      uint64_t v92 = v156;
      ((void (*)(char *, char *, uint64_t))v140)(v156, v28, v20);
LABEL_55:
      ((void (*)(char *, uint64_t))v141)(v92, v20);
      uint64_t v94 = (uint64_t)v159;
      goto LABEL_56;
    }
    char v119 = _stringCompareWithSmolCheck(_:_:expecting:)();
    ((void (*)(char *, uint64_t))v141)(v66, v20);
    swift_bridgeObjectRelease();
    uint64_t v92 = v156;
    ((void (*)(char *, char *, uint64_t))v140)(v156, v28, v20);
    uint64_t v65 = (uint64_t)v149;
    uint64_t v93 = (uint64_t)v155;
    if (v119) {
      goto LABEL_55;
    }
LABEL_73:
    uint64_t v109 = UsoEntitySpan.label.getter();
    if (!v110)
    {
      ((void (*)(char *, uint64_t))v141)(v92, v20);
LABEL_88:
      uint64_t v66 = v158;
      goto LABEL_89;
    }
    BOOL v111 = v109 == 0x75466E6F73726570 && v110 == 0xEE00656D614E6C6CLL;
    uint64_t v94 = (uint64_t)v159;
    if (v111)
    {
      ((void (*)(char *, uint64_t))v141)(v92, v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v112 = _stringCompareWithSmolCheck(_:_:expecting:)();
      ((void (*)(char *, uint64_t))v141)(v92, v20);
      swift_bridgeObjectRelease();
      uint64_t v66 = v158;
      if ((v112 & 1) == 0) {
        goto LABEL_89;
      }
    }
LABEL_56:
    UsoEntitySpan.payloadAttachmentInfo.getter();
    uint64_t v95 = type metadata accessor for PayloadAttachmentInfo();
    if (__swift_getEnumTagSinglePayload(v93, 1, v95) == 1)
    {
      outlined destroy of UUID?(v93, &demangling cache variable for type metadata for PayloadAttachmentInfo?);
      uint64_t v96 = v134;
      __swift_storeEnumTagSinglePayload(v94, 1, 1, v134);
    }
    else
    {
      PayloadAttachmentInfo.attachmentType.getter();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v95 - 8) + 8))(v93, v95);
      uint64_t v96 = v134;
    }
    uint64_t v97 = (uint64_t)v152;
    (*v130)(v152, v131, v96);
    __swift_storeEnumTagSinglePayload(v97, 0, 1, v96);
    uint64_t v98 = v65 + *(int *)(v153 + 48);
    outlined init with copy of ConfirmationResponse?(v94, v65, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    outlined init with copy of ConfirmationResponse?(v97, v98, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    if (__swift_getEnumTagSinglePayload(v65, 1, v96) == 1)
    {
      outlined destroy of UUID?(v97, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      outlined destroy of UUID?(v94, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      if (__swift_getEnumTagSinglePayload(v98, 1, v96) == 1)
      {
        outlined destroy of UUID?(v65, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
LABEL_93:
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v141)(v28, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v145 + 8))(v147, v146);
        (*(void (**)(char *, uint64_t))(v154 + 8))(v151, v160);
        return 1;
      }
      goto LABEL_64;
    }
    uint64_t v99 = (uint64_t)v133;
    outlined init with copy of ConfirmationResponse?(v65, (uint64_t)v133, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    if (__swift_getEnumTagSinglePayload(v98, 1, v96) == 1)
    {
      outlined destroy of UUID?(v97, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      outlined destroy of UUID?(v94, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      (*v129)(v99, v96);
LABEL_64:
      outlined destroy of UUID?(v65, &demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
      goto LABEL_66;
    }
    uint64_t v100 = v138;
    (*v128)(v138, v98, v96);
    lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues(&lazy protocol witness table cache variable for type PayloadAttachmentInfo.AttachmentType and conformance PayloadAttachmentInfo.AttachmentType, (void (*)(uint64_t))&type metadata accessor for PayloadAttachmentInfo.AttachmentType);
    char v101 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v102 = v97;
    uint64_t v103 = *v129;
    uint64_t v104 = (uint64_t)v100;
    uint64_t v65 = (uint64_t)v149;
    (*v129)(v104, v96);
    uint64_t v105 = v102;
    uint64_t v106 = (uint64_t)v159;
    outlined destroy of UUID?(v105, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    outlined destroy of UUID?(v106, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    v103(v99, v96);
    outlined destroy of UUID?(v65, &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    if (v101) {
      goto LABEL_93;
    }
LABEL_66:
    uint64_t v107 = UsoEntitySpan.startIndex.getter();
    if ((v107 & 0x100000000) != 0) {
      goto LABEL_88;
    }
    unsigned int v108 = v107;
    uint64_t result = UsoEntitySpan.endIndex.getter();
    uint64_t v66 = v158;
    if ((result & 0x100000000) == 0) {
      break;
    }
LABEL_89:
    ((void (*)(char *, uint64_t))v141)(v28, v20);
    id v68 = &v135[v132];
    uint64_t v64 = v136 - 1;
    if (v136 == 1) {
      goto LABEL_92;
    }
  }
  if (result >= (unint64_t)v108)
  {
    IndexSet.remove(integersIn:)();
    goto LABEL_89;
  }
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t EntitySpanLabel.rawValue.getter()
{
  return 0x75466E6F73726570;
}

uint64_t specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v49 = a2;
  uint64_t v48 = a6;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UtteranceAlignment();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFSUB__(a1, a5))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v45 = a1;
  uint64_t v46 = v17;
  uint64_t v47 = v15;
  uint64_t v17 = (char *)v20;
  uint64_t result = String.index(_:offsetBy:limitedBy:)();
  if (v24)
  {
LABEL_7:
    a3 = a10;
    a5 = a11;
    if (one-time initialization token for siriPhone == -1)
    {
LABEL_8:
      uint64_t v28 = type metadata accessor for Logger();
      __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
      (*(void (**)(char *, uint64_t, char *))(v19 + 16))(v22, a3, v17);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.fault.getter();
      int v31 = v30;
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v32 = swift_slowAlloc();
        int v43 = v31;
        uint64_t v33 = v32;
        uint64_t v44 = swift_slowAlloc();
        uint64_t v52 = v44;
        *(_DWORD *)uint64_t v33 = 136315906;
        uint64_t v50 = 0;
        unint64_t v51 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        uint64_t v41 = v17;
        os_log_t v42 = v29;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v48, a7, 0xD000000000000019, 0x800000000049B3D0);
        swift_bridgeObjectRelease();
        uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2080;
        uint64_t v34 = specialized Range.description.getter();
        uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 22) = 2080;
        UtteranceAlignment.spans.getter();
        specialized Collection.first.getter();
        swift_bridgeObjectRelease();
        uint64_t v36 = String.init<A>(describing:)();
        uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v19 + 8))(v22, v41);
        *(_WORD *)(v33 + 32) = 2080;
        uint64_t v50 = a5;
        type metadata accessor for UsoEntity_common_Person();
        swift_retain();
        uint64_t v38 = String.init<A>(describing:)();
        uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v40 = v42;
        _os_log_impl(&dword_0, v42, (os_log_type_t)v43, "%s- Unexpected: UtteranceAlignment range is greater than name - Current Range: %s -- Alignment Span: %s -- Self: %s", (uint8_t *)v33, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, char *))(v19 + 8))(v22, v17);

        swift_release_n();
      }
      return 15;
    }
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  if (!__OFSUB__(v49, a5))
  {
    unint64_t v25 = result;
    unint64_t v26 = String.index(_:offsetBy:limitedBy:)();
    if ((v27 & 1) == 0)
    {
      if (v26 >> 14 >= v25 >> 14) {
        return v25;
      }
      __break(1u);
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t one-time initialization function for logPrefix()
{
  uint64_t result = type metadata accessor for NLv4Transformer(0);
  static NLv4Transformer.logPrefix = result;
  unk_5D5060 = &outlined read-only object #0 of one-time initialization function for logPrefix;
  qword_5D5068 = 0;
  unk_5D5070 = 0;
  return result;
}

uint64_t *NLv4Transformer.logPrefix.unsafeMutableAddressor()
{
  if (one-time initialization token for logPrefix != -1) {
    swift_once();
  }
  return &static NLv4Transformer.logPrefix;
}

uint64_t static NLv4Transformer.logPrefix.getter()
{
  if (one-time initialization token for logPrefix != -1) {
    swift_once();
  }
  uint64_t v0 = static NLv4Transformer.logPrefix;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t NLv4Transformer.init(referenceResolver:featureManager:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v2);
  uint64_t v4 = OUTLINED_FUNCTION_28_11(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_51_19();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t NLv4Transformer.deinit()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v1();
  return v0;
}

uint64_t NLv4Transformer.__deallocating_deinit()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v0();

  return swift_deallocClassInstance();
}

uint64_t one-time initialization function for phoneCallAttributesLast(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast(a1, static Transformer<>.phoneCallAttributesLast);
}

uint64_t one-time initialization function for phoneCallAttributesRecent(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast(a1, static Transformer<>.phoneCallAttributesRecent);
}

uint64_t one-time initialization function for phoneCallAttributesMissed(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast(a1, static Transformer<>.phoneCallAttributesMissed);
}

uint64_t one-time initialization function for phoneCallAttributesOutgoing(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast(a1, static Transformer<>.phoneCallAttributesOutgoing);
}

uint64_t one-time initialization function for phoneCallAttributesReceived(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast(a1, static Transformer<>.phoneCallAttributesReceived);
}

uint64_t one-time initialization function for phoneCallAttributesNewVoicemail(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast(a1, static Transformer<>.phoneCallAttributesNewVoicemail);
}

uint64_t one-time initialization function for phoneCallAttributesLast(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 104);

  return v5();
}

uint64_t static Transformer<>.updatePhoneNounAndAttributesForLatestCallHistory(attribute:phoneCallAttributes:phoneCallNoun:)(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v34 = a3;
  uint64_t v4 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues();
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v31 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - v17;
  dispatch thunk of CodeGenListEntry.entry.getter();
  if (v35)
  {
    CodeGenBase.entity.getter();
    swift_release();
  }
  type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  uint64_t result = swift_release();
  if (v36)
  {
    dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter();
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v16, enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesCurrent(_:), v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v4);
    uint64_t v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
    outlined init with copy of ConfirmationResponse?((uint64_t)v18, (uint64_t)v9, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    outlined init with copy of ConfirmationResponse?((uint64_t)v16, v20, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
    {
      outlined destroy of UUID?((uint64_t)v16, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      outlined destroy of UUID?((uint64_t)v18, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if (__swift_getEnumTagSinglePayload(v20, 1, v4) == 1)
      {
        outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_12:
        char v26 = 8;
LABEL_14:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v29 = *(void *)(*a2 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        uint64_t v30 = *a2;
        *(void *)(v30 + 16) = v29 + 1;
        *(unsigned char *)(v30 + v29 + 32) = v26;
        uint64_t result = swift_release();
        char v21 = 0;
        *a2 = v30;
        goto LABEL_15;
      }
    }
    else
    {
      outlined init with copy of ConfirmationResponse?((uint64_t)v9, (uint64_t)v13, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if (__swift_getEnumTagSinglePayload(v20, 1, v4) != 1)
      {
        uint64_t v22 = v6;
        uint64_t v23 = v33;
        char v24 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
        int v31 = v22;
        v24(v22, v20, v4);
        lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues(&lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
        int v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v25 = *(void (**)(char *, uint64_t))(v23 + 8);
        v25(v31, v4);
        outlined destroy of UUID?((uint64_t)v16, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        outlined destroy of UUID?((uint64_t)v18, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        v25(v13, v4);
        outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        if (v32) {
          goto LABEL_12;
        }
LABEL_13:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v27 = *(void *)(*a2 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        uint64_t v28 = *a2;
        *(void *)(v28 + 16) = v27 + 1;
        *(unsigned char *)(v28 + v27 + 32) = 6;
        *a2 = v28;
        char v26 = 4;
        goto LABEL_14;
      }
      outlined destroy of UUID?((uint64_t)v16, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      outlined destroy of UUID?((uint64_t)v18, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v4);
    }
    outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
    goto LABEL_13;
  }
  char v21 = 1;
LABEL_15:
  *uint64_t v34 = v21;
  return result;
}

uint64_t static Transformer<>.updatePhoneNounAndAttributesForGeneralCallHistory(attribute:phoneCallAttributes:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v100 = a2;
  uint64_t v2 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues();
  uint64_t v102 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v97 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  uint64_t v4 = __chkstk_darwin(v104);
  uint64_t v98 = (uint64_t)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v89 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v101 = (uint64_t)&v89 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v89 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v95 = (char *)&v89 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v90 = (uint64_t)&v89 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v99 = (char *)&v89 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v92 = (uint64_t)&v89 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v89 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v89 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v89 - v32;
  __chkstk_darwin(v31);
  uint64_t v103 = (char *)&v89 - v34;
  dispatch thunk of CodeGenListEntry.entry.getter();
  if (v105)
  {
    CodeGenBase.entity.getter();
    swift_release();
  }
  type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  uint64_t result = swift_release();
  if (v106)
  {
    uint64_t v96 = v8;
    uint64_t v36 = (uint64_t)v103;
    uint64_t v93 = v106;
    dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter();
    if (one-time initialization token for phoneCallAttributesMissed != -1) {
      swift_once();
    }
    uint64_t v37 = __swift_project_value_buffer(v2, (uint64_t)static Transformer<>.phoneCallAttributesMissed);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16);
    uint64_t v94 = v102 + 16;
    uint64_t v91 = v38;
    v38((uint64_t)v33, v37, v2);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v2);
    uint64_t v39 = (uint64_t)&v12[*(int *)(v104 + 48)];
    outlined init with copy of ConfirmationResponse?((uint64_t)v33, (uint64_t)v12, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    outlined init with copy of ConfirmationResponse?(v36, v39, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v2) == 1)
    {
      outlined destroy of UUID?((uint64_t)v33, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v39, 1, v2);
      uint64_t v41 = (uint64_t)v96;
      if (EnumTagSinglePayload == 1)
      {
        outlined destroy of UUID?((uint64_t)v12, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        uint64_t v42 = (uint64_t)v103;
LABEL_13:
        outlined destroy of UUID?(v42, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        uint64_t v49 = v100;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v50 = *(void *)(*v49 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        uint64_t v51 = *v49;
        *(void *)(v51 + 16) = v50 + 1;
        *(unsigned char *)(v51 + v50 + 32) = 0;
LABEL_45:
        uint64_t result = swift_release();
        *uint64_t v49 = v51;
        return result;
      }
    }
    else
    {
      outlined init with copy of ConfirmationResponse?((uint64_t)v12, (uint64_t)v30, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if (__swift_getEnumTagSinglePayload(v39, 1, v2) != 1)
      {
        uint64_t v43 = v102;
        uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 32);
        uint64_t v89 = v16;
        uint64_t v45 = v97;
        v44(v97, v39, v2);
        lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues(&lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
        char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v47 = *(void (**)(char *, uint64_t))(v43 + 8);
        uint64_t v48 = v45;
        uint64_t v16 = v89;
        v47(v48, v2);
        outlined destroy of UUID?((uint64_t)v33, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        v47(v30, v2);
        outlined destroy of UUID?((uint64_t)v12, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        uint64_t v42 = (uint64_t)v103;
        uint64_t v41 = (uint64_t)v96;
        if (v46) {
          goto LABEL_13;
        }
LABEL_14:
        if (one-time initialization token for phoneCallAttributesOutgoing != -1) {
          swift_once();
        }
        uint64_t v52 = __swift_project_value_buffer(v2, (uint64_t)static Transformer<>.phoneCallAttributesOutgoing);
        unint64_t v53 = v91;
        v91((uint64_t)v27, v52, v2);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v2);
        uint64_t v54 = v101;
        uint64_t v55 = v101 + *(int *)(v104 + 48);
        outlined init with copy of ConfirmationResponse?((uint64_t)v27, v101, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        outlined init with copy of ConfirmationResponse?(v42, v55, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        if (__swift_getEnumTagSinglePayload(v54, 1, v2) == 1)
        {
          outlined destroy of UUID?((uint64_t)v27, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          int v56 = __swift_getEnumTagSinglePayload(v55, 1, v2);
          uint64_t v57 = (uint64_t)v99;
          if (v56 == 1)
          {
            outlined destroy of UUID?(v101, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_36:
            outlined destroy of UUID?(v42, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            uint64_t v49 = v100;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v74 = *(void *)(*v49 + 16);
            specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            uint64_t v51 = *v49;
            *(void *)(v51 + 16) = v74 + 1;
            uint64_t v75 = v51 + v74;
            char v76 = 5;
LABEL_44:
            *(unsigned char *)(v75 + 32) = v76;
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v58 = v92;
          outlined init with copy of ConfirmationResponse?(v54, v92, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          if (__swift_getEnumTagSinglePayload(v55, 1, v2) != 1)
          {
            uint64_t v67 = v58;
            uint64_t v68 = v102;
            uint64_t v69 = v16;
            uint64_t v70 = v97;
            (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v97, v55, v2);
            lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues(&lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
            char v71 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v72 = *(void (**)(char *, uint64_t))(v68 + 8);
            uint64_t v73 = v70;
            uint64_t v16 = v69;
            uint64_t v42 = (uint64_t)v103;
            v72(v73, v2);
            outlined destroy of UUID?((uint64_t)v27, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            v72((char *)v67, v2);
            unint64_t v53 = v91;
            uint64_t v41 = (uint64_t)v96;
            outlined destroy of UUID?(v54, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            uint64_t v57 = (uint64_t)v99;
            if (v71) {
              goto LABEL_36;
            }
LABEL_22:
            uint64_t v89 = v16;
            if (one-time initialization token for phoneCallAttributesReceived != -1) {
              swift_once();
            }
            uint64_t v59 = __swift_project_value_buffer(v2, (uint64_t)static Transformer<>.phoneCallAttributesReceived);
            v53(v57, v59, v2);
            __swift_storeEnumTagSinglePayload(v57, 0, 1, v2);
            uint64_t v60 = v41 + *(int *)(v104 + 48);
            outlined init with copy of ConfirmationResponse?(v57, v41, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            outlined init with copy of ConfirmationResponse?(v42, v60, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            int v61 = __swift_getEnumTagSinglePayload(v41, 1, v2);
            uint64_t v62 = (uint64_t)v95;
            if (v61 == 1)
            {
              outlined destroy of UUID?(v57, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              if (__swift_getEnumTagSinglePayload(v60, 1, v2) == 1)
              {
                outlined destroy of UUID?(v41, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_41:
                outlined destroy of UUID?(v42, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                uint64_t v49 = v100;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                uint64_t v83 = *(void *)(*v49 + 16);
                specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                uint64_t v51 = *v49;
                *(void *)(v51 + 16) = v83 + 1;
                uint64_t v75 = v51 + v83;
                char v76 = 4;
                goto LABEL_44;
              }
            }
            else
            {
              uint64_t v63 = v90;
              outlined init with copy of ConfirmationResponse?(v41, v90, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              if (__swift_getEnumTagSinglePayload(v60, 1, v2) != 1)
              {
                uint64_t v78 = v102;
                uint64_t v79 = v97;
                (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v97, v60, v2);
                lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues(&lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
                char v80 = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v81 = v57;
                char v82 = *(void (**)(char *, uint64_t))(v78 + 8);
                v82(v79, v2);
                outlined destroy of UUID?(v81, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                v82((char *)v63, v2);
                uint64_t v62 = (uint64_t)v95;
                unint64_t v53 = v91;
                outlined destroy of UUID?(v41, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                if (v80) {
                  goto LABEL_41;
                }
LABEL_30:
                if (one-time initialization token for phoneCallAttributesLast != -1) {
                  swift_once();
                }
                uint64_t v64 = __swift_project_value_buffer(v2, (uint64_t)static Transformer<>.phoneCallAttributesLast);
                v53(v62, v64, v2);
                __swift_storeEnumTagSinglePayload(v62, 0, 1, v2);
                uint64_t v65 = v98;
                uint64_t v66 = v98 + *(int *)(v104 + 48);
                outlined init with copy of ConfirmationResponse?(v62, v98, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                outlined init with take of AnnotatedApp?(v42, v66, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                if (__swift_getEnumTagSinglePayload(v65, 1, v2) == 1)
                {
                  outlined destroy of UUID?(v62, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  if (__swift_getEnumTagSinglePayload(v66, 1, v2) == 1)
                  {
                    outlined destroy of UUID?(v98, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_43:
                    uint64_t v49 = v100;
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                    uint64_t v88 = *(void *)(*v49 + 16);
                    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                    uint64_t v51 = *v49;
                    *(void *)(v51 + 16) = v88 + 1;
                    uint64_t v75 = v51 + v88;
                    char v76 = 6;
                    goto LABEL_44;
                  }
                }
                else
                {
                  uint64_t v77 = (uint64_t)v89;
                  outlined init with copy of ConfirmationResponse?(v98, (uint64_t)v89, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  if (__swift_getEnumTagSinglePayload(v66, 1, v2) != 1)
                  {
                    uint64_t v84 = v102;
                    uint64_t v85 = v97;
                    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v97, v66, v2);
                    lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues(&lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
                    char v86 = dispatch thunk of static Equatable.== infix(_:_:)();
                    uint64_t v87 = *(void (**)(char *, uint64_t))(v84 + 8);
                    v87(v85, v2);
                    outlined destroy of UUID?(v62, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                    v87((char *)v77, v2);
                    outlined destroy of UUID?(v98, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                    if (v86) {
                      goto LABEL_43;
                    }
                    return swift_release();
                  }
                  outlined destroy of UUID?(v62, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v77, v2);
                }
                outlined destroy of UUID?(v98, &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
                return swift_release();
              }
              outlined destroy of UUID?(v57, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v63, v2);
            }
            outlined destroy of UUID?(v41, &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
            goto LABEL_30;
          }
          outlined destroy of UUID?((uint64_t)v27, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v58, v2);
          uint64_t v57 = (uint64_t)v99;
        }
        outlined destroy of UUID?(v101, &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
        goto LABEL_22;
      }
      outlined destroy of UUID?((uint64_t)v33, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v30, v2);
      uint64_t v41 = (uint64_t)v96;
    }
    outlined destroy of UUID?((uint64_t)v12, &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
    uint64_t v42 = (uint64_t)v103;
    goto LABEL_14;
  }
  return result;
}

uint64_t static Transformer<>.findPositionReference(entity:referenceResolver:)@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MatchedResultsSetting();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v54[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget?);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (id *)&v54[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (void **)&v54[-v16];
  __chkstk_darwin(v15);
  uint64_t v19 = &v54[-v18];
  static Signpost.begin(_:)();
  uint64_t v62 = v21;
  uint64_t v63 = v20;
  uint64_t v61 = v22;
  int v60 = v23;
  uint64_t v24 = CodeGenBase.entity.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, enum case for MatchedResultsSetting.defaultMatching(_:), v4);
  static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)(v24, a1, (uint64_t)v7, (uint64_t)v10);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v25 = type metadata accessor for PhoneRRTarget(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v25) == 1)
  {
    outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for PhoneRRTarget?);
    uint64_t v26 = type metadata accessor for PhoneRRTarget.Target(0);
    uint64_t v27 = (uint64_t)v19;
    uint64_t v28 = 1;
  }
  else
  {
    outlined init with copy of PhoneRRTarget((uint64_t)v10, (uint64_t)v19);
    outlined destroy of TransformerInput((uint64_t)v10, (void (*)(void))type metadata accessor for PhoneRRTarget);
    uint64_t v26 = type metadata accessor for PhoneRRTarget.Target(0);
    uint64_t v27 = (uint64_t)v19;
    uint64_t v28 = 0;
  }
  __swift_storeEnumTagSinglePayload(v27, v28, 1, v26);
  outlined init with copy of ConfirmationResponse?((uint64_t)v19, (uint64_t)v17, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  type metadata accessor for PhoneRRTarget.Target(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26) == 1)
  {
    outlined destroy of UUID?((uint64_t)v17, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v42 = *v17;
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      __swift_project_value_buffer(v43, (uint64_t)static Logger.siriPhone);
      id v44 = v42;
      uint64_t v45 = Logger.logObject.getter();
      int v46 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v45, (os_log_type_t)v46))
      {
        int v55 = v46;
        os_log_t v58 = v45;
        id v59 = v44;
        uint64_t v47 = swift_slowAlloc();
        int v56 = (void *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        uint64_t v64 = (void *)v57;
        *(_DWORD *)uint64_t v47 = 136315394;
        if (one-time initialization token for logPrefix != -1) {
          swift_once();
        }
        uint64_t v48 = static NLv4Transformer.logPrefix;
        uint64_t v49 = unk_5D5060;
        uint64_t v50 = qword_5D5068;
        uint64_t v51 = unk_5D5070;
        uint64_t v65 = 0;
        unint64_t v66 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v48, v49, v50, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, (uint64_t *)&v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2112;
        id v44 = v59;
        uint64_t v65 = (uint64_t)v59;
        id v52 = v59;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *int v56 = v44;

        uint64_t v45 = v58;
        _os_log_impl(&dword_0, v58, (os_log_type_t)v55, "%s referenceResolution findPositionReference selected person: %@ as the resolution result", (uint8_t *)v47, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      outlined destroy of UUID?((uint64_t)v19, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
      *(void *)(a2 + 40) = 0;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 8) = 0u;
      *(void *)a2 = v44;
      goto LABEL_32;
    }
    outlined destroy of TransformerInput((uint64_t)v17, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
  }
  outlined init with copy of ConfirmationResponse?((uint64_t)v19, (uint64_t)v14, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v26) == 1)
  {
    outlined destroy of UUID?((uint64_t)v19, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
    outlined destroy of UUID?((uint64_t)v14, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
LABEL_21:
    *(void *)a2 = 1;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(void *)(a2 + 40) = 0;
    goto LABEL_32;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    outlined destroy of UUID?((uint64_t)v19, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
    outlined destroy of TransformerInput((uint64_t)v14, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
    goto LABEL_21;
  }
  id v29 = *v14;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v31 = Logger.logObject.getter();
  int v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, (os_log_type_t)v32))
  {
    LODWORD(v57) = v32;
    os_log_t v58 = v31;
    id v59 = v29;
    uint64_t v33 = swift_slowAlloc();
    int v56 = (void *)swift_slowAlloc();
    uint64_t v64 = v56;
    *(_DWORD *)uint64_t v33 = 136315394;
    if (one-time initialization token for logPrefix != -1) {
      swift_once();
    }
    uint64_t v35 = static NLv4Transformer.logPrefix;
    uint64_t v34 = unk_5D5060;
    uint64_t v37 = qword_5D5068;
    uint64_t v36 = unk_5D5070;
    uint64_t v65 = 0;
    unint64_t v66 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v35, v34, v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, (uint64_t *)&v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    id v29 = v59;
    UsoEntity_common_App.applicationId.getter();
    if (v39)
    {
      unint64_t v40 = v39;
    }
    else
    {
      uint64_t v38 = 0;
      unint64_t v40 = 0xE000000000000000;
    }
    uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, (uint64_t *)&v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v41 = v58;
    _os_log_impl(&dword_0, v58, (os_log_type_t)v57, "%s referenceResolution findPositionReference selected app: %s as the resolution result", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v67 = type metadata accessor for UsoEntity_common_App();
  uint64_t v68 = &protocol witness table for UsoEntity_common_App;
  uint64_t v65 = (uint64_t)v29;
  outlined destroy of UUID?((uint64_t)v19, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  *(void *)a2 = 0;
  outlined init with take of AnnotatedApp?((uint64_t)&v65, a2 + 8, &demangling cache variable for type metadata for PhoneCallApp?);
LABEL_32:
  Signpost.OpenSignpost.end()();
  return swift_release();
}

uint64_t static Transformer<>.convertPhoneCallPositionToNoVerbPosition(task:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ListPosition.DefinedValues?);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for UsoEntity_common_ListPosition.DefinedValues();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UsoTask_CodegenConverter.convert(task:)();
  if (!v46) {
    goto LABEL_25;
  }
  type metadata accessor for UsoTask_call_common_PhoneCall();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  swift_retain();
  dispatch thunk of Uso_VerbTemplate_Target.target.getter();
  swift_release();
  if (!v44
    || (uint64_t v10 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(), swift_release(), !v10)
    || (uint64_t v11 = dispatch thunk of CodeGenGlobalArgs.usoListPosition.getter(), swift_release(), !v11))
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
    goto LABEL_14;
  }
  dispatch thunk of UsoEntity_common_ListPosition.definedValue.getter();
  swift_release();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
LABEL_14:
    swift_release();
    id v29 = &demangling cache variable for type metadata for UsoEntity_common_ListPosition.DefinedValues?;
    uint64_t v30 = v5;
LABEL_26:
    outlined destroy of UUID?((uint64_t)v30, v29);
    return 0;
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v9, v5, v6);
  type metadata accessor for UsoTaskBuilder_noVerb_uso_NoEntity();
  swift_allocObject();
  uint64_t v12 = UsoTaskBuilder_noVerb_uso_NoEntity.init()();
  type metadata accessor for UsoEntityBuilder_uso_NoEntity();
  swift_allocObject();
  uint64_t v13 = UsoEntityBuilder_uso_NoEntity.init()();
  type metadata accessor for UsoEntityBuilder_common_ListPosition();
  swift_allocObject();
  uint64_t v14 = UsoEntityBuilder_common_ListPosition.init()();
  dispatch thunk of UsoEntityBuilder_common_ListPosition.setDefinedValue(value:)();
  swift_retain();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoListPosition(value:)();
  uint64_t v42 = v14;
  swift_release();
  dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.setEntity(value:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_46A030;
  *(void *)(v15 + 32) = v12;
  uint64_t v44 = v15;
  specialized Array._endMutation()();
  uint64_t v16 = type metadata accessor for UsoBuilderOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v16);
  swift_retain();
  uint64_t v17 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
  swift_bridgeObjectRelease();
  outlined destroy of UUID?((uint64_t)v2, &demangling cache variable for type metadata for UsoBuilderOptions?);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v19 = Logger.logObject.getter();
  int v41 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, (os_log_type_t)v41))
  {
    os_log_t v37 = v19;
    uint64_t v38 = v17;
    uint64_t v39 = v13;
    uint64_t v40 = v12;
    uint64_t v20 = (_DWORD *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v43 = v35;
    uint64_t v36 = v20;
    *uint64_t v20 = 136315394;
    if (one-time initialization token for logPrefix != -1) {
      swift_once();
    }
    uint64_t v21 = unk_5D5060;
    uint64_t v34 = static NLv4Transformer.logPrefix;
    uint64_t v22 = qword_5D5068;
    uint64_t v23 = unk_5D5070;
    uint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v34, v21, v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v43);
    uint64_t v25 = v36;
    uint64_t v44 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v25 + 6) = 2080;
    uint64_t v44 = v38;
    type metadata accessor for Graph();
    lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues((unint64_t *)&lazy protocol witness table cache variable for type Graph and conformance Graph, (void (*)(uint64_t))&type metadata accessor for Graph);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v28 = v37;
    _os_log_impl(&dword_0, v37, (os_log_type_t)v41, "%s convert to a new entity graph: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  unint64_t v31 = static UsoConversionUtils.convertGraphToTasks(graph:)();
  unint64_t v32 = v31;
  if (v31 >> 62)
  {
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_21;
    }
  }
  else if (!*(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_21;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v32 & 0xC000000000000001) == 0, v32);
  if ((v32 & 0xC000000000000001) != 0) {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    swift_retain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  static UsoTask_CodegenConverter.convert(task:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v46)
  {
LABEL_25:
    id v29 = &demangling cache variable for type metadata for Any?;
    uint64_t v30 = &v44;
    goto LABEL_26;
  }
  type metadata accessor for UsoTask_noVerb_uso_NoEntity();
  if (swift_dynamicCast()) {
    return v43;
  }
  else {
    return 0;
  }
}

uint64_t static Transformer<>.buildNLIntentByVoicemailVerb(phoneCallUsoTask:voiceMailVerb:)@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = UsoTask.usoAssociatedApp.getter();
  if (v4)
  {
    uint64_t v5 = v4;
    *((void *)&v10 + 1) = type metadata accessor for UsoEntity_common_App();
    uint64_t v11 = &protocol witness table for UsoEntity_common_App;
    *(void *)&long long v9 = v5;
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
  }
  a2[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
  a2[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
  uint64_t v6 = swift_allocObject();
  *a2 = v6;
  BYTE6(v8) = 0;
  BYTE5(v8) = a1;
  BYTE4(v8) = 17;
  LODWORD(v8) = 587401477;
  return PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v9, 2, 0, 4, 2, 5, v6 + 16, v8, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, TargetContacts>);
  OUTLINED_FUNCTION_1();
  uint64_t v205 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_1();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_4();
  uint64_t v20 = v19 - v18;
  static Signpost.begin(_:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, a1, v14);
  uint64_t v21 = type metadata accessor for TransformerInput(0);
  outlined init with copy of ConfirmationResponse?(a1 + *(int *)(v21 + 20), (uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
  {
    uint64_t v204 = a4;
    if (Siri_Nlu_External_UserDialogAct.hasRejected.getter())
    {
      uint64_t v22 = a4;
      char v23 = 1;
      goto LABEL_7;
    }
    if (Siri_Nlu_External_UserDialogAct.hasCancelled.getter())
    {
      uint64_t v22 = a4;
      char v23 = 2;
      goto LABEL_7;
    }
    if (Siri_Nlu_External_UserDialogAct.hasWantedToRepeat.getter())
    {
      *(void *)&long long v218 = 0;
      long long v216 = 0u;
      long long v217 = 0u;
      outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      uint64_t v27 = OUTLINED_FUNCTION_1_98();
      v28(v27);
      a4[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
      a4[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
      uint64_t v29 = OUTLINED_FUNCTION_58_22();
      *a4 = v29;
      BYTE6(v161) = 2;
      WORD2(v161) = 1549;
      LODWORD(v161) = 587401477;
      OUTLINED_FUNCTION_42_30((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v216, v29 + 16, v161, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage);
      goto LABEL_8;
    }
    if (one-time initialization token for transformer != -1) {
      swift_once();
    }
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>);
    OUTLINED_FUNCTION_11_66(v30, (uint64_t)static Transformer<>.transformer);
    OUTLINED_FUNCTION_60_17();
    v31();
    if (v4)
    {
      swift_release();
      outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      uint64_t v32 = OUTLINED_FUNCTION_1_98();
      v33(v32);
      goto LABEL_8;
    }
    swift_release();
    uint64_t v227 = v216;
    uint64_t v34 = swift_retain();
    if (static Transformer<>.findNextVoicemailTask(usoTask:)(v34, (void (*)(void))&type metadata accessor for UsoTask_update_uso_NoEntity))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_30_32(v37))
      {
        uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_47();
        *(void *)&long long v213 = OUTLINED_FUNCTION_14_0();
        *(_DWORD *)uint64_t v38 = 136315138;
        if (one-time initialization token for logPrefix != -1) {
          swift_once();
        }
        uint64_t v39 = qword_5D5060;
        uint64_t v190 = static NLv4Transformer.logPrefix;
        OUTLINED_FUNCTION_76_10();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v190, v39, 0, (uint64_t)v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v216 = OUTLINED_FUNCTION_55_19();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v36, (os_log_type_t)v8, "%s user selects change, parse current request as confirmation=no", v38, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }

      static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(1, a4);
      goto LABEL_48;
    }
    (*(void (**)(void))(*(void *)a2 + 232))();
    UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)();
    if (v40)
    {
      Swift::Bool v191 = 0;
      int v41 = &outlined read-only object #0 of closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:);
    }
    else
    {
      Swift::Bool v191 = UserDialogActParse.isRedirectBusinessCall()();
      if (v191) {
        int v41 = &outlined read-only object #1 of closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:);
      }
      else {
        int v41 = _swiftEmptyArrayStorage;
      }
    }
    swift_retain();
    static UsoTask_CodegenConverter.convert(task:)();
    swift_release();
    uint64_t v202 = (uint64_t)v41;
    if (*((void *)&v217 + 1))
    {
      type metadata accessor for UsoTask_noVerb_uso_NoEntity();
      if (OUTLINED_FUNCTION_10_62())
      {
LABEL_33:
        swift_retain();
        dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
        swift_release();
        if ((void)v216)
        {
          swift_bridgeObjectRelease();
          static Transformer<>.findPositionReference(entity:referenceResolver:)(a3, (uint64_t)&v213);
          if ((void)v213 == 1)
          {
            outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult?);
            uint64_t v43 = v204;
          }
          else
          {
            long long v216 = v213;
            long long v217 = v214;
            long long v218 = v215;
            uint64_t v43 = v204;
            if ((void)v213)
            {
              uint64_t v54 = one-time initialization token for siriPhone;
              uint64_t v207 = v216;
              id v55 = (id)v213;
              if (v54 != -1) {
                swift_once();
              }
              uint64_t v56 = type metadata accessor for Logger();
              __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
              uint64_t v57 = v55;
              os_log_t v58 = Logger.logObject.getter();
              os_log_type_t v59 = static os_log_type_t.debug.getter();
              if (OUTLINED_FUNCTION_30_32(v59))
              {
                os_log_type_t v179 = v54;
                uint64_t v192 = v57;
                uint64_t v60 = OUTLINED_FUNCTION_11_7();
                uint64_t v183 = (void *)swift_slowAlloc();
                *(void *)&long long v210 = OUTLINED_FUNCTION_14_0();
                uint64_t v61 = (uint8_t *)v60;
                *(_DWORD *)uint64_t v60 = 136315394;
                if (one-time initialization token for logPrefix != -1) {
                  swift_once();
                }
                uint64_t v62 = qword_5D5060;
                uint64_t v177 = static NLv4Transformer.logPrefix;
                uint64_t v63 = qword_5D5068;
                uint64_t v64 = qword_5D5070;
                *(void *)&long long v213 = 0;
                *((void *)&v213 + 1) = 0xE000000000000000;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v177, v62, v63, v64);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)&long long v213 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v213, *((unint64_t *)&v213 + 1), (uint64_t *)&v210);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v60 + 12) = 2112;
                *(void *)&long long v213 = v192;
                uint64_t v65 = v192;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *uint64_t v183 = v207;

                uint64_t v57 = v192;
                _os_log_impl(&dword_0, v58, v179, "%s referenceResolution find a position reference for person:%@", v61, 0x16u);
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_6();
                swift_arrayDestroy();
                OUTLINED_FUNCTION_6();
                OUTLINED_FUNCTION_6();
              }
              else
              {
              }
              uint64_t v93 = type metadata accessor for PhoneCallNLv4Contact();
              swift_allocObject();
              uint64_t v94 = PhoneCallNLv4Contact.init()();
              *(void *)&long long v210 = v94;
              specialized SiriPhoneContact.update(person:)();
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SiriPhoneContact>);
              uint64_t v95 = swift_allocObject();
              *(_OWORD *)(v95 + 16) = xmmword_467710;
              *(void *)(v95 + 56) = v93;
              *(void *)(v95 + 64) = &protocol witness table for PhoneCallNLv4Contact;
              *(void *)(v95 + 32) = v94;
              *(void *)&long long v215 = 0;
              long long v213 = 0u;
              long long v214 = 0u;
              swift_release();

              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              outlined destroy of TransformerInput((uint64_t)&v216, (void (*)(void))type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
              outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
              uint64_t v96 = OUTLINED_FUNCTION_1_98();
              v97(v96);
              v204[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
              v204[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
              uint64_t v98 = OUTLINED_FUNCTION_58_22();
              OUTLINED_FUNCTION_44_25(v98);
              OUTLINED_FUNCTION_9_73();
              uint64_t v79 = &v213;
              LODWORD(v162) = v99;
              uint64_t v80 = v95;
              goto LABEL_79;
            }
            outlined init with copy of ConfirmationResponse?((uint64_t)&v216 + 8, (uint64_t)&v210, &demangling cache variable for type metadata for PhoneCallApp?);
            if (v211)
            {
              outlined init with take of AppSelectionSignalComponent(&v210, (uint64_t)&v213);
              if (one-time initialization token for siriPhone != -1) {
                swift_once();
              }
              uint64_t v81 = type metadata accessor for Logger();
              __swift_project_value_buffer(v81, (uint64_t)static Logger.siriPhone);
              _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
              char v82 = Logger.logObject.getter();
              os_log_type_t v83 = static os_log_type_t.debug.getter();
              if (OUTLINED_FUNCTION_30_32(v83))
              {
                os_log_type_t v199 = v8;
                uint64_t v208 = v82;
                uint64_t v84 = OUTLINED_FUNCTION_11_7();
                uint64_t v221 = OUTLINED_FUNCTION_10_0();
                *(_DWORD *)uint64_t v84 = 136315394;
                if (one-time initialization token for logPrefix != -1) {
                  swift_once();
                }
                uint64_t v85 = static NLv4Transformer.logPrefix;
                uint64_t v86 = qword_5D5060;
                uint64_t v88 = qword_5D5068;
                uint64_t v87 = qword_5D5070;
                uint64_t v219 = 0;
                unint64_t v220 = 0xE000000000000000;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v85, v86, v88, v87);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v219 = OUTLINED_FUNCTION_62_20(v219);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v84 + 12) = 2080;
                uint64_t v89 = v211;
                uint64_t v90 = v212;
                __swift_project_boxed_opaque_existential_1(&v210, v211);
                uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v89, v90);
                if (!v92) {
                  uint64_t v91 = 0;
                }
                uint64_t v219 = OUTLINED_FUNCTION_62_20(v91);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v210);
                _os_log_impl(&dword_0, v208, v199, "%s referenceResolution find a position reference for app:%s", (uint8_t *)v84, 0x16u);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_6();
                OUTLINED_FUNCTION_6();

                uint64_t v43 = v204;
              }
              else
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v210);
              }
              _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v213);
              outlined destroy of TransformerInput((uint64_t)&v216, (void (*)(void))type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
              outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
              uint64_t v103 = OUTLINED_FUNCTION_1_98();
              v104(v103);
              v43[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
              v43[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
              uint64_t v105 = OUTLINED_FUNCTION_58_22();
              OUTLINED_FUNCTION_44_25(v105);
              OUTLINED_FUNCTION_9_73();
              uint64_t v79 = &v210;
              goto LABEL_67;
            }
            outlined destroy of TransformerInput((uint64_t)&v216, (void (*)(void))type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
            outlined destroy of UUID?((uint64_t)&v210, &demangling cache variable for type metadata for PhoneCallApp?);
          }
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v44 = type metadata accessor for Logger();
          __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
          unint64_t v45 = Logger.logObject.getter();
          os_log_type_t v46 = static os_log_type_t.debug.getter();
          if (OUTLINED_FUNCTION_30_32(v46))
          {
            uint64_t v47 = (uint8_t *)OUTLINED_FUNCTION_47();
            *(void *)&long long v213 = OUTLINED_FUNCTION_14_0();
            *(_DWORD *)uint64_t v47 = 136315138;
            if (one-time initialization token for logPrefix != -1) {
              swift_once();
            }
            uint64_t v48 = qword_5D5060;
            uint64_t v187 = static NLv4Transformer.logPrefix;
            OUTLINED_FUNCTION_76_10();
            swift_bridgeObjectRetain();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v187, v48, 0, (uint64_t)v8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v49 = OUTLINED_FUNCTION_55_19();
            OUTLINED_FUNCTION_48_26(v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v45, (os_log_type_t)v8, "%s referenceResolution find a position reference but can't be resolved, return an empty NL intent", v47, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();

            uint64_t v43 = v204;
          }
          else
          {
          }
          *(void *)&long long v218 = 0;
          long long v216 = 0u;
          long long v217 = 0u;
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          uint64_t v73 = OUTLINED_FUNCTION_1_98();
          v74(v73);
          v43[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
          v43[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
          uint64_t v75 = OUTLINED_FUNCTION_58_22();
          OUTLINED_FUNCTION_44_25(v75);
          OUTLINED_FUNCTION_9_73();
          uint64_t v79 = &v216;
LABEL_67:
          LODWORD(v162) = v78;
          uint64_t v80 = v76;
LABEL_79:
          OUTLINED_FUNCTION_42_30(v76, v80, (uint64_t)v79, v77, v162, v163, v164);
LABEL_85:
          swift_release();
          goto LABEL_8;
        }
        swift_release();
LABEL_43:
        uint64_t v50 = OUTLINED_FUNCTION_32_24();
        char v195 = static Transformer<>.findNextVoicemailTask(usoTask:)(v50, (void (*)(void))&type metadata accessor for UsoTask_skipForward_uso_NoEntity);
        swift_release();
        if (v195)
        {
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v51 = v204;
          char v52 = 2;
LABEL_47:
          static Transformer<>.buildNLIntentByVoicemailVerb(phoneCallUsoTask:voiceMailVerb:)(v52, v51);
          swift_release();
LABEL_48:
          swift_release();
          swift_bridgeObjectRelease();
LABEL_98:
          outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          uint64_t v119 = OUTLINED_FUNCTION_1_98();
          v120(v119);
          goto LABEL_85;
        }
        uint64_t v53 = swift_retain();
        char v196 = static Transformer<>.findNextVoicemailTask(usoTask:)(v53, (void (*)(void))&type metadata accessor for UsoTask_repeat_uso_NoEntity);
        swift_release();
        if (v196)
        {
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v51 = v204;
          char v52 = 1;
          goto LABEL_47;
        }
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v66 = type metadata accessor for Logger();
        __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
        uint64_t v67 = Logger.logObject.getter();
        os_log_type_t v197 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v67, v197))
        {
          uint64_t v180 = v67;
          uint64_t v68 = (uint8_t *)OUTLINED_FUNCTION_47();
          *(void *)&long long v213 = OUTLINED_FUNCTION_14_0();
          id v188 = v68;
          *(_DWORD *)uint64_t v68 = 136315138;
          if (one-time initialization token for logPrefix != -1) {
            swift_once();
          }
          uint64_t v69 = qword_5D5060;
          uint64_t v70 = qword_5D5070;
          uint64_t v171 = qword_5D5068;
          uint64_t v174 = static NLv4Transformer.logPrefix;
          *(void *)&long long v216 = 0;
          *((void *)&v216 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v174, v69, v171, v70);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = OUTLINED_FUNCTION_55_19();
          OUTLINED_FUNCTION_48_26(v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v67 = v180;
          _os_log_impl(&dword_0, v180, v197, "%s ReferenceResolution can't find any item, proceeding to a regular check", v188, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }

        if (one-time initialization token for transformer != -1) {
          swift_once();
        }
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallAudioRoute?>);
        uint64_t v198 = (uint64_t *)OUTLINED_FUNCTION_11_66(v72, (uint64_t)static Transformer<>.transformer);
        *(void *)&long long v216 = v227;
        swift_retain();
        ((void (*)(long long *__return_ptr, long long *))v198)(&v213, &v216);
        swift_release();
        swift_release();
        int v189 = v213;
        if (one-time initialization token for transformer != -1) {
          swift_once();
        }
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallVerb?>);
        uint64_t v101 = (void (*)(void))OUTLINED_FUNCTION_11_66(v100, (uint64_t)static Transformer<>.transformer);
        OUTLINED_FUNCTION_64_9();
        OUTLINED_FUNCTION_60_17();
        v101();
        swift_release();
        swift_release();
        int v178 = v213;
        if (one-time initialization token for transformer != -1) {
          swift_once();
        }
        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, VoiceMail.VoiceMailVerb?>);
        uint64_t v181 = OUTLINED_FUNCTION_11_66(v102, (uint64_t)static Transformer<>.transformer);
        OUTLINED_FUNCTION_64_9();
        ((void (*)(long long *__return_ptr, long long *))v181)(&v213, &v216);
        swift_release();
        swift_release();
        int v106 = v213;
        if (v178 == 17 && v213 == 6)
        {
          swift_bridgeObjectRelease();
          type metadata accessor for TransformationError();
          lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
          uint64_t v110 = OUTLINED_FUNCTION_75_9();
          OUTLINED_FUNCTION_43_26(v110);
          _StringGuts.grow(_:)(77);
          if (one-time initialization token for logPrefix != -1) {
            swift_once();
          }
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(static NLv4Transformer.logPrefix, qword_5D5060, qword_5D5068, qword_5D5070);
          OUTLINED_FUNCTION_70_9((uint64_t)" UsoTask_CodegenConverter convert failed for USO Task: ");
          OUTLINED_FUNCTION_32_24();
          uint64_t v111 = UsoTask.verbString.getter();
          uint64_t v113 = v112;
          swift_release();
          v114._uint64_t countAndFlagsBits = v111;
          v114._object = v113;
          String.append(_:)(v114);
          swift_bridgeObjectRelease();
          v115._uint64_t countAndFlagsBits = 0xD000000000000012;
          v115._object = (void *)0x800000000049BE40;
          String.append(_:)(v115);
          uint64_t v116 = *((void *)&v216 + 1);
          *uint64_t v8 = v216;
          v8[1] = v116;
          OUTLINED_FUNCTION_10();
          uint64_t v117 = OUTLINED_FUNCTION_72_16();
          v118(v117);
          swift_willThrow();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_98;
        }
        swift_retain();
        static UsoTask_CodegenConverter.convert(task:)();
        swift_release();
        swift_retain();
        int v182 = v106;
        static Transformer<>.incomingCallTransformerOutput(phoneCallVerb:voicemailVerb:phoneCallUsoTask:audioRoute:)(v178, v106, (uint64_t)v198, v189, (uint64_t)&v213);
        swift_release();
        if (*((void *)&v214 + 1))
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          outlined destroy of UUID?((uint64_t)&v210, &demangling cache variable for type metadata for Any?);
          outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          uint64_t v108 = OUTLINED_FUNCTION_1_98();
          v109(v108);
          outlined init with take of AppSelectionSignalComponent(&v213, (uint64_t)&v216);
          outlined init with take of AppSelectionSignalComponent(&v216, (uint64_t)v204);
          goto LABEL_85;
        }
        uint64_t v121 = outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for PhoneCallNLIntent?);
        OUTLINED_FUNCTION_63_13(v121, v122, &demangling cache variable for type metadata for Any?);
        if (*((void *)&v217 + 1))
        {
          type metadata accessor for UsoTask_join_common_PhoneCall();
          uint64_t v123 = OUTLINED_FUNCTION_10_62();
          if (v123)
          {
            swift_bridgeObjectRelease();
            static NLv4JoinTransformer.transform(joinTask:)(v204);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
LABEL_147:
            outlined destroy of UUID?((uint64_t)&v210, &demangling cache variable for type metadata for Any?);
            goto LABEL_98;
          }
        }
        else
        {
          uint64_t v123 = outlined destroy of UUID?((uint64_t)&v216, &demangling cache variable for type metadata for Any?);
        }
        OUTLINED_FUNCTION_63_13(v123, v124, &demangling cache variable for type metadata for Any?);
        if (*((void *)&v217 + 1))
        {
          type metadata accessor for UsoTask_update_common_PhoneCall();
          uint64_t v125 = OUTLINED_FUNCTION_10_62();
          if (v125)
          {
            swift_bridgeObjectRelease();
            _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
            NLv4UpdateTransformer.transform(updateTask:)((unint64_t)v204);
LABEL_110:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            outlined destroy of NLv4UpdateTransformer((uint64_t)&v216);
            goto LABEL_147;
          }
        }
        else
        {
          uint64_t v125 = outlined destroy of UUID?((uint64_t)&v216, &demangling cache variable for type metadata for Any?);
        }
        OUTLINED_FUNCTION_63_13(v125, v126, &demangling cache variable for type metadata for Any?);
        if (*((void *)&v217 + 1))
        {
          type metadata accessor for UsoTask_update_common_Communication();
          uint64_t v127 = OUTLINED_FUNCTION_10_62();
          if (v127)
          {
            swift_bridgeObjectRelease();
            _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
            NLv4UpdateTransformer.transform(updateTask:)((unint64_t)v204);
            goto LABEL_110;
          }
        }
        else
        {
          uint64_t v127 = outlined destroy of UUID?((uint64_t)&v216, &demangling cache variable for type metadata for Any?);
        }
        if (v178 == 17)
        {
          swift_bridgeObjectRelease();
          type metadata accessor for TransformationError();
          lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
          uint64_t v129 = OUTLINED_FUNCTION_75_9();
          OUTLINED_FUNCTION_43_26(v129);
          _StringGuts.grow(_:)(83);
          if (one-time initialization token for logPrefix != -1) {
            swift_once();
          }
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(static NLv4Transformer.logPrefix, qword_5D5060, qword_5D5068, qword_5D5070);
          OUTLINED_FUNCTION_70_9((uint64_t)" UsoTask_CodegenConverter convert failed for USO Task: ");
          OUTLINED_FUNCTION_32_24();
          uint64_t v130 = UsoTask.verbString.getter();
          uint64_t v132 = v131;
          swift_release();
          v133._uint64_t countAndFlagsBits = v130;
          v133._object = v132;
          String.append(_:)(v133);
          swift_bridgeObjectRelease();
          v134._uint64_t countAndFlagsBits = 0xD000000000000018;
          v134._object = (void *)0x800000000049BE20;
          String.append(_:)(v134);
          uint64_t v135 = *((void *)&v216 + 1);
          *uint64_t v8 = v216;
          v8[1] = v135;
          OUTLINED_FUNCTION_10();
          uint64_t v136 = OUTLINED_FUNCTION_72_16();
          v137(v136);
          swift_willThrow();
          swift_release();
          swift_bridgeObjectRelease();
          outlined destroy of UUID?((uint64_t)&v210, &demangling cache variable for type metadata for Any?);
          goto LABEL_98;
        }
        OUTLINED_FUNCTION_63_13(v127, v128, &demangling cache variable for type metadata for Any?);
        if (*((void *)&v217 + 1))
        {
          type metadata accessor for UsoTask_noVerb_common_PhoneNumber();
          if (OUTLINED_FUNCTION_10_62())
          {
            uint64_t v200 = (uint64_t *)v213;
            if (one-time initialization token for transformer != -1) {
              swift_once();
            }
            uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask_noVerb_common_PhoneNumber, UsoTask?>);
            OUTLINED_FUNCTION_11_66(v138, (uint64_t)static Transformer<>.transformer);
            *(void *)&long long v216 = v200;
            OUTLINED_FUNCTION_60_17();
            v139();
            swift_release();
            if ((void)v213)
            {
              uint64_t v227 = v213;
              swift_retain();
              swift_release();
              id v140 = Logger.logObject.getter();
              os_log_type_t v170 = static os_log_type_t.debug.getter();
              uint64_t v175 = v140;
              if (os_log_type_enabled(v140, v170))
              {
                uint64_t v141 = OUTLINED_FUNCTION_11_7();
                *(void *)&long long v213 = OUTLINED_FUNCTION_10_0();
                *(_DWORD *)uint64_t v141 = 136315394;
                if (one-time initialization token for logPrefix != -1) {
                  swift_once();
                }
                uint64_t v142 = qword_5D5060;
                uint64_t v143 = qword_5D5070;
                uint64_t v165 = qword_5D5068;
                uint64_t v167 = static NLv4Transformer.logPrefix;
                *(void *)&long long v216 = 0;
                *((void *)&v216 + 1) = 0xE000000000000000;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v167, v142, v165, v143);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)&long long v216 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v216, *((unint64_t *)&v216 + 1), (uint64_t *)&v213);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v141 + 12) = 2080;
                swift_beginAccess();
                OUTLINED_FUNCTION_32_24();
                uint64_t v166 = UsoTask.description.getter();
                unint64_t v145 = v144;
                swift_release();
                *(void *)&long long v216 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v166, v145, (uint64_t *)&v213);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v175, v170, "%s Obtained a verbless phone number task and transformed to common call task: %s", (uint8_t *)v141, 0x16u);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_6();
                OUTLINED_FUNCTION_6();
                swift_release();
              }
              else
              {

                swift_release();
              }
            }
            swift_release();
          }
        }
        else
        {
          outlined destroy of UUID?((uint64_t)&v216, &demangling cache variable for type metadata for Any?);
        }
        _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
        uint64_t v146 = swift_allocObject();
        outlined init with take of AppSelectionSignalComponent(&v216, v146 + 16);
        *(unsigned char *)(v146 + 56) = v178;
        *(void *)(v146 + 64) = a2;
        *(unsigned char *)(v146 + 72) = v191;
        uint64_t v147 = type metadata accessor for UsoTask();
        swift_retain();
        Transformer.init(transform:)();
        id v148 = (void (*)(void))Transformer.transform.getter();
        swift_beginAccess();
        uint64_t v149 = v227;
        uint64_t v221 = v227;
        swift_retain();
        OUTLINED_FUNCTION_60_17();
        v148();
        if (v147)
        {
          swift_release();
          swift_release();
          uint64_t v150 = Logger.logObject.getter();
          os_log_type_t v184 = static os_log_type_t.error.getter();
          uint64_t v193 = v150;
          if (os_log_type_enabled(v150, v184))
          {
            uint64_t v151 = OUTLINED_FUNCTION_11_7();
            uint64_t v221 = OUTLINED_FUNCTION_10_0();
            *(_DWORD *)uint64_t v151 = 136315394;
            if (one-time initialization token for logPrefix != -1) {
              swift_once();
            }
            uint64_t v152 = qword_5D5060;
            uint64_t v172 = static NLv4Transformer.logPrefix;
            OUTLINED_FUNCTION_67_14();
            swift_bridgeObjectRetain();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v172, v152, v147, v149);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)&long long v216 = OUTLINED_FUNCTION_62_20(v216);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v151 + 12) = 2080;
            OUTLINED_FUNCTION_32_24();
            uint64_t v168 = UsoTask.baseEntityAsString.getter();
            unint64_t v154 = v153;
            swift_release();
            *(void *)&long long v216 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v168, v154, &v221);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v193, v184, "%s transformer cannot transform %s", (uint8_t *)v151, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
          }
          unint64_t v173 = 0;
          long long v176 = 0uLL;
          uint64_t v194 = 0;
          uint64_t v155 = _swiftEmptyArrayStorage;
        }
        else
        {
          swift_release();
          swift_release();
          unint64_t v173 = *((void *)&v216 + 1);
          uint64_t v155 = (void *)v216;
          long long v176 = v217;
          uint64_t v194 = v218;
          if (BYTE8(v218))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v156 = Logger.logObject.getter();
            os_log_type_t v203 = static os_log_type_t.debug.getter();
            v209 = v156;
            if (os_log_type_enabled(v156, v203))
            {
              uint64_t v157 = (uint8_t *)OUTLINED_FUNCTION_47();
              uint64_t v221 = OUTLINED_FUNCTION_14_0();
              *(_DWORD *)uint64_t v157 = 136315138;
              if (one-time initialization token for logPrefix != -1) {
                swift_once();
              }
              uint64_t v158 = qword_5D5060;
              uint64_t v185 = static NLv4Transformer.logPrefix;
              OUTLINED_FUNCTION_67_14();
              swift_bridgeObjectRetain();
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v185, v158, 0, v149);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)&long long v216 = OUTLINED_FUNCTION_62_20(v216);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v209, v203, "%s found change contact request, return NL as confirmation=no", v157, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_6();
            }
            else
            {
            }
            static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(1, v204);
            swift_release();
            goto LABEL_146;
          }
        }
        OUTLINED_FUNCTION_32_24();
        uint64_t v201 = UsoTask.convertToCommonPhoneCallEntity()();
        swift_release();
        swift_retain();
        uint64_t v186 = UsoTask.usoAssociatedApp.getter();
        swift_release();
        if (v201
          && (swift_retain(), uint64_t v159 = dispatch thunk of UsoEntity_common_PhoneCall.mode.getter(), swift_release(), v159))
        {
          UsoEntity_common_PhoneCallMode.phoneCallAVMode.getter();
          int v169 = v160;
          swift_release();
        }
        else
        {
          int v169 = 2;
        }
        v223[0] = (unint64_t)v155;
        v223[1] = v173;
        long long v224 = v176;
        v225 = v194;
        char v226 = 0;
        static Transformer<>.createNLIntent(app:phoneCallAVMode:phoneCallAttributes:targetContacts:commonPhoneCall:audioRoute:phoneCallVerb:voicemailVerb:referenceResolver:previousNLIntent:)(v186, v169, v202, v223, (unint64_t)v201, v189, v178, v182, v204, (uint64_t)a3, (uint64_t)v222);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_146:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, void *))(v205 + 8))(v13, v8);
        goto LABEL_147;
      }
    }
    else
    {
      outlined destroy of UUID?((uint64_t)&v216, &demangling cache variable for type metadata for Any?);
    }
    OUTLINED_FUNCTION_32_24();
    uint64_t v42 = static Transformer<>.convertPhoneCallPositionToNoVerbPosition(task:)();
    swift_release();
    if (!v42) {
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  uint64_t v22 = a4;
  char v23 = 0;
LABEL_7:
  static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(v23, v22);
  outlined destroy of UUID?((uint64_t)v222, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  uint64_t v24 = OUTLINED_FUNCTION_1_98();
  v25(v24);
LABEL_8:
  Signpost.OpenSignpost.end()();
  return swift_release();
}

void UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  int v134 = v4;
  uint64_t v144 = type metadata accessor for IdentifierNamespace();
  OUTLINED_FUNCTION_1();
  uint64_t v133 = v5;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v143 = v7;
  uint64_t v142 = type metadata accessor for Google_Protobuf_StringValue();
  OUTLINED_FUNCTION_1();
  uint64_t v132 = v8;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_3_1();
  uint64_t v141 = v10;
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier();
  OUTLINED_FUNCTION_1();
  int64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_5_8();
  uint64_t v146 = v15;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_5_17();
  uint64_t v147 = v17;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_17();
  id v140 = v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  uint64_t v137 = (char *)&v121 - v21;
  static Signpost.begin(_:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  LODWORD(v29) = v28;
  static UsoTask_CodegenConverter.convert(task:)();
  if (!v152)
  {
    outlined destroy of UUID?((uint64_t)&v150, &demangling cache variable for type metadata for Any?);
    goto LABEL_21;
  }
  type metadata accessor for UsoTask_call_common_PhoneCall();
  if (swift_dynamicCast())
  {
    uint64_t v128 = v3;
    uint64_t v30 = (uint8_t *)v153[0];
    swift_retain();
    dispatch thunk of Uso_VerbTemplate_Target.target.getter();
    swift_release();
    if (!v150)
    {
      swift_release();
      goto LABEL_21;
    }
    uint64_t v129 = v23;
    unint64_t v31 = dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter();
    swift_release();
    if (!v31)
    {
      swift_release();
      goto LABEL_143;
    }
    uint64_t v124 = v25;
    unint64_t v123 = v31 >> 62;
    if (v31 >> 62)
    {
LABEL_149:
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8));
    }
    uint64_t v126 = v27;
    int v131 = (int)v29;
    uint64_t v127 = v30;
    uint64_t v145 = v11;
    uint64_t v125 = v1;
    if (v32)
    {
      v153[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v32 < 0)
      {
        __break(1u);
        goto LABEL_151;
      }
      uint64_t v29 = 0;
      uint64_t v33 = (void *)v153[0];
      unint64_t v34 = v31 & 0xC000000000000001;
      do
      {
        if (v34) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        unint64_t v35 = v31;
        dispatch thunk of CodeGenListEntry.entry.getter();
        if (v150)
        {
          CodeGenBase.entity.getter();
          swift_release();
        }
        static UsoEntity_CodeGenConverter.convert(entity:)();
        swift_release();
        swift_release();
        v153[0] = (uint64_t)v33;
        unint64_t v36 = v33[2];
        if (v36 >= v33[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v33 = (void *)v153[0];
        }
        ++v29;
        v33[2] = v36 + 1;
        outlined init with take of AnnotatedApp?((uint64_t)&v150, (uint64_t)&v33[4 * v36 + 4], &demangling cache variable for type metadata for Any?);
        unint64_t v31 = v35;
      }
      while ((char *)v32 != v29);
      OUTLINED_FUNCTION_20_43();
      uint64_t v11 = v145;
    }
    else
    {
      uint64_t v33 = _swiftEmptyArrayStorage;
    }
    uint64_t v37 = v33[2];
    if (v37)
    {
      uint64_t v38 = (uint64_t)(v33 + 4);
      swift_bridgeObjectRetain();
      uint64_t v29 = (char *)&type metadata for Any + 8;
      do
      {
        outlined init with copy of ConfirmationResponse?(v38, (uint64_t)&v150, &demangling cache variable for type metadata for Any?);
        outlined init with copy of ConfirmationResponse?((uint64_t)&v150, (uint64_t)v153, &demangling cache variable for type metadata for Any?);
        if (v153[3])
        {
          type metadata accessor for UsoEntity_common_Group();
          if (swift_dynamicCast())
          {
            swift_release();
            outlined destroy of UUID?((uint64_t)&v150, &demangling cache variable for type metadata for Any?);
            OUTLINED_FUNCTION_24_38();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_37_30();
            goto LABEL_142;
          }
        }
        else
        {
          outlined destroy of UUID?((uint64_t)v153, &demangling cache variable for type metadata for Any?);
        }
        outlined destroy of UUID?((uint64_t)&v150, &demangling cache variable for type metadata for Any?);
        v38 += 32;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_20_43();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_retain();
    dispatch thunk of Uso_VerbTemplate_Target.target.getter();
    swift_release();
    uint64_t v39 = v125;
    if (v150)
    {
      swift_retain();
      uint64_t v40 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter();
      swift_release();
      if (v40)
      {
        UsoEntity_common_App.applicationId.getter();
        uint64_t v42 = v41;
        unint64_t v44 = v43;
        swift_release();
        if (v44)
        {
          swift_bridgeObjectRelease();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v45 = type metadata accessor for Logger();
          __swift_project_value_buffer(v45, (uint64_t)static Logger.siriPhone);
          swift_bridgeObjectRetain();
          os_log_type_t v46 = Logger.logObject.getter();
          os_log_type_t v47 = static os_log_type_t.debug.getter();
          os_log_type_enabled(v46, v47);
          OUTLINED_FUNCTION_45_22();
          if (v48)
          {
            uint64_t v147 = v42;
            uint64_t v49 = OUTLINED_FUNCTION_11_7();
            v153[0] = OUTLINED_FUNCTION_10_0();
            *(_DWORD *)uint64_t v49 = 136315394;
            if (one-time initialization token for logPrefix != -1) {
              swift_once();
            }
            uint64_t v50 = static NLv4Transformer.logPrefix;
            uint64_t v51 = unk_5D5060;
            uint64_t v150 = 0;
            unint64_t v151 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_50_21();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v50, v51, 0xD000000000000041, v52);
            swift_bridgeObjectRelease();
            uint64_t v150 = OUTLINED_FUNCTION_33_25();
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v49 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v147, v44, v153);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_0, v46, v47, "%s returning false. Found appID %s", (uint8_t *)v49, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_24_38();
            swift_release();

            goto LABEL_160;
          }

          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_145;
        }
      }
      swift_release();
    }
    uint64_t v53 = (uint64_t)v137;
    if (!v39)
    {
      uint64_t v30 = 0;
      goto LABEL_79;
    }
    unint64_t v122 = v31;
    uint64_t v54 = *(void *)(v39 + 16);
    if (!v54)
    {
      uint64_t v30 = 0;
      unint64_t v31 = v122;
      goto LABEL_79;
    }
    uint64_t v150 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v56 = *(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16);
    int64_t v55 = v13 + 16;
    uint64_t v138 = v56;
    unint64_t v57 = (*(unsigned __int8 *)(v55 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 64);
    uint64_t v139 = *(void *)(v55 + 56);
    unint64_t v135 = v57;
    unint64_t v58 = v39 + v57;
    int64_t v130 = v55 - 8;
    uint64_t v39 = v55 + 16;
    swift_bridgeObjectRetain_n();
    uint64_t v59 = v54;
    unint64_t v60 = v58;
    int64_t v136 = v55;
    do
    {
      v138(v53, v60, v11);
      if (closure #3 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)(v53))
      {
        uint64_t v61 = *(void (**)(void))v39;
        OUTLINED_FUNCTION_46_23();
        v61();
        uint64_t v62 = v150;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_49_22();
          uint64_t v62 = v150;
        }
        if (*(void *)(v62 + 16) >= *(void *)(v62 + 24) >> 1)
        {
          OUTLINED_FUNCTION_53_23();
          uint64_t v62 = v150;
        }
        OUTLINED_FUNCTION_68_13();
        uint64_t v63 = v139;
        uint64_t v11 = v145;
        OUTLINED_FUNCTION_46_23();
        v61();
        uint64_t v150 = v62;
        uint64_t v53 = (uint64_t)v137;
      }
      else
      {
        OUTLINED_FUNCTION_11();
        v64();
        uint64_t v63 = v139;
      }
      v60 += v63;
      --v59;
    }
    while (v59);
    uint64_t v121 = 0;
    swift_bridgeObjectRelease();
    v153[0] = v150;
    uint64_t v150 = (uint64_t)_swiftEmptyArrayStorage;
    id v140 = v132 + 1;
    LODWORD(v137) = enum case for IdentifierNamespace.nsPersonRelationship(_:);
    uint64_t v132 = (void (**)(uint64_t, void, uint64_t))(v133 + 104);
    uint64_t v65 = (void (**)(uint64_t, uint64_t))(v133 + 8);
    while (1)
    {
      v138(v147, v58, v11);
      Siri_Nlu_External_UsoEntityIdentifier.namespace.getter();
      uint64_t v66 = Google_Protobuf_StringValue.value.getter();
      uint64_t v68 = v67;
      OUTLINED_FUNCTION_11();
      v69();
      uint64_t v70 = v143;
      uint64_t v71 = v144;
      (*v132)(v143, v137, v144);
      uint64_t v72 = IdentifierNamespace.rawValue.getter();
      uint64_t v74 = v73;
      (*v65)(v70, v71);
      if (v66 == v72 && v68 == v74) {
        break;
      }
      char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v76) {
        goto LABEL_62;
      }
      uint64_t v11 = v145;
      OUTLINED_FUNCTION_11();
      v77();
      uint64_t v78 = v139;
LABEL_67:
      v58 += v78;
      if (!--v54)
      {
        swift_bridgeObjectRelease();
        specialized Array.append<A>(contentsOf:)(v150);
        LODWORD(v29) = v131;
        if (*(void *)(v153[0] + 16))
        {
          swift_bridgeObjectRelease();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v82 = type metadata accessor for Logger();
          __swift_project_value_buffer(v82, (uint64_t)static Logger.siriPhone);
          os_log_type_t v83 = Logger.logObject.getter();
          os_log_type_t v84 = static os_log_type_t.debug.getter();
          if (OUTLINED_FUNCTION_27_38(v84))
          {
            uint64_t v85 = OUTLINED_FUNCTION_11_7();
            v149[0] = OUTLINED_FUNCTION_10_0();
            OUTLINED_FUNCTION_65_13(4.8151e-34);
            if (one-time initialization token for logPrefix != -1) {
              swift_once();
            }
            OUTLINED_FUNCTION_25_39();
            OUTLINED_FUNCTION_6_85((uint64_t)"isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)");
            swift_bridgeObjectRelease();
            uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v150, v151, v149);
            OUTLINED_FUNCTION_19_40(v86);
            swift_bridgeObjectRelease();
            *(_WORD *)(v85 + 12) = 2080;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            uint64_t v87 = Array.description.getter();
            unint64_t v89 = v88;
            swift_bridgeObjectRelease();
            uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v87, v89, v149);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v83, (os_log_type_t)v58, "%s returning false. Found identifiers %s", (uint8_t *)v85, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_24_38();

            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_20_43();
          }
          else
          {

            swift_release();
            swift_bridgeObjectRelease();
          }
LABEL_147:
          OUTLINED_FUNCTION_37_30();
          goto LABEL_21;
        }
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_41_28();
        unint64_t v31 = v122;
        uint64_t v30 = v121;
LABEL_79:
        uint64_t v150 = (uint64_t)_swiftEmptyArrayStorage;
        if (v123)
        {
          swift_bridgeObjectRetain();
          int64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          int64_t v13 = *(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8));
          swift_bridgeObjectRetain();
        }
        if (!v13)
        {
          swift_bridgeObjectRelease();
          int64_t v13 = (int64_t)_swiftEmptyArrayStorage;
          goto LABEL_97;
        }
        if (v13 < 1)
        {
          __break(1u);
        }
        else
        {
          for (uint64_t i = 0; i != v13; ++i)
          {
            if ((v31 & 0xC000000000000001) != 0)
            {
              LODWORD(v29) = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v29 = *(char **)(v31 + 8 * i + 32);
              swift_retain();
            }
            dispatch thunk of CodeGenListEntry.entry.getter();
            if (v153[0])
            {
              uint64_t v91 = UsoEntity_common_Agent.asCommonPerson()();
              swift_release();
              swift_release();
              if (v91)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                uint64_t v29 = *(char **)((char *)&dword_10 + (v150 & 0xFFFFFFFFFFFFFF8));
                if ((unint64_t)v29 >= *(void *)((char *)&dword_18 + (v150 & 0xFFFFFFFFFFFFFF8)) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
            }
            else
            {
              swift_release();
            }
          }
          swift_bridgeObjectRelease();
          int64_t v13 = v150;
          OUTLINED_FUNCTION_20_43();
LABEL_97:
          swift_bridgeObjectRelease();
          uint64_t v39 = (unint64_t)v13 >> 62;
          if ((v134 & 1) == 0)
          {
            OUTLINED_FUNCTION_45_22();
            goto LABEL_120;
          }
          OUTLINED_FUNCTION_45_22();
          if (!v39)
          {
            uint64_t v92 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain();
            if (v92) {
              goto LABEL_100;
            }
LABEL_119:
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_20_43();
LABEL_120:
            if (!v39)
            {
              uint64_t v104 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
              swift_bridgeObjectRetain();
              if (v104)
              {
LABEL_122:
                uint64_t v27 = 4;
                while (1)
                {
                  if ((v13 & 0xC000000000000001) != 0)
                  {
                    uint64_t v1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    uint64_t v1 = *(void *)(v13 + 8 * v27);
                    swift_retain();
                  }
                  uint64_t v11 = v27 - 3;
                  if (__OFADD__(v27 - 4, 1))
                  {
                    __break(1u);
                    goto LABEL_149;
                  }
                  if (dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter()
                    && (dispatch thunk of UsoEntity_common_ContactAddress.value.getter(),
                        uint64_t v29 = v105,
                        swift_release(),
                        swift_bridgeObjectRelease(),
                        v29))
                  {
                    uint64_t v106 = dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter();
                    if (v106)
                    {
                      LODWORD(v29) = v106;
                      CodeGenBase.entity.getter();
                      swift_release();
                    }
                    OUTLINED_FUNCTION_20_43();
                    type metadata accessor for UsoEntity_common_PostalAddress();
                    static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
                    swift_release();
                    uint64_t v107 = v150;
                    swift_release();
                    swift_release();
                    if (!v107)
                    {
                      swift_bridgeObjectRelease_n();
                      if (one-time initialization token for siriPhone != -1) {
                        swift_once();
                      }
                      uint64_t v110 = type metadata accessor for Logger();
                      __swift_project_value_buffer(v110, (uint64_t)static Logger.siriPhone);
                      uint64_t v95 = Logger.logObject.getter();
                      os_log_type_t v111 = static os_log_type_t.debug.getter();
                      OUTLINED_FUNCTION_27_38(v111);
                      OUTLINED_FUNCTION_41_28();
                      if (!v112)
                      {

                        OUTLINED_FUNCTION_24_38();
                        goto LABEL_147;
                      }
                      swift_slowAlloc();
                      v153[0] = OUTLINED_FUNCTION_11_29();
                      OUTLINED_FUNCTION_65_13(4.8149e-34);
                      if (one-time initialization token for logPrefix != -1) {
                        swift_once();
                      }
                      OUTLINED_FUNCTION_25_39();
                      OUTLINED_FUNCTION_6_85((uint64_t)"isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)");
                      swift_bridgeObjectRelease();
                      uint64_t v113 = OUTLINED_FUNCTION_33_25();
                      OUTLINED_FUNCTION_19_40(v113);
                      swift_bridgeObjectRelease();
                      os_log_type_t v99 = v104;
                      uint64_t v100 = "%s returning false. Found common_Person with common_ContactAddress value that is NOT a comm"
                             "on_PostalAddress";
LABEL_141:
                      _os_log_impl(&dword_0, v95, v99, v100, v30, 0xCu);
                      swift_arrayDestroy();
                      OUTLINED_FUNCTION_6();
                      OUTLINED_FUNCTION_6();
                      OUTLINED_FUNCTION_24_38();

                      OUTLINED_FUNCTION_37_30();
                      OUTLINED_FUNCTION_41_28();
LABEL_142:
                      OUTLINED_FUNCTION_20_43();
LABEL_143:
                      OUTLINED_FUNCTION_45_22();
                      goto LABEL_21;
                    }
                  }
                  else
                  {
                    swift_release();
                    OUTLINED_FUNCTION_20_43();
                  }
                  ++v27;
                  if (v11 == v104)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v108 = _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
                    __chkstk_darwin(v108);
                    *(&v121 - 2) = (uint8_t *)&v150;
                    char v109 = specialized Sequence.allSatisfy(_:)((uint64_t (*)(uint64_t *))partial apply for closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:), (uint64_t)(&v121 - 4), v13);
                    swift_bridgeObjectRelease();
                    OUTLINED_FUNCTION_41_28();
                    goto LABEL_154;
                  }
                }
              }
LABEL_153:
              swift_bridgeObjectRelease();
              _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
              swift_bridgeObjectRelease();
              char v109 = 0;
LABEL_154:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v150);
              if (one-time initialization token for siriPhone != -1) {
                swift_once();
              }
              uint64_t v114 = type metadata accessor for Logger();
              __swift_project_value_buffer(v114, (uint64_t)static Logger.siriPhone);
              Swift::String v115 = Logger.logObject.getter();
              os_log_type_t v116 = static os_log_type_t.debug.getter();
              if (!os_log_type_enabled(v115, v116))
              {

                OUTLINED_FUNCTION_24_38();
                goto LABEL_21;
              }
              uint64_t v117 = swift_slowAlloc();
              v153[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v117 = 136315394;
              if (one-time initialization token for logPrefix != -1) {
                swift_once();
              }
              uint64_t v118 = static NLv4Transformer.logPrefix;
              uint64_t v119 = unk_5D5060;
              uint64_t v150 = 0;
              unint64_t v151 = 0xE000000000000000;
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_50_21();
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v118, v119, 0xD000000000000041, v120);
              swift_bridgeObjectRelease();
              uint64_t v150 = OUTLINED_FUNCTION_33_25();
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v117 + 12) = 1024;
              LODWORD(v150) = v109 & 1;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl(&dword_0, v115, v116, "%s returning %{BOOL}d.", (uint8_t *)v117, 0x12u);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_24_38();

LABEL_160:
              OUTLINED_FUNCTION_45_22();
              OUTLINED_FUNCTION_41_28();
LABEL_161:
              OUTLINED_FUNCTION_20_43();
              goto LABEL_21;
            }
LABEL_152:
            swift_bridgeObjectRetain();
            uint64_t v104 = _CocoaArrayWrapper.endIndex.getter();
            if (v104) {
              goto LABEL_122;
            }
            goto LABEL_153;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
        if (!v92) {
          goto LABEL_119;
        }
LABEL_100:
        uint64_t v29 = (char *)(v13 & 0xC000000000000001);
        if ((v13 & 0xC000000000000001) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        char v93 = specialized UsoContactConvertible.isNameLikelyNonBusiness()();
        swift_release();
        if (v93)
        {
LABEL_103:
          swift_bridgeObjectRelease_n();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v94 = type metadata accessor for Logger();
          __swift_project_value_buffer(v94, (uint64_t)static Logger.siriPhone);
          uint64_t v95 = Logger.logObject.getter();
          os_log_type_t v96 = static os_log_type_t.debug.getter();
          OUTLINED_FUNCTION_27_38(v96);
          OUTLINED_FUNCTION_41_28();
          if (v97)
          {
            swift_slowAlloc();
            v153[0] = OUTLINED_FUNCTION_11_29();
            OUTLINED_FUNCTION_65_13(4.8149e-34);
            if (one-time initialization token for logPrefix != -1) {
              swift_once();
            }
            OUTLINED_FUNCTION_25_39();
            OUTLINED_FUNCTION_6_85((uint64_t)"isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)");
            swift_bridgeObjectRelease();
            uint64_t v98 = OUTLINED_FUNCTION_33_25();
            OUTLINED_FUNCTION_19_40(v98);
            swift_bridgeObjectRelease();
            os_log_type_t v99 = v92;
            uint64_t v100 = "%s returning false. Likely non business call due to entity span matches";
            goto LABEL_141;
          }

LABEL_145:
          OUTLINED_FUNCTION_24_38();
          OUTLINED_FUNCTION_37_30();
          goto LABEL_161;
        }
        if (v92 == 1) {
          goto LABEL_119;
        }
        uint64_t v101 = 5;
        while (1)
        {
          if (v29) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          uint64_t v102 = v101 - 3;
          if (__OFADD__(v101 - 4, 1)) {
            break;
          }
          char v103 = specialized UsoContactConvertible.isNameLikelyNonBusiness()();
          swift_release();
          if (v103) {
            goto LABEL_103;
          }
          ++v101;
          if (v102 == v92) {
            goto LABEL_119;
          }
        }
LABEL_151:
        __break(1u);
        goto LABEL_152;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_62:
    uint64_t v79 = *(void (**)(void))v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))v39)(v146, v147, v145);
    uint64_t v80 = v150;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = v139;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_49_22();
      uint64_t v80 = v150;
    }
    if (*(void *)(v80 + 16) >= *(void *)(v80 + 24) >> 1)
    {
      OUTLINED_FUNCTION_53_23();
      uint64_t v80 = v150;
    }
    OUTLINED_FUNCTION_68_13();
    uint64_t v11 = v145;
    OUTLINED_FUNCTION_46_23();
    v79();
    uint64_t v150 = v80;
    goto LABEL_67;
  }
LABEL_21:
  Signpost.OpenSignpost.end()();
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

Swift::Bool __swiftcall UserDialogActParse.isRedirectBusinessCall()()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v56 = type metadata accessor for Google_Protobuf_StringValue();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v55 = v6;
  uint64_t v7 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier();
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_8();
  uint64_t v59 = v9;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_46_11();
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - v13;
  if (!v2) {
    goto LABEL_27;
  }
  uint64_t v15 = *(void *)(v2 + 16);
  if (!v15) {
    goto LABEL_27;
  }
  uint64_t v17 = *(void *)(v12 + 16);
  uint64_t v16 = v12 + 16;
  uint64_t v60 = v17;
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
  uint64_t v52 = *(void *)(v16 + 56);
  unint64_t v49 = v18;
  uint64_t v19 = v2 + v18;
  uint64_t v54 = v4 + 8;
  uint64_t v20 = (uint8_t *)(v16 - 8);
  uint64_t v61 = v16;
  uint64_t v62 = _swiftEmptyArrayStorage;
  unint64_t v57 = (void (**)(uint64_t, char *, uint64_t))(v16 + 16);
  uint64_t v47 = v2;
  swift_bridgeObjectRetain();
  uint64_t v53 = "";
  unint64_t v58 = 0xD000000000000016;
  uint64_t v50 = "ndleSet";
  unint64_t v51 = 0x8000000000490C60;
  unint64_t v48 = 0x8000000000497050;
  do
  {
    OUTLINED_FUNCTION_36_31();
    v21();
    LOBYTE(v22) = v55;
    Siri_Nlu_External_UsoEntityIdentifier.namespace.getter();
    uint64_t v23 = Google_Protobuf_StringValue.value.getter();
    uint64_t v25 = v24;
    OUTLINED_FUNCTION_11();
    v26();
    if (v23 == 0xD000000000000018 && v25 == v51)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_36_31();
      v27();
    }
    else
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_36_31();
      v29();
      if ((v28 & 1) == 0)
      {
        unint64_t v34 = *(void (**)(char *, uint64_t))v20;
        (*(void (**)(uint64_t, uint64_t))v20)(v0, v7);
LABEL_18:
        v34(v14, v7);
        uint64_t v38 = v52;
        goto LABEL_19;
      }
    }
    if (Siri_Nlu_External_UsoEntityIdentifier.backingAppBundleID.getter() == v58 && v30 == v48)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = OUTLINED_FUNCTION_59_17();
      v32(v31);
    }
    else
    {
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t v34 = *(void (**)(char *, uint64_t))v20;
      uint64_t v35 = OUTLINED_FUNCTION_59_17();
      ((void (*)(uint64_t))v34)(v35);
      if ((v33 & 1) == 0) {
        goto LABEL_18;
      }
    }
    unint64_t v36 = *v57;
    (*v57)((uint64_t)v59, v14, v7);
    uint64_t v37 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v37 = v62;
    }
    unint64_t v22 = v37[2];
    if (v22 >= v37[3] >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v37 = v62;
    }
    v37[2] = v22 + 1;
    uint64_t v38 = v52;
    v36((uint64_t)v37 + v49 + v22 * v52, v59, v7);
    uint64_t v62 = v37;
LABEL_19:
    v19 += v38;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  uint64_t v39 = v62[2];
  swift_release();
  if (v39)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_27_38(v42))
    {
      swift_slowAlloc();
      uint64_t v64 = OUTLINED_FUNCTION_11_29();
      OUTLINED_FUNCTION_65_13(4.8149e-34);
      if (one-time initialization token for logPrefix != -1) {
        swift_once();
      }
      uint64_t v43 = static NLv4Transformer.logPrefix;
      uint64_t v44 = unk_5D5060;
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_50_21();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v43, v44, 0xD000000000000018, v45);
      swift_bridgeObjectRelease();
      uint64_t v62 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v62, v63, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v41, (os_log_type_t)v22, "%s returning true. Found identifiers for redirect business call", v20, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
  }
LABEL_27:
  OUTLINED_FUNCTION_26_1();
  return result;
}

uint64_t static Transformer<>.createNLIntent(app:phoneCallAVMode:phoneCallAttributes:targetContacts:commonPhoneCall:audioRoute:phoneCallVerb:voicemailVerb:referenceResolver:previousNLIntent:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, unint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  void (*v29)(long long *__return_ptr, long long *);
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  PhoneCallFlowDelegatePlugin::ContactSourceType_optional v44;
  uint64_t v45;
  unint64_t *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  int v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  unint64_t *v81;
  long long v82;
  long long v83;
  _UNKNOWN **v84;
  long long v85;
  uint64_t v86;
  uint64_t v87;
  _UNKNOWN **v88;
  char v89;
  uint64_t v90;
  char v91;
  int v92;
  __int16 v93;
  char v94;
  char v95;
  char v96;
  uint64_t v97;
  void *v98;
  unint64_t v99;
  char v100[8];
  char v101[8];
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;

  uint64_t v74 = a8;
  uint64_t v73 = a7;
  uint64_t v72 = a6;
  uint64_t v79 = a3;
  uint64_t v71 = a2;
  uint64_t v70 = a1;
  uint64_t v80 = a9;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_PhoneCall?, [SiriPhoneContact]>);
  unint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v78 = v18;
  uint64_t v77 = v19;
  char v76 = v20;
  uint64_t v75 = v21;
  if (a5 && (uint64_t v22 = dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter()) != 0)
  {
    unint64_t v23 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v81 = a4;
  *(void *)&uint64_t v85 = _swiftEmptyArrayStorage;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    if (v24) {
      goto LABEL_7;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v27 = _swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  uint64_t v24 = *(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v24) {
    goto LABEL_21;
  }
LABEL_7:
  if (v24 < 1)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v69 = a5;
  for (uint64_t i = 0; i != v24; ++i)
  {
    if ((v23 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    dispatch thunk of CodeGenListEntry.entry.getter();
    if ((void)v82)
    {
      uint64_t v26 = UsoEntity_common_Agent.asCommonGroup()();
      swift_release();
      swift_release();
      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v85 & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)v85;
  a5 = v69;
LABEL_22:
  swift_bridgeObjectRelease();
  os_log_type_t v99 = (unint64_t)v27;
  uint64_t v11 = v81;
  unint64_t v23 = v81[3];
  if (!v23) {
    goto LABEL_33;
  }
  if (v23 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_25:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v23 & 0xC000000000000001) == 0, v23);
      if ((v23 & 0xC000000000000001) == 0)
      {
        swift_retain();
        goto LABEL_27;
      }
      goto LABEL_88;
    }
    goto LABEL_32;
  }
  uint64_t v28 = *(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (v28) {
    goto LABEL_25;
  }
LABEL_32:
  swift_bridgeObjectRelease();
LABEL_33:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCall?);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  Transformer.init(transform:)();
  uint64_t v29 = (void (*)(long long *__return_ptr, long long *))Transformer.transform.getter();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v15 += 8;
  v30(v17, v14);
  *(void *)&uint64_t v85 = a5;
  v29(&v82, &v85);
  swift_release();
  uint64_t v31 = v82;
  uint64_t v102 = *v11;
  uint64_t v14 = v102;
  if (!(v102 >> 62))
  {
    uint64_t v17 = *(void *)((char *)&dword_10 + (v102 & 0xFFFFFFFFFFFFFF8));
    goto LABEL_35;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    outlined release of Set<String>((uint64_t)&v102);
    if (v17 < 0)
    {
      __break(1u);
LABEL_88:
      specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_27:
      swift_bridgeObjectRelease();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + (v99 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                     + (v99 & 0xFFFFFFFFFFFFFF8)) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
      goto LABEL_33;
    }
LABEL_35:
    if (!v17) {
      break;
    }
    uint64_t v32 = 0;
    char v33 = 0;
    unint64_t v15 = v14 & 0xC000000000000001;
    while (1)
    {
      if (v33 >= *(void *)(v31 + 16))
      {
        unint64_t v34 = type metadata accessor for PhoneCallNLv4Contact();
        swift_allocObject();
        uint64_t v35 = PhoneCallNLv4Contact.init()();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v31 + 16) + 1, 1, v31);
          uint64_t v31 = v40;
        }
        a5 = *(void *)(v31 + 16);
        unint64_t v36 = *(void *)(v31 + 24);
        uint64_t v11 = (unint64_t *)(a5 + 1);
        if (a5 >= v36 >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, a5 + 1, 1, v31);
          uint64_t v31 = v41;
        }
        uint64_t v87 = v34;
        unint64_t v88 = &protocol witness table for PhoneCallNLv4Contact;
        *(void *)&uint64_t v85 = v35;
        *(void *)(v31 + 16) = v11;
        outlined init with take of AppSelectionSignalComponent(&v85, v31 + 40 * a5 + 32);
      }
      if (v15) {
        uint64_t v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v37 = *(id *)(v14 + 8 * v33 + 32);
      }
      uint64_t v38 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v31);
        uint64_t v31 = v39;
      }
      if (v33 >= *(void *)(v31 + 16)) {
        break;
      }
      ++v33;
      uint64_t v11 = *(unint64_t **)(v31 + v32 + 64);
      __swift_mutable_project_boxed_opaque_existential_1(v31 + v32 + 32, *(void *)(v31 + v32 + 56));
      SiriPhoneContact.update(person:)((INPerson)v38);

      v32 += 40;
      if (v17 == v33) {
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_85:
    __break(1u);
  }
LABEL_50:
  if (*(void *)(v31 + 16))
  {
    os_log_type_t v42 = v81;
  }
  else
  {
    os_log_type_t v42 = v81;
    outlined init with take of AnnotatedApp?((uint64_t)(v81 + 2), (uint64_t)v101, &demangling cache variable for type metadata for [ContactQuery]?);
    outlined init with take of AnnotatedApp?((uint64_t)v101, (uint64_t)&v103, &demangling cache variable for type metadata for [ContactQuery]?);
    if (v103 && *(void *)(v103 + 16) == 1)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v50 = type metadata accessor for Logger();
      __swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
      unint64_t v51 = Logger.logObject.getter();
      uint64_t v52 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v51, (os_log_type_t)v52))
      {
        LODWORD(v69) = v52;
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        *(void *)&uint64_t v82 = swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 136315138;
        if (one-time initialization token for logPrefix != -1) {
          swift_once();
        }
        uint64_t v54 = static NLv4Transformer.logPrefix;
        uint64_t v14 = unk_5D5060;
        uint64_t v55 = qword_5D5068;
        uint64_t v56 = unk_5D5070;
        *(void *)&uint64_t v85 = 0;
        *((void *)&v85 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v54, v14, v55, v56);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, *((unint64_t *)&v85 + 1), (uint64_t *)&v82);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v51, (os_log_type_t)v69, "%s add an dummy contact to align with its contactQuery size", v53, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        os_log_type_t v42 = v81;
      }
      else
      {
      }
      uint64_t v62 = type metadata accessor for PhoneCallNLv4Contact();
      swift_allocObject();
      unint64_t v63 = PhoneCallNLv4Contact.init()();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v31 + 16) + 1, 1, v31);
        uint64_t v31 = v66;
      }
      uint64_t v65 = *(void *)(v31 + 16);
      uint64_t v64 = *(void *)(v31 + 24);
      if (v65 >= v64 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1, v31);
        uint64_t v31 = v67;
      }
      uint64_t v87 = v62;
      unint64_t v88 = &protocol witness table for PhoneCallNLv4Contact;
      *(void *)&uint64_t v85 = v63;
      *(void *)(v31 + 16) = v65 + 1;
      outlined init with take of AppSelectionSignalComponent(&v85, v31 + 40 * v65 + 32);
    }
  }
  outlined init with take of AnnotatedApp?((uint64_t)(v42 + 1), (uint64_t)v100, &demangling cache variable for type metadata for [ContactSourceType]?);
  outlined init with take of AnnotatedApp?((uint64_t)v100, (uint64_t)&v104, &demangling cache variable for type metadata for [ContactSourceType]?);
  if (v104)
  {
    uint64_t v11 = *(unint64_t **)(v104 + 16);
    if (v11)
    {
      if (v11 == *(unint64_t **)(v31 + 16))
      {
        uint64_t v43 = 0;
        unint64_t v15 = 0;
        a5 = v104 + 32;
        do
        {
          v44.value = *(unsigned char *)(a5 + v15);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew()(v31);
            uint64_t v31 = v45;
          }
          if (v15 >= *(void *)(v31 + 16)) {
            goto LABEL_85;
          }
          ++v15;
          __swift_mutable_project_boxed_opaque_existential_1(v31 + v43 + 32, *(void *)(v31 + v43 + 56));
          SiriPhoneContact.update(contactSource:)(v44);
          v43 += 40;
        }
        while (v11 != (unint64_t *)v15);
      }
    }
  }
  os_log_type_t v46 = v81;
  uint64_t v47 = (void *)v81[2];
  unint64_t v48 = v70;
  if (v70)
  {
    unint64_t v49 = type metadata accessor for UsoEntity_common_App();
    os_log_type_t v84 = &protocol witness table for UsoEntity_common_App;
    *((void *)&v83 + 1) = v49;
    *(void *)&uint64_t v82 = v48;
  }
  else
  {
    os_log_type_t v84 = 0;
    os_log_type_t v83 = 0u;
    uint64_t v82 = 0u;
  }
  if (v47) {
    unint64_t v57 = v47;
  }
  else {
    unint64_t v57 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  specialized _arrayForceCast<A, B>(_:)();
  uint64_t v59 = v58;
  swift_bridgeObjectRelease();
  if (v46[4]) {
    uint64_t v60 = (void *)v46[4];
  }
  else {
    uint64_t v60 = _swiftEmptyArrayStorage;
  }
  *(void *)&uint64_t v85 = v57;
  *((void *)&v85 + 1) = v31;
  outlined init with take of AnnotatedApp?((uint64_t)&v82, (uint64_t)&v86, &demangling cache variable for type metadata for PhoneCallApp?);
  unint64_t v89 = v71;
  uint64_t v90 = v79;
  uint64_t v91 = v72;
  uint64_t v92 = 151323906;
  char v93 = 8963;
  uint64_t v94 = v73;
  uint64_t v95 = v74;
  os_log_type_t v96 = 2;
  int v97 = v59;
  uint64_t v98 = v60;
  *((void *)&v83 + 1) = &type metadata for PhoneCallNLv4Intent;
  os_log_type_t v84 = &protocol witness table for PhoneCallNLv4Intent;
  *(void *)&uint64_t v82 = swift_allocObject();
  outlined init with copy of PhoneCallNLv4Intent((uint64_t)&v85, v82 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static PhoneCallNLv4Intent.getMergedNLIntent(previousNLIntent:currentNLIntent:)(a11, &v82, v80);
  outlined destroy of PhoneCallNLv4Intent((uint64_t)&v85);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  Signpost.OpenSignpost.end()();
  return swift_release();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v21[2] = a2;
  uint64_t v3 = type metadata accessor for Parse();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a1 + 8);
  static Signpost.begin(_:)();
  v21[0] = v9;
  v21[1] = v8;
  uint64_t ObjectType = swift_getObjectType();
  char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(ObjectType, v7);
  if (FollowUpOfferType.rawValue.getter(v11) == 0xD000000000000011 && v12 == 0x800000000048DCD0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      type metadata accessor for UsoTaskBuilder_call_common_PhoneCall();
      swift_allocObject();
      uint64_t v14 = UsoTaskBuilder_call_common_PhoneCall.init()();
      goto LABEL_7;
    }
  }
  type metadata accessor for UsoTaskBuilder_callback_common_PhoneCall();
  swift_allocObject();
  uint64_t v14 = UsoTaskBuilder_callback_common_PhoneCall.init()();
LABEL_7:
  uint64_t v15 = v14;
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for USOSerializedGraph);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_46A030;
  *(void *)(v16 + 32) = v15;
  v21[5] = v16;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v17 = (void *)static USOSerializedGraph.fromTaskBuilders(_:)();
  swift_bridgeObjectRelease();
  id v18 = [objc_allocWithZone((Class)SIRINLUUserStatedTask) initWithTask:v17];
  *uint64_t v6 = v18;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for Parse.NLv4IntentOnly(_:), v3);
  id v19 = v18;
  Input.init(parse:)();

  swift_release();
  Signpost.OpenSignpost.end()();
  return swift_release();
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 8))
  {
    uint64_t v7 = [objc_allocWithZone((Class)NSPersonNameComponentsFormatter) init];
    uint64_t v8 = String._bridgeToObjectiveC()();
    uint64_t v9 = [v7 personNameComponentsFromString:v8];

    if (v9)
    {
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = type metadata accessor for PersonNameComponents();
      char v11 = 0;
    }
    else
    {
      uint64_t v10 = type metadata accessor for PersonNameComponents();
      char v11 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v6, v11, 1, v10);
    return outlined init with take of AnnotatedApp?((uint64_t)v6, a2, &demangling cache variable for type metadata for PersonNameComponents?);
  }
  else
  {
    uint64_t v12 = type metadata accessor for PersonNameComponents();
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v12);
  }
}

uint64_t static Transformer<>.transformer.getter@<X0>(uint64_t a1@<X8>)
{
  return static Transformer<>.transformer.getter(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<IncomingCallIntentResponse, Input>, (uint64_t)static Transformer<>.transformer, a1);
}

{
  return static Transformer<>.transformer.getter(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>, (uint64_t)static Transformer<>.transformer, a1);
}

{
  return static Transformer<>.transformer.getter(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallAudioRoute?>, (uint64_t)static Transformer<>.transformer, a1);
}

{
  return static Transformer<>.transformer.getter(&one-time initialization token for transformer, &demangling cache variable for type metadata for Transformer<UsoTask_noVerb_common_PhoneNumber, UsoTask?>, (uint64_t)static Transformer<>.transformer, a1);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UsoGraph();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Siri_Nlu_External_UserStatedTask();
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v11 = v10;
  uint64_t v66 = v12;
  uint64_t v67 = v13;
  int v65 = v14;
  if ((Siri_Nlu_External_UserDialogAct.hasUserStatedTask.getter() & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v62 = v11;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once();
      }
      uint64_t v29 = static NLv4Transformer.logPrefix;
      uint64_t v30 = unk_5D5060;
      uint64_t v31 = qword_5D5068;
      uint64_t v32 = unk_5D5070;
      uint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v29, v30, v31, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v26, v27, "%s does NOT have UserStatedTask", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v41 = type metadata accessor for TransformationError();
    lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
    swift_allocError();
    *os_log_type_t v42 = 0xD00000000000002DLL;
    v42[1] = 0x800000000049BE80;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v42, enum case for TransformationError.cannotTransform(_:), v41);
    swift_willThrow();
    goto LABEL_34;
  }
  Siri_Nlu_External_UserDialogAct.userStatedTask.getter();
  if ((Siri_Nlu_External_UserStatedTask.hasTask.getter() & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    unint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v62 = v11;
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v70 = v61;
      *(_DWORD *)unint64_t v36 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once();
      }
      uint64_t v37 = static NLv4Transformer.logPrefix;
      uint64_t v38 = unk_5D5060;
      uint64_t v40 = qword_5D5068;
      uint64_t v39 = unk_5D5070;
      uint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v37, v38, v40, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v34, v35, "%s userDialogAct.userStatedTask has no task UsoGraph", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v43 = type metadata accessor for TransformationError();
    lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
    swift_allocError();
    uint64_t v45 = v44;
    unint64_t v46 = 0xD000000000000042;
    uint64_t v47 = "#NLv4Transformer userDialogAct.userStatedTask has no task UsoGraph";
    goto LABEL_33;
  }
  uint64_t v62 = v11;
  Siri_Nlu_External_UserStatedTask.task.getter();
  uint64_t v15 = Siri_Nlu_External_UsoGraph.identifiers.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  unint64_t v16 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)();
  if (v1)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v70 = v61;
      *(_DWORD *)uint64_t v20 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once();
      }
      uint64_t v21 = static NLv4Transformer.logPrefix;
      uint64_t v22 = unk_5D5060;
      uint64_t v24 = qword_5D5068;
      uint64_t v23 = unk_5D5070;
      uint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v21, v22, v24, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v18, v19, "%s could not convert user dialog act to task", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v43 = type metadata accessor for TransformationError();
    lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
    swift_allocError();
    uint64_t v45 = v44;
    unint64_t v46 = 0xD00000000000003ALL;
    uint64_t v47 = "#NLv4Transformer Could not convert user dialog act to task";
LABEL_33:
    *uint64_t v44 = v46;
    v44[1] = (unint64_t)(v47 - 32) | 0x8000000000000000;
    (*(void (**)(unint64_t *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, enum case for TransformationError.cannotTransform(_:), v43);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v64);
LABEL_34:
    Signpost.OpenSignpost.end()();
    return swift_release();
  }
  unint64_t v48 = v16;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_28;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v70 = v61;
      *(_DWORD *)uint64_t v55 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once();
      }
      uint64_t v56 = static NLv4Transformer.logPrefix;
      uint64_t v57 = unk_5D5060;
      uint64_t v59 = qword_5D5068;
      uint64_t v58 = unk_5D5070;
      uint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v56, v57, v59, v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v53, v54, "%s no tasks found in input", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v43 = type metadata accessor for TransformationError();
    lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
    swift_allocError();
    uint64_t v45 = v44;
    unint64_t v46 = 0xD000000000000028;
    uint64_t v47 = "#NLv4Transformer No tasks found in input";
    goto LABEL_33;
  }
  if (!*(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_37;
  }
LABEL_28:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v48 & 0xC000000000000001) == 0, v48);
  if ((v48 & 0xC000000000000001) != 0)
  {
    uint64_t v49 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v49 = *(void *)(v48 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v64);
  *a1 = v49;
  a1[1] = v15;
  Signpost.OpenSignpost.end()();
  return swift_release();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *);
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void **__return_ptr, void *);
  id v24;
  uint64_t v25;
  uint64_t *v26;
  void v27[2];
  void *v28;

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - v7;
  dispatch thunk of UsoEntity_common_Agent.name.getter();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10
    || (v11 = dispatch thunk of UsoEntity_common_Agent.specifyingContactAddress.getter(), Swift::Bool result = swift_release(), v11))
  {
    uint64_t v13 = dispatch thunk of UsoEntity_common_Agent.name.getter();
    uint64_t v15 = v14;
    if (one-time initialization token for transformer != -1) {
      swift_once();
    }
    unint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<String?, PersonNameComponents?>);
    __swift_project_value_buffer(v16, (uint64_t)static Transformer<>.transformer);
    uint64_t v17 = (void (*)(void *))Transformer.transform.getter();
    v27[0] = v13;
    v27[1] = v15;
    v17(v27);
    if (v1)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    id v18 = objc_allocWithZone((Class)INPersonHandle);
    os_log_type_t v19 = @nonobjc INPersonHandle.init(value:type:)(0, 0, 0);
    uint64_t v20 = dispatch thunk of UsoEntity_common_Agent.specifyingContactAddress.getter();
    uint64_t v26 = a1;
    if (v20)
    {
      uint64_t v21 = v20;
      if (one-time initialization token for transfomer != -1) {
        swift_once();
      }
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_ContactAddress?, INPersonHandle>);
      __swift_project_value_buffer(v22, (uint64_t)static Transformer<>.transfomer);
      uint64_t v23 = (void (*)(void **__return_ptr, void *))Transformer.transform.getter();
      v27[0] = v21;
      swift_retain();
      v23(&v28, v27);
      swift_release();
      swift_release_n();

      os_log_type_t v19 = v28;
    }
    outlined init with copy of ConfirmationResponse?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for PersonNameComponents?);
    uint64_t v24 = objc_allocWithZone((Class)INPerson);
    uint64_t v11 = (uint64_t)@nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:)(v19, (uint64_t)v6, v13, v15, 0, 0, 0, 0, 0, 0);
    Swift::Bool result = outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for PersonNameComponents?);
    a1 = v26;
  }
  *a1 = v11;
  return result;
}

uint64_t static Transformer<>.toPhoneCallAudioRoute(phoneCallAttribute:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues();
  uint64_t v17 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  dispatch thunk of CodeGenListEntry.entry.getter();
  if (v18)
  {
    CodeGenBase.entity.getter();
    swift_release();
  }
  type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  swift_release();
  if (v19)
  {
    dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter();
    swift_release();
    if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
    {
      outlined destroy of UUID?((uint64_t)v2, &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    }
    else
    {
      uint64_t v16 = v10;
      uint64_t v13 = v17;
      int v14 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v14(v8, v2, v3);
      v14(v6, v8, v3);
      int v15 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v6, v3);
      if (v15 == enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallNounSpeakerphone(_:))
      {
        uint64_t v11 = 0;
        goto LABEL_7;
      }
      if (v15 == enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallNounNotSpeakerphone(_:))
      {
        uint64_t v11 = 1;
        goto LABEL_7;
      }
      if (v15 == enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallNounBluetooth(_:))
      {
        uint64_t v11 = 2;
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
    }
  }
  uint64_t v11 = 4;
LABEL_7:
  Signpost.OpenSignpost.end()();
  swift_release();
  return v11;
}

uint64_t one-time initialization function for transformer(uint64_t a1)
{
  return one-time initialization function for transformer(a1, &demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallAudioRoute?>, static Transformer<>.transformer, &demangling cache variable for type metadata for PhoneCallAudioRoute?);
}

{
  return one-time initialization function for transformer(a1, &demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallVerb?>, static Transformer<>.transformer, &demangling cache variable for type metadata for PhoneCallVerb?);
}

{
  return one-time initialization function for transformer(a1, &demangling cache variable for type metadata for Transformer<UsoTask, VoiceMail.VoiceMailVerb?>, static Transformer<>.transformer, &demangling cache variable for type metadata for VoiceMail.VoiceMailVerb?);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>(char *a1@<X8>)
{
  static Signpost.begin(_:)();
  static UsoTask_CodegenConverter.convert(task:)();
  if (v11)
  {
    type metadata accessor for UsoTask_call_common_PhoneCall();
    if (swift_dynamicCast())
    {
      uint64_t v2 = a1;
      swift_retain();
      dispatch thunk of Uso_VerbTemplate_Target.target.getter();
      swift_release();
      if (v10[0] && (unint64_t v3 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(), swift_release(), v3))
      {
        if (v3 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v7) {
            goto LABEL_16;
          }
        }
        else if (*(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8)))
        {
LABEL_16:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v3 & 0xC000000000000001) == 0, v3);
          if ((v3 & 0xC000000000000001) != 0) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          swift_bridgeObjectRelease();
          char v4 = static Transformer<>.toPhoneCallAudioRoute(phoneCallAttribute:)();
          swift_release();
          swift_release();
          a1 = v2;
          goto LABEL_34;
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  static UsoTask_CodegenConverter.convert(task:)();
  if (v11)
  {
    type metadata accessor for UsoTask_redial_common_PhoneCall();
    if (swift_dynamicCast())
    {
      uint64_t v2 = a1;
      swift_retain();
      dispatch thunk of Uso_VerbTemplate_ReferenceTarget.reference.getter();
      swift_release();
      if (v10[0] && (unint64_t v3 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(), swift_release(), v3))
      {
        if (v3 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v8) {
            goto LABEL_16;
          }
        }
        else if (*(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8)))
        {
          goto LABEL_16;
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  static UsoTask_CodegenConverter.convert(task:)();
  if (!v11)
  {
    outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
    goto LABEL_31;
  }
  type metadata accessor for UsoTask_answer_common_PhoneCall();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_31:
    char v4 = 4;
    goto LABEL_34;
  }
  swift_retain();
  dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter();
  swift_release();
  if (!v10[0] || (unint64_t v5 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(), swift_release(), !v5))
  {
    swift_release();
LABEL_33:
    char v4 = 4;
    goto LABEL_34;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_27;
    }
    goto LABEL_41;
  }
  if (!*(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_41:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_27:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v5 & 0xC000000000000001) == 0, v5);
  if ((v5 & 0xC000000000000001) != 0) {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    swift_retain();
  }
  swift_bridgeObjectRelease();
  char v4 = static Transformer<>.toPhoneCallAudioRoute(phoneCallAttribute:)();
  swift_release();
  swift_release();
LABEL_34:
  *a1 = v4;
  Signpost.OpenSignpost.end()();
  return swift_release();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  int v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint8_t *v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  long long v52;
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;

  unint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  char v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v42 - v7;
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  static UsoTask_CodegenConverter.convert(task:)();
  if (v53)
  {
    unint64_t v48 = v10;
    outlined init with take of Any(&v52, v54);
    outlined init with copy of Any((uint64_t)v54, (uint64_t)&v52);
    type metadata accessor for UsoTask_noVerb_common_PhoneNumber();
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      swift_release();
LABEL_4:
      *a1 = 0;
LABEL_35:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
      goto LABEL_36;
    }
    type metadata accessor for UsoTask_noVerb_common_PhoneCall();
    if (swift_dynamicCast())
    {
      swift_retain();
      dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
      swift_release_n();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      uint64_t v12 = v55;
      swift_release();
      if (!v12) {
        goto LABEL_4;
      }
      uint64_t v13 = 5;
      goto LABEL_34;
    }
    type metadata accessor for UsoTask_call_common_PhoneCall();
    if (swift_dynamicCast())
    {
      int v14 = v55;
      int v15 = static Transformer<>.isCallingLastNumberUserCalled(callTask:)();
      uint64_t v47 = v14;
      if (v15)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
        uint64_t v17 = Logger.logObject.getter();
        uint64_t v18 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v17, (os_log_type_t)v18))
        {
          uint64_t v43 = v18;
          uint64_t v45 = v17;
          unint64_t v46 = v1;
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          os_log_type_t v42 = swift_slowAlloc();
          uint64_t v51 = v42;
          uint64_t v44 = v19;
          *(_DWORD *)uint64_t v19 = 136315138;
          if (one-time initialization token for logPrefix != -1) {
            swift_once();
          }
          uint64_t v20 = static NLv4Transformer.logPrefix;
          uint64_t v21 = unk_5D5060;
          uint64_t v23 = qword_5D5068;
          uint64_t v22 = unk_5D5070;
          uint64_t v49 = 0;
          uint64_t v50 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v20, v21, v23, v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, &v51);
          uint64_t v25 = v44;
          uint64_t v49 = v24;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v26 = v45;
          _os_log_impl(&dword_0, v45, (os_log_type_t)v43, "%s call last number user called is found, treat current request as redial", v25, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_release();

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        }
        else
        {
          swift_release();

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        }
        uint64_t v13 = 6;
        goto LABEL_34;
      }
      unint64_t v46 = v1;
      swift_retain();
      dispatch thunk of Uso_VerbTemplate_Target.target.getter();
      swift_release();
      if (v49 && (uint64_t v29 = dispatch thunk of UsoEntity_common_PhoneCall.mode.getter(), swift_release(), v29))
      {
        dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter();
        swift_release();
        uint64_t v30 = type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues();
        if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v30) != 1)
        {
          outlined init with copy of ConfirmationResponse?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
          uint64_t v31 = *(void *)(v30 - 8);
          uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v6, v30);
          if (v32 == enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Audio(_:))
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
            swift_release();
            uint64_t v33 = 3;
LABEL_31:
            outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
            *a1 = v33;
            goto LABEL_35;
          }
          if (v32 == enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Video(_:))
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
            swift_release();
            uint64_t v33 = 2;
            goto LABEL_31;
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
        }
      }
      else
      {
        os_log_type_t v35 = type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues();
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v35);
      }
      unint64_t v36 = UsoTask.usoAssociatedApp.getter();
      uint64_t v33 = static Transformer<>.overrideVerbForApp(originalVerb:usoApp:)(0, v36);
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      goto LABEL_31;
    }
    type metadata accessor for UsoTask_callback_common_PhoneCall();
    if (swift_dynamicCast())
    {
      swift_release();
      os_log_type_t v27 = UsoTask.usoAssociatedApp.getter();
      uint64_t v28 = 1;
LABEL_28:
      unint64_t v34 = static Transformer<>.overrideVerbForApp(originalVerb:usoApp:)(v28, v27);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      *a1 = v34;
      goto LABEL_35;
    }
    type metadata accessor for UsoTask_redial_common_PhoneCall();
    if (swift_dynamicCast())
    {
      swift_release();
      os_log_type_t v27 = UsoTask.usoAssociatedApp.getter();
      uint64_t v28 = 6;
      goto LABEL_28;
    }
    type metadata accessor for UsoTask_delete_common_Voicemail();
    if (swift_dynamicCast()
      || (type metadata accessor for UsoTask_delete_common_PhoneCall(), swift_dynamicCast()))
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
      uint64_t v11 = 12;
      goto LABEL_7;
    }
    type metadata accessor for UsoTask_answer_common_PhoneCall();
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      swift_release();
      uint64_t v38 = 10;
LABEL_52:
      *a1 = v38;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
      goto LABEL_36;
    }
    type metadata accessor for UsoTask_reply_uso_NoEntity();
    if (swift_dynamicCast())
    {
      swift_retain();
      dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter();
      swift_release();
      uint64_t v39 = v55;
      swift_release();
      if (v39
        || (dispatch thunk of Uso_VerbTemplate_ReferenceTarget.reference.getter(), uint64_t v40 = v55, swift_release(), v40))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        swift_release();
      }
      else
      {
        swift_retain();
        uint64_t v41 = dispatch thunk of Uso_VerbTemplate_ReferenceTarget.userEntities.getter();
        swift_release_n();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        swift_bridgeObjectRelease();
        if (!v41)
        {
          uint64_t v13 = 10;
          goto LABEL_34;
        }
      }
      uint64_t v13 = 17;
LABEL_34:
      *a1 = v13;
      goto LABEL_35;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    type metadata accessor for UsoTask_join_common_PhoneCall();
    if (swift_dynamicCast())
    {
      swift_release();
      uint64_t v38 = 14;
      goto LABEL_52;
    }
    type metadata accessor for UsoTask_update_common_PhoneCall();
    if (swift_dynamicCast()
      || (type metadata accessor for UsoTask_update_common_Communication(), swift_dynamicCast()))
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
      uint64_t v11 = 15;
      goto LABEL_7;
    }
    type metadata accessor for UsoTask_hangup_common_PhoneCall();
    if (swift_dynamicCast())
    {
      swift_release();
      uint64_t v38 = 11;
      goto LABEL_52;
    }
    type metadata accessor for UsoTask_request_common_PhoneCall();
    if (swift_dynamicCast()
      || (type metadata accessor for UsoTask_summarise_common_PhoneCall(), swift_dynamicCast())
      || (type metadata accessor for UsoTask_summarise_common_Voicemail(), swift_dynamicCast())
      || (type metadata accessor for UsoTask_read_common_PhoneCall(), swift_dynamicCast())
      || (type metadata accessor for UsoTask_read_common_Voicemail(), swift_dynamicCast())
      || (type metadata accessor for UsoTask_call_common_Voicemail(), swift_dynamicCast()))
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
      *a1 = 5;
      goto LABEL_36;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  }
  else
  {
    outlined destroy of UUID?((uint64_t)&v52, &demangling cache variable for type metadata for Any?);
  }
  uint64_t v11 = 17;
LABEL_7:
  *a1 = v11;
LABEL_36:
  Signpost.OpenSignpost.end()();
  return swift_release();
}

{
  char v2;
  long long v4;
  uint64_t v5;
  _OWORD v6[2];

  static Signpost.begin(_:)();
  static UsoTask_CodegenConverter.convert(task:)();
  if (!v5)
  {
    outlined destroy of UUID?((uint64_t)&v4, &demangling cache variable for type metadata for Any?);
    goto LABEL_6;
  }
  outlined init with take of Any(&v4, v6);
  outlined init with take of Any(v6, &v4);
  type metadata accessor for UsoTask_play_common_Voicemail();
  if (!swift_dynamicCast())
  {
    type metadata accessor for UsoTask_noVerb_common_Voicemail();
    if (!swift_dynamicCast())
    {
      type metadata accessor for UsoTask_repeat_common_Voicemail();
      if (swift_dynamicCast())
      {
        swift_release();
        uint64_t v2 = 1;
LABEL_17:
        *a1 = v2;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
        goto LABEL_18;
      }
      type metadata accessor for UsoTask_skip_common_Voicemail();
      if (swift_dynamicCast())
      {
        swift_release();
        uint64_t v2 = 2;
        goto LABEL_17;
      }
      type metadata accessor for UsoTask_pause_common_Voicemail();
      if (swift_dynamicCast())
      {
        swift_release();
        uint64_t v2 = 3;
        goto LABEL_17;
      }
      type metadata accessor for UsoTask_resume_common_Voicemail();
      if (swift_dynamicCast())
      {
        swift_release();
        uint64_t v2 = 4;
        goto LABEL_17;
      }
      type metadata accessor for UsoTask_delete_common_Voicemail();
      if (swift_dynamicCast())
      {
        swift_release();
        uint64_t v2 = 5;
        goto LABEL_17;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
LABEL_6:
      *a1 = 6;
      goto LABEL_18;
    }
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
  *a1 = 0;
LABEL_18:
  Signpost.OpenSignpost.end()();
  return swift_release();
}

uint64_t static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, int a4@<W4>, void *a5@<X5>, void *a6@<X8>)
{
  uint64_t v106 = a5;
  int v149 = a4;
  uint64_t v116 = a3;
  uint64_t v137 = a2;
  char v109 = a6;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Person, INPerson>);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  unint64_t v123 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for ContactQuery();
  uint64_t v129 = *(void *)(v132 - 8);
  uint64_t v8 = __chkstk_darwin(v132);
  uint64_t v133 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v127 = (char *)&v105 - v11;
  __chkstk_darwin(v10);
  int64_t v130 = (char *)&v105 - v12;
  uint64_t v13 = type metadata accessor for MatchedResultsSetting();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v113 = v17;
  uint64_t v111 = v18;
  uint64_t v112 = v19;
  int v110 = v20;
  unint64_t v143 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v144 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v142 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v115 = v14;
  uint64_t v21 = *(void (**)(char *, void, uint64_t))(v14 + 104);
  uint64_t v124 = v16;
  uint64_t v114 = v13;
  v21(v16, enum case for MatchedResultsSetting.defaultMatching(_:), v13);
  uint64_t v134 = a1;
  unint64_t v128 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_94;
  }
  uint64_t v22 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (v22)
  {
    uint64_t v23 = v134;
    unint64_t v138 = v134 & 0xC000000000000001;
    uint64_t v24 = v134 & 0xFFFFFFFFFFFFFF8;
    uint64_t v122 = v134 & 0xFFFFFFFFFFFFFF8;
    if (v134 < 0) {
      uint64_t v24 = v134;
    }
    uint64_t v121 = v24;
    uint64_t v120 = (void (**)(char *, char *, uint64_t))(v129 + 16);
    uint64_t v117 = (void (**)(char *, uint64_t))(v129 + 8);
    swift_bridgeObjectRetain();
    uint64_t v25 = 4;
    *(void *)&long long v26 = 136315138;
    long long v119 = v26;
    uint64_t v118 = (char *)&type metadata for Any + 8;
    uint64_t v136 = v22;
    while (1)
    {
      if (v138)
      {
        uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v27 = *(void *)(v23 + 8 * v25);
        swift_retain();
      }
      uint64_t v28 = v25 - 3;
      if (__OFADD__(v25 - 4, 1)) {
        break;
      }
      dispatch thunk of CodeGenListEntry.entry.getter();
      if (v140 && (uint64_t v29 = UsoEntity_common_Agent.asCommonPerson()(), swift_release(), v29))
      {
        uint64_t v135 = v25 - 3;
        __swift_project_boxed_opaque_existential_1(v137, v137[3]);
        swift_retain();
        CodeGenBase.entity.getter();
        swift_release();
        char v30 = dispatch thunk of RRReferenceResolverProtocol.hasReference(usoEntity:)();
        swift_release();
        if (v30)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v31 = type metadata accessor for Logger();
          __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
          uint64_t v32 = Logger.logObject.getter();
          os_log_type_t v33 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v32, v33))
          {
            uint64_t v131 = v27;
            uint64_t v34 = swift_slowAlloc();
            uint64_t v126 = swift_slowAlloc();
            uint64_t v139 = v126;
            *(_DWORD *)uint64_t v34 = v119;
            if (one-time initialization token for logPrefix != -1) {
              swift_once();
            }
            uint64_t v35 = static NLv4Transformer.logPrefix;
            uint64_t v36 = unk_5D5060;
            uint64_t v37 = qword_5D5068;
            uint64_t v38 = unk_5D5070;
            id v140 = 0;
            unint64_t v141 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v35, v36, v37, v38);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v34 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v140, v141, &v139);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v32, v33, "%s found a reference from common person", (uint8_t *)v34, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v23 = v134;
            uint64_t v22 = v136;
          }
          else
          {

            uint64_t v22 = v136;
          }
          swift_retain();
          uint64_t v21 = (void (*)(char *, void, uint64_t))CodeGenBase.entity.getter();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((char *)&dword_10 + (v142 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                          + (v142 & 0xFFFFFFFFFFFFFF8)) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        else
        {
          uint64_t v40 = v130;
          if (v128)
          {
            swift_bridgeObjectRetain();
            uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v41 = *(void *)(v122 + 16);
          }
          uint64_t v22 = v136;
          if (v41 == 1)
          {
            uint64_t v131 = v27;
            UsoEntity_common_Person.toContactQuery()();
            if (one-time initialization token for emptyQuery != -1) {
              swift_once();
            }
            uint64_t v42 = v132;
            __swift_project_value_buffer(v132, (uint64_t)static ContactQuery.emptyQuery);
            char v43 = static ContactQuery.== infix(_:_:)();
            (*v120)(v127, v40, v42);
            if (v43)
            {
              uint64_t v90 = *v117;
              uint64_t v91 = v132;
              (*v117)(v127, v132);
              v90(v40, v91);
LABEL_92:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v115 + 8))(v124, v114);
              swift_bridgeObjectRelease();
              Signpost.OpenSignpost.end()();
              uint64_t result = swift_release();
              uint64_t v75 = 0;
              uint64_t v74 = 0;
              uint64_t v77 = 0;
              unint64_t v76 = 0;
              char v81 = 1;
              uint64_t v79 = _swiftEmptyArrayStorage;
              goto LABEL_119;
            }
            if (one-time initialization token for emptyNLv4Query != -1) {
              swift_once();
            }
            uint64_t v44 = v132;
            __swift_project_value_buffer(v132, (uint64_t)static ContactQuery.emptyNLv4Query);
            uint64_t v45 = v127;
            char v46 = static ContactQuery.== infix(_:_:)();
            uint64_t v47 = *v117;
            (*v117)(v45, v44);
            v47(v130, v44);
            if (v46) {
              goto LABEL_92;
            }
          }
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v21 = *(void (**)(char *, void, uint64_t))((char *)&dword_10 + (v144 & 0xFFFFFFFFFFFFFF8));
          if ((unint64_t)v21 >= *(void *)((char *)&dword_18 + (v144 & 0xFFFFFFFFFFFFFF8)) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
        swift_release();
        uint64_t v28 = v135;
      }
      else
      {
        dispatch thunk of CodeGenListEntry.entry.getter();
        if (v140)
        {
          __swift_project_boxed_opaque_existential_1(v137, v137[3]);
          swift_retain();
          CodeGenBase.entity.getter();
          swift_release();
          char v39 = dispatch thunk of RRReferenceResolverProtocol.hasReference(usoEntity:)();
          swift_release();
          swift_retain();
          if (v39)
          {
            uint64_t v21 = (void (*)(char *, void, uint64_t))CodeGenBase.entity.getter();
            swift_release();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v23 = v134;
            if (*(void *)((char *)&dword_10 + (v142 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                            + (v142 & 0xFFFFFFFFFFFFFF8)) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          else
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v21 = *(void (**)(char *, void, uint64_t))((char *)&dword_10 + (v143 & 0xFFFFFFFFFFFFFF8));
            uint64_t v23 = v134;
            if ((unint64_t)v21 >= *(void *)((char *)&dword_18 + (v143 & 0xFFFFFFFFFFFFFF8)) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_release();
          swift_release();
          uint64_t v22 = v136;
        }
        else
        {
          swift_release();
        }
      }
      ++v25;
      if (v28 == v22)
      {
        uint64_t v48 = swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    __break(1u);
LABEL_94:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = PhoneCallVerb.isCallOrFaceTime()();
  if (v48)
  {
    uint64_t v48 = (*(uint64_t (**)(void))(*(void *)v116 + 224))();
    if ((v48 & 1) == 0)
    {
      uint64_t v48 = static UsoUtils.buildDummyReferenceEntity()();
      if (v48)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v49 = type metadata accessor for Logger();
        __swift_project_value_buffer(v49, (uint64_t)static Logger.siriPhone);
        uint64_t v50 = Logger.logObject.getter();
        int v51 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v50, (os_log_type_t)v51))
        {
          LODWORD(v136) = v51;
          uint64_t v52 = (_DWORD *)swift_slowAlloc();
          uint64_t v135 = swift_slowAlloc();
          uint64_t v139 = v135;
          unint64_t v138 = (unint64_t)v52;
          *uint64_t v52 = 136315138;
          if (one-time initialization token for logPrefix != -1) {
            swift_once();
          }
          uint64_t v53 = static NLv4Transformer.logPrefix;
          uint64_t v54 = unk_5D5060;
          uint64_t v56 = qword_5D5068;
          uint64_t v55 = unk_5D5070;
          id v140 = 0;
          unint64_t v141 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v53, v54, v56, v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v57 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v140, v141, &v139);
          uint64_t v58 = (uint8_t *)v138;
          id v140 = v57;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v50, (os_log_type_t)v136, "%s call verb only to query SRR is enabled, build dummy reference", v58, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v142 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v142 & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
        uint64_t v59 = v124;
        uint64_t v60 = v114;
        (*(void (**)(char *, uint64_t))(v115 + 8))(v124, v114);
        uint64_t v48 = ((uint64_t (*)(char *, void, uint64_t))v21)(v59, enum case for MatchedResultsSetting.extremelySalientResultsOnly(_:), v60);
      }
    }
  }
LABEL_60:
  if ((*(uint64_t (**)(uint64_t))(*(void *)v116 + 224))(v48))
  {
    uint64_t v61 = v123;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v62 = type metadata accessor for Logger();
    __swift_project_value_buffer(v62, (uint64_t)static Logger.siriPhone);
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v63, v64))
    {
      int v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      *(_DWORD *)int v65 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once();
      }
      uint64_t v66 = static NLv4Transformer.logPrefix;
      uint64_t v67 = unk_5D5060;
      uint64_t v68 = qword_5D5068;
      uint64_t v69 = unk_5D5070;
      id v140 = 0;
      unint64_t v141 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v66, v67, v68, v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v140 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v140, v141, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v63, v64, "%s skipping SRR", v65, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v61 = v123;
    }
    else
    {
    }
LABEL_73:
    unint64_t v82 = v144;
    if (v144 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v92)
      {
LABEL_75:
        uint64_t v83 = static Transformer<>.transformer.getter();
        __chkstk_darwin(v83);
        *(&v105 - 2) = (uint64_t)v61;
        swift_bridgeObjectRetain();
        uint64_t v84 = v125;
        uint64_t v85 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology23UsoEntity_common_PersonCG_So8INPersonCsAE_pTg5((void (*)(void))partial apply for closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:), (uint64_t)(&v105 - 4), v82);
        uint64_t v125 = v84;
        if (v84)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v107 + 8))(v61, v108);
          (*(void (**)(char *, uint64_t))(v115 + 8))(v124, v114);
LABEL_102:
          swift_bridgeObjectRelease();
          Signpost.OpenSignpost.end()();
          return swift_release();
        }
        uint64_t v79 = v85;
        swift_bridgeObjectRelease();
        if (v82 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
          if (v86) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v86 = *(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8));
          swift_bridgeObjectRetain();
          if (v86)
          {
LABEL_79:
            unint64_t v138 = (unint64_t)v79;
            id v140 = _swiftEmptyArrayStorage;
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            if ((v86 & 0x8000000000000000) == 0)
            {
              uint64_t v87 = 0;
              unint64_t v88 = v140;
              do
              {
                if ((v82 & 0xC000000000000001) != 0) {
                  specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  swift_retain();
                }
                if (v149)
                {
                  UsoEntity_common_Person.toContactQuery()();
                }
                else
                {
                  UsoEntity_common_Person.getRedactCommonPerson()();
                  UsoEntity_common_Person.toContactQuery()();
                  swift_release();
                }
                swift_release();
                id v140 = v88;
                unint64_t v89 = v88[2];
                if (v89 >= v88[3] >> 1)
                {
                  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  unint64_t v88 = v140;
                }
                ++v87;
                v88[2] = v89 + 1;
                (*(void (**)(unint64_t, char *, uint64_t))(v129 + 32))((unint64_t)v88+ ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(void *)(v129 + 72) * v89, v133, v132);
              }
              while (v86 != v87);
              swift_bridgeObjectRelease();
              uint64_t v79 = (void *)v138;
              goto LABEL_112;
            }
            __break(1u);
            goto LABEL_115;
          }
        }
        swift_bridgeObjectRelease();
LABEL_112:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v107 + 8))(v123, v108);
LABEL_113:
        unint64_t v76 = 0;
LABEL_118:
        swift_bridgeObjectRetain();
        static PhoneCallNLv4Intent.appendNewContactQueries(contactQueries:persons:)();
        uint64_t v74 = v102;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v103 = *(void (**)(char *, uint64_t))(v115 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v103(v124, v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Signpost.OpenSignpost.end()();
        uint64_t result = swift_release();
        uint64_t v75 = 0;
        uint64_t v77 = 0;
        char v81 = 0;
        goto LABEL_119;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v144 & 0xFFFFFFFFFFFFFF8)))
    {
      goto LABEL_75;
    }
    swift_bridgeObjectRelease();
    unint64_t v93 = v143;
    if (v143 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v100) {
        goto LABEL_98;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v143 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_98:
      if (one-time initialization token for transformer != -1) {
        swift_once();
      }
      uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Agent, INPerson?>);
      uint64_t v95 = __swift_project_value_buffer(v94, (uint64_t)static Transformer<>.transformer);
      *(&v105 - 2) = __chkstk_darwin(v95);
      uint64_t v96 = v125;
      int v97 = specialized Sequence.compactMap<A>(_:)((uint64_t)partial apply for closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:), (uint64_t)(&v105 - 4), v93);
      uint64_t v125 = v96;
      uint64_t v98 = v124;
      if (v96)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v115 + 8))(v98, v114);
        goto LABEL_102;
      }
      uint64_t v79 = v97;
      swift_bridgeObjectRelease();
      goto LABEL_113;
    }
    swift_bridgeObjectRelease();
    if (!(v142 >> 62))
    {
      if (!*(void *)((char *)&dword_10 + (v142 & 0xFFFFFFFFFFFFFF8)))
      {
LABEL_116:
        unint64_t v76 = 0;
        goto LABEL_117;
      }
LABEL_109:
      unint64_t v76 = v142;
      swift_bridgeObjectRetain();
LABEL_117:
      uint64_t v79 = _swiftEmptyArrayStorage;
      goto LABEL_118;
    }
LABEL_115:
    swift_bridgeObjectRetain();
    uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v101) {
      goto LABEL_116;
    }
    goto LABEL_109;
  }
  uint64_t v61 = v123;
  if (v142 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v99) {
      goto LABEL_73;
    }
  }
  else if (!*(void *)((char *)&dword_10 + (v142 & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_73;
  }
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v71 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  __chkstk_darwin(v71);
  *(&v105 - 4) = (uint64_t)&v142;
  uint64_t v72 = v124;
  *(&v105 - 3) = (uint64_t)v137;
  *(&v105 - 2) = (uint64_t)v72;
  static SiriKitEventSender.current.getter();
  specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
  outlined init with take of AnnotatedApp?((uint64_t)v145, (uint64_t)v146, &demangling cache variable for type metadata for TargetContacts?);
  uint64_t v73 = (void *)v146[0];
  if (!v146[0])
  {
    swift_bridgeObjectRelease();
    goto LABEL_73;
  }
  uint64_t v75 = v146[1];
  uint64_t v74 = v146[2];
  uint64_t v77 = v146[3];
  unint64_t v76 = v146[4];
  char v148 = v147;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v78 = v106[3];
  unint64_t v138 = v106[4];
  __swift_project_boxed_opaque_existential_1(v106, v78);
  type metadata accessor for SiriKitEvent();
  LOBYTE(v140) = 0;
  SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
  uint64_t v79 = v73;
  dispatch thunk of SiriKitEventSending.send(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v124, v114);
  swift_bridgeObjectRelease();
  Signpost.OpenSignpost.end()();
  uint64_t result = swift_release();
  char v81 = v148;
LABEL_119:
  uint64_t v104 = v109;
  void *v109 = v79;
  v104[1] = v75;
  v104[2] = v74;
  v104[3] = v77;
  v104[4] = v76;
  *((unsigned char *)v104 + 40) = v81;
  return result;
}

uint64_t closure #1 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MatchedResultsSetting();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  int64_t v10 = swift_bridgeObjectRetain();
  static NLTransformerReferenceHelper.resolveEntitiesTargetContacts(_:referenceResolver:matchedResultsSetting:)(v10, a1, v9, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  return outlined init with take of AnnotatedApp?((uint64_t)v12, a3, &demangling cache variable for type metadata for TargetContacts?);
}

uint64_t static NLTransformerReferenceHelper.resolveEntitiesTargetContacts(_:referenceResolver:matchedResultsSetting:)@<X0>(int64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v82 = a4;
  uint64_t v101 = type metadata accessor for ContactQuery();
  uint64_t v7 = *(void *)(v101 - 8);
  uint64_t v8 = __chkstk_darwin(v101);
  int64_t v10 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v90 = (char *)v80 - v12;
  __chkstk_darwin(v11);
  unint64_t v93 = (char *)v80 - v13;
  uint64_t v14 = type metadata accessor for PhoneRRTarget.Target(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t)v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for PhoneRRTarget(0);
  uint64_t v17 = *(void *)(v98 - 8);
  uint64_t v18 = __chkstk_darwin(v98);
  uint64_t v89 = (uint64_t)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v103 = (uint64_t)v80 - v20;
  uint64_t v105 = a2;
  uint64_t v106 = a3;
  uint64_t v21 = specialized Sequence.compactMap<A>(_:)((void (*)(uint64_t *))partial apply for closure #1 in static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:), (uint64_t)v104, a1);
  uint64_t v97 = v21[2];
  if (!v97)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v77 = 0;
    a1 = 0;
LABEL_100:
    a3 = 0;
    goto LABEL_101;
  }
  unint64_t v23 = 0;
  uint64_t v96 = (char *)v21 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  uint64_t v111 = _swiftEmptyArrayStorage;
  uint64_t v112 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  uint64_t v86 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v85 = v7 + 8;
  int v110 = _swiftEmptyArrayStorage;
  *(void *)&long long v22 = 136315138;
  long long v84 = v22;
  unint64_t v87 = (unint64_t)"olver:siriKitEventSender:)";
  uint64_t v81 = 0x800000000049BD90;
  v80[1] = (char *)&type metadata for Any + 8;
  *(void *)&long long v22 = 136315394;
  long long v83 = v22;
  v80[0] = "ppBundleId";
  uint64_t v102 = _swiftEmptyArrayStorage;
  uint64_t v88 = v14;
  uint64_t v92 = v16;
  uint64_t v94 = v21;
  uint64_t v95 = v17;
  while (2)
  {
    if (v23 >= v21[2])
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    unint64_t v24 = v23 + 1;
    uint64_t v25 = v103;
    outlined init with copy of PhoneRRTarget((uint64_t)&v96[*(void *)(v17 + 72) * v23], v103);
    outlined init with copy of PhoneRRTarget(v25, v16);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v99 = v24;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v91 = *(uint64_t **)v16;
        uint64_t v28 = dispatch thunk of UsoEntity_common_Group.name.getter();
        if (v29)
        {
          uint64_t v30 = v28;
          unint64_t v31 = v29;
          swift_bridgeObjectRelease();
          uint64_t v32 = HIBYTE(v31) & 0xF;
          if ((v31 & 0x2000000000000000) == 0) {
            uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
          }
          if (v32) {
            goto LABEL_39;
          }
        }
        a3 = v91;
        unint64_t v33 = dispatch thunk of UsoEntity_common_Group.members.getter();
        if (!v33)
        {
LABEL_39:
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v52 = type metadata accessor for Logger();
          __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
          uint64_t v53 = Logger.logObject.getter();
          os_log_type_t v54 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v53, v54))
          {
            uint64_t v55 = swift_slowAlloc();
            uint64_t v109 = swift_slowAlloc();
            *(_DWORD *)uint64_t v55 = v84;
            if (one-time initialization token for logPrefix != -1) {
              swift_once();
            }
            uint64_t v56 = static NLv4Transformer.logPrefix;
            uint64_t v57 = unk_5D5060;
            uint64_t v107 = 0;
            unint64_t v108 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v56, v57, 0xD000000000000049, v87 | 0x8000000000000000);
            swift_bridgeObjectRelease();
            *(void *)(v55 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, &v109);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v53, v54, "%s referenceResolution resolved to a named common_Group", (uint8_t *)v55, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v16 = v92;
          if (*(void *)((char *)&dword_10 + ((unint64_t)v110 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)v110 & 0xFFFFFFFFFFFFFF8)) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          goto LABEL_83;
        }
        unint64_t v34 = v33;
        uint64_t v107 = (uint64_t)_swiftEmptyArrayStorage;
        if (v33 >> 62)
        {
          swift_bridgeObjectRetain();
          a1 = _CocoaArrayWrapper.endIndex.getter();
          if (a1) {
            goto LABEL_15;
          }
        }
        else
        {
          a1 = *(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8));
          swift_bridgeObjectRetain();
          if (a1)
          {
LABEL_15:
            if (a1 < 1) {
              goto LABEL_103;
            }
            uint64_t v35 = 0;
            do
            {
              if ((v34 & 0xC000000000000001) != 0) {
                specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                swift_retain();
              }
              dispatch thunk of CodeGenListEntry.entry.getter();
              swift_release();
              if (v109)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((char *)&dword_10 + (v107 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                                + (v107 & 0xFFFFFFFFFFFFFF8)) >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              ++v35;
            }
            while (a1 != v35);
            swift_bridgeObjectRelease();
            a1 = v107;
LABEL_62:
            swift_bridgeObjectRelease();
            if ((unint64_t)a1 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v16) {
                goto LABEL_64;
              }
            }
            else
            {
              uint64_t v16 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
              if (v16)
              {
LABEL_64:
                uint64_t v107 = (uint64_t)_swiftEmptyArrayStorage;
                a3 = &v107;
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                if (v16 < 0) {
                  goto LABEL_104;
                }
                uint64_t v62 = 0;
                uint64_t v63 = (void *)v107;
                do
                {
                  if ((a1 & 0xC000000000000001) != 0) {
                    specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    swift_retain();
                  }
                  UsoEntity_common_Agent.toContactQuery()();
                  swift_release();
                  uint64_t v107 = (uint64_t)v63;
                  os_log_type_t v64 = v10;
                  unint64_t v65 = v63[2];
                  if (v65 >= v63[3] >> 1)
                  {
                    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    uint64_t v63 = (void *)v107;
                  }
                  ++v62;
                  v63[2] = v65 + 1;
                  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))((unint64_t)v63+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v65, v64, v101);
                  int64_t v10 = v64;
                }
                while (v16 != v62);
                swift_bridgeObjectRelease();
                goto LABEL_75;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v63 = _swiftEmptyArrayStorage;
LABEL_75:
            if (one-time initialization token for siriPhone != -1) {
              swift_once();
            }
            uint64_t v66 = type metadata accessor for Logger();
            __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
            uint64_t v67 = Logger.logObject.getter();
            os_log_type_t v68 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v67, v68))
            {
              uint64_t v69 = swift_slowAlloc();
              uint64_t v109 = swift_slowAlloc();
              *(_DWORD *)uint64_t v69 = v84;
              if (one-time initialization token for logPrefix != -1) {
                swift_once();
              }
              uint64_t v70 = static NLv4Transformer.logPrefix;
              uint64_t v71 = unk_5D5060;
              uint64_t v107 = 0;
              unint64_t v108 = 0xE000000000000000;
              swift_bridgeObjectRetain();
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v70, v71, 0xD000000000000049, v81);
              swift_bridgeObjectRelease();
              *(void *)(v69 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, &v109);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v67, v68, "%s referenceResolution resolved to an unnamed common_Group", (uint8_t *)v69, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            uint64_t v16 = v92;
            specialized Array.append<A>(contentsOf:)((uint64_t)v63);
LABEL_83:
            swift_release();
            goto LABEL_84;
          }
        }
        swift_bridgeObjectRelease();
        a1 = (int64_t)_swiftEmptyArrayStorage;
        goto LABEL_62;
      case 2:
        uint64_t v36 = *v100;
        (*v100)(v93, v16, v101);
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v37 = type metadata accessor for Logger();
        __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
        uint64_t v38 = v89;
        outlined init with copy of PhoneRRTarget(v103, v89);
        char v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          uint64_t v109 = swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = v83;
          if (one-time initialization token for logPrefix != -1) {
            swift_once();
          }
          uint64_t v43 = static NLv4Transformer.logPrefix;
          uint64_t v42 = unk_5D5060;
          uint64_t v107 = 0;
          unint64_t v108 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v43, v42, 0xD000000000000049, v87 | 0x8000000000000000);
          swift_bridgeObjectRelease();
          *(void *)(v41 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, &v109);
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2080;
          unint64_t v44 = 0xEB00000000737365;
          uint64_t v45 = 0x6E69737542727273;
          switch(*(unsigned char *)(v89 + *(int *)(v98 + 20)))
          {
            case 1:
              uint64_t v45 = 0xD000000000000012;
              unint64_t v44 = v80[0] | 0x8000000000000000;
              break;
            case 2:
              unint64_t v44 = 0xED00007465677261;
              uint64_t v45 = 0x54746C7561666564;
              break;
            case 3:
              unint64_t v44 = 0xE600000000000000;
              uint64_t v45 = 0x6C616D726F6ELL;
              break;
            default:
              break;
          }
          *(void *)(v41 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v44, &v109);
          swift_bridgeObjectRelease();
          outlined destroy of TransformerInput(v89, (void (*)(void))type metadata accessor for PhoneRRTarget);
          _os_log_impl(&dword_0, v39, v40, "%s referenceResolution resolved to a contact query with contact source: %s", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v16 = v92;
        }
        else
        {
          outlined destroy of TransformerInput(v38, (void (*)(void))type metadata accessor for PhoneRRTarget);
        }
        (*v86)(v90, v93, v101);
        uint64_t v58 = (uint64_t)v111;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v58 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v58 + 16) + 1, 1, v58);
        }
        unint64_t v60 = *(void *)(v58 + 16);
        unint64_t v59 = *(void *)(v58 + 24);
        if (v60 >= v59 >> 1) {
          uint64_t v58 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1, v58);
        }
        *(void *)(v58 + 16) = v60 + 1;
        uint64_t v61 = v101;
        v36((char *)(v58+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v60), (uint64_t)v90, v101);
        uint64_t v111 = (void *)v58;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v93, v61);
        goto LABEL_84;
      case 3:
        swift_release();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v46 = type metadata accessor for Logger();
        __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = swift_slowAlloc();
          uint64_t v109 = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = v84;
          if (one-time initialization token for logPrefix != -1) {
            swift_once();
          }
          uint64_t v50 = static NLv4Transformer.logPrefix;
          uint64_t v51 = unk_5D5060;
          uint64_t v107 = 0;
          unint64_t v108 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v50, v51, 0xD000000000000049, v87 | 0x8000000000000000);
          swift_bridgeObjectRelease();
          *(void *)(v49 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, &v109);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v47, v48, "%s resolveEntities can't resolve apps", (uint8_t *)v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v16 = v92;
        goto LABEL_84;
      default:
        id v27 = *(id *)v16;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v112 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v112 & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

LABEL_84:
        if (*(unsigned char *)(v103 + *(int *)(v98 + 20)) == 3) {
          a3 = (void *)(&dword_0 + 2);
        }
        else {
          a3 = (uint64_t *)*(unsigned __int8 *)(v103 + *(int *)(v98 + 20));
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v72 = v102;
        }
        else
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v72 = v74;
        }
        unint64_t v73 = v72[2];
        a1 = v73 + 1;
        if (v73 >= v72[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v72 = v75;
        }
        v72[2] = a1;
        uint64_t v102 = v72;
        *((unsigned char *)v72 + v73 + 32) = (_BYTE)a3;
        outlined destroy of TransformerInput(v103, (void (*)(void))type metadata accessor for PhoneRRTarget);
        unint64_t v23 = v99;
        uint64_t v21 = v94;
        uint64_t v17 = v95;
        if (v99 != v97) {
          continue;
        }
        uint64_t result = swift_bridgeObjectRelease();
        a1 = (int64_t)v111;
        uint64_t v16 = v112;
        if (!v111[2])
        {
          uint64_t result = swift_bridgeObjectRelease();
          a1 = 0;
        }
        a3 = v110;
        uint64_t v77 = v102;
        if (!((unint64_t)v110 >> 62))
        {
          if (*(void *)((char *)&dword_10 + ((unint64_t)v110 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_101;
          }
          goto LABEL_98;
        }
LABEL_105:
        swift_bridgeObjectRetain();
        uint64_t v79 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v77 = v102;
        if (!v79)
        {
LABEL_98:
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v77 = v102;
          goto LABEL_100;
        }
LABEL_101:
        uint64_t v78 = v82;
        *unint64_t v82 = v16;
        v78[1] = (uint64_t)v77;
        v78[2] = a1;
        v78[3] = (uint64_t)a3;
        v78[4] = 0;
        *((unsigned char *)v78 + 40) = 0;
        return result;
    }
  }
}

uint64_t closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  void (*v7)(uint64_t *__return_ptr, uint64_t *);
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  uint64_t v6 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Person, INPerson>);
  uint64_t v7 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter();
  int64_t v10 = v6;
  v7(&v9, &v10);
  uint64_t result = swift_release();
  if (v3) {
    *a2 = v3;
  }
  else {
    *a3 = v9;
  }
  return result;
}

uint64_t closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  void (*v5)(uint64_t *__return_ptr, uint64_t *);
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  uint64_t v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Agent, INPerson?>);
  unint64_t v5 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter();
  uint64_t v8 = v4;
  v5(&v7, &v8);
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v7;
  }
  return result;
}

uint64_t closure #1 in static Transformer<>.transformer(referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:)@<X0>(void *a1@<X1>, uint64_t a2@<X3>, char a3@<W4>, _OWORD *a4@<X8>)
{
  uint64_t v16 = a2;
  static Signpost.begin(_:)();
  uint64_t v7 = UsoTask.convertToCommonPhoneCallEntity()();
  if (v4)
  {
    Signpost.OpenSignpost.end()();
  }
  else
  {
    uint64_t v11 = a4;
    if (!v7
      || (swift_retain(),
          uint64_t v8 = (void *)dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter(),
          swift_release(),
          !v8))
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
    static SiriKitEventSender.current.getter();
    static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)((unint64_t)v8, a1, v16, a3 & 1, v13, &v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_release();
    long long v9 = v15[0];
    _OWORD *v11 = v14;
    v11[1] = v9;
    *(_OWORD *)((char *)v11 + 25) = *(_OWORD *)((char *)v15 + 9);
    Signpost.OpenSignpost.end()();
  }
  return swift_release();
}

uint64_t one-time initialization function for transformer(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  __swift_allocate_value_buffer(v6, a3);
  __swift_project_value_buffer(v6, (uint64_t)a3);
  type metadata accessor for UsoTask();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return Transformer.init(transform:)();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  __chkstk_darwin(v5 - 8);
  uint64_t v64 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UtteranceAlignment();
  uint64_t v57 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UsoIdentifier();
  uint64_t v56 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  static Signpost.begin(_:)();
  uint64_t v68 = v15;
  uint64_t v69 = v14;
  uint64_t v17 = v16;
  int v67 = v18;
  dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
  if (v70)
  {
    uint64_t v55 = v7;
    uint64_t v63 = v17;
    uint64_t v66 = a2;
    uint64_t v19 = CodeGenBase.entity.getter();
    swift_release();
    type metadata accessor for UsoEntityBuilder_common_PhoneCall();
    swift_allocObject();
    uint64_t v20 = UsoEntityBuilder_common_PhoneCall.init()();
    type metadata accessor for UsoEntityBuilder_common_PhoneNumber();
    swift_allocObject();
    uint64_t v21 = UsoEntityBuilder_common_PhoneNumber.init()();
    uint64_t v61 = v19;
    static UsoBuilderConversionUtils.copyEntityDataToEntityBuilder(entityBuilder:entity:copyValueType:copyIdentifiers:copyUtteranceAlignments:)();
    type metadata accessor for UsoEntityBuilder_common_Person();
    swift_allocObject();
    uint64_t v22 = UsoEntityBuilder_common_Person.init()();
    swift_retain();
    dispatch thunk of UsoEntityBuilder_common_Person.setSpecifyingContactAddress(value:)();
    uint64_t v59 = v21;
    swift_release();
    swift_retain();
    uint64_t v60 = v20;
    dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)();
    uint64_t v58 = v22;
    swift_release();
    type metadata accessor for UsoTaskBuilder_call_common_PhoneCall();
    swift_allocObject();
    uint64_t v65 = UsoTaskBuilder_call_common_PhoneCall.init()();
    dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
    uint64_t v62 = v2;
    if (v70)
    {
      uint64_t v23 = dispatch thunk of CodeGenBase.usoIdentifiers.getter();
      swift_release();
      uint64_t v24 = *(void *)(v23 + 16);
      a2 = v66;
      if (v24)
      {
        uint64_t v53 = v9;
        uint64_t v54 = v13;
        uint64_t v25 = v56 + 16;
        long long v26 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
        unint64_t v27 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
        uint64_t v56 = v23;
        unint64_t v28 = v23 + v27;
        uint64_t v29 = *(void *)(v25 + 56);
        uint64_t v30 = (void (**)(char *, uint64_t))(v25 - 8);
        do
        {
          uint64_t v31 = v10;
          uint64_t v32 = v10;
          uint64_t v33 = v25;
          v26(v12, v28, v31);
          dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)();
          (*v30)(v12, v32);
          uint64_t v25 = v33;
          uint64_t v10 = v32;
          v28 += v29;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
        a2 = v66;
        long long v9 = v53;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      a2 = v66;
    }
    dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
    if (v70)
    {
      uint64_t v35 = dispatch thunk of CodeGenBase.utteranceAlignments.getter();
      swift_release();
      uint64_t v36 = *(void *)(v35 + 16);
      if (v36)
      {
        uint64_t v37 = v57 + 16;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
        unint64_t v39 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
        uint64_t v57 = v35;
        unint64_t v40 = v35 + v39;
        uint64_t v41 = *(void *)(v37 + 56);
        uint64_t v42 = (void (**)(char *, uint64_t))(v37 - 8);
        uint64_t v43 = v55;
        do
        {
          uint64_t v44 = v37;
          v38(v9, v40, v43);
          dispatch thunk of UsoBuilder.addUtteranceAlignment(utteranceAlignment:)();
          (*v42)(v9, v43);
          uint64_t v37 = v44;
          v40 += v41;
          --v36;
        }
        while (v36);
        swift_bridgeObjectRelease();
        a2 = v66;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v45 = v65;
    dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_46A030;
    *(void *)(v46 + 32) = v45;
    uint64_t v70 = v46;
    specialized Array._endMutation()();
    uint64_t v47 = type metadata accessor for UsoBuilderOptions();
    uint64_t v48 = v64;
    __swift_storeEnumTagSinglePayload(v64, 1, 1, v47);
    swift_retain();
    static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
    swift_bridgeObjectRelease();
    outlined destroy of UUID?(v48, &demangling cache variable for type metadata for UsoBuilderOptions?);
    unint64_t v49 = static UsoConversionUtils.convertGraphToTasks(graph:)();
    unint64_t v50 = v49;
    if (v49 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_19;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v49 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_19:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v50 & 0xC000000000000001) == 0, v50);
      if ((v50 & 0xC000000000000001) != 0)
      {
        uint64_t v34 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v34 = *(void *)(v50 + 32);
        swift_retain();
      }
      swift_release();
      swift_release();
      goto LABEL_24;
    }
    swift_release();
    swift_release();
    uint64_t v34 = 0;
LABEL_24:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_25;
  }
  uint64_t v34 = 0;
LABEL_25:
  *a2 = v34;
  Signpost.OpenSignpost.end()();
  return swift_release();
}

uint64_t static Transformer<>.transformer.getter@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  __swift_project_value_buffer(v7, a3);
  OUTLINED_FUNCTION_10();
  long long v9 = *(uint64_t (**)(uint64_t))(v8 + 16);

  return v9(a4);
}

uint64_t one-time initialization function for transfomer()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_ContactAddress?, INPersonHandle>);
  __swift_allocate_value_buffer(v0, static Transformer<>.transfomer);
  __swift_project_value_buffer(v0, (uint64_t)static Transformer<>.transfomer);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ContactAddress?);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INPersonHandle);
  return Transformer.init(transform:)();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transfomer@<X0>(uint64_t *a1@<X0>, id *a2@<X8>)
{
  uint64_t v3 = *a1;
  static Signpost.begin(_:)();
  if (v3)
  {
    uint64_t v4 = dispatch thunk of UsoEntity_common_ContactAddress.value.getter();
    uint64_t v6 = v5;
    dispatch thunk of UsoEntity_common_ContactAddress.label.getter();
    if (v7) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  long long v26 = v8;
  if (!v3)
  {
    uint64_t v12 = 0;
    goto LABEL_22;
  }
  CodeGenBase.entity.getter();
  uint64_t v9 = UsoEntity.valueTypeString.getter();
  uint64_t v11 = v10;
  swift_release();
  if (v9 == 0xD000000000000010 && v11 == 0x800000000049BE60) {
    goto LABEL_9;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_15;
  }
  CodeGenBase.entity.getter();
  uint64_t v14 = UsoEntity.valueTypeString.getter();
  uint64_t v16 = v15;
  swift_release();
  if (v14 == 0xD000000000000012 && v16 == 0x8000000000490C80)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v12 = 2;
    goto LABEL_16;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_15;
  }
  uint64_t v12 = 0;
LABEL_16:
  CodeGenBase.entity.getter();
  uint64_t v18 = UsoEntity.valueTypeString.getter();
  uint64_t v20 = v19;
  swift_release();
  if (v18 == 0xD000000000000012 && v20 == 0x8000000000490C80)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_22;
    }
  }
  if (v6)
  {
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v4 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v6 = v23;
  }
LABEL_22:
  id v24 = objc_allocWithZone((Class)INPersonHandle);
  *a2 = @nonobjc INPersonHandle.init(value:type:label:)(v4, v6, v12, v26);
  Signpost.OpenSignpost.end()();
  return swift_release();
}

unint64_t SpecifyingContactAddress.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t closure #3 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)(uint64_t a1)
{
  uint64_t v71 = type metadata accessor for IdentifierAppBundle();
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v2 = __chkstk_darwin(v71);
  uint64_t v66 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  int v67 = (char *)&v65 - v4;
  uint64_t v74 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier();
  uint64_t v72 = *(void *)(v74 - 8);
  uint64_t v5 = __chkstk_darwin(v74);
  uint64_t v68 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v73 = (char *)&v65 - v7;
  uint64_t v8 = type metadata accessor for IdentifierNamespace();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Google_Protobuf_StringValue();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a1;
  Siri_Nlu_External_UsoEntityIdentifier.namespace.getter();
  uint64_t v16 = Google_Protobuf_StringValue.value.getter();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for IdentifierNamespace.nsItemId(_:), v8);
  uint64_t v19 = IdentifierNamespace.rawValue.getter();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v16 == v19 && v18 == v21) {
    char v23 = 1;
  }
  else {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v24 = v74;
  uint64_t v25 = v72;
  long long v26 = v73;
  uint64_t v28 = v70;
  uint64_t v27 = v71;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v29(v26, v28, v24);
  if ((v23 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
    char v60 = 0;
    return v60 & 1;
  }
  uint64_t v70 = Siri_Nlu_External_UsoEntityIdentifier.backingAppBundleID.getter();
  uint64_t v31 = v30;
  uint64_t v32 = v69;
  uint64_t v33 = *(char **)(v69 + 104);
  uint64_t v34 = v67;
  ((void (*)(char *, void, uint64_t))v33)(v67, enum case for IdentifierAppBundle.abContacts(_:), v27);
  uint64_t v35 = IdentifierAppBundle.rawValue.getter();
  uint64_t v36 = v27;
  uint64_t v37 = v35;
  uint64_t v39 = v38;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v40 = v32 + 8;
  uint64_t v42 = v34;
  uint64_t v43 = v41;
  v41(v42, v36);
  if (v70 == v37 && v31 == v39)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v46 = v68;
    uint64_t v47 = v73;
    uint64_t v48 = v74;
    v29(v68, (uint64_t)v73, v74);
    goto LABEL_20;
  }
  int v67 = v33;
  uint64_t v69 = v40;
  char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = v68;
  uint64_t v47 = v73;
  uint64_t v48 = v74;
  v29(v68, (uint64_t)v73, v74);
  if (v45)
  {
LABEL_20:
    uint64_t v61 = *(void (**)(char *, uint64_t))(v72 + 8);
    v61(v46, v48);
    v61(v47, v48);
    char v60 = 1;
    return v60 & 1;
  }
  unint64_t v49 = v43;
  uint64_t v50 = Siri_Nlu_External_UsoEntityIdentifier.backingAppBundleID.getter();
  uint64_t v52 = v51;
  uint64_t v53 = v66;
  uint64_t v54 = v71;
  ((void (*)(char *, void, uint64_t))v67)(v66, enum case for IdentifierAppBundle.abApplications(_:), v71);
  uint64_t v55 = IdentifierAppBundle.rawValue.getter();
  uint64_t v57 = v56;
  v49(v53, v54);
  BOOL v58 = v50 == v55 && v52 == v57;
  uint64_t v59 = v72;
  if (v58) {
    char v60 = 1;
  }
  else {
    char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void (**)(char *, uint64_t))(v59 + 8);
  uint64_t v63 = v74;
  v62(v68, v74);
  v62(v73, v63);
  return v60 & 1;
}

BOOL closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  CodeGenBase.entity.getter();
  int v2 = dispatch thunk of RRReferenceResolverProtocol.hasReference(usoEntity:)();
  swift_release();
  uint64_t v3 = dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter();
  swift_release();
  if (v3) {
    goto LABEL_2;
  }
  if (dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter())
  {
    uint64_t v5 = dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter();
    swift_release();
    if (v5)
    {
      swift_release();
LABEL_2:
      int v4 = 1;
      goto LABEL_7;
    }
  }
  int v4 = 0;
LABEL_7:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    int v13 = v2;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315650;
    if (one-time initialization token for logPrefix != -1) {
      swift_once();
    }
    uint64_t v10 = static NLv4Transformer.logPrefix;
    uint64_t v11 = unk_5D5060;
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v10, v11, 0xD000000000000041, 0x800000000049BC60);
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    int v2 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 18) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v7, v8, "%s hasReference=%{BOOL}d, hasQuantifier=%{BOOL}d.", (uint8_t *)v9, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return ((v2 | v4) & 1) == 0;
}

void UserDialogActParse.isPlayIt.getter()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_62_0();
  uint64_t v2 = type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?));
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_12_0();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_46_11();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v26 - v16;
  static UsoTask_CodegenConverter.convert(task:)();
  if (!v27[3])
  {
    uint64_t v20 = &demangling cache variable for type metadata for Any?;
    uint64_t v21 = v27;
LABEL_19:
    outlined destroy of UUID?((uint64_t)v21, v20);
    goto LABEL_20;
  }
  type metadata accessor for UsoTask_play_common_Voicemail();
  if (swift_dynamicCast())
  {
    swift_retain();
    dispatch thunk of Uso_VerbTemplate_Reference.reference.getter();
    swift_release();
    uint64_t v18 = v27[0];
    swift_release();
    if (v18)
    {
      v26[0] = v4;
      dispatch thunk of Uso_VerbTemplate_Reference.reference.getter();
      if (v27[0] && (uint64_t v19 = dispatch thunk of CodeGenGlobalArgs.usoReferenceType.getter(), swift_release(), v19))
      {
        dispatch thunk of UsoEntity_common_ReferenceType.definedValue.getter();
        swift_release();
      }
      else
      {
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v2);
      }
      uint64_t v22 = v26[0];
      (*(void (**)(uint64_t, void, uint64_t))(v26[0] + 104))(v1, enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:), v2);
      __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
      uint64_t v23 = v0 + *(int *)(v9 + 48);
      outlined init with copy of ConfirmationResponse?((uint64_t)v17, v0, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      outlined init with copy of ConfirmationResponse?(v1, v23, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      OUTLINED_FUNCTION_2_63(v0);
      if (!v24)
      {
        outlined init with copy of ConfirmationResponse?(v0, (uint64_t)v14, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
        OUTLINED_FUNCTION_2_63(v23);
        if (!v24)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v8, v23, v2);
          lazy protocol witness table accessor for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues(&lazy protocol witness table cache variable for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues);
          dispatch thunk of static Equatable.== infix(_:_:)();
          swift_release();
          uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
          v25(v8, v2);
          outlined destroy of UUID?(v1, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
          outlined destroy of UUID?((uint64_t)v17, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
          v25((uint64_t)v14, v2);
          outlined destroy of UUID?(v0, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
          goto LABEL_20;
        }
        swift_release();
        outlined destroy of UUID?(v1, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
        outlined destroy of UUID?((uint64_t)v17, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v2);
        goto LABEL_18;
      }
      swift_release();
      outlined destroy of UUID?(v1, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      outlined destroy of UUID?((uint64_t)v17, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      OUTLINED_FUNCTION_2_63(v23);
      if (!v24)
      {
LABEL_18:
        uint64_t v20 = &demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?);
        uint64_t v21 = (void *)v0;
        goto LABEL_19;
      }
      outlined destroy of UUID?(v0, &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
    }
    else
    {
      swift_release();
    }
  }
LABEL_20:
  OUTLINED_FUNCTION_26_1();
}

PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional __swiftcall UsoIdentifierNamespaceType.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  v3._object = v1;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of UsoIdentifierNamespaceType.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v2 >= 0xD) {
    return (PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional)13;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional)v2;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance UsoIdentifierNamespaceType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance UsoIdentifierNamespaceType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UsoIdentifierNamespaceType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance UsoIdentifierNamespaceType(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UsoIdentifierNamespaceType@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional *a2@<X8>)
{
  result.value = UsoIdentifierNamespaceType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance UsoIdentifierNamespaceType()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = UsoIdentifierNamespaceType.rawValue.getter(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

const char *String.UsoAttributeNameLabel.unsafeMutableAddressor()
{
  return "label";
}

unint64_t static String.UsoAttributeNameRelationshipType.getter()
{
  return 0xD000000000000010;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance UsoIdentifierAppBundleType(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance UsoIdentifierAppBundleType()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UsoIdentifierAppBundleType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance UsoIdentifierAppBundleType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::UsoIdentifierAppBundleType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UsoIdentifierAppBundleType@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UsoIdentifierAppBundleType_optional *a2@<X8>)
{
  result.value = UsoIdentifierAppBundleType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance UsoIdentifierAppBundleType()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = UsoIdentifierAppBundleType.rawValue.getter(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

PhoneCallFlowDelegatePlugin::SpecifyingContactAddress_optional __swiftcall SpecifyingContactAddress.init(rawValue:)(Swift::String rawValue)
{
  return (PhoneCallFlowDelegatePlugin::SpecifyingContactAddress_optional)UsoIdentifierAppBundleType.init(rawValue:)();
}

uint64_t UsoIdentifierAppBundleType.init(rawValue:)()
{
  OUTLINED_FUNCTION_4_5();
  v3._rawValue = v2;
  v4._object = v0;
  _findStringSwitchCase(cases:string:)(v3, v4);
  OUTLINED_FUNCTION_15_0();
  if (v1 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v1) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SpecifyingContactAddress(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SpecifyingContactAddress()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SpecifyingContactAddress()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SpecifyingContactAddress(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SpecifyingContactAddress_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SpecifyingContactAddress@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SpecifyingContactAddress_optional *a2@<X8>)
{
  result.value = SpecifyingContactAddress.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SpecifyingContactAddress()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = SpecifyingContactAddress.rawValue.getter(v1);
  unint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional __swiftcall EntitySpanPropertyKey.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  v3._object = v1;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EntitySpanPropertyKey.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v2 >= 4) {
    return (PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional)v2;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance EntitySpanPropertyKey()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance EntitySpanPropertyKey()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EntitySpanPropertyKey()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance EntitySpanPropertyKey()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EntitySpanPropertyKey@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional *a2@<X8>)
{
  result.value = EntitySpanPropertyKey.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance EntitySpanPropertyKey()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = EntitySpanPropertyKey.rawValue.getter(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

BOOL EntitySpanLabel.init(rawValue:)()
{
  OUTLINED_FUNCTION_4_5();
  v2._object = v0;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EntitySpanLabel.init(rawValue:), v2);
  OUTLINED_FUNCTION_15_0();
  return v1 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance EntitySpanLabel@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = EntitySpanLabel.init(rawValue:)();
  *a1 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EntitySpanLabel(char *a1@<X8>)
{
  a1[15] = -18;
}

uint64_t closure #1 in static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MatchedResultsSetting();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for MatchedResultsSetting.defaultMatching(_:), v4);
  int64_t v8 = swift_bridgeObjectRetain();
  static NLTransformerReferenceHelper.resolveEntitiesTargetContacts(_:referenceResolver:matchedResultsSetting:)(v8, a1, v7, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  return outlined init with take of AnnotatedApp?((uint64_t)v10, a2, &demangling cache variable for type metadata for TargetContacts?);
}

uint64_t specialized NLv4Transformer.init(referenceResolver:featureManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_12_0();
  v18[3] = a4;
  long long v18[4] = a5;
  __swift_allocate_boxed_opaque_existential_1(v18);
  OUTLINED_FUNCTION_10();
  (*(void (**)(void))(v14 + 32))();
  _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  outlined init with take of AppSelectionSignalComponent(&v17, v15 + 24);
  type metadata accessor for TransformerInput(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLIntent?);
  Transformer.init(transform:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15NLv4Transformer_transformer, v5, v10);
  return a3;
}

uint64_t sub_39682C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

BOOL partial apply for closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)(uint64_t a1)
{
  return closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)(a1, *(void **)(v1 + 16));
}

unint64_t lazy protocol witness table accessor for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType()
{
  unint64_t result = lazy protocol witness table cache variable for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType;
  if (!lazy protocol witness table cache variable for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType()
{
  unint64_t result = lazy protocol witness table cache variable for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType;
  if (!lazy protocol witness table cache variable for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SpecifyingContactAddress and conformance SpecifyingContactAddress()
{
  unint64_t result = lazy protocol witness table cache variable for type SpecifyingContactAddress and conformance SpecifyingContactAddress;
  if (!lazy protocol witness table cache variable for type SpecifyingContactAddress and conformance SpecifyingContactAddress)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SpecifyingContactAddress and conformance SpecifyingContactAddress);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey()
{
  unint64_t result = lazy protocol witness table cache variable for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey;
  if (!lazy protocol witness table cache variable for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntitySpanLabel and conformance EntitySpanLabel()
{
  unint64_t result = lazy protocol witness table cache variable for type EntitySpanLabel and conformance EntitySpanLabel;
  if (!lazy protocol witness table cache variable for type EntitySpanLabel and conformance EntitySpanLabel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntitySpanLabel and conformance EntitySpanLabel);
  }
  return result;
}

uint64_t ObjC metadata update function for NLv4Transformer()
{
  return type metadata accessor for NLv4Transformer(0);
}

uint64_t type metadata accessor for NLv4Transformer(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for NLv4Transformer);
}

void type metadata completion function for NLv4Transformer()
{
  type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?>()
{
  if (!lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>)
  {
    type metadata accessor for TransformerInput(255);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PhoneCallNLIntent?);
    unint64_t v0 = type metadata accessor for Transformer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
    }
  }
}

uint64_t destroy for UserDialogActParse()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for UserDialogActParse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UserDialogActParse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for UserDialogActParse(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for UserDialogActParse()
{
}

unsigned char *storeEnumTagSinglePayload for UsoIdentifierNamespaceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x396D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

void type metadata accessor for UsoIdentifierNamespaceType()
{
}

void type metadata accessor for UsoIdentifierAppBundleType()
{
}

unsigned char *storeEnumTagSinglePayload for UsoIdentifierAppBundleType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x396E48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SpecifyingContactAddress()
{
}

unsigned char *storeEnumTagSinglePayload for EntitySpanPropertyKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x396F48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntitySpanPropertyKey()
{
}

unsigned char *storeEnumTagSinglePayload for EntitySpanLabel(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x397018);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for EntitySpanLabel()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TransformerInput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
  }
  return a1;
}

uint64_t initializeWithCopy for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(void))(v10 - 8))();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  uint64_t v10 = *((void *)v9 + 3);
  if (!*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, long long *))(v10 - 8))(v8, v9);
      return a1;
    }
LABEL_7:
    long long v11 = *v9;
    long long v12 = v9[1];
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    return a1;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(v8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v8, (uint64_t *)v9);
  return a1;
}

uint64_t initializeWithTake for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  }
  long long v9 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v9;
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_397460);
}

uint64_t sub_397460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_397510);
}

void sub_397510(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_62_0();
  type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20) + 24) = a2;
  }
}

uint64_t type metadata completion function for TransformerInput()
{
  uint64_t result = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t *a11)
{
  uint64_t result = specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()(*a1, a1[1], a2, a3, a4, a5, a6, a7, a8, a10, *a11);
  if (!v11)
  {
    *a9 = result;
    a9[1] = v14;
  }
  return result;
}

uint64_t partial apply for specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned int *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2, *(void *)(v2 + 72), *(uint64_t **)(v2 + 80));
}

uint64_t partial apply for closure #1 in static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:)(*(void *)(v1 + 24), a1);
}

uint64_t outlined init with copy of PhoneRRTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_62_0();
  v4(v3);
  OUTLINED_FUNCTION_15();
  uint64_t v5 = OUTLINED_FUNCTION_74();
  v6(v5);
  return a2;
}

uint64_t sub_397738()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t partial apply for closure #1 in static Transformer<>.transformer(referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:)@<X0>(_OWORD *a1@<X8>)
{
  return closure #1 in static Transformer<>.transformer(referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:)((void *)(v1 + 16), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72), a1);
}

uint64_t outlined destroy of NLv4UpdateTransformer(uint64_t a1)
{
  return a1;
}

uint64_t sub_3977F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

void type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult()
{
  if (!lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult)
  {
    unint64_t v0 = type metadata accessor for Transformer<>.SrrOrdinalResolvedResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
    }
  }
}

uint64_t type metadata accessor for Transformer<>.SrrOrdinalResolvedResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for closure #1 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t partial apply for closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)(a1, a2, a3);
}

uint64_t partial apply for closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)(a1, a2);
}

uint64_t sub_397900()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:)(a1, *(void *)(v2 + 16), (void *)(v2 + 24), a2);
}

void destroy for Transformer<>.SrrOrdinalResolvedResult(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
}

void *initializeWithCopy for Transformer<>.SrrOrdinalResolvedResult(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *a1 = *(void *)a2;
  uint64_t v5 = a1 + 1;
  uint64_t v6 = a2 + 8;
  uint64_t v7 = *(void *)(a2 + 32);
  id v8 = v4;
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    a1[4] = v7;
    a1[5] = v9;
    (**(void (***)(void *, uint64_t, uint64_t))(v7 - 8))(v5, v6, v7);
  }
  else
  {
    long long v10 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
    *((_OWORD *)v5 + 1) = v10;
    v5[4] = *(void *)(v6 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for Transformer<>.SrrOrdinalResolvedResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v7)
    {
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 8);
    long long v9 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 24) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t assignWithTake for Transformer<>.SrrOrdinalResolvedResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for Transformer<>.SrrOrdinalResolvedResult(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Transformer<>.SrrOrdinalResolvedResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t destroy for TargetContacts()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TargetContacts(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetContacts(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for TargetContacts(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetContacts(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetContacts(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *type metadata accessor for TargetContacts()
{
  return &unk_569BD8;
}

uint64_t OUTLINED_FUNCTION_1_98()
{
  return v0;
}

void OUTLINED_FUNCTION_6_85(uint64_t a1@<X8>)
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v1, v2, 0xD000000000000041, (a1 - 32) | 0x8000000000000000);
}

uint64_t OUTLINED_FUNCTION_10_62()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_11_66(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return Transformer.transform.getter();
}

uint64_t OUTLINED_FUNCTION_19_40(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_23_42()
{
  return 0x614E6E6F73726570;
}

uint64_t OUTLINED_FUNCTION_24_38()
{
  return swift_release();
}

id OUTLINED_FUNCTION_29_31()
{
  uint64_t v3 = *(const char **)(v0 + 3360);
  return [v1 v3];
}

BOOL OUTLINED_FUNCTION_30_32(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_32_24()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_33_25()
{
  uint64_t v2 = *(void *)(v0 - 160);
  unint64_t v3 = *(void *)(v0 - 152);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2, v3, (uint64_t *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_38_30()
{
  return v0;
}

id OUTLINED_FUNCTION_39_28()
{
  unint64_t v3 = *(const char **)(v1 + 40);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_42_30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)(a1, a2, a3, 2, 0, 4, 2, 5, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_43_26(uint64_t result)
{
  *(void *)(v1 + 208) = result;
  *(void *)(v2 - 256) = 0;
  *(void *)(v2 - 248) = 0xE000000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_44_25(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_26(uint64_t a1)
{
  *(void *)(v1 - 256) = a1;
  return v1 - 256;
}

void OUTLINED_FUNCTION_49_22()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_51_19()
{
  return specialized NLv4Transformer.init(referenceResolver:featureManager:)(v4, v0, v1, v2, v3);
}

void OUTLINED_FUNCTION_53_23()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_55_19()
{
  uint64_t v3 = *(void *)(v1 - 256);
  unint64_t v4 = *(void *)(v1 - 248);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v4, (uint64_t *)(v0 + 256));
}

uint64_t OUTLINED_FUNCTION_58_22()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_59_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_62_20(uint64_t a1)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v1, (uint64_t *)(v2 - 184));
}

uint64_t OUTLINED_FUNCTION_63_13(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of ConfirmationResponse?(v3 + 216, v4 - 256, a3);
}

uint64_t OUTLINED_FUNCTION_67_14()
{
  *(void *)(v0 - 256) = 0;
  *(void *)(v0 - 248) = 0xE000000000000000;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_68_13()
{
  *(void *)(v0 + 16) = v1;
}

void OUTLINED_FUNCTION_70_9(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000037;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t OUTLINED_FUNCTION_72_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_75_9()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_76_10()
{
  *(void *)(v0 - 256) = 0;
  *(void *)(v0 - 248) = 0xE000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t TemplatingResult.merge(with:behaviorAfterSpeaking:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v36 = a3;
  uint64_t v31 = type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BehaviorAfterSpeaking?);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for BehaviorAfterSpeaking();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v34 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = TemplatingResult.print.getter();
  TemplatingResult.print.getter();
  uint64_t v37 = v21;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v32 = v37;
  uint64_t v22 = TemplatingResult.speak.getter();
  uint64_t v35 = a1;
  uint64_t v23 = v31;
  TemplatingResult.speak.getter();
  uint64_t v37 = v22;
  specialized Array.append<A>(contentsOf:)();
  outlined init with copy of BehaviorAfterSpeaking?(v33, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, v23);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    TemplatingResult.behaviorAfterSpeaking.getter();
    uint64_t v24 = OUTLINED_FUNCTION_1_99();
    v25(v24);
    outlined destroy of BehaviorAfterSpeaking?((uint64_t)v12);
  }
  else
  {
    uint64_t v26 = OUTLINED_FUNCTION_1_99();
    v27(v26);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v12, v13);
  }
  uint64_t v28 = TemplatingResult.dialogIdentifier.getter();
  TemplatingResult.dialogIdentifier.getter();
  uint64_t v37 = v28;
  specialized Array.append<A>(contentsOf:)();
  TemplatingResult.templateIdentifier.getter();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v34, v20, v13);
  TemplatingResult.init(templateIdentifier:speak:print:behaviorAfterSpeaking:dialogIdentifier:)();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v13);
}

uint64_t outlined init with copy of BehaviorAfterSpeaking?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BehaviorAfterSpeaking?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static TemplatingResult.makeDisplayTextResult(print:templateIdentifier:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return TemplatingResult.init(templateIdentifier:speak:print:)();
}

uint64_t OUTLINED_FUNCTION_1_99()
{
  return v0;
}

PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional __swiftcall HangUpCallCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of HangUpCallCATsSimple.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional)v3;
  }
}

void HangUpCallCATsSimple.Properties.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_24_10();
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance HangUpCallCATsSimple.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance HangUpCallCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance HangUpCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = HangUpCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance HangUpCallCATsSimple.Properties(void *a1@<X8>)
{
  HangUpCallCATsSimple.Properties.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t HangUpCallCATsSimple.errorWithCode()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnnounceCallBellCATsSimple.announceCallBellEnded();
  OUTLINED_FUNCTION_24_10();
  return v3(0xD000000000000018);
}

BOOL HangUpCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of HangUpCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = HangUpCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HangUpCallCATsSimple.errorWithCodeAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v1 = v2;
  v1[1] = AnnounceCallBellCATsSimple.announceCallBellEnded();
  OUTLINED_FUNCTION_24_10();
  return v4(0xD000000000000018);
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds);
  }
  return result;
}

uint64_t HangUpCallCATsSimple.errorWithCodeNoCallToHangUp()()
{
  OUTLINED_FUNCTION_1_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnnounceCallBellCATsSimple.announceCallBellEndedAsLabels();
  OUTLINED_FUNCTION_24_10();
  return v3(0xD000000000000026);
}

BOOL HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HangUpCallCATsSimple.errorWithCodeNoCallToHangUpAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v1 = v2;
  v1[1] = AnnounceCallBellCATsSimple.announceCallBellEnded();
  OUTLINED_FUNCTION_24_10();
  return v4(0xD000000000000026);
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds);
  }
  return result;
}

uint64_t HangUpCallCATsSimple.intentHandledResponse()()
{
  OUTLINED_FUNCTION_1_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = AnnounceCallBellCATsSimple.announceCallBellEnded();
  OUTLINED_FUNCTION_24_10();
  return v3(0xD000000000000020);
}

BOOL HangUpCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of HangUpCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = HangUpCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HangUpCallCATsSimple.intentHandledResponseAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v1 = v2;
  v1[1] = AnnounceCallBellCATsSimple.announceCallBellEnded();
  OUTLINED_FUNCTION_24_10();
  return v4(0xD000000000000020);
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

uint64_t HangUpCallCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return HangUpCallCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t HangUpCallCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10 - 8);
  outlined init with copy of URL?(a1, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  outlined destroy of URL?(a1);
  return v12;
}

uint64_t HangUpCallCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t HangUpCallCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for HangUpCallCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for HangUpCallCATsSimple;
  if (!type metadata singleton initialization cache for HangUpCallCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for HangUpCallCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for HangUpCallCATsSimple()
{
  return type metadata accessor for HangUpCallCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for HangUpCallCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3992E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for HangUpCallCATsSimple.Properties()
{
}

void type metadata accessor for HangUpCallCATsSimple.ErrorWithCodeDialogIds()
{
}

void type metadata accessor for HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for HangUpCallCATsSimple.ErrorWithCodeDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3993D0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for HangUpCallCATsSimple.IntentHandledResponseDialogIds()
{
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional __swiftcall OngoingCallCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of OngoingCallCATsSimple.Properties.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 5) {
    return (PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional)5;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional)v1;
  }
}

void OngoingCallCATsSimple.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallCATsSimple.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance OngoingCallCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallCATsSimple.Properties()
{
  char v1 = OUTLINED_FUNCTION_32();
  OngoingCallCATsSimple.Properties.rawValue.getter(v1);
  void *v0 = v2;
  v0[1] = v3;
}

uint64_t OngoingCallCATsSimple.addOrCallPrompt()()
{
  OUTLINED_FUNCTION_1_0();
  char v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple;
  OUTLINED_FUNCTION_24_10();
  return v3(0xD00000000000001BLL);
}

BOOL OngoingCallCATsSimple.AddOrCallPromptDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.AddOrCallPromptDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = OngoingCallCATsSimple.AddOrCallPromptDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t OngoingCallCATsSimple.addOrCallPromptAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v1 = v2;
  v1[1] = protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance AnswerCallCATsSimple;
  OUTLINED_FUNCTION_24_10();
  return v4(0xD00000000000001BLL);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds);
  }
  return result;
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:));
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_19_1(v3);
  uint64_t v5 = OUTLINED_FUNCTION_2_66(v4, (__n128)xmmword_467710);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneCallRecord(v5);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_8_1();
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  *unsigned int v6 = v0;
  v6[1] = OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:);
  OUTLINED_FUNCTION_10_16();
  return v8(0xD00000000000002CLL);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *unsigned int v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::ConfirmHangUpForForeignEmergencyDialogIds_optional __swiftcall OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::ConfirmHangUpForForeignEmergencyDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x636972656E6567;
  }
  else {
    return 0x656D695465636166;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::ConfirmHangUpForForeignEmergencyDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::ConfirmHangUpForForeignEmergencyDialogIds_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.rawValue.getter(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergencyAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)OngoingCallCATsSimple.confirmHangUpForForeignEmergencyAsLabels(currentCall:));
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergencyAsLabels(currentCall:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_19_1(v3);
  uint64_t v5 = OUTLINED_FUNCTION_2_66(v4, (__n128)xmmword_467710);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneCallRecord(v5);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_8_1();
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds();
  OUTLINED_FUNCTION_25_1();
  *unsigned int v6 = v7;
  v6[1] = OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:);
  OUTLINED_FUNCTION_24_10();
  return v9(0xD00000000000002CLL);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds);
  }
  return result;
}

uint64_t OngoingCallCATsSimple.confirmHangUpForLocalEmergency()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple;
  OUTLINED_FUNCTION_24_10();
  return v3(0xD00000000000002ALL);
}

BOOL OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t OngoingCallCATsSimple.confirmHangUpForLocalEmergencyAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v1 = v2;
  v1[1] = protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple;
  OUTLINED_FUNCTION_24_10();
  return v4(0xD00000000000002ALL);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds);
  }
  return result;
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergency(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)OngoingCallCATsSimple.informHangUpForEmergency(currentCall:));
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergency(currentCall:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_19_1(v3);
  uint64_t v5 = OUTLINED_FUNCTION_2_66(v4, (__n128)xmmword_467710);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneCallRecord(v5);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_8_1();
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  *unsigned int v6 = v0;
  v6[1] = OngoingCallCATsSimple.informHangUpForEmergency(currentCall:);
  OUTLINED_FUNCTION_10_16();
  return v8(0xD000000000000024);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *unsigned int v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::InformHangUpForEmergencyDialogIds_optional __swiftcall OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::InformHangUpForEmergencyDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::InformHangUpForEmergencyDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::InformHangUpForEmergencyDialogIds_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergencyAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)OngoingCallCATsSimple.informHangUpForEmergencyAsLabels(currentCall:));
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergencyAsLabels(currentCall:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_19_1(v3);
  uint64_t v5 = OUTLINED_FUNCTION_2_66(v4, (__n128)xmmword_467710);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneCallRecord(v5);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_8_1();
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds();
  OUTLINED_FUNCTION_25_1();
  *unsigned int v6 = v7;
  v6[1] = OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:);
  OUTLINED_FUNCTION_24_10();
  return v9(0xD000000000000024);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds);
  }
  return result;
}

uint64_t OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:));
}

uint64_t OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)swift_allocObject();
  v1[5] = v3;
  OUTLINED_FUNCTION_1_61(v3, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v5 = v2;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    v3[3].n128_u64[1] = 0;
    v3[4].n128_u64[0] = 0;
  }
  uint64_t v6 = OUTLINED_FUNCTION_8_86(v4, v5);
  if (v0)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    v3[6].n128_u64[1] = 0;
    v3[7].n128_u64[0] = 0;
  }
  v3[6].n128_u64[0] = v0;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_19_3();
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v1[6] = v7;
  *uint64_t v7 = v1;
  v7[1] = OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:);
  OUTLINED_FUNCTION_10_16();
  return v9(0xD000000000000019);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional __swiftcall OngoingCallCATsSimple.NewCallPromptDialogIds.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of OngoingCallCATsSimple.NewCallPromptDialogIds.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 3) {
    return (PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional)v1;
  }
}

void OngoingCallCATsSimple.NewCallPromptDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_24_10();
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.NewCallPromptDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  OngoingCallCATsSimple.NewCallPromptDialogIds.rawValue.getter(v1);
  void *v0 = v2;
  v0[1] = v3;
}

uint64_t OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:));
}

uint64_t OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)swift_allocObject();
  v1[5] = v3;
  OUTLINED_FUNCTION_1_61(v3, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v5 = v2;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    v3[3].n128_u64[1] = 0;
    v3[4].n128_u64[0] = 0;
  }
  uint64_t v6 = OUTLINED_FUNCTION_8_86(v4, v5);
  if (v0)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    v3[6].n128_u64[1] = 0;
    v3[7].n128_u64[0] = 0;
  }
  v3[6].n128_u64[0] = v0;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_19_3();
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v1[6] = v7;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v7 = v8;
  v7[1] = OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:);
  OUTLINED_FUNCTION_24_10();
  return v10(0xD000000000000019);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds);
  }
  return result;
}

uint64_t OngoingCallCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return OngoingCallCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t OngoingCallCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10 - 8);
  outlined init with copy of URL?(a1, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  outlined destroy of URL?(a1);
  return v12;
}

uint64_t OngoingCallCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t OngoingCallCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for OngoingCallCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for OngoingCallCATsSimple;
  if (!type metadata singleton initialization cache for OngoingCallCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for OngoingCallCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for OngoingCallCATsSimple()
{
  return type metadata accessor for OngoingCallCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for OngoingCallCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x39AD80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.Properties()
{
}

void type metadata accessor for OngoingCallCATsSimple.AddOrCallPromptDialogIds()
{
}

void type metadata accessor for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for OngoingCallCATsSimple.AddOrCallPromptDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x39AE70);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x39AF70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for OngoingCallCATsSimple.NewCallPromptDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x39B070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.NewCallPromptDialogIds()
{
}

uint64_t OUTLINED_FUNCTION_8_86@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x6143746567726174;
  v2[11] = 0xEA00000000006C6CLL;
  return 0;
}

void *AnnounceIncomingCallNotificationDirectAction.identifier.unsafeMutableAddressor()
{
  return &static AnnounceIncomingCallNotificationDirectAction.identifier;
}

uint64_t AnnounceIncomingCallNotificationDirectAction.__allocating_init(invocation:contactStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t))(v11 + 16))(v9 - v8);
  uint64_t v12 = specialized AnnounceIncomingCallNotificationDirectAction.__allocating_init(invocation:contactStore:)(a1, v10, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v12;
}

unint64_t static AnnounceIncomingCallNotificationDirectAction.identifier.getter()
{
  return 0xD000000000000046;
}

uint64_t key path setter for AnnounceIncomingCallNotificationDirectAction.callProviderBundleId : AnnounceIncomingCallNotificationDirectAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t AnnounceIncomingCallNotificationDirectAction.callProviderBundleId.getter()
{
  OUTLINED_FUNCTION_5_21();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t key path setter for AnnounceIncomingCallNotificationDirectAction.callUUID : AnnounceIncomingCallNotificationDirectAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 72) = v3;
  *(void *)(v4 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t AnnounceIncomingCallNotificationDirectAction.callUUID.getter()
{
  OUTLINED_FUNCTION_5_21();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

void key path setter for AnnounceIncomingCallNotificationDirectAction.caller : AnnounceIncomingCallNotificationDirectAction(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 88);
  *(void *)(v3 + 88) = v2;
  id v5 = v2;
}

void *AnnounceIncomingCallNotificationDirectAction.caller.getter()
{
  OUTLINED_FUNCTION_5_21();
  uint64_t v1 = *(void **)(v0 + 88);
  id v2 = v1;
  return v1;
}

void key path setter for AnnounceIncomingCallNotificationDirectAction.notification : AnnounceIncomingCallNotificationDirectAction(void **a1, uint64_t *a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 96);
  *(void *)(v3 + 96) = v2;
  id v5 = v2;
}

id AnnounceIncomingCallNotificationDirectAction.notification.getter()
{
  OUTLINED_FUNCTION_5_21();
  uint64_t v1 = *(void **)(v0 + 96);

  return v1;
}

uint64_t key path setter for AnnounceIncomingCallNotificationDirectAction.callCapability : AnnounceIncomingCallNotificationDirectAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 104) = v2;
  return result;
}

uint64_t AnnounceIncomingCallNotificationDirectAction.callCapability.getter()
{
  OUTLINED_FUNCTION_5_21();
  return *(void *)(v0 + 104);
}

void *AnnounceIncomingCallNotificationDirectAction.__allocating_init(appBundleId:notification:contactStore:)()
{
  OUTLINED_FUNCTION_11_14();
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(v0, *(void *)(v0 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_75(v2, v7);
  v4(v3);
  id v5 = OUTLINED_FUNCTION_5_73();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v5;
}

void *AnnounceIncomingCallNotificationDirectAction.init(appBundleId:notification:contactStore:)()
{
  OUTLINED_FUNCTION_11_14();
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(void *)(v1 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_75(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_5_73();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v6;
}

NSObject *AnnounceIncomingCallNotificationDirectAction.callRecord.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v0 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2 - v1;
  OUTLINED_FUNCTION_22();
  uint64_t v5 = (*(uint64_t (**)(void))(v4 + 152))();
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v8);
  OUTLINED_FUNCTION_22();
  uint64_t v10 = (void *)(*(uint64_t (**)(void))(v9 + 176))();
  OUTLINED_FUNCTION_22();
  uint64_t v12 = (*(uint64_t (**)(void))(v11 + 224))();
  id v13 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
  OUTLINED_FUNCTION_22();
  uint64_t v15 = (*(uint64_t (**)(void))(v14 + 128))();
  uint64_t v17 = v16;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  id v19 = objc_allocWithZone((Class)INCallRecord);
  id v20 = @nonobjc INCallRecord.init(__identifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)(v5, v7, v3, v10, 6, v12, 0, 0, 3, v13, 0, 0, v15, v17, isa);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  uint64_t v22 = v20;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 138412290;
    uint64_t v27 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v26 = v22;

    _os_log_impl(&dword_0, v23, v24, "#AnnounceIncomingCallNotificationDirectAction: Call Notification INCallRecord to announce = %@.", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    uint64_t v23 = v22;
  }

  return v22;
}

id AnnounceIncomingCallNotificationDirectAction.makeINPerson(contact:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v3 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5 - v4;
  if (!a1) {
    return 0;
  }
  id v7 = a1;
  uint64_t v8 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v7, (SEL *)&selRef_cnContactIdentifier);
  if (v9
    && (uint64_t v10 = v8,
        uint64_t v11 = v9,
        uint64_t v12 = v1[5],
        uint64_t v13 = v1[6],
        __swift_project_boxed_opaque_existential_1(v1 + 2, v12),
        id v37 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v10, v11, v12, v13),
        swift_bridgeObjectRelease(),
        v37))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_0, v39, v40, "#AnnounceIncomingCallNotificationDirectAction: Make INPerson in CNContactStore.", v41, 2u);
      OUTLINED_FUNCTION_6();
    }
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "#AnnounceIncomingCallNotificationDirectAction: Make INPerson with custom identifier.", v17, 2u);
      OUTLINED_FUNCTION_6();
    }

    id v18 = [v7 handle];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    id v22 = [v7 handleType];
    id v23 = objc_allocWithZone((Class)INPersonHandle);
    id v24 = @nonobjc INPersonHandle.init(value:type:)(v19, v21, (uint64_t)v22);
    uint64_t v25 = type metadata accessor for PersonNameComponents();
    __swift_storeEnumTagSinglePayload(v6, 1, 1, v25);
    uint64_t v26 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v7, (SEL *)&selRef_displayName);
    uint64_t v28 = v27;
    uint64_t v29 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v7, (SEL *)&selRef_cnContactIdentifier);
    uint64_t v31 = v30;
    uint64_t v32 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v7, (SEL *)&selRef_customIdentifier);
    uint64_t v34 = v33;
    id v35 = objc_allocWithZone((Class)INPerson);
    id v37 = @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)(v24, v6, v26, v28, 0, v29, v31, v32, v34);
  }

  return v37;
}

uint64_t AnnounceIncomingCallNotificationDirectAction.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AnnounceIncomingCallNotificationDirectAction.__deallocating_deinit()
{
  AnnounceIncomingCallNotificationDirectAction.deinit();

  return swift_deallocClassInstance();
}

id @nonobjc INCallRecord.init(__identifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = 0;
  if (__swift_getEnumTagSinglePayload(a3, 1, v19) != 1)
  {
    uint64_t v20 = (void *)a3;
    Date._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_7_80();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v19);
  }
  if (a12)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v22 = 0;
  }
  if (a14)
  {
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v23 = 0;
  }
  id v24 = [v26 initWithIdentifier:v18 dateCreated:v20 caller:a4 callRecordType:a5 callCapability:a6 callDuration:a7 unseen:a8 preferredCallProvider:a9 numberOfCalls:a10 providerId:v22 providerBundleId:v23 isCallerIdBlocked:a15];

  return v24;
}

id @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v16 = type metadata accessor for PersonNameComponents();
  uint64_t v17 = 0;
  if (__swift_getEnumTagSinglePayload(a2, 1, v16) != 1)
  {
    uint64_t v17 = (void *)a2;
    PersonNameComponents._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_7_80();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v16);
  }
  if (a4)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  if (!a7)
  {
    NSString v20 = 0;
    if (a9) {
      goto LABEL_8;
    }
LABEL_10:
    NSString v21 = 0;
    goto LABEL_11;
  }
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a9) {
    goto LABEL_10;
  }
LABEL_8:
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_11:
  id v22 = [v10 initWithPersonHandle:a1 nameComponents:v17 displayName:v19 image:a5 contactIdentifier:v20 customIdentifier:v21];

  return v22;
}

uint64_t specialized AnnounceIncomingCallNotificationDirectAction.__allocating_init(invocation:contactStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v48[3] = a4;
  v48[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = Parse.DirectInvocation.userData.getter();
  if (!v10)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_24;
    }
    NSString v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v20 = 0;
    NSString v21 = "#AnnounceIncomingCallNotificationDirectAction: No userData.";
LABEL_23:
    _os_log_impl(&dword_0, v18, v19, v21, v20, 2u);
    swift_slowDealloc();
LABEL_24:

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    uint64_t v24 = type metadata accessor for Parse.DirectInvocation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
    return 0;
  }
  uint64_t v11 = v10;
  specialized Dictionary.subscript.getter(0x6C646E7542707061, 0xEB00000000644965, v10, v44);
  if (!v45)
  {
    swift_bridgeObjectRelease();
    outlined destroy of Any?((uint64_t)v44);
LABEL_13:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_24;
    }
    NSString v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v20 = 0;
    NSString v21 = "#AnnounceIncomingCallNotificationDirectAction: No App bundleId.";
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v13 = v46;
  unint64_t v12 = v47;
  specialized Dictionary.subscript.getter(0x6163696669746F6ELL, 0xEC0000006E6F6974, v11, v44);
  swift_bridgeObjectRelease();
  if (!v45)
  {
    swift_bridgeObjectRelease();
    outlined destroy of Any?((uint64_t)v44);
LABEL_19:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_24;
    }
    NSString v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v20 = 0;
    NSString v21 = "#AnnounceIncomingCallNotificationDirectAction: No notification data in UserData.";
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v14 = v46;
  unint64_t v15 = v47;
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for NSKeyedUnarchiver);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for UNNotification);
  uint64_t v16 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
  uint64_t v27 = v16;
  if (!v16)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_0, v18, v37, "#AnnounceIncomingCallNotificationDirectAction: No notification in archived data.", v38, 2u);
      swift_slowDealloc();
    }
    outlined consume of Data._Representation(v14, v15);
    goto LABEL_24;
  }
  unint64_t v41 = v15;
  uint64_t v28 = one-time initialization token for siriPhone;
  id v29 = v16;
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
  id v31 = v29;
  swift_bridgeObjectRetain_n();
  id v42 = v31;
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    os_log_type_t v40 = (void *)swift_slowAlloc();
    v44[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2112;
    uint64_t v46 = (uint64_t)v42;
    uint64_t v43 = v14;
    id v35 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v40 = v27;

    uint64_t v14 = v43;
    _os_log_impl(&dword_0, v32, v33, "#AnnounceIncomingCallNotificationDirectAction: initialized with bundleID: %s and notification %@.", (uint8_t *)v34, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  outlined init with copy of SignalProviding((uint64_t)v48, (uint64_t)v44);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, unint64_t, id, uint64_t *))(a3 + 248))(v13, v12, v42, v44);
  outlined consume of Data._Representation(v14, v41);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  uint64_t v39 = type metadata accessor for Parse.DirectInvocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(a1, v39);
  return v25;
}

void *specialized AnnounceIncomingCallNotificationDirectAction.init(appBundleId:notification:contactStore:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  void v35[3] = a6;
  v35[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  a5[11] = 0;
  a5[7] = a1;
  a5[8] = a2;
  id v14 = [a3 request];
  id v15 = [v14 identifier];

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  a5[9] = v16;
  a5[10] = v18;
  a5[12] = a3;
  outlined init with copy of SignalProviding((uint64_t)v35, (uint64_t)(a5 + 2));
  id v19 = a3;
  id v20 = [v19 request];
  id v21 = [v20 content];

  id v22 = [v21 communicationContext];
  if (!v22)
  {
    id v28 = 0;
    a5[13] = 1;
LABEL_13:
    uint64_t v29 = (*(uint64_t (**)(id))(*a5 + 264))(v28);

    goto LABEL_14;
  }
  uint64_t v23 = (char *)[v22 capabilities];
  uint64_t v24 = 1;
  if (v23 == (unsigned char *)&dword_0 + 1) {
    uint64_t v24 = 2;
  }
  a5[13] = v24;
  id v25 = [v22 sender];
  if (!v25)
  {
    id v30 = [v22 recipients];
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for _UNNotificationContact);
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      id v28 = (id)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_9;
      }
    }
    else
    {
      id v28 = *(id *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8));
      if (v28)
      {
LABEL_9:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v31 & 0xC000000000000001) == 0);
        if ((v31 & 0xC000000000000001) != 0) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v31 + 32);
        }
        id v28 = v32;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v26 = v25;
  uint64_t v27 = *(uint64_t (**)(id))(*a5 + 264);
  id v28 = v25;
  uint64_t v29 = v27(v26);

LABEL_14:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  swift_beginAccess();
  os_log_type_t v33 = (void *)a5[11];
  a5[11] = v29;

  return a5;
}

uint64_t sub_39CC3C()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 128))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_39CC80()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 152))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_39CCC4()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_39CD08()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 200))();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_39CD4C()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 224))();
  uint64_t *v0 = result;
  return result;
}

uint64_t type metadata accessor for AnnounceIncomingCallNotificationDirectAction()
{
  return self;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay27PhoneCallFlowDelegatePlugin0dE6RecordCG_AF20SingleVoicemailModelVs5NeverOTg504_s27defg13Plugin022Readk112ResultSetC8ProviderC012generatePlayG5Model33_377A4B54CA7F10D87321BF16D920F613LL5itemsSayAA06SinglegM0VGSayAA0aB6I13CG_tFAhKXEfU_AF0pkqrfT0CTf1cn_n(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v16 = a2;
  uint64_t v5 = type metadata accessor for SingleVoicemailModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v9)
  {
    while (1)
    {
      uint64_t v18 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v9 < 0) {
        break;
      }
      uint64_t v10 = 0;
      uint64_t v11 = v18;
      unint64_t v15 = a1 & 0xC000000000000001;
      while (v9 != v10)
      {
        if (v15)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v12 = *(void *)(a1 + 8 * v10 + 32);
          swift_retain();
        }
        uint64_t v17 = v12;
        closure #1 in ReadVoicemailResultSetFlowProvider.generatePlayVoicemailModel(items:)((unint64_t *)&v17, v16, (uint64_t)v8);
        if (v3)
        {
          swift_release();
          swift_release();
          swift_release();
          return;
        }
        uint64_t v3 = 0;
        swift_release();
        uint64_t v18 = v11;
        unint64_t v13 = v11[2];
        if (v13 >= v11[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v11 = v18;
        }
        ++v10;
        v11[2] = v13 + 1;
        outlined init with take of PhoneSnippetDataModels((uint64_t)v8, (uint64_t)v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13);
        if (v9 == v10) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_release();
  }
}

uint64_t specialized ContinueReadingVoicemailFlow.init(app:intent:intentResponse:phoneSearchCallHistoryIntent:isSingleVoicemailRequest:isRepeatRequest:sharedGlobals:windowItems:windowParam:totalItemCount:playVoicemailCommands:voiceMailPositionString:searchCallHistorySharedGlobals:)(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14)
{
  uint64_t v15 = v14;
  *(unsigned char *)(v15 + direct field offset for ContinueReadingVoicemailFlow.isRepeatRequest) = 0;
  id v22 = (uint64_t *)(v15 + direct field offset for ContinueReadingVoicemailFlow.logPrefix);
  *id v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy>);
  v22[1] = (uint64_t)&outlined read-only object #0 of specialized ContinueReadingVoicemailFlow.init(app:intent:intentResponse:phoneSearchCallHistoryIntent:isSingleVoicemailRequest:isRepeatRequest:sharedGlobals:windowItems:windowParam:totalItemCount:playVoicemailCommands:voiceMailPositionString:searchCallHistorySharedGlobals:);
  long long v22[2] = 0;
  v22[3] = 0;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  *(void *)(v15 + 88) = a1;
  *(void *)(v15 + 96) = a4;
  *(unsigned char *)(v15 + direct field offset for ContinueReadingVoicemailFlow.isSingleVoicemailRequest) = a5;
  outlined init with copy of SharedGlobalsProviding(a7, v15 + 48);
  uint64_t v23 = v15 + direct field offset for ContinueReadingVoicemailFlow.windowParam;
  uint64_t v24 = type metadata accessor for WindowedPaginationParameters();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v23;
  uint64_t v27 = a9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, a9, v24);
  *(void *)(v15 + 24) = a8;
  uint64_t v28 = v15 + direct field offset for ContinueReadingVoicemailFlow.totalItemCount;
  *(void *)uint64_t v28 = a10;
  *(unsigned char *)(v28 + 8) = a11 & 1;
  *(void *)(v15 + 304) = a12;
  *(unsigned char *)(v15 + 312) = a13;
  outlined init with copy of SearchCallHistorySharedGlobals(a14, v15 + 104);
  if (a6)
  {
    outlined destroy of SearchCallHistorySharedGlobals(a14);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a9, v24);
    __swift_destroy_boxed_opaque_existential_1(a7);
    *(unsigned char *)(v15 + 16) = 7;
    *(unsigned char *)(v15 + direct field offset for ContinueReadingVoicemailFlow.isLeadingSavedVoiceMailPostPrompt) = 0;
  }
  else
  {
    outlined init with copy of SharedGlobalsProviding(a7, (uint64_t)v49);
    uint64_t v47 = a7;
    if (a5)
    {
      uint64_t v29 = v50;
      uint64_t v30 = v51;
      uint64_t v45 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      unint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 56);
      swift_retain();
      id v32 = a2;
      id v33 = a2;
      uint64_t v34 = a3;
      id v35 = a3;
      swift_retain();
      uint64_t v36 = v29;
      uint64_t v27 = a9;
      uint64_t v37 = v31(v36, v45);
      char v38 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 248))(v37);
      swift_release();
    }
    else
    {
      swift_retain();
      id v32 = a2;
      id v39 = a2;
      uint64_t v34 = a3;
      id v40 = a3;
      swift_retain();
      char v38 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    if (v38 & 1 | ((WindowedPaginationParameters.isFirstWindow.getter() & 1) == 0)) {
      char v41 = 7;
    }
    else {
      char v41 = 5;
    }
    *(unsigned char *)(v15 + 16) = v41;
    char v42 = WindowedPaginationParameters.isFirstWindow.getter();
    char v43 = static SearchCallHistoryHelper.isLeadingSavedVoiceMail(isFirstPage:intentResponse:intent:)(v42 & 1, (uint64_t)v34, v32);
    swift_release();

    swift_release();
    outlined destroy of SearchCallHistorySharedGlobals(a14);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
    __swift_destroy_boxed_opaque_existential_1(v47);
    *(unsigned char *)(v15 + direct field offset for ContinueReadingVoicemailFlow.isLeadingSavedVoiceMailPostPrompt) = v43 & 1;
  }
  return v15;
}

uint64_t ReadVoicemailResultSetFlowProvider.__allocating_init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:searchCallCatPatterns:responseGenerator:)(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  ReadVoicemailResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:searchCallCatPatterns:responseGenerator:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

unint64_t ReadVoicemailResultSetFlowProvider.patternId.getter()
{
  return 0xD00000000000002ELL;
}

id ReadVoicemailResultSetFlowProvider.bundle.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = [self bundleForClass:ObjCClassFromMetadata];

  return v1;
}

uint64_t ReadVoicemailResultSetFlowProvider.totalItemCount.getter()
{
  uint64_t v1 = *(void *)((*(uint64_t (**)(void))(*(void *)v0 + 224))() + 16);
  swift_bridgeObjectRelease();
  return v1;
}

void ReadVoicemailResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:searchCallCatPatterns:responseGenerator:)(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v57 = *v8;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  int v67 = v17;
  uint64_t v68 = v16;
  __chkstk_darwin(v16);
  id v19 = (uint64_t *)((char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8[55] = -1;
  v8[56] = type metadata accessor for ReadVoicemailResultSetFlowProvider();
  v8[57] = &outlined read-only object #0 of ReadVoicemailResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:searchCallCatPatterns:responseGenerator:);
  v8[58] = 0;
  v8[59] = 0;
  v8[54] = a1;
  uint64_t v61 = a4;
  outlined init with copy of SharedGlobalsProviding(a4, (uint64_t)(v8 + 4));
  uint64_t v60 = a6;
  outlined init with copy of SharedGlobalsProviding(a6, (uint64_t)(v8 + 9));
  uint64_t v59 = a7;
  outlined init with copy of SharedGlobalsProviding(a7, (uint64_t)(v8 + 14));
  v8[19] = a2;
  v8[20] = a3;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a5, (uint64_t)(v8 + 48));
  uint64_t v62 = a5;
  uint64_t v20 = a5[23];
  uint64_t v21 = a5[24];
  v8[21] = v20;
  v8[53] = v21;
  id v22 = a2;
  id v23 = a3;
  id v24 = v22;
  id v25 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v58 = a1;
  Swift::Bool v26 = App.isFirstParty()();
  id v63 = v24;
  uint64_t v64 = v8;
  if (v26)
  {
    uint64_t v27 = static SearchCallHistoryCatParameterHelper.makePhonePersons1P(intent:intentResponse:)(v24, (unint64_t)v25);

    uint64_t v28 = v25;
    goto LABEL_8;
  }
  id v29 = [v24 recipient];
  if (v29)
  {
    uint64_t v30 = v29;
    type metadata accessor for PhonePerson(0);
    id v31 = v30;
    static Device.current.getter();
    __swift_project_boxed_opaque_existential_1(v69, v70);
    dispatch thunk of DeviceState.siriLocale.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    uint64_t v32 = static PhonePerson.make(phonePerson:options:locale:)(v30, 0, (uint64_t)v19);

    OUTLINED_FUNCTION_12_20();
    v33();
    if (v32)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_46A030;
      *(void *)(v34 + 32) = v32;
      v69[0] = v34;
      specialized Array._endMutation()();
      uint64_t v27 = (void *)v69[0];

      uint64_t v28 = v25;
      id v24 = v63;
      uint64_t v8 = v64;
      goto LABEL_8;
    }

    id v24 = v63;
    uint64_t v8 = v64;
  }
  uint64_t v28 = v25;

  uint64_t v27 = _swiftEmptyArrayStorage;
LABEL_8:
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  type metadata accessor for PhonePersonList();
  uint64_t v35 = PhonePersonList.__allocating_init(list:)((uint64_t)v27);
  v8[22] = PhoneSearchCallHistoryIntent.__allocating_init(intent:recipients:)(v24, v35);
  uint64_t v36 = outlined bridged method (pb) of @objc INAnswerCallIntentResponse.callRecords.getter(v28);
  if (v36) {
    unint64_t v37 = v36;
  }
  else {
    unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_13;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v47 = _swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  uint64_t v38 = *(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFFF8));
  if (!v38) {
    goto LABEL_25;
  }
LABEL_13:
  uint64_t v71 = _swiftEmptyArrayStorage;
  id v39 = &v71;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if (v38 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v56 = v28;
  uint64_t v40 = 0;
  unint64_t v65 = v37 & 0xC000000000000001;
  uint64_t v66 = v38;
  int v67 = (void *)v37;
  do
  {
    if (v65) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v41 = *(id *)(v37 + 8 * v40 + 32);
    }
    OUTLINED_FUNCTION_62_0();
    type metadata accessor for AppInfoBuilder();
    uint64_t v42 = swift_allocObject();
    char v43 = v39;
    static Device.current.getter();
    __swift_project_boxed_opaque_existential_1(v69, v70);
    dispatch thunk of DeviceState.siriLocale.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    swift_retain();
    specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(v43, 1, v42, v19);
    uint64_t v44 = OUTLINED_FUNCTION_62_0();
    type metadata accessor for PhoneCallRecord(v44);
    id v39 = (void **)swift_allocObject();
    uint64_t v45 = PhoneCallRecord.init(builder:)();

    OUTLINED_FUNCTION_10_8();
    v46();
    swift_release_n();
    uint64_t v47 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      id v39 = &v71;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v47 = v71;
    }
    unint64_t v48 = v47[2];
    if (v48 >= v47[3] >> 1)
    {
      id v39 = &v71;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v47 = v71;
    }
    ++v40;
    v47[2] = v48 + 1;
    unint64_t v49 = &v47[2 * v48];
    v49[4] = v45;
    v49[5] = v43;
    unint64_t v37 = (unint64_t)v67;
  }
  while (v66 != v40);
  swift_bridgeObjectRelease();
  uint64_t v28 = v56;
LABEL_26:
  uint64_t v50 = v47[2];
  uint64_t v51 = _swiftEmptyArrayStorage;
  if (v50)
  {
    v69[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v52 = v47 + 4;
    do
    {
      v52 += 2;
      swift_retain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v50;
    }
    while (v50);
    uint64_t v51 = (void *)v69[0];
  }
  uint64_t v53 = v64;
  v64[3] = v51;
  uint64_t v54 = static ReadVoicemailResultSetFlowProvider.getSortedVoicemails(callRecords:)((uint64_t)v47);
  swift_bridgeObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v59);
  __swift_destroy_boxed_opaque_existential_1(v60);
  __swift_destroy_boxed_opaque_existential_1(v61);
  v53[2] = v54;
  memcpy(v53 + 23, v62, 0xC8uLL);
}

void *static ReadVoicemailResultSetFlowProvider.getSortedVoicemails(callRecords:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen;
    do
    {
      if (*(unsigned char *)(*(void *)(a1 + 16 * v3 + 32) + v4) == 1)
      {
        long long v14 = *(_OWORD *)(a1 + 16 * v3 + 32);
        swift_retain();
        id v5 = *((id *)&v14 + 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        unint64_t v6 = _swiftEmptyArrayStorage[2];
        long long v7 = v14;
        if (v6 >= _swiftEmptyArrayStorage[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          long long v7 = v14;
        }
        _swiftEmptyArrayStorage[2] = v6 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * v6 + 4] = v7;
        uint64_t v4 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen;
      }
      ++v3;
    }
    while (v1 != v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v9 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen;
    do
    {
      if ((*(unsigned char *)(*(void *)(a1 + 16 * v8 + 32) + v9) & 1) == 0)
      {
        long long v15 = *(_OWORD *)(a1 + 16 * v8 + 32);
        swift_retain();
        id v10 = *((id *)&v15 + 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        long long v12 = v15;
        if (v11 >= _swiftEmptyArrayStorage[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          long long v12 = v15;
        }
        _swiftEmptyArrayStorage[2] = v11 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v12;
        uint64_t v9 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen;
      }
      ++v8;
    }
    while (v1 != v8);
    swift_bridgeObjectRelease();
  }
  specialized Array.append<A>(contentsOf:)();
  return _swiftEmptyArrayStorage;
}

uint64_t ReadVoicemailResultSetFlowProvider.makeSingleItemFlow()()
{
  OUTLINED_FUNCTION_1_0();
  v1[34] = v0;
  uint64_t v2 = type metadata accessor for PhoneError();
  v1[35] = v2;
  OUTLINED_FUNCTION_11_0(v2);
  v1[36] = OUTLINED_FUNCTION_35();
  uint64_t v3 = type metadata accessor for WindowedPaginationParameters();
  v1[37] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[38] = v4;
  v1[39] = OUTLINED_FUNCTION_28_2();
  v1[40] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[41] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  int EnumTagSinglePayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  int64_t v33;
  char v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  void (*v43)(void);
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  id v47;
  uint64_t (*v48)(uint64_t);
  id v49;
  uint64_t v50;
  BOOL VoicemailResultSetFlow;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;

  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[34];
  if (v4)
  {
    uint64_t v6 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    OUTLINED_FUNCTION_14_0();
    *uint64_t v6 = 136315138;
    uint64_t v7 = v5[56];
    uint64_t v8 = v5[57];
    uint64_t v10 = v5[58];
    uint64_t v9 = v5[59];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v7, v8, v10, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = OUTLINED_FUNCTION_41_29();
    OUTLINED_FUNCTION_95_6(v11, v0 + 33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_10();
    OUTLINED_FUNCTION_55_7(&dword_0, v2, v3, "%s there is only one item in the result set. Rendering single result.");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_39_10();
  }

  long long v12 = *(uint64_t (**)(void))(*(void *)v0[34] + 224);
  unint64_t v13 = *(void *)(v12() + 16);
  long long v14 = swift_bridgeObjectRelease();
  if (v13 == 1)
  {
    long long v15 = (void *)((uint64_t (*)(uint64_t))v12)(v14);
    if (v15[2])
    {
      uint64_t v16 = v0[41];
      uint64_t v18 = v15[4];
      uint64_t v17 = (void *)v15[5];
      swift_retain();
      uint64_t v58 = v17;
      swift_bridgeObjectRelease();
      outlined init with copy of ConfirmationResponse?(v18 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier, v16, &demangling cache variable for type metadata for SpeakableString?);
      id v19 = type metadata accessor for SpeakableString();
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v16, 1, v19);
      uint64_t v21 = v0[41];
      if (EnumTagSinglePayload == 1)
      {
        outlined destroy of PhoneCallNLIntent?(v0[41], &demangling cache variable for type metadata for SpeakableString?);
        id v22 = 0;
        id v23 = 0;
      }
      else
      {
        id v22 = SpeakableString.print.getter();
        id v23 = v28;
        OUTLINED_FUNCTION_10();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v21, v19);
      }
      uint64_t v56 = (uint64_t)(v0 + 2);
      uint64_t v59 = (uint64_t)(v0 + 27);
      uint64_t v30 = v0[40];
      uint64_t v53 = v0[38];
      uint64_t v54 = v0[37];
      uint64_t v55 = v0[39];
      id v31 = (void *)v0[34];
      uint64_t v57 = ReadVoicemailResultSetFlowProvider.getVoicemailData(voicemailIdentifier:)(v22, v23);
      swift_bridgeObjectRelease();
      uint64_t v32 = static WindowedPaginationParameters.makeLastWindow(windowSize:isFirstWindow:)();
      unint64_t v48 = *(uint64_t (**)(uint64_t))(*v31 + 216);
      id v33 = v48(v32);
      if (v34) {
        id v33 = 0;
      }
      uint64_t v52 = ReadVoicemailResultSetFlowProvider.getVoiceMailPosition(callRecordsCount:currentRecord:)(v33, v18);
      VoicemailResultSetFlow = ReadVoicemailResultSetFlowProvider.isRepeatRequestAfterPlayingVoicemail()();
      uint64_t v50 = v31[54];
      uint64_t v35 = (void *)v31[19];
      uint64_t v36 = (void *)v31[20];
      unint64_t v37 = v31[22];
      outlined init with copy of SharedGlobalsProviding((uint64_t)(v31 + 4), v59);
      swift_retain();
      unint64_t v49 = v35;
      uint64_t v47 = v36;
      uint64_t v38 = swift_retain();
      uint64_t v46 = ((uint64_t (*)(uint64_t))v12)(v38);
      id v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v55, v30, v54);
      uint64_t v40 = v48(v39);
      uint64_t v42 = v41 & 1;
      outlined init with copy of SearchCallHistorySharedGlobals((uint64_t)(v31 + 23), v56);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy>);
      OUTLINED_FUNCTION_21_0();
      v0[32] = specialized ContinueReadingVoicemailFlow.init(app:intent:intentResponse:phoneSearchCallHistoryIntent:isSingleVoicemailRequest:isRepeatRequest:sharedGlobals:windowItems:windowParam:totalItemCount:playVoicemailCommands:voiceMailPositionString:searchCallHistorySharedGlobals:)(v50, v49, v47, v37, 1, VoicemailResultSetFlow, v59, v46, v55, v40, v42, (uint64_t)v57, v52, v56);
      lazy protocol witness table accessor for type ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy> and conformance ContinueReadingVoicemailFlow<A>();
      Flow.eraseToAnyFlow()();
      swift_release();

      OUTLINED_FUNCTION_26();
      v43();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v44 = OUTLINED_FUNCTION_12_2();
      return v45(v44);
    }
    swift_bridgeObjectRelease();
  }
  id v24 = (void *)v0[36];
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(*(void *)(v0[34] + 448), *(void *)(v0[34] + 456), *(void *)(v0[34] + 464), *(void *)(v0[34] + 472));
  *id v24 = 0;
  v24[1] = 0xE000000000000000;
  v24[2] = 0xD00000000000001CLL;
  v24[3] = 0x800000000049C080;
  OUTLINED_FUNCTION_38();
  swift_storeEnumTagMultiPayload();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_13((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
  swift_allocError();
  PhoneError.logged()(v25);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_9((uint64_t)v24, (void (*)(void))type metadata accessor for PhoneError);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v26();
}

uint64_t ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow()()
{
  OUTLINED_FUNCTION_1_0();
  v1[8] = v0;
  uint64_t v2 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v2);
  v1[9] = OUTLINED_FUNCTION_35();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v1[10] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[11] = v4;
  v1[12] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  BOOL v5;
  void *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t (*v31)(uint64_t (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;

  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  uint64_t v4 = v3;
  uint64_t v5 = os_log_type_enabled(v2, v3);
  uint64_t v6 = *(void **)(v0 + 64);
  if (v5)
  {
    LODWORD(v32) = v4;
    uint64_t v7 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    uint64_t v34 = OUTLINED_FUNCTION_14_0();
    *uint64_t v7 = 136315138;
    uint64_t v28 = (uint64_t)(v7 + 1);
    id v29 = (uint64_t)v7;
    uint64_t v9 = v6[56];
    uint64_t v8 = v6[57];
    uint64_t v10 = v6[58];
    unint64_t v11 = v6[59];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v9, v8, v10, v11);
    swift_bridgeObjectRelease();
    long long v12 = swift_bridgeObjectRelease();
    uint64_t v20 = OUTLINED_FUNCTION_97_6(v12, v13, v14, v15, v16, v17, v18, v19, v27, v28, v29, v0 + 56, v34, v32, v34, 0, 0xE000000000000000);
    OUTLINED_FUNCTION_95_6(v20, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    OUTLINED_FUNCTION_55_7(&dword_0, v2, v33, "%s can't find any voicemail record");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v21 = *(void **)(v0 + 64);
  id v22 = v21[12];
  id v23 = v21[13];
  __swift_project_boxed_opaque_existential_1(v21 + 9, v22);
  id v31 = (uint64_t (*)(uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 24)
                                                                                            + **(int **)(v23 + 24));
  id v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v24;
  *id v24 = v0;
  v24[1] = ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow();
  id v25 = *(void *)(v0 + 64);
  return v31(partial apply for closure #1 in ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow(), v25, v22, v23);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 120) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  unint64_t v13 = (void *)v12[15];
  long long v14 = (void *)v12[8];
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v15 = v14[7];
  uint64_t v16 = v14[8];
  __swift_project_boxed_opaque_existential_1(v14 + 4, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 128))(v15, v16);
  __swift_project_boxed_opaque_existential_1(v12 + 2, v12[5]);
  dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)();

  OUTLINED_FUNCTION_26();
  v17();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v12 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_4_3();
  return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t closure #1 in ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow()(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 176);
  swift_retain();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t closure #2 in ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow()()
{
  return OutputGenerationManifest.canUseServerTTS.setter();
}

uint64_t ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_1_0();
  v1[248] = v0;
  uint64_t v2 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v2);
  v1[249] = OUTLINED_FUNCTION_35();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v1[250] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[251] = v4;
  v1[252] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for PhoneSnippetDataModels();
  v1[253] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[254] = v6;
  v1[255] = *(void *)(v7 + 64);
  v1[256] = OUTLINED_FUNCTION_28_2();
  v1[257] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for PlayVoicemailModel();
  v1[258] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[259] = v9;
  v1[260] = *(void *)(v10 + 64);
  v1[261] = OUTLINED_FUNCTION_28_2();
  v1[262] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Locale();
  v1[263] = v11;
  OUTLINED_FUNCTION_19_0(v11);
  v1[264] = v12;
  v1[265] = OUTLINED_FUNCTION_35();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_0(v13);
  v1[266] = v14;
  v1[267] = *(void *)(v15 + 64);
  v1[268] = OUTLINED_FUNCTION_28_2();
  v1[269] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for SpeakableString();
  v1[270] = v16;
  OUTLINED_FUNCTION_19_0(v16);
  v1[271] = v17;
  v1[272] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v18, v19, v20);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  int v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  int v33;
  BOOL v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  double v54;
  uint64_t (*v55)(uint64_t);
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void, uint64_t (*)(uint64_t), void, uint64_t, uint64_t);
  uint64_t v61;
  double *v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t (*v71)(void, uint64_t (*)(uint64_t), void, uint64_t, uint64_t);
  uint64_t (*v72)(void, uint64_t (*)(uint64_t), void, uint64_t, uint64_t);
  uint64_t v73;
  os_log_type_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  uint64_t v1 = v0 + 248;
  uint64_t v2 = (void *)v0[248];
  uint64_t v3 = v2[7];
  uint64_t v4 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(1, v0 + 213);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 213));
  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = (double)(uint64_t)INSearchCallHistoryIntentResponse.savedRecordsCount.getter();
  uint64_t v6 = (double)(uint64_t)INSearchCallHistoryIntentResponse.newRecordsCount.getter();
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8);
  LOBYTE(v7) = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 248))(v9);
  swift_release();
  if (v7)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_45_23();
    uint64_t v11 = Logger.logObject.getter();
    uint64_t v12 = static os_log_type_t.debug.getter();
    uint64_t v13 = os_log_type_enabled(v11, (os_log_type_t)v12);
    uint64_t v14 = (void *)*v1;
    if (v13)
    {
      LODWORD(v73) = v12;
      uint64_t v15 = swift_slowAlloc();
      unint64_t v76 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v17 = v14[56];
      uint64_t v16 = v14[57];
      uint64_t v18 = v14[58];
      uint64_t v19 = v14[59];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v17, v16, v18, v19);
      swift_bridgeObjectRelease();
      uint64_t v20 = swift_bridgeObjectRelease();
      uint64_t v28 = OUTLINED_FUNCTION_97_6(v20, v21, v22, v23, v24, v25, v26, v27, v68, v15 + 4, (uint64_t)(v0 + 247), (uint64_t)(v0 + 246), v76, v73, v76, 0, 0xE000000000000000);
      OUTLINED_FUNCTION_95_6(v28, v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2048;
      id v29 = v14[3];
      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFFF8));
      }
      swift_release();
      v0[247] = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl(&dword_0, v11, v74, "%s show all results there are %ld items in the result set. Rendering multiple results with SMART UI on.", (uint8_t *)v15, 0x16u);
      OUTLINED_FUNCTION_34_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v51 = *(void *)(v0[248] + 176);
    OUTLINED_FUNCTION_2();
    uint64_t v71 = (uint64_t (*)(void, uint64_t (*)(uint64_t), void, uint64_t, uint64_t))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple + v52 + 432) + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple + v52 + 432));
    uint64_t v53 = (void *)swift_task_alloc();
    v0[273] = v53;
    *uint64_t v53 = v0;
    v53[1] = ReadVoicemailResultSetFlowProvider.makeAllResultsFlow();
    uint64_t v54 = v6;
    uint64_t v55 = 0;
    uint64_t v56 = v5;
    uint64_t v57 = 0;
    uint64_t v58 = v51;
    uint64_t v59 = v71;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    id v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_45_23();
    uint64_t v32 = Logger.logObject.getter();
    id v33 = static os_log_type_t.debug.getter();
    uint64_t v34 = os_log_type_enabled(v32, (os_log_type_t)v33);
    uint64_t v35 = (void *)*v1;
    if (v34)
    {
      LODWORD(v73) = v33;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v77 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v36 = 136315394;
      unint64_t v37 = v35[56];
      uint64_t v38 = v35[57];
      uint64_t v40 = v35[58];
      id v39 = v35[59];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v37, v38, v40, v39);
      swift_bridgeObjectRelease();
      id v41 = swift_bridgeObjectRelease();
      v0[244] = OUTLINED_FUNCTION_97_6(v41, v42, v43, v44, v45, v46, v47, v48, v68, v69, (uint64_t)(v0 + 244), (uint64_t)(v0 + 237), v77, v73, v77, 0, 0xE000000000000000);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_39_10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2048;
      unint64_t v49 = v35[3];
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v50 = *(void *)((char *)&dword_10 + (v49 & 0xFFFFFFFFFFFFFF8));
      }
      swift_release();
      v0[237] = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl(&dword_0, v32, v75, "%s there are  %ld items in the result set. Rendering multiple results.", (uint8_t *)v36, 0x16u);
      OUTLINED_FUNCTION_34_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v61 = v0[272];
    uint64_t v62 = (double *)v0[248];
    id v63 = *((void *)v62 + 12);
    uint64_t v64 = *((void *)v62 + 13);
    __swift_project_boxed_opaque_existential_1((void *)v62 + 9, v63);
    unint64_t v65 = v62[3];
    *(double *)&uint64_t v66 = COERCE_DOUBLE(swift_task_alloc());
    *((double *)v0 + 284) = *(double *)&v66;
    *(double *)(v66 + 16) = v5;
    *(double *)(v66 + 24) = v6;
    *(void *)(v66 + 32) = v61;
    uint64_t v72 = (uint64_t (*)(void, uint64_t (*)(uint64_t), void, uint64_t, uint64_t))(*(void *)(v64 + 96) + **(int **)(v64 + 96));
    int v67 = (void *)swift_task_alloc();
    v0[285] = v67;
    *int v67 = v0;
    v67[1] = ReadVoicemailResultSetFlowProvider.makeAllResultsFlow();
    uint64_t v55 = partial apply for closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow();
    uint64_t v54 = v65;
    uint64_t v56 = *(double *)&v66;
    uint64_t v57 = v63;
    uint64_t v58 = v64;
    uint64_t v59 = v72;
  }
  return v59(*(void *)&v54, v55, *(void *)&v56, v57, v58);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 2192) = v4;
  *(void *)(v2 + 2200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  uint64_t v24 = v0[265];
  uint64_t v1 = (void *)v0[248];
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1[54];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v6 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(v3, 1, v0 + 173);
  v0[276] = v6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 173));
  swift_retain_n();
  swift_asyncLet_begin();
  uint64_t v7 = v1[51];
  uint64_t v8 = v1[52];
  __swift_project_boxed_opaque_existential_1(v1 + 48, v7);
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  __swift_project_boxed_opaque_existential_1(v2, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  __swift_project_boxed_opaque_existential_1(v0 + 183, v0[186]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v24, v7, v8);
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_11();
  v13();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 183));
  uint64_t v14 = v0[270];
  uint64_t v15 = v0[269];
  if (v12)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    __swift_storeEnumTagSinglePayload(v15, 0, 1, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v0[269], 1, 1, v0[270]);
  }
  uint64_t v16 = v0[268];
  uint64_t v17 = v0[266];
  uint64_t v18 = (void *)v0[248];
  outlined init with copy of ConfirmationResponse?(v0[269], v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  v0[277] = v20;
  *(void *)(v20 + 16) = v18;
  outlined init with take of SpeakableString?(v16, v20 + v19);
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v21 = v18[3];
  swift_retain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay27PhoneCallFlowDelegatePlugin0dE6RecordCG_AF20SingleVoicemailModelVs5NeverOTg504_s27defg13Plugin022Readk112ResultSetC8ProviderC012generatePlayG5Model33_377A4B54CA7F10D87321BF16D920F6135itemsSayAA06SinglegM0VGSayAA0aB6I13CG_tFAhKXEfU_AF0pkqrfT0CTf1cn_n(v21, v18);
  v0[278] = v22;
  return _swift_asyncLet_get_throwing(v0 + 82, v0 + 225, ReadVoicemailResultSetFlowProvider.makeAllResultsFlow(), v0 + 198);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  v1[279] = v0;
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[280] = v1[225];
    v1[281] = v1[226];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 223, ReadVoicemailResultSetFlowProvider.makeAllResultsFlow(), v1 + 232);
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 2256) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;

  uint64_t v20 = v0[281];
  uint64_t v19 = v0[280];
  uint64_t v1 = v0[278];
  Swift::Bool v26 = (void *)v0[274];
  uint64_t v2 = v0[262];
  uint64_t v23 = v0[261];
  uint64_t v25 = v0[259];
  uint64_t v27 = v0[257];
  uint64_t v24 = v0[255];
  uint64_t v21 = v0[256];
  uint64_t v22 = v0[254];
  uint64_t v3 = (void *)v0[248];
  uint64_t v4 = v0[223];
  uint64_t v5 = v0[224];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp);
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_retain();
  SAAppsLaunchApp.init(app:)(v6);
  strcpy((char *)v2, "PlayVoicemail");
  *(_WORD *)(v2 + 14) = -4864;
  v0[245] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleVoicemailModel]);
  Loggable.init(wrappedValue:)();
  v0[227] = v19;
  v0[228] = v20;
  Loggable.init(wrappedValue:)();
  v0[229] = v4;
  v0[230] = v5;
  Loggable.init(wrappedValue:)();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  CodableAceObject.init(wrappedValue:)();
  outlined init with copy of PlayVoicemailModel(v2, v27);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = v3[7];
  uint64_t v8 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  uint64_t v9 = v0[170];
  uint64_t v10 = v0[172];
  __swift_project_boxed_opaque_existential_1(v0 + 167, v9);
  v0[196] = v9;
  v0[197] = v10;
  __swift_allocate_boxed_opaque_existential_1(v0 + 193);
  OUTLINED_FUNCTION_10();
  (*(void (**)(void))(v11 + 16))();
  outlined init with copy of PlayVoicemailModel(v27, v21);
  outlined init with copy of PlayVoicemailModel(v2, v23);
  uint64_t v12 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v13 = (v24 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (*(unsigned __int8 *)(v25 + 80) + v13 + 8) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  outlined init with take of PhoneSnippetDataModels(v21, v15 + v12);
  *(void *)(v15 + v13) = v26;
  outlined init with take of PhoneSnippetDataModels(v23, v15 + v14);
  type metadata accessor for SimpleOutputFlowAsync();
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  uint64_t v16 = v26;
  uint64_t v17 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 167));
  v0[243] = v17;
  v0[283] = Flow.eraseToAnyFlow()();
  swift_release();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_9(v27, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_9(v2, (void (*)(void))type metadata accessor for PlayVoicemailModel);
  return _swift_asyncLet_finish(v0 + 2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_46_24();
  outlined destroy of PhoneCallNLIntent?(v0, &demangling cache variable for type metadata for SpeakableString?);
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v1);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  *(void *)(v4 + 2288) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v4 + 2296) = v3;
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v8)(void);
  uint64_t (*v9)(uint64_t);
  void *v11;
  uint64_t v12;
  uint64_t v13;

  uint64_t v11 = (void *)v0[287];
  uint64_t v1 = (void *)v0[248];
  uint64_t v3 = v1[7];
  uint64_t v2 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 128))(v3, v2);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_38();
  __swift_project_boxed_opaque_existential_1(v4, v5);
  static DialogPhase.completion.getter();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  OUTLINED_FUNCTION_78_2();
  uint64_t v12 = dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)();

  OUTLINED_FUNCTION_66_1();
  v7();
  OUTLINED_FUNCTION_10_8();
  v8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 203));
  OUTLINED_FUNCTION_4_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v12);
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_46_24();
  outlined destroy of PhoneCallNLIntent?(v0, &demangling cache variable for type metadata for SpeakableString?);
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v1);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_46_24();
  outlined destroy of PhoneCallNLIntent?(v0, &demangling cache variable for type metadata for SpeakableString?);
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v1);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadVoicemailResultSetFlowProvider.makeAllResultsFlow());
}

uint64_t ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_20_44();

  OUTLINED_FUNCTION_66_1();
  v14();
  swift_release_n();
  swift_release();
  uint64_t v24 = *(void *)(v12 + 2264);
  OUTLINED_FUNCTION_4_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_3();
  return v17(v15, v16, v17, v18, v19, v20, v21, v22, v24, a10, a11, a12);
}

{
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_12_20();
  v13();
  uint64_t v23 = *(void *)(v12 + 2200);
  OUTLINED_FUNCTION_4_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, v23, a10, a11, a12);
}

{
  uint64_t v12;
  void *v13;
  void (*v14)(void);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_20_44();

  OUTLINED_FUNCTION_66_1();
  v14();
  swift_release_n();
  swift_release();
  uint64_t v24 = *(void *)(v12 + 2232);
  OUTLINED_FUNCTION_4_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, v24, a10, a11, a12);
}

{
  uint64_t v12;
  void *v13;
  void (*v14)(void);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_20_44();

  OUTLINED_FUNCTION_66_1();
  v14();
  swift_release_n();
  swift_release();
  uint64_t v24 = *(void *)(v12 + 2256);
  OUTLINED_FUNCTION_4_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, v24, a10, a11, a12);
}

{
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_12_20();
  v13();
  uint64_t v23 = *(void *)(v12 + 2288);
  OUTLINED_FUNCTION_4_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, v23, a10, a11, a12);
}

uint64_t implicit closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow(), 0, 0);
}

uint64_t implicit closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)(class metadata base offset for SearchCallHistoryCATsSimple
                + **(void **)(*(void *)(v0 + 24) + 168)
                + 568);
  uint64_t v4 = (uint64_t (*)(void))(*v1 + *(int *)*v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *(unsigned char *)(v0 + 48) = 2;
  uint64_t v2 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v4 = v3;
  swift_release();
  void *v1 = v2;
  v1[1] = v4;
  OUTLINED_FUNCTION_6_0();
  return v5();
}

uint64_t implicit closure #4 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(implicit closure #4 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow(), 0, 0);
}

uint64_t implicit closure #4 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + **(void **)(v0[3] + 424) + 248);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #4 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow();
  uint64_t v3 = v0[4];
  return v5(v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 48) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t closure #2 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  type metadata accessor for DialogPhase();
  v5[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for OutputGenerationManifest();
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  return _swift_task_switch(closure #2 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow(), 0, 0);
}

uint64_t closure #2 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()()
{
  uint64_t v1 = (uint64_t *)v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = (void *)v0[10];
  uint64_t v4 = (void *)v0[8];
  uint64_t v5 = v4[17];
  uint64_t v16 = v4[18];
  __swift_project_boxed_opaque_existential_1(v4 + 14, v5);
  v0[5] = type metadata accessor for PhoneSnippetDataModels();
  v0[6] = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_13((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, 255, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  outlined init with copy of PlayVoicemailModel(v2, (uint64_t)boxed_opaque_existential_1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_46A030;
  *(void *)(v7 + 32) = v3;
  uint64_t v17 = v7;
  specialized Array._endMutation()();
  v0[16] = v17;
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  id v10 = v3;
  static DialogPhase.completion.getter();
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v9;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v12;
  void *v12 = v0;
  v12[1] = closure #2 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow();
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[7];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(v14, v0 + 2, v17, v13, v5, v16);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (*v6)(void);
  uint64_t (*v7)(void);
  uint64_t v9;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 16;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_87();
  v6();
  __swift_destroy_boxed_opaque_existential_1(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v7();
}

uint64_t closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for SearchCallHistoryShowVoicemailsParameters(0);
  uint64_t v9 = a1 + *(int *)(v8 + 32);
  *(double *)uint64_t v9 = a3;
  *(unsigned char *)(v9 + 8) = 0;
  uint64_t v10 = a1 + *(int *)(v8 + 28);
  *(double *)uint64_t v10 = a4;
  *(unsigned char *)(v10 + 8) = 0;
  outlined destroy of PhoneCallNLIntent?(a1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = type metadata accessor for SpeakableString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v11);
}

uint64_t ReadVoicemailResultSetFlowProvider.makeWindowingConfiguration(promptType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptFlowProviderType<(), [ReadingCallRecord]>);
  OUTLINED_FUNCTION_11_0(v3);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[3];
  v0[2] = v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ReadingCallRecord]);
  type metadata accessor for ReadVoicemailResultSetFlowProvider();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_13(&lazy protocol witness table cache variable for type ReadVoicemailResultSetFlowProvider and conformance ReadVoicemailResultSetFlowProvider, v2, (void (*)(uint64_t))type metadata accessor for ReadVoicemailResultSetFlowProvider);
  static PromptFlowProviderType.continuation<A>(_:)();
  WindowingConfiguration.init(promptFlowProviderType:padding:windowSizeOverride:)();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WindowingConfiguration<(), [ReadingCallRecord]>);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v4();
}

uint64_t ReadVoicemailResultSetFlowProvider.makeWindowFlow(paginationParameters:windowContent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[35] = v2;
  v1[36] = v0;
  v1[34] = v3;
  uint64_t v4 = type metadata accessor for WindowedPaginationParameters();
  v1[37] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[38] = v5;
  v1[39] = OUTLINED_FUNCTION_35();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v6);
  v1[40] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumTagSinglePayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t (*v30)(void);
  int64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  id v51;
  char v52;
  uint64_t v53[3];
  void *v54;
  uint64_t v55;

  uint64_t v54 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[36];
  if (v4)
  {
    uint64_t v6 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    v53[0] = OUTLINED_FUNCTION_14_0();
    *uint64_t v6 = 136315138;
    uint64_t v7 = v5[56];
    uint64_t v8 = v5[57];
    uint64_t v10 = v5[58];
    uint64_t v9 = v5[59];
    v53[1] = 0;
    v53[2] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v7, v8, v10, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[33] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    OUTLINED_FUNCTION_55_7(&dword_0, v2, v3, "%s makeWindowFlow");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  uint64_t result = ReadVoicemailResultSetFlowProvider.isRepeatRequestAfterPlayingVoicemail()();
  if ((result & 1) == 0)
  {
    uint64_t v12 = v0[36];
    uint64_t v13 = *(void *)(v12 + 440);
    uint64_t v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14)
    {
LABEL_19:
      __break(1u);
      return result;
    }
    *(void *)(v12 + 440) = v15;
  }
  uint64_t v16 = v0[35];
  if (!*(void *)(v16 + 16))
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v52 = result;
  uint64_t v17 = v0[40];
  uint64_t v18 = *(void *)(v16 + 32);
  outlined init with copy of ConfirmationResponse?(v18 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier, v17, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = type metadata accessor for SpeakableString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v17, 1, v19);
  uint64_t v21 = v0[40];
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of PhoneCallNLIntent?(v0[40], &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v22 = 0;
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v22 = SpeakableString.print.getter();
    uint64_t v23 = v24;
    OUTLINED_FUNCTION_10();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v19);
  }
  unint64_t v49 = (uint64_t)(v0 + 2);
  Swift::Bool v26 = v0[38];
  uint64_t v27 = (void *)v0[36];
  uint64_t v44 = v0[39];
  uint64_t v45 = v0[37];
  uint64_t v28 = v0[35];
  uint64_t v47 = v28;
  uint64_t v42 = v0[34];
  uint64_t v50 = ReadVoicemailResultSetFlowProvider.getVoicemailData(voicemailIdentifier:)(v22, v23);
  swift_bridgeObjectRelease();
  id v29 = *(void **)(v28 + 40);
  uint64_t v30 = *(uint64_t (**)(void))(*v27 + 216);
  swift_retain();
  uint64_t v51 = v29;
  id v31 = v30();
  if (v32) {
    id v31 = 0;
  }
  unint64_t v48 = ReadVoicemailResultSetFlowProvider.getVoiceMailPosition(callRecordsCount:currentRecord:)(v31, v18);
  id v33 = v27[54];
  uint64_t v35 = (void *)v27[19];
  uint64_t v34 = (void *)v27[20];
  uint64_t v36 = v27[22];
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v27 + 4), (uint64_t)(v0 + 27));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v44, v42, v45);
  swift_retain();
  uint64_t v46 = v35;
  char v43 = v34;
  swift_retain();
  unint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = ((uint64_t (*)(uint64_t))v30)(v37);
  LOBYTE(v34) = v39 & 1;
  outlined init with copy of SearchCallHistorySharedGlobals((uint64_t)(v27 + 23), v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy>);
  OUTLINED_FUNCTION_21_0();
  v0[32] = specialized ContinueReadingVoicemailFlow.init(app:intent:intentResponse:phoneSearchCallHistoryIntent:isSingleVoicemailRequest:isRepeatRequest:sharedGlobals:windowItems:windowParam:totalItemCount:playVoicemailCommands:voiceMailPositionString:searchCallHistorySharedGlobals:)(v33, v46, v43, v36, 0, v52 & 1, (uint64_t)(v0 + 27), v47, v44, v38, (char)v34, (uint64_t)v50, v48, v49);
  lazy protocol witness table accessor for type ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy> and conformance ContinueReadingVoicemailFlow<A>();
  Flow.eraseToAnyValueFlow()();
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = OUTLINED_FUNCTION_12_2();
  return v41(v40);
}

uint64_t ReadVoicemailResultSetFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[37] = v2;
  v1[38] = v0;
  v1[36] = v3;
  uint64_t v4 = type metadata accessor for WindowedPaginationParameters();
  v1[39] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[40] = v5;
  v1[41] = OUTLINED_FUNCTION_35();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v6);
  v1[42] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for PhoneError();
  v1[43] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[44] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

BOOL ReadVoicemailResultSetFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_45_23();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[38];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = v5[56];
    uint64_t v8 = v5[57];
    uint64_t v9 = v5[58];
    uint64_t v10 = v5[59];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v7, v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[34] = OUTLINED_FUNCTION_41_29();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_10();
    *(_WORD *)(v6 + 12) = 2048;
    uint64_t v11 = v5[55];
    swift_release();
    v0[35] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_0, v2, v3, "%s final window currentIndex: %ld", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v12 = *(void *)((*(uint64_t (**)(void))(*(void *)v0[38] + 224))() + 16);
  swift_bridgeObjectRelease();
  if (v12 == 1)
  {
    swift_retain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = (void *)v0[38];
    if (v15)
    {
      uint64_t v17 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      OUTLINED_FUNCTION_14_0();
      *uint64_t v17 = 136315138;
      uint64_t v19 = v16[56];
      uint64_t v18 = v16[57];
      uint64_t v20 = v16[58];
      uint64_t v21 = v16[59];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v19, v18, v20, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = OUTLINED_FUNCTION_41_29();
      OUTLINED_FUNCTION_95_6(v22, v0 + 33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_10();
      OUTLINED_FUNCTION_55_7(&dword_0, v13, v14, "%s entire items size is 1, makeFinalWindowFlow will call makeSingleItemFlow()");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_39_10();
    }

    uint64_t v38 = (void *)swift_task_alloc();
    v0[45] = v38;
    *uint64_t v38 = v0;
    v38[1] = ReadVoicemailResultSetFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:);
    OUTLINED_FUNCTION_40_30();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v23 = (void *)v0[37];
  if (!v23[2])
  {
    id v41 = (void *)v0[44];
    *id v41 = 0xD000000000000022;
    v41[1] = 0x8000000000487190;
    v41[2] = 0xD000000000000017;
    v41[3] = 0x800000000049C0A0;
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_13((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v42);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_9((uint64_t)v41, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_40_30();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v25 = v23[4];
  uint64_t v24 = (void *)v23[5];
  swift_retain();
  id v26 = v24;
  BOOL result = ReadVoicemailResultSetFlowProvider.isRepeatRequestAfterPlayingVoicemail()();
  if (result)
  {
LABEL_13:
    BOOL v69 = result;
    uint64_t v32 = v0[42];
    int v67 = *(uint64_t (**)(void))(*(void *)v0[38] + 216);
    int64_t v33 = v67();
    if (v34) {
      int64_t v33 = 0;
    }
    char log = ReadVoicemailResultSetFlowProvider.getVoiceMailPosition(callRecordsCount:currentRecord:)(v33, v25);
    outlined init with copy of ConfirmationResponse?(v25 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier, v32, &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v35 = type metadata accessor for SpeakableString();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, v35);
    uint64_t v37 = v0[42];
    uint64_t v70 = v26;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of PhoneCallNLIntent?(v37, &demangling cache variable for type metadata for SpeakableString?);
    }
    else
    {
      SpeakableString.print.getter();
      OUTLINED_FUNCTION_10();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v37, v35);
    }
    uint64_t v47 = v0[40];
    uint64_t v46 = v0[41];
    uint64_t v65 = v46;
    unint64_t v48 = (void *)v0[38];
    uint64_t v49 = v0[36];
    uint64_t v62 = v0[39];
    uint64_t v63 = v0[37];
    uint64_t v50 = OUTLINED_FUNCTION_78_2();
    uint64_t v66 = ReadVoicemailResultSetFlowProvider.getVoicemailData(voicemailIdentifier:)(v50, v51);
    swift_bridgeObjectRelease();
    uint64_t v64 = v48[54];
    uint64_t v52 = (void *)v48[19];
    uint64_t v53 = (void *)v48[20];
    uint64_t v54 = v48[22];
    outlined init with copy of SharedGlobalsProviding((uint64_t)(v48 + 4), (uint64_t)(v0 + 27));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v46, v49, v62);
    swift_retain();
    id v55 = v52;
    id v56 = v53;
    swift_retain();
    uint64_t v57 = swift_bridgeObjectRetain();
    uint64_t v58 = ((uint64_t (*)(uint64_t))v67)(v57);
    LOBYTE(v53) = v59 & 1;
    outlined init with copy of SearchCallHistorySharedGlobals((uint64_t)(v48 + 23), (uint64_t)(v0 + 2));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy>);
    OUTLINED_FUNCTION_21_0();
    v0[32] = specialized ContinueReadingVoicemailFlow.init(app:intent:intentResponse:phoneSearchCallHistoryIntent:isSingleVoicemailRequest:isRepeatRequest:sharedGlobals:windowItems:windowParam:totalItemCount:playVoicemailCommands:voiceMailPositionString:searchCallHistorySharedGlobals:)(v64, v55, v56, v54, 0, v69, (uint64_t)(v0 + 27), v63, v65, v58, (char)v53, (uint64_t)v66, log, (uint64_t)(v0 + 2));
    lazy protocol witness table accessor for type ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy> and conformance ContinueReadingVoicemailFlow<A>();
    Flow.eraseToAnyFlow()();
    swift_release();

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_40_30();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v28 = v0[38];
  uint64_t v29 = *(void *)(v28 + 440);
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (!v30)
  {
    *(void *)(v28 + 440) = v31;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

unint64_t ReadVoicemailResultSetFlowProvider.getVoiceMailPosition(callRecordsCount:currentRecord:)(int64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen);
  unint64_t result = INSearchCallHistoryIntentResponse.newRecordsCount.getter();
  if (v4) {
    int64_t v6 = result;
  }
  else {
    int64_t v6 = a1;
  }
  if (v4) {
    int64_t v7 = 0;
  }
  else {
    int64_t v7 = result;
  }
  int64_t v8 = *(void *)(v2 + 440);
  if (v7 == v8) {
    return 0;
  }
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  if (v6 - 1 == v8) {
    return 2;
  }
  if (v6 < v7) {
    goto LABEL_20;
  }
  if (v6 < v8 || v8 < v7) {
    return 3;
  }
  else {
    return 1;
  }
}

void *ReadVoicemailResultSetFlowProvider.getVoicemailData(voicemailIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INPlayVoicemailIntent);
    id v3 = static INPlayVoicemailIntent.makeFirstPartyHandleIntent(identifier:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_46A030;
    *(void *)(v4 + 32) = v3;
    uint64_t v15 = v4;
    specialized Array._endMutation()();
    return (void *)v15;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    int64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_5_22();
      uint64_t v14 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v10 = v2[56];
      uint64_t v11 = v2[57];
      uint64_t v13 = v2[58];
      uint64_t v12 = v2[59];
      uint64_t v16 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v10, v11, v13, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v7, v8, "%s received an empty voicemailIdentifier", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    return _swiftEmptyArrayStorage;
  }
}

BOOL ReadVoicemailResultSetFlowProvider.isRepeatRequestAfterPlayingVoicemail()()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 32), *(void *)(v0 + 56));
  uint64_t v1 = OUTLINED_FUNCTION_38();
  uint64_t v3 = v2(v1);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 152))(&v6);
  swift_release();
  if (v7[3] == 1)
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)&v6, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v10 = 0;
LABEL_5:
    outlined destroy of PhoneCallNLIntent?((uint64_t)&v8, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    return 0;
  }
  outlined init with copy of ConfirmationResponse?((uint64_t)v7, (uint64_t)&v8, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  outlined destroy of TransformationResult((uint64_t)&v6);
  if (!*((void *)&v9 + 1)) {
    goto LABEL_5;
  }
  outlined init with take of AppSelectionSignalComponent(&v8, (uint64_t)&v6);
  __swift_project_boxed_opaque_existential_1(&v6, v7[2]);
  Swift::Bool v4 = PhoneCallNLIntent.isRepeatAfterPlayingVoiceMail()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
  return v4;
}

void closure #1 in ReadVoicemailResultSetFlowProvider.generatePlayVoicemailModel(items:)(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v49 = a3;
  uint64_t v45 = type metadata accessor for CommonDirectAction();
  __chkstk_darwin(v45);
  uint64_t v5 = (uint64_t *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v48 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v47 = (char *)&v44 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v44 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - v20;
  unint64_t v22 = *a1;
  id v51 = [objc_allocWithZone((Class)SAIntentGroupRunSiriKitExecutor) init];
  outlined init with copy of ConfirmationResponse?(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction, (uint64_t)v21, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v23 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23) == 1)
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)v21, &demangling cache variable for type metadata for SpeakableString?);
  }
  else
  {
    unint64_t v44 = v22;
    SpeakableString.print.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
    uint64_t v24 = Data.init(base64Encoded:options:)();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    if (v26 >> 60 != 15)
    {
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
      outlined copy of Data._Representation(v24, v26);
      id v27 = @nonobjc SAIntentGroupRunSiriKitExecutor.__allocating_init(plistData:)(v24, v26);
      if (!v27)
      {
        __break(1u);
        return;
      }
      uint64_t v28 = v27;

      outlined consume of Data?(v24, v26);
      id v51 = v28;
    }
    unint64_t v22 = v44;
  }
  uint64_t v29 = *(void *)(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
  if (v29)
  {
    dispatch thunk of DialogPerson.fullName.getter();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v23) != 1)
    {
      uint64_t v29 = SpeakableString.print.getter();
      uint64_t v30 = v31;
      (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v19, v23);
      goto LABEL_12;
    }
    outlined destroy of PhoneCallNLIntent?((uint64_t)v19, &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v29 = 0;
  }
  uint64_t v30 = 0;
LABEL_12:
  *uint64_t v5 = v29;
  v5[1] = v30;
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v46[7];
  uint64_t v33 = v46[8];
  __swift_project_boxed_opaque_existential_1(v46 + 4, v32);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v33 + 8))(v50, v32, v33);
  char v34 = CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(v50);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_9((uint64_t)v5, (void (*)(void))type metadata accessor for CommonDirectAction);
  outlined init with copy of ConfirmationResponse?(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName, (uint64_t)v16, &demangling cache variable for type metadata for SpeakableString?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v23);
  uint64_t v46 = v34;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)v16, &demangling cache variable for type metadata for SpeakableString?);
    unint64_t v44 = 0xE000000000000000;
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v36 = SpeakableString.print.getter();
    unint64_t v44 = v37;
    uint64_t v45 = v36;
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v16, v23);
  }
  uint64_t v38 = (uint64_t)v47;
  outlined init with copy of ConfirmationResponse?(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail, (uint64_t)v13, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v23) == 1)
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)v13, &demangling cache variable for type metadata for SpeakableString?);
  }
  else
  {
    SpeakableString.print.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v13, v23);
  }
  outlined init with copy of ConfirmationResponse?(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime, v38, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v38, 1, v23) == 1)
  {
    outlined destroy of PhoneCallNLIntent?(v38, &demangling cache variable for type metadata for SpeakableString?);
  }
  else
  {
    SpeakableString.print.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v38, v23);
  }
  uint64_t v39 = v48;
  unint64_t v40 = v22;
  outlined init with copy of ConfirmationResponse?(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration, v48, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v39, 1, v23) == 1)
  {
    outlined destroy of PhoneCallNLIntent?(v39, &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v41 = 0;
    uint64_t v42 = 0xE000000000000000;
  }
  else
  {
    uint64_t v41 = SpeakableString.print.getter();
    uint64_t v42 = v43;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v39, v23);
  }
  SingleVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:unseen:openVoicemailRSKE:openContactRSKE:)(v41, v42, v49, *(unsigned char *)(v40 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen), v51);
}

uint64_t ReadVoicemailResultSetFlowProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);

  swift_release();
  swift_release();
  outlined destroy of SearchCallHistorySharedGlobals(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1(v0 + 384);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReadVoicemailResultSetFlowProvider.__deallocating_deinit()
{
  ReadVoicemailResultSetFlowProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ResultSetFlowProvider.items.getter in conformance ReadVoicemailResultSetFlowProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 224))();
}

uint64_t protocol witness for ResultSetFlowProvider.bundle.getter in conformance ReadVoicemailResultSetFlowProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208))();
}

uint64_t protocol witness for ResultSetFlowProvider.patternId.getter in conformance ReadVoicemailResultSetFlowProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

uint64_t protocol witness for ResultSetFlowProvider.makeNarrowingPromptFlowIfNeeded() in conformance ReadVoicemailResultSetFlowProvider()
{
  uint64_t v1 = ResultSetFlowProvider.makeNarrowingPromptFlowIfNeeded()();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return protocol witness for ResultSetFlowProvider.makeNarrowingPromptFlowIfNeeded() in conformance ReadVoicemailResultSetFlowProvider(v2, v0, v1);
}

uint64_t protocol witness for ResultSetFlowProvider.makeEmptyResultSetFlow() in conformance ReadVoicemailResultSetFlowProvider()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**(void **)v0 + 288) + **(int **)(**(void **)v0 + 288));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v4();
}

uint64_t protocol witness for ResultSetFlowProvider.makeSingleItemFlow() in conformance ReadVoicemailResultSetFlowProvider()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**(void **)v0 + 280) + **(int **)(**(void **)v0 + 280));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v4();
}

uint64_t protocol witness for ResultSetFlowProvider.makeAllResultsFlow() in conformance ReadVoicemailResultSetFlowProvider()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**(void **)v0 + 296) + **(int **)(**(void **)v0 + 296));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v4();
}

uint64_t protocol witness for ResultSetFlowProvider.makeWindowingConfiguration(promptType:) in conformance ReadVoicemailResultSetFlowProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 304)
                                                + **(int **)(**(void **)v2 + 304));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v8(a1, a2);
}

uint64_t protocol witness for ContinuationPromptFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:) in conformance ReadVoicemailResultSetFlowProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 320)
                                                + **(int **)(**(void **)v2 + 320));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v8(a1, v5);
}

uint64_t protocol witness for WindowingFlowProvider.makeWindowFlow(paginationParameters:windowContent:) in conformance ReadVoicemailResultSetFlowProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 312)
                                                + **(int **)(**(void **)v2 + 312));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, v5);
}

uint64_t ReadingCallRecord.backingRecord.getter()
{
  return _objc_retain_x1();
}

uint64_t type metadata accessor for ReadVoicemailResultSetFlowProvider()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy> and conformance ContinueReadingVoicemailFlow<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy> and conformance ContinueReadingVoicemailFlow<A>;
  if (!lazy protocol witness table cache variable for type ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy> and conformance ContinueReadingVoicemailFlow<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContinueReadingVoicemailFlow<PromptForValueAfterReadingVoicemailFlowStrategy> and conformance ContinueReadingVoicemailFlow<A>);
  }
  return result;
}

uint64_t partial apply for closure #1 in ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow()(void *a1)
{
  return closure #1 in ReadVoicemailResultSetFlowProvider.makeEmptyResultSetFlow()(a1, v1);
}

uint64_t partial apply for closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1)
{
  return closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(a1, *(void *)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t partial apply for implicit closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return implicit closure #3 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(v3, v0);
}

uint64_t sub_3A3748()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_0(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v7 = type metadata accessor for SpeakableString();
  if (!__swift_getEnumTagSinglePayload(v0 + v4, 1, v7))
  {
    OUTLINED_FUNCTION_10();
    uint64_t v8 = OUTLINED_FUNCTION_38();
    v9(v8);
  }

  return _swift_deallocObject(v0, v4 + v6, v3 | 7);
}

uint64_t partial apply for implicit closure #4 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_13(v4);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = v0 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return implicit closure #4 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(v3, v6, v7);
}

uint64_t sub_3A3930()
{
  uint64_t v1 = (int *)type metadata accessor for PhoneSnippetDataModels();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for PlayVoicemailModel();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  swift_release();
  uint64_t v10 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      uint64_t v93 = v2;
      OUTLINED_FUNCTION_12_20();
      v11();
      type metadata accessor for YesNoConfirmationModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v101 = v7;
      OUTLINED_FUNCTION_33_26();
      uint64_t v13 = *(void (**)(void))(v12 + 8);
      uint64_t v104 = v4;
      uint64_t v98 = v9;
      OUTLINED_FUNCTION_10_8();
      v13();
      OUTLINED_FUNCTION_12_20();
      v14();
      goto LABEL_18;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 2u:
      uint64_t v99 = v9;
      uint64_t v102 = v7;
      uint64_t v94 = v2;
      uint64_t v97 = (v2 + 24) & ~v2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v90 = type metadata accessor for ContactConfirmationModel();
      uint64_t v15 = v10 + *(int *)(v90 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_78_2();
      OUTLINED_FUNCTION_12_20();
      v16();
      uint64_t v17 = type metadata accessor for YesNoConfirmationModel();
      uint64_t v18 = v15 + *(int *)(v17 + 20);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      OUTLINED_FUNCTION_15();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v21(v18, v19);
      OUTLINED_FUNCTION_12_20();
      v22();
      v21(v15 + *(int *)(v17 + 28), v19);
      swift_bridgeObjectRelease();
      if (*(void *)(v10 + *(int *)(v90 + 28) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v2 = v94;
      uint64_t v3 = v97;
      uint64_t v7 = v102;
      uint64_t v9 = v99;
      goto LABEL_20;
    case 3u:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_49();
      uint64_t v24 = *(void (**)(void))(v23 + 8);
      OUTLINED_FUNCTION_8_87();
      v24();
      unint64_t v25 = (int *)type metadata accessor for EmergencyCountdownModel();
      uint64_t v26 = OUTLINED_FUNCTION_7_4(v25[5]);
      ((void (*)(uint64_t))v24)(v26);
      uint64_t v27 = OUTLINED_FUNCTION_7_4(v25[6]);
      ((void (*)(uint64_t))v24)(v27);
      uint64_t v28 = OUTLINED_FUNCTION_7_4(v25[7]);
      ((void (*)(uint64_t))v24)(v28);
      uint64_t v29 = OUTLINED_FUNCTION_7_4(v25[8]);
      ((void (*)(uint64_t))v24)(v29);
      uint64_t v30 = OUTLINED_FUNCTION_7_4(v25[9]);
      ((void (*)(uint64_t))v24)(v30);
      uint64_t v31 = OUTLINED_FUNCTION_7_4(v25[10]);
      ((void (*)(uint64_t))v24)(v31);
      uint64_t v32 = OUTLINED_FUNCTION_7_4(v25[11]);
      ((void (*)(uint64_t))v24)(v32);
      uint64_t v33 = OUTLINED_FUNCTION_7_4(v25[12]);
      ((void (*)(uint64_t))v24)(v33);
      uint64_t v4 = v103;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v34();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v35();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v36();
      goto LABEL_19;
    case 4u:
      uint64_t v105 = v4;
      uint64_t v37 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      if (!OUTLINED_FUNCTION_51_20(v37))
      {
        type metadata accessor for UUID();
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v38();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        OUTLINED_FUNCTION_32_25();
        unint64_t v40 = *(void (**)(void))(v39 + 8);
        OUTLINED_FUNCTION_8_14();
        v40();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v41();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v42();
        OUTLINED_FUNCTION_8_14();
        v40();
        uint64_t v7 = v101;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v43();
        uint64_t v44 = v10 + v1[10];
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        OUTLINED_FUNCTION_39_8();
        (*(void (**)(uint64_t))(v45 + 8))(v44);
      }
      uint64_t v46 = v10 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
      if (!__swift_getEnumTagSinglePayload(v46, 1, (uint64_t)v1))
      {
        type metadata accessor for UUID();
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v47();
        uint64_t v95 = v2;
        uint64_t v48 = *(void (**)(void))(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>)
                                           - 8)
                               + 8);
        OUTLINED_FUNCTION_26();
        v48();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v49();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v50();
        OUTLINED_FUNCTION_26();
        v48();
        uint64_t v2 = v95;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        OUTLINED_FUNCTION_39_8();
        OUTLINED_FUNCTION_11();
        v51();
        uint64_t v52 = v46 + v1[10];
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        OUTLINED_FUNCTION_39_8();
        (*(void (**)(uint64_t))(v53 + 8))(v52);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v105;
      goto LABEL_20;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      type metadata accessor for UUID();
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v54();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v55();
      goto LABEL_19;
    case 6u:
      goto LABEL_19;
    case 8u:
      swift_bridgeObjectRelease();
      type metadata accessor for SearchCallHistoryModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_32_25();
      uint64_t v57 = *(void (**)(void))(v56 + 8);
      uint64_t v106 = v58;
      OUTLINED_FUNCTION_8_14();
      v57();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v59();
      OUTLINED_FUNCTION_8_14();
      v57();
      OUTLINED_FUNCTION_8_14();
      v57();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      OUTLINED_FUNCTION_15();
      uint64_t v61 = *(void (**)(void))(v60 + 8);
      OUTLINED_FUNCTION_8_14();
      v61();
      OUTLINED_FUNCTION_8_14();
      v61();
      uint64_t v7 = v101;
      uint64_t v4 = v106;
      goto LABEL_16;
    case 9u:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v62();
      uint64_t v63 = v4;
      uint64_t v64 = *(void (**)(void))(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>)
                                         - 8)
                             + 8);
      OUTLINED_FUNCTION_8_87();
      v64();
      uint64_t v65 = OUTLINED_FUNCTION_7_4(*(int *)(v5 + 28));
      ((void (*)(uint64_t))v64)(v65);
      uint64_t v4 = v63;
      uint64_t v3 = (v2 + 24) & ~v2;
LABEL_16:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v66();
      goto LABEL_20;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v67 = type metadata accessor for SingleResultVoicemailModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      OUTLINED_FUNCTION_32_25();
      BOOL v69 = *(void (**)(void))(v68 + 8);
      uint64_t v104 = v70;
      uint64_t v98 = v9;
      OUTLINED_FUNCTION_8_14();
      v69();
      OUTLINED_FUNCTION_8_14();
      v69();
      uint64_t v71 = v10 + *(int *)(v67 + 60);
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      uint64_t v93 = v2;
      OUTLINED_FUNCTION_26_0();
      v74();
      uint64_t v75 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      OUTLINED_FUNCTION_33_26();
      uint64_t v13 = *(void (**)(void))(v76 + 8);
      OUTLINED_FUNCTION_10_8();
      v13();
      v91(v71 + *(int *)(v75 + 24), v72);
LABEL_18:
      uint64_t v2 = v93;
      uint64_t v7 = v101;
      OUTLINED_FUNCTION_10_8();
      v13();
      uint64_t v3 = v96;
      uint64_t v9 = v98;
      uint64_t v4 = v104;
      goto LABEL_19;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v83 = v10 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      uint64_t v84 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      if (OUTLINED_FUNCTION_51_20(v84)) {
        goto LABEL_20;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_49();
      uint64_t v100 = v9;
      uint64_t v86 = *(void (**)(void))(v85 + 8);
      OUTLINED_FUNCTION_26_0();
      v86();
      uint64_t v92 = v83 + v1[5];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      OUTLINED_FUNCTION_33_26();
      uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
      v88(v92, v7);
      OUTLINED_FUNCTION_26_0();
      v86();
      uint64_t v9 = v100;
      v88(v83 + v1[7], v7);
      uint64_t v4 = v103;
      uint64_t v3 = v96;
LABEL_19:
      swift_bridgeObjectRelease();
LABEL_20:
      unint64_t v77 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v78 = ((v77 + v7 + 8) & ~v7) + v9;

      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v79();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      uint64_t v81 = *(void (**)(void))(v80 + 8);
      OUTLINED_FUNCTION_78_2();
      OUTLINED_FUNCTION_26_0();
      v81();
      OUTLINED_FUNCTION_26_0();
      v81();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_11();
      v82();
      return _swift_deallocObject(v0, v78, v2 | v7 | 7);
    default:
      goto LABEL_20;
  }
}

uint64_t partial apply for closure #2 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for PhoneSnippetDataModels();
  OUTLINED_FUNCTION_19_0(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = (*(void *)(v8 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = type metadata accessor for PlayVoicemailModel();
  OUTLINED_FUNCTION_13(v10);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v9 + v12 + 8;
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v15 = v0 + v7;
  uint64_t v16 = *(void *)(v0 + v9);
  uint64_t v17 = v0 + (v13 & ~v12);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v18;
  *uint64_t v18 = v2;
  v18[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #2 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow()(v4, v14, v15, v16, v17);
}

uint64_t base witness table accessor for WindowingFlowProvider in ReadVoicemailResultSetFlowProvider(uint64_t a1, uint64_t a2)
{
  return _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_13(&lazy protocol witness table cache variable for type ReadVoicemailResultSetFlowProvider and conformance ReadVoicemailResultSetFlowProvider, a2, (void (*)(uint64_t))type metadata accessor for ReadVoicemailResultSetFlowProvider);
}

uint64_t sub_3A4844@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 224))();
  *a2 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ReadingCallRecord(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

void destroy for ReadingCallRecord(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for ReadingCallRecord(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for ReadingCallRecord(uint64_t a1, _OWORD *a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ReadingCallRecord()
{
  return &type metadata for ReadingCallRecord;
}

uint64_t protocol witness for ResultSetFlowProvider.makeNarrowingPromptFlowIfNeeded() in conformance ReadVoicemailResultSetFlowProvider(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_13(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with take of PhoneSnippetDataModels(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_62_0();
  v5(v4);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a2, v2);
  return a2;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_9(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_39_8();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_95()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_20_44()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_41_29()
{
  uint64_t v2 = *(void *)(v0 - 104);
  unint64_t v3 = *(void *)(v0 - 96);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2, v3, (uint64_t *)(v0 - 112));
}

uint64_t OUTLINED_FUNCTION_45_23()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_46_24()
{
  return *(void *)(v0 + 2152);
}

uint64_t OUTLINED_FUNCTION_51_20(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void AnnounceVoicemailFlow.__allocating_init(directAction:sharedGlobals:eventStore:contactStore:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v25 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t v11 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v12);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v13);
  uint64_t v15 = OUTLINED_FUNCTION_3_99(v14, v23);
  v16(v15);
  uint64_t v18 = *(void *)(v4 + 24);
  uint64_t v17 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v18);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v19);
  uint64_t v21 = OUTLINED_FUNCTION_1_28(v20, v24);
  v22(v21);
  specialized AnnounceVoicemailFlow.__allocating_init(directAction:sharedGlobals:eventStore:contactStore:)(v10, v8, v1, v2, v25, v12, v18, v11, v17);
  __swift_destroy_boxed_opaque_existential_1(v4);
  __swift_destroy_boxed_opaque_existential_1(v6);
  OUTLINED_FUNCTION_26_1();
}

void key path setter for AnnounceVoicemailFlow.state : AnnounceVoicemailFlow(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *a2;
  char v4 = *(unsigned char *)(a1 + 8);
  swift_beginAccess();
  uint64_t v5 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;
  char v6 = *(unsigned char *)(v3 + 24);
  *(unsigned char *)(v3 + 24) = v4;
  outlined copy of AnnounceVoicemailFlow.State(v2, v4);
  outlined consume of AnnounceVoicemailFlow.State(v5, v6);
}

void *AnnounceVoicemailFlow.state.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);
  outlined copy of AnnounceVoicemailFlow.State(v1, *(unsigned char *)(v0 + 24));
  return v1;
}

void AnnounceVoicemailFlow.__allocating_init(state:eventStore:sharedGlobals:contactStore:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v23 = v3;
  uint64_t v5 = v4;
  HIDWORD(v22) = v6;
  uint64_t v8 = v7;
  uint64_t v9 = swift_allocObject();
  uint64_t v11 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v11);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  uint64_t v17 = *(void *)(v2 + 24);
  uint64_t v16 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v17);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v18);
  uint64_t v20 = OUTLINED_FUNCTION_1_28(v19, v22);
  v21(v20);
  specialized AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)(v8, SBYTE4(v22), (uint64_t)v14, v23, v0, v9, v11, v17, v10, v16);
  __swift_destroy_boxed_opaque_existential_1(v2);
  __swift_destroy_boxed_opaque_existential_1(v5);
  OUTLINED_FUNCTION_26_1();
}

void AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v24 = v3;
  uint64_t v27 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v6 + 24);
  uint64_t v12 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v13);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v14);
  uint64_t v16 = OUTLINED_FUNCTION_3_99(v15, v24);
  v17(v16);
  uint64_t v19 = *(void *)(v5 + 24);
  uint64_t v18 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v19);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v20);
  uint64_t v22 = OUTLINED_FUNCTION_1_28(v21, v25);
  v23(v22);
  specialized AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)(v11, v9, v1, v26, v2, v27, v13, v19, v12, v18);
  __swift_destroy_boxed_opaque_existential_1(v5);
  __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_26_1();
}

uint64_t AnnounceVoicemailFlow.execute(completion:)()
{
  type metadata accessor for AnnounceVoicemailFlow();
  lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow(&lazy protocol witness table cache variable for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow, v0, (void (*)(uint64_t))type metadata accessor for AnnounceVoicemailFlow);
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t AnnounceVoicemailFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[56] = v2;
  v1[57] = v0;
  type metadata accessor for CATOption();
  v1[58] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v1[59] = v3;
  v1[60] = *(void *)(v3 - 8);
  v1[61] = swift_task_alloc();
  return _swift_task_switch(AnnounceVoicemailFlow.execute(), 0, 0);
}

{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  double v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t (*v37)(void);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;

  uint64_t v1 = (void *)(*(uint64_t (**)(void))(**(void **)(v0 + 456) + 112))();
  switch(v2)
  {
    case 1:
      uint64_t v21 = *(void **)(v0 + 456);
      outlined init with copy of SignalProviding((uint64_t)(v21 + 9), v0 + 344);
      type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy();
      uint64_t v22 = swift_allocObject();
      outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 344), v22 + 16);
      uint64_t v24 = v21[12];
      uint64_t v23 = v21[13];
      __swift_project_boxed_opaque_existential_1(v21 + 9, v24);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 16);
      uint64_t v41 = v1;
      v25(v24, v23);
      uint64_t v26 = *(void *)(v0 + 200);
      uint64_t v27 = *(void *)(v0 + 216);
      uint64_t v28 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 176), v26);
      *(void *)(v0 + 248) = v26;
      *(void *)(v0 + 256) = v27;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 224));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(boxed_opaque_existential_1, v28, v26);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForValueFlowAsync<AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse>);
      swift_allocObject();
      lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow(&lazy protocol witness table cache variable for type AnnounceVoicemailPromptForValueFlowStrategy and conformance AnnounceVoicemailPromptForValueFlowStrategy, 255, (void (*)(uint64_t))type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy);
      uint64_t v30 = PromptForValueFlowAsync.init<A>(strategy:outputPublisher:)();
      __swift_destroy_boxed_opaque_existential_1(v0 + 176);
      *(void *)(v0 + 432) = v30;
      uint64_t v31 = OUTLINED_FUNCTION_18_1();
      *(void *)(v31 + 16) = v21;
      *(void *)(v31 + 24) = v41;
      outlined copy of AnnounceVoicemailFlow.State(v1, 1);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type PromptForValueFlowAsync<AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse> and conformance PromptForValueFlowAsync<A>, &demangling cache variable for type metadata for PromptForValueFlowAsync<AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse>);
      swift_retain();
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      outlined consume of AnnounceVoicemailFlow.State(v1, 1);
      outlined consume of AnnounceVoicemailFlow.State(v1, 1);
      swift_release();
      goto LABEL_4;
    case 2:
      uint64_t v32 = one-time initialization token for siriPhone;
      swift_retain();
      if (v32 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
      char v34 = Logger.logObject.getter();
      uint64_t v35 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl(&dword_0, v34, v35, "Transitioning to follow-up action flow.", v36, 2u);
        swift_slowDealloc();
      }

      static ExecuteResponse.complete(next:)();
      outlined consume of AnnounceVoicemailFlow.State(v1, 2);
      outlined consume of AnnounceVoicemailFlow.State(v1, 2);
      break;
    case 3:
      static ExecuteResponse.complete()();
      break;
    default:
      uint64_t v4 = *(void *)(v0 + 480);
      uint64_t v3 = *(void *)(v0 + 488);
      uint64_t v5 = *(void *)(v0 + 472);
      uint64_t v6 = *(void **)(v0 + 456);
      char v8 = v6[7];
      uint64_t v7 = v6[8];
      __swift_project_boxed_opaque_existential_1(v6 + 4, v8);
      static Date.distantFuture.getter();
      Date.timeIntervalSince1970.getter();
      uint64_t v10 = v9;
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
      *(void *)(v0 + 384) = 0;
      *(void *)(v0 + 392) = 0;
      *(void *)(v0 + 400) = v10;
      uint64_t v11 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
      SiriPhoneDefaultsProviding.getOrDefault<A>(key:defaultValue:)(0, v0 + 384, v8, (uint64_t)&type metadata for AnnounceVoicemailHintHistory, v7, v11, v0 + 408);
      uint64_t v12 = *(void *)(v0 + 416);
      uint64_t v13 = *(double *)(v0 + 424);
      uint64_t v39 = v1[6];
      unint64_t v40 = *(void *)(v0 + 408);
      uint64_t v14 = (void *)(*(uint64_t (**)(void *))(*v1 + 112))(v6 + 14);
      outlined init with copy of SignalProviding((uint64_t)(v6 + 9), v0 + 304);
      BurstNotificationSearchManager.init(sharedGlobals:)((void *)(v0 + 304), (void *)(v0 + 96));
      outlined init with copy of SignalProviding((uint64_t)(v6 + 9), v0 + 264);
      type metadata accessor for AnnounceVoicemailCATs();
      static CATOption.defaultMode.getter();
      uint64_t v15 = CATWrapper.__allocating_init(options:globals:)();
      outlined init with copy of BurstNotificationSearchManager(v0 + 96, v0 + 16);
      uint64_t v16 = specialized AnnounceVoicemailReadingFlow.__allocating_init(synchronousBurstIndex:voicemail:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)(v39, v14, v40, v12, (void *)(v0 + 16), v0 + 264, v15, v13);
      outlined destroy of BurstNotificationSearchManager(v0 + 96);
      *(void *)(v0 + 440) = v16;
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, double))(*v6 + 168))(v40, v12, v13);
      uint64_t v19 = v18;
      uint64_t v20 = OUTLINED_FUNCTION_18_1();
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v19;
      type metadata accessor for AnnounceVoicemailReadingFlow();
      lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow((unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailReadingFlow and conformance AnnounceVoicemailReadingFlow, 255, (void (*)(uint64_t))type metadata accessor for AnnounceVoicemailReadingFlow);
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      outlined consume of AnnounceVoicemailFlow.State(v1, 0);
      swift_release();
LABEL_4:
      swift_release();
      break;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v37();
}

uint64_t (*AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:)(uint64_t a1, uint64_t a2, double a3))(uint64_t a1)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  *(double *)(v7 + 40) = a3;
  swift_retain();
  return partial apply for closure #1 in AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:);
}

void AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:readingState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  PhoneCallFlowDelegatePlugin::AnnounceVoicemailHintHistory v22 = AnnounceVoicemailHintHistory.makeUpdatedHistoryAfterAnnouncement(announcementCount:didReadHint:)(*(void *)a3, *(unsigned char *)(a3 + 48));
  Swift::Int count = v22.count;
  Swift::Int hintCount = v22.hintCount;
  Swift::Double lastHintTimestamp = v22.lastHintTimestamp;
  uint64_t v9 = *(void *)(v4 + 56);
  uint64_t v10 = *(void *)(v4 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 32), v9);
  v21[0] = count;
  v21[1] = hintCount;
  *(Swift::Double *)&v21[2] = lastHintTimestamp;
  uint64_t v11 = *(void (**)(void, void *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v10 + 16);
  unint64_t v12 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  v11(0, v21, &type metadata for AnnounceVoicemailHintHistory, v12, v9, v10);
  unint64_t v13 = *(void *)(a3 + 8);
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_16();
    uint64_t v19 = *(void **)(v4 + 16);
    *(void *)(v4 + 16) = 0;
    char v20 = *(unsigned char *)(v4 + 24);
    *(unsigned char *)(v4 + 24) = 3;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  if (!v14) {
    goto LABEL_8;
  }
LABEL_3:
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_11;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v16, (v13 & 0xC000000000000001) == 0);
  if ((v13 & 0xC000000000000001) != 0)
  {
LABEL_11:
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  id v17 = *(id *)(v13 + 8 * v16 + 32);
LABEL_6:
  id v18 = v17;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_16();
  uint64_t v19 = *(void **)(v4 + 16);
  *(void *)(v4 + 16) = v18;
  char v20 = *(unsigned char *)(v4 + 24);
  *(unsigned char *)(v4 + 24) = 1;
LABEL_9:
  outlined consume of AnnounceVoicemailFlow.State(v19, v20);
}

void AnnounceVoicemailFlow.offerSilentPromptCompleted(lastVoicemail:response:)()
{
  void (*v36)(void *__return_ptr, uint64_t, uint64_t);
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char v54;
  char v55;
  void *v56;
  id v57;
  id v58;
  char *v59;
  unsigned char v60[40];
  void v61[3];
  uint64_t v62;
  void *v63;
  void v64[22];
  long long v65;
  uint64_t v66;
  ValueMetadata *v67;
  _UNKNOWN **v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse>);
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v56 - v13;
  BOOL v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15((char *)&v56 - v13, v3, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v14, v6) != enum case for PromptResult.answered<A>(_:))
  {
    OUTLINED_FUNCTION_6_16();
    uint64_t v30 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = 0;
    char v31 = *(unsigned char *)(v1 + 24);
    char v32 = 3;
    goto LABEL_5;
  }
  v15(v12, (uint64_t)v14, v6);
  (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v6);
  if (*v12)
  {
    uint64_t v16 = *(void *)(v1 + 96);
    uint64_t v17 = *(void *)(v1 + 104);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 72), v16);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 16))(v64, v16, v17);
    id v18 = (ValueMetadata *)v64[3];
    uint64_t v19 = v5;
    char v20 = (_UNKNOWN **)v64[5];
    uint64_t v21 = __swift_project_boxed_opaque_existential_1(v64, v64[3]);
    uint64_t v67 = v18;
    uint64_t v68 = v20;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v65);
    (*((void (**)(uint64_t *, void *, ValueMetadata *))v18[-1].Description + 2))(boxed_opaque_existential_1, v21, v18);
    id v23 = [v19 identifier];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    uint64_t v27 = OUTLINED_FUNCTION_18_1();
    *(void *)(v27 + 16) = v24;
    *(void *)(v27 + 24) = v26;
    uint64_t v28 = OUTLINED_FUNCTION_18_1();
    *(void *)(v28 + 16) = &async function pointer to partial apply for closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:);
    *(void *)(v28 + 24) = v27;
    type metadata accessor for SimpleOutputFlowAsync();
    swift_allocObject();
    uint64_t v29 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    v64[0] = v29;
    Flow.eraseToAnyFlow()();
    swift_release();
    OUTLINED_FUNCTION_6_16();
    uint64_t v30 = (void *)OUTLINED_FUNCTION_11_67();
LABEL_5:
    *(unsigned char *)(v1 + 24) = v32;
    outlined consume of AnnounceVoicemailFlow.State(v30, v31);
    goto LABEL_9;
  }
  uint64_t v58 = v5;
  char v59 = v14;
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  memcpy(v64, &static PhoneCallFeatureFlags.instance, sizeof(v64));
  type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject();
  uint64_t v67 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v68 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v65 = swift_allocObject();
  memcpy((void *)(v65 + 16), v64, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v65, inited + 16);
  uint64_t v56 = (void *)(v1 + 72);
  uint64_t v34 = *(void *)(v1 + 96);
  uint64_t v35 = *(void *)(v1 + 104);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 72), v34);
  uint64_t v36 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v35 + 8);
  outlined retain of PhoneCallFeatureFlags((uint64_t)v64);
  v36(v61, v34, v35);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v61, (uint64_t)&v65);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  uint64_t v37 = objc_allocWithZone((Class)INCallRecordFilter);
  uint64_t v38 = @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:preferredCallProvider:)(0, 0, 0, 0);
  uint64_t v39 = _INCallAudioRouteHeySiriAudioRoute;
  unint64_t v40 = objc_allocWithZone((Class)INStartCallIntent);
  uint64_t v57 = v38;
  uint64_t v41 = v58;
  uint64_t v42 = v58;
  uint64_t v43 = @nonobjc INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:)(v38, v41, v39, 5, 1, 0, 0, 1);
  uint64_t v44 = *(void *)(v1 + 96);
  uint64_t v45 = *(void *)(v1 + 104);
  uint64_t v46 = v56;
  __swift_project_boxed_opaque_existential_1(v56, v44);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v45 + 104))(v61, v44, v45);
  uint64_t v47 = v62;
  uint64_t v58 = v63;
  __swift_project_boxed_opaque_existential_1(v61, v62);
  uint64_t v48 = type metadata accessor for StartCallRCHFlowDelegate();
  outlined init with copy of SignalProviding((uint64_t)v46, (uint64_t)v60);
  uint64_t v49 = StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)((uint64_t)v60, 0);
  uint64_t v50 = v65;
  id v51 = lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow(&lazy protocol witness table cache variable for type StartCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>, 255, (void (*)(uint64_t))type metadata accessor for StartCallRCHFlowDelegate);
  uint64_t v52 = SiriKitFlowFactoryProtocol.makeDelegateBasedRCHFlow<A>(delegate:app:intent:)(v49, v50, (uint64_t)v43, v47, v48, (uint64_t)v58, v51);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  v61[0] = v52;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  Flow.eraseToAnyFlow()();
  swift_release();

  uint64_t v71 = *((void *)&v65 + 1);
  outlined release of Set<String>((uint64_t)&v71);
  outlined init with take of String?((uint64_t)&v66, (uint64_t)v60);
  outlined release of String?((uint64_t)v60);
  uint64_t v70 = v69;
  outlined release of Set<String>((uint64_t)&v70);
  swift_release();
  OUTLINED_FUNCTION_6_16();
  uint64_t v53 = (void *)OUTLINED_FUNCTION_11_67();
  *(unsigned char *)(v1 + 24) = v54;
  outlined consume of AnnounceVoicemailFlow.State(v53, v55);
  uint64_t v14 = v59;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v6);
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:), 0, 0);
}

uint64_t closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INPlayVoicemailIntent);
  id v2 = static INPlayVoicemailIntent.makeFirstPartyHandleIntent(identifier:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_46A030;
  *(void *)(v3 + 32) = v2;
  specialized Array._endMutation()();
  v1[3] = type metadata accessor for AceOutput();
  v1[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v1);
  AceOutput.init(commands:flowActivity:)();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

uint64_t AnnounceVoicemailFlow.deinit()
{
  outlined consume of AnnounceVoicemailFlow.State(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return v0;
}

uint64_t AnnounceVoicemailFlow.__deallocating_deinit()
{
  AnnounceVoicemailFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance AnnounceVoicemailFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance AnnounceVoicemailFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t protocol witness for Flow.execute() in conformance AnnounceVoicemailFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 160) + **(int **)(**(void **)v1 + 160));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AnnounceVoicemailFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AnnounceVoicemailFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

id @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:preferredCallProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (a1)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v9.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  id v10 = [v5 initWithParticipants:v9.super.isa callTypes:a2 callCapability:a3 preferredCallProvider:a4];

  return v10;
}

uint64_t specialized AnnounceVoicemailFlow.__allocating_init(directAction:sharedGlobals:eventStore:contactStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v24[3] = a6;
  v24[4] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a3, a6);
  v23[3] = a7;
  v23[4] = a9;
  uint64_t v17 = __swift_allocate_boxed_opaque_existential_1(v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v17, a4, a7);
  outlined init with copy of SignalProviding((uint64_t)v24, (uint64_t)v22);
  outlined init with copy of SignalProviding(a2, (uint64_t)v21);
  outlined init with copy of SignalProviding((uint64_t)v23, (uint64_t)v20);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, void, unsigned char *, unsigned char *, unsigned char *))(a5 + 136))(a1, 0, v22, v21, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v18;
}

id outlined copy of AnnounceVoicemailFlow.State(id result, char a2)
{
  if (a2 == 2) {
    return (id)swift_retain();
  }
  if (a2 != 1)
  {
    if (a2) {
      return result;
    }
    return (id)swift_retain();
  }
  return result;
}

uint64_t specialized AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)(uint64_t a1, char a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a6 + 56) = a7;
  *(void *)(a6 + 64) = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a6 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a3, a7);
  *(void *)(a6 + 136) = a8;
  *(void *)(a6 + 144) = a10;
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a6 + 112));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v19, a5, a8);
  *(void *)(a6 + 16) = a1;
  *(unsigned char *)(a6 + 24) = a2;
  outlined init with take of AppSelectionSignalComponent(a4, a6 + 72);
  return a6;
}

uint64_t type metadata accessor for AnnounceVoicemailFlow()
{
  return self;
}

void outlined consume of AnnounceVoicemailFlow.State(void *a1, char a2)
{
  if (a2 == 2)
  {
LABEL_4:
    swift_release();
    return;
  }
  if (a2 != 1)
  {
    if (a2) {
      return;
    }
    goto LABEL_4;
  }
}

uint64_t sub_3A6734()
{
  swift_release();

  uint64_t v1 = OUTLINED_FUNCTION_17_7();

  return _swift_deallocObject(v1, v2, v3);
}

void partial apply for closure #1 in AnnounceVoicemailFlow.offerSilentPromptCompleted(lastVoicemail:)()
{
}

uint64_t outlined init with copy of BurstNotificationSearchManager(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t specialized AnnounceVoicemailReadingFlow.__allocating_init(synchronousBurstIndex:voicemail:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *__src, uint64_t a6, uint64_t a7, double a8)
{
  memcpy(__dst, __src, sizeof(__dst));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_46A030;
  *(void *)(v15 + 32) = a2;
  v21[0] = v15;
  specialized Array._endMutation()();
  uint64_t v16 = v21[0];
  id v17 = a2;
  static AnnounceVoicemailReadingState.makeInitialState(synchronousBurstIndex:voicemail:)(a1, v17, (uint64_t)v24);
  outlined init with copy of SignalProviding(a6, (uint64_t)v22);
  type metadata accessor for AnnounceVoicemailReadingFlow();
  uint64_t v18 = swift_allocObject();
  outlined init with copy of BurstNotificationSearchManager((uint64_t)__dst, (uint64_t)v21);
  uint64_t v19 = specialized AnnounceVoicemailReadingFlow.init(state:readingState:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)(v16, (uint64_t)v24, a3, a4, v21, v22, a7, v18, a8);

  __swift_destroy_boxed_opaque_existential_1(a6);
  outlined destroy of BurstNotificationSearchManager((uint64_t)__dst);
  return v19;
}

uint64_t outlined destroy of BurstNotificationSearchManager(uint64_t a1)
{
  return a1;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed AnnounceVoicemailReadingState) -> ()(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 48);
  return v2(v5);
}

uint64_t sub_3A6A14()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #1 in AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:)(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, uint64_t, double))(**(void **)(v1 + 16) + 176))(*(void *)(v1 + 24), *(void *)(v1 + 32), a1, *(double *)(v1 + 40));
}

uint64_t sub_3A6AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 112))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AnnounceVoicemailFlow.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  outlined copy of AnnounceVoicemailFlow.State(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for AnnounceVoicemailFlow.State(uint64_t a1)
{
}

uint64_t assignWithCopy for AnnounceVoicemailFlow.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  outlined copy of AnnounceVoicemailFlow.State(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  outlined consume of AnnounceVoicemailFlow.State(v5, v6);
  return a1;
}

uint64_t assignWithTake for AnnounceVoicemailFlow.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  outlined consume of AnnounceVoicemailFlow.State(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnounceVoicemailFlow.State(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailFlow.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for AnnounceVoicemailFlow.State(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t destructiveInjectEnumTag for AnnounceVoicemailFlow.State(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailFlow.State()
{
  return &type metadata for AnnounceVoicemailFlow.State;
}

uint64_t sub_3A6CA4()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_17_7();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t partial apply for closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v2 = OUTLINED_FUNCTION_13_54();
  return closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)(v2, v3, v4);
}

uint64_t sub_3A6D74()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_17_7();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async () -> (@out Output)()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v2 = OUTLINED_FUNCTION_13_54();
  return v3(v2);
}

uint64_t sub_3A6E50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t specialized AnnounceVoicemailReadingFlow.init(state:readingState:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, long long *a6, uint64_t a7, uint64_t a8, double a9)
{
  *(void *)(a8 + 128) = &type metadata for BurstNotificationSearchManager;
  *(void *)(a8 + 136) = &protocol witness table for BurstNotificationSearchManager;
  uint64_t v18 = swift_allocObject();
  *(void *)(a8 + 104) = v18;
  memcpy((void *)(v18 + 16), a5, 0x50uLL);
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a2;
  *(void *)(a8 + 192) = 0;
  *(void *)(a8 + 16) = a1;
  *(_OWORD *)(a8 + 40) = v19;
  *(_OWORD *)(a8 + 56) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a8 + 72) = *(unsigned char *)(a2 + 48);
  *(void *)(a8 + 80) = a3;
  *(void *)(a8 + 88) = a4;
  *(double *)(a8 + 96) = a9;
  *(void *)(a8 + 144) = a7;
  outlined init with take of AppSelectionSignalComponent(a6, a8 + 152);
  return a8;
}

uint64_t sub_3A7030()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

char *OUTLINED_FUNCTION_3_99@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_11_67()
{
  uint64_t result = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_54()
{
  return v0;
}

uint64_t ContactResolverConfigHashable.isFaceTime.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContactResolverConfigHashable();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for ContactActionType();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v21 - v13;
  v21[1] = v2;
  ContactResolverConfig.actionType.getter();
  uint64_t v15 = *(void (**)(uint64_t))(v8 + 104);
  uint64_t v16 = OUTLINED_FUNCTION_6_86();
  v15(v16);
  LOBYTE(v2) = specialized == infix<A>(_:_:)((uint64_t)v14, (uint64_t)v12);
  id v17 = *(void (**)(void))(v8 + 8);
  OUTLINED_FUNCTION_10_8();
  v17();
  OUTLINED_FUNCTION_10_8();
  v17();
  outlined init with copy of ContactResolverConfigHashable(v1, v5);
  if (v2)
  {
    char v18 = 1;
  }
  else
  {
    ContactResolverConfig.actionType.getter();
    uint64_t v19 = OUTLINED_FUNCTION_6_86();
    v15(v19);
    char v18 = specialized == infix<A>(_:_:)((uint64_t)v14, (uint64_t)v12);
    OUTLINED_FUNCTION_10_8();
    v17();
    ((void (*)(char *, uint64_t))v17)(v14, v6);
  }
  outlined destroy of ContactResolverConfigHashable(v5);
  return v18 & 1;
}

uint64_t ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v95 = a7;
  uint64_t v77 = a6;
  uint64_t v97 = a4;
  uint64_t v98 = a3;
  type metadata accessor for RecommenderType();
  OUTLINED_FUNCTION_0_0();
  uint64_t v91 = v13;
  uint64_t v92 = v12;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_3_1();
  uint64_t v90 = v14;
  OUTLINED_FUNCTION_36();
  uint64_t v84 = type metadata accessor for SearchSuggestedContacts();
  OUTLINED_FUNCTION_0_0();
  uint64_t v82 = v15;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_3_1();
  uint64_t v85 = v17;
  OUTLINED_FUNCTION_36();
  uint64_t v18 = type metadata accessor for ContactResolverDomain();
  __chkstk_darwin(v18 - 8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v81 = v19;
  OUTLINED_FUNCTION_36();
  uint64_t v20 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_3_1();
  uint64_t v80 = v24;
  OUTLINED_FUNCTION_36();
  uint64_t v88 = type metadata accessor for ContactResolverConfig();
  OUTLINED_FUNCTION_0_0();
  uint64_t v86 = v25;
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_3_1();
  uint64_t v83 = v27;
  OUTLINED_FUNCTION_36();
  uint64_t v79 = type metadata accessor for ContactActionType();
  OUTLINED_FUNCTION_0_0();
  uint64_t v76 = v28;
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_5_8();
  uint64_t v78 = v30;
  uint64_t v32 = __chkstk_darwin(v31);
  BOOL v69 = (char *)&v68 - v33;
  __chkstk_darwin(v32);
  uint64_t v75 = (char *)&v68 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactHandleTypePreference?);
  __chkstk_darwin(v35 - 8);
  OUTLINED_FUNCTION_5_8();
  uint64_t v72 = v36;
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v68 - v38;
  uint64_t ObjectType = swift_getObjectType();
  id v41 = a5;
  uint64_t v42 = outlined bridged method (ob) of @objc INIntent.intentId.getter(v41);
  if (v43) {
    uint64_t v44 = v42;
  }
  else {
    uint64_t v44 = 0;
  }
  if (v43) {
    unint64_t v45 = v43;
  }
  else {
    unint64_t v45 = 0xE000000000000000;
  }
  uint64_t v71 = v44;
  *a8 = v44;
  a8[1] = v45;
  uint64_t v93 = a1;
  a8[2] = a1;
  a8[3] = a2;
  uint64_t v46 = type metadata accessor for ContactResolverConfigHashable();
  uint64_t v47 = (char *)a8 + *(int *)(v46 + 24);
  uint64_t v87 = v22;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v89 = v20;
  v48(v47, v98, v20);
  uint64_t v74 = v46;
  uint64_t v49 = *(int *)(v46 + 28);
  uint64_t v96 = a8;
  *(uint64_t *)((char *)a8 + v49) = v97;
  unint64_t v70 = v45;
  swift_bridgeObjectRetain();
  uint64_t v94 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v50 = (uint64_t)v39;
  uint64_t v51 = v77;
  static ContactResolverConfigHashable.chooseHandleTypePreference(skIntent:)(v77, (uint64_t)v39);
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(*(void *)(v51 + 16) + 8))(ObjectType);
  id v73 = v41;
  if (v52 == 2)
  {
    swift_getObjectType();
    uint64_t v54 = (unsigned int *)&enum case for ContactActionType.facetimeVideo(_:);
    if (dynamic_cast_existential_1_conditional((uint64_t)v41))
    {
      uint64_t v55 = v53;
      uint64_t v56 = swift_getObjectType();
      uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 24);
      id v58 = v41;
      uint64_t v59 = v57(v56, v55);

      if (v59 == 1) {
        uint64_t v54 = (unsigned int *)&enum case for ContactActionType.facetimeAudio(_:);
      }
    }
  }
  else
  {
    uint64_t v54 = (unsigned int *)&enum case for ContactActionType.phoneCall(_:);
  }
  uint64_t v60 = v76;
  uint64_t v61 = v69;
  uint64_t v62 = v79;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v69, *v54, v79);
  uint64_t v63 = v75;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v75, v61, v62);
  uint64_t v64 = v98;
  uint64_t v65 = v89;
  v48(v80, v98, v89);
  static ContactResolverDomain.phone.getter();
  uint64_t v68 = v50;
  outlined init with copy of ContactHandleTypePreference?(v50, v72);
  (*(void (**)(uint64_t, void, uint64_t))(v82 + 104))(v85, enum case for SearchSuggestedContacts.ifOnlyMatchIsSuggested(_:), v84);
  (*(void (**)(uint64_t, void, uint64_t))(v91 + 104))(v90, enum case for RecommenderType.mlRecommender(_:), v92);
  uint64_t v66 = v83;
  ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v78, v63, v62);
  ContactResolverConfig.actionType.setter();

  __swift_destroy_boxed_opaque_existential_1(v95);
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v64, v65);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v62);
  outlined destroy of ContactHandleTypePreference?(v68);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 32))((char *)v96 + *(int *)(v74 + 32), v66, v88);
}

uint64_t ContactResolverConfigHashable.config.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactResolverConfigHashable() + 32);
  uint64_t v4 = type metadata accessor for ContactResolverConfig();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContactResolverConfigHashable.description.getter()
{
  type metadata accessor for ContactActionType();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_4();
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(115);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  v2._uint64_t countAndFlagsBits = 0xD000000000000028;
  v2._object = (void *)0x800000000049C190;
  String.append(_:)(v2);
  Hasher.init(_seed:)();
  ContactResolverConfigHashable.hash(into:)((uint64_t)v21);
  v21[0] = Hasher._finalize()();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x746E65746E69202CLL;
  v4._object = (void *)0xEB000000003D6449;
  String.append(_:)(v4);
  uint64_t v5 = *v0;
  uint64_t v6 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._object = (void *)0x800000000049C1C0;
  v8._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v8);
  uint64_t v9 = v0[2];
  uint64_t v10 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x656C61636F6C202CLL;
  v12._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v12);
  type metadata accessor for ContactResolverConfigHashable();
  type metadata accessor for Locale();
  lazy protocol witness table accessor for type Locale and conformance Locale(&lazy protocol witness table cache variable for type Locale and conformance Locale, (void (*)(uint64_t))&type metadata accessor for Locale);
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 0x656C646E7562202CLL;
  v14._object = (void *)0xEC0000003D736449;
  String.append(_:)(v14);
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = Array.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0x6E6F69746361202CLL;
  v16._object = (void *)0xED00003D65707954;
  String.append(_:)(v16);
  ContactResolverConfig.actionType.getter();
  lazy protocol witness table accessor for type Locale and conformance Locale(&lazy protocol witness table cache variable for type ContactActionType and conformance ContactActionType, (void (*)(uint64_t))&type metadata accessor for ContactActionType);
  v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_8();
  v18();
  v19._uint64_t countAndFlagsBits = 41;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  return v22;
}

Swift::Int ContactResolverConfigHashable.hashValue.getter()
{
  Hasher.init(_seed:)();
  ContactResolverConfigHashable.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t static ContactResolverConfigHashable.chooseHandleTypePreference(skIntent:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t))(*(void *)(a1 + 16) + 8))(ObjectType) == 2)
  {
    uint64_t v5 = 1;
  }
  else
  {
    static ContactHandleTypePreference.requirePhone.getter();
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for ContactHandleTypePreference();

  return __swift_storeEnumTagSinglePayload(a2, v5, 1, v6);
}

BOOL static ContactResolverConfigHashable.== infix(_:_:)()
{
  Hasher.init(_seed:)();
  ContactResolverConfigHashable.hash(into:)((uint64_t)v2);
  Swift::Int v0 = Hasher._finalize()();
  Hasher.init(_seed:)();
  ContactResolverConfigHashable.hash(into:)((uint64_t)v2);
  return v0 == Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ContactResolverConfigHashable()
{
  Hasher.init(_seed:)();
  ContactResolverConfigHashable.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t outlined bridged method (ob) of @objc INIntent.intentId.getter(void *a1)
{
  id v2 = [a1 intentId];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t base witness table accessor for Equatable in ContactResolverConfigHashable()
{
  return lazy protocol witness table accessor for type Locale and conformance Locale(&lazy protocol witness table cache variable for type ContactResolverConfigHashable and conformance ContactResolverConfigHashable, (void (*)(uint64_t))type metadata accessor for ContactResolverConfigHashable);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactResolverConfigHashable(uint64_t *a1, uint64_t *a2, int *a3)
{
  Swift::String v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *Swift::String v4 = *a2;
    Swift::String v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    Swift::String v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Locale();
    Swift::String v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    Swift::String v15 = (char *)v4 + v14;
    Swift::String v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for ContactResolverConfig();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
  }
  return v4;
}

void *assignWithCopy for ContactResolverConfigHashable(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  Swift::String v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for ContactResolverConfig();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for ContactResolverConfigHashable(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for ContactResolverConfig();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

void *assignWithTake for ContactResolverConfigHashable(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for ContactResolverConfig();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactResolverConfigHashable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3A8328);
}

uint64_t sub_3A8328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Locale();
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      uint64_t v10 = type metadata accessor for ContactResolverConfig();
      uint64_t v11 = *(int *)(a3 + 32);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContactResolverConfigHashable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3A83E8);
}

uint64_t sub_3A83E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Locale();
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      uint64_t v10 = type metadata accessor for ContactResolverConfig();
      uint64_t v11 = *(int *)(a4 + 32);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for ContactResolverConfigHashable()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ContactResolverConfig();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Locale and conformance Locale(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_86()
{
  return v0;
}

uint64_t EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[0] = a3;
  v14[1] = a1;
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EmergencyContactResolution();
  uint64_t v11 = v4[3];
  uint64_t v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v16, v11, v10);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  outlined init with copy of SignalProviding((uint64_t)(v4 + 5), (uint64_t)v15);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v14[0];
  *(void *)(v12 + 24) = a4;
  swift_retain();
  specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(uint64_t a1, char a2, void (*a3)(uint64_t, void, void))
{
  int v5 = a2 & 1;
  outlined copy of Result<[String], Error>(a1, a2 & 1);
  a3(a1, 0, (v5 << 8));

  return outlined consume of Result<[SAAceView], Error>(a1, v5);
}

uint64_t sub_3A8808()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(uint64_t a1, char a2)
{
  return closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(a1, a2 & 1, *(void (**)(uint64_t, void, void))(v2 + 16));
}

uint64_t EmergencyContactSlotResolver.updateIntent(value:skIntent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, void))(*(void *)(a3 + 24) + 16))(a1, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:_:) in conformance EmergencyContactSlotResolver<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  swift_retain();
  EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(a1, v8, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<[INPerson], SlotResolverError>) -> (), v7);

  return swift_release();
}

uint64_t protocol witness for SlotResolver.updateIntent(value:skIntent:) in conformance EmergencyContactSlotResolver<A>(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return EmergencyContactSlotResolver.updateIntent(value:skIntent:)(*a1, a2, a3);
}

BOOL protocol witness for SKIntentResolver.shouldRunResolver(skIntent:nlIntent:) in conformance EmergencyContactSlotResolver<A>(uint64_t a1, void *a2)
{
  return EmergencyContactSlotResolver.shouldRunResolver(skIntent:nlIntent:)(a1, a2);
}

uint64_t instantiation function for generic protocol witness table for EmergencyContactSlotResolver<A>(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for EmergencyContactSlotResolver()
{
  return __swift_instantiateGenericMetadata();
}

BOOL UnsupportedFeatureGuardFlow.exitValue.getter()
{
  return (*(unsigned char *)(v0 + 16) & 1) == 0;
}

uint64_t UnsupportedFeatureGuardFlow.__allocating_init(check:sharedGlobals:unsupportedFlowCATsSimple:)(char a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  UnsupportedFeatureGuardFlow.init(check:sharedGlobals:unsupportedFlowCATsSimple:)(a1, a2, a3);
  return v6;
}

uint64_t UnsupportedFeatureGuardFlow.init(check:sharedGlobals:unsupportedFlowCATsSimple:)(char a1, long long *a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 16) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, v3 + 24);
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t UnsupportedFeatureGuardFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t type metadata accessor for UnsupportedFeatureGuardFlow()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow;
  if (!lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow)
  {
    type metadata accessor for UnsupportedFeatureGuardFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow);
  }
  return result;
}

uint64_t UnsupportedFeatureGuardFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(UnsupportedFeatureGuardFlow.execute(), 0, 0);
}

uint64_t UnsupportedFeatureGuardFlow.execute()()
{
  if (*(unsigned char *)(v0[4] + 16) == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v4 = 0;
      _os_log_impl(&dword_0, v2, v3, "#UnsupportedFeatureGuardFlow: Passed!", v4, 2u);
      swift_slowDealloc();
    }

    static ExecuteResponse.complete()();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "#UnsupportedFeatureGuardFlow: Did not pass!", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = v0[4];

    v0[2] = (*(uint64_t (**)(void))(*(void *)v9 + 144))();
    type metadata accessor for SimpleOutputFlowAsync();
    static ExecuteResponse.complete<A>(next:)();
    swift_release();
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()()
{
  uint64_t v1 = type metadata accessor for DialogPhase();
  __chkstk_darwin(v1 - 8);
  type metadata accessor for SirikitDeviceState();
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v9, v2, v3);
  uint64_t v4 = SirikitDeviceState.__allocating_init(from:)();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  static DialogPhase.error.getter();
  outlined init with copy of SignalProviding((uint64_t)(v0 + 3), (uint64_t)v9);
  type metadata accessor for DialogOutputFactory();
  swift_allocObject();
  uint64_t v6 = DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 112))(v6);
  swift_release();
  swift_release();
  swift_release();
  return v7;
}

uint64_t closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow(), 0, 0);
}

uint64_t closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(int **)(class metadata base offset for UnsupportedFlowCATsSimple + **(void **)(v0[2] + 64) + 96);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow();
  return v5(v1);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t UnsupportedFeatureGuardFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return v0;
}

uint64_t UnsupportedFeatureGuardFlow.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance UnsupportedFeatureGuardFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance UnsupportedFeatureGuardFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for Flow.execute() in conformance UnsupportedFeatureGuardFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 136) + **(int **)(**(void **)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance UnsupportedFeatureGuardFlow@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 104))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_3A938C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = partial apply for closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:);
  return closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()(v2, v3);
}

id one-time initialization function for missedRed()
{
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIColor);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  v0.super.super.Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  id result = SAUIColor.init(r:g:b:alpha:)(255, 59, 48, v0.super.super.isa);
  static ColorFactory.missedRed = (uint64_t)result;
  return result;
}

uint64_t *ColorFactory.missedRed.unsafeMutableAddressor()
{
  if (one-time initialization token for missedRed != -1) {
    swift_once();
  }
  return &static ColorFactory.missedRed;
}

id static ColorFactory.missedRed.getter()
{
  return static CallHistoryImage.videoCallImage.getter(&one-time initialization token for missedRed, (void **)&static ColorFactory.missedRed);
}

id one-time initialization function for watchDarkCardItemBackgroundColor(uint64_t a1)
{
  return one-time initialization function for watchDarkCardItemBackgroundColor(0.14, a1, &static ColorFactory.watchDarkCardItemBackgroundColor);
}

uint64_t *ColorFactory.watchDarkCardItemBackgroundColor.unsafeMutableAddressor()
{
  if (one-time initialization token for watchDarkCardItemBackgroundColor != -1) {
    swift_once();
  }
  return &static ColorFactory.watchDarkCardItemBackgroundColor;
}

id static ColorFactory.watchDarkCardItemBackgroundColor.getter()
{
  return static CallHistoryImage.videoCallImage.getter(&one-time initialization token for watchDarkCardItemBackgroundColor, (void **)&static ColorFactory.watchDarkCardItemBackgroundColor);
}

id one-time initialization function for watchDarkCardItemTitleBackgroundColor(uint64_t a1)
{
  return one-time initialization function for watchDarkCardItemBackgroundColor(0.4, a1, &static ColorFactory.watchDarkCardItemTitleBackgroundColor);
}

id one-time initialization function for watchDarkCardItemBackgroundColor(Swift::Double a1, uint64_t a2, void *a3)
{
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIColor);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  v5.super.super.Class isa = NSNumber.init(floatLiteral:)(a1).super.super.isa;
  id result = SAUIColor.init(r:g:b:alpha:)(242, 244, 252, v5.super.super.isa);
  *a3 = result;
  return result;
}

uint64_t *ColorFactory.watchDarkCardItemTitleBackgroundColor.unsafeMutableAddressor()
{
  if (one-time initialization token for watchDarkCardItemTitleBackgroundColor != -1) {
    swift_once();
  }
  return &static ColorFactory.watchDarkCardItemTitleBackgroundColor;
}

id static ColorFactory.watchDarkCardItemTitleBackgroundColor.getter()
{
  return static CallHistoryImage.videoCallImage.getter(&one-time initialization token for watchDarkCardItemTitleBackgroundColor, (void **)&static ColorFactory.watchDarkCardItemTitleBackgroundColor);
}

void SpeakerphoneControlFlow.executeAction(currentCall:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  char v5 = *(unsigned char *)(v2 + 56);
  if ((PhoneCallControlAction.isSpeakerphoneAction.getter(v5) & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_26_30(&dword_0, v10, v11, "#SpeakerphoneControlFlow used to handle a call control not related to the microphone.");
      OUTLINED_FUNCTION_6();
    }

    lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    swift_allocError();
    uint64_t v13 = v12;
    char v14 = 0;
    char *v12 = v5;
    goto LABEL_10;
  }
  if (PhoneCallControlAction.rawValue.getter(v5) == 0xD000000000000013 && v6 == 0x8000000000490EB0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a1 + 32))(ObjectType, a1) & 1) != 0
    && ((*(uint64_t (**)(uint64_t, uint64_t))(a1 + 24))(ObjectType, a1) & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_26_30(&dword_0, v20, v21, "#SpeakerphoneControlFlow cannot turn off speakerphone on FaceTime call.");
      OUTLINED_FUNCTION_6();
    }

    lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    swift_allocError();
    uint64_t v13 = (char *)v22;
    *(void *)(v22 + 24) = &type metadata for ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason;
    *(void *)(v22 + 32) = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason();
    char v14 = 1;
LABEL_10:
    unsigned char v13[40] = v14;
    swift_willThrow();
    return;
  }
LABEL_19:
  uint64_t v58 = swift_getObjectType();
  char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 120))(v58, a1);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    v59[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    char v28 = v23;
    if (v23) {
      uint64_t v29 = 0x64656C62616E65;
    }
    else {
      uint64_t v29 = 0x64656C6261736964;
    }
    if (v23) {
      unint64_t v30 = 0xE700000000000000;
    }
    else {
      unint64_t v30 = 0xE800000000000000;
    }
    uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v59);
    OUTLINED_FUNCTION_3_100(v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v32 = v58;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v25, v26, "#SpeakerphoneControlFlow speakerphone is currently %s", v27, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    char v28 = v23;
    uint64_t v32 = v58;
  }
  unint64_t v33 = PhoneCallControlAction.rawValue.getter(v5);
  if (v28)
  {
    if (v33 != 0xD000000000000013 || v34 != 0x8000000000490EB0) {
      goto LABEL_37;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  if (v33 == 0xD000000000000012 && v34 == 0x8000000000490E90) {
    goto LABEL_36;
  }
LABEL_37:
  char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0)
  {
    swift_unknownObjectRetain_n();
    swift_retain_n();
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      v59[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315394;
      OUTLINED_FUNCTION_1_100();
      char v51 = v50();
      BOOL v52 = (v51 & 1) == 0;
      if (v51) {
        uint64_t v53 = 0x64656C62616E65;
      }
      else {
        uint64_t v53 = 0x64656C6261736964;
      }
      if (v52) {
        unint64_t v54 = 0xE800000000000000;
      }
      else {
        unint64_t v54 = 0xE700000000000000;
      }
      uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      unint64_t v55 = PhoneCallControlAction.description.getter(v5);
      uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v47, v48, "#SpeakerphoneControlFlow not changing speakerphone state because speakerphone is %s and action is %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      goto LABEL_57;
    }

    swift_release_n();
    goto LABEL_56;
  }
LABEL_38:
  uint64_t v36 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a1 + 136))(v59, v32, a1);
  *uint64_t v37 = !*v37;
  v36(v59, 0);
  swift_unknownObjectRetain_n();
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v57 = a2;
    unint64_t v40 = (uint8_t *)swift_slowAlloc();
    v59[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v40 = 136315138;
    OUTLINED_FUNCTION_1_100();
    char v42 = v41();
    BOOL v43 = (v42 & 1) == 0;
    if (v42) {
      uint64_t v44 = 0x64656C62616E65;
    }
    else {
      uint64_t v44 = 0x64656C6261736964;
    }
    if (v43) {
      unint64_t v45 = 0xE800000000000000;
    }
    else {
      unint64_t v45 = 0xE700000000000000;
    }
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, v59);
    OUTLINED_FUNCTION_3_100(v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v38, v39, "#SpeakerphoneControlFlow toggled speakerphone to %s", v40, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    a2 = v57;
    OUTLINED_FUNCTION_6();

    goto LABEL_57;
  }

LABEL_56:
  swift_unknownObjectRelease_n();
LABEL_57:
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = xmmword_469B30;
}

uint64_t type metadata accessor for SpeakerphoneControlFlow()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_3_100(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t HangUpCallTemplatingService.__allocating_init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)()
{
  OUTLINED_FUNCTION_37_5();
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(v0, *(void *)(v0 + 24));
  OUTLINED_FUNCTION_0_67();
  __chkstk_darwin(v1);
  uint64_t v3 = OUTLINED_FUNCTION_11_8(v2, v7);
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_2_114();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v5;
}

uint64_t HangUpCallTemplatingService.hangUpCallCatFamily.getter()
{
  return swift_retain();
}

uint64_t HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)()
{
  OUTLINED_FUNCTION_37_5();
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(void *)(v1 + 24));
  OUTLINED_FUNCTION_0_67();
  __chkstk_darwin(v2);
  uint64_t v4 = OUTLINED_FUNCTION_11_8(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_114();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v6;
}

uint64_t HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void **)(v5 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  uint64_t v10 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for HangUpCallCATs
                                                                        + *v8
                                                                        + 64);
  swift_retain();
  v10(partial apply for closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:), v9);

  return swift_release();
}

uint64_t closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = type metadata accessor for TemplatingResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult?, Error>);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v13 = *v10;
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v5 + 32))(v7, v10, v4);
    (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v13, v7, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_storeEnumTagMultiPayload();
  a2(v13);
  return outlined destroy of Result<TemplatingResult?, Error>((uint64_t)v13);
}

uint64_t HangUpCallTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)(int a1, int a2, id a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (char *)[a3 code];
  uint64_t v9 = **(void **)(v5 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily);
  if (v8 == (unsigned char *)&dword_4 + 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for HangUpCallCATs + v9 + 32))(a4, a5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + class metadata base offset for HangUpCallCATs))(a4, a5);
  }
}

void HangUpCallTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
}

uint64_t HangUpCallTemplatingService.__ivar_destroyer()
{
  return swift_release();
}

uint64_t HangUpCallTemplatingService.deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release();
  return v0;
}

uint64_t HangUpCallTemplatingService.__deallocating_deinit()
{
  specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t specialized HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a4;
  uint64_t v23 = a8;
  uint64_t v14 = *(void *)(a7 - 8);
  __chkstk_darwin(a1);
  Swift::String v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CATOption();
  __chkstk_darwin(v17 - 8);
  *(void *)(a6 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily) = a2;
  outlined init with copy of SignalProviding(a1, (uint64_t)v24);
  type metadata accessor for StartCallCATs();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v18 = CATWrapper.__allocating_init(options:globals:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, a7);
  uint64_t v19 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0x61437055676E6168, 0xEF32764355446C6CLL, v24, a3, v22, v16, 0, 0, 0, 0, v18, a6, a7, v23);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, a7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v19;
}

uint64_t sub_3AA7AC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)(uint64_t a1)
{
  return closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t type metadata accessor for HangUpCallTemplatingService()
{
  uint64_t result = type metadata singleton initialization cache for HangUpCallTemplatingService;
  if (!type metadata singleton initialization cache for HangUpCallTemplatingService) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for HangUpCallTemplatingService()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for HangUpCallTemplatingService()
{
  return type metadata accessor for HangUpCallTemplatingService();
}

uint64_t outlined destroy of Result<TemplatingResult?, Error>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult?, Error>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_114()
{
  return specialized HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)(v4, v3, v2, v1, v7, v0, v5, v6);
}

uint64_t SharedNeedsValueContext.registerPrompt(for:)()
{
  return swift_endAccess();
}

uint64_t SharedNeedsValueContext.hasPrompted(for:)()
{
  swift_beginAccess();
  return specialized Set.contains(_:)(*(void *)(v0 + 16)) & 1;
}

uint64_t SharedNeedsValueContext.reset(for:)(char a1)
{
  uint64_t v2 = (void *)(v1 + 16);
  if (a1)
  {
    swift_beginAccess();
    *uint64_t v2 = &_swiftEmptySetSingleton;
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    specialized Set._Variant.remove(_:)();
    return swift_endAccess();
  }
}

uint64_t SharedNeedsValueContext.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &_swiftEmptySetSingleton;
  return result;
}

uint64_t SharedNeedsValueContext.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = &_swiftEmptySetSingleton;
  return result;
}

BOOL specialized Set._Variant.remove(_:)()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  unint64_t v2 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v1 + 32));
  uint64_t v3 = (1 << v2) & *(void *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56);
  if (v3)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v0;
    uint64_t *v0 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native) {
      specialized _NativeSet.copy()();
    }
    specialized _NativeSet._delete(at:)(v2);
    uint64_t *v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

unint64_t lazy protocol witness table accessor for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase()
{
  unint64_t result = lazy protocol witness table cache variable for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase;
  if (!lazy protocol witness table cache variable for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase);
  }
  return result;
}

uint64_t type metadata accessor for SharedNeedsValueContext()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SharedNeedsValueContext.NeedsValueCase(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3AAC58);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedNeedsValueContext.NeedsValueCase()
{
  return &type metadata for SharedNeedsValueContext.NeedsValueCase;
}

unint64_t specialized _NativeSet._delete(at:)(unint64_t result)
{
  Swift::Int v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        Hasher._combine(_:)(0);
        Swift::Int v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (unsigned char *)(v13 + v2);
            uint64_t v15 = (unsigned char *)(v13 + v6);
            BOOL v16 = v2 != v6 || v14 >= v15 + 1;
            Swift::Int v2 = v6;
            if (v16)
            {
              *uint64_t v14 = *v15;
              Swift::Int v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

id static SiriPhoneActionFactory.makeConfirmAndRejectActions()()
{
  uint64_t v1 = type metadata accessor for CommonDirectAction();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_12_0();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SKIDirectInvocationPayload();
  CommonDirectAction.identifier.getter();
  id v2 = SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v3 = CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v3);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v5, v2);
  outlined destroy of CommonDirectAction(v0);
  unint64_t v6 = self;
  id v7 = [objc_allocWithZone((Class)SKIDirectInvocationContext) init];
  id v8 = [v6 runSiriKitExecutorCommandWithContext:v7 payload:v2];

  swift_storeEnumTagMultiPayload();
  CommonDirectAction.identifier.getter();
  id v9 = SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v10 = CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v10);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v12, v9);
  outlined destroy of CommonDirectAction(v0);
  id v13 = [objc_allocWithZone((Class)SKIDirectInvocationContext) init];
  id v14 = [v6 runSiriKitExecutorCommandWithContext:v13 payload:v9];

  return v8;
}

id static SiriPhoneActionFactory.makeSelectionAction(contact:)(void *a1)
{
  uint64_t v3 = type metadata accessor for CommonDirectAction();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_12_0();
  void *v1 = a1;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SKIDirectInvocationPayload();
  id v4 = a1;
  CommonDirectAction.identifier.getter();
  id v5 = SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v6 = CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v6);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v8, v5);
  outlined destroy of CommonDirectAction((uint64_t)v1);
  id v9 = self;
  id v10 = [objc_allocWithZone((Class)SKIDirectInvocationContext) init];
  id v11 = [v9 runSiriKitExecutorCommandWithContext:v10 payload:v5];

  return v11;
}

ValueMetadata *type metadata accessor for SiriPhoneActionFactory()
{
  return &type metadata for SiriPhoneActionFactory;
}

uint64_t UnseenSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                     + **(void **)(v6 + 40)
                                                     + 512))(a5, a6);
}

uint64_t UnseenSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = *(void **)(v8 + 40);
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  uint64_t v13 = PhoneSearchCallHistoryIntent.__allocating_init(intent:)(a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs + *v12 + 160))(v13, a7, a8);

  return swift_release();
}

uint64_t UnseenSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                     + **(void **)(v9 + 40)
                                                     + 192))(a8, a9);
}

uint64_t UnseenSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = *(void **)(v9 + 40);
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  uint64_t v13 = PhoneSearchCallHistoryIntent.__allocating_init(intent:)(a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs + *v12 + 1088))(v13, a8, a9);

  return swift_release();
}

uint64_t protocol witness for SlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:) in conformance UnseenSlotTemplating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return UnseenSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(a1, a2, a3, a4, a5, 0, a7, a8, a9);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:) in conformance UnseenSlotTemplating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return UnseenSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

ValueMetadata *type metadata accessor for UnseenSlotTemplating()
{
  return &type metadata for UnseenSlotTemplating;
}

uint64_t AnnounceCallConfirmationStrategy.__allocating_init(wrapped:sharedGlobals:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  AnnounceCallConfirmationStrategy.init(wrapped:sharedGlobals:)(a1, a2);
  return v4;
}

uint64_t AnnounceCallConfirmationStrategy.init(wrapped:sharedGlobals:)(uint64_t a1, long long *a2)
{
  *(void *)(v2 + 64) = &outlined read-only object #0 of AnnounceCallConfirmationStrategy.init(wrapped:sharedGlobals:);
  *(void *)(v2 + 16) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, v2 + 24);
  return v2;
}

uint64_t AnnounceCallConfirmationStrategy.actionForInput(_:section:isBargeIn:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W5>, uint64_t a5@<X8>)
{
  int v127 = a4;
  uint64_t v125 = a2;
  uint64_t v126 = a5;
  uint64_t v131 = type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v124 = v7;
  __chkstk_darwin(v8);
  uint64_t v116 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v10);
  uint64_t v115 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_5_17();
  uint64_t v118 = v13;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v14);
  int64_t v130 = (char *)&v108 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_5_17();
  uint64_t v114 = v20;
  OUTLINED_FUNCTION_18_0();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v108 - v23;
  __chkstk_darwin(v22);
  OUTLINED_FUNCTION_5_17();
  uint64_t v132 = v25;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_5_17();
  uint64_t v122 = v27;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v28);
  OUTLINED_FUNCTION_5_17();
  uint64_t v117 = v29;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v30);
  OUTLINED_FUNCTION_5_17();
  uint64_t v121 = v31;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v108 - v33;
  uint64_t v35 = type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  unint64_t v40 = (char *)&v108 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
  BOOL v43 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  uint64_t v128 = a1;
  v43(v40, a1, v35);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v119 = v42;
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  int v120 = v45;
  BOOL v46 = os_log_type_enabled(v44, v45);
  unint64_t v47 = a3;
  os_log_type_t v48 = "actionForInput(_:section:isBargeIn:)";
  uint64_t v113 = v24;
  if (v46)
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v112 = v34;
    uint64_t v50 = v49;
    uint64_t v110 = swift_slowAlloc();
    *(void *)&v134[0] = v110;
    *(_DWORD *)uint64_t v50 = 136315906;
    os_log_t v109 = v44;
    uint64_t v133 = OUTLINED_FUNCTION_17_38((uint64_t)"registeredPrompts");
    uint64_t v111 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v125, v47, (uint64_t *)v134);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v50 + 22) = 1024;
    char v51 = v127;
    LODWORD(v133) = v127 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 28) = 2080;
    os_log_type_t v48 = (const char *)(v50 + 30);
    lazy protocol witness table accessor for type ConfirmationResponse and conformance ConfirmationResponse((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, (void (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, (uint64_t *)v134);
    uint64_t v19 = v111;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v54 = OUTLINED_FUNCTION_13_55();
    v55(v54);
    os_log_t v56 = v109;
    _os_log_impl(&dword_0, v109, (os_log_type_t)v120, "#AnnounceCallConfirmationStrategy %s section %s, isBargeIn: %{BOOL}d, input: %s", (uint8_t *)v50, 0x26u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    uint64_t v34 = v112;
    OUTLINED_FUNCTION_6();

    unint64_t v57 = v47;
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    uint64_t v58 = OUTLINED_FUNCTION_13_55();
    v59(v58);

    unint64_t v57 = v47;
    char v51 = v127;
  }
  uint64_t v61 = v131;
  uint64_t v60 = v132;
  uint64_t v62 = (uint64_t)v130;
  if ((v51 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_68();
    return (*(uint64_t (**)(void))(v79 + 168))();
  }
  uint64_t v63 = v129;
  outlined init with copy of SignalProviding(v129 + 24, (uint64_t)v134);
  type metadata accessor for YesNoConfirmationParser();
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(v134, v64 + 24);
  YesNoConfirmationParser.parseConfirmationResponse(input:)((uint64_t)v34);
  uint64_t result = swift_release();
  uint64_t v66 = *(void *)(v63 + 64);
  uint64_t v67 = *(void *)(v66 + 16);
  if (!v67)
  {
    __break(1u);
    return result;
  }
  int v68 = *(unsigned __int8 *)(v67 + v66 + 31);
  if (v68) {
    unint64_t v69 = 0xD000000000000028;
  }
  else {
    unint64_t v69 = 0xD00000000000002ALL;
  }
  if (v68) {
    unint64_t v70 = 0x800000000048D160;
  }
  else {
    unint64_t v70 = 0x800000000048D130;
  }
  BOOL v71 = v69 == v125 && v70 == v57;
  if (v71)
  {
    swift_bridgeObjectRelease();
    uint64_t v73 = v122;
  }
  else
  {
    char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v73 = v122;
    if ((v72 & 1) == 0)
    {
      uint64_t v74 = v114;
      (*(void (**)(uint64_t, void, uint64_t))(v124 + 104))(v114, enum case for ConfirmationResponse.rejected(_:), v61);
      OUTLINED_FUNCTION_4_96(v74);
      uint64_t v75 = v115;
      uint64_t v77 = v115 + v76;
      outlined init with copy of ConfirmationResponse?((uint64_t)v34, v115);
      outlined init with copy of ConfirmationResponse?(v74, v77);
      OUTLINED_FUNCTION_1_101(v75);
      if (!v71)
      {
        uint64_t v96 = OUTLINED_FUNCTION_61();
        outlined init with copy of ConfirmationResponse?(v96, v97);
        OUTLINED_FUNCTION_1_101(v77);
        if (!v98)
        {
          OUTLINED_FUNCTION_6_87();
          v102();
          lazy protocol witness table accessor for type ConfirmationResponse and conformance ConfirmationResponse(&lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse, (void (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
          dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v103 = OUTLINED_FUNCTION_8_88();
          ((void (*)(uint64_t))v48)(v103);
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v74, &demangling cache variable for type metadata for ConfirmationResponse?);
          uint64_t v101 = v19;
          goto LABEL_49;
        }
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v74, &demangling cache variable for type metadata for ConfirmationResponse?);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v19, v61);
        goto LABEL_48;
      }
      uint64_t v78 = v74;
      goto LABEL_36;
    }
  }
  os_log_type_t v48 = (const char *)(v124 + 104);
  uint64_t v80 = *(void (**)(uint64_t, void, uint64_t))(v124 + 104);
  uint64_t v81 = v121;
  v80(v121, enum case for ConfirmationResponse.confirmed(_:), v61);
  OUTLINED_FUNCTION_4_96(v81);
  uint64_t v83 = v62 + v82;
  outlined init with copy of ConfirmationResponse?((uint64_t)v34, v62);
  outlined init with copy of ConfirmationResponse?(v81, v83);
  OUTLINED_FUNCTION_1_101(v62);
  if (v71)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v81, &demangling cache variable for type metadata for ConfirmationResponse?);
    OUTLINED_FUNCTION_1_101(v83);
    if (v71)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v62, &demangling cache variable for type metadata for ConfirmationResponse?);
      outlined init with copy of ConfirmationResponse?((uint64_t)v34, v73);
LABEL_43:
      uint64_t v87 = v73;
      goto LABEL_44;
    }
    goto LABEL_32;
  }
  uint64_t v84 = v117;
  outlined init with copy of ConfirmationResponse?(v62, v117);
  OUTLINED_FUNCTION_1_101(v83);
  if (v85)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v121, &demangling cache variable for type metadata for ConfirmationResponse?);
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v84, v61);
LABEL_32:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v62, &demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
    outlined init with copy of ConfirmationResponse?((uint64_t)v34, v73);
    goto LABEL_33;
  }
  uint64_t v90 = v124;
  uint64_t v91 = v116;
  OUTLINED_FUNCTION_6_87();
  v92();
  lazy protocol witness table accessor for type ConfirmationResponse and conformance ConfirmationResponse(&lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse, (void (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
  LODWORD(v129) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v93 = v62;
  uint64_t v94 = (uint64_t)v34;
  uint64_t v95 = *(void (**)(char *, uint64_t))(v90 + 8);
  v95(v91, v61);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v121, &demangling cache variable for type metadata for ConfirmationResponse?);
  v95((char *)v84, v61);
  uint64_t v60 = v132;
  uint64_t v34 = (char *)v94;
  uint64_t v73 = v122;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v93, &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined init with copy of ConfirmationResponse?(v94, v73);
  if (v129) {
    goto LABEL_43;
  }
LABEL_33:
  v80(v60, enum case for ConfirmationResponse.rejected(_:), v61);
  OUTLINED_FUNCTION_4_96(v60);
  uint64_t v75 = v118;
  uint64_t v77 = v118 + v86;
  outlined init with copy of ConfirmationResponse?(v73, v118);
  outlined init with copy of ConfirmationResponse?(v60, v77);
  OUTLINED_FUNCTION_1_101(v75);
  if (!v71)
  {
    uint64_t v88 = (uint64_t)v113;
    outlined init with copy of ConfirmationResponse?(v75, (uint64_t)v113);
    OUTLINED_FUNCTION_1_101(v77);
    if (!v89)
    {
      OUTLINED_FUNCTION_6_87();
      v99();
      lazy protocol witness table accessor for type ConfirmationResponse and conformance ConfirmationResponse(&lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse, (void (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v100 = OUTLINED_FUNCTION_8_88();
      ((void (*)(uint64_t))v48)(v100);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v60, &demangling cache variable for type metadata for ConfirmationResponse?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v122, &demangling cache variable for type metadata for ConfirmationResponse?);
      uint64_t v101 = (char *)v88;
LABEL_49:
      ((void (*)(char *, uint64_t))v48)(v101, v61);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v75, &demangling cache variable for type metadata for ConfirmationResponse?);
      goto LABEL_50;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v60, &demangling cache variable for type metadata for ConfirmationResponse?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v122, &demangling cache variable for type metadata for ConfirmationResponse?);
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v88, v61);
    goto LABEL_48;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v60, &demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v78 = v73;
LABEL_36:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v78, &demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_1_101(v77);
  if (!v71)
  {
LABEL_48:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v75, &demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
    LOBYTE(v77) = 0;
    goto LABEL_50;
  }
  uint64_t v87 = v75;
LABEL_44:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v87, &demangling cache variable for type metadata for ConfirmationResponse?);
  LOBYTE(v77) = 1;
LABEL_50:
  uint64_t v104 = Logger.logObject.getter();
  os_log_type_t v105 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v104, v105))
  {
    uint64_t v106 = swift_slowAlloc();
    *(void *)&v134[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v106 = 136315394;
    uint64_t v133 = OUTLINED_FUNCTION_17_38((uint64_t)"registeredPrompts");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v106 + 12) = 2080;
    if (v77) {
      uint64_t v107 = 0x676E696C646E6148;
    }
    else {
      uint64_t v107 = 0x676E69726F6E6749;
    }
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, 0xE800000000000000, (uint64_t *)v134);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v104, v105, "#AnnounceCallConfirmationStrategy %s %s barge-in Input", (uint8_t *)v106, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  if (v77) {
    static ActionForInput.handle()();
  }
  else {
    static ActionForInput.ignore()();
  }
  return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v34, &demangling cache variable for type metadata for ConfirmationResponse?);
}

uint64_t AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:), 0, 0);
}

uint64_t AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_11_68();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 176) + **(int **)(v1 + 176));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  return v6(v3, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_47_0();
    return v4();
  }
  else
  {
    return _swift_task_switch(AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:), 0, 0);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = enum case for PromptResult.answered<A>(_:);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<IncomingCallActionConfirmation>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v3 + 104))(v1, v2);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<BargeInCapableSection>);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_467720;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v6 = (void *)result;
  if (*(unsigned char *)(v4 + 32)) {
    unint64_t v7 = 0xD000000000000028;
  }
  else {
    unint64_t v7 = 0xD00000000000002ALL;
  }
  if (*(unsigned char *)(v4 + 32)) {
    unint64_t v8 = 0x800000000048D160;
  }
  else {
    unint64_t v8 = 0x800000000048D130;
  }
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = v1;
  v6[4] = v7;
  v6[5] = v8;
  v6[6] = &async function pointer to partial apply for closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  v6[7] = result;
  if (v5 == 1) {
    goto LABEL_17;
  }
  int v9 = *(unsigned __int8 *)(v4 + 33);
  if (*(unsigned char *)(v4 + 33)) {
    unint64_t v10 = 0xD000000000000028;
  }
  else {
    unint64_t v10 = 0xD00000000000002ALL;
  }
  if (v9) {
    unint64_t v11 = 0x800000000048D160;
  }
  else {
    unint64_t v11 = 0x800000000048D130;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(void *)(v12 + 24) = a1;
  v6[8] = v10;
  v6[9] = v11;
  v6[10] = &async function pointer to partial apply for closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  v6[11] = v12;
  id v13 = a1;
  swift_retain_n();
  id v14 = v13;
  return (uint64_t)v6;
}

uint64_t closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(uint64_t a1, uint64_t a2, void *a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  v3[17] = *a3;
  type metadata accessor for DialogPhase();
  v3[18] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  type metadata accessor for Locale();
  v3[22] = swift_task_alloc();
  type metadata accessor for CATOption();
  v3[23] = swift_task_alloc();
  return _swift_task_switch(closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:), 0, 0);
}

uint64_t closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  id v14 = v0;
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = (void *)v0[15];
  type metadata accessor for AnnounceIncomingCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v5 = (void *)CATWrapperSimple.__allocating_init(options:globals:)();
  v0[24] = v5;
  uint64_t v6 = type metadata accessor for PhoneIncomingCall();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  uint64_t v7 = OUTLINED_FUNCTION_61();
  v8(v7);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  OUTLINED_FUNCTION_61();
  dispatch thunk of DeviceState.siriLocale.getter();
  _OWORD v13[3] = type metadata accessor for AppInfoBuilder();
  v13[4] = &protocol witness table for AppInfoBuilder;
  v13[0] = swift_allocObject();
  uint64_t v9 = specialized PhoneIncomingCall.__allocating_init(intentResponse:siriLocale:options:appInfoBuilder:)(v4, v1, 2, (uint64_t)v13, v6, *(void *)(v3 + 80), *(void *)(v3 + 88));
  v0[25] = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(*v5 + class metadata base offset for AnnounceIncomingCallCATsSimple)
                                        + **(int **)(*v5 + class metadata base offset for AnnounceIncomingCallCATsSimple));
  unint64_t v10 = (void *)swift_task_alloc();
  v0[26] = v10;
  *unint64_t v10 = v0;
  v10[1] = closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  return v12(v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 216) = v1;
  *(void *)(v2 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v3 = closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  }
  return _swift_task_switch(v3, 0, 0);
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = v1[21];
  uint64_t v3 = v1[20];
  uint64_t v4 = v1[19];
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v65 = v10;
  if (one-time initialization token for announceTelephony != -1) {
    swift_once();
  }
  unint64_t v11 = (void *)v10[27];
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.announceTelephony);
  id v13 = v11;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = (void *)v10[27];
  if (!v16)
  {

    goto LABEL_19;
  }
  os_log_type_t v59 = v15;
  uint64_t v60 = v10;
  uint64_t v18 = swift_slowAlloc();
  uint64_t v61 = swift_slowAlloc();
  *(_DWORD *)uint64_t v18 = 136315394;
  id v19 = [v17 catId];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v22 = v21;

  v10[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v61);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();

  *(_WORD *)(v18 + 12) = 2080;
  id v23 = [v17 dialog];
  type metadata accessor for DialogElement();
  unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8));
    if (v25)
    {
LABEL_6:
      uint64_t v62 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v25 < 0)
      {
        __break(1u);
        return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10);
      }
      uint64_t v58 = v14;
      uint64_t v34 = 0;
      uint64_t v35 = v62;
      do
      {
        if ((v24 & 0xC000000000000001) != 0) {
          id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v36 = *(id *)(v24 + 8 * v34 + 32);
        }
        uint64_t v37 = v36;
        uint64_t v64 = v36;
        closure #2 in implicit closure #2 in IncomingCallActionConfirmationStrategy.makePromptForConfirmationOutput(itemToConfirm:)(&v64, v63);

        uint64_t v38 = v63[0];
        uint64_t v39 = v63[1];
        uint64_t v62 = v35;
        unint64_t v40 = v35[2];
        if (v40 >= v35[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v35 = v62;
        }
        ++v34;
        v35[2] = v40 + 1;
        uint64_t v41 = &v35[2 * v40];
        v41[4] = v38;
        v41[5] = v39;
      }
      while (v25 != v34);
      swift_bridgeObjectRelease();
      id v14 = v58;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
LABEL_18:
  unint64_t v10 = v60;
  uint64_t v42 = (void *)v60[27];
  Array.description.getter();
  swift_bridgeObjectRelease();
  uint64_t v43 = OUTLINED_FUNCTION_61();
  v60[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v45);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_0, v14, v59, "#AnnounceCallConfirmationStrategy Call Announcement: { \n    catId=%s,\n    dialog={\n        %s\n    }\n}", (uint8_t *)v18, 0x16u);
  swift_arrayDestroy();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_6();
LABEL_19:

  BOOL v46 = (void *)v10[27];
  unint64_t v47 = (void *)v10[16];
  uint64_t v48 = v47[6];
  uint64_t v49 = v47[7];
  __swift_project_boxed_opaque_existential_1(v47 + 3, v48);
  (*(void (**)(uint64_t, uint64_t))(v49 + 136))(v48, v49);
  uint64_t v50 = v10[10];
  uint64_t v51 = v10[11];
  __swift_project_boxed_opaque_existential_1(v10 + 7, v50);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_46A030;
  *(void *)(v52 + 32) = v46;
  v63[0] = v52;
  specialized Array._endMutation()();
  uint64_t v53 = v63[0];
  v10[29] = v63[0];
  id v54 = v46;
  static DialogPhase.confirmed.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v55 = *(void *)(v51 + 8);
  os_log_t v56 = (void *)swift_task_alloc();
  v10[30] = v56;
  *os_log_t v56 = v10;
  v56[1] = closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  uint64_t v28 = v10[21];
  uint64_t v26 = v10[14];
  uint64_t v27 = v53;
  uint64_t v29 = v50;
  uint64_t v30 = v55;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10);
}

uint64_t closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:), 0, 0);
}

uint64_t closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_11_68();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 224) + **(int **)(v1 + 224));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = PromptForValueAfterReadingVoicemailFlowStrategy.makePromptForValue();
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return v6(v4, v3);
}

uint64_t AnnounceCallConfirmationStrategy.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AnnounceCallConfirmationStrategy.__deallocating_deinit()
{
  AnnounceCallConfirmationStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for BargeInCapablePromptForConfirmationStrategyAsync.makeSections(itemToConfirm:) in conformance AnnounceCallConfirmationStrategy<A>(void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 144))(*a1);
}

uint64_t protocol witness for BargeInCapablePromptForConfirmationStrategyAsync.actionForInput(_:section:isBargeIn:) in conformance AnnounceCallConfirmationStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for BargeInCapablePromptForConfirmationStrategyAsync.parseConfirmationResponse(input:section:isBargeIn:) in conformance AnnounceCallConfirmationStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v7 + 136)
                                                                                              + **(int **)(**(void **)v7 + 136));
  BOOL v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *BOOL v16 = v8;
  v16[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_3AD518()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v2 = OUTLINED_FUNCTION_13_54();
  return closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(v2, v3, v4);
}

uint64_t sub_3AD5F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v2 = OUTLINED_FUNCTION_13_54();
  return closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(v2, v3, v4);
}

uint64_t type metadata completion function for AnnounceCallConfirmationStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AnnounceCallConfirmationStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OUTLINED_FUNCTION_1_101(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_4_96(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_8_88()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_38@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000024, a1 | 0x8000000000000000, (uint64_t *)(v1 - 128));
}

uint64_t specialized Set.count.getter(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return __CocoaSet.count.getter();
  }
  else {
    return *(void *)(a1 + 16);
  }
}

uint64_t AddCallParticipantGuardFlowFactory.makeGuardFlow()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v1 = OUTLINED_FUNCTION_65();
  *(_OWORD *)(v1 + 16) = xmmword_469DA0;
  *(void *)(v1 + 32) = (*(uint64_t (**)(void))(*(void *)v0 + 112))();
  *(void *)(v1 + 40) = (*(uint64_t (**)(void))(*(void *)v0 + 120))();
  specialized Array._endMutation()();
  type metadata accessor for GuardFlow();
  swift_allocObject();
  return GuardFlow.init(preconditionFlows:)();
}

uint64_t AddCallParticipantGuardFlowFactory.makeUnsupportedFeatureGuardFlow()()
{
  uint64_t v1 = type metadata accessor for CATOption();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  LOBYTE(v2) = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 136))(v4);
  swift_release();
  outlined init with copy of SignalProviding((uint64_t)(v0 + 2), (uint64_t)v8);
  type metadata accessor for UnsupportedFlowCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v5 = CATWrapperSimple.__allocating_init(options:globals:)();
  type metadata accessor for UnsupportedFeatureGuardFlow();
  swift_allocObject();
  *(void *)&v8[0] = UnsupportedFeatureGuardFlow.init(check:sharedGlobals:unsupportedFlowCATsSimple:)(v2 & 1, v8, v5);
  lazy protocol witness table accessor for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow((unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow, (void (*)(uint64_t))type metadata accessor for UnsupportedFeatureGuardFlow);
  uint64_t v6 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v6;
}

uint64_t AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallStateGuardCheck>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_472F90;
  uint64_t v3 = OUTLINED_FUNCTION_1_60();
  *(void *)(v3 + 16) = closure #1 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 32) = 1;
  uint64_t v4 = OUTLINED_FUNCTION_18_1();
  *(void *)(v4 + 16) = partial apply for implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65();
  v5[2] = specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:);
  _OWORD v5[3] = 0;
  v5[4] = _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_11description6onFailAcA06CommonbF9PredicateO_SSyXA07SiriKitC003AnyC0CyXAtcfcAJycfu2_TA_0;
  v5[5] = v4;
  *(void *)(v2 + 32) = partial apply for implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:);
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 48) = partial apply for closure #1 in CallStateGuardCheck.init(_:description:onFail:);
  *(void *)(v2 + 56) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_1_60();
  *(void *)(v6 + 16) = swift_getKeyPath();
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 2;
  uint64_t v7 = OUTLINED_FUNCTION_1_60();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = 0;
  *(unsigned char *)(v7 + 32) = 3;
  uint64_t v8 = OUTLINED_FUNCTION_1_60();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 3;
  uint64_t v9 = OUTLINED_FUNCTION_18_1();
  *(void *)(v9 + 16) = partial apply for implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v9 + 24) = v1;
  unint64_t v10 = (void *)OUTLINED_FUNCTION_65();
  v10[2] = _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSSycfu1_TA_0;
  void v10[3] = v8;
  v10[4] = _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_11description6onFailAcA06CommonbF9PredicateO_SSyXA07SiriKitC003AnyC0CyXAtcfcAJycfu2_TA_0;
  v10[5] = v9;
  *(void *)(v2 + 64) = _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSbAA0bF9Providing_pcAFcfu_SbAaJ_pcfu0_TA_0;
  *(void *)(v2 + 72) = v7;
  *(void *)(v2 + 80) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v2 + 88) = v10;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = OUTLINED_FUNCTION_1_60();
  *(void *)(v12 + 16) = KeyPath;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = 2;
  uint64_t v13 = OUTLINED_FUNCTION_1_60();
  *(void *)(v13 + 16) = KeyPath;
  *(void *)(v13 + 24) = 0;
  *(unsigned char *)(v13 + 32) = 2;
  uint64_t v14 = OUTLINED_FUNCTION_18_1();
  *(void *)(v14 + 16) = partial apply for implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v14 + 24) = v1;
  os_log_type_t v15 = (void *)OUTLINED_FUNCTION_65();
  _OWORD v15[2] = implicit closure #3 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v15[3] = v13;
  v15[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v15[5] = v14;
  *(void *)(v2 + 96) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:)partial apply;
  *(void *)(v2 + 104) = v12;
  *(void *)(v2 + 112) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v2 + 120) = v15;
  uint64_t v16 = OUTLINED_FUNCTION_1_60();
  *(void *)(v16 + 16) = closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v16 + 24) = 0;
  *(unsigned char *)(v16 + 32) = 1;
  uint64_t v17 = OUTLINED_FUNCTION_18_1();
  *(void *)(v17 + 16) = partial apply for implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v17 + 24) = v1;
  uint64_t v18 = (void *)OUTLINED_FUNCTION_65();
  long long v18[2] = specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:);
  v18[3] = 0;
  long long v18[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  uint64_t v18[5] = v17;
  *(void *)(v2 + 128) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v2 + 136) = v16;
  *(void *)(v2 + 144) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v2 + 152) = v18;
  uint64_t v19 = OUTLINED_FUNCTION_1_60();
  *(void *)(v19 + 16) = closure #3 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v19 + 24) = 0;
  *(unsigned char *)(v19 + 32) = 1;
  uint64_t v20 = OUTLINED_FUNCTION_1_60();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = 0;
  *(unsigned char *)(v20 + 32) = 3;
  uint64_t v21 = OUTLINED_FUNCTION_18_1();
  *(void *)(v21 + 16) = partial apply for implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v21 + 24) = v1;
  unint64_t v22 = (void *)OUTLINED_FUNCTION_65();
  long long v22[2] = specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:);
  v22[3] = 0;
  v22[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v22[5] = v21;
  *(void *)(v2 + 160) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v2 + 168) = v20;
  *(void *)(v2 + 176) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v2 + 184) = v22;
  uint64_t v23 = OUTLINED_FUNCTION_1_60();
  *(_OWORD *)(v23 + 16) = xmmword_467740;
  *(unsigned char *)(v23 + 32) = 0;
  uint64_t v24 = OUTLINED_FUNCTION_1_60();
  *(_OWORD *)(v24 + 16) = xmmword_467740;
  *(unsigned char *)(v24 + 32) = 0;
  uint64_t v25 = OUTLINED_FUNCTION_18_1();
  *(void *)(v25 + 16) = partial apply for implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v25 + 24) = v1;
  uint64_t v26 = (void *)OUTLINED_FUNCTION_65();
  void v26[2] = implicit closure #3 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v26[3] = v24;
  v26[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v26[5] = v25;
  *(void *)(v2 + 192) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:)partial apply;
  *(void *)(v2 + 200) = v23;
  *(void *)(v2 + 208) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v2 + 216) = v26;
  outlined init with copy of SignalProviding(v1 + 16, (uint64_t)v29);
  type metadata accessor for CallStateGuardFlow();
  swift_allocObject();
  *(void *)&v29[0] = CallStateGuardFlow.init(checks:sharedGlobals:)(v2, v29);
  lazy protocol witness table accessor for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow((unint64_t *)&lazy protocol witness table cache variable for type CallStateGuardFlow and conformance CallStateGuardFlow, (void (*)(uint64_t))type metadata accessor for CallStateGuardFlow);
  swift_retain_n();
  swift_retain();
  swift_retain();
  uint64_t v27 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v27;
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2) & 1;
}

uint64_t partial apply for implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0, (uint64_t)&async function pointer to partial apply for implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow());
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)(uint64_t a1)
{
  return implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_11description6onFailAcA06CommonbF9PredicateO_SSyXA07SiriKitC003AnyC0CyXAtcfcAJycfu2_TA_0()
{
  return implicit closure #4 in CallStateGuardCheck.init(_:onFail:)(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  return AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t key path getter for SPHCallCapabilities.isGreenTea : SPHCallCapabilities@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  *a2 = result & 1;
  return result;
}

uint64_t partial apply for implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0, (uint64_t)&async function pointer to partial apply for implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow());
}

uint64_t _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSbAA0bF9Providing_pcAFcfu_SbAaJ_pcfu0_TA_0(uint64_t a1)
{
  return implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSSycfu1_TA_0()
{
  return implicit closure #3 in CallStateGuardCheck.init(_:onFail:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  return AddCallParticipantGuardFlowFactory.makeRestrictedByRegionDialog()();
}

uint64_t key path getter for SPHCallCapabilities.isAddPersonEnabled : SPHCallCapabilities@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a2 = result & 1;
  return result;
}

uint64_t implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 20) = 1;
  *(void *)(v2 + 24) = a1;
  swift_retain();
  uint64_t v3 = AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)((uint64_t)&closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)partial apply, v2);
  swift_release();
  return v3;
}

uint64_t partial apply for implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0);
}

BOOL closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2);
  uint64_t v5 = specialized Set.count.getter(v4);
  swift_bridgeObjectRelease();
  return v5 < (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(ObjectType, a2);
}

uint64_t implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1, uint64_t a2)
{
  swift_retain();
  uint64_t v4 = AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)(a2, a1);
  swift_release();
  return v4;
}

uint64_t partial apply for implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0, (uint64_t)&async function pointer to partial apply for implicit closure #12 in implicit closure #11 in implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow());
}

uint64_t implicit closure #12 in implicit closure #11 in implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  return AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog()();
}

uint64_t closure #3 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return SPHCall.isFTAudioCallOnHold.getter() & 1;
}

uint64_t implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 2;
  *(unsigned char *)(v2 + 20) = 0;
  *(void *)(v2 + 24) = a1;
  swift_retain();
  uint64_t v3 = AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)((uint64_t)&closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)partial apply, v2);
  swift_release();
  return v3;
}

uint64_t partial apply for implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0);
}

uint64_t implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 120))(v14, v2, v3);
  uint64_t v4 = v15;
  uint64_t v5 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
    swift_unknownObjectRelease();
  }
  else
  {
    int v10 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = v10;
  *(unsigned char *)(v11 + 20) = v7 == 0;
  *(void *)(v11 + 24) = a1;
  swift_retain();
  uint64_t v12 = AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)((uint64_t)&async function pointer to partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:), v11);
  swift_release();
  return v12;
}

uint64_t partial apply for implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0);
}

uint64_t lazy protocol witness table accessor for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2[5];
  uint64_t v7 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v17, v6, v7);
  uint64_t v8 = v18;
  uint64_t v9 = v19;
  int v10 = __swift_project_boxed_opaque_existential_1(v17, v18);
  v16[3] = v8;
  void v16[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = v3;
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v13 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  v17[0] = v13;
  uint64_t v14 = Flow.eraseToAnyFlow()();
  swift_release();
  return v14;
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  type metadata accessor for DialogPhase();
  v4[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  return _swift_task_switch(closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:), 0, 0);
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (int *)v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  v0[15] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46A030;
  uint64_t v5 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:);
  return v5();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 136) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 144) = v3;
  }
  OUTLINED_FUNCTION_7_27();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = v1[14];
  uint64_t v3 = v1[13];
  uint64_t v4 = v1[12];
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  *(void *)(*(void *)(v0 + 120) + 16) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10[15];
  uint64_t v12 = (void *)v10[10];
  *(void *)(v11 + 32) = v10[18];
  uint64_t v26 = v11;
  specialized Array._endMutation()();
  v10[19] = v26;
  uint64_t v13 = v12 + 2;
  uint64_t v14 = v12[5];
  uint64_t v15 = v12[6];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 136))(v14, v15);
  uint64_t v16 = v10[5];
  uint64_t v17 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v16);
  static DialogPhase.error.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v18 = *(void *)(v17 + 8);
  unint64_t v22 = (void *)swift_task_alloc();
  v10[20] = v22;
  *unint64_t v22 = v10;
  v22[1] = closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:);
  uint64_t v23 = v10[14];
  uint64_t v24 = v10[7];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v24, v26, v23, v16, v18, v19, v20, v21, a9, a10);
}

uint64_t AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog()()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog());
}

{
  uint64_t v0;
  int *v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(int **)(class metadata base offset for AddCallParticipantCATsSimple
               + **(void **)(*(void *)(v0 + 16) + 56)
               + 48);
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t AddCallParticipantGuardFlowFactory.makeRestrictedByRegionDialog()()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for Locale.Region();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(AddCallParticipantGuardFlowFactory.makeRestrictedByRegionDialog(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  void *v9;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[2];
  type metadata accessor for DialogLocationAddress.Builder();
  swift_allocObject();
  DialogLocationAddress.Builder.init()();
  Locale.Region.init(stringLiteral:)();
  Locale.Region.identifier.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v6);
  dispatch thunk of DialogLocationAddress.Builder.withCountryCode(_:)();
  swift_release();
  outlined destroy of SpeakableString?(v1);
  uint64_t v7 = dispatch thunk of DialogLocationAddress.Builder.build()();
  v0[7] = v7;
  swift_release();
  uint64_t v8 = *(int **)(class metadata base offset for AddCallParticipantCATsSimple + **(void **)(v5 + 56) + 80);
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)v8 + *v8);
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[8] = v9;
  *uint64_t v9 = v0;
  v9[1] = AddCallParticipantGuardFlowFactory.makeRestrictedByRegionDialog();
  return v11(v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 80) = v3;
  }
  OUTLINED_FUNCTION_7_27();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  uint64_t v2 = *(void *)(v0 + 80);
  return v1(v2);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog()()
{
  *(void *)(v1 + 56) = v0;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog());
}

{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  int *v7;
  void *v8;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  uint64_t v1 = OUTLINED_FUNCTION_7_81(v0[7]);
  v2(v1);
  uint64_t v3 = OUTLINED_FUNCTION_8_89();
  if (v4(v3))
  {
    swift_getObjectType();
    uint64_t v5 = SPHCall.toPhoneCallRecord()();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v0[8] = v5;
  uint64_t v6 = v0[7];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v7 = *(int **)(class metadata base offset for AddCallParticipantCATsSimple + **(void **)(v6 + 56) + 32);
  int v10 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = (uint64_t)v8;
  *uint64_t v8 = v0;
  v8[1] = AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog();
  return v10(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 88) = v3;
  }
  OUTLINED_FUNCTION_7_27();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  OUTLINED_FUNCTION_17_14();
  uint64_t v2 = *(void *)(v0 + 88);
  return v1(v2);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return _swift_task_switch(closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:), 0, 0);
}

id closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)()
{
  uint64_t v1 = v0[7];
  if ((v1 & 0x100000000) != 0) {
    goto LABEL_9;
  }
  if ((v1 - 3) >= 2)
  {
    if (v1 == 2)
    {
      id result = (id)TUStringForCallStatus();
      if (result)
      {
        uint64_t v3 = result;
        uint64_t v5 = v0[10];
        uint64_t v4 = v0[11];
        goto LABEL_8;
      }
LABEL_17:
      __break(1u);
      return result;
    }
LABEL_9:
    uint64_t v7 = v0[11];
    uint64_t v8 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
    goto LABEL_10;
  }
  id result = (id)TUStringForCallStatus();
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v3 = result;
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[9];
LABEL_8:
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v6);
  outlined init with take of SpeakableString?(v5, v4);
LABEL_10:
  uint64_t v9 = OUTLINED_FUNCTION_7_81(v0[8]);
  v10(v9);
  uint64_t v11 = OUTLINED_FUNCTION_8_89();
  if (v12(v11))
  {
    swift_getObjectType();
    uint64_t v13 = SPHCall.toPhoneCallRecord()();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  v0[12] = v13;
  uint64_t v14 = v0[8];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v15 = *(int **)(class metadata base offset for AddCallParticipantCATsSimple + **(void **)(v14 + 56) + 16);
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))((char *)v15 + *v15);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[13] = v16;
  *uint64_t v16 = v0;
  v16[1] = closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:);
  uint64_t v17 = v0[11];
  return (id)v18(v13, v17);
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 120) = v3;
  }
  OUTLINED_FUNCTION_7_27();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  outlined destroy of SpeakableString?(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  uint64_t v3 = *(void *)(v0 + 120);
  return v2(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  outlined destroy of SpeakableString?(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t type metadata accessor for AddCallParticipantGuardFlowFactory()
{
  return self;
}

uint64_t sub_3AFF2C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_14(v6);
  *uint64_t v7 = v8;
  v7[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_5_74();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:);
  uint64_t v3 = OUTLINED_FUNCTION_16_55();
  return closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)(v3, v4);
}

uint64_t sub_3B00A8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)partial apply()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_5_74();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)partial apply;
  uint64_t v3 = OUTLINED_FUNCTION_16_55();
  return closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)(v3, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  return v5(v2);
}

uint64_t partial apply for implicit closure #12 in implicit closure #11 in implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:);
  return implicit closure #12 in implicit closure #11 in implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()();
}

uint64_t partial apply for implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:);
  return implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()();
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:);
  return implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()();
}

uint64_t OUTLINED_FUNCTION_7_81@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = *(void *)(a1 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_8_89()
{
  uint64_t v2 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_16_55()
{
  return v0;
}

PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional __swiftcall TrialSmartAppSelectionConfigKey.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of TrialSmartAppSelectionConfigKey.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional)v3;
  }
}

unint64_t TrialSmartAppSelectionConfigKey.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x6567617355707061;
      break;
    case 3:
      unint64_t result = 0x63656C6553707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance TrialSmartAppSelectionConfigKey(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance TrialSmartAppSelectionConfigKey()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance TrialSmartAppSelectionConfigKey()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance TrialSmartAppSelectionConfigKey(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional protocol witness for RawRepresentable.init(rawValue:) in conformance TrialSmartAppSelectionConfigKey@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional *a2@<X8>)
{
  result.value = TrialSmartAppSelectionConfigKey.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance TrialSmartAppSelectionConfigKey@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TrialSmartAppSelectionConfigKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t type metadata accessor for TRIClient()
{
  unint64_t result = lazy cache variable for type metadata for TRIClient;
  if (!lazy cache variable for type metadata for TRIClient)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TRIClient);
  }
  return result;
}

uint64_t specialized static FixedWidthInteger.random<A>(in:using:)(uint64_t a1, uint64_t a2)
{
  if (a2 - a1 != -1) {
    return specialized RandomNumberGenerator.next<A>(upperBound:)(a2 - a1 + 1) + a1;
  }
  swift_stdlib_random();
  return 0;
}

unint64_t lazy protocol witness table accessor for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey()
{
  unint64_t result = lazy protocol witness table cache variable for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey;
  if (!lazy protocol witness table cache variable for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TrialSmartAppSelectionConfigKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B07D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialSmartAppSelectionConfigKey()
{
  return &type metadata for TrialSmartAppSelectionConfigKey;
}

uint64_t OUTLINED_FUNCTION_0_68(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return swift_bridgeObjectRetain_n();
}

void OUTLINED_FUNCTION_1_102(uint64_t a1, uint64_t a2)
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v2, a2, 0, 0);
}

uint64_t OUTLINED_FUNCTION_2_115(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_6_88()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_7_82()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_8_90()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_11_69()
{
  *(_WORD *)(v0 + 12) = 2080;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_12_56()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t BurstNotificationSearchManager.init(sharedGlobals:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v13);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 32))(v12, v4, v5);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  a2[8] = &type metadata for BurstVoicemailFinder;
  a2[9] = &protocol witness table for BurstVoicemailFinder;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v9 + 16;
  a2[5] = v9;
  v8(v6, v7);
  outlined init with take of AppSelectionSignalComponent(v12, v10);
  outlined init with take of AppSelectionSignalComponent(v13, (uint64_t)a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_3B0A18()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t BurstNotificationSearchManager.findIncomingNotifications(after:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 168) = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 176) = v6;
  *uint64_t v6 = v3;
  v6[1] = BurstNotificationSearchManager.findIncomingNotifications(after:);
  return BurstNotificationSearchManager.submitNotificationsSearch(after:)(a1, a2);
}

uint64_t BurstNotificationSearchManager.findIncomingNotifications(after:)()
{
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 184) = v3;
  swift_task_dealloc();
  return _swift_task_switch(BurstNotificationSearchManager.findIncomingNotifications(after:), 0, 0);
}

{
  void *v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __CFString *v56;
  __CFString *v57;
  __CFString *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(void *, void **, uint64_t, uint64_t);
  int v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t (*v73)(void *, uint64_t, uint64_t);
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;

  uint64_t v78 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[24] = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  LODWORD(v4) = static os_log_type_t.debug.getter();
  uint64_t v5 = os_log_type_enabled((os_log_t)v3, (os_log_type_t)v4);
  uint64_t v6 = v0[23];
  uint64_t v75 = v0;
  char v72 = v6;
  if (!v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  uint64_t v1 = (uint8_t *)OUTLINED_FUNCTION_47();
  uint64_t v76 = OUTLINED_FUNCTION_14_0();
  *(_DWORD *)uint64_t v1 = 136315138;
  if (v6 >> 62) {
    goto LABEL_88;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    if (v7)
    {
      uint64_t v77 = _swiftEmptyArrayStorage;
      uint64_t v8 = &v77;
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v7 < 0)
      {
        __break(1u);
        goto LABEL_90;
      }
      unint64_t v70 = (int)v4;
      uint64_t v9 = 0;
      uint64_t v10 = v0[23] + 32;
      do
      {
        if ((v6 & 0xC000000000000001) != 0) {
          uint64_t v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v11 = *(id *)(v10 + 8 * v9);
        }
        uint64_t v12 = v11;
        ++v9;
        uint64_t v13 = [v11 dictionary];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v7 != v9);
      uint64_t v0 = v75;
      uint64_t v6 = v72;
      LODWORD(v4) = v70;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSMutableDictionary?);
    uint64_t v14 = Array.description.getter();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v0[20] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, (os_log_t)v3, (os_log_type_t)v4, "#BurstNotificationSearchManager notifications: %s", v1, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
LABEL_16:

    v0[25] = v6;
    uint64_t v17 = v0[23];
    uint64_t v77 = _swiftEmptyArrayStorage;
    BOOL v71 = v17 >> 62;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      if (!v18)
      {
LABEL_37:
        uint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v18) {
        goto LABEL_37;
      }
    }
    if (v18 >= 1) {
      break;
    }
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = 0;
  v6 &= 0xC000000000000001;
  uint64_t v74 = v0[23] + 32;
  uint64_t v1 = (uint8_t *)SANotificationTypeIncomingVoiceMailNotificationValue;
  do
  {
    if (v6) {
      uint64_t v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v19 = *(id *)(v74 + 8 * v3);
    }
    uint64_t v4 = v19;
    uint64_t v20 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v19, (SEL *)&selRef_announcementType);
    unint64_t v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (!v22)
    {
      swift_bridgeObjectRelease();
LABEL_31:

      goto LABEL_34;
    }
    if (v20 == v23 && v22 == v24)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_31;
      }
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
LABEL_34:
    ++v3;
  }
  while (v18 != v3);
  uint64_t v27 = (unint64_t)v77;
  uint64_t v0 = v75;
LABEL_38:
  swift_bridgeObjectRelease();
  if ((v27 & 0x8000000000000000) != 0 || (v27 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    if (!v28) {
      goto LABEL_55;
    }
LABEL_41:
    if (v28 >= 1)
    {
      uint64_t v29 = 0;
      uint64_t v30 = _swiftEmptyArrayStorage;
      do
      {
        if ((v27 & 0xC000000000000001) != 0) {
          uint64_t v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v31 = *(id *)(v27 + 8 * v29 + 32);
        }
        uint64_t v32 = v31;
        uint64_t v33 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v31, (SEL *)&selRef_notificationId);
        uint64_t v35 = v34;

        if (v35)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v30 = v38;
          }
          id v36 = v30[2];
          if (v36 >= v30[3] >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v30 = v39;
          }
          v30[2] = v36 + 1;
          uint64_t v37 = &v30[2 * v36];
          v37[4] = v33;
          void v37[5] = v35;
        }
        ++v29;
      }
      while (v28 != v29);
      goto LABEL_56;
    }
    goto LABEL_87;
  }
  uint64_t v28 = *(void *)(v27 + 16);
  swift_retain();
  if (v28) {
    goto LABEL_41;
  }
LABEL_55:
  uint64_t v30 = _swiftEmptyArrayStorage;
LABEL_56:
  v75[26] = v30;
  swift_release_n();
  if (v30[2])
  {
    unint64_t v40 = Logger.logObject.getter();
    uint64_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_0, v40, v41, "#BurstNotificationSearchManager Found voicemail notifications. Searching for INCallRecords corresponding to notification identifiers.", v42, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v43 = (void *)v75[21];

    unint64_t v44 = v43[8];
    os_log_type_t v45 = v43[9];
    __swift_project_boxed_opaque_existential_1(v43 + 5, v44);
    uint64_t v73 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v45 + 8) + **(int **)(v45 + 8));
    BOOL v46 = (void *)swift_task_alloc();
    v75[27] = v46;
    void *v46 = v75;
    v46[1] = BurstNotificationSearchManager.findIncomingNotifications(after:);
    return v73(v30, v44, v45);
  }
  uint64_t v48 = v75 + 2;
  uint64_t v49 = v75[21];
  swift_bridgeObjectRelease();
  outlined init with copy of BurstNotificationSearchManager(v49, (uint64_t)(v75 + 2));
  uint64_t v50 = Logger.logObject.getter();
  uint64_t v51 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v77 = (void *)OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v52 = 136315138;
    uint64_t v53 = v75[5];
    id v54 = v75[6];
    __swift_project_boxed_opaque_existential_1(v48, v53);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v54);
    __swift_project_boxed_opaque_existential_1(v75 + 12, v75[15]);
    uint64_t v55 = DeviceState.idiom.getter();
    switch((int)v55)
    {
      case 1:
        os_log_t v56 = @"PHONE";
        goto LABEL_73;
      case 2:
        os_log_t v56 = @"PAD";
        goto LABEL_73;
      case 3:
        os_log_t v56 = @"WATCH";
        goto LABEL_73;
      case 4:
        os_log_t v56 = @"HOME_POD";
        goto LABEL_73;
      case 5:
        os_log_t v56 = @"CARPLAY";
        goto LABEL_73;
      case 6:
        os_log_t v56 = @"APPLE_TV";
        goto LABEL_73;
      case 7:
        os_log_t v56 = @"MAC";
LABEL_73:
        unint64_t v57 = v56;
        break;
      default:
        os_log_t v56 = +[NSString stringWithFormat:@"(unknown: %i)", v55];
        break;
    }
    uint64_t v58 = v56;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v75 + 12));
    os_log_type_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v61 = v60;

    v75[19] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, (uint64_t *)&v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of BurstNotificationSearchManager((uint64_t)v48);
    _os_log_impl(&dword_0, v50, v51, "#BurstNotificationSearchManager No voicemail notifications, or unsupported platform. Idiom: %s", v52, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    outlined destroy of BurstNotificationSearchManager((uint64_t)v48);
  }

  uint64_t v0 = v75;
  if (v71)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (void **)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v62) {
      goto LABEL_82;
    }
LABEL_77:
    uint64_t v63 = __OFSUB__(v62, 1);
    uint64_t v64 = v62 - 1;
    if (!v63)
    {
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v64, (v72 & 0xC000000000000001) == 0);
      if ((v72 & 0xC000000000000001) == 0)
      {
        uint64_t v65 = *(id *)(v75[23] + 8 * v64 + 32);
LABEL_80:
        swift_bridgeObjectRelease();
        uint64_t v66 = outlined bridged method (ob) of @objc SANotificationObject.notificationId.getter(v65);
        int v68 = v67;
        goto LABEL_83;
      }
LABEL_91:
      uint64_t v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_80;
    }
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  uint64_t v62 = *(void *)((char *)&dword_10 + (v72 & 0xFFFFFFFFFFFFFF8));
  uint64_t v8 = (void **)v62;
  if (v62) {
    goto LABEL_77;
  }
LABEL_82:
  swift_bridgeObjectRelease();
  uint64_t v66 = 0;
  int v68 = 0;
LABEL_83:
  unint64_t v69 = (uint64_t (*)(void *, void **, uint64_t, uint64_t))v0[1];
  return v69(_swiftEmptyArrayStorage, v8, v66, v68);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *(void *)(v6 + 224) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(BurstNotificationSearchManager.findIncomingNotifications(after:), 0, 0);
}

{
  void *v0;
  NSObject *v1;
  os_log_type_t v2;
  void *v3;
  _DWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, void *);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;

  uint64_t v33 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  uint64_t v2 = static os_log_type_t.debug.getter();
  uint64_t v3 = &unk_469000;
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = (_DWORD *)OUTLINED_FUNCTION_47();
    uint64_t v32 = OUTLINED_FUNCTION_14_0();
    *uint64_t v4 = 136315138;
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[18] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v7, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v3 = (void *)&unk_469000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_55(&dword_0, v8, v9, "#BurstNotificationSearchManager Found voicemails to announce: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (v0[23] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_6:
      uint64_t v12 = __OFSUB__(v10, 1);
      uint64_t v13 = v10 - 1;
      if (v12)
      {
        __break(1u);
      }
      else
      {
        uint64_t v14 = v0[25] & 0xC000000000000001;
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v13, v14 == 0);
        if (!v14)
        {
          uint64_t v15 = *(id *)(v0[23] + 8 * v13 + 32);
LABEL_9:
          swift_bridgeObjectRelease();
          uint64_t v16 = outlined bridged method (ob) of @objc SANotificationObject.notificationId.getter(v15);
          uint64_t v18 = v17;
          goto LABEL_12;
        }
      }
      uint64_t v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (v0[25] & 0xFFFFFFFFFFFFFF8));
    uint64_t v11 = v10;
    if (v10) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = 0;
  uint64_t v18 = 0;
LABEL_12:
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  uint64_t v20 = static os_log_type_t.debug.getter();
  uint64_t v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = v0[28];
  if (v21)
  {
    uint64_t v31 = v16;
    uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v32 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v23 = v3[287];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AnnounceVoicemailReadingState.IncomingNotificationsUpdate.description.getter(v22, v11, v31, v18);
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[17] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v19, v20, "#BurstNotificationSearchManager Update: %s.", v23, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    uint64_t v16 = v31;
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v28 = v0[28];
  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *))v0[1];
  return v29(v28, v11, v16, v18);
}

uint64_t BurstNotificationSearchManager.submitNotificationsSearch(after:)(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  return _swift_task_switch(BurstNotificationSearchManager.submitNotificationsSearch(after:), 0, 0);
}

uint64_t BurstNotificationSearchManager.submitNotificationsSearch(after:)()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = (void *)v0[11];
  uint64_t v3 = v0[9];
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SANotificationsSearch);
  swift_bridgeObjectRetain();
  id v4 = SANotificationsSearch.init(after:isOnDeviceSearch:)(v3, v1, 1);
  v0[12] = v4;
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v7);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  uint64_t v10 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAOnDeviceNotificationsSearchCompleted);
  *uint64_t v9 = v0;
  v9[1] = BurstNotificationSearchManager.submitNotificationsSearch(after:);
  return AceServiceInvokerAsync.submit<A>(_:)(v4, v7, v10, v8);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 112) = v4;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = BurstNotificationSearchManager.submitNotificationsSearch(after:);
  }
  else {
    uint64_t v5 = BurstNotificationSearchManager.submitNotificationsSearch(after:);
  }
  return _swift_task_switch(v5, 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v10 = v0;
  uint64_t v1 = *(void **)(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  unint64_t result = outlined bridged method (pb) of @objc SAOnDeviceNotificationsSearchCompleted.notifications.getter(v1);
  if (result)
  {
    uint64_t v3 = result;

    id v4 = *(void *)(v0 + 120);
    if (v3 >> 62)
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v5 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    uint64_t v9 = v5;
    specialized MutableCollection<>.sort(by:)(&v9);
    if (v4)
    {
      return swift_release();
    }
    else
    {

      swift_bridgeObjectRelease();
      uint64_t v6 = v9;
      uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v7(v6);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17[2];
  uint64_t v18;
  uint64_t v19;

  uint64_t v18 = v0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  id v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 120);
  if (v4)
  {
    uint64_t v6 = (_DWORD *)OUTLINED_FUNCTION_47();
    v17[0] = OUTLINED_FUNCTION_14_0();
    *uint64_t v6 = 136315138;
    *(void *)(v0 + 56) = v5;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v0 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    OUTLINED_FUNCTION_55(&dword_0, v9, v10, "#BurstNotificationSearchManager Encountered error submitting SANotificationsSearch: %s. Returning no notifications found.");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRelease();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = ((unint64_t)v11 >> 62) & 1;
  if (v11 < 0) {
    LOBYTE(v12) = 1;
  }
  if (v12)
  {
    uint64_t v13 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)((unint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
  }
  v17[0] = v13;
  specialized MutableCollection<>.sort(by:)(v17);

  swift_bridgeObjectRelease();
  uint64_t v14 = v17[0];
  uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v15(v14);
}

uint64_t protocol witness for BurstNotificationSearchManagerProtocol.findIncomingNotifications(after:) in conformance BurstNotificationSearchManager(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for BurstNotificationSearchManagerProtocol.findIncomingNotifications(after:) in conformance BurstNotificationSearchManager;
  return BurstNotificationSearchManager.findIncomingNotifications(after:)(a1, a2);
}

uint64_t protocol witness for BurstNotificationSearchManagerProtocol.findIncomingNotifications(after:) in conformance BurstNotificationSearchManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v9 = *v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v11(a1, a2, a3, a4);
}

uint64_t outlined bridged method (pb) of @objc SAOnDeviceNotificationsSearchCompleted.notifications.getter(void *a1)
{
  id v1 = [a1 notifications];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SANotificationOnDeviceObject);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

ValueMetadata *type metadata accessor for BurstNotificationSearchManager()
{
  return &type metadata for BurstNotificationSearchManager;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew()()
{
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(v8, v9))
  {
    uint64_t v10 = CurrentRequest.executionRequestId.getter();
    uint64_t v12 = v11;
    swift_release();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  v16[0] = v10;
  v16[1] = v12;
  v16[2] = a2;
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)&v16[3]);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 216))(&v16[8], v13, v14);
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)&v16[13]);
  memcpy(a4, v16, 0x90uLL);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

NSUUID __swiftcall PhoneAppResolutionLogger.CodePathId.uuid()()
{
  if (v0) {
    id v1 = (void *)0x8000000000490D60;
  }
  else {
    id v1 = (void *)0x8000000000490D30;
  }
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSUUID);
  v2._uint64_t countAndFlagsBits = 0xD000000000000024;
  v2._object = v1;
  result.super.Class isa = (Class)NSUUID.__allocating_init(uuidString:)(v2);
  if (!result.super.isa) {
    __break(1u);
  }
  return result;
}

unint64_t PhoneAppResolutionLogger.CodePathId.rawValue.getter()
{
  return 0xD000000000000024;
}

PhoneCallFlowDelegatePlugin::PhoneAppResolutionLogger::CodePathId_optional __swiftcall PhoneAppResolutionLogger.CodePathId.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneAppResolutionLogger.CodePathId.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneAppResolutionLogger_CodePathId_testing;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneAppResolutionLogger_CodePathId_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static PhoneAppResolutionLogger.CodePathId.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneAppResolutionLogger.CodePathId.allCases.getter;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneAppResolutionLogger.CodePathId(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneAppResolutionLogger.CodePathId()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneAppResolutionLogger.CodePathId()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneAppResolutionLogger.CodePathId(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneAppResolutionLogger::CodePathId_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneAppResolutionLogger.CodePathId@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneAppResolutionLogger::CodePathId_optional *a2@<X8>)
{
  result.value = PhoneAppResolutionLogger.CodePathId.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneAppResolutionLogger.CodePathId@<X0>(void *a1@<X8>)
{
  unint64_t result = PhoneAppResolutionLogger.CodePathId.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneAppResolutionLogger.CodePathId(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneAppResolutionLogger.CodePathId.allCases.getter;
}

void one-time initialization function for namespaces()
{
  static PhoneAppResolutionLogger.namespaces = (uint64_t)&outlined read-only object #0 of one-time initialization function for namespaces;
}

uint64_t *PhoneAppResolutionLogger.namespaces.unsafeMutableAddressor()
{
  if (one-time initialization token for namespaces != -1) {
    swift_once();
  }
  return &static PhoneAppResolutionLogger.namespaces;
}

uint64_t static PhoneAppResolutionLogger.namespaces.getter()
{
  if (one-time initialization token for namespaces != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)(char a1, void *a2)
{
  char v3 = a1 & 1;
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a2, v4);

  return specialized PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)(v3, (uint64_t)v6, v2, v4, v5);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 144) = a7;
  *(void *)(v7 + 64) = a5;
  *(void *)(v7 + 72) = a6;
  *(void *)(v7 + 56) = a4;
  return _swift_task_switch(closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:), 0, 0);
}

unint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)()
{
  OUTLINED_FUNCTION_40_0();
  uint64_t v2 = *(void *)(v0 + 56);
  id v1 = *(void **)(v0 + 64);
  *(void *)(v0 + 80) = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSUUID);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v2;
  v3._object = v1;
  unint64_t v4 = (unint64_t)NSUUID.__allocating_init(uuidString:)(v3);
  *(void *)(v0 + 88) = v4;
  if (v4)
  {
    char v5 = *(unsigned char *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
    if (v5) {
      unint64_t v6 = 0x8000000000490D60;
    }
    else {
      unint64_t v6 = 0x8000000000490D30;
    }
    unint64_t v7 = 0xD000000000000024;
    unint64_t result = (unint64_t)NSUUID.__allocating_init(uuidString:)(*(Swift::String *)(&v6 - 1));
    *(void *)(v0 + 96) = result;
    if (result)
    {
      if (one-time initialization token for namespaces != -1) {
        swift_once();
      }
      uint64_t v9 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v9;
      *uint64_t v9 = v0;
      v9[1] = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
      OUTLINED_FUNCTION_25_40();
      return v10();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    uint64_t v12 = (void *)OUTLINED_FUNCTION_25_0(v11, (uint64_t)static Logger.siriPhone);
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_18(v13))
    {
      uint64_t v14 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v14);
      OUTLINED_FUNCTION_25_4(&dword_0, v15, v16, "#PhoneAppResolutionLogger emitTriggeredLog: Couldn't convert ID to a UUID, skipping triggered log");
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_47_0();
    return v17();
  }
  return result;
}

{
  uint64_t v0;
  void *v1;
  Swift::String v2;
  unint64_t result;
  id v4;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_40_0();
  if (*(unsigned char *)(v0 + 144)) {
    id v1 = (void *)0x8000000000490D60;
  }
  else {
    id v1 = (void *)0x8000000000490D30;
  }
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  v2._uint64_t countAndFlagsBits = 0xD000000000000024;
  v2._object = v1;
  unint64_t result = (unint64_t)NSUUID.__allocating_init(uuidString:)(v2);
  *(void *)(v0 + 120) = result;
  if (result)
  {
    unint64_t v4 = *(id *)(v0 + 88);
    char v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v5;
    *char v5 = v0;
    v5[1] = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
    OUTLINED_FUNCTION_25_40();
    return v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v5 = v4;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v6 = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
  }
  else
  {

    unint64_t v6 = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
  }
  return _swift_task_switch(v6, 0, 0);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v5 = v4;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v6 = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
  }
  else
  {
    unint64_t v7 = *(void **)(v3 + 88);

    unint64_t v6 = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
  }
  return _swift_task_switch(v6, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  os_log_type_t v13 = v0;

  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  id v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    OUTLINED_FUNCTION_10_63();
    uint64_t v12 = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_15_55(4.8149e-34);
    uint64_t v4 = Error.localizedDescription.getter();
    unint64_t v6 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v12);
    OUTLINED_FUNCTION_19_41(v6);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    OUTLINED_FUNCTION_28_37(&dword_0, v7, v8, "#PhoneAppResolutionLogger emitTriggeredLog: got %s while trying to emit triggered log; gave up without sending");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  OUTLINED_FUNCTION_47_0();
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  os_log_type_t v13 = v0;

  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  id v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    OUTLINED_FUNCTION_10_63();
    uint64_t v12 = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_15_55(4.8149e-34);
    uint64_t v4 = Error.localizedDescription.getter();
    unint64_t v6 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v12);
    OUTLINED_FUNCTION_19_41(v6);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    OUTLINED_FUNCTION_28_37(&dword_0, v7, v8, "#PhoneAppResolutionLogger emitTriggeredLog: got %s while trying to emit triggered log; gave up without sending");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  OUTLINED_FUNCTION_47_0();
  return v9();
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a5;
  *(unsigned char *)(v5 + 128) = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(void *)(v5 + 56) = swift_task_alloc();
  *(void *)(v5 + 64) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  *(void *)(v5 + 72) = v6;
  *(void *)(v5 + 80) = *(void *)(v6 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  *(void *)(v5 + 112) = swift_task_alloc();
  *(void *)(v5 + 120) = swift_task_alloc();
  return _swift_task_switch(closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:), 0, 0);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)()
{
  uint64_t v92 = v0;
  id v1 = *(uint64_t **)(v0 + 48);
  unsigned int v2 = PhoneAppResolutionLogger.EvaluationResult.toSelfSchema()(*(unsigned char *)(v0 + 128));
  unint64_t v3 = v1[1];
  if (!v3) {
    goto LABEL_4;
  }
  unsigned int v4 = v2;
  uint64_t v5 = *v1;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  UUID.init(uuidString:)();
  if (__swift_getEnumTagSinglePayload(v7, 1, v6) == 1)
  {
    uint64_t v8 = *(void *)(v0 + 64);
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_4:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    uint64_t v10 = (void *)OUTLINED_FUNCTION_25_0(v9, (uint64_t)static Logger.siriPhone);
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v11))
    {
      uint64_t v12 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v12);
      OUTLINED_FUNCTION_25_4(&dword_0, v13, v14, "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Skipping SELF message emission due to missing requestID");
      OUTLINED_FUNCTION_6();
    }

    goto LABEL_34;
  }
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 80) + 32);
  v15(*(void *)(v0 + 120), *(void *)(v0 + 64), *(void *)(v0 + 72));
  uint64_t v16 = self;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v18 = [v16 derivedIdentifierForComponentName:27 fromSourceIdentifier:isa];

  if (!v18)
  {
    __swift_storeEnumTagSinglePayload(*(void *)(v0 + 56), 1, 1, *(void *)(v0 + 72));
    goto LABEL_20;
  }
  unsigned int type = v4;
  uint64_t v19 = *(void *)(v0 + 104);
  uint64_t v20 = *(void *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 56);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v15(v21, v19, v20);
  __swift_storeEnumTagSinglePayload(v21, 0, 1, v20);
  if (__swift_getEnumTagSinglePayload(v21, 1, v20) == 1)
  {
LABEL_20:
    outlined destroy of SubmitCommandError?(*(void *)(v0 + 56), (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain();
    os_log_type_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    BOOL v61 = os_log_type_enabled(v59, v60);
    uint64_t v62 = *(void *)(v0 + 120);
    uint64_t v63 = *(void *)(v0 + 72);
    uint64_t v64 = *(void *)(v0 + 80);
    if (v61)
    {
      *(void *)typea = *(void *)(v0 + 120);
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v91 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v65 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v3, &v91);
      OUTLINED_FUNCTION_95_6(v66, (void *)(v0 + 16));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v59, v60, "#PhoneAppResolutionLogger:emitAndLinkExecutionResultMessage Failed to create inferenceId with requestId: %s. Not logging to SELF", v65, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      (*(void (**)(os_log_type_t *, uint64_t))(v64 + 8))(*(os_log_type_t **)typea, v63);
    }
    else
    {

      OUTLINED_FUNCTION_20_17();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
    }
    goto LABEL_34;
  }
  uint64_t v22 = *(void *)(v0 + 112);
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v24 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease();
  v15(v22, v24, v23);
  id v25 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEvent) init];
  if (v25)
  {
    uint64_t v26 = v25;
    id v27 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEventMetadata) init];
    if (v27)
    {
      uint64_t v28 = v27;
      id v29 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEABModelResultTriggered) init];
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v31 = PhoneAppResolutionLogger.linkMessage(inferenceID:requestID:)(*(void *)(v0 + 112), *(void *)(v0 + 120));
        if (v31)
        {
          uint64_t v86 = v31;
          uint64_t v33 = *(void *)(v0 + 104);
          uint64_t v32 = *(void *)(v0 + 112);
          uint64_t v35 = *(void *)(v0 + 72);
          uint64_t v34 = *(void *)(v0 + 80);
          type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID);
          char v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
          v85(v33, v32, v35);
          id v36 = SISchemaUUID.__allocating_init(nsuuid:)();
          [v28 setInferenceId:v36];

          [v30 setTriggerReason:type];
          [v30 setProjectIntent:5];
          [v26 setAbModelResultTriggered:v30];
          uint64_t v88 = v28;
          [v26 setEventMetadata:v28];
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v87 = v30;
          uint64_t v37 = *(void *)(v0 + 112);
          uint64_t v38 = *(void *)(v0 + 120);
          uint64_t v40 = *(void *)(v0 + 88);
          uint64_t v39 = *(void *)(v0 + 96);
          uint64_t v41 = *(void *)(v0 + 72);
          uint64_t v42 = type metadata accessor for Logger();
          __swift_project_value_buffer(v42, (uint64_t)static Logger.siriPhone);
          v85(v39, v37, v41);
          v85(v40, v38, v41);
          uint64_t v43 = Logger.logObject.getter();
          os_log_type_t v44 = static os_log_type_t.debug.getter();
          BOOL v45 = os_log_type_enabled(v43, v44);
          uint64_t v46 = *(void *)(v0 + 80);
          if (v45)
          {
            uint64_t v47 = OUTLINED_FUNCTION_14_0();
            uint64_t v91 = swift_slowAlloc();
            *(_DWORD *)uint64_t v47 = 136315650;
            uint64_t v48 = INFERENCESchemaINFERENCEAppResolutionType.description.getter();
            uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, &v91);
            OUTLINED_FUNCTION_95_6(v50, (void *)(v0 + 24));
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v47 + 12) = 2080;
            lazy protocol witness table accessor for type UUID and conformance UUID();
            uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, &v91);
            OUTLINED_FUNCTION_95_6(v53, (void *)(v0 + 32));
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            id v54 = *(void (**)(void))(v46 + 8);
            OUTLINED_FUNCTION_7_83();
            v54();
            *(_WORD *)(v47 + 22) = 2080;
            uint64_t v84 = v47 + 24;
            uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, &v91);
            OUTLINED_FUNCTION_95_6(v57, (void *)(v0 + 40));
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_7_83();
            v54();
            _os_log_impl(&dword_0, v43, v44, "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Emitting message with reason %s, UUID %s and linking to %s", (uint8_t *)v47, 0x20u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }
          else
          {
            id v54 = *(void (**)(void))(v46 + 8);
            OUTLINED_FUNCTION_7_83();
            v54();
            OUTLINED_FUNCTION_7_83();
            v54();
          }
          uint64_t v80 = *(void *)(v0 + 112);
          uint64_t v81 = *(void *)(v0 + 120);
          uint64_t v82 = *(void *)(v0 + 72);
          uint64_t v83 = *(void **)(*(void *)(v0 + 48) + 16);
          objc_msgSend(v83, "emitMessage:", v26, v84);
          [v83 emitMessage:v86];

          ((void (*)(uint64_t, uint64_t))v54)(v80, v82);
          ((void (*)(uint64_t, uint64_t))v54)(v81, v82);
          goto LABEL_34;
        }

        uint64_t v26 = v28;
      }
      else
      {
        uint64_t v30 = v28;
      }

      uint64_t v26 = v30;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v67 = type metadata accessor for Logger();
  int v68 = (void *)OUTLINED_FUNCTION_25_0(v67, (uint64_t)static Logger.siriPhone);
  os_log_type_t v69 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_18(v69))
  {
    unint64_t v70 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v70);
    OUTLINED_FUNCTION_25_4(&dword_0, v71, v72, "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Unable to build top-level SELF messages");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v74 = *(void *)(v0 + 112);
  uint64_t v73 = *(void *)(v0 + 120);
  uint64_t v75 = *(void *)(v0 + 72);
  uint64_t v76 = *(void *)(v0 + 80);

  uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v77(v74, v75);
  v77(v73, v75);
LABEL_34:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v78();
}

uint64_t PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &__src[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static TaskPriority.utility.getter();
  uint64_t v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  outlined init with copy of PhoneAppResolutionLogger(v2, (uint64_t)__src);
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = 0;
  v8[3] = 0;
  memcpy(v8 + 4, __src, 0x90uLL);
  v8[22] = a1;
  swift_retain();
  return _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:), (uint64_t)v8);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AppResolverResult();
  v5[23] = v7;
  v5[24] = *(void *)(v7 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  return _swift_task_switch(closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:), 0, 0);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)()
{
  uint64_t v107 = v0;
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[10];
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 24), *(void *)(v3 + 48));
  OUTLINED_FUNCTION_26_37();
  OUTLINED_FUNCTION_31_35();
  uint64_t v5 = v4();
  (*(void (**)(uint64_t))(*(void *)v5 + 88))(v5);
  swift_release();
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of SubmitCommandError?(v0[22], &demangling cache variable for type metadata for AppResolverResult?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_25_0(v6, (uint64_t)static Logger.siriPhone);
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_18(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v9);
      OUTLINED_FUNCTION_25_4(&dword_0, v10, v11, "#PhoneAppResolutionLogger emitAndLinkABEvaluationMessage: skipping emitting AB Evaluation message because no forced disambiguation prediction is in state");
      OUTLINED_FUNCTION_6();
    }

LABEL_38:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v95();
  }
  uint64_t v12 = (uint64_t *)v0[10];
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[24] + 32);
  v13(v0[26], v0[22], v0[23]);
  unint64_t v14 = v12[1];
  if (!v14)
  {
LABEL_10:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    uint64_t v20 = OUTLINED_FUNCTION_25_0(v19, (uint64_t)static Logger.siriPhone);
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_15_11(&dword_0, v22, v23, "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Skipping SELF message emission due to missing requestID");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v24 = v0[26];
    uint64_t v25 = v0[23];
    uint64_t v26 = v0[24];
    uint64_t v27 = v0[21];

    __swift_project_boxed_opaque_existential_1((void *)(v3 + 24), *(void *)(v3 + 48));
    OUTLINED_FUNCTION_26_37();
    OUTLINED_FUNCTION_31_35();
    v28();
    uint64_t v29 = OUTLINED_FUNCTION_33_27();
    __swift_storeEnumTagSinglePayload(v29, v30, v31, v25);
    (*((void (**)(uint64_t))v20->isa + 12))(v27);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    goto LABEL_38;
  }
  uint64_t v15 = *v12;
  uint64_t v17 = v0[13];
  uint64_t v16 = v0[14];
  swift_bridgeObjectRetain();
  UUID.init(uuidString:)();
  if (__swift_getEnumTagSinglePayload(v17, 1, v16) == 1)
  {
    uint64_t v18 = v0[13];
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    goto LABEL_10;
  }
  uint64_t v100 = v15;
  (*(void (**)(void, void, void))(v0[15] + 32))(v0[20], v0[13], v0[14]);
  uint64_t v32 = self;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v34 = [v32 derivedIdentifierForComponentName:27 fromSourceIdentifier:isa];

  if (!v34)
  {
    __swift_storeEnumTagSinglePayload(v0[12], 1, 1, v0[14]);
    goto LABEL_25;
  }
  uint64_t v99 = v13;
  uint64_t v35 = v0[14];
  uint64_t v36 = v0[12];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_21_42();
  v37();
  __swift_storeEnumTagSinglePayload(v36, 0, 1, v35);
  if (__swift_getEnumTagSinglePayload(v36, 1, v35) == 1)
  {
LABEL_25:
    outlined destroy of SubmitCommandError?(v0[12], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v71 = type metadata accessor for Logger();
    __swift_project_value_buffer(v71, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain();
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.error.getter();
    BOOL v74 = os_log_type_enabled(v72, v73);
    uint64_t v75 = v0[26];
    uint64_t v77 = v0[23];
    uint64_t v76 = v0[24];
    uint64_t v78 = v0[20];
    uint64_t v80 = v0[14];
    uint64_t v79 = v0[15];
    if (v74)
    {
      uint64_t v104 = v0[23];
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v81 = 136315138;
      swift_bridgeObjectRetain();
      v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v100, v14, &v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v72, v73, "#PhoneAppResolutionLogger:emitAndLinkABEvaluationMessage Failed to create inferenceId with requestId: %s. Not logging to SELF", v81, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v104);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_42();
  v38();
  id v39 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEvent) init];
  v0[27] = v39;
  if (!v39)
  {
LABEL_33:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v82 = type metadata accessor for Logger();
    uint64_t v83 = OUTLINED_FUNCTION_25_0(v82, (uint64_t)static Logger.siriPhone);
    os_log_type_t v84 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v83, v84))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_15_11(&dword_0, v85, v86, "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Unable to build top-level SELF messages");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v87 = v0[24];
    uint64_t v88 = v0[21];
    uint64_t v105 = v0[26];
    uint64_t v98 = v0[23];
    uint64_t v89 = v0[15];

    __swift_project_boxed_opaque_existential_1((void *)(v3 + 24), *(void *)(v3 + 48));
    OUTLINED_FUNCTION_26_37();
    OUTLINED_FUNCTION_31_35();
    v90();
    uint64_t v91 = OUTLINED_FUNCTION_33_27();
    __swift_storeEnumTagSinglePayload(v91, v92, v93, v98);
    (*((void (**)(uint64_t))v83->isa + 12))(v88);
    swift_release();
    uint64_t v94 = *(void (**)(void))(v89 + 8);
    OUTLINED_FUNCTION_10_8();
    v94();
    OUTLINED_FUNCTION_10_8();
    v94();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v105, v98);
    goto LABEL_38;
  }
  uint64_t v40 = v39;
  id v41 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEventMetadata) init];
  v0[28] = v41;
  if (!v41)
  {
LABEL_32:

    goto LABEL_33;
  }
  uint64_t v42 = v41;
  id v43 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEABModelEvaluated) init];
  v0[29] = v43;
  if (!v43)
  {
LABEL_31:

    uint64_t v40 = v42;
    goto LABEL_32;
  }
  id v44 = v43;
  BOOL v45 = PhoneAppResolutionLogger.linkMessage(inferenceID:requestID:)(v0[19], v0[20]);
  v0[30] = v45;
  if (!v45)
  {

    uint64_t v40 = v42;
    uint64_t v42 = v44;
    goto LABEL_31;
  }
  uint64_t v46 = v0[24];
  uint64_t v96 = v0[23];
  uint64_t v97 = v0[25];
  uint64_t v48 = v0[18];
  uint64_t v47 = v0[19];
  uint64_t v50 = v0[14];
  uint64_t v49 = v0[15];
  uint64_t v51 = (void *)v0[10];
  uint64_t v101 = v0[26];
  uint64_t v103 = v0[11];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID);
  unint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
  v0[31] = v52;
  v0[32] = (v49 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v52(v48, v47, v50);
  id v53 = SISchemaUUID.__allocating_init(nsuuid:)();
  [v42 setInferenceId:v53];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v97, v101, v96);
  type metadata accessor for ModelDecisionEvaluator();
  uint64_t v54 = swift_allocObject();
  v0[33] = v54;
  v99(v54 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22ModelDecisionEvaluator_forcedDisambiguationPrediction, v97, v96);
  *(void *)(v54 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22ModelDecisionEvaluator_userChosenApp) = v103;
  uint64_t v55 = v51[16];
  uint64_t v56 = v51[17];
  __swift_project_boxed_opaque_existential_1(v51 + 13, v55);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v57 = swift_allocObject();
  v0[34] = v57;
  *(_OWORD *)(v57 + 16) = xmmword_467720;
  id v58 = objc_allocWithZone((Class)INStartCallIntent);
  swift_retain();
  id v59 = [v58 init];
  id v60 = [v59 _className];

  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v62;

  *(void *)(v57 + 32) = v61;
  *(void *)(v57 + 40) = v63;
  id v64 = [objc_allocWithZone((Class)INStartAudioCallIntent) init];
  id v65 = [v64 _className];

  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v68 = v67;

  *(void *)(v57 + 48) = v66;
  *(void *)(v57 + 56) = v68;
  uint64_t v102 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 + 16) + **(int **)(v56 + 16));
  os_log_type_t v69 = (void *)swift_task_alloc();
  v0[35] = v69;
  *os_log_type_t v69 = v0;
  v69[1] = closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:);
  return v102(v57, v55, v56);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  *(void *)(v4 + 288) = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:), 0, 0);
}

{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  Swift::String_optional v27;
  uint64_t i;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(void);
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  NSObject *v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(void);
  void (*v75)(void);
  void (*v76)(void);
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t (*v83)(void);
  uint64_t v84;
  void (*v85)(void);
  uint64_t (*v86)(void);
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  void (*v100)(void);
  void (*v101)(void);
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void (*v110)(void);
  os_log_type_t v111;
  void *v112;
  void *v113;
  uint64_t v114;
  void *v115;
  void *v116;
  uint64_t v117;
  os_log_type_t typeb;
  void *type;
  void *typec;
  void *typea;
  void *v122;
  void *v123;
  NSObject *log;
  os_log_t loga;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;

  uint64_t v128 = v0;
  uint64_t v4 = *(void *)(v0 + 288);
  int v127 = _swiftEmptyArrayStorage;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
  if (!v5) {
    goto LABEL_14;
  }
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_81;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v4 & 0xC000000000000001;
  do
  {
    if (v7) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    App.appIdentifier.getter();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
    ++v6;
  }
  while (v5 != v6);
  swift_bridgeObjectRelease();
  uint64_t v1 = (unint64_t)v127;
LABEL_15:
  uint64_t v126 = v0;
  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v10 = *(void *)(v1 + 16);
    swift_retain();
  }
  uint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  if (!v10)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_33;
  }
  if (v10 < 1)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v12 = 0;
  uint64_t v13 = _swiftEmptyArrayStorage;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    unint64_t v14 = App.appIdentifier.getter();
    uint64_t v16 = v15;
    swift_release();
    if (v16)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_20_45();
        uint64_t v13 = v19;
      }
      uint64_t v17 = v13[2];
      if (v17 >= v13[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v13 = v20;
      }
      long long v13[2] = v17 + 1;
      uint64_t v18 = &v13[2 * v17];
      long long v18[4] = v14;
      uint64_t v18[5] = v16;
    }
    ++v12;
  }
  while (v10 != v12);
LABEL_33:
  swift_release();
  swift_bridgeObjectRetain();
  os_log_type_t v21 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_20_45();
    os_log_type_t v21 = v102;
  }
  uint64_t v22 = v21[2];
  if (v22 >= v21[3] >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    os_log_type_t v21 = v103;
  }
  uint64_t v2 = (void *)(v126 + 40);
  void v21[2] = v22 + 1;
  uint64_t v23 = &v21[2 * v22];
  v23[4] = 0xD000000000000015;
  uint64_t v23[5] = 0x80000000004932A0;
  swift_bridgeObjectRelease();
  uint64_t v24 = App.appIdentifier.getter();
  if (v25 && (uint64_t v26 = specialized Sequence<>.contains(_:)(v24, v25, v21), swift_bridgeObjectRelease(), (v26 & 1) != 0))
  {
    uint64_t v3 = (void *)(v126 + 64);
    uint64_t v27 = ModelDecisionEvaluator.getPredictedApp()();
    if (!v27.value._object) {
      goto LABEL_42;
    }
    if (specialized Sequence<>.contains(_:)(v27.value._countAndFlagsBits, (uint64_t)v27.value._object, v21))
    {
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      int v127 = _swiftEmptyArrayStorage;
      if (v10)
      {
        swift_retain();
        for (uint64_t i = 0; i != v10; ++i)
        {
          if ((v1 & 0xC000000000000001) != 0) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          if (App.isFirstParty()())
          {
            swift_release();
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
        swift_release();
        uint64_t v11 = (unint64_t)v127;
      }
      if ((v11 & 0x8000000000000000) == 0 && (v11 & 0x4000000000000000) == 0)
      {
        uint64_t v29 = *(void *)(v11 + 16);
        goto LABEL_55;
      }
LABEL_82:
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
LABEL_55:
      uint64_t v30 = *(void **)(v126 + 232);
      uint64_t v31 = *(void **)(v126 + 80);
      swift_release();
      [v30 setIsDecisionCorrect:ModelDecisionEvaluator.isDecisionCorrect()()];
      [v30 setIsModelDisambiguation:ModelDecisionEvaluator.isDisambiguation()()];
      [v30 setIsModelConfirmation:ModelDecisionEvaluator.isConfirmation()()];
      uint64_t v32 = v31[11];
      uint64_t v33 = v31[12];
      __swift_project_boxed_opaque_existential_1(v31 + 8, v32);
      id v34 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v33 + 8))(v1, v32, v33);
      swift_release();
      [v30 setUserPersona:v34];
      [v30 setProjectIntent:5];
      uint64_t v35 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
      }
      else if (v35 >= (uint64_t)0xFFFFFFFF80000000)
      {
        uint64_t v3 = (void *)v126;
        if (v35 <= 0x7FFFFFFF)
        {
          uint64_t v108 = v2;
          uint64_t v36 = *(void *)(v126 + 224);
          uint64_t v37 = *(void **)(v126 + 232);
          uint64_t v38 = *(void **)(v126 + 216);
          objc_msgSend(v37, "setNumCandidateApps:");
          [v38 setAbModelEvaluated:v37];
          [v38 setEventMetadata:v36];
          if (one-time initialization token for siriPhone == -1)
          {
LABEL_59:
            id v39 = (void (*)(uint64_t, uint64_t, uint64_t))v3[31];
            id v41 = v3[19];
            uint64_t v40 = v3[20];
            id v43 = v3[16];
            uint64_t v42 = v3[17];
            id v44 = v3[14];
            BOOL v45 = type metadata accessor for Logger();
            __swift_project_value_buffer(v45, (uint64_t)static Logger.siriPhone);
            v39(v42, v41, v44);
            v39(v43, v40, v44);
            swift_retain_n();
            uint64_t v46 = Logger.logObject.getter();
            uint64_t v47 = static os_log_type_t.debug.getter();
            uint64_t v48 = os_log_type_enabled(v46, v47);
            uint64_t v49 = v3[15];
            if (v48)
            {
              char log = v46;
              typeb = v47;
              uint64_t v50 = OUTLINED_FUNCTION_14_0();
              int v127 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 136315650;
              swift_retain();
              uint64_t v51 = ModelDecisionEvaluator.description.getter();
              id v53 = v52;
              swift_release();
              uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, (uint64_t *)&v127);
              OUTLINED_FUNCTION_95_6(v54, v108);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_32_26();
              *(_WORD *)(v50 + 12) = 2080;
              lazy protocol witness table accessor for type UUID and conformance UUID();
              uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
              v3[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, (uint64_t *)&v127);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v57 = *(void (**)(void))(v49 + 8);
              OUTLINED_FUNCTION_10_8();
              v57();
              *(_WORD *)(v50 + 22) = 2080;
              id v58 = dispatch thunk of CustomStringConvertible.description.getter();
              v3[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, (uint64_t *)&v127);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v110 = v57;
              OUTLINED_FUNCTION_10_8();
              v57();
              _os_log_impl(&dword_0, log, typeb, "#PhoneAppResolutionLogger emitAndLinkABEvaluationMessage: Emitting message with result %s), UUID %s and linking to %s", (uint8_t *)v50, 0x20u);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_6();
            }
            else
            {
              OUTLINED_FUNCTION_32_26();
              uint64_t v76 = *(void (**)(void))(v49 + 8);
              OUTLINED_FUNCTION_10_8();
              v76();
              uint64_t v110 = v76;
              OUTLINED_FUNCTION_10_8();
              v76();
            }
            uint64_t v77 = (void *)v3[30];
            uint64_t v78 = (void *)v3[27];
            typec = (void *)v3[28];
            uint64_t v123 = (void *)v3[29];
            uint64_t v79 = v3[23];
            uint64_t v80 = v3[21];
            loga = (os_log_t)v3[20];
            uint64_t v117 = v3[19];
            uint64_t v114 = v3[14];
            uint64_t v81 = (void *)v3[10];
            uint64_t v82 = (void *)v81[2];
            [v82 emitMessage:v78];
            [v82 emitMessage:v77];
            __swift_project_boxed_opaque_existential_1(v81 + 3, v81[6]);
            OUTLINED_FUNCTION_26_37();
            OUTLINED_FUNCTION_31_35();
            os_log_type_t v84 = v83();
            __swift_storeEnumTagSinglePayload(v80, 1, 1, v79);
            (*(void (**)(uint64_t))(*(void *)v84 + 96))(v80);
            swift_release();

            swift_release();
            ((void (*)(uint64_t, uint64_t))v110)(v117, v114);
            ((void (*)(os_log_t, uint64_t))v110)(loga, v114);
            OUTLINED_FUNCTION_10_8();
            v85();
            goto LABEL_71;
          }
LABEL_86:
          swift_once();
          goto LABEL_59;
        }
LABEL_85:
        __break(1u);
        goto LABEL_86;
      }
      __break(1u);
      goto LABEL_85;
    }
    swift_release();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for Logger();
    __swift_project_value_buffer(v88, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v89 = Logger.logObject.getter();
    uint64_t v90 = static os_log_type_t.debug.getter();
    uint64_t v91 = os_log_type_enabled(v89, v90);
    uint64_t v112 = *(void **)(v126 + 240);
    uint64_t v115 = *(void **)(v126 + 224);
    uint64_t v92 = *(void *)(v126 + 208);
    uint64_t v94 = *(void *)(v126 + 184);
    uint64_t v93 = *(void *)(v126 + 192);
    typea = *(void **)(v126 + 232);
    uint64_t v95 = *(void *)(v126 + 120);
    if (v91)
    {
      uint64_t v106 = *(void **)(v126 + 216);
      os_log_t v109 = *(void *)(v126 + 208);
      uint64_t v96 = swift_slowAlloc();
      int v127 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v96 = 136315394;
      uint64_t v107 = v94;
      swift_bridgeObjectRetain();
      *(void *)(v126 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27.value._countAndFlagsBits, (unint64_t)v27.value._object, (uint64_t *)&v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v96 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v97 = Array.description.getter();
      uint64_t v99 = v98;
      swift_bridgeObjectRelease();
      *(void *)(v126 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v97, v99, (uint64_t *)&v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_20_17();
      _os_log_impl(&dword_0, v89, v90, "#PhoneAppResolutionLogger:emitAndLinkABEvaluationMessage can't find predicted app:%s from candidate list:%s. Not logging to SELF", (uint8_t *)v96, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      swift_release();
      uint64_t v100 = *(void (**)(void))(v95 + 8);
      OUTLINED_FUNCTION_12_1();
      v100();
      OUTLINED_FUNCTION_12_1();
      v100();
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v109, v107);
    }
    else
    {

      OUTLINED_FUNCTION_20_17();
      swift_bridgeObjectRelease_n();
      swift_release();

      uint64_t v101 = *(void (**)(void))(v95 + 8);
      OUTLINED_FUNCTION_12_1();
      v101();
      OUTLINED_FUNCTION_12_1();
      v101();
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v92, v94);
    }
  }
  else
  {
    swift_release();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    id v60 = type metadata accessor for Logger();
    __swift_project_value_buffer(v60, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v61 = Logger.logObject.getter();
    uint64_t v111 = static os_log_type_t.debug.getter();
    uint64_t v62 = os_log_type_enabled(v61, v111);
    unsigned int type = *(void **)(v126 + 232);
    uint64_t v122 = *(void **)(v126 + 240);
    uint64_t v116 = *(void **)(v126 + 224);
    uint64_t v63 = *(void *)(v126 + 208);
    uint64_t v113 = *(void **)(v126 + 216);
    id v65 = *(void *)(v126 + 184);
    id v64 = *(void *)(v126 + 192);
    uint64_t v66 = *(void *)(v126 + 120);
    if (v62)
    {
      uint64_t v105 = *(void *)(v126 + 208);
      uint64_t v67 = swift_slowAlloc();
      int v127 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136315394;
      uint64_t v68 = App.appIdentifier.getter();
      if (v69)
      {
        unint64_t v70 = v69;
      }
      else
      {
        uint64_t v68 = 7104878;
        unint64_t v70 = 0xE300000000000000;
      }
      uint64_t v104 = v64;
      *(void *)(v126 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, (uint64_t *)&v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_32_26();
      *(_WORD *)(v67 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v71 = Array.description.getter();
      os_log_type_t v73 = v72;
      swift_bridgeObjectRelease();
      *(void *)(v126 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v73, (uint64_t *)&v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_20_17();
      _os_log_impl(&dword_0, v61, v111, "#PhoneAppResolutionLogger:emitAndLinkABEvaluationMessage can't find chosen app:%s from candidate list:%s. Not logging to SELF", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      swift_release();
      BOOL v74 = *(void (**)(void))(v66 + 8);
      OUTLINED_FUNCTION_76_3();
      v74();
      OUTLINED_FUNCTION_76_3();
      v74();
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v105, v65);
    }
    else
    {

      swift_release();
      OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_32_26();

      uint64_t v75 = *(void (**)(void))(v66 + 8);
      OUTLINED_FUNCTION_76_3();
      v75();
      OUTLINED_FUNCTION_76_3();
      v75();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    }
  }
LABEL_71:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v86();
}

uint64_t outlined init with copy of PhoneAppResolutionLogger(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_3B70AC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t partial apply for closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v1 + 40;
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = swift_task_alloc();
  os_log_type_t v8 = (void *)OUTLINED_FUNCTION_17_0(v7);
  *os_log_type_t v8 = v9;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)(a1, v3, v4, v6, v5);
}

uint64_t sub_3B71C8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_release();

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t partial apply for closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (uint64_t)(v1 + 4);
  uint64_t v6 = v1[22];
  uint64_t v7 = swift_task_alloc();
  os_log_type_t v8 = (void *)OUTLINED_FUNCTION_17_0(v7);
  *os_log_type_t v8 = v9;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)(a1, v3, v4, v5, v6);
}

unint64_t lazy protocol witness table accessor for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult;
  if (!lazy protocol witness table cache variable for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId;
  if (!lazy protocol witness table cache variable for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [PhoneAppResolutionLogger.CodePathId] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [PhoneAppResolutionLogger.CodePathId] and conformance [A];
  if (!lazy protocol witness table cache variable for type [PhoneAppResolutionLogger.CodePathId] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhoneAppResolutionLogger.CodePathId]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [PhoneAppResolutionLogger.CodePathId] and conformance [A]);
  }
  return result;
}

uint64_t initializeWithCopy for PhoneAppResolutionLogger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  os_log_type_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v8(a1 + 24, v5, v7);
  long long v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 128) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 104, a2 + 104);
  return a1;
}

uint64_t *assignWithCopy for PhoneAppResolutionLogger(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  __swift_assign_boxed_opaque_existential_1(a1 + 13, a2 + 13);
  return a1;
}

void *__swift_memcpy144_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t assignWithTake for PhoneAppResolutionLogger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  __swift_destroy_boxed_opaque_existential_1(a1 + 104);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneAppResolutionLogger(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 144))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneAppResolutionLogger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for PhoneAppResolutionLogger()
{
}

unsigned char *storeEnumTagSinglePayload for PhoneAppResolutionLogger.EvaluationResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B77D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for PhoneAppResolutionLogger.EvaluationResult()
{
}

unsigned char *storeEnumTagSinglePayload for PhoneAppResolutionLogger.CodePathId(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B78D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for PhoneAppResolutionLogger.CodePathId()
{
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

uint64_t partial apply for closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)()
{
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_22_51();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v3 = OUTLINED_FUNCTION_8_5();
  return closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_23Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)partial apply()
{
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_22_51();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v3 = OUTLINED_FUNCTION_8_5();
  return closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t OUTLINED_FUNCTION_10_63()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_15_55(float a1)
{
  float *v1 = a1;
  return swift_getErrorValue();
}

uint64_t OUTLINED_FUNCTION_19_41(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_20_45()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_28_37(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_32_26()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_33_27()
{
  return v0;
}

uint64_t CallingFlowAbstraction.init(app:flowName:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_22();
  *(void *)(v4 + *(void *)(v6 + 288)) = v7;
  OUTLINED_FUNCTION_22();
  char v9 = (uint64_t *)(v4 + *(void *)(v8 + 296));
  *char v9 = v10;
  v9[1] = v11;
  uint64_t v12 = one-time initialization token for siriPhone;
  swift_retain();
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  swift_retain();
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v21 = a4;
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_47();
    *(void *)&v22[0] = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v18 = *v9;
    unint64_t v17 = v9[1];
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v17, (uint64_t *)v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v15, "%s.initialize", v16, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    a4 = v21;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  outlined init with copy of SignalProviding(a4, (uint64_t)v22);
  uint64_t v19 = PhoneFlow.init(sharedGlobals:)(v22);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v19;
}

uint64_t CallingFlowAbstraction.deinit()
{
  uint64_t v0 = PhoneFlow.deinit();
  swift_release();
  OUTLINED_FUNCTION_19();
  swift_bridgeObjectRelease();
  return v0;
}

void CallingFlowAbstraction.__allocating_init(sharedGlobals:)()
{
}

void CallingFlowAbstraction.__allocating_init(state:sharedGlobals:)()
{
}

void CallingFlowAbstraction.on(input:)()
{
  void (*v52)(uint64_t *__return_ptr, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_5_8();
  id v59 = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_22_52();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v9);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_12();
  v11();
  swift_retain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  uint64_t v61 = v1;
  if (os_log_type_enabled(v12, v13))
  {
    id v58 = v13;
    uint64_t v14 = OUTLINED_FUNCTION_14_0();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315650;
    OUTLINED_FUNCTION_19();
    uint64_t v16 = (uint64_t *)((char *)v0 + *(void *)(v15 + 296));
    uint64_t v62 = v5;
    uint64_t v18 = *v16;
    unint64_t v17 = v16[1];
    swift_bridgeObjectRetain();
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v17, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    OUTLINED_FUNCTION_19();
    (*(void (**)(void))(v19 + 128))();
    uint64_t v20 = PhoneCallFlowState.description.getter(v3);
    uint64_t v21 = v3;
    unint64_t v23 = v22;
    OUTLINED_FUNCTION_12_20();
    v24();
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v23, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    lazy protocol witness table accessor for type Input and conformance Input();
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v63);
    uint64_t v5 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v27 = OUTLINED_FUNCTION_18_40();
    v28(v27);
    _os_log_impl(&dword_0, v12, v58, "%s.On for state:%s input:%s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release();
    uint64_t v29 = OUTLINED_FUNCTION_18_40();
    v30(v29);
  }

  OUTLINED_FUNCTION_19();
  uint64_t v32 = *(void (**)(void))(v31 + 128);
  OUTLINED_FUNCTION_17_39();
  v32();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  id v34 = *(void (**)(void))(v5 + 8);
  ((void (*)(uint64_t, uint64_t))v34)(v59, v3);
  swift_retain();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  if (EnumCaseMultiPayload == 5)
  {
    if (v37)
    {
      uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_47();
      v63[0] = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v38 = 136315138;
      OUTLINED_FUNCTION_19();
      uint64_t v40 = (uint64_t *)((char *)v2 + *(void *)(v39 + 296));
      uint64_t v41 = *v40;
      unint64_t v42 = v40[1];
      swift_bridgeObjectRetain();
      uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v35, v36, "%s.On, updating state to runIntentConversion", v38, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release();
    }
    uint64_t v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState))
                 + 48);
    OUTLINED_FUNCTION_12();
    v50();
    uint64_t v51 = *v2;
    *(void *)(v61 + v49) = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 288));
    unint64_t v52 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v51 + 152);
    id v53 = swift_retain();
    v52(v63, v53);
    uint64_t v54 = v64;
    uint64_t v55 = v65;
    __swift_project_boxed_opaque_existential_1(v63, v64);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v55);
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_14_46();
    v56();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  }
  else
  {
    if (v37)
    {
      uint64_t v43 = OUTLINED_FUNCTION_11_7();
      v63[0] = OUTLINED_FUNCTION_10_0();
      *(_DWORD *)uint64_t v43 = 136315394;
      OUTLINED_FUNCTION_19();
      BOOL v45 = (uint64_t *)((char *)v2 + *(void *)(v44 + 296));
      id v60 = v3;
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      swift_bridgeObjectRetain();
      uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v48 = v61;
      OUTLINED_FUNCTION_17_39();
      v32();
      PhoneCallFlowState.description.getter(v60);
      OUTLINED_FUNCTION_21_43();
      OUTLINED_FUNCTION_12_20();
      v34();
      uint64_t v66 = OUTLINED_FUNCTION_16_56();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v35, v36, "%s.on is stopped, state: %s", (uint8_t *)v43, 0x16u);
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release();
      uint64_t v48 = v61;
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_19();
    (*(void (**)(uint64_t))(v57 + 136))(v48);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t CallingFlowAbstraction.execute()(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  uint64_t v3 = *v1;
  v2[10] = *v1;
  v2[11] = *(void *)(v3 + 256);
  v2[12] = *(void *)(v3 + 264);
  uint64_t v4 = type metadata accessor for PhoneCallFlowState();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return _swift_task_switch(CallingFlowAbstraction.execute(), 0, 0);
}

uint64_t CallingFlowAbstraction.execute()()
{
  uint64_t v41 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[16];
    uint64_t v6 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v7 = v0[9];
    uint64_t v8 = OUTLINED_FUNCTION_11_7();
    uint64_t v40 = OUTLINED_FUNCTION_10_0();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v9 = (uint64_t *)(v7 + *(void *)(*(void *)v7 + 296));
    os_log_type_t type = v3;
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    swift_bridgeObjectRetain();
    v0[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v12 = swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    (*(void (**)(uint64_t))(*(void *)v7 + 128))(v12);
    uint64_t v13 = PhoneCallFlowState.description.getter(v6);
    unint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v0[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_0, v2, type, "%s.execute, state: %s", (uint8_t *)v8, 0x16u);
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release();
  }

  OUTLINED_FUNCTION_22();
  unint64_t v17 = *(void (**)(void))(v16 + 128);
  v17();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = v0[15];
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v19 + *(int *)(v20 + 64));
      uint64_t v21 = type metadata accessor for Input();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
      goto LABEL_9;
    case 2u:
      uint64_t v31 = v0[9];
      uint64_t v32 = v0[10];
      v0[3] = *(void *)v0[15];
      implicit closure #5 in CallingFlowAbstraction.execute()(v31, *(void *)(v32 + 272));
      type metadata accessor for RCHFlowResult();
      type metadata accessor for AnyValueFlow();
      swift_getWitnessTable();
      static ExecuteResponse.replan<A>(next:childCompletion:)();
      swift_release();
      goto LABEL_16;
    case 4u:
      v0[2] = *(void *)v0[15];
      type metadata accessor for SimpleOutputFlowAsync();
      static ExecuteResponse.complete<A>(next:)();
LABEL_16:
      swift_release();
      goto LABEL_18;
    case 5u:
      goto LABEL_9;
    case 6u:
      OUTLINED_FUNCTION_22();
      (*(void (**)(void))(v33 + 232))();
      goto LABEL_18;
    case 7u:
      goto LABEL_13;
    default:
      OUTLINED_FUNCTION_12_20();
      v18();
LABEL_9:
      swift_retain();
      unint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v22, v23))
      {
        os_log_type_t v39 = v23;
        uint64_t v24 = v0[16];
        uint64_t typea = v0[13];
        uint64_t v38 = v0[14];
        uint64_t v25 = v0[9];
        uint64_t v26 = OUTLINED_FUNCTION_11_7();
        uint64_t v40 = OUTLINED_FUNCTION_10_0();
        *(_DWORD *)uint64_t v26 = 136315394;
        uint64_t v27 = (unint64_t *)(v25 + *(void *)(*(void *)v25 + 296));
        unint64_t v29 = *v27;
        unint64_t v28 = v27[1];
        swift_bridgeObjectRetain();
        v0[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v30 = swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        ((void (*)(uint64_t))v17)(v30);
        PhoneCallFlowState.description.getter(typea);
        OUTLINED_FUNCTION_21_43();
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v24, typea);
        v0[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v29, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_0, v22, v39, "%s.execute unexpected state: %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_release();
      }

LABEL_13:
      static ExecuteResponse.complete()();
LABEL_18:
      swift_task_dealloc();
      swift_task_dealloc();
      id v34 = (uint64_t (*)(void))v0[1];
      return v34();
  }
}

void CallingFlowAbstraction.prepare(completion:)()
{
  void (*v46)(long long *__return_ptr, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void);
  long long *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(void);
  void (*v59)(long long *__return_ptr, uint64_t);
  uint64_t v60;
  uint64_t (*v61)();
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  long long *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  long long *v96;
  void (*v97)(void);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  long long v103;
  uint64_t v104;
  uint64_t v105;

  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v99 = v2;
  uint64_t v4 = v3;
  uint64_t v89 = *v0;
  uint64_t v5 = v89;
  uint64_t v94 = type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  uint64_t v91 = v6;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_8();
  uint64_t v88 = v8;
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v85 - v10;
  uint64_t v11 = type metadata accessor for PrepareResponse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v100 = v12;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_3_1();
  uint64_t v98 = v14;
  uint64_t v15 = *(void *)(v5 + 264);
  uint64_t v87 = *(void *)(v5 + 256);
  uint64_t v86 = v15;
  uint64_t v16 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v95 = v17;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_8();
  uint64_t v101 = v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (long long *)((char *)&v85 - v21);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  swift_retain();
  uint64_t v90 = v23;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = OUTLINED_FUNCTION_11_7();
    uint64_t v97 = v4;
    uint64_t v27 = v26;
    uint64_t v28 = OUTLINED_FUNCTION_10_0();
    uint64_t v92 = v11;
    uint64_t v85 = v28;
    *(void *)&uint64_t v103 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    OUTLINED_FUNCTION_10_61();
    uint64_t v30 = (void *)((char *)v1 + *(void *)(v29 + 296));
    uint64_t v31 = *v30;
    unint64_t v32 = v30[1];
    swift_bridgeObjectRetain();
    uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, (uint64_t *)&v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    OUTLINED_FUNCTION_10_61();
    (*(void (**)(void))(v33 + 128))();
    PhoneCallFlowState.description.getter(v16);
    OUTLINED_FUNCTION_21_43();
    OUTLINED_FUNCTION_12_20();
    v34();
    uint64_t v102 = OUTLINED_FUNCTION_16_56();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v25, "%s.prepare, state: %s", (uint8_t *)v27, 0x16u);
    OUTLINED_FUNCTION_27_6();
    uint64_t v11 = v92;
    OUTLINED_FUNCTION_6();
    uint64_t v4 = v97;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release();
  }
  OUTLINED_FUNCTION_10_61();
  os_log_type_t v36 = *(void (**)(void))(v35 + 128);
  BOOL v37 = v101;
  v36();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      id v53 = *(void *)((char *)v37 + *(int *)(v52 + 48));
      uint64_t v96 = (long long *)((char *)v37 + *(int *)(v52 + 64));
      uint64_t v54 = v91;
      OUTLINED_FUNCTION_24_39();
      v55();
      uint64_t v56 = v87;
      type metadata accessor for IntentConversionFlow();
      uint64_t v97 = v4;
      uint64_t v57 = v88;
      OUTLINED_FUNCTION_12();
      v58();
      id v59 = *(void (**)(long long *__return_ptr, uint64_t))(*v1 + 152);
      id v60 = swift_retain();
      v59(&v103, v60);
      *(void *)&uint64_t v103 = IntentConversionFlow.__allocating_init(input:app:sharedGlobals:)(v57, v53, &v103);
      uint64_t v61 = implicit closure #5 in CallingFlowAbstraction.prepare(completion:)();
      uint64_t v63 = v62;
      id v64 = (void *)swift_allocObject();
      id v65 = v86;
      v64[2] = v56;
      v64[3] = v65;
      uint64_t v66 = v89;
      v64[4] = *(void *)(v89 + 272);
      v64[5] = *(void *)(v66 + 280);
      v64[6] = v61;
      v64[7] = v63;
      swift_getWitnessTable();
      uint64_t v67 = v98;
      static PrepareResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      swift_release();
      v97(v67);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v67, v11);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v93, v94);
      uint64_t v51 = v96;
      goto LABEL_9;
    case 2u:
      swift_release();
      goto LABEL_11;
    case 3u:
      (*(void (**)(void *, uint64_t))(v95 + 8))(v37, v16);
      goto LABEL_13;
    case 4u:
      *(void *)&uint64_t v103 = *v37;
      type metadata accessor for SimpleOutputFlowAsync();
      os_log_type_t v84 = v98;
      static PrepareResponse.complete<A>(next:)();
      v4(v84);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v84, v11);
      break;
    case 5u:
LABEL_13:
      uint64_t v97 = v4;
      swift_retain();
      os_log_type_t v69 = Logger.logObject.getter();
      unint64_t v70 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = OUTLINED_FUNCTION_11_7();
        uint64_t v94 = v16;
        uint64_t v72 = v71;
        os_log_type_t v73 = OUTLINED_FUNCTION_10_0();
        uint64_t v92 = v11;
        uint64_t v101 = (void *)v73;
        *(void *)&uint64_t v103 = v73;
        *(_DWORD *)uint64_t v72 = 136315394;
        OUTLINED_FUNCTION_10_61();
        uint64_t v75 = (void *)((char *)v1 + *(void *)(v74 + 296));
        uint64_t v76 = *v75;
        uint64_t v77 = v75[1];
        swift_bridgeObjectRetain();
        uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, (uint64_t *)&v103);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v78 = swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 12) = 2080;
        uint64_t v79 = v96;
        ((void (*)(uint64_t))v36)(v78);
        uint64_t v80 = v94;
        uint64_t v81 = PhoneCallFlowState.description.getter(v94);
        uint64_t v83 = v82;
        (*(void (**)(long long *, uint64_t))(v95 + 8))(v79, v80);
        uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v83, (uint64_t *)&v103);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v69, v70, "%s.prepare unexpected state: %s", (uint8_t *)v72, 0x16u);
        OUTLINED_FUNCTION_27_6();
        uint64_t v11 = v92;
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release();
      }
      uint64_t v68 = v98;
      static PrepareResponse.complete()();
      v97(v68);
      goto LABEL_20;
    case 6u:
LABEL_11:
      uint64_t v68 = v98;
      static PrepareResponse.ongoing(needsExecute:)();
      goto LABEL_17;
    case 7u:
      uint64_t v68 = v98;
      static PrepareResponse.complete()();
LABEL_17:
      v4(v68);
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v68, v11);
      break;
    default:
      uint64_t v38 = v91;
      uint64_t v40 = v93;
      uint64_t v39 = v94;
      OUTLINED_FUNCTION_24_39();
      v41();
      uint64_t v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState))
                   + 48);
      uint64_t v43 = v96;
      OUTLINED_FUNCTION_12();
      v44();
      uint64_t v45 = *v1;
      *(void *)((char *)v43 + v42) = *(void *)((char *)v1 + *(void *)(*v1 + 288));
      uint64_t v46 = *(void (**)(long long *__return_ptr, uint64_t))(v45 + 152);
      unint64_t v47 = swift_retain();
      v46(&v103, v47);
      uint64_t v48 = v104;
      uint64_t v49 = v105;
      __swift_project_boxed_opaque_existential_1(&v103, v104);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v49);
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_10_61();
      OUTLINED_FUNCTION_14_46();
      v50();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v39);
      uint64_t v51 = &v103;
LABEL_9:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      break;
  }
  OUTLINED_FUNCTION_26_1();
}

void CallingFlowAbstraction.processIntentConversionResult(exitValue:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v105 = v2;
  os_log_type_t v3 = *v0;
  uint64_t v4 = type metadata accessor for CATOption();
  __chkstk_darwin(v4 - 8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v100 = v5;
  uint64_t v6 = *((void *)v3 + 32);
  uint64_t v103 = (uint8_t *)*((void *)v3 + 33);
  uint64_t v104 = v6;
  uint64_t v7 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = OUTLINED_FUNCTION_22_52();
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v3;
  uint64_t v20 = *((void *)v3 + 16);
  uint64_t v107 = v0;
  uint64_t v102 = v20;
  OUTLINED_FUNCTION_17_39();
  v21();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = (uint64_t *)v13;
    uint64_t v102 = v7;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
    uint64_t v24 = *(void *)(v1 + *(int *)(v23 + 48));
    uint64_t v25 = v1 + *(int *)(v23 + 64);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v19, v1, v14);
    __swift_destroy_boxed_opaque_existential_1(v25);
    if (v105)
    {
      uint64_t v98 = v16;
      uint64_t v99 = v24;
      uint64_t v97 = v19;
      uint64_t v106 = v22;
      uint64_t v26 = v107;
      OUTLINED_FUNCTION_19();
      uint64_t v28 = *(void (**)(void))(v27 + 152);
      id v30 = v29;
      OUTLINED_FUNCTION_6_89();
      v28();
      uint64_t v31 = v112;
      uint64_t v32 = v113;
      __swift_project_boxed_opaque_existential_1(&v111, v112);
      uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 56))(v31, v32);
      LOBYTE(v31) = (*(uint64_t (**)(uint64_t))(*(void *)v33 + 224))(v33);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
      if (v31 & 1) != 0 && ((*(uint64_t (**)(uint64_t))(*((void *)v101 + 34) + 136))(v104))
      {
        OUTLINED_FUNCTION_6_89();
        v28();
        uint64_t v34 = v112;
        uint64_t v35 = v113;
        __swift_project_boxed_opaque_existential_1(&v111, v112);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v35 + 8))(v108, v34, v35);
        uint64_t v36 = v109;
        uint64_t v37 = v110;
        uint64_t v38 = __swift_project_boxed_opaque_existential_1(v108, v109);
        DeviceState.isGroupFaceTimeDeviceUnsupported(app:)(v99, v36, v37, (uint64_t)v38, v39, v40, v41, v42, v95, (uint64_t)v96, (uint64_t)v97, v98, v99, v100, (uint64_t)v101, v102, (uint64_t)v103, v104, v105,
          (uint64_t)v106);
        LOBYTE(v36) = v43;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
        if (v36)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v44 = type metadata accessor for Logger();
          __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
          swift_retain();
          uint64_t v45 = Logger.logObject.getter();
          os_log_type_t v46 = static os_log_type_t.debug.getter();
          unint64_t v47 = v45;
          BOOL v48 = os_log_type_enabled(v45, v46);
          id v96 = v30;
          if (v48)
          {
            uint64_t v49 = (uint8_t *)OUTLINED_FUNCTION_47();
            uint64_t v105 = OUTLINED_FUNCTION_14_0();
            *(void *)&long long v111 = v105;
            *(_DWORD *)uint64_t v49 = 136315138;
            uint64_t v101 = v49 + 4;
            OUTLINED_FUNCTION_19();
            uint64_t v51 = (uint64_t *)((char *)v26 + *(void *)(v50 + 296));
            uint64_t v53 = *v51;
            unint64_t v52 = v51[1];
            swift_bridgeObjectRetain();
            uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v52, (uint64_t *)&v111);
            OUTLINED_FUNCTION_10_64(v54);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v47, v46, "%s.processIntentConversionResult returning unsupported device GroupFaceTime", v49, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }
          else
          {

            swift_release();
          }
          OUTLINED_FUNCTION_6_89();
          v28();
          type metadata accessor for StartCallCATs();
          static CATOption.defaultMode.getter();
          uint64_t v71 = CATWrapper.__allocating_init(options:globals:)();
          type metadata accessor for StartCallCATsSimple();
          static CATOption.defaultMode.getter();
          uint64_t v72 = CATWrapperSimple.__allocating_init(options:globals:)();
          type metadata accessor for PhoneCallDisplayTextCATsSimple();
          static CATOption.defaultMode.getter();
          uint64_t v73 = CATWrapperSimple.__allocating_init(options:globals:)();
          type metadata accessor for UnsupportedFlowCATs();
          static CATOption.defaultMode.getter();
          uint64_t v74 = CATWrapper.__allocating_init(options:globals:)();
          type metadata accessor for UnsupportedFaceTimeOutputProvider();
          uint64_t v75 = swift_allocObject();
          uint64_t v76 = specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)(9, &v111, v71, v72, v73, v74, 0, 0, 0, 0, v75);
          uint64_t v77 = (*(uint64_t (**)(void))(*(void *)v76 + 144))();
          uint64_t v78 = v106;
          *uint64_t v106 = v77;
          swift_storeEnumTagMultiPayload();
          OUTLINED_FUNCTION_19();
          uint64_t v80 = *(void (**)(uint64_t *))(v79 + 136);
          swift_retain();
          v80(v78);
          swift_release();
          swift_release();
          id v30 = v96;
        }
      }
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v81 = type metadata accessor for Logger();
      __swift_project_value_buffer(v81, (uint64_t)static Logger.siriPhone);
      swift_retain();
      uint64_t v82 = Logger.logObject.getter();
      os_log_type_t v83 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v82, v83))
      {
        id v84 = v30;
        uint64_t v85 = (uint8_t *)OUTLINED_FUNCTION_47();
        uint64_t v86 = OUTLINED_FUNCTION_14_0();
        uint64_t v105 = v14;
        *(void *)&long long v111 = v86;
        *(_DWORD *)uint64_t v85 = 136315138;
        OUTLINED_FUNCTION_19();
        uint64_t v88 = (uint64_t *)((char *)v26 + *(void *)(v87 + 296));
        uint64_t v90 = *v88;
        unint64_t v89 = v88[1];
        swift_bridgeObjectRetain();
        v108[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v89, (uint64_t *)&v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        id v30 = v84;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v82, v83, "%s.processIntentConversionResult setting state to runRCH", v85, 0xCu);
        swift_arrayDestroy();
        uint64_t v14 = v105;
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release();
      }
      OUTLINED_FUNCTION_19();
      uint64_t v92 = (uint64_t)v97;
      *(void *)&long long v111 = (*(uint64_t (**)(char *, id, uint64_t))(v91 + 328))(v97, v30, v99);
      type metadata accessor for RCHFlowResult();
      type metadata accessor for AnyValueFlow();
      swift_getWitnessTable();
      uint64_t v93 = Flow.eraseToAnyValueFlow()();
      swift_release();
      *uint64_t v106 = v93;
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_14_46();
      v94();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v92, v14);
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v66 = type metadata accessor for Logger();
      __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v67, v68))
      {
        os_log_type_t v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v69 = 0;
        _os_log_impl(&dword_0, v67, v68, "Could not convert Intent, stopping", v69, 2u);
        OUTLINED_FUNCTION_6();
      }

      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_14_46();
      v70();
      swift_release();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
    }
  }
  else
  {
    uint64_t v106 = (uint64_t *)v13;
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v55(v1, v7);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
    swift_retain();
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.debug.getter();
    int v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v60 = OUTLINED_FUNCTION_47();
      LODWORD(v104) = v59;
      uint64_t v61 = (uint8_t *)v60;
      uint64_t v105 = OUTLINED_FUNCTION_14_0();
      *(void *)&long long v111 = v105;
      uint64_t v103 = v61;
      *(_DWORD *)uint64_t v61 = 136315138;
      uint64_t v101 = v61 + 4;
      uint64_t v62 = v106;
      OUTLINED_FUNCTION_17_39();
      v63();
      PhoneCallFlowState.description.getter(v7);
      OUTLINED_FUNCTION_21_43();
      v55((uint64_t)v62, v7);
      uint64_t v64 = OUTLINED_FUNCTION_16_56();
      OUTLINED_FUNCTION_10_64(v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v57, (os_log_type_t)v104, "Unexpected state, stopping: %s", v103, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release();
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_14_46();
    v65();
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t CallingFlowAbstraction.__allocating_init(app:flowName:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CallingFlowAbstraction.init(app:flowName:sharedGlobals:)(a1, a2, a3, a4);
}

void CallingFlowAbstraction.__allocating_init(state:app:flowName:sharedGlobals:)()
{
}

void CallingFlowAbstraction.init(state:app:flowName:sharedGlobals:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = *v0;
  uint64_t v12 = type metadata accessor for PhoneCallFlowState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v21 - v16;
  *(uint64_t *)((char *)v0 + *(void *)(v11 + 288)) = v8;
  OUTLINED_FUNCTION_22();
  uint64_t v19 = (uint64_t *)((char *)v0 + *(void *)(v18 + 296));
  *uint64_t v19 = v6;
  v19[1] = v4;
  OUTLINED_FUNCTION_12();
  v20();
  outlined init with copy of SignalProviding(v2, (uint64_t)v22);
  PhoneFlow.init(state:sharedGlobals:)((uint64_t)v17, v22);
  __swift_destroy_boxed_opaque_existential_1(v2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v10, v12);
  OUTLINED_FUNCTION_26_1();
}

uint64_t (*implicit closure #5 in CallingFlowAbstraction.prepare(completion:)())()
{
  return partial apply for implicit closure #6 in implicit closure #5 in CallingFlowAbstraction.prepare(completion:);
}

uint64_t (*implicit closure #5 in CallingFlowAbstraction.execute()(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  return partial apply for implicit closure #6 in implicit closure #5 in CallingFlowAbstraction.execute();
}

uint64_t CallingFlowAbstraction.makeRCHFlow(input:intent:app:)()
{
  uint64_t v0 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v12 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020, 0x800000000049C4B0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void CallingFlowAbstraction.init(sharedGlobals:)()
{
}

void CallingFlowAbstraction.init(state:sharedGlobals:)()
{
}

uint64_t CallingFlowAbstraction.__ivar_destroyer()
{
  OUTLINED_FUNCTION_22();
  swift_release();
  OUTLINED_FUNCTION_22();

  return swift_bridgeObjectRelease();
}

uint64_t CallingFlowAbstraction.__deallocating_deinit()
{
  CallingFlowAbstraction.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for PreparableFlow.prepare(completion:) in conformance CallingFlowAbstraction<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 320))();
}

uint64_t sub_3BA97C()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t type metadata completion function for CallingFlowAbstraction()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CallingFlowAbstraction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_3BAA20()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for implicit closure #6 in implicit closure #5 in CallingFlowAbstraction.execute()()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 216))();
}

uint64_t OUTLINED_FUNCTION_10_64(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_16_56()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0, v1, (uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_18_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_52()
{
  return type metadata accessor for Input();
}

uint64_t HandleIntentSubmitter.submit(app:intent:)(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  OUTLINED_FUNCTION_2();
  v3[17] = v4;
  return _swift_task_switch(HandleIntentSubmitter.submit(app:intent:), 0, 0);
}

uint64_t HandleIntentSubmitter.submit(app:intent:)()
{
  id v29 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)v0[15];
  uint64_t v2 = type metadata accessor for Logger();
  v0[18] = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  swift_retain_n();
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[16];
    uint64_t v7 = v0[14];
    id v27 = (id)v0[15];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    v0[9] = v6;
    type metadata accessor for HandleIntentSubmitter();
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)();
    v0[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[11] = v7;
    type metadata accessor for App();
    lazy protocol witness table accessor for type App and conformance App();
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2080;
    id v13 = [v27 typeName];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    v0[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v5, "#%s Submitting single HandleIntent for app: %s, intent: %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    uint64_t v17 = (void *)v0[15];

    swift_release_n();
    swift_release_n();
  }
  uint64_t v18 = (void *)v0[15];
  uint64_t v19 = (void *)v0[16];
  HandleIntentSubmitter.applyAppToIntent(app:intent:)(v0[14], v18);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAIntentGroupHandleIntent);
  id v20 = SAIntentGroupHandleIntent.init(intent:appIdentifier:)(v18, 0, 0);
  v0[19] = v20;
  uint64_t v21 = v19 + 2;
  uint64_t v22 = v19[5];
  uint64_t v23 = v19[6];
  __swift_project_boxed_opaque_existential_1(v21, v22);
  uint64_t v24 = (void *)swift_task_alloc();
  v0[20] = v24;
  uint64_t v25 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAIntentGroupHandleIntentCompleted);
  *uint64_t v24 = v0;
  v24[1] = HandleIntentSubmitter.submit(app:intent:);
  return AceServiceInvokerAsync.submit<A>(_:)(v20, v22, v25, v23);
}

{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t (*v4)(id);
  uint64_t v6;

  unint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[19];
  id v3 = HandleIntentSubmitter.makeIntentResponse(from:)(v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

{
  void *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t (*v10)(void);
  uint64_t v12[2];
  void *v13;
  uint64_t v14;

  id v13 = v0;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  unint64_t v1 = Logger.logObject.getter();
  uint64_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[7] = v3;
    type metadata accessor for HandleIntentSubmitter();
    swift_retain();
    os_log_type_t v5 = String.init<A>(describing:)();
    v0[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v6, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v7 = Error.localizedDescription.getter();
    v0[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "#%s makeIntentResponse threw an error: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = (void *)v0[19];
  swift_willThrow();

  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t HandleIntentSubmitter.submit(app:intent:)(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    os_log_type_t v5 = HandleIntentSubmitter.submit(app:intent:);
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    os_log_type_t v5 = HandleIntentSubmitter.submit(app:intent:);
  }
  return _swift_task_switch(v5, 0, 0);
}

id HandleIntentSubmitter.makeIntentResponse(from:)(void *a1)
{
  OUTLINED_FUNCTION_2();
  id result = [v2 intentResponse];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = result;
  id v5 = [result typeName];

  id result = [a1 intentResponse];
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  id v7 = [result data];

  if (v7)
  {
    uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    v11.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data._Representation(v8, v10);
  }
  else
  {
    v11.super.Class isa = 0;
  }
  id v12 = (id)INIntentResponseCreate();

  if (v12)
  {
    id result = (id)swift_dynamicCastUnknownClass();
    if (result) {
      return result;
    }
  }
  return 0;
}

uint64_t type metadata accessor for HandleIntentSubmitter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata completion function for HandleIntentSubmitter()
{
  return swift_initClassMetadata2();
}

uint64_t AppDescription.init(id:appName:appBundleId:isFirstParty:rskeCommand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  uint64_t v22 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a7, a1, v14);
  uint64_t v17 = (int *)type metadata accessor for AppDescription();
  uint64_t v18 = (void *)(a7 + v17[5]);
  *uint64_t v18 = a2;
  v18[1] = a3;
  uint64_t v19 = (void *)(a7 + v17[6]);
  *uint64_t v19 = a4;
  v19[1] = a5;
  *(unsigned char *)(a7 + v17[7]) = a6;
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  CodableAceObject.init(wrappedValue:)();
  id v20 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);

  return v20(a1, v14);
}

uint64_t type metadata accessor for AppDescription()
{
  uint64_t result = type metadata singleton initialization cache for AppDescription;
  if (!type metadata singleton initialization cache for AppDescription) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t AppDisambiguationModel.responseViewId.getter()
{
  return 0xD000000000000011;
}

uint64_t AppDescription.id.getter()
{
  type metadata accessor for UUID();
  uint64_t v0 = OUTLINED_FUNCTION_7_0();

  return v1(v0);
}

uint64_t AppDescription.appName.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t AppDescription.appBundleId.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t AppDescription.isFirstParty.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppDescription() + 28));
}

uint64_t AppDescription.rskeCommand.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for AppDescription.rskeCommand : AppDescription(id *a1)
{
  id v1 = *a1;
  return AppDescription.rskeCommand.setter();
}

uint64_t AppDescription.rskeCommand.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

void (*AppDescription.rskeCommand.modify(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t static AppDescription.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for AppDescription() + 24);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  id v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t AppDescription.hash(into:)()
{
  type metadata accessor for AppDescription();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_7_0();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t AppDescription.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656D614E707061 && a2 == 0xE700000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x5074737269467369 && a2 == 0xEC00000079747261;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6D6D6F43656B7372 && a2 == 0xEB00000000646E61)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t AppDescription.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656D614E707061;
      break;
    case 2:
      uint64_t result = 0x6C646E7542707061;
      break;
    case 3:
      uint64_t result = 0x5074737269467369;
      break;
    case 4:
      uint64_t result = 0x6D6D6F43656B7372;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDescription.CodingKeys()
{
  return AppDescription.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDescription.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = AppDescription.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDescription.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDescription.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppDescription.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDescription.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for AppDescription();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

Swift::Int AppDescription.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t AppDescription.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v27 = v3;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  uint64_t v29 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v31 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDescription.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = (int *)type metadata accessor for AppDescription();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v32) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v17, v31, v8);
  uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v19 = (uint64_t *)(v17 + v14[5]);
  *uint64_t v19 = v18;
  v19[1] = v20;
  uint64_t v21 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v22 = (uint64_t *)(v17 + v14[6]);
  *uint64_t v22 = v21;
  v22[1] = v23;
  *(unsigned char *)(v17 + v14[7]) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v24 = OUTLINED_FUNCTION_8_91();
  v25(v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v17 + v14[8], v7, v30);
  outlined init with copy of AppDescription(v17, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return outlined destroy of AppDescription(v17);
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppDescription@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppDescription.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppDescription(void *a1)
{
  return AppDescription.encode(to:)(a1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AppDescription()
{
  return Hasher._finalize()();
}

uint64_t outlined init with copy of AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of AppDescription(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AppDisambiguationModel.prompt.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AppDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7263736544707061 && a2 == 0xEF736E6F69747069;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t AppDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x74706D6F7270;
  }
  else {
    return 0x7263736544707061;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDisambiguationModel.CodingKeys()
{
  return AppDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = AppDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppDisambiguationModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDisambiguationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_53();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
  lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](&lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A], &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1) {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t AppDisambiguationModel.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDisambiguationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_53();
  uint64_t v4 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
    lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](&lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A], &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v4 = v8;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v6 = OUTLINED_FUNCTION_4_97();
    v7(v6);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [AppDescription]);
    lazy protocol witness table accessor for type UUID and conformance UUID(a2, (void (*)(uint64_t))type metadata accessor for AppDescription);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in AppDescription()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t base witness table accessor for Equatable in AppDescription()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AppDescription and conformance AppDescription, (void (*)(uint64_t))type metadata accessor for AppDescription);
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance AppDisambiguationModel()
{
  return 0xD000000000000011;
}

unint64_t instantiation function for generic protocol witness table for AppDisambiguationModel(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppDisambiguationModel@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = AppDisambiguationModel.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppDisambiguationModel(void *a1)
{
  return AppDisambiguationModel.encode(to:)(a1);
}

uint64_t sub_3BCE10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppDescription.rskeCommand.getter();
  *a1 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for AppDescription(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3BD44C);
}

uint64_t sub_3BD44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppDescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3BD518);
}

void sub_3BD518(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v11 = a1 + *(int *)(a4 + 32);
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void type metadata completion function for AppDescription()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for AppDisambiguationModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for AppDisambiguationModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppDisambiguationModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AppDisambiguationModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppDisambiguationModel()
{
  return &type metadata for AppDisambiguationModel;
}

unsigned char *storeEnumTagSinglePayload for AppDisambiguationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3BD8B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for AppDisambiguationModel.CodingKeys()
{
  return &unk_56B360;
}

unsigned char *storeEnumTagSinglePayload for AppDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3BD9B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for AppDescription.CodingKeys()
{
  return &unk_56B3F0;
}

uint64_t OUTLINED_FUNCTION_3_101()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_4_97()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_91()
{
  return *(void *)(v0 - 96);
}

id SCHCardItemComponents.toCardItem()()
{
  id v1 = [objc_allocWithZone((Class)SASTCardItem) init];
  id v2 = [objc_allocWithZone((Class)SAUIDecoratedText) init];
  CallRecordDisplayTextComponents.callerNameText.getter();
  outlined bridged method (mbnn) of @objc SAUIDecoratedText.text.setter();
  [v1 setTitle:v2];

  if ([*v0 callRecordType] == (char *)&dword_0 + 2)
  {
    if (one-time initialization token for missedRed != -1) {
      swift_once();
    }
    id v3 = (id)static ColorFactory.missedRed;
  }
  else
  {
    id v3 = (id)static ColorFactory.white.getter();
  }
  unsigned int v4 = v3;
  [v1 setTitleTextColor:v3];

  id v5 = SCHCardItemComponents.dateString.getter();
  [v1 setFootnote:v5];

  if (one-time initialization token for watchDarkCardItemBackgroundColor != -1) {
    swift_once();
  }
  [v1 setBackgroundColor:static ColorFactory.watchDarkCardItemBackgroundColor];
  if (one-time initialization token for watchDarkCardItemTitleBackgroundColor != -1) {
    swift_once();
  }
  [v1 setTitleBackgroundColor:static ColorFactory.watchDarkCardItemTitleBackgroundColor];
  return v1;
}

id SCHCardItemComponents.callerName.getter()
{
  id v0 = [objc_allocWithZone((Class)SAUIDecoratedText) init];
  CallRecordDisplayTextComponents.callerNameText.getter();
  outlined bridged method (mbnn) of @objc SAUIDecoratedText.text.setter();
  return v0;
}

id SCHCardItemComponents.dateString.getter()
{
  uint64_t v0 = CallRecordDisplayTextComponents.callDateText.getter();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  id v4 = [objc_allocWithZone((Class)SAUIDecoratedText) init];
  CallRecordDisplayTextComponents.callDateText.getter();
  outlined bridged method (mbnn) of @objc SAUIDecoratedText.text.setter();
  return v4;
}

ValueMetadata *type metadata accessor for SCHCardItemComponents()
{
  return &type metadata for SCHCardItemComponents;
}

Swift::Void __swiftcall SiriKitEventSending.sendCallStateEvent(hangUpIntentResponse:)(INHangUpCallIntentResponse hangUpIntentResponse)
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  type metadata accessor for ActivityType();
  OUTLINED_FUNCTION_0_0();
  uint64_t v61 = v8;
  uint64_t v62 = v7;
  __chkstk_darwin(v7);
  uint64_t v67 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriKitReliabilityCodes?);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v63 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v59 - v13;
  uint64_t v15 = type metadata accessor for SiriKitReliabilityCodes();
  OUTLINED_FUNCTION_0_0();
  uint64_t v17 = v16;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)v59 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v59 - v25;
  uint64_t v64 = v5;
  uint64_t v65 = v3;
  SiriKitEventSending.makeIntentResponseToCallState(hangUpIntentResponse:)(hangUpIntentResponse.super.super.isa, (uint64_t)v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
  {
    outlined destroy of SiriKitReliabilityCodes?((uint64_t)v14);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_0, v28, v29, "#SiriKitEventSending Could not map IntentResponse to a loggable call state", v30, 2u);
      OUTLINED_FUNCTION_6();
    }

    return;
  }
  v59[1] = v4;
  uint64_t v31 = v17;
  (*((void (**)(char *, char *, uint64_t))v17 + 4))(v26, v14, v15);
  uint64_t v32 = v17;
  if (one-time initialization token for kUnsupportedCallStates != -1) {
    swift_once();
  }
  char v33 = specialized Set.contains(_:)((uint64_t)v26, kUnsupportedCallStates);
  uint64_t v34 = (void (*)(void))*((void *)v17 + 2);
  uint64_t v66 = v26;
  OUTLINED_FUNCTION_8_12();
  v34();
  uint64_t v35 = v67;
  if (v33)
  {
    uint64_t v36 = (void (*)(void))*((void *)v31 + 1);
    ((void (*)(char *, uint64_t))v36)(v24, v15);
LABEL_21:
    unint64_t v47 = v32;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    __swift_project_value_buffer(v48, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_8_12();
    v34();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v60 = v36;
      uint64_t v68 = v52;
      uint64_t v67 = v47;
      *(_DWORD *)uint64_t v51 = 136315138;
      uint64_t v53 = SiriKitReliabilityCodes.rawValue.getter();
      uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v68);
      OUTLINED_FUNCTION_4_98(v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v56 = v60;
      ((void (*)(char *, uint64_t))v60)(v21, v15);
      _os_log_impl(&dword_0, v49, v50, "#SiriKitEventSending callState %s could not be logged because it is not supported. Sending calls and held calls should be treated as active.", v51, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      OUTLINED_FUNCTION_1_103();
      v56();
    }
    else
    {

      OUTLINED_FUNCTION_1_103();
      v36();
      OUTLINED_FUNCTION_1_103();
      v36();
    }
    return;
  }
  if (one-time initialization token for kSupportedCallStates != -1) {
    swift_once();
  }
  char v37 = specialized Set.contains(_:)((uint64_t)v24, kSupportedCallStates);
  uint64_t v60 = (void (*)(void))*((void *)v31 + 1);
  ((void (*)(char *, uint64_t))v60)(v24, v15);
  if ((v37 & 1) == 0)
  {
    uint64_t v36 = v60;
    goto LABEL_21;
  }
  type metadata accessor for SiriKitEvent();
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v35, enum case for ActivityType.getCallBackgroundState(_:), v62);
  if (one-time initialization token for emptyHangUpCallIntent != -1) {
    swift_once();
  }
  id v38 = [(id)static PhoneCallIntentClassNames.emptyHangUpCallIntent typeName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v39 = (uint64_t)v63;
  OUTLINED_FUNCTION_8_12();
  v34();
  __swift_storeEnumTagSinglePayload(v39, 0, 1, v15);
  SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v41, v42))
  {
    char v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)char v43 = 136315138;
    uint64_t v44 = SiriKitEvent.debugDescription.getter();
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v68);
    OUTLINED_FUNCTION_4_98(v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v41, v42, "#SiriKitEventSending logging GetCallBackgroundState: %s", v43, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v57 = v66;
  os_log_type_t v58 = v60;
  dispatch thunk of SiriKitEventSending.send(_:)();
  swift_release();
  ((void (*)(char *, uint64_t))v58)(v57, v15);
}

void one-time initialization function for kSupportedCallStates()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SiriKitReliabilityCodes>);
  uint64_t v0 = type metadata accessor for SiriKitReliabilityCodes();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_46A250;
  unint64_t v5 = v4 + v3;
  unsigned int v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for SiriKitReliabilityCodes.callStateActive(_:), v0);
  v6(v5 + v2, enum case for SiriKitReliabilityCodes.callStateRingIncoming(_:), v0);
  v6(v5 + 2 * v2, enum case for SiriKitReliabilityCodes.callStateDisconnected(_:), v0);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  kSupportedCallStates = v7;
}

void one-time initialization function for kUnsupportedCallStates()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SiriKitReliabilityCodes>);
  uint64_t v0 = type metadata accessor for SiriKitReliabilityCodes();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  unint64_t v5 = v4 + v3;
  unsigned int v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for SiriKitReliabilityCodes.callStateRingOutgoing(_:), v0);
  v6(v5 + v2, enum case for SiriKitReliabilityCodes.callStateHeld(_:), v0);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  kUnsupportedCallStates = v7;
}

uint64_t SiriKitEventSending.makeIntentResponseToCallState(hangUpIntentResponse:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if ([a1 code] == (char *)&dword_4 + 2)
  {
    uint64_t v4 = (unsigned int *)&enum case for SiriKitReliabilityCodes.callStateDisconnected(_:);
LABEL_7:
    uint64_t v5 = *v4;
    uint64_t v6 = type metadata accessor for SiriKitReliabilityCodes();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(a2, v5, v6);
    uint64_t v7 = a2;
    uint64_t v8 = 0;
    uint64_t v9 = v6;
    goto LABEL_8;
  }
  if ([a1 hungUpCallType] == (char *)&dword_4 + 3)
  {
    uint64_t v4 = (unsigned int *)&enum case for SiriKitReliabilityCodes.callStateActive(_:);
    goto LABEL_7;
  }
  if ([a1 hungUpCallType] == (char *)&dword_4 + 2)
  {
    uint64_t v4 = (unsigned int *)&enum case for SiriKitReliabilityCodes.callStateRingIncoming(_:);
    goto LABEL_7;
  }
  uint64_t v9 = type metadata accessor for SiriKitReliabilityCodes();
  uint64_t v7 = a2;
  uint64_t v8 = 1;
LABEL_8:

  return __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
}

uint64_t outlined destroy of SiriKitReliabilityCodes?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriKitReliabilityCodes?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t closure #1 in SiriKitEventSending.sendCallStateEvent(hangUpIntentResponse:)()
{
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.parameterName.setter();
}

uint64_t OUTLINED_FUNCTION_4_98(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t PreferredCallProviderSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)()
{
  OUTLINED_FUNCTION_4_99();
  return (*(uint64_t (**)(void))(class metadata base offset for StartCallCATs + v0 + 1408))();
}

uint64_t PreferredCallProviderSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for INPreferredCallProvider(0);
  if (swift_dynamicCast()) {
    uint64_t v17 = v25[1];
  }
  else {
    uint64_t v17 = (*(uint64_t (**)(void))(*(void *)(*(void *)(*(void *)(a9 + 32) + 8) + 16) + 8))(*(void *)(a9 + 16));
  }
  uint64_t v18 = *(void **)(v9 + 40);
  if (v17)
  {
    uint64_t v19 = INPreferredCallProviderGetBackingType();
    switch(v19)
    {
      case 4:
        uint64_t v20 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v20 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v20 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v20 = +[NSString stringWithFormat:@"(unknown: %i)", v19];
        goto LABEL_14;
    }
    uint64_t v21 = v20;
LABEL_14:
    uint64_t v22 = v20;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  SpeakableString.init(print:speak:)();
  uint64_t v23 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v18 + 128))(v15, a7, a8);
  return outlined destroy of SpeakableString?((uint64_t)v15);
}

uint64_t PreferredCallProviderSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)()
{
  OUTLINED_FUNCTION_4_99();
  return (*(uint64_t (**)(void))(class metadata base offset for StartCallCATs + v0 + 480))();
}

uint64_t PreferredCallProviderSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(int a1, int a2, int a3, id a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  switch((unint64_t)[a4 unsupportedReason])
  {
    case 1uLL:
      uint64_t v12 = *(void **)(v10 + 40);
      type metadata accessor for SirikitDeviceState();
      outlined init with copy of SignalProviding(v10, (uint64_t)v21);
      uint64_t v13 = SirikitDeviceState.__allocating_init(from:)();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                + *v12
                                                                + 2144))(v13, 0, a8, a9);
      goto LABEL_5;
    case 3uLL:
      OUTLINED_FUNCTION_4_99();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v14 + 2048))(a8, a9);
      break;
    case 6uLL:
      OUTLINED_FUNCTION_4_99();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v20 + 2080))(a8, a9);
      break;
    default:
      type metadata accessor for PhoneStartCallIntent(0);
      id v16 = OUTLINED_FUNCTION_2_116();
      OUTLINED_FUNCTION_1_104(v16);
      uint64_t v17 = type metadata accessor for SirikitDeviceState();
      OUTLINED_FUNCTION_3_102(v17);
      SirikitDeviceState.__allocating_init(from:)();
      uint64_t v18 = OUTLINED_FUNCTION_0_69();
      v19(v18);
      swift_release();
LABEL_5:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t protocol witness for SlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:) in conformance PreferredCallProviderSlotTemplating<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return PreferredCallProviderSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:) in conformance PreferredCallProviderSlotTemplating<A, B>()
{
  return PreferredCallProviderSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)();
}

uint64_t protocol witness for SlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:) in conformance PreferredCallProviderSlotTemplating<A, B>(int a1, int a2, int a3, id a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return PreferredCallProviderSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t type metadata accessor for PreferredCallProviderSlotTemplating()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OUTLINED_FUNCTION_0_69()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_104(void *a1)
{
  return specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)(a1, 0, v1, v2, v3);
}

id OUTLINED_FUNCTION_2_116()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_102(uint64_t a1, ...)
{
  va_start(va, a1);
  return outlined init with copy of SignalProviding(v1, (uint64_t)va);
}

uint64_t RedirectToServerFlow.__allocating_init(to:sharedGlobals:isSentinelFlow:)(char a1, long long *a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  RedirectToServerFlow.init(to:sharedGlobals:isSentinelFlow:)(a1, a2, a3);
  return v6;
}

uint64_t RedirectToServerFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t protocol witness for Flow.execute(completion:) in conformance RedirectToServerFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for Flow.exitValue.getter in conformance RedirectToServerFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RedirectToServerFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t base witness table accessor for Flow in RedirectToServerFlow()
{
  return _s27PhoneCallFlowDelegatePlugin016RedirectToServerC0CAC07SiriKitC00C0AAWlTm_0(&lazy protocol witness table cache variable for type RedirectToServerFlow and conformance RedirectToServerFlow);
}

uint64_t base witness table accessor for SiriEnvironmentLocating in RedirectToServerFlow()
{
  return _s27PhoneCallFlowDelegatePlugin016RedirectToServerC0CAC07SiriKitC00C0AAWlTm_0(&lazy protocol witness table cache variable for type RedirectToServerFlow and conformance RedirectToServerFlow);
}

uint64_t _s27PhoneCallFlowDelegatePlugin016RedirectToServerC0CAC07SiriKitC00C0AAWlTm_0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RedirectToServerFlow();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_117()
{
  return *(void *)(v0 + 208);
}

uint64_t OUTLINED_FUNCTION_3_103()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_90()
{
  return v0;
}

uint64_t ReadCallHistoryResultSetFlowProvider.__allocating_init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  ReadCallHistoryResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:)(a1, a2, a3, a4, a5);
  return v10;
}

unint64_t ReadCallHistoryResultSetFlowProvider.patternId.getter()
{
  return 0xD000000000000029;
}

id ReadCallHistoryResultSetFlowProvider.bundle.getter()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = [self bundleForClass:ObjCClassFromMetadata];

  return v1;
}

uint64_t ReadCallHistoryResultSetFlowProvider.totalItemCount.getter()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 168))();
  if (v1 >> 62) {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t key path setter for ReadCallHistoryResultSetFlowProvider.items : ReadCallHistoryResultSetFlowProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 176);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ReadCallHistoryResultSetFlowProvider.items.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t ReadCallHistoryResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int v59 = (void *)type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6[37] = type metadata accessor for ReadCallHistoryResultSetFlowProvider();
  v6[38] = &outlined read-only object #0 of ReadCallHistoryResultSetFlowProvider.init(app:intent:intentResponse:sharedGlobals:searchCallHistorySharedGlobals:);
  v6[39] = 0;
  v6[40] = 0;
  v6[11] = a1;
  v6[8] = a2;
  v6[9] = a3;
  uint64_t v54 = a4;
  outlined init with copy of SignalProviding(a4, (uint64_t)(v6 + 3));
  uint64_t v53 = a5;
  outlined init with copy of SearchCallHistorySharedGlobals(a5, (uint64_t)(v6 + 12));
  id v15 = a2;
  id v16 = a3;
  id v17 = v15;
  id v18 = v16;
  swift_retain();
  uint64_t v52 = a1;
  Swift::Bool v19 = App.isFirstParty()();
  uint64_t v51 = v6;
  id v56 = v17;
  if (v19)
  {
    uint64_t v20 = static SearchCallHistoryCatParameterHelper.makePhonePersons1P(intent:intentResponse:)(v17, (unint64_t)v18);

    id v21 = v18;
    goto LABEL_8;
  }
  id v22 = [v17 recipient];
  if (v22)
  {
    uint64_t v23 = v22;
    type metadata accessor for PhonePerson(0);
    id v24 = v23;
    static Device.current.getter();
    __swift_project_boxed_opaque_existential_1(&v60, v62);
    OUTLINED_FUNCTION_62();
    dispatch thunk of DeviceState.siriLocale.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
    uint64_t v25 = static PhonePerson.make(phonePerson:options:locale:)(v23, 0, (uint64_t)v14);

    OUTLINED_FUNCTION_12_20();
    v26();
    if (v25)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_46A030;
      *(void *)(v27 + 32) = v25;
      uint64_t v60 = (void *)v27;
      specialized Array._endMutation()();
      uint64_t v20 = v60;

      id v21 = v18;
      uint64_t v6 = v51;
      id v17 = v56;
      goto LABEL_8;
    }

    uint64_t v6 = v51;
  }
  id v21 = v18;

  uint64_t v20 = _swiftEmptyArrayStorage;
  id v17 = v56;
LABEL_8:
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  type metadata accessor for PhonePersonList();
  uint64_t v28 = PhonePersonList.__allocating_init(list:)((uint64_t)v20);
  v6[10] = PhoneSearchCallHistoryIntent.__allocating_init(intent:recipients:)(v17, v28);
  uint64_t v29 = outlined bridged method (pb) of @objc INAnswerCallIntentResponse.callRecords.getter(v21);
  if (v29) {
    unint64_t v30 = v29;
  }
  else {
    unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8));
  }
  id v55 = v21;
  if (v31)
  {
    uint64_t v63 = _swiftEmptyArrayStorage;
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (v31 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v58 = v31;
    uint64_t v33 = 0;
    unint64_t v57 = v30 & 0xC000000000000001;
    uint64_t v34 = (void *)v30;
    do
    {
      if (v57) {
        uint64_t v35 = (__CFString *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v35 = (__CFString *)*(id *)(v30 + 8 * v33 + 32);
      }
      uint64_t v36 = v35;
      ++v33;
      type metadata accessor for AppInfoBuilder();
      uint64_t v37 = swift_allocObject();
      static Device.current.getter();
      __swift_project_boxed_opaque_existential_1(&v60, v62);
      OUTLINED_FUNCTION_62();
      dispatch thunk of DeviceState.siriLocale.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
      swift_retain();
      specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(v36, 1, v37, v14);
      type metadata accessor for PhoneCallRecord(0);
      swift_allocObject();
      PhoneCallRecord.init(builder:)();
      OUTLINED_FUNCTION_10_8();
      v38();
      swift_release_n();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      unint64_t v30 = (unint64_t)v34;
    }
    while (v58 != v33);
    uint64_t v39 = v63;
    swift_bridgeObjectRelease();
    uint64_t v6 = v51;
    id v21 = v55;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = _swiftEmptyArrayStorage;
  }
  v6[2] = v39;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    int v59 = (void *)swift_slowAlloc();
    uint64_t v60 = 0;
    uint64_t v63 = v59;
    *(_DWORD *)uint64_t v43 = 136315394;
    uint64_t v44 = v6[37];
    uint64_t v45 = v6[38];
    uint64_t v46 = v6[39];
    uint64_t v47 = v6[40];
    unint64_t v61 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v44, v45, v46, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v60, v61, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v43 + 12) = 1024;
    swift_retain();
    specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
    char v49 = v48;
    swift_release();
    swift_release();
    LODWORD(v60) = v49 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_0, v41, v42, "%s initiated, isMissedCall:%{BOOL}d", (uint8_t *)v43, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
  swift_release();

  outlined destroy of SearchCallHistorySharedGlobals(v53);
  __swift_destroy_boxed_opaque_existential_1(v54);
  return (uint64_t)v6;
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeSingleItemFlow()()
{
  OUTLINED_FUNCTION_1_0();
  v1[50] = v0;
  uint64_t v2 = type metadata accessor for PhoneError();
  v1[51] = v2;
  OUTLINED_FUNCTION_11_0(v2);
  v1[52] = OUTLINED_FUNCTION_35();
  uint64_t v3 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v3);
  v1[53] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  v1[54] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[55] = v5;
  v1[56] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for ResponseMode();
  v1[57] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[58] = v7;
  v1[59] = OUTLINED_FUNCTION_28_2();
  v1[60] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SpeakableString();
  v1[61] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[62] = v9;
  v1[63] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[42] = v1;
  v2[43] = v4;
  v2[44] = v0;
  OUTLINED_FUNCTION_24_6();
  *uint64_t v5 = *v1;
  *(void *)(v6 + 544) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_6();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[45] = v1;
  v2[46] = v4;
  v2[47] = v0;
  OUTLINED_FUNCTION_24_6();
  *uint64_t v5 = *v1;
  *(void *)(v6 + 568) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_6();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t (*v6)(void);
  uint64_t v8;

  uint64_t v1 = (void *)v0[65];
  uint64_t v2 = v0[63];
  uint64_t v3 = v0[61];
  uint64_t v4 = v0[62];
  swift_release();

  OUTLINED_FUNCTION_10_8();
  v5();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_22_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v6();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void **)(v0 + 520);
  swift_release();

  uint64_t v2 = OUTLINED_FUNCTION_6_90();
  v3(v2);
  OUTLINED_FUNCTION_22_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

#error "3C0474: call analysis failed (funcsize=561)"

uint64_t ReadCallHistoryResultSetFlowProvider.makeSingleItemFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_31_15();
  OUTLINED_FUNCTION_12_20();
  v19();
  uint64_t v20 = OUTLINED_FUNCTION_8_92();
  v21(v20);
  OUTLINED_FUNCTION_61_15();
  id v22 = (void *)swift_task_alloc();
  long long v22[2] = 0;
  v22[3] = 0;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_22();
  swift_release();

  uint64_t v23 = OUTLINED_FUNCTION_49_23();
  v24(v23);
  OUTLINED_FUNCTION_26_0();
  v25();
  __swift_destroy_boxed_opaque_existential_1(v18 + 256);
  OUTLINED_FUNCTION_22_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_39();
  return v28(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

{
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  void *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_31_15();
  Swift::Bool v19 = OUTLINED_FUNCTION_8_92();
  v20(v19);
  OUTLINED_FUNCTION_61_15();
  id v21 = (void *)swift_task_alloc();
  void v21[2] = 0;
  void v21[3] = 0;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_22();
  swift_release();

  id v22 = OUTLINED_FUNCTION_49_23();
  v23(v22);
  OUTLINED_FUNCTION_26_0();
  v24();
  __swift_destroy_boxed_opaque_existential_1(v18 + 256);
  OUTLINED_FUNCTION_22_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_39();
  return v27(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t closure #1 in ReadCallHistoryResultSetFlowProvider.makeSingleItemFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = *(void *)(a2 + 80);
  uint64_t v8 = a5(0);
  uint64_t v9 = *(int *)(v8 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + v9) = v7;
  uint64_t v10 = *(int *)(v8 + 20);
  swift_retain();
  swift_release();
  *(void *)(a1 + v10) = a3;
  outlined destroy of SpeakableString?(a1);
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_27_8();
  v12();
  OUTLINED_FUNCTION_36_11();

  return __swift_storeEnumTagSinglePayload(v13, v14, v15, v11);
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeEmptyResultSetFlow()()
{
  OUTLINED_FUNCTION_1_0();
  v1[8] = v0;
  uint64_t v2 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v2);
  v1[9] = OUTLINED_FUNCTION_35();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v1[10] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[11] = v4;
  v1[12] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 120) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = (void *)v0[8];
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 128))(v3, v4);
  OUTLINED_FUNCTION_60_18(v0 + 2, v0[5]);
  dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)();

  OUTLINED_FUNCTION_26();
  v5();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = OUTLINED_FUNCTION_12_2();
  return v7(v6);
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeEmptyResultSetFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, _DWORD *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_43();
  a27 = v29;
  a28 = v30;
  a26 = v28;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_44_4();
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v35 = (void *)v28[8];
  if (v34)
  {
    a12 = v28 + 7;
    uint64_t v36 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    a15 = OUTLINED_FUNCTION_14_0();
    a16 = 0;
    *uint64_t v36 = 136315138;
    a10 = v36 + 1;
    a11 = v36;
    uint64_t v38 = v35[37];
    uint64_t v37 = v35[38];
    uint64_t v39 = v35[39];
    uint64_t v40 = v35[40];
    a17 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v38, v37, v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a16, a17, &a15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_55_7(&dword_0, v32, v33, "%s can't find any call record");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_43_0();
  }

  uint64_t v41 = (void *)v28[8];
  uint64_t v42 = v41[21];
  __swift_project_boxed_opaque_existential_1(v41 + 17, v41[20]);
  App.isFirstParty()();
  swift_retain();
  specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
  swift_release();
  uint64_t v54 = *(void *)(v42 + 16) + **(int **)(v42 + 16);
  uint64_t v43 = (void *)swift_task_alloc();
  v28[13] = v43;
  *uint64_t v43 = v28;
  v43[1] = ReadCallHistoryResultSetFlowProvider.makeEmptyResultSetFlow();
  OUTLINED_FUNCTION_2_49();
  return v51(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, v54, v42 + 16, a15, a16, a17, a18, a19, a20);
}

uint64_t closure #1 in ReadCallHistoryResultSetFlowProvider.makeEmptyResultSetFlow()(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v7 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SirikitDeviceState();
  uint64_t v9 = a2 + 3;
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v33, v10, v11);
  uint64_t v12 = SirikitDeviceState.__allocating_init(from:)();
  uint64_t v13 = (int *)type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(0);
  uint64_t v14 = v13[6];
  swift_release();
  *(void *)(a1 + v14) = v12;
  uint64_t v15 = a2[10];
  uint64_t v16 = v13[7];
  swift_retain();
  swift_release();
  *(void *)(a1 + v16) = v15;
  uint64_t v17 = a1 + v13[5];
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 0;
  uint64_t v18 = a1 + v13[10];
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 0;
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  __swift_project_boxed_opaque_existential_1(a2 + 12, v19);
  uint64_t v21 = a2[11];
  uint64_t v22 = a2[6];
  uint64_t v23 = a2[7];
  __swift_project_boxed_opaque_existential_1(v9, v22);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 8))(v33, v22, v23);
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v20 + 16))(v21, v6, v19, v20);
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  if (v25)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = v32;
    SpeakableString.init(print:speak:)();
    uint64_t v27 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v26, 0, 1, v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = type metadata accessor for SpeakableString();
    uint64_t v26 = v32;
    __swift_storeEnumTagSinglePayload(v32, 1, 1, v28);
  }
  return outlined assign with take of SpeakableString?(v26, a1);
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_1_0();
  v1[264] = v0;
  uint64_t v2 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v2);
  v1[265] = OUTLINED_FUNCTION_35();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v1[266] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[267] = v4;
  v1[268] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for PhoneSnippetDataModels();
  v1[269] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[270] = v6;
  v1[271] = *(void *)(v7 + 64);
  v1[272] = OUTLINED_FUNCTION_28_2();
  v1[273] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SearchCallHistoryModel();
  v1[274] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[275] = v9;
  v1[276] = *(void *)(v10 + 64);
  v1[277] = OUTLINED_FUNCTION_28_2();
  v1[278] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Locale();
  v1[279] = v11;
  OUTLINED_FUNCTION_19_0(v11);
  v1[280] = v12;
  v1[281] = OUTLINED_FUNCTION_35();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_0(v13);
  v1[282] = v14;
  v1[283] = *(void *)(v15 + 64);
  v1[284] = OUTLINED_FUNCTION_28_2();
  v1[285] = swift_task_alloc();
  v1[286] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for SpeakableString();
  v1[287] = v16;
  OUTLINED_FUNCTION_19_0(v16);
  v1[288] = v17;
  v1[289] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v18, v19, v20);
}

{
  void *v0;
  void *v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, os_log_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  BOOL v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void);
  uint64_t v57;
  Swift::Bool v58;
  char v59;
  char v60;
  void *v61;
  void *v62;
  uint64_t v64;
  uint64_t v65;
  os_log_type_t v66;
  os_log_t log;
  void *v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, Swift::Bool, void, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;

  uint64_t v64 = v0[281];
  uint64_t v65 = v0[280];
  char log = (os_log_t)v0[279];
  uint64_t v1 = (void *)v0[264];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_24_2();
  v2();
  static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(1, v0 + 193);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 193));
  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1[15];
  uint64_t v4 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v3);
  uint64_t v5 = v1[11];
  v0[290] = v5;
  uint64_t v68 = v1 + 3;
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  OUTLINED_FUNCTION_24_2();
  v6();
  __swift_project_boxed_opaque_existential_1(v0 + 233, v0[236]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v64, v3, v4);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, os_log_t))(v65 + 8);
  v0[291] = v9;
  v0[292] = (v65 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v64, log);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 233));
  uint64_t v10 = v0[287];
  if (v8)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    OUTLINED_FUNCTION_36_11();
    __swift_storeEnumTagSinglePayload(v11, v12, v13, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v0[286], 1, 1, v0[287]);
  }
  uint64_t v14 = v0 + 264;
  type metadata accessor for SirikitDeviceState();
  __swift_project_boxed_opaque_existential_1(v68, v1[6]);
  OUTLINED_FUNCTION_24_2();
  v15();
  uint64_t v16 = SirikitDeviceState.__allocating_init(from:)();
  v0[293] = v16;
  __swift_project_boxed_opaque_existential_1(v68, v1[6]);
  uint64_t v17 = OUTLINED_FUNCTION_38();
  uint64_t v19 = v18(v17);
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 248))(v19);
  swift_release();
  if (v20)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v22 = Logger.logObject.getter();
    uint64_t v23 = static os_log_type_t.debug.getter();
    uint64_t v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *v14;
    if (v24)
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v72 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v28 = *(void *)(v25 + 296);
      uint64_t v27 = *(void *)(v25 + 304);
      uint64_t v30 = *(void *)(v25 + 312);
      uint64_t v29 = *(void *)(v25 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v28, v27, v30, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0[262] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      OUTLINED_FUNCTION_45_24();
      v31();
      OUTLINED_FUNCTION_69_13();
      if (v32) {
        os_log_type_t v33 = OUTLINED_FUNCTION_32_27();
      }
      else {
        os_log_type_t v33 = *(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8));
      }
      swift_release();
      swift_bridgeObjectRelease();
      v0[259] = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl(&dword_0, v22, v23, "%s show all results there are %ld items in the result set. Rendering multiple results with SMART UI on.", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    v0[294] = *(void *)(v0[264] + 280);
    swift_retain();
    INSearchCallHistoryIntentResponse.callRecordsCount.getter();
    INSearchCallHistoryIntentResponse.totalCallRecordsCount.getter();
    swift_retain();
    App.isFirstParty()();
    swift_retain();
    specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
    swift_release();
    uint64_t v47 = (void *)swift_task_alloc();
    v0[295] = v47;
    *uint64_t v47 = v0;
    v47[1] = ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow();
    OUTLINED_FUNCTION_11_5();
    __asm { BRAA            X9, X16 }
  }
  os_log_type_t v69 = v16;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  BOOL v34 = type metadata accessor for Logger();
  __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v35 = Logger.logObject.getter();
  uint64_t v36 = static os_log_type_t.debug.getter();
  uint64_t v37 = os_log_type_enabled(v35, v36);
  uint64_t v38 = *v14;
  if (v37)
  {
    uint64_t v66 = v36;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v72 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v41 = *(void *)(v38 + 296);
    uint64_t v40 = *(void *)(v38 + 304);
    uint64_t v42 = *(void *)(v38 + 312);
    uint64_t v43 = *(void *)(v38 + 320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v41, v40, v42, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[263] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_39_10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2048;
    OUTLINED_FUNCTION_45_24();
    v44();
    OUTLINED_FUNCTION_69_13();
    if (v45) {
      uint64_t v46 = OUTLINED_FUNCTION_32_27();
    }
    else {
      uint64_t v46 = *(void *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFFF8));
    }
    swift_release();
    swift_bridgeObjectRelease();
    v0[258] = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_0, v35, v66, "%s show all results there are %ld items in the result set. Rendering multiple results.", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v50 = v0;
  uint64_t v51 = v0[289];
  uint64_t v52 = v50[286];
  uint64_t v53 = (void *)v50[264];
  uint64_t v54 = v53[20];
  id v55 = v53[21];
  __swift_project_boxed_opaque_existential_1(v53 + 17, v54);
  OUTLINED_FUNCTION_45_24();
  unint64_t v57 = v56();
  v50[308] = v57;
  uint64_t v58 = App.isFirstParty()();
  swift_retain();
  specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
  uint64_t v60 = v59;
  swift_release();
  unint64_t v61 = (void *)swift_task_alloc();
  v50[309] = v61;
  v61[2] = v69;
  v61[3] = v53;
  v61[4] = v52;
  v61[5] = v51;
  unint64_t v70 = (uint64_t (*)(uint64_t, Swift::Bool, void, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(*(void *)(v55 + 88) + **(int **)(v55 + 88));
  uint64_t v62 = (void *)swift_task_alloc();
  v50[310] = v62;
  *uint64_t v62 = v50;
  v62[1] = ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow();
  return v70(v57, v58, v60 & 1, partial apply for closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow(), v61, v54, v55);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v7 + 2368) = v6;
  *(void *)(v7 + 2376) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_43();
  uint64_t v31 = (void (*)(uint64_t, uint64_t))v0[291];
  uint64_t v1 = v0[290];
  uint64_t v29 = v0[281];
  uint64_t v30 = v0[279];
  uint64_t v2 = (void *)v0[264];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v2[6]);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_24_2();
  v3();
  uint64_t v4 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(v1, 0, v0 + 183);
  v0[298] = v4;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 183));
  swift_retain_n();
  swift_asyncLet_begin();
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[16];
  __swift_project_boxed_opaque_existential_1(v2 + 12, v5);
  __swift_project_boxed_opaque_existential_1(v2 + 3, v2[6]);
  OUTLINED_FUNCTION_24_2();
  v7();
  __swift_project_boxed_opaque_existential_1(v0 + 213, v0[216]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v29, v5, v6);
  uint64_t v9 = v8;
  v31(v29, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 213));
  uint64_t v10 = v0[287];
  if (v9)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    OUTLINED_FUNCTION_36_11();
    __swift_storeEnumTagSinglePayload(v11, v12, v13, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v0[285], 1, 1, v0[287]);
  }
  uint64_t v14 = v0[284];
  uint64_t v15 = v0[282];
  uint64_t v16 = v0[264];
  outlined init with copy of SpeakableString?(v0[285], v14);
  uint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  v0[299] = v18;
  *(void *)(v18 + 16) = v16;
  outlined init with take of SpeakableString?(v14, v18 + v17);
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  v0[300] = SpeakableString.print.getter();
  v0[301] = v19;
  OUTLINED_FUNCTION_45_24();
  uint64_t v21 = v20();
  static SearchCallHistoryHelper.generateSearchCallHistoryModel(items:sharedGlobals:)(v21);
  v0[302] = v22;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_49();
  return _swift_asyncLet_get_throwing(v23, v24, v25, v26);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  v1[303] = v0;
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[304] = v1[256];
    v1[305] = v1[257];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 250, ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow(), v1 + 208);
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 2448) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  void (*v4)(void);
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;

  uint64_t v26 = *(void *)(v0 + 2440);
  uint64_t v25 = *(void *)(v0 + 2432);
  uint64_t v23 = *(void *)(v0 + 2416);
  uint64_t v21 = *(void *)(v0 + 2408);
  uint64_t v20 = *(void *)(v0 + 2400);
  uint64_t v32 = *(void **)(v0 + 2368);
  uint64_t v19 = *(void **)(v0 + 2224);
  uint64_t v28 = *(void *)(v0 + 2216);
  uint64_t v31 = *(void *)(v0 + 2200);
  BOOL v34 = *(void *)(v0 + 2184);
  uint64_t v27 = *(void *)(v0 + 2176);
  uint64_t v30 = *(void *)(v0 + 2168);
  uint64_t v29 = *(void *)(v0 + 2160);
  os_log_type_t v33 = *(void **)(v0 + 2112);
  uint64_t v24 = *(void *)(v0 + 2000);
  uint64_t v22 = *(void *)(v0 + 2008);
  uint64_t v2 = v33[6];
  uint64_t v1 = v33[7];
  OUTLINED_FUNCTION_60_18(v33 + 3, v2);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  swift_bridgeObjectRetain();
  v3(v2, v1);
  OUTLINED_FUNCTION_60_18((void *)(v0 + 1944), *(void *)(v0 + 1968));
  LOBYTE(v2) = dispatch thunk of DeviceState.isXRDevice.getter();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1944);
  __swift_project_boxed_opaque_existential_1(v33 + 3, v33[6]);
  OUTLINED_FUNCTION_24_2();
  v4();
  OUTLINED_FUNCTION_60_18((void *)(v0 + 1384), *(void *)(v0 + 1408));
  uint64_t v5 = dispatch thunk of DeviceState.isXRDevice.getter();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1384);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp);
  uint64_t v6 = swift_retain();
  SAAppsLaunchApp.init(app:)(v6);
  *uint64_t v19 = 0xD000000000000011;
  v19[1] = 0x80000000004913A0;
  *(void *)(v0 + 1984) = v20;
  *(void *)(v0 + 1992) = v21;
  Loggable.init(wrappedValue:)();
  *(void *)(v0 + 2080) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleCallRecordModel]);
  Loggable.init(wrappedValue:)();
  *(void *)(v0 + 2016) = v25;
  *(void *)(v0 + 2024) = v26;
  Loggable.init(wrappedValue:)();
  *(void *)(v0 + 2032) = v24;
  *(void *)(v0 + 2040) = v22;
  Loggable.init(wrappedValue:)();
  *(unsigned char *)(v0 + 2504) = (v2 & 1) == 0;
  Loggable.init(wrappedValue:)();
  *(unsigned char *)(v0 + 2505) = (v5 & 1) == 0;
  Loggable.init(wrappedValue:)();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  CodableAceObject.init(wrappedValue:)();
  _s27PhoneCallFlowDelegatePlugin06SearchB12HistoryModelVWOcTm_0((uint64_t)v19, v34, (void (*)(void))type metadata accessor for SearchCallHistoryModel);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = v33[6];
  uint64_t v8 = v33[7];
  __swift_project_boxed_opaque_existential_1(v33 + 3, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  uint64_t v9 = *(void *)(v0 + 1360);
  uint64_t v10 = *(void *)(v0 + 1376);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1336), v9);
  *(void *)(v0 + 1808) = v9;
  *(void *)(v0 + 1816) = v10;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 1784));
  OUTLINED_FUNCTION_27_8();
  v11();
  _s27PhoneCallFlowDelegatePlugin06SearchB12HistoryModelVWOcTm_0(v34, v27, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  _s27PhoneCallFlowDelegatePlugin06SearchB12HistoryModelVWOcTm_0((uint64_t)v19, v28, (void (*)(void))type metadata accessor for SearchCallHistoryModel);
  uint64_t v12 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v13 = (v30 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (*(unsigned __int8 *)(v31 + 80) + v13 + 8) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v33;
  _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWObTm_0(v27, v15 + v12, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  *(void *)(v15 + v13) = v32;
  _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWObTm_0(v28, v15 + v14, (void (*)(void))type metadata accessor for SearchCallHistoryModel);
  type metadata accessor for SimpleOutputFlowAsync();
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  uint64_t v16 = v32;
  uint64_t v17 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1336);
  *(void *)(v0 + 2088) = v17;
  *(void *)(v0 + 2456) = Flow.eraseToAnyFlow()();
  swift_release();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_1(v34, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_1((uint64_t)v19, (void (*)(void))type metadata accessor for SearchCallHistoryModel);
  return _swift_asyncLet_finish(v0 + 16);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_55_20();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  *(void *)(v4 + 2488) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 2496) = v3;
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_55_20();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_18_3();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_55_20();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow());
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_12_57();
  swift_release();

  outlined destroy of SpeakableString?(v14);
  OUTLINED_FUNCTION_26_0();
  v16();
  OUTLINED_FUNCTION_43_0();
  swift_release();
  OUTLINED_FUNCTION_3_104();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_1();
  return v19(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_52_19();
  outlined destroy of SpeakableString?(v14);
  uint64_t v15 = OUTLINED_FUNCTION_6_90();
  v16(v15);
  OUTLINED_FUNCTION_3_104();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  void *v15;
  void (*v16)(void);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_12_57();
  swift_release();

  outlined destroy of SpeakableString?(v14);
  OUTLINED_FUNCTION_26_0();
  v16();
  OUTLINED_FUNCTION_43_0();
  swift_release();
  OUTLINED_FUNCTION_3_104();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  void *v15;
  void (*v16)(void);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_12_57();
  swift_release();

  outlined destroy of SpeakableString?(v14);
  OUTLINED_FUNCTION_26_0();
  v16();
  OUTLINED_FUNCTION_43_0();
  swift_release();
  OUTLINED_FUNCTION_3_104();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

{
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  OUTLINED_FUNCTION_52_19();
  outlined destroy of SpeakableString?(v14);
  uint64_t v15 = OUTLINED_FUNCTION_6_90();
  v16(v15);
  OUTLINED_FUNCTION_3_104();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_15();
  OUTLINED_FUNCTION_28_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_31_15();
  uint64_t v39 = v18[287];
  uint64_t v36 = v18[293];
  uint64_t v37 = v18[286];
  BOOL v34 = (void *)v18[312];
  uint64_t v35 = v18[266];
  uint64_t v19 = (void *)v18[264];
  uint64_t v20 = v19[6];
  uint64_t v21 = v19[7];
  __swift_project_boxed_opaque_existential_1(v19 + 3, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 128))(v20, v21);
  OUTLINED_FUNCTION_60_18(v18 + 203, v18[206]);
  static DialogPhase.completion.getter();
  uint64_t v22 = swift_task_alloc();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v38 = dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)();

  swift_release();
  OUTLINED_FUNCTION_26();
  v23();
  outlined destroy of SpeakableString?(v37);
  OUTLINED_FUNCTION_26_0();
  v24();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v18 + 203));
  uint64_t v40 = v18[265];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_39();
  return v27(v25, v26, v27, v28, v29, v30, v31, v32, v34, v35, v36, v37, v38, v39, v40, a16, a17, a18);
}

uint64_t implicit closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow(), 0, 0);
}

uint64_t implicit closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0[3] + 280);
  v0[4] = v1;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple + *v1 + 568)
                         + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple + *v1 + 568));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 56) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *(unsigned char *)(v0 + 64) = 1;
  uint64_t v2 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v4 = v3;
  swift_release();
  void *v1 = v2;
  v1[1] = v4;
  OUTLINED_FUNCTION_6_0();
  return v5();
}

uint64_t implicit closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(implicit closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow(), 0, 0);
}

uint64_t implicit closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0[3] + 288);
  v0[5] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                   + *v1
                                                   + 248)
                                       + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + *v1
                                                  + 248));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow();
  uint64_t v3 = v0[4];
  return v5(v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 64) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v4 = v3;
  swift_release();
  void *v1 = v2;
  v1[1] = v4;
  OUTLINED_FUNCTION_6_0();
  return v5();
}

uint64_t closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  type metadata accessor for DialogPhase();
  v5[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for OutputGenerationManifest();
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  return _swift_task_switch(closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow(), 0, 0);
}

uint64_t closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_30_12();
  uint64_t v1 = (uint64_t *)v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = (void *)v0[10];
  __swift_project_boxed_opaque_existential_1((void *)(v0[8] + 176), *(void *)(v0[8] + 200));
  v0[5] = type metadata accessor for PhoneSnippetDataModels();
  v0[6] = _s27PhoneCallFlowDelegatePlugin06Singleb6ResultC0CAC07SiriKitC00C0AAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, 255, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  _s27PhoneCallFlowDelegatePlugin06SearchB12HistoryModelVWOcTm_0(v2, (uint64_t)boxed_opaque_existential_1, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_46A030;
  *(void *)(v5 + 32) = v3;
  uint64_t v19 = v5;
  specialized Array._endMutation()();
  v0[16] = v19;
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  id v8 = v3;
  static DialogPhase.completion.getter();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v7;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v10;
  *uint64_t v10 = v0;
  v10[1] = closure #2 in ReadVoicemailResultSetFlowProvider.makeAllResultsFlow();
  OUTLINED_FUNCTION_28_1();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(v11, v12, v13, v14, v15, v16);
}

uint64_t closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (int *)type metadata accessor for SearchCallHistoryShowCallHistoryParameters(0);
  uint64_t v11 = v10[8];
  swift_retain();
  swift_release();
  *(void *)(a1 + v11) = a2;
  uint64_t v12 = *(void *)(a3 + 80);
  uint64_t v13 = v10[9];
  swift_retain();
  swift_release();
  *(void *)(a1 + v13) = v12;
  uint64_t v14 = INSearchCallHistoryIntentResponse.callRecordsCount.getter();
  uint64_t v15 = a1 + v10[6];
  *(double *)uint64_t v15 = (double)v14;
  *(unsigned char *)(v15 + 8) = 0;
  INSearchCallHistoryIntentResponse.totalCallRecordsCount.getter();
  uint64_t v17 = a1 + v10[12];
  *(double *)uint64_t v17 = (double)v16;
  *(unsigned char *)(v17 + 8) = 0;
  outlined assign with copy of SpeakableString?(a4, a1 + v10[5]);
  outlined destroy of SpeakableString?(a1);
  uint64_t v18 = type metadata accessor for SpeakableString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a5, v18);

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v18);
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeWindowingConfiguration(promptType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptFlowProviderType<(), [PhoneCallRecord]>);
  OUTLINED_FUNCTION_11_0(v3);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  *(void *)(v0 + 16) = *(void *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  type metadata accessor for ReadCallHistoryResultSetFlowProvider();
  _s27PhoneCallFlowDelegatePlugin06Singleb6ResultC0CAC07SiriKitC00C0AAWlTm_0(&lazy protocol witness table cache variable for type ReadCallHistoryResultSetFlowProvider and conformance ReadCallHistoryResultSetFlowProvider, v1, (void (*)(uint64_t))type metadata accessor for ReadCallHistoryResultSetFlowProvider);
  static PromptFlowProviderType.continuation<A>(_:)();
  WindowingConfiguration.init(promptFlowProviderType:padding:windowSizeOverride:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WindowingConfiguration<(), [PhoneCallRecord]>);
  OUTLINED_FUNCTION_36_11();
  __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v6();
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeWindowFlow(paginationParameters:windowContent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[39] = v2;
  v1[40] = v0;
  v1[38] = v3;
  uint64_t v4 = type metadata accessor for WindowedPaginationParameters();
  v1[41] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[42] = v5;
  v1[43] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v28;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t v31;

  uint64_t v30 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_44_4();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void **)(v0 + 320);
  if (v4)
  {
    uint64_t v6 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    v29[0] = OUTLINED_FUNCTION_14_0();
    *uint64_t v6 = 136315138;
    uint64_t v7 = v5[37];
    uint64_t v8 = v5[38];
    uint64_t v10 = v5[39];
    uint64_t v9 = v5[40];
    v29[1] = 0;
    long long v29[2] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v7, v8, v10, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 296) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    OUTLINED_FUNCTION_55_7(&dword_0, v2, v3, "%s makeWindowFlow");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v11 = *(void *)(v0 + 336);
  uint64_t v12 = *(void *)(v0 + 344);
  uint64_t v13 = *(void **)(v0 + 320);
  uint64_t v14 = *(void *)(v0 + 328);
  uint64_t v15 = *(void *)(v0 + 304);
  uint64_t v28 = *(void *)(v0 + 312);
  uint64_t v16 = (void *)v13[8];
  uint64_t v17 = (void *)v13[9];
  uint64_t v18 = v13[10];
  uint64_t v19 = v13[11];
  outlined init with copy of SignalProviding((uint64_t)(v13 + 3), v0 + 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v15, v14);
  OUTLINED_FUNCTION_44_4();
  swift_retain();
  uint64_t v20 = v16;
  uint64_t v21 = v17;
  swift_bridgeObjectRetain();
  specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
  LOBYTE(v16) = v22;
  swift_release();
  outlined init with copy of SearchCallHistorySharedGlobals((uint64_t)(v13 + 12), v0 + 16);
  type metadata accessor for ReadCallRecordsYesNoPromptFlowStrategy();
  OUTLINED_FUNCTION_21_0();
  ReadCallRecordsYesNoPromptFlowStrategy.init(app:intent:intentResponse:phoneSearchCallHistoryIntent:sharedGlobals:windowItems:windowParam:isMissedCall:searchCallHistorySharedGlobals:)(v19, (uint64_t)v20, (uint64_t)v21, v18, (long long *)(v0 + 216), v28, v12, v16 & 1, v0 + 16);
  uint64_t v23 = v13[6];
  uint64_t v24 = v13[7];
  __swift_project_boxed_opaque_existential_1(v13 + 3, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 128))(v23, v24);
  OUTLINED_FUNCTION_60_18((void *)(v0 + 256), *(void *)(v0 + 280));
  _s27PhoneCallFlowDelegatePlugin06Singleb6ResultC0CAC07SiriKitC00C0AAWlTm_0(&lazy protocol witness table cache variable for type ReadCallRecordsYesNoPromptFlowStrategy and conformance ReadCallRecordsYesNoPromptFlowStrategy, 255, (void (*)(uint64_t))type metadata accessor for ReadCallRecordsYesNoPromptFlowStrategy);
  dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  swift_task_dealloc();
  uint64_t v25 = OUTLINED_FUNCTION_12_2();
  return v26(v25);
}

uint64_t ReadCallHistoryResultSetFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[47] = v2;
  v1[48] = v0;
  v1[46] = v3;
  uint64_t v4 = type metadata accessor for WindowedPaginationParameters();
  v1[49] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[50] = v5;
  v1[51] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

void ReadCallHistoryResultSetFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:)()
{
  uint64_t v1 = *(void *)(v0 + 384);
  OUTLINED_FUNCTION_45_24();
  v2();
  OUTLINED_FUNCTION_69_13();
  if (v3) {
    uint64_t v4 = OUTLINED_FUNCTION_32_27();
  }
  else {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_44_4();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void **)(v0 + 384);
    if (v8)
    {
      uint64_t v10 = (_DWORD *)OUTLINED_FUNCTION_5_22();
      uint64_t v49 = OUTLINED_FUNCTION_14_0();
      *uint64_t v10 = 136315138;
      uint64_t v11 = v9[37];
      uint64_t v12 = v9[38];
      uint64_t v51 = v49;
      uint64_t v13 = v9[39];
      uint64_t v14 = v9[40];
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v11, v12, v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 360) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      OUTLINED_FUNCTION_55_7(&dword_0, v6, v7, "%s final window call makeSingleItemFlow()");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v25;
    *uint64_t v25 = v0;
    v25[1] = ReadCallHistoryResultSetFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:);
    OUTLINED_FUNCTION_11_5();
    __asm { BRAA            X1, X16 }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_44_4();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v19 = *(void **)(v0 + 384);
  if (v18)
  {
    uint64_t v20 = (_DWORD *)OUTLINED_FUNCTION_5_22();
    uint64_t v50 = OUTLINED_FUNCTION_14_0();
    *uint64_t v20 = 136315138;
    uint64_t v22 = v19[37];
    uint64_t v21 = v19[38];
    uint64_t v51 = v50;
    uint64_t v24 = v19[39];
    uint64_t v23 = v19[40];
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v22, v21, v24, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 352) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_10();
    OUTLINED_FUNCTION_55_7(&dword_0, v16, v17, "%s final window");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_39_10();
  }

  uint64_t v48 = *(void *)(v0 + 408);
  uint64_t v28 = *(void **)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v30 = (void *)v28[8];
  uint64_t v47 = (void *)v28[9];
  uint64_t v31 = v28[10];
  uint64_t v32 = v28[11];
  outlined init with copy of SignalProviding((uint64_t)(v28 + 3), v0 + 264);
  uint64_t v33 = OUTLINED_FUNCTION_38();
  v34(v33);
  OUTLINED_FUNCTION_44_4();
  swift_retain();
  id v35 = v30;
  id v36 = v47;
  swift_bridgeObjectRetain();
  specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
  LOBYTE(v30) = v37;
  swift_release();
  outlined init with copy of SearchCallHistorySharedGlobals((uint64_t)(v28 + 12), v0 + 16);
  type metadata accessor for ReadCallRecordsYesNoPromptFlowStrategy();
  OUTLINED_FUNCTION_21_0();
  ReadCallRecordsYesNoPromptFlowStrategy.init(app:intent:intentResponse:phoneSearchCallHistoryIntent:sharedGlobals:windowItems:windowParam:isMissedCall:searchCallHistorySharedGlobals:)(v32, (uint64_t)v35, (uint64_t)v36, v31, (long long *)(v0 + 264), v29, v48, v30 & 1, v0 + 16);
  uint64_t v38 = v28[7];
  OUTLINED_FUNCTION_60_18(v28 + 3, v28[6]);
  uint64_t v39 = *(void (**)(uint64_t))(v38 + 16);
  swift_retain();
  uint64_t v40 = OUTLINED_FUNCTION_38();
  v39(v40);
  uint64_t v41 = *(void *)(v0 + 240);
  uint64_t v42 = *(void *)(v0 + 256);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 216), v41);
  *(void *)(v0 + 328) = v41;
  *(void *)(v0 + 336) = v42;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 304));
  OUTLINED_FUNCTION_27_8();
  v43();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  OUTLINED_FUNCTION_21_0();
  _s27PhoneCallFlowDelegatePlugin06Singleb6ResultC0CAC07SiriKitC00C0AAWlTm_0(&lazy protocol witness table cache variable for type ReadCallRecordsYesNoPromptFlowStrategy and conformance ReadCallRecordsYesNoPromptFlowStrategy, 255, (void (*)(uint64_t))type metadata accessor for ReadCallRecordsYesNoPromptFlowStrategy);
  uint64_t v44 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)();
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  *(void *)(v0 + 344) = v44;
  lazy protocol witness table accessor for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>();
  Flow.eraseToAnyFlow()();
  swift_release();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_11_5();
  __asm { BRAA            X2, X16 }
}

uint64_t ReadCallHistoryResultSetFlowProvider.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  swift_release();
  swift_release();
  outlined destroy of SearchCallHistorySharedGlobals(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReadCallHistoryResultSetFlowProvider.__deallocating_deinit()
{
  ReadCallHistoryResultSetFlowProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ResultSetFlowProvider.items.getter in conformance ReadCallHistoryResultSetFlowProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t protocol witness for ResultSetFlowProvider.bundle.getter in conformance ReadCallHistoryResultSetFlowProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t protocol witness for ResultSetFlowProvider.patternId.getter in conformance ReadCallHistoryResultSetFlowProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t protocol witness for ResultSetFlowProvider.makeEmptyResultSetFlow() in conformance ReadCallHistoryResultSetFlowProvider()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**(void **)v0 + 256) + **(int **)(**(void **)v0 + 256));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v4();
}

uint64_t protocol witness for ResultSetFlowProvider.makeSingleItemFlow() in conformance ReadCallHistoryResultSetFlowProvider()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**(void **)v0 + 248) + **(int **)(**(void **)v0 + 248));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v4();
}

uint64_t protocol witness for ResultSetFlowProvider.makeAllResultsFlow() in conformance ReadCallHistoryResultSetFlowProvider()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(**(void **)v0 + 264) + **(int **)(**(void **)v0 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v4();
}

uint64_t protocol witness for ResultSetFlowProvider.makeWindowingConfiguration(promptType:) in conformance ReadCallHistoryResultSetFlowProvider(uint64_t a1, uint64_t a2)
{
  BOOL v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 272)
                                                + **(int **)(**(void **)v2 + 272));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v8(a1, a2);
}

uint64_t protocol witness for ContinuationPromptFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:) in conformance ReadCallHistoryResultSetFlowProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  BOOL v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 288)
                                                + **(int **)(**(void **)v2 + 288));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v8(a1, v5);
}

uint64_t protocol witness for WindowingFlowProvider.makeWindowFlow(paginationParameters:windowContent:) in conformance ReadCallHistoryResultSetFlowProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  BOOL v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 280)
                                                + **(int **)(**(void **)v2 + 280));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, v5);
}

uint64_t type metadata accessor for ReadCallHistoryResultSetFlowProvider()
{
  return self;
}

uint64_t partial apply for closure #2 in ReadCallHistoryResultSetFlowProvider.makeSingleItemFlow()(uint64_t a1)
{
  return closure #1 in ReadCallHistoryResultSetFlowProvider.makeSingleItemFlow()(a1, v1[2], v1[3], v1[4], type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters);
}

uint64_t partial apply for closure #1 in ReadCallHistoryResultSetFlowProvider.makeSingleItemFlow()(uint64_t a1)
{
  return closure #1 in ReadCallHistoryResultSetFlowProvider.makeSingleItemFlow()(a1, v1[2], v1[3], v1[4], type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters);
}

uint64_t partial apply for closure #1 in ReadCallHistoryResultSetFlowProvider.makeEmptyResultSetFlow()(uint64_t a1)
{
  return closure #1 in ReadCallHistoryResultSetFlowProvider.makeEmptyResultSetFlow()(a1, v1);
}

uint64_t partial apply for closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(uint64_t a1)
{
  return closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t partial apply for implicit closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return implicit closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(v3, v0);
}

uint64_t sub_3C58F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_0(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v7 = type metadata accessor for SpeakableString();
  if (!__swift_getEnumTagSinglePayload(v0 + v4, 1, v7))
  {
    uint64_t v8 = OUTLINED_FUNCTION_38();
    v9(v8);
  }

  return _swift_deallocObject(v0, v4 + v6, v3 | 7);
}

uint64_t partial apply for implicit closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_13(v4);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = v0 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return implicit closure #4 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(v3, v6, v7);
}

uint64_t _s27PhoneCallFlowDelegatePlugin06SearchB12HistoryModelVWOcTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_3C5AEC()
{
  uint64_t v1 = (int *)type metadata accessor for PhoneSnippetDataModels();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = (int *)type metadata accessor for SearchCallHistoryModel();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  swift_release();
  uint64_t v10 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      uint64_t v96 = v2;
      OUTLINED_FUNCTION_12_20();
      v11();
      type metadata accessor for YesNoConfirmationModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v102 = v9;
      uint64_t v107 = (v2 + 24) & ~v2;
      OUTLINED_FUNCTION_33_28();
      uint64_t v13 = *(void (**)(void))(v12 + 8);
      uint64_t v99 = v4;
      OUTLINED_FUNCTION_10_8();
      v13();
      OUTLINED_FUNCTION_12_20();
      v14();
      goto LABEL_18;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 2u:
      uint64_t v100 = v4;
      uint64_t v103 = v9;
      uint64_t v95 = v7;
      uint64_t v97 = v2;
      uint64_t v108 = (v2 + 24) & ~v2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v91 = type metadata accessor for ContactConfirmationModel();
      uint64_t v15 = v10 + *(int *)(v91 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_12_20();
      v16();
      uint64_t v17 = type metadata accessor for YesNoConfirmationModel();
      uint64_t v18 = v15 + *(int *)(v17 + 20);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      OUTLINED_FUNCTION_15();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v21(v18, v19);
      OUTLINED_FUNCTION_12_20();
      v22();
      v21(v15 + *(int *)(v17 + 28), v19);
      swift_bridgeObjectRelease();
      if (*(void *)(v10 + *(int *)(v91 + 28) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v2 = v97;
      uint64_t v4 = v100;
      uint64_t v9 = v103;
      uint64_t v3 = v108;
      uint64_t v7 = v95;
      goto LABEL_20;
    case 3u:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_49();
      uint64_t v24 = *(void (**)(void))(v23 + 8);
      OUTLINED_FUNCTION_8_87();
      v24();
      uint64_t v25 = (int *)type metadata accessor for EmergencyCountdownModel();
      uint64_t v26 = OUTLINED_FUNCTION_7_4(v25[5]);
      ((void (*)(uint64_t))v24)(v26);
      uint64_t v27 = OUTLINED_FUNCTION_7_4(v25[6]);
      ((void (*)(uint64_t))v24)(v27);
      uint64_t v28 = OUTLINED_FUNCTION_7_4(v25[7]);
      ((void (*)(uint64_t))v24)(v28);
      uint64_t v29 = OUTLINED_FUNCTION_7_4(v25[8]);
      ((void (*)(uint64_t))v24)(v29);
      uint64_t v30 = OUTLINED_FUNCTION_7_4(v25[9]);
      ((void (*)(uint64_t))v24)(v30);
      uint64_t v31 = OUTLINED_FUNCTION_7_4(v25[10]);
      ((void (*)(uint64_t))v24)(v31);
      uint64_t v32 = OUTLINED_FUNCTION_7_4(v25[11]);
      ((void (*)(uint64_t))v24)(v32);
      uint64_t v33 = OUTLINED_FUNCTION_7_4(v25[12]);
      ((void (*)(uint64_t))v24)(v33);
      uint64_t v3 = v106;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v34();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v35();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v36();
      goto LABEL_19;
    case 4u:
      uint64_t v109 = (v2 + 24) & ~v2;
      uint64_t v37 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      if (!OUTLINED_FUNCTION_51_20(v37))
      {
        type metadata accessor for UUID();
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v38();
        uint64_t v104 = v9;
        uint64_t v39 = *(void (**)(void))(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>)
                                           - 8)
                               + 8);
        OUTLINED_FUNCTION_10_8();
        v39();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v40();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v41();
        OUTLINED_FUNCTION_10_8();
        v39();
        uint64_t v9 = v104;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v42();
        uint64_t v43 = v10 + v1[10];
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        OUTLINED_FUNCTION_15();
        (*(void (**)(uint64_t))(v44 + 8))(v43);
      }
      uint64_t v45 = v10 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
      if (!__swift_getEnumTagSinglePayload(v45, 1, (uint64_t)v1))
      {
        type metadata accessor for UUID();
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v46();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v98 = v2;
        OUTLINED_FUNCTION_15();
        uint64_t v48 = *(void (**)(void))(v47 + 8);
        OUTLINED_FUNCTION_26();
        v48();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v49();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v50();
        OUTLINED_FUNCTION_26();
        v48();
        uint64_t v2 = v98;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_11();
        v51();
        uint64_t v52 = v45 + v1[10];
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        OUTLINED_FUNCTION_15();
        (*(void (**)(uint64_t))(v53 + 8))(v52);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v109;
      goto LABEL_20;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      type metadata accessor for UUID();
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v54();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v55();
      goto LABEL_19;
    case 6u:
      goto LABEL_19;
    case 8u:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_49();
      unint64_t v57 = *(void (**)(void))(v56 + 8);
      OUTLINED_FUNCTION_8_87();
      v57();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v58();
      uint64_t v59 = OUTLINED_FUNCTION_7_4(v5[7]);
      ((void (*)(uint64_t))v57)(v59);
      uint64_t v60 = OUTLINED_FUNCTION_7_4(v5[8]);
      ((void (*)(uint64_t))v57)(v60);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      OUTLINED_FUNCTION_15();
      uint64_t v62 = *(void (**)(void))(v61 + 8);
      OUTLINED_FUNCTION_8_87();
      v62();
      uint64_t v63 = OUTLINED_FUNCTION_7_4(v5[10]);
      ((void (*)(uint64_t))v62)(v63);
      uint64_t v3 = v106;
      goto LABEL_16;
    case 9u:
      swift_bridgeObjectRelease();
      type metadata accessor for PlayVoicemailModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v64();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v105 = v9;
      OUTLINED_FUNCTION_15();
      uint64_t v66 = *(void (**)(void))(v65 + 8);
      OUTLINED_FUNCTION_10_8();
      v66();
      uint64_t v3 = (v2 + 24) & ~v2;
      OUTLINED_FUNCTION_10_8();
      v66();
      uint64_t v9 = v105;
LABEL_16:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v67();
      goto LABEL_20;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = type metadata accessor for SingleResultVoicemailModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v102 = v9;
      uint64_t v107 = (v2 + 24) & ~v2;
      OUTLINED_FUNCTION_15();
      unint64_t v70 = *(void (**)(void))(v69 + 8);
      uint64_t v99 = v4;
      OUTLINED_FUNCTION_10_8();
      v70();
      OUTLINED_FUNCTION_10_8();
      v70();
      uint64_t v71 = v10 + *(int *)(v68 + 60);
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      uint64_t v96 = v2;
      OUTLINED_FUNCTION_26_0();
      v74();
      uint64_t v75 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      OUTLINED_FUNCTION_33_28();
      uint64_t v13 = *(void (**)(void))(v76 + 8);
      OUTLINED_FUNCTION_10_8();
      v13();
      v92(v71 + *(int *)(v75 + 24), v72);
LABEL_18:
      uint64_t v2 = v96;
      uint64_t v9 = v102;
      OUTLINED_FUNCTION_10_8();
      v13();
      uint64_t v7 = v94;
      uint64_t v4 = v99;
      uint64_t v3 = v107;
      goto LABEL_19;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v85 = v10 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      uint64_t v86 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      if (OUTLINED_FUNCTION_51_20(v86)) {
        goto LABEL_20;
      }
      uint64_t v101 = v4;
      uint64_t v87 = *(void (**)(void))(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>)
                                         - 8)
                             + 8);
      OUTLINED_FUNCTION_26_0();
      v87();
      uint64_t v93 = v85 + v1[5];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      OUTLINED_FUNCTION_33_28();
      unint64_t v89 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v89(v93, v9);
      OUTLINED_FUNCTION_26_0();
      v87();
      uint64_t v4 = v101;
      v89(v85 + v1[7], v9);
      uint64_t v7 = v94;
LABEL_19:
      swift_bridgeObjectRelease();
LABEL_20:
      unint64_t v77 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v78 = ((v77 + v7 + 8) & ~v7) + v9;

      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_15();
      uint64_t v80 = *(void (**)(void))(v79 + 8);
      OUTLINED_FUNCTION_26_0();
      v80();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v81();
      OUTLINED_FUNCTION_26_0();
      v80();
      OUTLINED_FUNCTION_26_0();
      v80();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      OUTLINED_FUNCTION_15();
      os_log_type_t v83 = *(void (**)(void))(v82 + 8);
      OUTLINED_FUNCTION_26_0();
      v83();
      OUTLINED_FUNCTION_26_0();
      v83();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_11();
      v84();
      return _swift_deallocObject(v0, v78, v2 | v7 | 7);
    default:
      goto LABEL_20;
  }
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWObTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t partial apply for closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for PhoneSnippetDataModels();
  OUTLINED_FUNCTION_19_0(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = (*(void *)(v8 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = type metadata accessor for SearchCallHistoryModel();
  OUTLINED_FUNCTION_13(v10);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v9 + v12 + 8;
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v15 = v0 + v7;
  uint64_t v16 = *(void *)(v0 + v9);
  uint64_t v17 = v0 + (v13 & ~v12);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v18;
  *uint64_t v18 = v2;
  v18[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #3 in ReadCallHistoryResultSetFlowProvider.makeAllResultsFlow()(v4, v14, v15, v16, v17);
}

unint64_t lazy protocol witness table accessor for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>;
  if (!lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>);
  }
  return result;
}

uint64_t base witness table accessor for WindowingFlowProvider in ReadCallHistoryResultSetFlowProvider(uint64_t a1, uint64_t a2)
{
  return _s27PhoneCallFlowDelegatePlugin06Singleb6ResultC0CAC07SiriKitC00C0AAWlTm_0(&lazy protocol witness table cache variable for type ReadCallHistoryResultSetFlowProvider and conformance ReadCallHistoryResultSetFlowProvider, a2, (void (*)(uint64_t))type metadata accessor for ReadCallHistoryResultSetFlowProvider);
}

uint64_t sub_3C6B6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 168))();
  *a2 = result;
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin06Singleb6ResultC0CAC07SiriKitC00C0AAWlTm_0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_104()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_8_92()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_12_57()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_22_53()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_32_27()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t OUTLINED_FUNCTION_34_31@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_43_27()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 400) + 136), *(void *)(*(void *)(v0 + 400) + 160));
  INSearchCallHistoryIntent.isSingleDateRequest.getter();
}

uint64_t OUTLINED_FUNCTION_49_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_22()
{
  return dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)();
}

uint64_t OUTLINED_FUNCTION_52_19()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_55_20()
{
  uint64_t v2 = *(void *)(v0 + 2280);
  return outlined destroy of SpeakableString?(v2);
}

void *OUTLINED_FUNCTION_60_18(void *a1, uint64_t a2)
{
  return __swift_project_boxed_opaque_existential_1(a1, a2);
}

uint64_t OUTLINED_FUNCTION_61_15()
{
  __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 280));
  return static DialogPhase.completion.getter();
}

void *OUTLINED_FUNCTION_67_15(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  result[2] = v14;
  result[3] = a13;
  result[4] = v13;
  return result;
}

BOOL SIRINLUUserDialogAct.isAccepted.getter()
{
  return SIRINLUUserDialogAct.isAccepted.getter();
}

{
  self;
  return swift_dynamicCastObjCClass() != 0;
}

BOOL SIRINLUUserDialogAct.isRejected.getter()
{
  return SIRINLUUserDialogAct.isAccepted.getter();
}

BOOL SIRINLUUserDialogAct.isCancelled.getter()
{
  return SIRINLUUserDialogAct.isAccepted.getter();
}

BOOL SIRINLUUserDialogAct.isRejectedOrCancelled.getter()
{
  if (SIRINLUUserDialogAct.isRejected.getter()) {
    return 1;
  }

  return SIRINLUUserDialogAct.isCancelled.getter();
}

uint64_t PlayVoicemailReadIntroductionFlow.__allocating_init(app:intent:intentResponse:isSingleVoicemailRequest:items:sharedGlobals:searchCallHistorySharedGlobals:)()
{
  OUTLINED_FUNCTION_5_76();
  uint64_t v0 = swift_allocObject();
  PlayVoicemailReadIntroductionFlow.init(app:intent:intentResponse:isSingleVoicemailRequest:items:sharedGlobals:searchCallHistorySharedGlobals:)();
  return v0;
}

uint64_t PlayVoicemailReadIntroductionFlow.init(app:intent:intentResponse:isSingleVoicemailRequest:items:sharedGlobals:searchCallHistorySharedGlobals:)()
{
  OUTLINED_FUNCTION_5_76();
  *(void *)(v1 + 336) = type metadata accessor for PlayVoicemailReadIntroductionFlow();
  *(void *)(v1 + 344) = &outlined read-only object #0 of PlayVoicemailReadIntroductionFlow.init(app:intent:intentResponse:isSingleVoicemailRequest:items:sharedGlobals:searchCallHistorySharedGlobals:);
  *(void *)(v1 + 352) = 0;
  *(void *)(v1 + 360) = 0;
  *(void *)(v1 + 72) = v7;
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 280) = v4;
  *(void *)(v1 + 288) = v3;
  outlined init with take of AppSelectionSignalComponent(v2, v1 + 32);
  outlined init with copy of SearchCallHistorySharedGlobals(v0, v1 + 80);
  outlined init with copy of SharedGlobalsProviding(v0 + 80, (uint64_t)v9);
  outlined destroy of SearchCallHistorySharedGlobals(v0);
  outlined init with take of AppSelectionSignalComponent(v9, v1 + 296);
  return v1;
}

uint64_t type metadata accessor for PlayVoicemailReadIntroductionFlow()
{
  return self;
}

uint64_t PlayVoicemailReadIntroductionFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  void v10[3] = 0;
  v10[4] = v3;
  v10[5] = a1;
  uint64_t v10[6] = a2;
  LODWORD(a1) = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  swift_retain();
  swift_retain();
  if (a1 == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v8, &demangling cache variable for type metadata for TaskPriority?);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_10();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v9);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v12 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
  }
  if (v12 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v12;
  }
  swift_task_create();
  return swift_release();
}

uint64_t closure #1 in PlayVoicemailReadIntroductionFlow.execute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = a6;
  uint64_t v8 = type metadata accessor for ExecuteResponse();
  v6[4] = v8;
  v6[5] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[6] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a4 + 176) + **(int **)(*(void *)a4 + 176));
  uint64_t v10 = (void *)swift_task_alloc();
  v6[7] = v10;
  *uint64_t v10 = v6;
  v10[1] = closure #1 in PlayVoicemailReadIntroductionFlow.execute(completion:);
  return v12(v9);
}

uint64_t closure #1 in PlayVoicemailReadIntroductionFlow.execute(completion:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v3 = v2;
  *(void *)(v4 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v4();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t sub_3C7578()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in PlayVoicemailReadIntroductionFlow.execute(completion:)()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v6 = OUTLINED_FUNCTION_13_43();
  return closure #1 in PlayVoicemailReadIntroductionFlow.execute(completion:)(v6, v7, v8, v2, v3, v4);
}

uint64_t PlayVoicemailReadIntroductionFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[35] = v2;
  v1[36] = v0;
  uint64_t v3 = type metadata accessor for SpeakableString();
  v1[37] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[38] = v4;
  v1[39] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Locale();
  v1[40] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[41] = v6;
  v1[42] = swift_task_alloc();
  type metadata accessor for DialogPhase();
  v1[43] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OutputGenerationManifest();
  v1[44] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[45] = v8;
  v1[46] = *(void *)(v9 + 64);
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  double v40;
  int64_t v41;
  double v42;
  void *v43;
  os_log_type_t type;
  uint64_t (*v45)(void, void, void, void, uint64_t);
  void *v46;
  uint64_t (*v47)(void, void, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  uint64_t v53 = v0;
  uint64_t v1 = (void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 288);
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v4 = *(id *)(v2 + 16);
  if (App.isFirstParty()())
  {
    uint64_t v5 = static SearchCallHistoryCatParameterHelper.makePhonePersons1P(intent:intentResponse:)(v4, v3);
  }
  else
  {
    uint64_t v6 = [v4 recipient];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)(v0 + 328);
      uint64_t v9 = *(void *)(v0 + 336);
      uint64_t v48 = *(void *)(v0 + 320);
      type metadata accessor for PhonePerson(0);
      uint64_t v10 = v7;
      static Device.current.getter();
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 144), *(void *)(v0 + 168));
      dispatch thunk of DeviceState.siriLocale.getter();
      __swift_destroy_boxed_opaque_existential_1(v0 + 144);
      uint64_t v11 = static PhonePerson.make(phonePerson:options:locale:)(v7, 0, v9);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v48);
      if (v11)
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_46A030;
        *(void *)(v12 + 32) = v11;
        uint64_t v51 = (void *)v12;
        specialized Array._endMutation()();
        uint64_t v5 = v51;
      }
      else
      {

        uint64_t v5 = _swiftEmptyArrayStorage;
      }
      uint64_t v1 = (void *)(v0 + 64);
    }
    else
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
  }
  uint64_t v13 = *(void *)(v0 + 288);
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  type metadata accessor for PhonePersonList();
  uint64_t v14 = PhonePersonList.__allocating_init(list:)((uint64_t)v5);
  uint64_t v49 = PhoneSearchCallHistoryIntent.__allocating_init(intent:recipients:)(v4, v14);
  *(void *)(v0 + 392) = v49;
  outlined init with copy of SharedGlobalsProviding(v13 + 120, (uint64_t)v1);
  uint64_t v15 = *(void **)(v13 + 264);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v17 = Logger.logObject.getter();
  uint64_t v18 = static os_log_type_t.debug.getter();
  uint64_t v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = *(void *)(v0 + 288);
  if (v19)
  {
    uint64_t v46 = v1;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = 0;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v22 = *(void *)(v20 + 336);
    uint64_t v23 = *(void *)(v20 + 344);
    uint64_t v25 = *(void *)(v20 + 352);
    uint64_t v24 = *(void *)(v20 + 360);
    uint64_t v52 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_log_type_t type = v18;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v22, v23, v25, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 264) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v51, 0xE000000000000000, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 1024;
    uint64_t v26 = *(unsigned __int8 *)(v20 + 280);
    swift_release();
    *(_DWORD *)(v0 + 464) = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_0, v17, type, "%s isSingleVoicemailRequest: %{BOOL}d", (uint8_t *)v21, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v46;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v27 = *(void *)(v0 + 288);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 280);
  *(unsigned char *)(v0 + 468) = v28;
  if (v28 == 1)
  {
    uint64_t v29 = *(void *)(v27 + 288);
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v29 & 0xC000000000000001) == 0);
    if ((v29 & 0xC000000000000001) != 0)
    {
      uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v30 = *(void *)(v29 + 32);
      swift_retain();
    }
    *(void *)(v0 + 400) = v30;
    uint64_t v31 = *(void *)(v0 + 312);
    uint64_t v32 = *(void **)(v0 + 288);
    uint64_t v33 = v32[7];
    BOOL v34 = v32[8];
    __swift_project_boxed_opaque_existential_1(v32 + 4, v33);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
    static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(1, (void *)(v0 + 184));
    __swift_destroy_boxed_opaque_existential_1(v0 + 184);
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    id v35 = *(void *)(v0 + 88);
    id v36 = *(void *)(v0 + 96);
    __swift_project_boxed_opaque_existential_1(v1, v35);
    uint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v37;
    v37[2] = v49;
    v37[3] = v32;
    v37[4] = v30;
    void v37[5] = v31;
    uint64_t v47 = (uint64_t (*)(void, void, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(*(void *)(v36 + 72) + **(int **)(v36 + 72));
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v38;
    *uint64_t v38 = v0;
    v38[1] = PlayVoicemailReadIntroductionFlow.execute();
    return v47(0, 0, partial apply for closure #2 in PlayVoicemailReadIntroductionFlow.execute(), v37, v35, v36);
  }
  else
  {
    uint64_t v40 = (double)(uint64_t)INSearchCallHistoryIntentResponse.newRecordsCount.getter();
    uint64_t v41 = INSearchCallHistoryIntentResponse.savedRecordsCount.getter();
    uint64_t v45 = (uint64_t (*)(void, void, void, void, uint64_t))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple
                                                                                      + *v15
                                                                                      + 432)
                                                                          + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple
                                                                                     + *v15
                                                                                     + 432));
    uint64_t v42 = (double)v41;
    swift_retain();
    uint64_t v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v43;
    *uint64_t v43 = v0;
    v43[1] = PlayVoicemailReadIntroductionFlow.execute();
    return v45(*(void *)&v40, 0, *(void *)&v42, 0, v49);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  uint64_t v1 = *(void **)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v15 = *(void *)(v0 + 312);
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v3 = *(void **)(v0 + 288);
  uint64_t v5 = v3[7];
  uint64_t v4 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v5);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 128);
  uint64_t v7 = v1;
  v6(v5, v4);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 224), *(void *)(v0 + 248));
  dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v15, v14);
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  uint64_t v8 = *(void **)(v0 + 432);
  LODWORD(v4) = *(unsigned __int8 *)(v0 + 468);
  uint64_t v9 = *(void *)(v0 + 384);
  uint64_t v10 = *(void *)(v0 + 352);
  uint64_t v11 = *(void *)(v0 + 360);
  static ExecuteResponse.complete(next:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  if (v4 == 1) {

  }
  OUTLINED_FUNCTION_7_84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;

  uint64_t v21 = *(void **)(v0 + 456);
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v20 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void **)(v0 + 288);
  uint64_t v6 = v4[7];
  uint64_t v5 = v4[8];
  __swift_project_boxed_opaque_existential_1(v4 + 4, v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v7);
  *(void *)(v0 + 128) = v7;
  *(void *)(v0 + 136) = v8;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 104));
  OUTLINED_FUNCTION_10();
  (*(void (**)(void))(v9 + 16))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v20, v3);
  uint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v21;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v11 + v10, v1, v3);
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  swift_retain();
  uint64_t v12 = v21;
  uint64_t v13 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(void *)(v0 + 272) = v13;
  Flow.eraseToAnyFlow()();
  swift_release();

  LODWORD(v12) = *(unsigned __int8 *)(v0 + 468);
  uint64_t v14 = *(void *)(v0 + 384);
  uint64_t v15 = *(void *)(v0 + 352);
  uint64_t v16 = *(void *)(v0 + 360);
  static ExecuteResponse.complete(next:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  if (v12 == 1) {

  }
  OUTLINED_FUNCTION_7_84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v18();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = v0[48];
  uint64_t v3 = v0[44];
  uint64_t v2 = v0[45];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  (*(void (**)(void, void))(v0[45] + 8))(v0[48], v0[44]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t PlayVoicemailReadIntroductionFlow.execute()(uint64_t a1)
{
  uint64_t v4 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v2;
  *(void *)(v4 + 424) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v4 + 432) = a1;
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 448) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1) {
    *(void *)(v5 + 456) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t closure #2 in PlayVoicemailReadIntroductionFlow.execute()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v29 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters(0);
  uint64_t v14 = *(int *)(v13 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + v14) = a2;
  unint64_t v15 = a3[36];
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
  }
  if (v16 == 1)
  {
    uint64_t v17 = *(int *)(v13 + 20);
    swift_retain();
    swift_release();
    *(void *)(a1 + v17) = a4;
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v18 = type metadata accessor for SpeakableString();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a5, v18);
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v18);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v12, v20, v10);
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    _StringGuts.grow(_:)(65);
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(a3[42], a3[43], a3[44], a3[45]);
    v21._object = (void *)0x800000000049C650;
    v21._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
    String.append(_:)(v21);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
    }
    uint64_t v30 = v22;
    v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = v31;
    unint64_t v25 = v32;
    swift_bridgeObjectRetain_n();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v26, v27, "%s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t closure #3 in PlayVoicemailReadIntroductionFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  void v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(closure #3 in PlayVoicemailReadIntroductionFlow.execute(), 0, 0);
}

uint64_t closure #3 in PlayVoicemailReadIntroductionFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[3];
  uint64_t v12 = (void *)v10[4];
  uint64_t v13 = v11[40];
  uint64_t v14 = v11[41];
  __swift_project_boxed_opaque_existential_1(v11 + 37, v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_46A030;
  *(void *)(v15 + 32) = v12;
  uint64_t v24 = v15;
  specialized Array._endMutation()();
  uint64_t v10[6] = v24;
  id v16 = v12;
  uint64_t v20 = (void *)swift_task_alloc();
  v10[7] = v20;
  *uint64_t v20 = v10;
  v20[1] = closure #3 in PlayVoicemailReadIntroductionFlow.execute();
  uint64_t v21 = v10[5];
  uint64_t v22 = v10[2];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v22, v24, v21, v13, v14, v17, v18, v19, a9, a10);
}

uint64_t closure #3 in PlayVoicemailReadIntroductionFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_0();
  return v3();
}

uint64_t PlayVoicemailReadIntroductionFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  outlined destroy of SearchCallHistorySharedGlobals(v0 + 80);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PlayVoicemailReadIntroductionFlow.__deallocating_deinit()
{
  PlayVoicemailReadIntroductionFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance PlayVoicemailReadIntroductionFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance PlayVoicemailReadIntroductionFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t protocol witness for Flow.execute() in conformance PlayVoicemailReadIntroductionFlow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return Flow.execute()(a1, a2, a3);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance PlayVoicemailReadIntroductionFlow(uint64_t a1, uint64_t a2)
{
  uint64_t IntroductionFlow = type metadata accessor for PlayVoicemailReadIntroductionFlow();

  return Flow<>.exitValue.getter(IntroductionFlow, a2);
}

uint64_t sub_3C8FB0()
{
  uint64_t v1 = type metadata accessor for OutputGenerationManifest();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #3 in PlayVoicemailReadIntroductionFlow.execute()()
{
  uint64_t v2 = *(void *)(type metadata accessor for OutputGenerationManifest() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v5 = OUTLINED_FUNCTION_13_43();
  return closure #3 in PlayVoicemailReadIntroductionFlow.execute()(v5, v6, v7, v3);
}

uint64_t partial apply for closure #2 in PlayVoicemailReadIntroductionFlow.execute()(uint64_t a1)
{
  return closure #2 in PlayVoicemailReadIntroductionFlow.execute()(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t OUTLINED_FUNCTION_7_84()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_task_dealloc();
}

void BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for AudioSource();
  OUTLINED_FUNCTION_0_0();
  uint64_t v80 = v9;
  __chkstk_darwin(v10);
  uint64_t v76 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (AudioSource?, AudioSource?));
  __chkstk_darwin(v79);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioSource?);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v81 = (uint64_t)&v70 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v82 = (uint64_t)&v70 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v70 - v21;
  type metadata accessor for InputOrigin();
  OUTLINED_FUNCTION_0_0();
  uint64_t v24 = v23;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v70 - v30;
  if (a1)
  {
    os_log_t v83 = v29;
    uint64_t v78 = v13;
    uint64_t v74 = a2;
    uint64_t v32 = one-time initialization token for siriPhone;
    swift_retain();
    if (v32 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    BOOL v34 = Logger.logObject.getter();
    int v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, (os_log_type_t)v35))
    {
      HIDWORD(v71) = v35;
      uint64_t v72 = v4;
      uint64_t v73 = a3;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v84 = v70;
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v75 = v8;
      CurrentRequest.inputOrigin.getter();
      uint64_t v37 = InputOrigin.rawValue.getter();
      unint64_t v39 = v38;
      (*(void (**)(char *, os_log_t))(v24 + 8))(v31, v83);
      uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &v84);
      OUTLINED_FUNCTION_2_118(v40);
      uint64_t v41 = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      CurrentRequest.audioSource.getter();
      OUTLINED_FUNCTION_4_6((uint64_t)v22);
      if (v65)
      {
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for AudioSource?);
        unint64_t v48 = 0xE300000000000000;
        uint64_t v46 = 6369134;
      }
      else
      {
        uint64_t v46 = AudioSource.aceValue.getter();
        unint64_t v48 = v47;
        (*(void (**)(char *, uint64_t))(v80 + 8))(v22, v41);
      }
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, &v84);
      OUTLINED_FUNCTION_2_118(v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v34, BYTE4(v71), "#TipKitDiscoverabilitySending InputOrigin: %s, AudioSource: %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      a3 = v73;
      uint64_t v8 = v75;
    }
    else
    {

      swift_release_n();
    }
    uint64_t v50 = CurrentRequest.inputOrigin.getter();
    InputOrigin.isVoiceTrigger.getter(v50, v51, v52, v53, v54, v55, v56, v57, v70, v71, v72, v73, v74, v75, v76, v77, (uint64_t)v78, v79, v80,
      v81);
    char v59 = v58;
    (*(void (**)(char *, os_log_t))(v24 + 8))(v28, v83);
    uint64_t v60 = (uint64_t)v78;
    if ((v59 & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v61 = v82;
    CurrentRequest.audioSource.getter();
    uint64_t v62 = v81;
    static AudioSource.bluetoothDoAPDevice.getter();
    __swift_storeEnumTagSinglePayload(v62, 0, 1, v8);
    uint64_t v63 = v60 + *(int *)(v79 + 48);
    outlined init with copy of AudioSource?(v61, v60);
    outlined init with copy of AudioSource?(v62, v63);
    OUTLINED_FUNCTION_4_6(v60);
    if (v65)
    {
      outlined destroy of SubmitCommandError?(v62, &demangling cache variable for type metadata for AudioSource?);
      outlined destroy of SubmitCommandError?(v61, &demangling cache variable for type metadata for AudioSource?);
      OUTLINED_FUNCTION_4_6(v63);
      if (v65)
      {
        outlined destroy of SubmitCommandError?(v60, &demangling cache variable for type metadata for AudioSource?);
LABEL_28:
        (*(void (**)(void, uint64_t, uint64_t))(a3 + 8))(0, v74, a3);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v64 = v77;
      outlined init with copy of AudioSource?(v60, v77);
      OUTLINED_FUNCTION_4_6(v63);
      if (!v65)
      {
        uint64_t v66 = v80;
        uint64_t v67 = v76;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v76, v63, v8);
        lazy protocol witness table accessor for type AudioSource and conformance AudioSource();
        char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
        v69(v67, v8);
        outlined destroy of SubmitCommandError?(v81, &demangling cache variable for type metadata for AudioSource?);
        outlined destroy of SubmitCommandError?(v82, &demangling cache variable for type metadata for AudioSource?);
        v69(v64, v8);
        outlined destroy of SubmitCommandError?(v60, &demangling cache variable for type metadata for AudioSource?);
        if ((v68 & 1) == 0) {
          goto LABEL_29;
        }
        goto LABEL_28;
      }
      outlined destroy of SubmitCommandError?(v62, &demangling cache variable for type metadata for AudioSource?);
      outlined destroy of SubmitCommandError?(v61, &demangling cache variable for type metadata for AudioSource?);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v64, v8);
    }
    outlined destroy of SubmitCommandError?(v60, &demangling cache variable for type metadata for (AudioSource?, AudioSource?));
LABEL_29:
    swift_release();
    return;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v42 = type metadata accessor for Logger();
  __swift_project_value_buffer(v42, (uint64_t)static Logger.siriPhone);
  os_log_t v83 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v83, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&dword_0, v83, v43, "#TipKitDiscoverabilitySending Cannot find CurrentRequest, not donating to Biome", v44, 2u);
    OUTLINED_FUNCTION_6();
  }
  os_log_t v45 = v83;
}

void BiomeEventSending.logEventForHangUp(intentResponse:device:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ([a1 code] != (char *)&dword_0 + 3)
  {
    outlined init with copy of SignalProviding(a2, (uint64_t)v15);
    goto LABEL_6;
  }
  uint64_t v8 = (char *)[a1 hungUpCallType];
  outlined init with copy of SignalProviding(a2, (uint64_t)v15);
  if (v8 != (unsigned char *)&dword_4 + 3)
  {
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  DeviceState.isStandaloneIOS.getter();
  char v10 = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(1, a3, a4);
    return;
  }
LABEL_7:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "#TipKitDiscoverabilitySending Only need to log tip for hang up on an active call", v14, 2u);
    OUTLINED_FUNCTION_6();
  }
}

uint64_t OUTLINED_FUNCTION_2_118(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t PhoneSearchCallHistoryIntent.__allocating_init(callTypes:preferredCallProvider:callCapabilities:recipient:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  type metadata accessor for PhoneSearchCallHistoryIntent.Builder(0);
  swift_allocObject();
  PhoneSearchCallHistoryIntent.Builder.init()();
  OUTLINED_FUNCTION_22();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v10 + 224))(a1);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v11 + 232))(a2);
  swift_release();
  OUTLINED_FUNCTION_22();
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v12 + 248))(a3);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 256))(a4);
  swift_release();
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v5 + 160))(v14);
  swift_release();
  outlined destroy of SpeakableString?(a2);
  return v15;
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter@<X0>(uint64_t a1@<X8>)
{
  specialized PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #0 of specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter);
  if ((v2 & 1) == 0) {
    specialized PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #1 of specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter);
  }
  SpeakableString.init(print:speak:)();
  uint64_t v3 = type metadata accessor for SpeakableString();

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v3);
}

void specialized PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)(uint64_t a1)
{
  uint64_t v41 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v40 = v7 - v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    char v9 = (void *)(a1 + 32);
    do
    {
      if (*v9++)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType();
        switch((int)BackingType)
        {
          case 2:
            uint64_t v12 = @"OUTGOING";
            goto LABEL_14;
          case 3:
            uint64_t v12 = @"MISSED";
            goto LABEL_14;
          case 4:
            uint64_t v12 = @"RECEIVED";
            goto LABEL_14;
          case 5:
            uint64_t v12 = @"LATEST";
            goto LABEL_14;
          case 7:
            uint64_t v12 = @"VOICEMAIL";
            goto LABEL_14;
          case 8:
            uint64_t v12 = @"RINGING";
            goto LABEL_14;
          case 9:
            uint64_t v12 = @"IN_PROGRESS";
LABEL_14:
            uint64_t v16 = v12;
            uint64_t v15 = v12;
            break;
          case 10:
            uint64_t v21 = @"ON_HOLD";
            uint64_t v15 = @"ON_HOLD";
            break;
          default:
            uint64_t v15 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
            break;
        }
        uint64_t v17 = v15;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v13 = v18;
      }
      else
      {
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x4E574F4E4B4E55;
      }
      unint64_t v19 = _swiftEmptyArrayStorage[2];
      if (v19 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v19 + 1;
      uint64_t v20 = &_swiftEmptyArrayStorage[2 * v19];
      v20[4] = v14;
      v20[5] = v13;
      --v8;
    }
    while (v8);
  }
  uint64_t v22 = specialized Set.init<A>(_:)((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v1 + 24);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v38 = v22;
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v26 = v4 + 16;
    unint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v27 = v24 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v28 = *(void *)(v4 + 72);
    uint64_t v29 = (void (**)(uint64_t, uint64_t))(v26 - 8);
    do
    {
      v39(v40, v27, v41);
      uint64_t v30 = SpeakableString.print.getter();
      uint64_t v32 = v31;
      (*v29)(v40, v41);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      unint64_t v33 = _swiftEmptyArrayStorage[2];
      if (v33 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v33 + 1;
      BOOL v34 = &_swiftEmptyArrayStorage[2 * v33];
      v34[4] = v30;
      v34[5] = v32;
      v27 += v28;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v23 = v38;
  }
  uint64_t v35 = specialized Set.init<A>(_:)((uint64_t)_swiftEmptyArrayStorage);
  if (*(void *)(v35 + 16))
  {
    uint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v37 = specialized Set.union<A>(_:)(v36, v35);
    specialized static Set.== infix(_:_:)(v37, v23);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SpeakableString();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v9 = v4 + 16;
    BOOL v34 = v10;
    uint64_t v11 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = (void (**)(char *, uint64_t))(v9 - 8);
    uint64_t v13 = *(void *)(v9 + 56);
    v30[1] = v7;
    uint64_t v31 = v13;
    swift_bridgeObjectRetain_n();
    uint64_t v14 = v8 - 1;
    uint64_t v32 = v9;
    uint64_t v33 = a1;
    while (1)
    {
      uint64_t v15 = v14;
      v34(v6, v11, v3);
      uint64_t v16 = SpeakableString.print.getter();
      uint64_t v18 = v17;
      if (a1)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType();
        switch((int)BackingType)
        {
          case 2:
            uint64_t v20 = @"OUTGOING";
            goto LABEL_15;
          case 3:
            uint64_t v20 = @"MISSED";
            goto LABEL_15;
          case 4:
            uint64_t v20 = @"RECEIVED";
            goto LABEL_15;
          case 5:
            uint64_t v20 = @"LATEST";
            goto LABEL_15;
          case 7:
            uint64_t v20 = @"VOICEMAIL";
            goto LABEL_15;
          case 8:
            uint64_t v20 = @"RINGING";
            goto LABEL_15;
          case 9:
            uint64_t v20 = @"IN_PROGRESS";
            goto LABEL_15;
          case 10:
            uint64_t v20 = @"ON_HOLD";
LABEL_15:
            uint64_t v24 = v20;
            uint64_t v23 = v20;
            break;
          default:
            uint64_t v23 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
            break;
        }
        id v25 = v23;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v21 = v26;
      }
      else
      {
        unint64_t v21 = 0xE700000000000000;
        uint64_t v22 = 0x4E574F4E4B4E55;
      }
      if (v16 == v22 && v18 == v21) {
        break;
      }
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*v12)(v6, v3);
      if ((v28 & 1) == 0)
      {
        uint64_t v14 = v15 - 1;
        v11 += v31;
        a1 = v33;
        if (v15) {
          continue;
        }
      }
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n();
    (*v12)(v6, v3);
    char v28 = 1;
LABEL_26:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v28 = 0;
  }
  return v28 & 1;
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestForFaceTime.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider, (uint64_t)v3);
  uint64_t v4 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v3);
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v5 = SpeakableString.print.getter();
    uint64_t v6 = v7;
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  uint64_t v8 = INPreferredCallProviderGetBackingType();
  switch(v8)
  {
    case 4:
      uint64_t v9 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v9 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v9 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v10 = v9;
      goto LABEL_12;
  }
  uint64_t v9 = +[NSString stringWithFormat:@"(unknown: %i)", v8];
LABEL_12:
  uint64_t v11 = v9;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  if (v6)
  {
    if (v5 == v12 && v6 == v14) {
      char v16 = 1;
    }
    else {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = 0;
  }
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestForVideo.getter()
{
  uint64_t v1 = type metadata accessor for SpeakableString();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities);
  if (*(void *)(v5 + 16) != 1)
  {
    char v11 = 0;
    return v11 & 1;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v1);
  swift_retain();
  uint64_t v6 = SpeakableString.print.getter();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t BackingType = INCallCapabilityGetBackingType();
  if (BackingType == 2)
  {
    uint64_t v10 = @"VIDEO_CALL";
  }
  else
  {
    if (BackingType != 1)
    {
      uint64_t v10 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
      goto LABEL_9;
    }
    uint64_t v10 = @"AUDIO_CALL";
  }
  uint64_t v12 = v10;
LABEL_9:
  uint64_t v13 = v10;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (v6 == v14 && v8 == v16) {
    char v11 = 1;
  }
  else {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v11 & 1;
}

uint64_t specialized Set.union<A>(_:)(uint64_t result, uint64_t a2)
{
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  for (v6 &= v6 - 1; ; uint64_t v6 = (v9 - 1) & v9)
  {
    swift_bridgeObjectRetain();
    specialized Set._Variant.insert(_:)();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v8 >= v7) {
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v8);
    ++v2;
    if (!v9)
    {
      int64_t v2 = v8 + 1;
      if (v8 + 1 >= v7) {
        goto LABEL_23;
      }
      uint64_t v9 = *(void *)(v3 + 8 * v2);
      if (!v9)
      {
        int64_t v2 = v8 + 2;
        if (v8 + 2 >= v7) {
          goto LABEL_23;
        }
        uint64_t v9 = *(void *)(v3 + 8 * v2);
        if (!v9)
        {
          int64_t v2 = v8 + 3;
          if (v8 + 3 >= v7) {
            goto LABEL_23;
          }
          uint64_t v9 = *(void *)(v3 + 8 * v2);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_20:
    ;
  }
  int64_t v10 = v8 + 4;
  if (v10 >= v7)
  {
LABEL_23:
    swift_release();
    return a2;
  }
  uint64_t v9 = *(void *)(v3 + 8 * v10);
  if (v9)
  {
    int64_t v2 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v2 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v2);
    ++v10;
    if (v9) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.callTypes : PhoneSearchCallHistoryIntent.Builder(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 120);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.preferredCallProvider : PhoneSearchCallHistoryIntent.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 144))(v6);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.preferredCallProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  swift_beginAccess();
  return outlined init with copy of SpeakableString?(v3, a1);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.preferredCallProvider.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  swift_beginAccess();
  outlined assign with take of SpeakableString?(a1, v3);
  return swift_endAccess();
}

uint64_t (*PhoneSearchCallHistoryIntent.Builder.preferredCallProvider.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.callCapabilities : PhoneSearchCallHistoryIntent.Builder(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 168);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.callCapabilities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.callCapabilities.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_36_21();
  void *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneSearchCallHistoryIntent.Builder.callCapabilities.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.recipient : PhoneSearchCallHistoryIntent.Builder(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 192);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.recipient.getter()
{
  return swift_retain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.recipient.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_36_21();
  void *v1 = a1;
  return swift_release();
}

uint64_t (*PhoneSearchCallHistoryIntent.Builder.recipient.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneSearchCallHistoryIntent.Builder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PhoneSearchCallHistoryIntent.Builder.init()();
  return v0;
}

uint64_t type metadata accessor for PhoneSearchCallHistoryIntent.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneSearchCallHistoryIntent.Builder);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.init()()
{
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  uint64_t v2 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_callCapabilities) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient) = 0;
  return v0;
}

uint64_t PhoneSearchCallHistoryIntent.Builder.__allocating_init(preferredCallProvider:recipient:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  PhoneSearchCallHistoryIntent.Builder.init(preferredCallProvider:recipient:)(a1, a2);
  return v4;
}

uint64_t PhoneSearchCallHistoryIntent.Builder.init(preferredCallProvider:recipient:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_12_0();
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  uint64_t v8 = v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  uint64_t v9 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *(void *)(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_callCapabilities) = _swiftEmptyArrayStorage;
  int64_t v10 = (void *)(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient);
  *(void *)(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v3, a1, v9);
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v9);
  swift_beginAccess();
  outlined assign with take of SpeakableString?(v3, v8);
  swift_endAccess();
  swift_beginAccess();
  *int64_t v10 = a2;
  swift_release();
  return v2;
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withCallTypes(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 120);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withPreferredCallProvider(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_12_0();
  outlined init with copy of SpeakableString?(a1, v1);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v5 + 144))(v1);
  return swift_retain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withPreferredCallProvider(print:speak:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3 - v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SpeakableString.init(print:speak:)();
  uint64_t v5 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v6 + 144))(v4);
  return swift_retain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withCallCapabilities(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 168);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withRecipient(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 192);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withRecipient(_:)(uint64_t a1)
{
  if (a1) {
    a1 = (*(uint64_t (**)(void))(*(void *)a1 + 128))();
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 192))(a1);

  return swift_retain();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.build()()
{
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  uint64_t v0 = swift_allocObject();
  swift_retain();
  PhoneSearchCallHistoryIntent.init(builder:)();
  return v0;
}

uint64_t PhoneSearchCallHistoryIntent.__allocating_init(builder:)()
{
  uint64_t v0 = swift_allocObject();
  PhoneSearchCallHistoryIntent.init(builder:)();
  return v0;
}

uint64_t type metadata accessor for PhoneSearchCallHistoryIntent(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneSearchCallHistoryIntent);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PhoneSearchCallHistoryIntent.Builder.__deallocating_deinit()
{
  return PhoneSearchCallHistoryIntent.Builder.__deallocating_deinit((void (*)(void))PhoneSearchCallHistoryIntent.Builder.deinit);
}

unint64_t static PhoneSearchCallHistoryIntent.catTypeName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.mockGlobals : PhoneSearchCallHistoryIntent(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 144);
  id v4 = *a1;
  return v3(v2);
}

uint64_t PhoneSearchCallHistoryIntent.preferredCallProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider, a1);
}

uint64_t PhoneSearchCallHistoryIntent.callCapabilities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneSearchCallHistoryIntent.recipient.getter()
{
  return swift_retain();
}

void *PhoneSearchCallHistoryIntent.init(builder:)()
{
  id v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_5_1();
  v0[2] = 0;
  OUTLINED_FUNCTION_36_12();
  v0[3] = (*(uint64_t (**)(void))(v5 + 112))();
  OUTLINED_FUNCTION_36_12();
  (*(void (**)(void))(v6 + 136))();
  outlined init with take of SpeakableString?(v1, (uint64_t)v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider);
  OUTLINED_FUNCTION_36_12();
  *(void *)((char *)v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities) = (*(uint64_t (**)(void))(v7 + 160))();
  OUTLINED_FUNCTION_36_12();
  *(void *)((char *)v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient) = (*(uint64_t (**)(void))(v8 + 184))();
  if (((*(uint64_t (**)(void))(*v0 + 168))() & 1) == 0)
  {
    uint64_t v9 = (void *)static Log.siriDialogEngine.getter();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_467710;
    OUTLINED_FUNCTION_26_6();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneSearchCallHistoryIntent.Type);
    uint64_t v11 = String.init<A>(describing:)();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
  swift_release();
  return v2;
}

Swift::Bool __swiftcall PhoneSearchCallHistoryIntent.allRequiredInputsHaveValues()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4 - v3;
  outlined init with copy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider, v4 - v3);
  uint64_t v6 = type metadata accessor for SpeakableString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1, v6);
  outlined destroy of SpeakableString?(v5);
  return EnumTagSinglePayload != 1
      && *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient) != 0;
}

void PhoneSearchCallHistoryIntent.getProperty(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - v12;
  BOOL v14 = a1 == 0x657079546C6C6163 && a2 == 0xE900000000000073;
  if (v14 || (OUTLINED_FUNCTION_9_18() & 1) != 0)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
    OUTLINED_FUNCTION_40_17(v15);
    OUTLINED_FUNCTION_26_1();
    swift_bridgeObjectRetain();
    return;
  }
  if (a1 == 0xD000000000000015 && (OUTLINED_FUNCTION_2_119(), v14) || (OUTLINED_FUNCTION_9_18() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider, (uint64_t)v13);
    uint64_t v17 = type metadata accessor for SpeakableString();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v17) != 1)
    {
      *(void *)(a3 + 24) = v17;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(boxed_opaque_existential_1, v13, v17);
      goto LABEL_17;
    }
    uint64_t v18 = (uint64_t)v13;
LABEL_14:
    outlined destroy of SpeakableString?(v18);
LABEL_15:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
LABEL_17:
    OUTLINED_FUNCTION_26_1();
    return;
  }
  if (a1 == 0xD000000000000010)
  {
    OUTLINED_FUNCTION_2_119();
    if (v14) {
      goto LABEL_6;
    }
  }
  if (OUTLINED_FUNCTION_9_18()) {
    goto LABEL_6;
  }
  BOOL v20 = a1 == 0x6E65697069636572 && a2 == 0xE900000000000074;
  if (!v20 && (OUTLINED_FUNCTION_9_18() & 1) == 0)
  {
    if (a1 == 0xD000000000000012 && (OUTLINED_FUNCTION_2_119(), v14) || (OUTLINED_FUNCTION_9_18() & 1) != 0)
    {
      swift_retain();
      uint64_t v23 = 4;
    }
    else
    {
      if (a1 == 0xD000000000000012 && (OUTLINED_FUNCTION_2_119(), v14) || (OUTLINED_FUNCTION_9_18() & 1) != 0)
      {
        swift_retain();
        specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
        goto LABEL_36;
      }
      if (a1 == 0xD000000000000014 && (OUTLINED_FUNCTION_2_119(), v14) || (OUTLINED_FUNCTION_9_18() & 1) != 0)
      {
        swift_retain();
        char v24 = specialized PhoneSearchCallHistoryIntentProperties.isRequestForFaceTime.getter();
        goto LABEL_36;
      }
      if (a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_2_119(), v14) || (OUTLINED_FUNCTION_9_18() & 1) != 0)
      {
        swift_retain();
        char v24 = specialized PhoneSearchCallHistoryIntentProperties.isRequestForVideo.getter();
        goto LABEL_36;
      }
      if (a1 == 0xD000000000000015 && (OUTLINED_FUNCTION_2_119(), v14) || (OUTLINED_FUNCTION_9_18() & 1) != 0)
      {
        swift_retain();
        uint64_t v23 = 5;
      }
      else if (a1 == 0xD000000000000014 && (OUTLINED_FUNCTION_2_119(), v14) || (OUTLINED_FUNCTION_9_18() & 1) != 0)
      {
        swift_retain();
        uint64_t v23 = 3;
      }
      else
      {
        if (a1 != 0xD000000000000014 || (OUTLINED_FUNCTION_2_119(), !v14))
        {
          if ((OUTLINED_FUNCTION_9_18() & 1) == 0)
          {
            BOOL v26 = a1 == 0x61746E6F43746567 && a2 == 0xEE00656C6F527463;
            if (!v26 && (OUTLINED_FUNCTION_9_18() & 1) == 0) {
              goto LABEL_15;
            }
            swift_retain();
            specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter((uint64_t)v11);
            swift_release();
            uint64_t v27 = type metadata accessor for SpeakableString();
            if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v27) != 1)
            {
              *(void *)(a3 + 24) = v27;
              char v28 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
              (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v28, v11, v27);
              goto LABEL_17;
            }
            uint64_t v18 = (uint64_t)v11;
            goto LABEL_14;
          }
        }
        swift_retain();
        uint64_t v23 = 1;
      }
    }
    char v24 = specialized PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(v23);
LABEL_36:
    char v25 = v24;
    swift_release();
    *(void *)(a3 + 24) = &type metadata for Bool;
    *(unsigned char *)a3 = v25 & 1;
    goto LABEL_17;
  }
  if (!*(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient)) {
    goto LABEL_15;
  }
  uint64_t v21 = type metadata accessor for PhonePersonList();
  OUTLINED_FUNCTION_40_17(v21);
  OUTLINED_FUNCTION_26_1();
  swift_retain();
}

PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional __swiftcall PhoneSearchCallHistoryIntent.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneSearchCallHistoryIntent.CodingKeys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional)v3;
  }
}

void PhoneSearchCallHistoryIntent.CodingKeys.rawValue.getter()
{
  OUTLINED_FUNCTION_18_41();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_24_10();
      break;
    case 2:
      OUTLINED_FUNCTION_7_1();
      break;
    default:
      return;
  }
}

void PhoneSearchCallHistoryIntent.CodingKeys.stringValue.getter()
{
  OUTLINED_FUNCTION_18_41();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_24_10();
      break;
    case 2:
      OUTLINED_FUNCTION_7_1();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneSearchCallHistoryIntent.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneSearchCallHistoryIntent.CodingKeys@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneSearchCallHistoryIntent.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys(void *a1@<X8>)
{
  PhoneSearchCallHistoryIntent.CodingKeys.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

void protocol witness for CodingKey.stringValue.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
}

PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneSearchCallHistoryIntent.CodingKeys@<W0>(uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneSearchCallHistoryIntent.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneSearchCallHistoryIntent.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneSearchCallHistoryIntent.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PhoneSearchCallHistoryIntent.__deallocating_deinit()
{
  return PhoneSearchCallHistoryIntent.Builder.__deallocating_deinit((void (*)(void))PhoneSearchCallHistoryIntent.deinit);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.__deallocating_deinit(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t PhoneSearchCallHistoryIntent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSearchCallHistoryIntent.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A](&lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A], &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString);
  OUTLINED_FUNCTION_8_93();
  if (!v1)
  {
    type metadata accessor for SpeakableString();
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_8_93();
    type metadata accessor for PhonePersonList();
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(&lazy protocol witness table cache variable for type PhonePersonList and conformance PhonePersonList, (void (*)(uint64_t))type metadata accessor for PhonePersonList);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }
  return result;
}

uint64_t _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhoneSearchCallHistoryIntent.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PhoneSearchCallHistoryIntent.init(from:)(a1);
  return v2;
}

uint64_t PhoneSearchCallHistoryIntent.init(from:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSearchCallHistoryIntent.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  *(void *)(v4 + 16) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {

    type metadata accessor for PhoneSearchCallHistoryIntent(0);
    OUTLINED_FUNCTION_26_6();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
    lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A](&lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A], &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)(v4 + 24) = v12;
    type metadata accessor for SpeakableString();
    LOBYTE(v12) = 1;
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    OUTLINED_FUNCTION_14_47();
    outlined init with take of SpeakableString?(v3, v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities) = v12;
    type metadata accessor for PhonePersonList();
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(&lazy protocol witness table cache variable for type PhonePersonList and conformance PhonePersonList, (void (*)(uint64_t))type metadata accessor for PhonePersonList);
    OUTLINED_FUNCTION_14_47();
    uint64_t v10 = OUTLINED_FUNCTION_4_100();
    v11(v10);
    *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

uint64_t base witness table accessor for Decodable in PhoneSearchCallHistoryIntent()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent and conformance PhoneSearchCallHistoryIntent, (void (*)(uint64_t))type metadata accessor for PhoneSearchCallHistoryIntent);
}

uint64_t base witness table accessor for Encodable in PhoneSearchCallHistoryIntent()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_3(&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent and conformance PhoneSearchCallHistoryIntent, (void (*)(uint64_t))type metadata accessor for PhoneSearchCallHistoryIntent);
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhoneSearchCallHistoryIntent()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhoneSearchCallHistoryIntent()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t protocol witness for CATType.mockGlobals.getter in conformance PhoneSearchCallHistoryIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhoneSearchCallHistoryIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneSearchCallHistoryIntent(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 152))();
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhoneSearchCallHistoryIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t protocol witness for PhoneSearchCallHistoryIntentProperties.preferredCallProvider.getter in conformance PhoneSearchCallHistoryIntent@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider, a1);
}

uint64_t protocol witness for PhoneSearchCallHistoryIntentProperties.callCapabilities.getter in conformance PhoneSearchCallHistoryIntent()
{
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for PhoneSearchCallHistoryIntentProperties.recipient.getter in conformance PhoneSearchCallHistoryIntent()
{
  return swift_retain();
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneSearchCallHistoryIntent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 192))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneSearchCallHistoryIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t sub_3CCB50@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 112))();
  *a1 = result;
  return result;
}

uint64_t sub_3CCB9C()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_3CCBE0@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 160))();
  *a1 = result;
  return result;
}

uint64_t sub_3CCC2C@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 184))();
  *a1 = result;
  return result;
}

uint64_t sub_3CCC78@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 136))();
  *a1 = result;
  return result;
}

uint64_t ObjC metadata update function for PhoneSearchCallHistoryIntent()
{
  return type metadata accessor for PhoneSearchCallHistoryIntent(0);
}

void type metadata completion function for PhoneSearchCallHistoryIntent()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for PhoneSearchCallHistoryIntent.Builder()
{
  return type metadata accessor for PhoneSearchCallHistoryIntent.Builder(0);
}

void type metadata completion function for PhoneSearchCallHistoryIntent.Builder()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for PhoneSearchCallHistoryIntent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3CCF00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneSearchCallHistoryIntent.CodingKeys()
{
  return &type metadata for PhoneSearchCallHistoryIntent.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_4_100()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_93()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_14_47()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_18_41()
{
  return 0x657079546C6C6163;
}

uint64_t Parse.usoTask.getter()
{
  uint64_t v70 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v65 = v1;
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v66 = v4 - v3;
  type metadata accessor for USOParse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v67 = v6;
  uint64_t v68 = v5;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  OUTLINED_FUNCTION_65_2();
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v64 - v18;
  uint64_t v20 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_4();
  BOOL v26 = (uint64_t *)(v25 - v24);
  uint64_t v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v69 = v0;
  v27(v26, v0, v20);
  int v28 = (*(uint64_t (**)(uint64_t *, uint64_t))(v22 + 88))(v26, v20);
  if (v28 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v51 = OUTLINED_FUNCTION_6_91();
    v52(v51);
  }
  else
  {
    if (v28 != enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      if (v28 == enum case for Parse.NLv4IntentOnly(_:))
      {
        uint64_t v29 = OUTLINED_FUNCTION_1_105();
        v30(v29);
        uint64_t v31 = *v26;
        static ConversionUtils.toUserParse(from:)();
        if (__swift_getEnumTagSinglePayload(v0, 1, v11) == 1)
        {
          _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v0, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
          OUTLINED_FUNCTION_8_94();
          swift_unknownObjectRetain_n();
          uint64_t v32 = Logger.logObject.getter();
          os_log_type_t v33 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v32, v33))
          {
            uint64_t v34 = swift_slowAlloc();
            uint64_t v35 = swift_slowAlloc();
            *(_DWORD *)uint64_t v34 = 136315394;
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            uint64_t v73 = v35;
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of Parse.usoTask.getter, 0, 0);
            uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, &v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v34 + 12) = 2080;
            uint64_t v71 = v31;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIRINLUUserDialogAct);
            uint64_t v36 = String.init<A>(describing:)();
            uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            OUTLINED_FUNCTION_8_94();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v32, v33, "%s couldn't transform UserDialogAct %s into UserParse to get the UDAs.", (uint8_t *)v34, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
            swift_unknownObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease_n();
          }
          return 0;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v19, v0, v11);
        uint64_t v43 = Parse.transform(userParse:)();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v11);
      }
      else
      {
        if (v28 != enum case for Parse.uso(_:))
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
          uint64_t v44 = Logger.logObject.getter();
          os_log_type_t v45 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v44, v45))
          {
            uint64_t v46 = (uint8_t *)swift_slowAlloc();
            uint64_t v47 = swift_slowAlloc();
            *(_DWORD *)uint64_t v46 = 136315138;
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            uint64_t v73 = v47;
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of Parse.usoTask.getter, 0, 0);
            uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, &v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v44, v45, "%s Direct Invocation parse in Parse.usoTask", v46, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }

          uint64_t v48 = OUTLINED_FUNCTION_6_91();
          v49(v48);
          return 0;
        }
        uint64_t v38 = OUTLINED_FUNCTION_1_105();
        v39(v38);
        uint64_t v40 = v67;
        uint64_t v41 = v26;
        uint64_t v42 = v68;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v67 + 32))(v9, v41, v68);
        USOParse.userParse.getter();
        uint64_t v43 = Parse.transform(userParse:)();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v11);
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v9, v42);
      }
      return v43;
    }
    uint64_t v53 = OUTLINED_FUNCTION_1_105();
    v54(v53);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NLIntent, Parse.ServerConversion));
    swift_release();
    type metadata accessor for NLIntent();
    OUTLINED_FUNCTION_39_8();
    (*(void (**)(uint64_t *))(v55 + 8))(v26);
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v56 = v70;
  uint64_t v57 = __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v66, v57, v56);
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of Parse.usoTask.getter, 0, 0);
  v58._object = (void *)0x800000000049C810;
  v58._uint64_t countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v58);
  uint64_t v59 = v71;
  unint64_t v60 = v72;
  OUTLINED_FUNCTION_8_94();
  swift_bridgeObjectRetain_n();
  uint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v63 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v61, v62, "%s", v63, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_8_94();
    swift_bridgeObjectRelease_n();
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional __swiftcall ParseTypeLogging.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ParseTypeLogging.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional)v3;
  }
}

uint64_t ParseTypeLogging.rawValue.getter(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_2_120();
  }
  if (a1 == 1) {
    return 7304053;
  }
  return 0xD000000000000012;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ParseTypeLogging(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ParseTypeLogging()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ParseTypeLogging(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ParseTypeLogging(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ParseTypeLogging@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional *a2@<X8>)
{
  result.value = ParseTypeLogging.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ParseTypeLogging@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ParseTypeLogging.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t Parse.transform(userParse:)()
{
  void (*v58)(uint64_t *__return_ptr, char *);
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  int v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82[2];

  uint64_t v0 = type metadata accessor for Parse();
  uint64_t v78 = *(void *)(v0 - 8);
  uint64_t v79 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v73 = (char *)&v61 - v5;
  __chkstk_darwin(v4);
  uint64_t v75 = (char *)&v61 - v6;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v76 = (char *)&v61 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v74 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v72 = (char *)&v61 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v61 - v23;
  __chkstk_darwin(v22);
  BOOL v26 = (char *)&v61 - v25;
  Siri_Nlu_External_UserParse.userDialogActs.getter();
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v15, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    uint64_t v28 = v8;
    uint64_t v29 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v11, v27, v7);
    uint64_t v30 = v78;
    uint64_t v31 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v3, v77, v79);
    uint64_t v32 = Logger.logObject.getter();
    uint64_t v33 = v31;
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v77 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v80 = 0;
      uint64_t v81 = 0xE000000000000000;
      v82[0] = v36;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of Parse.transform(userParse:), 0, 0);
      uint64_t v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v81, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      Swift::String v37 = Parse.typeForLogging()();
      uint64_t v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37._countAndFlagsBits, (unint64_t)v37._object, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v3, v79);
      _os_log_impl(&dword_0, v32, v34, "%s %s: No user dialog act found in userParse", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v33);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v26, v15, v16);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v38 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    uint64_t v39 = v8;
    uint64_t v40 = *(void (**)(char *))(v8 + 16);
    uint64_t v66 = v38;
    v40(v76);
    uint64_t v41 = v78;
    uint64_t v42 = v79;
    uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    uint64_t v65 = v78 + 16;
    v64(v75, v77, v79);
    uint64_t v43 = v17 + 16;
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v70(v24, v26, v16);
    uint64_t v68 = v17;
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    uint64_t v63 = v45;
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v69 = v26;
    uint64_t v67 = v43;
    if (v46)
    {
      uint64_t v47 = swift_slowAlloc();
      os_log_type_t v62 = v7;
      uint64_t v48 = v47;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v61 = v49;
      *(_DWORD *)uint64_t v48 = 136315650;
      uint64_t v80 = 0;
      uint64_t v81 = 0xE000000000000000;
      v82[0] = v49;
      uint64_t v71 = v16;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of Parse.transform(userParse:), 0, 0);
      uint64_t v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v81, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v50 = v75;
      Swift::String v51 = Parse.typeForLogging()();
      uint64_t v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51._countAndFlagsBits, (unint64_t)v51._object, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v75 = *(char **)(v41 + 8);
      ((void (*)(char *, uint64_t))v75)(v50, v79);
      *(_WORD *)(v48 + 22) = 2080;
      uint64_t v52 = (uint64_t)v72;
      v70(v72, v24, v71);
      uint64_t v53 = specialized String.init(describing:)(v52);
      uint64_t v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v55 = *(void (**)(char *, uint64_t))(v68 + 8);
      v55(v24, v71);
      _os_log_impl(&dword_0, v44, (os_log_type_t)v63, "%s %s: Attempting to transform %s into UsoTask.", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      BOOL v26 = v69;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v76, v62);
      uint64_t v16 = v71;
    }
    else
    {
      uint64_t v56 = v75;
      uint64_t v75 = *(char **)(v41 + 8);
      ((void (*)(char *, uint64_t))v75)(v56, v42);
      uint64_t v55 = *(void (**)(char *, uint64_t))(v68 + 8);
      v55(v24, v16);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v76, v7);
    }
    if (one-time initialization token for transformer != -1) {
      swift_once();
    }
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>);
    __swift_project_value_buffer(v57, (uint64_t)static Transformer<>.transformer);
    Swift::String v58 = (void (*)(uint64_t *__return_ptr, char *))Transformer.transform.getter();
    v58(&v80, v26);
    swift_release();
    v55(v26, v16);
    uint64_t v59 = v80;
    swift_bridgeObjectRelease();
  }
  return v59;
}

unint64_t lazy protocol witness table accessor for type ParseTypeLogging and conformance ParseTypeLogging()
{
  unint64_t result = lazy protocol witness table cache variable for type ParseTypeLogging and conformance ParseTypeLogging;
  if (!lazy protocol witness table cache variable for type ParseTypeLogging and conformance ParseTypeLogging)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParseTypeLogging and conformance ParseTypeLogging);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParseTypeLogging(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3CE754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParseTypeLogging()
{
  return &type metadata for ParseTypeLogging;
}

uint64_t OUTLINED_FUNCTION_1_105()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_120()
{
  return 0x65746E4934764C4ELL;
}

uint64_t OUTLINED_FUNCTION_6_91()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_94()
{
  return v0;
}

uint64_t specialized Sequence.forEach(_:)(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      [v6 setRelationship:a2];

      ++v5;
      if (v8 == v4) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:

  return swift_bridgeObjectRelease();
}

uint64_t specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &__src[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  outlined init with copy of PhoneContactDisambiguationItemFactory(v2, (uint64_t)__src);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  void v9[5] = a2;
  memcpy(v9 + 6, __src, 0xA0uLL);
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v7, (uint64_t)&async function pointer to partial apply for specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:), (uint64_t)v9);
  return swift_release();
}

uint64_t specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  _OWORD v5[3] = a5;
  uint64_t v8 = (uint64_t (__cdecl *)())((char *)&async function pointer to specialized DisambiguationItemFactory.buildDisambiguationItemList()
                             + async function pointer to specialized DisambiguationItemFactory.buildDisambiguationItemList());
  uint64_t v6 = (void *)swift_task_alloc();
  v5[4] = v6;
  *uint64_t v6 = v5;
  v6[1] = specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:);
  return v8();
}

uint64_t specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 40) = v3;
  swift_task_dealloc();
  return _swift_task_switch(closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:), 0, 0);
}

uint64_t specialized DisambiguationItemFactory.buildDisambiguationItemList()()
{
  *(void *)(v1 + 24) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *uint64_t v2 = v1;
  v2[1] = specialized DisambiguationItemFactory.buildDisambiguationItemList();
  return specialized DisambiguationItemFactory.buildDisambiguationItems()();
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 40) = v3;
  swift_task_dealloc();
  return _swift_task_switch(specialized DisambiguationItemFactory.buildDisambiguationItemList(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;

  uint64_t v18 = v0;
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_bridgeObjectRetain();
  specialized _arrayForceCast<A, B>(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  if (v4 < 6 || (PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v3))
    && (specialized Sequence.contains(where:)(v3, (char *)&dword_0 + 2) & 1) != 0)
  {
    specialized Sequence.contains(where:)(v3, (char *)&dword_0 + 1);
  }
  type metadata accessor for SiriKitDisambiguationList();
  swift_allocObject();
  uint64_t v5 = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)();
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  uint64_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v17 = v10;
    swift_retain();
    SiriKitDisambiguationList.description.getter();
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_release();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v7, v8, "Finished building SiriKitDisambiguationList: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v5);
}

uint64_t specialized DisambiguationItemFactory.buildDisambiguationItems()()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(specialized DisambiguationItemFactory.buildDisambiguationItems(), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t (*v7)(void *);
  uint64_t v9;
  void *v10;
  uint64_t v11;

  *(void *)(v1 + 16) = _swiftEmptyArrayStorage;
  uint64_t v3 = **(void **)(v1 + 40);
  *(void *)(v1 + 48) = v3;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  *(void *)(v1 + 56) = v4;
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v1 + 64) = 0;
      uint64_t v5 = *(void *)(v1 + 48);
      if ((v5 & 0xC000000000000001) != 0) {
        uint64_t v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v6 = *(id *)(v5 + 32);
      }
      uint64_t v9 = OUTLINED_FUNCTION_6_92((uint64_t)v6);
      *(void *)(v1 + 72) = v9;
      *(void *)(v9 + 16) = v0;
      *(void *)(v9 + 24) = v2;
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v1 + 80) = v10;
      type metadata accessor for SiriKitDisambiguationItem();
      *uint64_t v10 = v1;
      v10[1] = specialized DisambiguationItemFactory.buildDisambiguationItems();
      OUTLINED_FUNCTION_3_105();
    }
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = *(uint64_t (**)(void *))(v1 + 8);
    return v7(_swiftEmptyArrayStorage);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_task_dealloc();

  return _swift_task_switch(specialized DisambiguationItemFactory.buildDisambiguationItems(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  uint64_t v1 = v0[3];
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v2 = *(void *)((char *)&dword_10 + (v0[2] & 0xFFFFFFFFFFFFFF8));
  if (v2 >= *(void *)((char *)&dword_18 + (v0[2] & 0xFFFFFFFFFFFFFF8)) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8] + 1;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();
  if (v4 == v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v0[2];
    uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
    return v6(v5);
  }
  else
  {
    uint64_t v8 = v0[8] + 1;
    v0[8] = v8;
    uint64_t v9 = v0[6];
    if ((v9 & 0xC000000000000001) != 0) {
      uint64_t v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v10 = *(id *)(v9 + 8 * v8 + 32);
    }
    uint64_t v11 = OUTLINED_FUNCTION_6_92((uint64_t)v10);
    v0[9] = v11;
    *(void *)(v11 + 16) = v1;
    *(void *)(v11 + 24) = v2;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[10] = v12;
    type metadata accessor for SiriKitDisambiguationItem();
    __CFString *v12 = v0;
    v12[1] = specialized DisambiguationItemFactory.buildDisambiguationItems();
    OUTLINED_FUNCTION_3_105();
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
}

uint64_t specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationItem, Never>);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  swift_retain();
  _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV05buildgH04item_ySo8INPersonC_y07SiriKitC00mngH0CctF04_s11mn9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n();
  return swift_release();
}

{
  return specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()(a1);
}

uint64_t CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)(uint64_t a1, int a2, uint64_t a3, void *a4, id a5, uint64_t *a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = *a6;
  id v15 = objc_msgSend(a5, "disambiguationItems", a1);
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  uint64_t v18 = &selRef_alternatives;
  if (v17) {
    uint64_t v18 = &selRef_disambiguationItems;
  }
  id v19 = [a5 *v18];
  uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = a3;
  v21._object = a4;
  if ((PhoneCallSlotNames.init(rawValue:)(v21).value & 0xFE) == 4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "#CallingIntentRCHFlowDelegate Building contacts disambiguation list", v25, 2u);
      OUTLINED_FUNCTION_6();
    }

    BOOL v26 = specialized _arrayConditionalCast<A, B>(_:)(v20);
    swift_bridgeObjectRelease();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = _swiftEmptyArrayStorage;
    }
    uint64_t v28 = *(void *)(v14 + class metadata base offset for PhoneCallBaseCatTemplatingService);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8) + 8))(v28);
    if (!v30) {
      goto LABEL_26;
    }
    unint64_t v31 = v30;
    if (v30 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_14:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v31 & 0xC000000000000001) == 0);
        if ((v31 & 0xC000000000000001) != 0) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v31 + 32);
        }
        uint64_t v33 = v32;
        swift_bridgeObjectRelease();
        id v34 = [v33 relationship];

        if (v34)
        {
          id v35 = v34;
          specialized Sequence.forEach(_:)((unint64_t)v27, v35);
        }
        goto LABEL_26;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8)))
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v64 = type metadata accessor for PhoneCallBaseCatTemplatingService();
    uint64_t v65 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
    *(void *)&long long v63 = a6;
    swift_retain();
    uint64_t v41 = App.appIdentifier.getter();
    if (v42) {
      uint64_t v43 = v41;
    }
    else {
      uint64_t v43 = 0;
    }
    uint64_t v52 = v43;
    if (v42) {
      unint64_t v44 = v42;
    }
    else {
      unint64_t v44 = 0xE000000000000000;
    }
    v66[0] = v53;
    os_log_type_t v45 = *(void (**)(uint64_t))(*(void *)(*(void *)(a10 + 8) + 8) + 8);
    uint64_t v46 = OUTLINED_FUNCTION_1_106();
    v45(v46);
    uint64_t v47 = v61;
    uint64_t v48 = v62;
    __swift_project_boxed_opaque_existential_1(v60, v61);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v48 + 184))(v59, v47, v48);
    v66[0] = v53;
    uint64_t v49 = OUTLINED_FUNCTION_1_106();
    v45(v49);
    uint64_t v50 = v57;
    uint64_t v51 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v51 + 8))(v71, v50, v51);
    v66[0] = (uint64_t)v27;
    v66[1] = (uint64_t)v27;
    outlined init with take of AppSelectionSignalComponent(&v63, (uint64_t)&v72);
    outlined init with take of AppSelectionSignalComponent(v59, (uint64_t)&v70);
    char v67 = 1;
    uint64_t v68 = v52;
    unint64_t v69 = v44;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)((uint64_t)a7, a8);
    return outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v66);
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  Swift::String v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&long long v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a3, (unint64_t)a4, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v37, v38, "#CallingIntentRCHFlowDelegate Disambiguating %s, no disambiguation snippet", v39, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for SiriKitDisambiguationList();
  swift_allocObject();
  SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)();
  a7();
  return swift_release();
}

uint64_t sub_3CFBC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);

  return _swift_deallocObject(v0, 208, 7);
}

uint64_t partial apply for specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = protocol witness for Flow.execute() in conformance CallingIntentContinueInAppFlow<A, B>;
  return specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)(a1, v4, v5, v6, v7);
}

uint64_t partial apply for specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()(uint64_t a1)
{
  return specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()(a1);
}

uint64_t sub_3CFD0C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationItem, Never>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t OUTLINED_FUNCTION_1_106()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_92(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return swift_task_alloc();
}

uint64_t static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:)(void *a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple
                                                   + *a1
                                                   + 16)
                                       + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple + *a1 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:);
  return v6(a2);
}

uint64_t static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:)(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 24) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:), 0, 0);
  }
}

uint64_t static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:)()
{
  id v1 = [*(id *)(v0 + 24) dialog];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for DialogElement);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_3:
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0);
    if ((v2 & 0xC000000000000001) != 0) {
      id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v3 = *(id *)(v2 + 32);
    }
    uint64_t v4 = v3;
    uint64_t v5 = *(void **)(v0 + 24);
    swift_bridgeObjectRelease();
    id v6 = [v4 fullPrint];

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    goto LABEL_8;
  }
  uint64_t v11 = *(void **)(v0 + 24);
  swift_bridgeObjectRelease();

  uint64_t v7 = 0;
  uint64_t v9 = 0;
LABEL_8:
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v12(v7, v9);
}

uint64_t static CallRecordViewUtils.generateDisplayTime(dateTime:formattedDate:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  Swift::String v37 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v36 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = type metadata accessor for SpeakableString();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v12 = __chkstk_darwin(v11);
  os_log_type_t v38 = (char *)&v36 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v36 - v15;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  if (dispatch thunk of DialogCalendar.isToday.getter())
  {
    dispatch thunk of DialogCalendar.timeDescriptive.getter();
    uint64_t v17 = *(void (**)(void))(v10 + 32);
    OUTLINED_FUNCTION_6_93();
    v17();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
    {
      OUTLINED_FUNCTION_6_93();
      v17();
      uint64_t v18 = (uint64_t)v8;
      return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v18, &demangling cache variable for type metadata for SpeakableString?);
    }
    OUTLINED_FUNCTION_3_106();
    v21();
    OUTLINED_FUNCTION_6_93();
    return ((uint64_t (*)(void))v17)();
  }
  else if (dispatch thunk of DialogCalendar.isYesterday.getter())
  {
    dispatch thunk of DialogCalendar.dateDescriptive.getter();
    uint64_t v20 = v9;
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v9) == 1)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v6, &demangling cache variable for type metadata for SpeakableString?);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v39, v16, v9);
    }
    else
    {
      uint64_t v24 = v10;
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      BOOL v26 = v38;
      v25(v38, v6, v9);
      static CallRecordViewUtils.getCatLocaleString()();
      if (v27)
      {
        uint64_t v28 = self;
        SpeakableString.print.getter();
        uint64_t v29 = v20;
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v32 = [v28 capitalize:v30 forLocale:v31];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        OUTLINED_FUNCTION_11_2();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v24 + 8);
        v33(v26, v29);
        return ((uint64_t (*)(char *, uint64_t))v33)(v16, v29);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v39, v16, v9);
      }
    }
  }
  else if (dispatch thunk of DialogCalendar.isThisWeek.getter())
  {
    uint64_t v22 = (uint64_t)v37;
    dispatch thunk of DialogCalendar.dayName.getter();
    uint64_t v23 = *(void (**)(void))(v10 + 32);
    OUTLINED_FUNCTION_7_85();
    v23();
    if (__swift_getEnumTagSinglePayload(v22, 1, v9) == 1)
    {
      OUTLINED_FUNCTION_7_85();
      v23();
      uint64_t v18 = v22;
      return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v18, &demangling cache variable for type metadata for SpeakableString?);
    }
    OUTLINED_FUNCTION_3_106();
    v35();
    OUTLINED_FUNCTION_7_85();
    return ((uint64_t (*)(void))v23)();
  }
  else
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_2();
    OUTLINED_FUNCTION_3_106();
    return v34();
  }
}

uint64_t static CallRecordViewUtils.generatedDisplayTextColor(callRecordType:forCallHistoryDisplay:)(uint64_t a1, uint64_t a2)
{
  if (a1 != 0x44455353494DLL || a2 != 0xE600000000000000) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  OUTLINED_FUNCTION_11_2();
  type metadata accessor for SpeakableString();
  uint64_t v3 = OUTLINED_FUNCTION_11_70();

  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

uint64_t static CallRecordViewUtils.generatedDisplaySymbolIcon(callRecordType:forCallHistoryDisplay:)(uint64_t a1, uint64_t a2)
{
  if (a1 != 0x474E494F4754554FLL || a2 != 0xE800000000000000) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  OUTLINED_FUNCTION_11_2();
  type metadata accessor for SpeakableString();
  uint64_t v3 = OUTLINED_FUNCTION_11_70();

  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

uint64_t static CallRecordViewUtils.generatedSelectedAction(callRecord:forCallHistoryDisplay:deviceState:)@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  if ((a2 & 1) != 0 && (uint64_t v7 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(a1)) != 0)
  {
    uint64_t v8 = v7;
    if (one-time initialization token for instance != -1) {
      swift_once();
    }
    memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
    type metadata accessor for PhoneCallFeatureManager();
    uint64_t inited = swift_initStackObject();
    uint64_t v41 = &type metadata for PhoneCallFeatureFlags;
    unint64_t v42 = &protocol witness table for PhoneCallFeatureFlags;
    *(void *)&long long v39 = swift_allocObject();
    memcpy((void *)(v39 + 16), __dst, 0xB0uLL);
    outlined init with take of AppSelectionSignalComponent(&v39, inited + 16);
    outlined retain of PhoneCallFeatureFlags((uint64_t)__dst);
    FirstPartyAnnotatedAppStore.getDefaultApp(for:)(a3, (uint64_t)v34);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(inited + 16);
    uint64_t v38 = v34[1];
    outlined release of Set<String>((uint64_t)&v38);
    outlined init with take of AnnotatedApp?((uint64_t)v35, (uint64_t)v37, &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v37);
    uint64_t v36 = v35[3];
    outlined release of Set<String>((uint64_t)&v36);
    uint64_t v10 = App.appIdentifier.getter();
    unint64_t v12 = v11;
    swift_release();
    if (v12) {
      unint64_t v13 = v10;
    }
    else {
      unint64_t v13 = 0xD000000000000017;
    }
    if (v12) {
      unint64_t v14 = v12;
    }
    else {
      unint64_t v14 = 0x8000000000493240;
    }
    id v15 = [a1 callCapability];
    id v16 = objc_allocWithZone((Class)INStartCallIntent);
    id v17 = @nonobjc INStartCallIntent.init(destinationType:contacts:callCapability:)(1, v8, (uint64_t)v15);
    if (one-time initialization token for emptyStartCallIntent != -1) {
      swift_once();
    }
    id v18 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent typeName];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v21 = v20;

    uint64_t v22 = outlined bridged method (ob) of @objc PBCodable.data.getter([v17 backingStore]);
    unint64_t v24 = v23;
    *(void *)&long long v39 = v13;
    *((void *)&v39 + 1) = v14;
    uint64_t v40 = v19;
    uint64_t v41 = v21;
    unint64_t v42 = (_UNKNOWN **)v22;
    unint64_t v43 = v23;
    long long v44 = xmmword_488890;
    uint64_t v45 = 0;
    static Device.current.getter();
    id v25 = StartAudioCallDirectAction.toStartLocalRequest(deviceState:)(v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    object = AceObject.serializeToBase64()().value._object;

    if (object)
    {
      String.toSpeakableString.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of Data?(v22, v24);
      outlined consume of Data?(0, 0xF000000000000000);
      swift_bridgeObjectRelease();
      uint64_t v27 = type metadata accessor for SpeakableString();
      uint64_t v28 = a4;
      uint64_t v29 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of Data?(v22, v24);
      outlined consume of Data?(0, 0xF000000000000000);
      uint64_t v27 = type metadata accessor for SpeakableString();
      uint64_t v28 = a4;
      uint64_t v29 = 1;
    }
    return __swift_storeEnumTagSinglePayload(v28, v29, 1, v27);
  }
  else
  {
    uint64_t v30 = type metadata accessor for SpeakableString();
    return __swift_storeEnumTagSinglePayload(a4, 1, 1, v30);
  }
}

uint64_t static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  return static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)(a1, (uint64_t (*)(void))static CallRecordViewUtils.buildPunchOutForVoicemail(callRecord:), a2);
}

uint64_t static CallRecordViewUtils.generatedActionForOpeningCallRecord(callRecord:forCallHistoryDisplay:)@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  return static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)(a1, (uint64_t (*)(void))static CallRecordViewUtils.buildPunchOutForOpenCallRecord(callRecord:), a2);
}

uint64_t static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)@<X0>(char a1@<W1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  if ((a1 & 1) != 0 && (uint64_t v4 = a2()) != 0)
  {
    uint64_t v5 = (void *)v4;
    if ((unint64_t)AceObject.serializeToBase64()().value._object)
    {
      String.toSpeakableString.getter();
      swift_bridgeObjectRelease();
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = 1;
    }
  }
  else
  {
    uint64_t v6 = 1;
  }
  uint64_t v7 = type metadata accessor for SpeakableString();

  return __swift_storeEnumTagSinglePayload(a3, v6, 1, v7);
}

uint64_t static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATs:callRecord:)@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_8_95(a1);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_12_25();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_10_65();
  (*(void (**)(uint64_t))(class metadata base offset for SearchCallHistoryCATs + v8 + 56))(v4);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v1, v3, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v3, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    *uint64_t v2 = 0xD00000000000002CLL;
    v2[1] = 0x800000000048E7C0;
    v2[2] = 0xD000000000000035;
    v2[3] = 0x800000000049C860;
    v2[4] = 0xD000000000000037;
    v2[5] = 0x800000000049C8A0;
    OUTLINED_FUNCTION_4_101(22);
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    OUTLINED_FUNCTION_9_74();
    PhoneError.logged()(v9);
    outlined destroy of PhoneError((uint64_t)v2);
    swift_willThrow();
    uint64_t v10 = v1;
  }
  else
  {
    Result<>.firstPrint.getter();
    if (v11)
    {
      uint64_t v12 = v16;
      String.toSpeakableString.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = 1;
      uint64_t v12 = v16;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    uint64_t v14 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
    uint64_t v10 = v3;
  }
  return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
}

uint64_t static CallRecordViewUtils.generatedDisplayCallDetail(searchCallHistoryCATs:callRecord:)@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_8_95(a1);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_12_25();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_10_65();
  (*(void (**)(uint64_t))(class metadata base offset for SearchCallHistoryCATs + v8 + 24))(v4);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v1, v3, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v3, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    *uint64_t v2 = 0xD000000000000027;
    v2[1] = 0x800000000048E790;
    v2[2] = 0xD000000000000035;
    v2[3] = 0x800000000049C860;
    v2[4] = 0xD00000000000003DLL;
    v2[5] = 0x800000000049C8E0;
    OUTLINED_FUNCTION_4_101(37);
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    OUTLINED_FUNCTION_9_74();
    PhoneError.logged()(v9);
    outlined destroy of PhoneError((uint64_t)v2);
    swift_willThrow();
    uint64_t v10 = v1;
  }
  else
  {
    Result<>.firstPrint.getter();
    if (v11)
    {
      uint64_t v12 = v16;
      String.toSpeakableString.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = 1;
      uint64_t v12 = v16;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    uint64_t v14 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
    uint64_t v10 = v3;
  }
  return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
}

void static CallRecordViewUtils.buildPunchOutForVoicemail(callRecord:)(void *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v104 = *(void *)(v2 - 8);
  uint64_t v105 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v103 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v100 = (char *)&v97 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v101 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v99 = (char *)&v97 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v98 = (char *)&v97 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v18 = (char *)&v97 - v17;
  __chkstk_darwin(v16);
  uint64_t v102 = (uint64_t)&v97 - v19;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  BOOL v26 = (char *)&v97 - v25;
  id v106 = [objc_allocWithZone((Class)SAUIAppPunchOut) init];
  outlined bridged method (ob) of @objc SABaseClientBoundCommand.aceId.getter(v106);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  if (!v28)
  {
    id v29 = v106;
    UUID.init()();
    uint64_t v30 = UUID.uuidString.getter();
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
    outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v30, v32, v29);
  }
  id v33 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v20) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    id v34 = [a1 identifier];
    unint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v37 = v36;

    uint64_t v38 = HIBYTE(v37) & 0xF;
    uint64_t v39 = v35 & 0xFFFFFFFFFFFFLL;
    if ((v37 & 0x2000000000000000) != 0) {
      uint64_t v40 = HIBYTE(v37) & 0xF;
    }
    else {
      uint64_t v40 = v35 & 0xFFFFFFFFFFFFLL;
    }
    if (!v40)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = v104;
      uint64_t v42 = v105;
      unint64_t v43 = v103;
      goto LABEL_62;
    }
    uint64_t v41 = v104;
    uint64_t v42 = v105;
    unint64_t v43 = v103;
    if ((v37 & 0x1000000000000000) != 0)
    {
      uint64_t v45 = (uint64_t)specialized _parseInteger<A, B>(ascii:radix:)(v35, v37, 10);
      char v47 = v96;
      goto LABEL_51;
    }
    if ((v37 & 0x2000000000000000) == 0)
    {
      if ((v35 & 0x1000000000000000) != 0) {
        long long v44 = (unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        long long v44 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v45 = (uint64_t)specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v44, v39, 10);
      char v47 = v46 & 1;
LABEL_51:
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0)
      {
        id v65 = [self phoneAppVoicemailURLForRecordID:v45];
        if (!v65)
        {
          uint64_t v67 = 1;
          uint64_t v54 = (uint64_t)v101;
          id v18 = v98;
LABEL_70:
          __swift_storeEnumTagSinglePayload((uint64_t)v18, v67, 1, v42);
          goto LABEL_71;
        }
        uint64_t v66 = v65;
        id v18 = v98;
LABEL_68:
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v67 = 0;
        uint64_t v54 = (uint64_t)v101;
        goto LABEL_70;
      }
LABEL_62:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v71 = type metadata accessor for Logger();
      __swift_project_value_buffer(v71, (uint64_t)static Logger.siriPhone);
      uint64_t v72 = Logger.logObject.getter();
      os_log_type_t v73 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v74 = 0;
        _os_log_impl(&dword_0, v72, v73, "#CallRecordViewUtils Unrecognized voicemail identifier, just opening voicemail tab", v74, 2u);
        swift_slowDealloc();
      }

      id v75 = [self phoneAppVoicemailURLForRecordID:-1];
      if (!v75)
      {
        uint64_t v67 = 1;
        uint64_t v54 = (uint64_t)v101;
        id v18 = v99;
        goto LABEL_70;
      }
      uint64_t v66 = v75;
      id v18 = v99;
      goto LABEL_68;
    }
    v107[0] = v35;
    v107[1] = v37 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v52 = v35 >> 8;
    unint64_t v53 = v35 >> 16;
    if (v35 == 43)
    {
      if (!v38) {
        goto LABEL_86;
      }
      if (v38 == 1 || (BYTE1(v35) - 48) > 9u) {
        goto LABEL_38;
      }
      uint64_t v45 = (BYTE1(v35) - 48);
      if (v38 != 2)
      {
        unsigned __int8 v55 = v53 - 48;
        if (v55 > 9u) {
          goto LABEL_38;
        }
        uint64_t v45 = 10 * v45 + v55;
        uint64_t v56 = v38 - 3;
        if (v56)
        {
          uint64_t v57 = (unsigned __int8 *)v107 + 3;
          while (1)
          {
            unsigned int v58 = *v57 - 48;
            if (v58 > 9) {
              goto LABEL_38;
            }
            uint64_t v59 = 10 * v45;
            if ((unsigned __int128)(v45 * (__int128)10) >> 64 != (10 * v45) >> 63) {
              goto LABEL_38;
            }
            uint64_t v45 = v59 + v58;
            if (__OFADD__(v59, v58)) {
              goto LABEL_38;
            }
            char v47 = 0;
            ++v57;
            if (!--v56) {
              goto LABEL_51;
            }
          }
        }
      }
    }
    else
    {
      if (v35 == 45)
      {
        if (v38)
        {
          if (v38 != 1 && (BYTE1(v35) - 48) <= 9u)
          {
            if (v38 == 2)
            {
              char v47 = 0;
              uint64_t v45 = -(uint64_t)(BYTE1(v35) - 48);
              goto LABEL_51;
            }
            if ((BYTE2(v35) - 48) <= 9u)
            {
              uint64_t v45 = -10 * (BYTE1(v35) - 48) - (BYTE2(v35) - 48);
              uint64_t v64 = v38 - 3;
              if (!v64) {
                goto LABEL_50;
              }
              uint64_t v68 = (unsigned __int8 *)v107 + 3;
              while (1)
              {
                unsigned int v69 = *v68 - 48;
                if (v69 > 9) {
                  break;
                }
                uint64_t v70 = 10 * v45;
                if ((unsigned __int128)(v45 * (__int128)10) >> 64 != (10 * v45) >> 63) {
                  break;
                }
                uint64_t v45 = v70 - v69;
                if (__OFSUB__(v70, v69)) {
                  break;
                }
                char v47 = 0;
                ++v68;
                if (!--v64) {
                  goto LABEL_51;
                }
              }
            }
          }
LABEL_38:
          uint64_t v45 = 0;
          char v47 = 1;
          goto LABEL_51;
        }
        __break(1u);
LABEL_86:
        __break(1u);
        return;
      }
      if (!v38 || (v35 - 48) > 9u) {
        goto LABEL_38;
      }
      uint64_t v45 = (v35 - 48);
      if (v38 != 1)
      {
        if ((v52 - 48) > 9u) {
          goto LABEL_38;
        }
        uint64_t v45 = 10 * v45 + (v52 - 48);
        uint64_t v60 = v38 - 2;
        if (v60)
        {
          uint64_t v61 = (unsigned __int8 *)v107 + 2;
          while (1)
          {
            unsigned int v62 = *v61 - 48;
            if (v62 > 9) {
              goto LABEL_38;
            }
            uint64_t v63 = 10 * v45;
            if ((unsigned __int128)(v45 * (__int128)10) >> 64 != (10 * v45) >> 63) {
              goto LABEL_38;
            }
            uint64_t v45 = v63 + v62;
            if (__OFADD__(v63, v62)) {
              goto LABEL_38;
            }
            char v47 = 0;
            ++v61;
            if (!--v60) {
              goto LABEL_51;
            }
          }
        }
      }
    }
LABEL_50:
    char v47 = 0;
    goto LABEL_51;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v8, v20);
  uint64_t v48 = self;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v50 = [v48 phoneAppVoicemailURLForMessageUUID:isa];

  if (v50)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v51 = 0;
  }
  else
  {
    uint64_t v51 = 1;
  }
  unint64_t v43 = v103;
  uint64_t v41 = v104;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  uint64_t v42 = v105;
  __swift_storeEnumTagSinglePayload((uint64_t)v18, v51, 1, v105);
  uint64_t v54 = (uint64_t)v101;
LABEL_71:
  uint64_t v76 = (uint64_t)v18;
  uint64_t v77 = v102;
  outlined init with take of AnnotatedApp?(v76, v102, (uint64_t *)&demangling cache variable for type metadata for URL?);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v77, v54, (uint64_t *)&demangling cache variable for type metadata for URL?);
  if (__swift_getEnumTagSinglePayload(v54, 1, v42) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v54, (uint64_t *)&demangling cache variable for type metadata for URL?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v78 = type metadata accessor for Logger();
    __swift_project_value_buffer(v78, (uint64_t)static Logger.siriPhone);
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      swift_slowDealloc();
    }

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v77, (uint64_t *)&demangling cache variable for type metadata for URL?);
  }
  else
  {
    uint64_t v82 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v100, v54, v42);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v83 = type metadata accessor for Logger();
    __swift_project_value_buffer(v83, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v43, v82, v42);
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = v43;
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 136315138;
      uint64_t v88 = URL.absoluteString.getter();
      v107[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v89, v107);
      uint64_t v82 = v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v90 = *(void (**)(char *, uint64_t))(v41 + 8);
      uint64_t v91 = v86;
      uint64_t v42 = v105;
      v90(v91, v105);
      _os_log_impl(&dword_0, v84, v85, "#CallRecordViewUtils VM punchout: %s", v87, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v90 = *(void (**)(char *, uint64_t))(v41 + 8);
      v90(v43, v42);
    }

    uint64_t v92 = v82;
    URL._bridgeToObjectiveC()(v93);
    uint64_t v95 = v94;
    [v106 setPunchOutUri:v94];

    v90(v92, v42);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v77, (uint64_t *)&demangling cache variable for type metadata for URL?);
  }
}

id static CallRecordViewUtils.buildPunchOutForOpenCallRecord(callRecord:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)SAUIAppPunchOut) init];
  outlined bridged method (ob) of @objc SABaseClientBoundCommand.aceId.getter(v9);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v11)
  {
    id v12 = v9;
    UUID.init()();
    uint64_t v13 = UUID.uuidString.getter();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v13, v15, v12);
  }
  id v16 = [a1 identifier];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  v26[0] = 0xD000000000000020;
  v26[1] = 0x800000000049A2E0;
  v20._uint64_t countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v23 = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v21) != 1)
  {
    URL._bridgeToObjectiveC()(v22);
    uint64_t v23 = v24;
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v4, v21);
  }
  [v9 setPunchOutUri:v23];

  return v9;
}

uint64_t static CallRecordViewUtils.getCatLocaleString()()
{
  type metadata accessor for CATGlobals();
  static Device.current.getter();
  uint64_t v0 = (void *)CATGlobals.__allocating_init(device:)();
  uint64_t v1 = dispatch thunk of CATGlobals.toDictionary.getter();
  specialized Dictionary.subscript.getter(0x656C61636F6CLL, 0xE600000000000000, v1, &v4);

  swift_bridgeObjectRelease();
  if (v5)
  {
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v4, &demangling cache variable for type metadata for Any?);
    return 0;
  }
}

id @nonobjc INStartCallIntent.init(destinationType:contacts:callCapability:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  id v7 = [v3 initWithDestinationType:a1 contacts:v6.super.isa callCapability:a3];

  return v7;
}

uint64_t sub_3D2018()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

ValueMetadata *type metadata accessor for CallRecordViewUtils()
{
  return &type metadata for CallRecordViewUtils;
}

uint64_t outlined bridged method (ob) of @objc SABaseClientBoundCommand.aceId.getter(void *a1)
{
  id v2 = [a1 aceId];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t OUTLINED_FUNCTION_4_101@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  *(unsigned char *)(v1 + 56) = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_8_95@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return type metadata accessor for PhoneError();
}

uint64_t OUTLINED_FUNCTION_9_74()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_11_70()
{
  return v0;
}

uint64_t *IdentifyIncomingCallerDirectAction.identifier.unsafeMutableAddressor()
{
  if (one-time initialization token for identifier != -1) {
    swift_once();
  }
  return &static IdentifyIncomingCallerDirectAction.identifier;
}

uint64_t IdentifyIncomingCallerDirectAction.__allocating_init(invocation:contactStore:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_75(a1, a2);
  OUTLINED_FUNCTION_0_70();
  __chkstk_darwin(v8);
  uint64_t v10 = OUTLINED_FUNCTION_28_11(v9, v14);
  v11(v10);
  uint64_t v12 = specialized IdentifyIncomingCallerDirectAction.__allocating_init(invocation:contactStore:)(v4, v7, v3, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v2);
  return v12;
}

void *TUCallProviderIdentifier.Telephony.unsafeMutableAddressor()
{
  return &static TUCallProviderIdentifier.Telephony;
}

unint64_t static TUCallProviderIdentifier.Telephony.getter()
{
  return 0xD000000000000017;
}

void *TUCallProviderIdentifier.FaceTime.unsafeMutableAddressor()
{
  return &static TUCallProviderIdentifier.FaceTime;
}

unint64_t static TUCallProviderIdentifier.FaceTime.getter()
{
  return 0xD00000000000003BLL;
}

uint64_t static IdentifyIncomingCallerDirectAction.identifier.getter()
{
  if (one-time initialization token for identifier != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t one-time initialization function for handleTypeKey()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  static IdentifyIncomingCallerDirectAction.handleTypeKey = result;
  unk_59A4F0 = v1;
  return result;
}

uint64_t one-time initialization function for handleValueKey()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  static IdentifyIncomingCallerDirectAction.handleValueKey = result;
  unk_59A500 = v1;
  return result;
}

uint64_t IdentifyIncomingCallerDirectAction.callUUID.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t IdentifyIncomingCallerDirectAction.callProviderBundleId.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.callProviderIdentifier : IdentifyIncomingCallerDirectAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 88) = v3;
  *(void *)(v4 + 96) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t IdentifyIncomingCallerDirectAction.callProviderIdentifier.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.callerContactIdentifiers : IdentifyIncomingCallerDirectAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 104) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t IdentifyIncomingCallerDirectAction.callerContactIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.handleValue : IdentifyIncomingCallerDirectAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 112) = v3;
  *(void *)(v4 + 120) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t IdentifyIncomingCallerDirectAction.handleValue.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t key path getter for IdentifyIncomingCallerDirectAction.handleType : IdentifyIncomingCallerDirectAction@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 272))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.handleType : IdentifyIncomingCallerDirectAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 128) = v2;
  *(unsigned char *)(v4 + 136) = v3;
  return result;
}

uint64_t IdentifyIncomingCallerDirectAction.handleType.getter()
{
  OUTLINED_FUNCTION_5_21();
  return *(void *)(v0 + 128);
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.isVideo : IdentifyIncomingCallerDirectAction(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 137) = v2;
  return result;
}

uint64_t IdentifyIncomingCallerDirectAction.isVideo.getter()
{
  OUTLINED_FUNCTION_5_21();
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.isCallerIdBlocked : IdentifyIncomingCallerDirectAction(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 138) = v2;
  return result;
}

uint64_t IdentifyIncomingCallerDirectAction.isCallerIdBlocked.getter()
{
  OUTLINED_FUNCTION_5_21();
  return *(unsigned __int8 *)(v0 + 138);
}

uint64_t IdentifyIncomingCallerDirectAction.__allocating_init(from:contactStore:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
  OUTLINED_FUNCTION_0_70();
  __chkstk_darwin(v3);
  uint64_t v5 = OUTLINED_FUNCTION_28_11(v4, v9);
  v6(v5);
  uint64_t v7 = OUTLINED_FUNCTION_8_96();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v7;
}

uint64_t IdentifyIncomingCallerDirectAction.init(from:contactStore:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_75(a1, a2);
  OUTLINED_FUNCTION_0_70();
  __chkstk_darwin(v3);
  uint64_t v5 = OUTLINED_FUNCTION_28_11(v4, v9);
  v6(v5);
  uint64_t v7 = OUTLINED_FUNCTION_8_96();
  __swift_destroy_boxed_opaque_existential_1(v2);
  return v7;
}

NSObject *IdentifyIncomingCallerDirectAction.callRecord.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22();
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 152))();
  if (v5) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0;
  }
  unint64_t v7 = 0xE000000000000000;
  if (v5) {
    unint64_t v7 = v5;
  }
  unint64_t v34 = v7;
  uint64_t v35 = v6;
  uint64_t v8 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v8);
  Class v33 = IdentifyIncomingCallerDirectAction.callersAsPerson.getter();
  OUTLINED_FUNCTION_2();
  if ((*(uint64_t (**)(void))(v9 + 296))()) {
    uint64_t v10 = 2;
  }
  else {
    uint64_t v10 = 1;
  }
  uint64_t v11 = IdentifyIncomingCallerDirectAction.preferredCallProvider.getter();
  id v12 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
  OUTLINED_FUNCTION_22();
  uint64_t v14 = (*(uint64_t (**)(void))(v13 + 200))();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_22();
  uint64_t v18 = (*(uint64_t (**)(void))(v17 + 176))();
  uint64_t v20 = v19;
  OUTLINED_FUNCTION_2();
  id v22 = [objc_allocWithZone((Class)NSNumber) initWithBool:(*(uint64_t (**)(void))(v21 + 320))() & 1];
  id v23 = objc_allocWithZone((Class)INCallRecord);
  id v24 = @nonobjc INCallRecord.init(__identifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)(v35, v34, (uint64_t)v2, v33, 6, v10, 0, 0, v11, v12, v14, v16, v18, v20, v22);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  BOOL v26 = v24;
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    *(_DWORD *)id v29 = 138412290;
    unint64_t v36 = v26;
    uint64_t v31 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v30 = v26;

    _os_log_impl(&dword_0, v27, v28, "#IdentifyIncomingCallerDirectAction: INCallRecord to announce = %@.", v29, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    uint64_t v27 = v26;
  }

  return v26;
}

id IdentifyIncomingCallerDirectAction.handle.getter()
{
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v0 + 248))();
  if (!v1) {
    return 0;
  }
  OUTLINED_FUNCTION_22();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 272))();
  if (v4) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = v3;
  }
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for TUHandle);
  return TUHandle.__allocating_init(type:value:)(v5);
}

id TUHandle.__allocating_init(type:value:)(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithType:a1 value:v3];

  return v4;
}

Class IdentifyIncomingCallerDirectAction.callersAsPerson.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v2 - 8);
  id v4 = (uint8_t *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22();
  uint64_t v6 = (*(uint64_t (**)(void))(v5 + 224))();
  unint64_t v7 = &unk_469000;
  if (!v6)
  {
LABEL_37:
    id v41 = IdentifyIncomingCallerDirectAction.handle.getter();
    if (v41
      && (uint64_t v42 = v41, v43 = [v41 personHandle], v42, v43))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for Logger();
      __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v45, v46))
      {
        char v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v47 = 0;
        _os_log_impl(&dword_0, v45, v46, "#IdentifyIncomingCallerDirectAction: Incoming call from number not associated with contact, using handle", v47, 2u);
        OUTLINED_FUNCTION_6();
      }

      if ([v43 type]
        || (type metadata accessor for App(),
            (*(void (**)(void))(*(void *)v1 + 176))(),
            App.__allocating_init(appIdentifier:)(),
            Swift::Bool v48 = App.isFirstParty()(),
            swift_release(),
            v48))
      {
        type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
        return INPerson.init(personHandle:)((INPersonHandle)v43).super.isa;
      }
      else
      {
        unsigned int v58 = Logger.logObject.getter();
        os_log_type_t v59 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v60 = 0;
          _os_log_impl(&dword_0, v58, v59, "#IdentifyIncomingCallerDirectAction: Received a generic TUHandle. Using handle value as fullName.", v60, 2u);
          OUTLINED_FUNCTION_6();
        }

        id v61 = objc_allocWithZone((Class)INPersonHandle);
        id v62 = @nonobjc INPersonHandle.init(value:type:)(0, 0, 0);
        uint64_t v63 = type metadata accessor for PersonNameComponents();
        __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v63);
        uint64_t v64 = outlined bridged method (pb) of @objc INPersonHandle.value.getter(v43);
        uint64_t v66 = v65;
        id v67 = objc_allocWithZone((Class)INPerson);
        id v17 = @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)(v62, (uint64_t)v4, v64, v66, 0, 0, 0, 0, 0);
      }
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      __swift_project_value_buffer(v49, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      id v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v50, v51))
      {
        unint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        *(_DWORD *)unint64_t v52 = v7[287];
        char v53 = (*(uint64_t (**)(void))(*(void *)v1 + 320))();
        BOOL v54 = (v53 & 1) == 0;
        if (v53) {
          uint64_t v55 = 0x64656B636F6C42;
        }
        else {
          uint64_t v55 = 0x656C6C6143206F4ELL;
        }
        if (v54) {
          unint64_t v56 = 0xEC00000044492072;
        }
        else {
          unint64_t v56 = 0xE700000000000000;
        }
        uint64_t v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, &v70);
        OUTLINED_FUNCTION_8_44(v57);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v50, v51, "#IdentifyIncomingCallerDirectAction: Incoming call with no callers and no handle - %s", v52, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release_n();
      }
      return 0;
    }
    return (Class)v17;
  }
  uint64_t v8 = v6;
  if (!*(void *)(v6 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  unint64_t v9 = (unint64_t)IdentifyIncomingCallerDirectAction.fetchPersons(identifiers:)();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  LOBYTE(v12) = static os_log_type_t.debug.getter();
  unint64_t v13 = v9 >> 62;
  if (!os_log_type_enabled((os_log_t)v11, (os_log_type_t)v12))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  unsigned int v69 = v4;
  unint64_t v7 = (void *)swift_slowAlloc();
  *(_DWORD *)unint64_t v7 = 134218240;
  uint64_t v14 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  uint64_t v70 = v14;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *((_WORD *)v7 + 6) = 2048;
  if (v13) {
    goto LABEL_65;
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v70 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, (os_log_t)v11, (os_log_type_t)v12, "#IdentifyIncomingCallerDirectAction: Incoming call from number associated with %ld contact(s), %ld unique contact(s)", (uint8_t *)v7, 0x16u);
    OUTLINED_FUNCTION_6();

    id v4 = v69;
    unint64_t v7 = (void *)&unk_469000;
LABEL_11:
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v11)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unint64_t v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v34, v35))
        {
          unint64_t v36 = (uint8_t *)swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          *(_DWORD *)unint64_t v36 = v7[287];
          unsigned int v69 = v36 + 4;
          swift_bridgeObjectRetain();
          uint64_t v37 = Array.description.getter();
          unint64_t v39 = v38;
          swift_bridgeObjectRelease();
          uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &v70);
          OUTLINED_FUNCTION_8_44(v40);
          unint64_t v7 = (void *)&unk_469000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v34, v35, "#IdentifyIncomingCallerDirectAction: Couldn't find contact for identifiers: %s", v36, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
      if (!v11) {
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v9 & 0xC000000000000001;
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v9 & 0xC000000000000001) == 0);
    if ((v9 & 0xC000000000000001) != 0) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v9 + 32);
    }
    id v17 = v16;
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_64;
    }
    if (!v13)
    {
      uint64_t v18 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
      if (v18) {
        goto LABEL_21;
      }
      __break(1u);
    }
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    Class result = (Class)swift_bridgeObjectRelease();
    if (v19 < 1)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_21:
    if (v18 >= v11) {
      break;
    }
LABEL_64:
    __break(1u);
LABEL_65:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v12 && v11 != 1)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    Swift::Int v21 = 1;
    do
    {
      Swift::Int v22 = v21 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v21);
      Swift::Int v21 = v22;
    }
    while (v11 != v22);
  }
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v24 = v27;
    uint64_t v25 = v28;
    unint64_t v26 = v29;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v23 = v9 & 0xFFFFFFFFFFFFFF8;
    uint64_t v24 = (v9 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v25 = 1;
    unint64_t v26 = (2 * v11) | 1;
  }
  uint64_t v30 = specialized Array.init<A>(_:)(v23, v24, v25, v26);
  outlined bridged method (mbgnn) of @objc INPerson.alternatives.setter((uint64_t)v30, v17);
  swift_bridgeObjectRelease();
  id v31 = IdentifyIncomingCallerDirectAction.handle.getter();
  if (v31)
  {
    uint64_t v32 = v31;
    id v33 = [v31 personHandle];
  }
  else
  {
    id v33 = 0;
  }
  [v17 setPersonHandle:v33];

  return (Class)v17;
}

uint64_t IdentifyIncomingCallerDirectAction.preferredCallProvider.getter()
{
  type metadata accessor for App();
  OUTLINED_FUNCTION_22();
  uint64_t v2 = *(void (**)(void))(v1 + 176);
  v2();
  App.__allocating_init(appIdentifier:)();
  if (!App.isFirstParty()())
  {
    uint64_t v3 = ((uint64_t (*)(void))v2)();
    char v5 = specialized Optional<A>.isNilOrEmpty.getter(v3, v4);
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      swift_release();
      return 3;
    }
  }
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v0 + 200))();
  if (!v7)
  {
    swift_release();
    return 0;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  if (v6 == 0xD000000000000017 && v7 == 0x800000000049C920
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v8 != 0xD00000000000003BLL || v9 != 0x800000000049C940)
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_release();
    if (v11) {
      return 2;
    }
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_release();
  return 2;
}

void *IdentifyIncomingCallerDirectAction.fetchPersons(identifiers:)()
{
  swift_retain();
  uint64_t v0 = OUTLINED_FUNCTION_7_0();
  specialized Sequence.compactMap<A>(_:)(v0, v1);
  swift_getKeyPath();
  swift_retain();
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = specialized Sequence.filter(_:)(v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

void key path getter for INPerson.displayName : INPerson(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 displayName];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void key path setter for INPerson.displayName : INPerson(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setDisplayName:v3];
}

uint64_t IdentifyIncomingCallerDirectAction.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t IdentifyIncomingCallerDirectAction.__deallocating_deinit()
{
  IdentifyIncomingCallerDirectAction.deinit();

  return swift_deallocClassInstance();
}

uint64_t specialized IdentifyIncomingCallerDirectAction.__allocating_init(invocation:contactStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v29[3] = a4;
  v29[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = Parse.DirectInvocation.userData.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    if (one-time initialization token for announceTelephony != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.announceTelephony);
    swift_bridgeObjectRetain_n();
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v27 = a1;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v16 = Dictionary.description.getter();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v13, v14, "#IdentifyIncomingCallerDirectAction: Direct Invocation payload: %s.", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v27;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    outlined init with copy of SignalProviding((uint64_t)v29, (uint64_t)v28);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t *))(a3 + 344))(v11, v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v25 = type metadata accessor for Parse.DirectInvocation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
  }
  else
  {
    if (one-time initialization token for announceTelephony != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.announceTelephony);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      Swift::Int v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "#IdentifyIncomingCallerDirectAction: No userData in DirectInvocation.", v22, 2u);
      swift_slowDealloc();
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v23 = type metadata accessor for Parse.DirectInvocation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
    return 0;
  }
  return v24;
}

uint64_t specialized IdentifyIncomingCallerDirectAction.init(from:contactStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  *(_OWORD *)(a3 + 104) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 120) = 0u;
  *(unsigned char *)(a3 + 136) = 1;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Dictionary.subscript.getter(v10, v11, a1, &v55);
  swift_bridgeObjectRelease();
  if (v56)
  {
    int v12 = swift_dynamicCast();
    if (v12) {
      uint64_t v13 = v53;
    }
    else {
      uint64_t v13 = 0;
    }
    if (v12) {
      uint64_t v14 = v54;
    }
    else {
      uint64_t v14 = 0;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v55);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  swift_beginAccess();
  *(void *)(a3 + 56) = v13;
  *(void *)(a3 + 64) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Dictionary.subscript.getter(v15, v16, a1, &v55);
  swift_bridgeObjectRelease();
  if (v56)
  {
    int v17 = swift_dynamicCast();
    if (v17) {
      uint64_t v18 = v51;
    }
    else {
      uint64_t v18 = 0;
    }
    if (v17) {
      uint64_t v19 = v52;
    }
    else {
      uint64_t v19 = 0;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v55);
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  swift_beginAccess();
  *(void *)(a3 + 72) = v18;
  *(void *)(a3 + 80) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Dictionary.subscript.getter(v20, v21, a1, &v55);
  swift_bridgeObjectRelease();
  if (v56)
  {
    int v22 = swift_dynamicCast();
    if (v22) {
      uint64_t v23 = v49;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v22) {
      uint64_t v24 = v50;
    }
    else {
      uint64_t v24 = 0;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v55);
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }
  swift_beginAccess();
  *(void *)(a3 + 88) = v23;
  *(void *)(a3 + 96) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Dictionary.subscript.getter(v25, v26, a1, &v55);
  swift_bridgeObjectRelease();
  if (v56)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    if (swift_dynamicCast()) {
      uint64_t v27 = v48;
    }
    else {
      uint64_t v27 = 0;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v55);
    uint64_t v27 = 0;
  }
  swift_beginAccess();
  *(void *)(a3 + 104) = v27;
  swift_bridgeObjectRelease();
  if (one-time initialization token for handleTypeKey != -1) {
    swift_once();
  }
  uint64_t v28 = static IdentifyIncomingCallerDirectAction.handleTypeKey;
  uint64_t v29 = unk_59A4F0;
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(v28, v29, a1, &v55);
  swift_bridgeObjectRelease();
  if (v56)
  {
    if (swift_dynamicCast())
    {
      char v30 = 0;
      uint64_t v31 = v47;
      goto LABEL_37;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v55);
  }
  uint64_t v31 = 0;
  char v30 = 1;
LABEL_37:
  swift_beginAccess();
  *(void *)(a3 + 128) = v31;
  *(unsigned char *)(a3 + 136) = v30;
  if (one-time initialization token for handleValueKey != -1) {
    swift_once();
  }
  uint64_t v32 = static IdentifyIncomingCallerDirectAction.handleValueKey;
  uint64_t v33 = unk_59A500;
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(v32, v33, a1, &v55);
  swift_bridgeObjectRelease();
  if (v56)
  {
    int v34 = swift_dynamicCast();
    if (v34) {
      uint64_t v35 = v45;
    }
    else {
      uint64_t v35 = 0;
    }
    if (v34) {
      uint64_t v36 = v46;
    }
    else {
      uint64_t v36 = 0;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v55);
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  swift_beginAccess();
  *(void *)(a3 + 112) = v35;
  *(void *)(a3 + 120) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Dictionary.subscript.getter(v37, v38, a1, &v55);
  swift_bridgeObjectRelease();
  if (v56)
  {
    if (swift_dynamicCast())
    {
      char v39 = v44;
      goto LABEL_52;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v55);
  }
  char v39 = 0;
LABEL_52:
  *(unsigned char *)(a3 + 137) = v39;
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Dictionary.subscript.getter(v40, v41, a1, &v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v56)
  {
    outlined destroy of Any?((uint64_t)&v55);
    goto LABEL_56;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_56:
    char v42 = 0;
    goto LABEL_57;
  }
  char v42 = v44;
LABEL_57:
  *(unsigned char *)(a3 + 138) = v42;
  outlined init with take of AppSelectionSignalComponent(&v57, a3 + 16);
  return a3;
}

uint64_t sub_3D4604()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 152))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_3D4648()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_3D468C()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 200))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_3D46D0()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 224))();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_3D4714()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 248))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_3D4760()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 296))();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_3D47B0()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 320))();
  unsigned char *v0 = result & 1;
  return result;
}

ValueMetadata *type metadata accessor for TUCallProviderIdentifier()
{
  return &type metadata for TUCallProviderIdentifier;
}

uint64_t type metadata accessor for IdentifyIncomingCallerDirectAction()
{
  return self;
}

const char *keypath_get_selector_displayName()
{
  return "displayName";
}

uint64_t OUTLINED_FUNCTION_8_96()
{
  return specialized IdentifyIncomingCallerDirectAction.init(from:contactStore:)(v1, v4, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_9_75(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  return __swift_mutable_project_boxed_opaque_existential_1(a2, v4);
}

uint64_t static PhonePerson.make(phonePerson:isRelated:locale:)(void *a1, char a2, uint64_t a3)
{
  return static PhonePerson.make(phonePerson:options:locale:)(a1, a2 & 1, a3);
}

void *PhonePerson.Options.friendlyPhoneNumberNameShort.unsafeMutableAddressor()
{
  return &static PhonePerson.Options.friendlyPhoneNumberNameShort;
}

void *PhonePerson.Options.relative.unsafeMutableAddressor()
{
  return &static PhonePerson.Options.relative;
}

BOOL protocol witness for SetAlgebra.insert(_:) in conformance PhonePerson.Options(void *a1, uint64_t *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

uint64_t protocol witness for SetAlgebra.formUnion(_:) in conformance PhonePerson.Options(uint64_t *a1)
{
  return specialized OptionSet<>.formUnion(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formIntersection(_:) in conformance PhonePerson.Options(uint64_t *a1)
{
  return specialized OptionSet<>.formIntersection(_:)(*a1);
}

BOOL protocol witness for SetAlgebra.isSubset(of:) in conformance PhonePerson.Options(uint64_t *a1)
{
  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

uint64_t DialogPerson.init(person:locale:isRelative:)(void *a1, uint64_t a2, int a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15[3] = a3;
    id v10 = a1;
    id v11 = [v10 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v11) = String.isPhoneNumber.getter();
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = DialogPerson.__allocating_init(unnamedPerson:)();

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
      return v12;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v12 = DialogPerson.__allocating_init(person:locale:useConversationalName:)();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  swift_retain();
  v13(a2, v6);
  if (v12) {
    swift_release();
  }
  return v12;
}

uint64_t PhonePerson.toPersonAndVisualData(contactId:command:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v32[0] = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v32 - v11;
  uint64_t v13 = type metadata accessor for ContactImage();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (void *)((char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_467710;
  *(void *)(v19 + 32) = a1;
  *(void *)(v19 + 40) = a2;
  *uint64_t v18 = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v18, enum case for ContactImage.contacts(_:), v13);
  type metadata accessor for PhonePersonAndVisualData.Builder(0);
  swift_allocObject();
  uint64_t v20 = *(uint64_t (**)(uint64_t))(*(void *)PhonePersonAndVisualData.Builder.init()() + 184);
  swift_bridgeObjectRetain();
  uint64_t v21 = v20(v4);
  swift_release();
  uint64_t v22 = ContactImage.serializedData.getter();
  unint64_t v24 = v23;
  Data.base64EncodedString(options:)(0);
  outlined consume of Data._Representation(v22, v24);
  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v25 = type metadata accessor for SpeakableString();
  uint64_t v26 = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v25);
  uint64_t v27 = (*(uint64_t (**)(char *))(*(void *)v21 + 200))(v12);
  swift_release();
  outlined destroy of SpeakableString?((uint64_t)v12);
  if (v32[0] && AceObject.serializeToBase64()().value._object)
  {
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v26, 1, v25);
  uint64_t v28 = (*(uint64_t (**)(char *))(*(void *)v27 + 216))(v10);
  swift_release();
  uint64_t v29 = outlined destroy of SpeakableString?((uint64_t)v10);
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)v28 + 232))(v29);
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v18, v13);
  return v30;
}

unint64_t lazy protocol witness table accessor for type PhonePerson and conformance DialogPerson()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson;
  if (!lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson)
  {
    type metadata accessor for PhonePerson(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhonePerson.Options and conformance PhonePerson.Options()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }
  return result;
}

ValueMetadata *type metadata accessor for PhonePerson.Options()
{
  return &type metadata for PhonePerson.Options;
}

void *AppIntentConstants.underlyingErrorKey.unsafeMutableAddressor()
{
  return &static AppIntentConstants.underlyingErrorKey;
}

unint64_t static AppIntentConstants.underlyingErrorKey.getter()
{
  return 0xD000000000000024;
}

ValueMetadata *type metadata accessor for AppIntentConstants()
{
  return &type metadata for AppIntentConstants;
}

void PhoneCallFlow.__allocating_init(input:sharedGlobals:appFinder:eligibleAppsFinder:)()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  id v10 = v9;
  uint64_t v11 = *(void *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v11);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15 - v14;
  (*(void (**)(uint64_t))(v17 + 16))(v15 - v14);
  v2(v10, v8, v6, v16, v0, v11, v12);
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_26_1();
}

void specialized _ArrayProtocol.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = a1 + 40;
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v17 = a1 + 40;
    do
    {
      uint64_t v8 = (uint64_t *)(v6 + 16 * v5);
      unint64_t v9 = v5;
      while (1)
      {
        if (v9 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v11 = *(v8 - 1);
        uint64_t v10 = *v8;
        unint64_t v5 = v9 + 1;
        uint64_t v12 = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        specialized Set.contains(_:)(v11, v10, v12);
        if (v13) {
          break;
        }
        swift_bridgeObjectRelease();
        v8 += 2;
        ++v9;
        if (v4 == v5) {
          goto LABEL_13;
        }
      }
      v19[0] = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v7 = (void *)v19[0];
      }
      unint64_t v14 = v7[2];
      unint64_t v15 = v14 + 1;
      if (v14 >= v7[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v15 = v14 + 1;
        uint64_t v7 = (void *)v19[0];
      }
      v7[2] = v15;
      uint64_t v16 = &v7[2 * v14];
      void v16[4] = v11;
      uint64_t v16[5] = v10;
      uint64_t v6 = v17;
    }
    while (v4 - 1 != v9);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v20 = *(void *)(a2 + 8);
  outlined release of Set<String>((uint64_t)&v20);
  outlined init with take of URL?(a2 + 16, (uint64_t)v19, &demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v19);
  uint64_t v18 = *(void *)(a2 + 40);
  outlined release of Set<String>((uint64_t)&v18);
}

uint64_t key path setter for PhoneCallFlow.state : PhoneCallFlow(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow.State(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of PhoneCallFlow.State(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
  swift_beginAccess();
  outlined assign with take of PhoneCallFlow.State((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t PhoneCallFlow.state.getter()
{
  swift_beginAccess();
  uint64_t v0 = OUTLINED_FUNCTION_96();
  return outlined init with copy of PhoneCallFlow.State(v0, v1);
}

uint64_t PhoneCallFlow.__allocating_init(state:sharedGlobals:appFinder:eligibleAppsFinder:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v0, v5);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t))(v11 + 16))(v9 - v8);
  specialized PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)(v3, v2, v1, v10, v4, v5, v6);
  uint64_t v12 = OUTLINED_FUNCTION_18_22();
  __swift_destroy_boxed_opaque_existential_1(v12);
  return v4;
}

void PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)()
{
}

uint64_t PhoneCallFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t PhoneCallFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[163] = v0;
  v1[162] = v2;
  OUTLINED_FUNCTION_2();
  v1[164] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[165] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v5);
  v1[166] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v6);
  v1[167] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for Parse();
  v1[168] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[169] = v8;
  v1[170] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for Input();
  v1[171] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[172] = v10;
  v1[173] = *(void *)(v11 + 64);
  v1[174] = OUTLINED_FUNCTION_28_2();
  v1[175] = swift_task_alloc();
  v1[176] = swift_task_alloc();
  v1[177] = swift_task_alloc();
  v1[178] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for PhoneCallFlow.State(0);
  v1[179] = v12;
  OUTLINED_FUNCTION_11_0(v12);
  v1[180] = OUTLINED_FUNCTION_28_2();
  v1[181] = swift_task_alloc();
  v1[182] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v13, v14, v15);
}

{
  uint64_t v0;
  long long *v1;
  _OWORD *v2;
  void *v3;
  long long *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  void *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  char v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  char v32;
  uint64_t v33;
  void *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  long long *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  long long *v77;
  long long *v78;
  long long v79;
  long long v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  Swift::String v90;
  PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional v91;
  PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames value;
  unint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  long long *v101;
  char v102;
  _OWORD *v103;
  long long v104;
  long long v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  id v114;
  id v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  void (*v122)(uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(void);
  uint64_t v138;
  void *v139;
  uint64_t v140;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  id v149;
  uint64_t ObjectType;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(void);
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  _OWORD *v158;
  long long v159;
  long long v160;
  void (*v161)(void);
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint8_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(void);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  os_log_type_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  os_log_type_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void (*v194)(void);
  uint64_t v195;
  NSObject *v196;
  os_log_type_t v197;
  uint8_t *v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  NSObject *v212;
  os_log_type_t v213;
  uint8_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void (*v221)(void);
  uint64_t v223;
  void *v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  id v239;
  uint64_t v240;
  unint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  void *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  uint64_t v253;
  NSObject *v254;
  os_log_type_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  void (*v261)(void);
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  uint64_t v268;
  uint64_t *v269;
  uint64_t v270;
  void *v271;
  void *v272;
  void *v273;
  void *v274;
  uint64_t v275;
  long long *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  long long *v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  long long *v294;
  uint64_t v295;
  uint64_t v296;
  long long *v297;
  uint64_t v298;
  void *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void (*v305)(uint64_t, uint64_t, uint64_t);
  uint64_t v306;
  void *v307;
  os_log_type_t v308;
  uint64_t v309;
  void *v310;
  void *v311;
  uint64_t v312;
  void *v313;
  uint64_t v314[7];
  uint64_t v315;

  v315 = v0;
  uint64_t v1 = (long long *)(v0 + 16);
  uint64_t v2 = (_OWORD *)(v0 + 64);
  v272 = (void *)(v0 + 112);
  v298 = v0 + 152;
  v297 = (long long *)(v0 + 192);
  v271 = (void *)(v0 + 232);
  v273 = (void *)(v0 + 352);
  v274 = (void *)(v0 + 272);
  uint64_t v3 = (void *)(v0 + 392);
  v292 = v0 + 432;
  v294 = (long long *)(v0 + 312);
  v304 = v0 + 472;
  v280 = v0 + 512;
  v275 = v0 + 552;
  v306 = v0 + 592;
  v281 = v0 + 672;
  v282 = (long long *)(v0 + 752);
  v276 = (long long *)(v0 + 792);
  uint64_t v4 = (long long *)(v0 + 832);
  v310 = (void *)(v0 + 912);
  v299 = (void *)(v0 + 952);
  v290 = v0 + 992;
  v279 = v0 + 1032;
  v270 = v0 + 1056;
  v296 = v0 + 1144;
  v302 = v0 + 1152;
  v303 = v0 + 1080;
  v277 = v0 + 1168;
  v278 = v0 + 1184;
  v266 = v0 + 1216;
  v268 = v0 + 1224;
  v285 = (void *)(v0 + 1232);
  uint64_t v5 = (uint64_t *)(v0 + 1248);
  v301 = v0 + 1288;
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v6 + 152))();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v39 = v313[182];
      uint64_t v40 = v313[177];
      uint64_t v41 = v313[172];
      char v42 = v313[171];
      id v43 = (void *)v313[163];
      char v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
      uint64_t v45 = (long long *)(v39 + *(int *)(v44 + 48));
      uint64_t v46 = (uint64_t *)(v39 + *(int *)(v44 + 64));
      uint64_t v47 = *v46;
      v313[183] = *v46;
      uint64_t v48 = v46[1];
      v313[184] = v48;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v40, v39, v42);
      outlined init with take of AppSelectionSignalComponent(v45, (uint64_t)v310);
      __swift_project_boxed_opaque_existential_1(v43 + 7, v43[10]);
      uint64_t v49 = OUTLINED_FUNCTION_54_21();
      v50(v49);
      OUTLINED_FUNCTION_23();
      LOBYTE(v42) = (*(uint64_t (**)(void))(v51 + 160))();
      swift_release();
      if (v42)
      {
        __swift_project_boxed_opaque_existential_1(v43 + 7, v43[10]);
        uint64_t v52 = OUTLINED_FUNCTION_31_29();
        v53(v52);
        __swift_project_boxed_opaque_existential_1(v3, v313[52]);
        DeviceState.isStandaloneIOS.getter();
        long long v55 = v54;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
        if (v55)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
          uint64_t v56 = swift_allocObject();
          *(_OWORD *)(v56 + 16) = xmmword_467720;
          *(void *)(v56 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(void *)(v56 + 40) = v57;
          *(void *)(v56 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(void *)(v56 + 56) = v58;
          uint64_t v59 = specialized Sequence<>.contains(_:)(v47, v48, (void *)v56);
          swift_setDeallocating();
          specialized _ContiguousArrayStorage.__deallocating_deinit();
          if (v59)
          {
            __swift_project_boxed_opaque_existential_1(v43 + 7, v43[10]);
            uint64_t v60 = OUTLINED_FUNCTION_20_7();
            if (v61(v60))
            {
              CurrentRequest.refId.getter();
              uint64_t v63 = v62;
              swift_release();
              v313[185] = v63;
              if (v63)
              {
                __swift_project_boxed_opaque_existential_1(v43 + 7, v43[10]);
                uint64_t v64 = OUTLINED_FUNCTION_31_29();
                v65(v64);
                __swift_project_boxed_opaque_existential_1(v313 + 79, v313[82]);
                id v67 = v43[10];
                uint64_t v66 = v43[11];
                __swift_project_boxed_opaque_existential_1(v43 + 7, v67);
                (*(void (**)(uint64_t, uint64_t))(v66 + 32))(v67, v66);
                OUTLINED_FUNCTION_16_57(v310);
                PhoneCallNLIntent.applicationId.getter();
                v313[186] = v68;
                unsigned int v69 = (void *)swift_task_alloc();
                v313[187] = v69;
                *unsigned int v69 = v313;
                v69[1] = PhoneCallFlow.execute();
                OUTLINED_FUNCTION_12_58();
                __asm { BRAA            X8, X16 }
              }
            }
          }
        }
      }
      int v120 = (void *)v313[163];
      __swift_project_boxed_opaque_existential_1(v120 + 7, v120[10]);
      uint64_t v121 = OUTLINED_FUNCTION_20_46();
      v122(v121);
      v287 = v313[123];
      v309 = v313[122];
      __swift_project_boxed_opaque_existential_1(v299, v309);
      uint64_t v123 = v120[22];
      outlined init with copy of SharedGlobalsProviding((uint64_t)(v120 + 2), v290);
      outlined init with copy of SharedGlobalsProviding((uint64_t)(v120 + 7), v292);
      type metadata accessor for StartCallCATsSimple();
      OUTLINED_FUNCTION_51_21();
      swift_bridgeObjectRetain();
      static CATOption.defaultMode.getter();
      v284 = CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for PhoneCallDisplayTextCATsSimple();
      static CATOption.defaultMode.getter();
      v283 = CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for ResponseFactory();
      OUTLINED_FUNCTION_21_0();
      uint64_t v124 = ResponseFactory.init()();
      if (one-time initialization token for instance != -1) {
        swift_once();
      }
      v288 = v313[183];
      v289 = v313[184];
      v286 = v313[177];
      uint64_t v125 = v313[163];
      uint64_t v126 = static EligibleAppFinder.instance;
      type metadata accessor for AppInfoBuilder();
      int v127 = OUTLINED_FUNCTION_18_17();
      uint64_t v128 = type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy();
      uint64_t v129 = swift_allocObject();
      swift_retain();
      specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)(v123, v290, v292, v284, v283, v124, v126, v127, 0, 0, (uint64_t)v314, v129, v266, v268, v270, (uint64_t)v271, (uint64_t)v272, (uint64_t)v273, (uint64_t)v274,
        v275,
        v276,
        v277,
        v278,
        v279);
      v313[143] = v130;
      outlined init with copy of SharedGlobalsProviding((uint64_t)v310, (uint64_t)v294);
      outlined init with copy of SharedGlobalsProviding(v125 + 56, (uint64_t)v297);
      uint64_t v131 = type metadata accessor for PhoneProtectedAppCheckStrategy();
      uint64_t v132 = swift_allocObject();
      outlined init with take of AppSelectionSignalComponent(v294, v132 + 16);
      outlined init with take of AppSelectionSignalComponent(v297, v132 + 56);
      v313[22] = v131;
      v313[23] = lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow(&lazy protocol witness table cache variable for type PhoneProtectedAppCheckStrategy and conformance PhoneProtectedAppCheckStrategy, (void (*)(uint64_t))type metadata accessor for PhoneProtectedAppCheckStrategy);
      v313[19] = v132;
      uint64_t v133 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v287 + 72);
      uint64_t v134 = type metadata accessor for INIntent();
      uint64_t v135 = lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow(&lazy protocol witness table cache variable for type PhoneAppResolutionOnDeviceFlowStrategy and conformance PhoneAppResolutionOnDeviceFlowStrategy, (void (*)(uint64_t))type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy);
      uint64_t v136 = v133(v286, v296, v298, v128, v134, v135, v309, v287);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v298);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v299);
      v313[141] = v136;
      uint64_t v14 = v310;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(*(void *)v125 + 216))(v286, v310, v288, v289);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyAppResolutionFlow<INIntent>);
      lazy protocol witness table accessor for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>();
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      OUTLINED_FUNCTION_11();
      v137();
      swift_release();
      goto LABEL_38;
    case 2u:
      uint64_t v72 = v313[182];
      os_log_type_t v73 = v313[176];
      uint64_t v74 = v313[172];
      id v75 = v313[171];
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      uint64_t v77 = (long long *)(v72 + *(int *)(v76 + 48));
      uint64_t v78 = (long long *)(v72 + *(int *)(v76 + 80));
      uint64_t v79 = *v78;
      os_log_type_t v80 = v78[2];
      v1[1] = v78[1];
      v1[2] = v80;
      void *v1 = v79;
      v305 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32);
      v305(v73, v72, v75);
      uint64_t v81 = (void *)v306;
      outlined init with take of AppSelectionSignalComponent(v77, v306);
      PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v83 = v313[2];
      uint64_t v82 = v313[3];
      v313[188] = v83;
      v313[144] = v82;
      outlined init with take of URL?((uint64_t)(v313 + 4), v303, &demangling cache variable for type metadata for String?);
      v313[161] = v313[7];
      v312 = v83;
      swift_retain();
      outlined retain of Set<String>(v302);
      outlined retain of String?(v303);
      outlined retain of Set<String>(v301);
      uint64_t v84 = swift_bridgeObjectRetain();
      specialized _ArrayProtocol.filter(_:)(v84, (uint64_t)v1);
      uint64_t v86 = v85;
      uint64_t v87 = *(void *)(v85 + 16);
      if (v87)
      {
        swift_bridgeObjectRetain();
        uint64_t v88 = v86 + 40;
        unint64_t v89 = _swiftEmptyArrayStorage;
        do
        {
          swift_bridgeObjectRetain();
          v90._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_78_2();
          v91.value = PhoneCallIntentClassNames.init(intentClassName:)(v90).value;
          if (v91.value != PhoneCallFlowDelegatePlugin_PhoneCallIntentClassNames_unknownDefault)
          {
            value = v91.value;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              unint64_t v89 = v94;
            }
            uint64_t v93 = v89[2];
            if (v93 >= v89[3] >> 1)
            {
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              unint64_t v89 = v95;
            }
            long long v89[2] = v93 + 1;
            *((unsigned char *)v89 + v93 + 32) = value;
          }
          v88 += 16;
          --v87;
        }
        while (v87);
        swift_bridgeObjectRelease();
        uint64_t v81 = (void *)v306;
      }
      else
      {
        unint64_t v89 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      if (!v89[2])
      {
        swift_bridgeObjectRelease();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v162 = type metadata accessor for Logger();
        __swift_project_value_buffer(v162, (uint64_t)static Logger.siriPhone);
        uint64_t v163 = Logger.logObject.getter();
        uint64_t v164 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v163, v164))
        {
          uint64_t v165 = (uint8_t *)OUTLINED_FUNCTION_7_2();
          *(_WORD *)uint64_t v165 = 0;
          _os_log_impl(&dword_0, v163, v164, "#PhoneCallFlow appResolutionComplete is completed but we can't find a valid intent to match", v165, 2u);
          OUTLINED_FUNCTION_6();
        }
        uint64_t v166 = v313[168];
        uint64_t v167 = v313[165];
        uint64_t v168 = v313[163];

        Input.parse.getter();
        __swift_storeEnumTagSinglePayload(v167, 0, 1, v166);
        type metadata accessor for StartCallCATsSimple();
        static CATOption.defaultMode.getter();
        int v169 = CATWrapperSimple.__allocating_init(options:globals:)();
        os_log_type_t v170 = static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v168 + 56, v167, v169);
        swift_release();
        uint64_t v171 = outlined destroy of FlowActivity?(v167, &demangling cache variable for type metadata for Parse?);
        uint64_t v172 = (*(uint64_t (**)(uint64_t))(*(void *)v170 + 112))(v171);
        swift_release();
        v313[145] = v172;
        type metadata accessor for SimpleOutputFlowAsync();
        static ExecuteResponse.complete<A>(next:)();
        swift_release();
        outlined release of Set<String>(v302);
        outlined release of String?(v303);
        outlined release of Set<String>(v301);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v306);
        OUTLINED_FUNCTION_20_7();
        OUTLINED_FUNCTION_3_86();
        v173();
        goto LABEL_82;
      }
      unint64_t v144 = v313[163];
      uint64_t v145 = *((unsigned char *)v89 + 32);
      swift_bridgeObjectRelease();
      uint64_t v146 = v144 + 56;
      char v147 = static UnsupportedPhoneCall.from(nlIntent:app:sharedGlobals:)(v81, v312, (void *)(v144 + 56));
      if (v147 == 14)
      {
        char v148 = v313[175];
        v293 = v313[173];
        v300 = v313[172];
        v291 = v313[171];
        v295 = v313[163];
        type metadata accessor for PhoneIntentsRestrictedGuardFlow();
        int v149 = PhoneCallIntentClassNames.intentInstance.getter(v145);
        uint64_t ObjectType = swift_getObjectType();

        v313[151] = ObjectType;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INIntent.Type);
        unint64_t v151 = String.init<A>(describing:)();
        unint64_t v153 = v152;
        outlined init with copy of SharedGlobalsProviding(v146, v281);
        swift_retain();
        v313[149] = PhoneIntentsRestrictedGuardFlow.__allocating_init(selectedIntent:app:sharedGlobals:)(v151, v153, v312, v281);
        OUTLINED_FUNCTION_12();
        v154();
        outlined init with copy of SharedGlobalsProviding(v306, (uint64_t)v282);
        uint64_t v155 = (*(unsigned __int8 *)(v300 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v300 + 80);
        uint64_t v156 = (v155 + v293 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v157 = swift_allocObject();
        *(void *)(v157 + 16) = v295;
        v305(v157 + v155, v148, v291);
        outlined init with take of AppSelectionSignalComponent(v282, v157 + v156);
        *(unsigned char *)(v157 + v156 + 40) = v145;
        uint64_t v158 = (_OWORD *)(v157 + ((v155 + v293 + 55) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v159 = v1[2];
        int v160 = *v1;
        v158[1] = v1[1];
        v158[2] = v159;
        *uint64_t v158 = v160;
        swift_retain();
        swift_retain();
        outlined retain of Set<String>(v302);
        outlined retain of String?(v303);
        outlined retain of Set<String>(v301);
        lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow((unint64_t *)&lazy protocol witness table cache variable for type PhoneIntentsRestrictedGuardFlow and conformance PhoneIntentsRestrictedGuardFlow, (void (*)(uint64_t))type metadata accessor for PhoneIntentsRestrictedGuardFlow);
        static ExecuteResponse.ongoing<A>(next:childCompletion:)();
        swift_release();
        swift_release();
        outlined release of Set<String>(v302);
        outlined release of String?(v303);
        outlined release of Set<String>(v301);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v306);
        OUTLINED_FUNCTION_11();
        v161();
        goto LABEL_82;
      }
      uint64_t v186 = v147;
      if (UnsupportedPhoneCall.rawValue.getter(v147) == 0xD00000000000001ELL && v187 == 0x8000000000490500)
      {
        swift_bridgeObjectRelease();
LABEL_77:
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v211 = type metadata accessor for Logger();
        __swift_project_value_buffer(v211, (uint64_t)static Logger.siriPhone);
        uint64_t v212 = Logger.logObject.getter();
        long long v213 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v212, v213))
        {
          long long v214 = (uint8_t *)OUTLINED_FUNCTION_7_2();
          *(_WORD *)long long v214 = 0;
          _os_log_impl(&dword_0, v212, v213, "#PhoneCallFlow Returning unsupported device GroupFaceTime", v214, 2u);
          OUTLINED_FUNCTION_6();
        }

        outlined init with copy of SharedGlobalsProviding(v146, (uint64_t)v276);
        type metadata accessor for StartCallCATs();
        OUTLINED_FUNCTION_52_20();
        long long v215 = CATWrapper.__allocating_init(options:globals:)();
        type metadata accessor for StartCallCATsSimple();
        OUTLINED_FUNCTION_52_20();
        long long v216 = CATWrapperSimple.__allocating_init(options:globals:)();
        type metadata accessor for PhoneCallDisplayTextCATsSimple();
        OUTLINED_FUNCTION_52_20();
        long long v217 = CATWrapperSimple.__allocating_init(options:globals:)();
        type metadata accessor for UnsupportedFlowCATs();
        OUTLINED_FUNCTION_52_20();
        long long v218 = CATWrapper.__allocating_init(options:globals:)();
        type metadata accessor for UnsupportedFaceTimeOutputProvider();
        uint64_t v219 = swift_allocObject();
        specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)(v186, v276, v215, v216, v217, v218, 0, 0, 0, 0, v219);
        OUTLINED_FUNCTION_23();
        v313[146] = (*(uint64_t (**)(void))(v220 + 144))();
        type metadata accessor for SimpleOutputFlowAsync();
        static ExecuteResponse.complete<A>(next:)();
        swift_release();
        swift_release();
        outlined release of Set<String>(v302);
        outlined release of String?(v303);
        outlined release of Set<String>(v301);
        __swift_destroy_boxed_opaque_existential_1(v306);
        OUTLINED_FUNCTION_3_86();
        v221();
        swift_release();
        goto LABEL_82;
      }
      long long v210 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v210) {
        goto LABEL_77;
      }
      long long v224 = (void *)swift_task_alloc();
      v313[189] = v224;
      char *v224 = v313;
      v224[1] = PhoneCallFlow.execute();
      OUTLINED_FUNCTION_12_58();
      return PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)(v225, v226, v227, v228, v229);
    case 3u:
      char v96 = v313[182];
      uint64_t v97 = v313[174];
      uint64_t v98 = v313[172];
      uint64_t v99 = v313[171];
      uint64_t v100 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
      uint64_t v101 = (long long *)(v96 + v100[12]);
      uint64_t v102 = *(unsigned char *)(v96 + v100[16]);
      uint64_t v103 = (_OWORD *)(v96 + v100[20]);
      uint64_t v105 = v103[1];
      uint64_t v104 = v103[2];
      *uint64_t v2 = *v103;
      v2[1] = v105;
      v2[2] = v104;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v97, v96, v99);
      outlined init with take of AppSelectionSignalComponent(v101, v304);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      id v106 = type metadata accessor for Logger();
      __swift_project_value_buffer(v106, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      uint64_t v107 = Logger.logObject.getter();
      uint64_t v108 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v107, v108))
      {
        uint64_t v109 = swift_slowAlloc();
        v314[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v109 = 136315394;
        swift_bridgeObjectRetain();
        v308 = v108;
        uint64_t v110 = v102;
        long long v111 = Array.description.getter();
        uint64_t v113 = v112;
        swift_bridgeObjectRelease();
        *uint64_t v5 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v111, v113, v314);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v109 + 12) = 2080;
        uint64_t v114 = PhoneCallIntentClassNames.intentInstance.getter(v110);
        uint64_t v115 = [v114 _className];

        uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v118 = v117;

        uint64_t v119 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v116, v118, v314);
        OUTLINED_FUNCTION_95_6(v119, v285);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v107, v308, "#PhoneCallFlow From list %s, selecting %s", (uint8_t *)v109, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v139 = (void *)swift_task_alloc();
      v313[190] = v139;
      char *v139 = v313;
      v139[1] = PhoneCallFlow.execute();
      OUTLINED_FUNCTION_12_58();
      return PhoneCallFlow.chooseRCHFlow(input:phoneCallNLIntent:intentName:resolvedApp:)();
    case 4u:
      static ExecuteResponse.complete()();
      goto LABEL_82;
    default:
      v311 = (void *)(v0 + 872);
      uint64_t v7 = v313[170];
      uint64_t v8 = (void *)v313[163];
      (*(void (**)(void, void, void))(v313[172] + 32))(v313[178], v313[182], v313[171]);
      v307 = v8 + 7;
      __swift_project_boxed_opaque_existential_1(v8 + 7, v8[10]);
      uint64_t v9 = OUTLINED_FUNCTION_54_21();
      uint64_t v11 = v10(v9);
      Input.parse.getter();
      (*(void (**)(uint64_t))(*(void *)v11 + 192))(v7);
      swift_release();
      uint64_t v12 = OUTLINED_FUNCTION_20_7();
      v13(v12);
      if (!v313[107])
      {
        outlined destroy of FlowActivity?((uint64_t)v4, &demangling cache variable for type metadata for PhoneCallNLIntent?);
        type metadata accessor for TransformationError();
        lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
        swift_allocError();
        *unint64_t v142 = 0xD00000000000001FLL;
        v142[1] = 0x800000000049CA70;
        OUTLINED_FUNCTION_10();
        (*(void (**)(void))(v143 + 104))();
        swift_willThrow();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        char v195 = type metadata accessor for Logger();
        __swift_project_value_buffer(v195, (uint64_t)static Logger.siriPhone);
        swift_errorRetain();
        swift_errorRetain();
        char v196 = Logger.logObject.getter();
        os_log_type_t v197 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v196, v197))
        {
          uint64_t v198 = (uint8_t *)OUTLINED_FUNCTION_47();
          v314[0] = OUTLINED_FUNCTION_14_0();
          *(_DWORD *)uint64_t v198 = 136315138;
          swift_getErrorValue();
          os_log_type_t v199 = Error.localizedDescription.getter();
          v313[150] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v199, v200, v314);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl(&dword_0, v196, v197, "#PhoneCallFlow Encountered error when converting Input: %s", v198, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        uint64_t v201 = v313[178];
        uint64_t v202 = v313[172];
        os_log_type_t v203 = v313[171];
        uint64_t v204 = v313[168];
        uint64_t v205 = v313[165];
        Input.parse.getter();
        __swift_storeEnumTagSinglePayload(v205, 0, 1, v204);
        type metadata accessor for StartCallCATsSimple();
        static CATOption.defaultMode.getter();
        uint64_t v206 = CATWrapperSimple.__allocating_init(options:globals:)();
        uint64_t v207 = static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)((uint64_t)v307, v205, v206);
        swift_release();
        uint64_t v208 = outlined destroy of FlowActivity?(v205, &demangling cache variable for type metadata for Parse?);
        v209 = (*(uint64_t (**)(uint64_t))(*(void *)v207 + 112))(v208);
        swift_release();
        v313[147] = v209;
        type metadata accessor for SimpleOutputFlowAsync();
        static ExecuteResponse.complete<A>(next:)();
        swift_errorRelease();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v201, v203);
LABEL_82:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_47_0();
        OUTLINED_FUNCTION_12_58();
        __asm { BRAA            X1, X16 }
      }
      uint64_t v14 = v311;
      outlined init with take of AppSelectionSignalComponent(v4, (uint64_t)v311);
      OUTLINED_FUNCTION_16_57(v311);
      if (PhoneCallNLIntent.hasCancellation()())
      {
        __swift_project_boxed_opaque_existential_1(v307, v8[10]);
        uint64_t v15 = OUTLINED_FUNCTION_3_35();
        v16(v15);
        OUTLINED_FUNCTION_23();
        uint64_t v18 = (*(uint64_t (**)(void))(v17 + 208))();
        swift_release();
        if (v18)
        {
          uint64_t v19 = v8[10];
          uint64_t v20 = v8[11];
          __swift_project_boxed_opaque_existential_1(v307, v19);
          (*(void (**)(uint64_t, uint64_t))(v20 + 120))(v19, v20);
          __swift_project_boxed_opaque_existential_1(v273, v313[47]);
          uint64_t v21 = OUTLINED_FUNCTION_37_31();
          v22(v21);
          __swift_project_boxed_opaque_existential_1(v274, v313[37]);
          unint64_t v23 = OUTLINED_FUNCTION_3_35();
          uint64_t v25 = v24(v23);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v274);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v273);
          if (v25)
          {
            __swift_project_boxed_opaque_existential_1(v307, v8[10]);
            uint64_t v26 = OUTLINED_FUNCTION_37_31();
            v27(v26);
            uint64_t v28 = v313[32];
            uint64_t v29 = v313[33];
            __swift_project_boxed_opaque_existential_1(v271, v28);
            (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
            __swift_project_boxed_opaque_existential_1(v272, v313[17]);
            uint64_t v30 = OUTLINED_FUNCTION_3_35();
            uint64_t v32 = v31(v30);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v272);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v271);
            if (v32)
            {
              if (one-time initialization token for siriPhone != -1) {
                swift_once();
              }
              uint64_t v33 = type metadata accessor for Logger();
              __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
              int v34 = (void *)Logger.logObject.getter();
              uint64_t v35 = static os_log_type_t.debug.getter();
              if (OUTLINED_FUNCTION_18(v35))
              {
                *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
                OUTLINED_FUNCTION_25_4(&dword_0, v36, v37, "#PhoneCallFlow received cancel from user during a drop in call, sending hang up flow.");
                OUTLINED_FUNCTION_6();
              }

              static HangUpDirectInvocationFlowFactory.makeHangUpFlow(sharedGlobals:)(v307);
              static ExecuteResponse.complete(next:)();
              swift_release();
              OUTLINED_FUNCTION_3_86();
              v38();
LABEL_38:
              unint64_t v138 = (uint64_t)v14;
              goto LABEL_68;
            }
          }
        }
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        id v188 = type metadata accessor for Logger();
        __swift_project_value_buffer(v188, (uint64_t)static Logger.siriPhone);
        Logger.logObject.getter();
        int v189 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_18(v189))
        {
          *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
          OUTLINED_FUNCTION_25_4(&dword_0, v190, v191, "#PhoneCallFlow received cancel from user, prompt cancel dialog");
          OUTLINED_FUNCTION_6();
        }
        OUTLINED_FUNCTION_31_36();
        type metadata accessor for PhoneCallCommonCATsSimple();
        static CATOption.defaultMode.getter();
        CATWrapperSimple.__allocating_init(options:globals:)();
        swift_retain();
        static DialogPhase.canceled.getter();
        outlined init with copy of SharedGlobalsProviding((uint64_t)v307, v280);
        type metadata accessor for DialogOutputFactory();
        OUTLINED_FUNCTION_21_0();
        DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
        swift_release();
        OUTLINED_FUNCTION_22();
        uint64_t v193 = (*(uint64_t (**)(void))(v192 + 112))();
        swift_release();
        v313[157] = v193;
        type metadata accessor for SimpleOutputFlowAsync();
      }
      else
      {
        OUTLINED_FUNCTION_16_57(v311);
        if (!PhoneCallNLIntent.hasRejection()())
        {
          static PhoneCallRequestSupportPolicy.getIntentFromInputParse(phoneCallNLIntent:sharedGlobals:)((uint64_t)v311, (uint64_t)v307, v174, v175, v176, v177, v178, v179, v262, v263, v264, v265, v266, v268, v270, (uint64_t)v271, (uint64_t)v272, (uint64_t)v273, (uint64_t)v274,
            v275);
          v232 = v231;
          v233 = v313[181];
          v234 = v313[180];
          v235 = v313[178];
          v236 = v313[172];
          v237 = v313[171];
          unint64_t v238 = v313[163];
          v239 = [v231 _className];

          v240 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v242 = v241;

          v243 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
          v244 = v233 + *(int *)(v243 + 48);
          v245 = (uint64_t *)(v233 + *(int *)(v243 + 64));
          v246 = v235;
          v247 = v311;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v236 + 16))(v233, v246, v237);
          outlined init with copy of SharedGlobalsProviding((uint64_t)v311, v244);
          *v245 = v240;
          v245[1] = v242;
          swift_storeEnumTagMultiPayload();
          outlined init with take of PhoneCallFlow.State(v233, v234);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v248 = OUTLINED_FUNCTION_78_2();
          outlined assign with take of PhoneCallFlow.State(v248, v249);
          v250 = v240;
          swift_endAccess();
          v251 = OUTLINED_FUNCTION_96();
          *(void *)(v238 + 176) = static PhoneCallFlow.buildIntentTypeSequence(intentTypeName:)(v251, v252);
          swift_bridgeObjectRelease();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          v253 = type metadata accessor for Logger();
          __swift_project_value_buffer(v253, (uint64_t)static Logger.siriPhone);
          swift_retain_n();
          swift_bridgeObjectRetain();
          v254 = Logger.logObject.getter();
          v255 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v254, v255))
          {
            v256 = swift_slowAlloc();
            v314[0] = swift_slowAlloc();
            *(_DWORD *)v256 = 136315394;
            swift_bridgeObjectRetain();
            v257 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v250, v242, v314);
            OUTLINED_FUNCTION_95_6(v257, v267);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v256 + 12) = 2080;
            swift_bridgeObjectRetain();
            v258 = Array.description.getter();
            v260 = v259;
            swift_bridgeObjectRelease();
            *v269 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v258, v260, v314);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v254, v255, "#PhoneCallFlow Chose SKIntent name: %s. Will try %s. Proceeding to app resolution.", (uint8_t *)v256, 0x16u);
            swift_arrayDestroy();
            v247 = v311;
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          static ExecuteResponse.replan(requireInput:)();
          OUTLINED_FUNCTION_96();
          OUTLINED_FUNCTION_3_86();
          v261();
          unint64_t v138 = (uint64_t)v247;
          goto LABEL_68;
        }
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v180 = type metadata accessor for Logger();
        __swift_project_value_buffer(v180, (uint64_t)static Logger.siriPhone);
        Logger.logObject.getter();
        uint64_t v181 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_18(v181))
        {
          *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
          OUTLINED_FUNCTION_25_4(&dword_0, v182, v183, "#PhoneCallFlow parse has rejection. Prompt cancel dialog.");
          OUTLINED_FUNCTION_6();
        }
        OUTLINED_FUNCTION_31_36();
        type metadata accessor for PhoneCallCommonCATsSimple();
        static CATOption.defaultMode.getter();
        CATWrapperSimple.__allocating_init(options:globals:)();
        swift_retain();
        static DialogPhase.canceled.getter();
        outlined init with copy of SharedGlobalsProviding((uint64_t)v307, v275);
        type metadata accessor for DialogOutputFactory();
        OUTLINED_FUNCTION_21_0();
        DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
        swift_release();
        OUTLINED_FUNCTION_22();
        uint64_t v185 = (*(uint64_t (**)(void))(v184 + 112))();
        swift_release();
        v313[155] = v185;
        type metadata accessor for SimpleOutputFlowAsync();
      }
      static ExecuteResponse.complete<A>(next:)();
      swift_release();
      OUTLINED_FUNCTION_3_86();
      v194();
      unint64_t v138 = (uint64_t)v311;
LABEL_68:
      __swift_destroy_boxed_opaque_existential_1(v138);
      goto LABEL_82;
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 712;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  char v39 = v0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 632);
  uint64_t v1 = *(void *)(v0 + 1304);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_7();
  __swift_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v4 = OUTLINED_FUNCTION_78_2();
  v5(v4);
  uint64_t v36 = *(void *)(v0 + 984);
  uint64_t v37 = *(void *)(v0 + 976);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 952), v37);
  uint64_t v6 = *(void *)(v1 + 176);
  outlined init with copy of SharedGlobalsProviding(v1 + 16, v0 + 992);
  outlined init with copy of SharedGlobalsProviding(v1 + 56, v0 + 432);
  type metadata accessor for StartCallCATsSimple();
  OUTLINED_FUNCTION_51_21();
  uint64_t v30 = v6;
  swift_bridgeObjectRetain();
  static CATOption.defaultMode.getter();
  uint64_t v26 = OUTLINED_FUNCTION_50_23();
  type metadata accessor for PhoneCallDisplayTextCATsSimple();
  OUTLINED_FUNCTION_4_64();
  uint64_t v25 = OUTLINED_FUNCTION_50_23();
  type metadata accessor for ResponseFactory();
  OUTLINED_FUNCTION_21_0();
  unint64_t v23 = ResponseFactory.init()();
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  uint64_t v31 = *(void **)(v0 + 1464);
  uint64_t v33 = *(void *)(v0 + 1472);
  uint64_t v27 = *(void *)(v0 + 1416);
  uint64_t v7 = *(void *)(v0 + 1304);
  uint64_t v35 = *(void *)(v0 + 1296);
  uint64_t v8 = static EligibleAppFinder.instance;
  type metadata accessor for AppInfoBuilder();
  uint64_t v9 = OUTLINED_FUNCTION_18_17();
  uint64_t v10 = type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy();
  uint64_t v11 = swift_allocObject();
  swift_retain();
  specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)(v30, v0 + 992, v0 + 432, v26, v25, v23, v8, v9, 0, 0, (uint64_t)&v38, v11, v22, v23, v0 + 912, v25, v26, v27, v0 + 1144,
    v30,
    v31,
    v33,
    v35,
    v0 + 992);
  *(void *)(v0 + 1144) = v12;
  outlined init with copy of SharedGlobalsProviding(v0 + 912, v0 + 312);
  outlined init with copy of SharedGlobalsProviding(v7 + 56, v0 + 192);
  uint64_t v13 = type metadata accessor for PhoneProtectedAppCheckStrategy();
  uint64_t v14 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 312), v14 + 16);
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 192), v14 + 56);
  *(void *)(v0 + 176) = v13;
  *(void *)(v0 + 184) = lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow(&lazy protocol witness table cache variable for type PhoneProtectedAppCheckStrategy and conformance PhoneProtectedAppCheckStrategy, (void (*)(uint64_t))type metadata accessor for PhoneProtectedAppCheckStrategy);
  *(void *)(v0 + 152) = v14;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v36 + 72);
  uint64_t v16 = type metadata accessor for INIntent();
  uint64_t v17 = lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow(&lazy protocol witness table cache variable for type PhoneAppResolutionOnDeviceFlowStrategy and conformance PhoneAppResolutionOnDeviceFlowStrategy, (void (*)(uint64_t))type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy);
  uint64_t v18 = v15(v28, v29, v0 + 152, v10, v16, v17, v37, v36);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 952);
  *(void *)(v0 + 1128) = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v7 + 216))(v28, v24, v32, v34);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyAppResolutionFlow<INIntent>);
  lazy protocol witness table accessor for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>();
  static ExecuteResponse.ongoing<A>(next:childCompletion:)();
  swift_release();
  OUTLINED_FUNCTION_11();
  v19();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v20();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1528) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t PhoneCallFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_29();
  uint64_t v15 = v14[176];
  uint64_t v16 = v14[172];
  uint64_t v17 = v14[171];
  swift_release();
  outlined release of Set<String>((uint64_t)(v14 + 144));
  outlined release of String?((uint64_t)(v14 + 135));
  outlined release of Set<String>((uint64_t)(v14 + 161));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v14 + 74));
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  OUTLINED_FUNCTION_6_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_28_1();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

{
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_29();
  if (v14[191])
  {
    uint64_t v15 = (uint64_t)(v14 + 137);
    uint64_t v16 = v14 + 158;
    uint64_t v17 = v14 + 159;
    static ExecuteResponse.complete(next:)();
    swift_release();
  }
  else
  {
    uint64_t v15 = (uint64_t)(v14 + 139);
    uint64_t v17 = v14 + 142;
    uint64_t v16 = v14 + 160;
    static ExecuteResponse.complete()();
  }
  swift_release();
  *uint64_t v16 = v14[9];
  outlined release of Set<String>((uint64_t)v16);
  outlined init with take of URL?((uint64_t)(v14 + 10), v15, &demangling cache variable for type metadata for String?);
  outlined release of String?(v15);
  *uint64_t v17 = v14[13];
  outlined release of Set<String>((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v14 + 59));
  uint64_t v18 = OUTLINED_FUNCTION_96();
  v19(v18);
  OUTLINED_FUNCTION_6_94();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_28_1();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t static PhoneCallFlow.buildIntentTypeSequence(intentTypeName:)(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  int value = PhoneCallIntentClassNames.init(intentClassName:)(v4).value;
  if ((value - 4) < 2)
  {
    if (one-time initialization token for emptyStartCallIntent != -1) {
      swift_once();
    }
    id v6 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    if (one-time initialization token for emptyStartAudioCallIntent != -1) {
      swift_once();
    }
    id v10 = [(id)static PhoneCallIntentClassNames.emptyStartAudioCallIntent _className];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v15 = v14;
    unint64_t v16 = *(void *)(v14 + 16);
    unint64_t v17 = *(void *)(v14 + 24);
    unint64_t v18 = v16 + 1;
    swift_bridgeObjectRetain();
    if (v16 >= v17 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v15 = v49;
    }
    *(void *)(v15 + 16) = v18;
    uint64_t v19 = v15 + 16 * v16;
    *(void *)(v19 + 32) = v7;
    *(void *)(v19 + 40) = v9;
    unint64_t v20 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    if (v18 >= v20 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v15 = v50;
    }
    *(void *)(v15 + 16) = v16 + 2;
    uint64_t v21 = v15 + 16 * v18;
    *(void *)(v21 + 32) = v11;
    *(void *)(v21 + 40) = v13;
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    return v15;
  }
  if (value == 6)
  {
    if (one-time initialization token for emptyStartCallIntent != -1) {
      swift_once();
    }
    id v22 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    id v26 = PhoneCallIntentClassNames.intentInstance.getter(6);
    id v27 = [v26 _className];

    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    if (one-time initialization token for emptyStartAudioCallIntent != -1) {
      swift_once();
    }
    id v31 = [(id)static PhoneCallIntentClassNames.emptyStartAudioCallIntent _className];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v15 = v35;
    unint64_t v36 = *(void *)(v35 + 16);
    unint64_t v37 = *(void *)(v35 + 24);
    unint64_t v38 = v36 + 1;
    swift_bridgeObjectRetain();
    if (v36 >= v37 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v15 = v51;
    }
    *(void *)(v15 + 16) = v38;
    uint64_t v39 = v15 + 16 * v36;
    *(void *)(v39 + 32) = v23;
    *(void *)(v39 + 40) = v25;
    unint64_t v40 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    if (v38 >= v40 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v15 = v52;
    }
    *(void *)(v15 + 16) = v36 + 2;
    uint64_t v41 = v15 + 16 * v38;
    *(void *)(v41 + 32) = v28;
    *(void *)(v41 + 40) = v30;
    unint64_t v42 = *(void *)(v15 + 16);
    unint64_t v43 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    if (v42 >= v43 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v15 = v53;
    }
    *(void *)(v15 + 16) = v42 + 1;
    uint64_t v44 = v15 + 16 * v42;
    *(void *)(v44 + 32) = v32;
    *(void *)(v44 + 40) = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v15 = v45;
  unint64_t v46 = *(void *)(v45 + 16);
  if (v46 >= *(void *)(v45 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v15 = v54;
  }
  *(void *)(v15 + 16) = v46 + 1;
  uint64_t v47 = v15 + 16 * v46;
  *(void *)(v47 + 32) = a1;
  *(void *)(v47 + 40) = a2;
  return v15;
}

uint64_t closure #3 in PhoneCallFlow.execute()(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for PhoneCallFlow.State(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v37 - v16;
  if (*a1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "#PhoneCallFlow Failed AppResolution postconditions", v21, 2u);
      swift_slowDealloc();
    }

    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
    swift_beginAccess();
    uint64_t v23 = (uint64_t)v17;
    uint64_t v24 = v22;
  }
  else
  {
    uint64_t v37 = a2;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "#PhoneCallFlow Passed AppResolution postconditions, proceed to RCH", v28, 2u);
      swift_slowDealloc();
    }

    uint64_t v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
    uint64_t v30 = (uint64_t)&v17[v29[12]];
    uint64_t v31 = v29[16];
    uint64_t v32 = &v17[v29[20]];
    uint64_t v33 = type metadata accessor for Input();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v17, a3, v33);
    outlined init with copy of SharedGlobalsProviding(a4, v30);
    v17[v31] = a5;
    uint64_t v40 = *(void *)(a6 + 8);
    outlined init with take of URL?(a6 + 16, (uint64_t)v39, &demangling cache variable for type metadata for String?);
    uint64_t v38 = *(void *)(a6 + 40);
    long long v34 = *(_OWORD *)(a6 + 16);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)a6;
    *((_OWORD *)v32 + 1) = v34;
    *((_OWORD *)v32 + 2) = *(_OWORD *)(a6 + 32);
    swift_storeEnumTagMultiPayload();
    outlined init with take of PhoneCallFlow.State((uint64_t)v17, (uint64_t)v15);
    uint64_t v35 = v37 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
    swift_beginAccess();
    swift_retain();
    outlined retain of Set<String>((uint64_t)&v40);
    outlined retain of String?((uint64_t)v39);
    outlined retain of Set<String>((uint64_t)&v38);
    uint64_t v23 = (uint64_t)v15;
    uint64_t v24 = v35;
  }
  outlined assign with take of PhoneCallFlow.State(v23, v24);
  return swift_endAccess();
}

void PhoneCallFlow.onAppResolutionComplete(originalInput:phoneCallNLIntent:intentType:)()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_11_14();
  uint64_t v4 = type metadata accessor for Input();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v9);
  id v10 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_12();
  v11();
  outlined init with copy of SharedGlobalsProviding(v3, (uint64_t)v17);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v12, v10, v4);
  outlined init with take of AppSelectionSignalComponent(v17, v14 + v13);
  uint64_t v15 = (void *)(v14 + ((v13 + 47) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v15 = v2;
  v15[1] = v0;
  swift_retain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallFlow.onAppResolutionComplete(input:phoneCallNLIntent:intentType:appResolutionFlowResult:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v75 = v6;
  uint64_t v74 = v7;
  type metadata accessor for PhoneCallFlow.State(0);
  OUTLINED_FUNCTION_10();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v66 - v12;
  uint64_t v14 = type metadata accessor for AppResolutionFlowResult();
  OUTLINED_FUNCTION_1();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_4();
  os_log_type_t v20 = (uint64_t *)(v19 - v18);
  OUTLINED_FUNCTION_12();
  v21();
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v16 + 88))(v20, v14) == enum case for AppResolutionFlowResult.resolved(_:))
  {
    os_log_type_t v73 = v13;
    uint64_t v68 = v5;
    (*(void (**)(uint64_t *, uint64_t))(v16 + 96))(v20, v14);
    uint64_t v22 = *v20;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v72 = v24;
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v70 = v3;
    unsigned int v69 = v11;
    if (v27)
    {
      uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v29 = OUTLINED_FUNCTION_14_0();
      id v67 = v1;
      *(void *)&long long v80 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      *(void *)&v79[0] = v22;
      type metadata accessor for App();
      lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, (void (*)(uint64_t))&type metadata accessor for App);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v79[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, (uint64_t *)&v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v25, v26, "#PhoneCallFlow: resolved app: %s", v28, 0xCu);
      swift_arrayDestroy();
      uint64_t v1 = v67;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v34 = v1[11];
    __swift_project_boxed_opaque_existential_1(v1 + 7, v1[10]);
    uint64_t v35 = OUTLINED_FUNCTION_18_22();
    v36(v35, v34);
    uint64_t v37 = v77[4];
    __swift_project_boxed_opaque_existential_1(v77, v77[3]);
    uint64_t v71 = v22;
    uint64_t v38 = App.appIdentifier.getter();
    (*(void (**)(void *__return_ptr, uint64_t))(v37 + 16))(v78, v38);
    swift_bridgeObjectRelease();
    outlined init with take of URL?((uint64_t)v78, (uint64_t)v79, &demangling cache variable for type metadata for AnnotatedApp?);
    if (*(void *)&v79[0])
    {
      long long v80 = v79[0];
      long long v81 = v79[1];
      long long v82 = v79[2];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      uint64_t v83 = *((void *)&v80 + 1);
      uint64_t v39 = v80;
      outlined init with take of URL?((uint64_t)&v81, (uint64_t)v84, &demangling cache variable for type metadata for String?);
      v85[0] = *((void *)&v82 + 1);
      swift_retain();
      outlined retain of Set<String>((uint64_t)&v83);
      outlined retain of String?((uint64_t)v84);
      outlined retain of Set<String>((uint64_t)v85);
      swift_retain();
      outlined retain of Set<String>((uint64_t)&v83);
      outlined retain of String?((uint64_t)v84);
      outlined retain of Set<String>((uint64_t)v85);
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.debug.getter();
      BOOL v42 = os_log_type_enabled(v40, v41);
      uint64_t v43 = (uint64_t)v73;
      if (v42)
      {
        uint64_t v44 = OUTLINED_FUNCTION_47();
        id v67 = v1;
        uint64_t v45 = (uint8_t *)v44;
        uint64_t v72 = OUTLINED_FUNCTION_14_0();
        v77[0] = v72;
        *(_DWORD *)uint64_t v45 = 136315138;
        uint64_t v76 = v39;
        type metadata accessor for App();
        lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, (void (*)(uint64_t))&type metadata accessor for App);
        uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v77);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        outlined release of Set<String>((uint64_t)&v83);
        outlined release of String?((uint64_t)v84);
        outlined release of Set<String>((uint64_t)v85);
        swift_release();
        outlined release of Set<String>((uint64_t)&v83);
        outlined release of String?((uint64_t)v84);
        outlined release of Set<String>((uint64_t)v85);
        _os_log_impl(&dword_0, v40, v41, "#PhoneCallFlow: Using cached annotated app: %s", v45, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();

        OUTLINED_FUNCTION_57_18();
      }
      else
      {
        OUTLINED_FUNCTION_57_18();
        swift_release();
        outlined release of Set<String>((uint64_t)&v83);
        outlined release of String?((uint64_t)v84);
        outlined release of Set<String>((uint64_t)v85);
        swift_release();
        outlined release of Set<String>((uint64_t)&v83);
        outlined release of String?((uint64_t)v84);
        outlined release of Set<String>((uint64_t)v85);
      }
      uint64_t v53 = v75;
      uint64_t v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      uint64_t v55 = v43 + v54[12];
      uint64_t v56 = (void *)(v43 + v54[16]);
      long long v57 = (_OWORD *)(v43 + v54[20]);
      type metadata accessor for Input();
      OUTLINED_FUNCTION_10();
      uint64_t v58 = OUTLINED_FUNCTION_20_46();
      v59(v58);
      outlined init with copy of SharedGlobalsProviding(v53, v55);
      uint64_t v60 = v70;
      *uint64_t v56 = v68;
      v56[1] = v60;
      long long v61 = v82;
      long long v62 = v80;
      v57[1] = v81;
      v57[2] = v61;
      *long long v57 = v62;
      swift_storeEnumTagMultiPayload();
      outlined init with take of PhoneCallFlow.State(v43, (uint64_t)v69);
      OUTLINED_FUNCTION_7_7();
      swift_bridgeObjectRetain();
      uint64_t v63 = OUTLINED_FUNCTION_96();
      outlined assign with take of PhoneCallFlow.State(v63, v64);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.error.getter();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v51 = (uint64_t)v73;
      if (v50)
      {
        uint64_t v52 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_0, v48, v49, "#PhoneCallFlow onAppResolutionComplete: can't find appId in the cache, return complete", v52, 2u);
        OUTLINED_FUNCTION_6();

        OUTLINED_FUNCTION_57_18();
      }
      else
      {
        OUTLINED_FUNCTION_57_18();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
      OUTLINED_FUNCTION_7_7();
      outlined assign with take of PhoneCallFlow.State(v51, v65);
    }
    swift_endAccess();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
    OUTLINED_FUNCTION_7_7();
    outlined assign with take of PhoneCallFlow.State((uint64_t)v13, v32);
    swift_endAccess();
    OUTLINED_FUNCTION_3_86();
    v33();
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 160) = a5;
  *(void *)(v6 + 168) = v5;
  *(unsigned char *)(v6 + 200) = a2;
  *(void *)(v6 + 152) = a1;
  uint64_t v10 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v10);
  *(void *)(v6 + 176) = OUTLINED_FUNCTION_35();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 184) = v11;
  void *v11 = v6;
  v11[1] = PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:);
  return static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:)(a4, a3, a5, v5 + 56);
}

uint64_t PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 192) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v25 = *(void *)(v0 + 152);
  HIDWORD(v19) = *(unsigned __int8 *)(v0 + 200);
  outlined init with copy of SharedGlobalsProviding(v2 + 56, v0 + 64);
  type metadata accessor for UnsupportedFlowCATs();
  uint64_t v23 = v1;
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v18 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for SearchCallHistoryCATs();
  OUTLINED_FUNCTION_4_64();
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for UnsupportedFlowCATsSimple();
  OUTLINED_FUNCTION_4_64();
  uint64_t v4 = OUTLINED_FUNCTION_50_23();
  type metadata accessor for ResponseFactory();
  OUTLINED_FUNCTION_21_0();
  uint64_t v5 = ResponseFactory.init()();
  type metadata accessor for AppInfoBuilder();
  uint64_t v6 = OUTLINED_FUNCTION_18_17();
  type metadata accessor for PhoneCallDisplayTextCATsSimple();
  OUTLINED_FUNCTION_4_64();
  uint64_t v7 = OUTLINED_FUNCTION_50_23();
  type metadata accessor for UnsupportedCallFlowOutputFactory();
  uint64_t v8 = OUTLINED_FUNCTION_21_0();
  specialized UnsupportedCallFlowOutputFactory.init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)(HIDWORD(v19), v3, v0 + 64, (uint64_t)v1, v18, v17, v4, v5, 0, 0, 0, 0, v6, v7, v8, v17, v18, v19, v2 + 56,
    v0 + 16,
    v0 + 104,
    (uint64_t)v23,
    v25,
    v26,
    v27,
    v28,
    v29);
  __swift_project_boxed_opaque_existential_1(v20, *(void *)(v2 + 80));
  uint64_t v9 = OUTLINED_FUNCTION_20_46();
  v10(v9);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1(v21, v11);
  *(void *)(v0 + 128) = v11;
  *(void *)(v0 + 136) = v12;
  __swift_allocate_boxed_opaque_existential_1(v22);
  OUTLINED_FUNCTION_10();
  (*(void (**)(void))(v13 + 16))();
  type metadata accessor for SimpleOutputFlowAsync();
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  uint64_t v14 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  *(void *)(v0 + 144) = v14;
  static ExecuteResponse.complete<A>(next:)();

  swift_release();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v15();
}

uint64_t closure #1 in PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a2 + 224) + **(int **)(*(void *)a2 + 224));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t PhoneCallFlow.chooseRCHFlow(input:phoneCallNLIntent:intentName:resolvedApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 152) = v2;
  *(void *)(v1 + 160) = v0;
  *(unsigned char *)(v1 + 232) = v3;
  *(void *)(v1 + 136) = v4;
  *(void *)(v1 + 144) = v5;
  uint64_t v6 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v6);
  *(void *)(v1 + 168) = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for Parse();
  *(void *)(v1 + 176) = v7;
  OUTLINED_FUNCTION_19_0(v7);
  *(void *)(v1 + 184) = v8;
  *(void *)(v1 + 192) = OUTLINED_FUNCTION_28_2();
  *(void *)(v1 + 200) = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;

  Input.parse.getter();
  uint64_t v1 = OUTLINED_FUNCTION_33_29();
  char v3 = v2(v1);
  if (v3 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v5 = *(uint64_t **)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v6 = *v5;
    *(void *)(v0 + 208) = *v5;
    uint64_t v7 = v4 + 56;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v8;
    *uint64_t v8 = v0;
    v8[1] = PhoneCallFlow.chooseRCHFlow(input:phoneCallNLIntent:intentName:resolvedApp:);
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(unsigned char *)(v0 + 232);
    return static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:)(v10, v9, v6, v7);
  }
  uint64_t v12 = v3;
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 184);
  if (v3 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(void, uint64_t))(v14 + 96))(*(void *)(v0 + 200), v13);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v15 = enum case for Parse.uso(_:);
    (*(void (**)(void, uint64_t))(v14 + 8))(*(void *)(v0 + 200), v13);
    if (v12 != v15)
    {
      os_log_type_t v20 = 0;
      goto LABEL_10;
    }
  }
  uint64_t v17 = *(void *)(v0 + 184);
  uint64_t v16 = *(void *)(v0 + 192);
  uint64_t v18 = *(void *)(v0 + 176);
  Input.parse.getter();
  static PhoneCallRequestSupportPolicy.getFlowFromParse(parse:intentTypeName:resolvedApp:phoneCallNLIntent:sharedGlobals:)();
  os_log_type_t v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v21(v20);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 224) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  uint64_t v39 = v0;
  uint64_t v1 = *(void **)(v0 + 224);
  if (!v1) {
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
  if (!v3)
  {

LABEL_6:
    uint64_t v12 = type metadata accessor for StartCallCATsSimple();
    static CATOption.defaultMode.getter();
    CATWrapperSimple.__allocating_init(options:globals:)();
    uint64_t v13 = OUTLINED_FUNCTION_18_22();
    uint64_t v14 = static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)(v13, v12);
    uint64_t v15 = swift_release();
    uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 112))(v15);
    swift_release();
    *(void *)(v0 + 120) = v16;
    type metadata accessor for SimpleOutputFlowAsync();
    uint64_t v4 = Flow.eraseToAnyFlow()();

    swift_release();
    uint64_t v17 = OUTLINED_FUNCTION_20_7();
    v18(v17);
    goto LABEL_16;
  }
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = (void *)(*(void *)(v0 + 160) + 56);
  swift_retain();
  dispatch thunk of AnyFlow.on(input:)();
  swift_release();
  outlined init with copy of SharedGlobalsProviding(v5, v0 + 56);
  uint64_t v7 = static PhoneCallRequestSupportPolicy.isHomePodPersonalRequest(intent:sharedGlobals:nlIntent:)(v2, v6, v0 + 56);
  outlined destroy of FlowActivity?(v0 + 56, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if (v7)
  {
    outlined init with copy of SharedGlobalsProviding(*(void *)(v0 + 160) + 56, v0 + 16);
    type metadata accessor for PhoneCallActivityNotificationFlow();
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v0 + 128) = PhoneCallActivityNotificationFlow.init(_:sharedGlobals:)(v8, (long long *)(v0 + 16));
    lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow(&lazy protocol witness table cache variable for type PhoneCallActivityNotificationFlow and conformance PhoneCallActivityNotificationFlow, (void (*)(uint64_t))type metadata accessor for PhoneCallActivityNotificationFlow);
    uint64_t v9 = Flow.eraseToAnyFlow()();

    swift_release();
    swift_release();
    uint64_t v10 = OUTLINED_FUNCTION_78_2();
    v11(v10);
    uint64_t v4 = v9;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_18_22();
    swift_retain_n();
    os_log_type_t v20 = Logger.logObject.getter();
    uint64_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v38 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v22 = 136315138;
      *(void *)(v0 + 104) = v4;
      type metadata accessor for AnyFlow();
      lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow(&lazy protocol witness table cache variable for type AnyFlow and conformance AnyFlow, (void (*)(uint64_t))&type metadata accessor for AnyFlow);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v38);
      OUTLINED_FUNCTION_95_6(v25, (void *)(v0 + 112));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v20, v21, "#PhoneCallFlow .appResolutionComplete, returning flow: %s", v22, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    os_log_type_t v26 = v2;
    BOOL v27 = Logger.logObject.getter();
    uint64_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v38 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v30 = v26;
      unint64_t v31 = [v30 description];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;

      uint64_t v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, &v38);
      OUTLINED_FUNCTION_95_6(v35, (void *)(v0 + 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v27, v28, "#PhoneCallFlow .appResolutionComplete, for intent: %s", v29, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 176));
  }
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v36 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v36(v4);
}

void PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v28 = v0;
  uint64_t v29 = v1;
  uint64_t v3 = v2;
  uint64_t v30 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for Input();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v12);
  uint64_t v13 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v15 = OUTLINED_FUNCTION_11_0(v14);
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_4();
  uint64_t v18 = v17 - v16;
  static TaskPriority.utility.getter();
  uint64_t v19 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v18, 0, 1, v19);
  OUTLINED_FUNCTION_12();
  v21(v20);
  outlined init with copy of SharedGlobalsProviding(v6, (uint64_t)v31);
  unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = 0;
  *((void *)v24 + 3) = 0;
  uint64_t v25 = v29;
  *((void *)v24 + 4) = v0;
  *((void *)v24 + 5) = v25;
  *((void *)v24 + 6) = v30;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v24[v22], v13, v7);
  os_log_type_t v26 = &v24[v23];
  long long v27 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)os_log_type_t v26 = *(_OWORD *)v3;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = *(_OWORD *)(v3 + 32);
  outlined init with take of AppSelectionSignalComponent(v31, (uint64_t)&v24[(v23 + 55) & 0xFFFFFFFFFFFFFFF8]);
  uint64_t v33 = *(void *)(v3 + 8);
  outlined init with take of URL?(v3 + 16, (uint64_t)v31, &demangling cache variable for type metadata for String?);
  uint64_t v32 = *(void *)(v3 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  outlined retain of Set<String>((uint64_t)&v33);
  outlined retain of String?((uint64_t)v31);
  outlined retain of Set<String>((uint64_t)&v32);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v18, (uint64_t)&async function pointer to partial apply for closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:), (uint64_t)v24);
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[40] = a8;
  v8[41] = v14;
  v8[38] = a6;
  v8[39] = a7;
  v8[36] = a4;
  v8[37] = a5;
  uint64_t v9 = type metadata accessor for Parse();
  v8[42] = v9;
  v8[43] = *(void *)(v9 - 8);
  v8[44] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for TaskFlowType();
  v8[45] = v10;
  v8[46] = *(void *)(v10 - 8);
  v8[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskFlowConfiguration?);
  v8[48] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for TaskFlowConfiguration();
  v8[49] = v11;
  v8[50] = *(void *)(v11 - 8);
  v8[51] = swift_task_alloc();
  v8[52] = swift_task_alloc();
  return _swift_task_switch(closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:), 0, 0);
}

uint64_t closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_29();
  uint64_t v15 = (void *)v14[36];
  uint64_t v16 = v15[16];
  __swift_project_boxed_opaque_existential_1(v15 + 12, v15[15]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v17 = swift_allocObject();
  v14[53] = v17;
  *(_OWORD *)(v17 + 16) = xmmword_467720;
  id v18 = [objc_allocWithZone((Class)INStartCallIntent) init];
  id v19 = [v18 _className];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *(void *)(v17 + 32) = v20;
  *(void *)(v17 + 40) = v22;
  id v23 = [objc_allocWithZone((Class)INStartAudioCallIntent) init];
  id v24 = [v23 _className];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  *(void *)(v17 + 48) = v25;
  *(void *)(v17 + 56) = v27;
  uint64_t v38 = *(void *)(v16 + 16) + **(int **)(v16 + 16);
  uint64_t v28 = (void *)swift_task_alloc();
  v14[54] = v28;
  *uint64_t v28 = v14;
  v28[1] = closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:);
  OUTLINED_FUNCTION_28_1();
  return v33(v29, v30, v31, v32, v33, v34, v35, v36, a9, v38, v16 + 16, a12, a13, a14);
}

uint64_t closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v4 = v3;
  *(void *)(v6 + 440) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  Swift::String v8;
  PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void);
  uint64_t v56;
  uint64_t v57;
  int v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  long long v61 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v2 = *(void **)(v0 + 304);
  uint64_t v4 = *(void **)(v0 + 288);
  uint64_t v5 = v4[20];
  uint64_t v6 = v4[21];
  __swift_project_boxed_opaque_existential_1(v4 + 17, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v1, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v3;
  v8._object = v2;
  v9.int value = PhoneCallIntentClassNames.init(intentClassName:)(v8).value;
  if (v9.value != PhoneCallFlowDelegatePlugin_PhoneCallIntentClassNames_unknownDefault)
  {
    uint64_t v58 = v7;
    uint64_t v59 = PhoneCallIntentClassNames.intentInstance.getter(v9.value);
    uint64_t v10 = (void *)specialized INIntent.typed<A>(as:)();

    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 384);
      uint64_t v12 = *(void *)(v0 + 392);
      uint64_t v13 = *(void *)(v0 + 368);
      uint64_t v14 = *(void **)(v0 + 376);
      uint64_t v15 = *(void *)(v0 + 360);
      *uint64_t v14 = 5;
      (*(void (**)(void *, void, uint64_t))(v13 + 104))(v14, enum case for TaskFlowType.longDurationTask(_:), v15);
      swift_bridgeObjectRetain();
      TaskFlowConfiguration.init(taskName:taskType:)();
      if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
      {
        outlined destroy of FlowActivity?(*(void *)(v0 + 384), &demangling cache variable for type metadata for TaskFlowConfiguration?);
      }
      else
      {
        uint64_t v16 = (void *)(v0 + 96);
        (*(void (**)(void, void, void))(*(void *)(v0 + 400) + 32))(*(void *)(v0 + 416), *(void *)(v0 + 384), *(void *)(v0 + 392));
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v17 = type metadata accessor for Logger();
        id v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
        swift_bridgeObjectRetain_n();
        id v19 = Logger.logObject.getter();
        uint64_t v20 = static os_log_type_t.debug.getter();
        uint64_t v21 = OUTLINED_FUNCTION_18(v20);
        uint64_t v22 = *(void *)(v0 + 304);
        if (v21)
        {
          id v23 = *(void *)(v0 + 296);
          id v24 = (uint8_t *)OUTLINED_FUNCTION_47();
          uint64_t v60 = OUTLINED_FUNCTION_14_0();
          *(_DWORD *)id v24 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 280) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v22, &v60);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v19, v18, "#PhoneCallFlow task flow configuration instrumentation with intentTypeName: %s", v24, 0xCu);
          swift_arrayDestroy();
          uint64_t v16 = (void *)(v0 + 96);
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v25 = *(void *)(v0 + 416);
        uint64_t v26 = *(void *)(v0 + 392);
        uint64_t v27 = *(void *)(v0 + 400);
        uint64_t v28 = *(void **)(v0 + 288);
        uint64_t v29 = v28[10];
        uint64_t v30 = v28[11];
        __swift_project_boxed_opaque_existential_1(v28 + 7, v29);
        (*(void (**)(uint64_t, uint64_t))(v30 + 40))(v29, v30);
        __swift_project_boxed_opaque_existential_1(v16, *(void *)(v0 + 120));
        type metadata accessor for SiriKitEvent();
        OUTLINED_FUNCTION_12();
        v31();
        SiriKitEvent.__allocating_init(taskFlowConfiguration:_:)();
        dispatch thunk of SiriKitEventSending.send(_:)();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      }
    }
    Input.parse.getter();
    uint64_t v32 = OUTLINED_FUNCTION_33_29();
    uint64_t v34 = v33(v32);
    if (v34 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void, void))(*(void *)(v0 + 344) + 96))(*(void *)(v0 + 352), *(void *)(v0 + 336));
      swift_unknownObjectRelease();
LABEL_15:
      uint64_t v37 = *(void *)(v0 + 320);
      uint64_t v36 = *(void *)(v0 + 328);
      uint64_t v38 = *(void *)(v0 + 288);
      __swift_project_boxed_opaque_existential_1((void *)(v38 + 56), *(void *)(v38 + 80));
      uint64_t v39 = OUTLINED_FUNCTION_20_46();
      v40(v39);
      os_log_type_t v41 = (void *)OUTLINED_FUNCTION_78_2();
      __swift_project_boxed_opaque_existential_1(v41, v42);
      type metadata accessor for SiriKitEvent();
      uint64_t v43 = [v59 typeName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      *(void *)(v0 + 264) = *(void *)(v37 + 8);
      outlined init with take of URL?(v37 + 16, v0 + 216, &demangling cache variable for type metadata for String?);
      *(void *)(v0 + 256) = *(void *)(v37 + 40);
      outlined init with copy of SharedGlobalsProviding(v36, v0 + 136);
      uint64_t v44 = swift_allocObject();
      OUTLINED_FUNCTION_32_28(v44);
      outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 136), v45);
      *(_DWORD *)(v44 + 104) = v58;
      *(void *)(v44 + 112) = v38;
      swift_retain();
      outlined retain of Set<String>(v0 + 264);
      outlined retain of String?(v0 + 216);
      outlined retain of Set<String>(v0 + 256);
      swift_retain();
      SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
      dispatch thunk of SiriKitEventSending.send(_:)();
      swift_release();

      __swift_destroy_boxed_opaque_existential_1(v0 + 176);
      goto LABEL_17;
    }
    uint64_t v35 = *(void *)(v0 + 344);
    if (v34 == enum case for Parse.uso(_:))
    {
      (*(void (**)(void, void))(v35 + 8))(*(void *)(v0 + 352), *(void *)(v0 + 336));
      goto LABEL_15;
    }
    uint64_t v56 = *(void *)(v0 + 352);
    unint64_t v47 = *(void *)(v0 + 320);
    uint64_t v46 = *(void *)(v0 + 328);
    uint64_t v48 = *(void **)(v0 + 288);
    os_log_type_t v49 = v48[10];
    BOOL v50 = v48[11];
    long long v57 = *(void *)(v0 + 336);
    __swift_project_boxed_opaque_existential_1(v48 + 7, v49);
    (*(void (**)(uint64_t, uint64_t))(v50 + 40))(v49, v50);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    type metadata accessor for SiriKitEvent();
    uint64_t v51 = [v59 typeName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)(v0 + 248) = *(void *)(v47 + 8);
    outlined init with take of URL?(v47 + 16, v0 + 232, &demangling cache variable for type metadata for String?);
    *(void *)(v0 + 272) = *(void *)(v47 + 40);
    outlined init with copy of SharedGlobalsProviding(v46, v0 + 56);
    uint64_t v52 = swift_allocObject();
    OUTLINED_FUNCTION_32_28(v52);
    outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 56), v53);
    *(_DWORD *)(v52 + 104) = v58;
    *(void *)(v52 + 112) = v48;
    swift_retain();
    swift_retain();
    outlined retain of Set<String>(v0 + 248);
    outlined retain of String?(v0 + 232);
    outlined retain of Set<String>(v0 + 272);
    SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
    dispatch thunk of SiriKitEventSending.send(_:)();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v56, v57);
  }
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v54();
}

uint64_t closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v10 = *a2;
  swift_retain();
  dispatch thunk of SiriKitEvent.SiriKitEventBuilder.app.setter();
  uint64_t v11 = a5 + 7;
  uint64_t v13 = a5[10];
  uint64_t v12 = a5[11];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 120))(v15, v13, v12);
  static PhoneDomainContextMetricsUtils.populatePhoneDomainContextWithAppSelectionUserPersona(phoneCallNLIntent:contextNLType:userPersona:app:resolvedSiriKitContacts:callStateProvider:)(a3, a6, a4, v10, (uint64_t)_swiftEmptyArrayStorage, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter();
}

uint64_t PhoneCallFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_bridgeObjectRelease();
  outlined destroy of PhoneCallFlow.State(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state);
  return v0;
}

uint64_t PhoneCallFlow.__deallocating_deinit()
{
  PhoneCallFlow.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance PhoneCallFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance PhoneCallFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

uint64_t protocol witness for Flow.execute() in conformance PhoneCallFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 208) + **(int **)(**(void **)v1 + 208));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance PhoneCallFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PhoneCallFlow(0);

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t specialized PhoneCallFlow.__allocating_init(input:sharedGlobals:appFinder:eligibleAppsFinder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for PhoneCallFlow.State(0);
  __chkstk_darwin(v14);
  uint64_t v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v30[3] = a6;
  v30[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  uint64_t v18 = type metadata accessor for Input();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v16, a1, v18);
  swift_storeEnumTagMultiPayload();
  outlined init with copy of SharedGlobalsProviding(a2, (uint64_t)v29);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v28);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v30, (uint64_t)v27);
  uint64_t v20 = (*(uint64_t (**)(unsigned char *, unsigned char *, unsigned char *, unsigned char *))(a5 + 184))(v16, v29, v28, v27);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    id v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "#PhoneCallFlow state is initialized.", v24, 2u);
    swift_slowDealloc();
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  return v20;
}

uint64_t outlined init with copy of PhoneCallFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PhoneCallFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallFlow.State);
}

uint64_t specialized PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[3] = a6;
  long long v18[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  *(void *)(a5 + 176) = _swiftEmptyArrayStorage;
  outlined init with copy of SharedGlobalsProviding(a3, a5 + 16);
  outlined init with copy of PhoneCallFlow.State(a1, a5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, a5 + 56);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v18, a5 + 96);
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 216))(v17, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_1(a3);
  outlined destroy of PhoneCallFlow.State(a1);
  outlined init with take of AppSelectionSignalComponent(v17, a5 + 136);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return a5;
}

uint64_t type metadata accessor for PhoneCallFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallFlow);
}

uint64_t sub_3DB9B0()
{
  type metadata accessor for Input();
  OUTLINED_FUNCTION_1();
  unint64_t v3 = (((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + *(void *)(v2 + 64)
      + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = OUTLINED_FUNCTION_2_83();
  v5(v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = OUTLINED_FUNCTION_43_28();

  return _swift_deallocObject(v6, v7, v8);
}

uint64_t partial apply for closure #3 in PhoneCallFlow.execute()(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for Input();
  OUTLINED_FUNCTION_19_0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = v1 + ((v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  char v12 = *(unsigned char *)(v11 + 40);

  return closure #3 in PhoneCallFlow.execute()(a1, v10, v1 + v8, v11, v12, v1 + ((v9 + 55) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t lazy protocol witness table accessor for type PhoneCallFlow and conformance PhoneCallFlow(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v66 = a23;
  uint64_t v65 = a21;
  uint64_t v40 = type metadata accessor for AppResolver();
  uint64_t v41 = OUTLINED_FUNCTION_11_0(v40);
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_4();
  uint64_t v62 = v43 - v42;
  _OWORD v79[3] = type metadata accessor for ResponseFactory();
  v79[4] = &protocol witness table for ResponseFactory;
  v79[0] = v29;
  uint64_t v77 = type metadata accessor for EligibleAppFinder();
  uint64_t v78 = &protocol witness table for EligibleAppFinder;
  uint64_t v63 = v77;
  v76[0] = v27;
  v75[3] = type metadata accessor for AppInfoBuilder();
  v75[4] = &protocol witness table for AppInfoBuilder;
  v75[0] = v25;
  *(void *)(a24 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a24 + 24) = 0;
  *(unsigned char *)(a24 + 344) = 1;
  uint64_t v44 = type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy();
  *(void *)(a24 + 352) = v44;
  *(void *)(a24 + 360) = &outlined read-only object #0 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a24 + 368) = 0;
  *(void *)(a24 + 376) = 0;
  *(void *)(a24 + 384) = v44;
  *(void *)(a24 + 392) = &outlined read-only object #1 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a24 + 400) = 0;
  *(void *)(a24 + 408) = 0;
  *(void *)(a24 + 416) = v44;
  *(void *)(a24 + 424) = &outlined read-only object #2 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a24 + 432) = 0;
  *(void *)(a24 + 440) = 0;
  *(void *)(a24 + 192) = v39;
  uint64_t v64 = v37;
  outlined init with copy of SharedGlobalsProviding(v37, a24 + 32);
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  uint64_t v45 = OUTLINED_FUNCTION_78_2();
  v46(v45);
  outlined init with take of AppSelectionSignalComponent(&v72, a24 + 152);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v35, a24 + 200);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v76, a24 + 112);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v75, a24 + 72);
  *(void *)(a24 + 240) = v33;
  *(void *)(a24 + 248) = v31;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v79, a24 + 256);
  if (a22)
  {
    swift_retain();
    swift_retain();
    uint64_t v47 = a22;
  }
  else
  {
    outlined init with copy of SharedGlobalsProviding((uint64_t)v35, (uint64_t)&v72);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v76, (uint64_t)&v70);
    type metadata accessor for AppUsageProvider();
    long long v67 = 0u;
    long long v68 = 0u;
    unsigned int v69 = 0;
    uint64_t v61 = OUTLINED_FUNCTION_18_17();
    uint64_t v48 = v65;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v49 = v62;
    AppResolver.init(appResolutionRules:)();
    type metadata accessor for PhoneAppResolutionHelper();
    uint64_t v50 = OUTLINED_FUNCTION_21_0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v70, v71);
    v60[1] = v60;
    OUTLINED_FUNCTION_1();
    __chkstk_darwin(v51);
    OUTLINED_FUNCTION_4();
    uint64_t v54 = (uint64_t *)(v53 - v52);
    (*(void (**)(uint64_t))(v55 + 16))(v53 - v52);
    uint64_t v47 = specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)((uint64_t)&v72, *v54, v48, (uint64_t)&v67, v61, v49, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
  }
  *(void *)(a24 + 296) = v47;
  outlined init with copy of PhoneAppResolutionLogging?(v66, (uint64_t)&v70);
  if (v71)
  {
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of FlowActivity?(v66, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    OUTLINED_FUNCTION_25_41();
    outlined init with take of AppSelectionSignalComponent(&v70, (uint64_t)&v72);
  }
  else
  {
    swift_retain();
    outlined destroy of FlowActivity?((uint64_t)&v70, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v35, (uint64_t)&v70);
    id v56 = [self sharedAnalytics];
    id v57 = [v56 defaultMessageStream];

    if (one-time initialization token for instance != -1) {
      swift_once();
    }
    unsigned int v69 = &protocol witness table for EligibleAppFinder;
    *((void *)&v68 + 1) = v63;
    *(void *)&long long v67 = static EligibleAppFinder.instance;
    os_log_type_t v73 = &type metadata for PhoneAppResolutionLogger;
    uint64_t v74 = &protocol witness table for PhoneAppResolutionLogger;
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = (void *)(v58 + 16);
    *(void *)&long long v72 = v58;
    swift_retain();
    PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)(&v70, (uint64_t)v57, &v67, v59);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of FlowActivity?(v66, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    OUTLINED_FUNCTION_25_41();
  }
  outlined init with take of AppSelectionSignalComponent(&v72, a24 + 304);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  OUTLINED_FUNCTION_26_1();
}

uint64_t outlined init with take of PhoneCallFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of PhoneCallFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)partial apply()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:);
  return closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)(v0);
}

uint64_t sub_3DC1CC()
{
  type metadata accessor for Input();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_49_24();
  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_2_83();
  v3(v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = OUTLINED_FUNCTION_43_28();

  return _swift_deallocObject(v4, v5, v6);
}

uint64_t partial apply for closure #1 in PhoneCallFlow.onAppResolutionComplete(originalInput:phoneCallNLIntent:intentType:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Input();
  OUTLINED_FUNCTION_19_0(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(unint64_t, unint64_t, void, void, uint64_t))(**(void **)(v1 + 16)
                                                                                                + 224))(v1 + v5, v1 + v7, *(void *)(v1 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), a1);
}

uint64_t outlined destroy of PhoneCallFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhoneCallFlow.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3DC380()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t ObjC metadata update function for PhoneCallFlow()
{
  return type metadata accessor for PhoneCallFlow(0);
}

uint64_t type metadata completion function for PhoneCallFlow()
{
  uint64_t result = type metadata accessor for PhoneCallFlow.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PhoneCallFlow.State(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for Input();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_9;
      case 1u:
        uint64_t v9 = type metadata accessor for Input();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
        uint64_t v11 = *(int *)(v10 + 48);
        long long v12 = *(_OWORD *)((char *)a2 + v11 + 24);
        *(_OWORD *)((char *)a1 + v11 + 24) = v12;
        (**(void (***)(void))(v12 - 8))();
        uint64_t v13 = *(int *)(v10 + 64);
        uint64_t v14 = (void *)((char *)a1 + v13);
        uint64_t v15 = (void *)((char *)a2 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 2u:
        uint64_t v17 = type metadata accessor for Input();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
        uint64_t v19 = v18[12];
        long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
        *(_OWORD *)((char *)a1 + v19 + 24) = v20;
        (**(void (***)(void))(v20 - 8))();
        uint64_t v21 = v18[16];
        uint64_t v22 = (void *)((char *)a1 + v21);
        os_log_type_t v23 = (void *)((char *)a2 + v21);
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        uint64_t v25 = v18[20];
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = *((void *)v27 + 1);
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = v28;
        uint64_t v29 = *((void *)v27 + 3);
        *((void *)v26 + 2) = *((void *)v27 + 2);
        *((void *)v26 + 3) = v29;
        v26[32] = v27[32];
        *((void *)v26 + 5) = *((void *)v27 + 5);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
        uint64_t v30 = type metadata accessor for Input();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        uint64_t v31 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
        uint64_t v32 = v31[12];
        long long v33 = *(_OWORD *)((char *)a2 + v32 + 24);
        *(_OWORD *)((char *)a1 + v32 + 24) = v33;
        (**(void (***)(void))(v33 - 8))();
        *((unsigned char *)a1 + v31[16]) = *((unsigned char *)a2 + v31[16]);
        uint64_t v34 = v31[20];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = *((void *)v36 + 1);
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = v37;
        uint64_t v38 = *((void *)v36 + 3);
        *((void *)v35 + 2) = *((void *)v36 + 2);
        *((void *)v35 + 3) = v38;
        v35[32] = v36[32];
        *((void *)v35 + 5) = *((void *)v36 + 5);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for PhoneCallFlow.State(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for Input();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 1:
      uint64_t v5 = type metadata accessor for Input();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v6 + 48));
      goto LABEL_9;
    case 2:
      uint64_t v7 = type metadata accessor for Input();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v8 + 48));
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 3:
      uint64_t v9 = type metadata accessor for Input();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v10 + 48));
LABEL_8:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *initializeWithCopy for PhoneCallFlow.State(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_7;
    case 1u:
      uint64_t v7 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
      uint64_t v9 = *(int *)(v8 + 48);
      long long v10 = *(_OWORD *)&a2[v9 + 24];
      *(_OWORD *)&a1[v9 + 24] = v10;
      (**(void (***)(void))(v10 - 8))();
      uint64_t v11 = *(int *)(v8 + 64);
      long long v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = v13[1];
      void *v12 = *v13;
      v12[1] = v14;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 2u:
      uint64_t v15 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      uint64_t v17 = v16[12];
      long long v18 = *(_OWORD *)&a2[v17 + 24];
      *(_OWORD *)&a1[v17 + 24] = v18;
      (**(void (***)(void))(v18 - 8))();
      uint64_t v19 = v16[16];
      long long v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = v21[1];
      *long long v20 = *v21;
      v20[1] = v22;
      uint64_t v23 = v16[20];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      uint64_t v27 = *((void *)v25 + 3);
      *((void *)v24 + 2) = *((void *)v25 + 2);
      *((void *)v24 + 3) = v27;
      v24[32] = v25[32];
      *((void *)v24 + 5) = *((void *)v25 + 5);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      uint64_t v28 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
      uint64_t v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
      uint64_t v30 = v29[12];
      long long v31 = *(_OWORD *)&a2[v30 + 24];
      *(_OWORD *)&a1[v30 + 24] = v31;
      (**(void (***)(void))(v31 - 8))();
      a1[v29[16]] = a2[v29[16]];
      uint64_t v32 = v29[20];
      long long v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)long long v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      uint64_t v36 = *((void *)v34 + 3);
      *((void *)v33 + 2) = *((void *)v34 + 2);
      *((void *)v33 + 3) = v36;
      v33[32] = v34[32];
      *((void *)v33 + 5) = *((void *)v34 + 5);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithCopy for PhoneCallFlow.State(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneCallFlow.State((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 1u:
        uint64_t v7 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
        uint64_t v9 = *(int *)(v8 + 48);
        long long v10 = &a1[v9];
        uint64_t v11 = *(void *)&a2[v9 + 24];
        *((void *)v10 + 3) = v11;
        *((void *)v10 + 4) = *(void *)&a2[v9 + 32];
        (**(void (***)(void))(v11 - 8))();
        uint64_t v12 = *(int *)(v8 + 64);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 2u:
        uint64_t v15 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
        uint64_t v17 = v16[12];
        long long v18 = &a1[v17];
        uint64_t v19 = *(void *)&a2[v17 + 24];
        *((void *)v18 + 3) = v19;
        *((void *)v18 + 4) = *(void *)&a2[v17 + 32];
        (**(void (***)(void))(v19 - 8))();
        uint64_t v20 = v16[16];
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        *uint64_t v21 = *v22;
        v21[1] = v22[1];
        uint64_t v23 = v16[20];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        *((void *)v24 + 2) = *((void *)v25 + 2);
        *((void *)v24 + 3) = *((void *)v25 + 3);
        v24[32] = v25[32];
        *((void *)v24 + 5) = *((void *)v25 + 5);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        uint64_t v26 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
        uint64_t v28 = v27[12];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = *(void *)&a2[v28 + 24];
        *((void *)v29 + 3) = v30;
        *((void *)v29 + 4) = *(void *)&a2[v28 + 32];
        (**(void (***)(void))(v30 - 8))();
        a1[v27[16]] = a2[v27[16]];
        uint64_t v31 = v27[20];
        uint64_t v32 = &a1[v31];
        long long v33 = &a2[v31];
        *(void *)uint64_t v32 = *(void *)v33;
        *((void *)v32 + 1) = *((void *)v33 + 1);
        *((void *)v32 + 2) = *((void *)v33 + 2);
        *((void *)v32 + 3) = *((void *)v33 + 3);
        v32[32] = v33[32];
        *((void *)v32 + 5) = *((void *)v33 + 5);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *initializeWithTake for PhoneCallFlow.State(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_7;
    case 1u:
      uint64_t v7 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
      uint64_t v9 = *(int *)(v8 + 48);
      long long v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)long long v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((void *)v10 + 4) = *((void *)v11 + 4);
      *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
      goto LABEL_7;
    case 2u:
      uint64_t v13 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      uint64_t v15 = v14[12];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      long long v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
      *((void *)v16 + 4) = *((void *)v17 + 4);
      *(_OWORD *)&a1[v14[16]] = *(_OWORD *)&a2[v14[16]];
      uint64_t v19 = v14[20];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      long long v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      v20[2] = v21[2];
      goto LABEL_7;
    case 3u:
      uint64_t v23 = type metadata accessor for Input();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      uint64_t v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
      uint64_t v25 = v24[12];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      long long v28 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v28;
      *((void *)v26 + 4) = *((void *)v27 + 4);
      a1[v24[16]] = a2[v24[16]];
      uint64_t v29 = v24[20];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = (long long *)&a2[v29];
      long long v32 = v31[2];
      long long v33 = *v31;
      v30[1] = v31[1];
      void v30[2] = v32;
      *uint64_t v30 = v33;
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithTake for PhoneCallFlow.State(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneCallFlow.State((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_8;
      case 1u:
        uint64_t v7 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
        uint64_t v9 = *(int *)(v8 + 48);
        long long v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        long long v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)long long v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        *((void *)v10 + 4) = *((void *)v11 + 4);
        *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
        goto LABEL_8;
      case 2u:
        uint64_t v13 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
        uint64_t v15 = v14[12];
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        long long v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v18;
        *((void *)v16 + 4) = *((void *)v17 + 4);
        *(_OWORD *)&a1[v14[16]] = *(_OWORD *)&a2[v14[16]];
        uint64_t v19 = v14[20];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        long long v22 = v21[1];
        *uint64_t v20 = *v21;
        v20[1] = v22;
        v20[2] = v21[2];
        goto LABEL_8;
      case 3u:
        uint64_t v23 = type metadata accessor for Input();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        uint64_t v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
        uint64_t v25 = v24[12];
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        long long v28 = *((_OWORD *)v27 + 1);
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v28;
        *((void *)v26 + 4) = *((void *)v27 + 4);
        a1[v24[16]] = a2[v24[16]];
        uint64_t v29 = v24[20];
        uint64_t v30 = &a1[v29];
        uint64_t v31 = (long long *)&a2[v29];
        long long v32 = v31[2];
        long long v33 = *v31;
        v30[1] = v31[1];
        void v30[2] = v32;
        *uint64_t v30 = v33;
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata completion function for PhoneCallFlow.State()
{
  uint64_t result = type metadata accessor for Input();
  if (v1 <= 0x3F)
  {
    uint64_t v6 = *(void *)(result - 8) + 64;
    uint64_t v2 = v6;
    swift_getTupleTypeLayout3();
    uint64_t v7 = &v5;
    swift_getTupleTypeLayout();
    uint64_t v8 = &v4;
    v3[4] = v2;
    v3[5] = "(";
    v3[6] = &unk_488C60;
    v3[7] = &unk_488C48;
    swift_getTupleTypeLayout();
    uint64_t v9 = v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_3DD90C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t partial apply for closure #1 in PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  char v4 = (void *)OUTLINED_FUNCTION_14(v3);
  *char v4 = v5;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)(v2, v0);
}

uint64_t sub_3DD9F8()
{
  type metadata accessor for Input();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_49_24();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = OUTLINED_FUNCTION_2_83();
  v3(v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + ((v1 + 55) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v4 = OUTLINED_FUNCTION_43_28();

  return _swift_deallocObject(v4, v5, v6);
}

uint64_t partial apply for closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Input();
  OUTLINED_FUNCTION_19_0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = v1[5];
  uint64_t v13 = v1[6];
  uint64_t v14 = (uint64_t)v1 + v8;
  uint64_t v15 = (uint64_t)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_14(v16);
  *uint64_t v17 = v18;
  v17[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)(a1, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t partial apply for closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  OUTLINED_FUNCTION_59_18();
  return closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)(v0, v1, v2, v3, v4, 0);
}

uint64_t objectdestroy_35Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  OUTLINED_FUNCTION_59_18();
  return closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)(v0, v1, v2, v3, v4, 1);
}

uint64_t OUTLINED_FUNCTION_6_94()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_57(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_20_46()
{
  return v0;
}

void OUTLINED_FUNCTION_31_36()
{
}

__n128 OUTLINED_FUNCTION_32_28(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  __n128 result = *(__n128 *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_43_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_23()
{
  return CATWrapperSimple.__allocating_init(options:globals:)();
}

double OUTLINED_FUNCTION_51_21()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(void *)(v0 - 96) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_52_20()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_54_21()
{
  return v0;
}

uint64_t PhonePersonAndVisualData.Builder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PhonePersonAndVisualData.Builder.init()();
  return v0;
}

uint64_t key path setter for PhonePersonAndVisualData.Builder.person : PhonePersonAndVisualData.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 112);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t PhonePersonAndVisualData.Builder.person.getter()
{
  return swift_retain();
}

uint64_t PhonePersonAndVisualData.Builder.person.setter()
{
  OUTLINED_FUNCTION_6_30();
  *(void *)(v1 + 16) = v0;
  return swift_release();
}

uint64_t key path setter for PhonePersonAndVisualData.Builder.imageData : PhonePersonAndVisualData.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 136))(v6);
}

uint64_t PhonePersonAndVisualData.Builder.imageData.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_imageData, a1);
}

uint64_t PhonePersonAndVisualData.Builder.imageData.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_imageData);
}

uint64_t (*PhonePersonAndVisualData.Builder.imageData.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhonePersonAndVisualData.Builder.selectAction : PhonePersonAndVisualData.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 160))(v6);
}

uint64_t PhonePersonAndVisualData.Builder.selectAction.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_selectAction, a1);
}

uint64_t PhonePersonAndVisualData.Builder.selectAction.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_selectAction);
}

uint64_t (*PhonePersonAndVisualData.Builder.selectAction.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhonePersonAndVisualData.Builder.init()()
{
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_imageData;
  uint64_t v2 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  __swift_storeEnumTagSinglePayload(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_selectAction, 1, 1, v2);
  return v0;
}

uint64_t PhonePersonAndVisualData.Builder.withPerson(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 112);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_retain();
}

uint64_t PhonePersonAndVisualData.Builder.withPerson(_:)(uint64_t a1)
{
  if (a1) {
    a1 = dispatch thunk of DialogPerson.Builder.build()();
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 112))(a1);

  return swift_retain();
}

uint64_t PhonePersonAndVisualData.Builder.withImageData(_:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_0_16(v3, v6);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 136))(v0);
  return swift_retain();
}

uint64_t PhonePersonAndVisualData.Builder.withImageData(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 136))(v0);
  return swift_retain();
}

uint64_t PhonePersonAndVisualData.Builder.withSelectAction(_:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_0_16(v3, v6);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 160))(v0);
  return swift_retain();
}

uint64_t PhonePersonAndVisualData.Builder.withSelectAction(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 160))(v0);
  return swift_retain();
}

uint64_t PhonePersonAndVisualData.Builder.build()()
{
  type metadata accessor for PhonePersonAndVisualData(0);
  uint64_t v0 = swift_allocObject();
  swift_retain();
  PhonePersonAndVisualData.init(builder:)();
  return v0;
}

uint64_t PhonePersonAndVisualData.__allocating_init(builder:)()
{
  uint64_t v0 = swift_allocObject();
  PhonePersonAndVisualData.init(builder:)();
  return v0;
}

uint64_t type metadata accessor for PhonePersonAndVisualData(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhonePersonAndVisualData);
}

uint64_t PhonePersonAndVisualData.Builder.deinit()
{
  swift_release();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_imageData);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_selectAction);
  return v0;
}

uint64_t PhonePersonAndVisualData.Builder.__deallocating_deinit()
{
  return PhonePersonAndVisualData.Builder.__deallocating_deinit((void (*)(void))PhonePersonAndVisualData.Builder.deinit);
}

unint64_t static PhonePersonAndVisualData.catTypeName.getter()
{
  return 0xD000000000000019;
}

uint64_t key path setter for PhonePersonAndVisualData.mockGlobals : PhonePersonAndVisualData(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 136);
  id v4 = *a1;
  return v3(v2);
}

uint64_t PhonePersonAndVisualData.imageData.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
}

uint64_t PhonePersonAndVisualData.selectAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
}

uint64_t PhonePersonAndVisualData.init(builder:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = 0;
  OUTLINED_FUNCTION_22();
  *(void *)(v0 + 24) = (*(uint64_t (**)(void))(v5 + 104))();
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v6 + 128))();
  outlined init with take of SpeakableString?((uint64_t)v4, v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v7 + 152))();
  swift_release();
  outlined init with take of SpeakableString?((uint64_t)v4, v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
  return v0;
}

uint64_t PhonePersonAndVisualData.__allocating_init(person:imageData:selectAction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PhonePersonAndVisualData.Builder(0);
  swift_allocObject();
  PhonePersonAndVisualData.Builder.init()();
  OUTLINED_FUNCTION_22();
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v7 + 184))(a1);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v8 + 200))(a2);
  swift_release();
  OUTLINED_FUNCTION_22();
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v9 + 216))(a3);
  swift_release();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v3 + 152))(v10);
  swift_release();
  outlined destroy of SpeakableString?(a3);
  outlined destroy of SpeakableString?(a2);
  return v11;
}

uint64_t type metadata accessor for PhonePersonAndVisualData.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhonePersonAndVisualData.Builder);
}

uint64_t PhonePersonAndVisualData.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v24 - v13;
  if (a1 != 0x6E6F73726570 || a2 != 0xE600000000000000)
  {
    uint64_t result = OUTLINED_FUNCTION_10_66();
    if ((result & 1) == 0)
    {
      BOOL v17 = a1 == 0x7461446567616D69 && a2 == 0xE900000000000061;
      if (v17 || (OUTLINED_FUNCTION_10_66() & 1) != 0)
      {
        outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData, (uint64_t)v14);
        uint64_t v18 = type metadata accessor for SpeakableString();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v18) != 1)
        {
          *(void *)(a3 + 24) = v18;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
          return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(boxed_opaque_existential_1, v14, v18);
        }
        uint64_t v19 = (uint64_t)v14;
      }
      else
      {
        if (a1 != 0x63417463656C6573 || a2 != 0xEC0000006E6F6974)
        {
          uint64_t result = OUTLINED_FUNCTION_10_66();
          if ((result & 1) == 0) {
            goto LABEL_26;
          }
        }
        outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction, (uint64_t)v11);
        uint64_t v22 = type metadata accessor for SpeakableString();
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v22) != 1)
        {
          *(void *)(a3 + 24) = v22;
          uint64_t v23 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
          return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v23, v11, v22);
        }
        uint64_t v19 = (uint64_t)v11;
      }
      uint64_t result = outlined destroy of SpeakableString?(v19);
LABEL_26:
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }
  }
  uint64_t v16 = *(void *)(v3 + 24);
  if (!v16) {
    goto LABEL_26;
  }
  *(void *)(a3 + 24) = type metadata accessor for PhonePerson(0);
  *(void *)a3 = v16;

  return swift_retain();
}

PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional __swiftcall PhonePersonAndVisualData.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhonePersonAndVisualData.CodingKeys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional)v3;
  }
}

uint64_t PhonePersonAndVisualData.CodingKeys.rawValue.getter(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_6_95();
  }
  if (a1 == 1) {
    return 0x7461446567616D69;
  }
  return 0x63417463656C6573;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhonePersonAndVisualData.CodingKeys()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhonePersonAndVisualData.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhonePersonAndVisualData.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhonePersonAndVisualData.CodingKeys()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhonePersonAndVisualData.CodingKeys@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhonePersonAndVisualData.CodingKeys.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhonePersonAndVisualData.CodingKeys@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PhonePersonAndVisualData.CodingKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhonePersonAndVisualData.CodingKeys()
{
  return PhonePersonAndVisualData.CodingKeys.rawValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhonePersonAndVisualData.CodingKeys@<W0>(uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhonePersonAndVisualData.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhonePersonAndVisualData.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhonePersonAndVisualData.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhonePersonAndVisualData.deinit()
{
  swift_release();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
  return v0;
}

uint64_t PhonePersonAndVisualData.__deallocating_deinit()
{
  return PhonePersonAndVisualData.Builder.__deallocating_deinit((void (*)(void))PhonePersonAndVisualData.deinit);
}

uint64_t PhonePersonAndVisualData.Builder.__deallocating_deinit(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t PhonePersonAndVisualData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhonePersonAndVisualData.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = *(void *)(v3 + 24);
  v12[7] = 0;
  type metadata accessor for PhonePerson(0);
  _s27PhoneCallFlowDelegatePlugin0A6PersonC16SiriDialogEngine0hF0CSEADWlTm_0(&lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson, (void (*)(uint64_t))type metadata accessor for PhonePerson);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v12[6] = 1;
    type metadata accessor for SpeakableString();
    _s27PhoneCallFlowDelegatePlugin0A6PersonC16SiriDialogEngine0hF0CSEADWlTm_0(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    OUTLINED_FUNCTION_10_9();
    v12[5] = 2;
    OUTLINED_FUNCTION_10_9();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v5);
}

unint64_t lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A6PersonC16SiriDialogEngine0hF0CSEADWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhonePersonAndVisualData.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PhonePersonAndVisualData.init(from:)(a1);
  return v2;
}

uint64_t PhonePersonAndVisualData.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhonePersonAndVisualData.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  *(void *)(v3 + 16) = 0;
  uint64_t v15 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v16 = (uint64_t)v26;

    type metadata accessor for PhonePersonAndVisualData(0);
    swift_deallocPartialClassInstance();
    uint64_t v21 = v16;
  }
  else
  {
    uint64_t v23 = v9;
    uint64_t v24 = v13;
    type metadata accessor for PhonePerson(0);
    char v29 = 0;
    _s27PhoneCallFlowDelegatePlugin0A6PersonC16SiriDialogEngine0hF0CSEADWlTm_0(&lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson, (void (*)(uint64_t))type metadata accessor for PhonePerson);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(void *)(v3 + 24) = v30;
    type metadata accessor for SpeakableString();
    char v28 = 1;
    _s27PhoneCallFlowDelegatePlugin0A6PersonC16SiriDialogEngine0hF0CSEADWlTm_0(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of SpeakableString?((uint64_t)v11, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
    char v27 = 2;
    uint64_t v18 = (uint64_t)v23;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v19 = OUTLINED_FUNCTION_7_86();
    v20(v19);
    outlined init with take of SpeakableString?(v18, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
    uint64_t v21 = (uint64_t)v26;
  }
  __swift_destroy_boxed_opaque_existential_1(v21);
  return v3;
}

uint64_t base witness table accessor for Decodable in PhonePersonAndVisualData()
{
  return _s27PhoneCallFlowDelegatePlugin0A6PersonC16SiriDialogEngine0hF0CSEADWlTm_0(&lazy protocol witness table cache variable for type PhonePersonAndVisualData and conformance PhonePersonAndVisualData, (void (*)(uint64_t))type metadata accessor for PhonePersonAndVisualData);
}

uint64_t base witness table accessor for Encodable in PhonePersonAndVisualData()
{
  return _s27PhoneCallFlowDelegatePlugin0A6PersonC16SiriDialogEngine0hF0CSEADWlTm_0(&lazy protocol witness table cache variable for type PhonePersonAndVisualData and conformance PhonePersonAndVisualData, (void (*)(uint64_t))type metadata accessor for PhonePersonAndVisualData);
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhonePersonAndVisualData()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhonePersonAndVisualData()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t protocol witness for CATType.mockGlobals.getter in conformance PhonePersonAndVisualData()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhonePersonAndVisualData()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhonePersonAndVisualData(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 144))();
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhonePersonAndVisualData()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhonePersonAndVisualData@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 184))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhonePersonAndVisualData()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_3DF800@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 104))();
  *a1 = result;
  return result;
}

uint64_t sub_3DF84C()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_3DF890()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_3DF8D4@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 128))();
  *a1 = result;
  return result;
}

uint64_t ObjC metadata update function for PhonePersonAndVisualData()
{
  return type metadata accessor for PhonePersonAndVisualData(0);
}

void type metadata completion function for PhonePersonAndVisualData()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for PhonePersonAndVisualData.Builder()
{
  return type metadata accessor for PhonePersonAndVisualData.Builder(0);
}

void type metadata completion function for PhonePersonAndVisualData.Builder()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for PhonePersonAndVisualData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3DFB34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhonePersonAndVisualData.CodingKeys()
{
  return &type metadata for PhonePersonAndVisualData.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_6_95()
{
  return 0x6E6F73726570;
}

uint64_t OUTLINED_FUNCTION_7_86()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_66()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  return v0;
}

#error "3DFC48: call analysis failed (funcsize=42)"

#error "3DFCE0: call analysis failed (funcsize=37)"

void StartVideoCallTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v11 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13 - v12;
  uint64_t v59 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_37();
  unint64_t v18 = outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v8);
  uint64_t v54 = v6;
  uint64_t v55 = v16;
  uint64_t v56 = v10;
  uint64_t v57 = v4;
  if (v18)
  {
    unint64_t v19 = v18;
    unint64_t v61 = (unint64_t)_swiftEmptyArrayStorage;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      if (v20) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v20)
      {
LABEL_4:
        uint64_t v52 = v8;
        type metadata accessor for PhonePerson(0);
        if (v20 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v49 = v2;
        uint64_t v50 = v14;
        uint64_t v21 = 0;
        unint64_t v22 = v19;
        unint64_t v23 = v19 & 0xC000000000000001;
        uint64_t v24 = v20;
        do
        {
          if (v23) {
            id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v25 = *(id *)(v22 + 8 * v21 + 32);
          }
          uint64_t v26 = v25;
          static Device.current.getter();
          __swift_project_boxed_opaque_existential_1(v60, v60[3]);
          dispatch thunk of DeviceState.siriLocale.getter();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
          uint64_t v27 = static PhonePerson.make(phonePerson:options:locale:)(v26, 0, v1);
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v59);

          if (v27)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                           + (v61 & 0xFFFFFFFFFFFFFF8)) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          ++v21;
        }
        while (v24 != v21);
        swift_bridgeObjectRelease();
        char v28 = (void *)v61;
        uint64_t v2 = v49;
        uint64_t v14 = v50;
        uint64_t v8 = v52;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    char v28 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v28 = _swiftEmptyArrayStorage;
LABEL_19:
  type metadata accessor for PhonePersonList.Builder();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  *(void *)(v29 + 16) = v28;
  swift_bridgeObjectRelease();
  type metadata accessor for PhonePersonList();
  swift_allocObject();
  uint64_t v30 = PhonePersonList.init(builder:)(v29);
  uint64_t v31 = *(void **)((char *)v2 + direct field offset for StartVideoCallTemplatingService.catFamily);
  id v32 = v8;
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
  uint64_t v53 = v33;
  type metadata accessor for SirikitDeviceState();
  uint64_t v34 = (void *)((char *)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 40));
  outlined init with copy of SignalProviding((uint64_t)v34, (uint64_t)v60);
  uint64_t v58 = v30;
  swift_retain();
  uint64_t v51 = SirikitDeviceState.__allocating_init(from:)();
  uint64_t v35 = (void *)((char *)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 48));
  uint64_t v36 = v35[3];
  uint64_t v37 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v36);
  __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 16))(v56, v1, v36, v37);
  uint64_t v39 = v38;
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v1, v59);
  if (v39)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    uint64_t v40 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v14, 0, 1, v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v14, 1, 1, v41);
  }
  Swift::Bool v42 = App.isFirstParty()();
  uint64_t v43 = App.appIdentifier.getter();
  if (v44)
  {
    uint64_t v45 = v58;
    uint64_t v47 = v51;
    uint64_t v46 = v53;
    if (v43 == 0xD000000000000010 && v44 == 0x8000000000495A40) {
      char v48 = 1;
    }
    else {
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v48 = 0;
    uint64_t v45 = v58;
    uint64_t v47 = v51;
    uint64_t v46 = v53;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, Swift::Bool, void, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v31 + 1120))(v46, v45, v47, v14, v42, v48 & 1, 0, v54, v57);
  swift_release();
  swift_release_n();
  swift_release();
  outlined destroy of SubmitCommandError?(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_1();
}

void StartVideoCallTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v30 = v2;
  uint64_t v31 = v3;
  uint64_t v29 = v4;
  uint64_t v28 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v11 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = (void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 48));
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  uint64_t v16 = (void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 40));
  uint64_t v27 = (uint64_t)v16;
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  OUTLINED_FUNCTION_10_67();
  v17();
  uint64_t v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v28);
  if (v19)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)();
    uint64_t v20 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v14, 0, 1, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v14, 1, 1, v21);
  }
  switch((unint64_t)[v29 code])
  {
    case 5uLL:
    case 7uLL:
    case 8uLL:
      OUTLINED_FUNCTION_11_71();
      uint64_t v25 = OUTLINED_FUNCTION_8_97();
      v26(v25);
      break;
    case 6uLL:
      OUTLINED_FUNCTION_11_71();
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v24 + 704))(v30, v31);
      break;
    default:
      unint64_t v22 = *(void **)((char *)v1 + direct field offset for StartVideoCallTemplatingService.catFamily);
      type metadata accessor for SirikitDeviceState();
      outlined init with copy of SignalProviding(v27, (uint64_t)&v32);
      uint64_t v23 = SirikitDeviceState.__allocating_init(from:)();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v22 + 544))(v23, v30, v31);
      swift_release();
      break;
  }
  outlined destroy of SubmitCommandError?(v14, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartVideoCallTemplatingService.makeGenericErrorDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)((char *)v3 + direct field offset for StartVideoCallTemplatingService.catFamily);
  type metadata accessor for SirikitDeviceState();
  outlined init with copy of SignalProviding((uint64_t)v3 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v3 + 40), (uint64_t)v9);
  uint64_t v7 = SirikitDeviceState.__allocating_init(from:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v6 + 928))(v7, a2, a3);
  return swift_release();
}

void StartVideoCallTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v55 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v27 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_37();
  unint64_t v35 = outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v26);
  uint64_t v53 = v24;
  uint64_t v52 = v30;
  if (!v35) {
    goto LABEL_9;
  }
  unint64_t v36 = v35;
  if (v35 >> 62) {
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v37 = *(void *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFFF8));
  }
  if (v37 <= 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v39 = 0;
    goto LABEL_10;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v36 & 0xC000000000000001) == 0);
  if ((v36 & 0xC000000000000001) != 0) {
    id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v38 = *(id *)(v36 + 32);
  }
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
LABEL_10:
  type metadata accessor for PhonePerson(0);
  static Device.current.getter();
  __swift_project_boxed_opaque_existential_1(v56, v56[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  uint64_t v54 = static PhonePerson.make(phonePerson:options:locale:)(v39, 0, v22);

  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v40(v22, v31);
  uint64_t v41 = v55;
  OUTLINED_FUNCTION_1_58();
  __swift_project_boxed_opaque_existential_1((void *)(v41 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v42 + 48)), *(void *)(v41 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v42 + 48) + 24));
  OUTLINED_FUNCTION_1_58();
  __swift_project_boxed_opaque_existential_1((void *)(v41 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v43 + 40)), *(void *)(v41 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v43 + 40) + 24));
  dispatch thunk of DeviceState.siriLocale.getter();
  OUTLINED_FUNCTION_10_67();
  v44();
  uint64_t v46 = v45;
  v40(v22, v31);
  if (v46)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = v52;
    SpeakableString.init(print:speak:)();
    uint64_t v48 = type metadata accessor for SpeakableString();
    __swift_storeEnumTagSinglePayload(v52, 0, 1, v48);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = type metadata accessor for SpeakableString();
    uint64_t v47 = v52;
    __swift_storeEnumTagSinglePayload(v52, 1, 1, v49);
  }
  uint64_t v50 = *(void **)(v55 + direct field offset for StartVideoCallTemplatingService.catFamily);
  swift_retain();
  Swift::Bool v51 = App.isFirstParty()();
  (*(void (**)(uint64_t, uint64_t, Swift::Bool, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                          + *v50
                                                                          + 1728))(v54, v47, v51, v53, a21);
  swift_release_n();
  outlined destroy of SubmitCommandError?(v47, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartVideoCallTemplatingService.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = a2;
  v18._object = a3;
  v19.int value = PhoneCallSlotNames.init(rawValue:)(v18).value;
  StartVideoCallTemplatingService.slotTemplating(for:)(v19.value, &v23);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                             + *v9
                                                             + 216))(a5, a8, a9);
  v24(a1, a2, a3, a4, a5, a6, a7, v20, v21);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t StartVideoCallTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = a2;
  v14._object = a3;
  v15.int value = PhoneCallSlotNames.init(rawValue:)(v14).value;
  StartVideoCallTemplatingService.slotTemplating(for:)(v15.value, &v17);
  v18(a1, a2, a3, a4, a5, 1, a6, a7);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t StartVideoCallTemplatingService.slotTemplating(for:)@<X0>(unsigned __int8 a1@<W0>, _OWORD *a2@<X8>)
{
  int v4 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  if (v4 == 4)
  {
    outlined init with copy of SignalProviding((uint64_t)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 40), (uint64_t)v26);
    uint64_t v12 = *(void *)((char *)v2 + direct field offset for StartVideoCallTemplatingService.catFamily);
    swift_retain();
    uint64_t v13 = DucTemplatingService.locale.getter();
    uint64_t v15 = v14;
    uint64_t v16 = type metadata accessor for AppInfoBuilder();
    uint64_t v17 = swift_allocObject();
    v26[11] = v16;
    v26[12] = (uint64_t)&protocol witness table for AppInfoBuilder;
    v26[5] = v12;
    v26[6] = v13;
    v26[7] = v15;
    v26[8] = v17;
    specialized SlotTemplating.toAnySlotTemplating()();
    uint64_t result = outlined destroy of SubmitCommandError?((uint64_t)v26, &demangling cache variable for type metadata for ContactsSlotTemplating<INStartVideoCallIntent, INIntentResponse>);
    long long v19 = v28;
    *a2 = v27;
    a2[1] = v19;
    long long v20 = v30;
    a2[2] = v29;
    a2[3] = v20;
  }
  else
  {
    uint64_t v21 = v11;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v21, v22, v5);
    long long v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      *(void *)&long long v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000004FLL, 0x800000000049CC60, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v23, v24, "%s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void StartVideoCallTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
}

uint64_t StartVideoCallTemplatingService.__ivar_destroyer()
{
  return swift_release();
}

uint64_t StartVideoCallTemplatingService.deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release();
  return v0;
}

uint64_t StartVideoCallTemplatingService.__deallocating_deinit()
{
  specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(void *a1)
{
  id v1 = [a1 contacts];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for INPerson();
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v14 = *(void *)(a7 - 8);
  __chkstk_darwin(a1);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CATOption();
  __chkstk_darwin(v17 - 8);
  *(void *)(a6 + direct field offset for StartVideoCallTemplatingService.catFamily) = a2;
  outlined init with copy of SignalProviding(a1, (uint64_t)v24);
  type metadata accessor for StartCallCATs();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v18 = CATWrapper.__allocating_init(options:globals:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, a7);
  uint64_t v19 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0xD000000000000014, 0x800000000048C900, v24, v22, v23, v16, 0, 0, 0, 0, v18, a6, a7, a8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, a7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v19;
}

uint64_t type metadata accessor for StartVideoCallTemplatingService()
{
  uint64_t result = type metadata singleton initialization cache for StartVideoCallTemplatingService;
  if (!type metadata singleton initialization cache for StartVideoCallTemplatingService) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for StartVideoCallTemplatingService()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for StartVideoCallTemplatingService()
{
  return type metadata accessor for StartVideoCallTemplatingService();
}

uint64_t OUTLINED_FUNCTION_4_102()
{
  return specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)(v4, v3, v2, v1, v7, v0, v5, v6);
}

uint64_t OUTLINED_FUNCTION_8_97()
{
  return v0;
}

void *AppSelectionDependentKeys.timeSpentInAppAffinityScoreKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.timeSpentInAppAffinityScoreKey;
}

void *AppSelectionDependentKeys.foregroundAppSignalKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.foregroundAppSignalKey;
}

void *AppSelectionDependentKeys.timeSinceAppLastLaunchedKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.timeSinceAppLastLaunchedKey;
}

void *AppSelectionDependentKeys.timeTotalSpentByUserInAppKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.timeTotalSpentByUserInAppKey;
}

void *AppSelectionDependentKeys.appContactTimeSinceLastUsedKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactTimeSinceLastUsedKey;
}

uint64_t *AppSelectionDependentKeys.messageSendKey.unsafeMutableAddressor()
{
  if (one-time initialization token for messageSendKey != -1) {
    swift_once();
  }
  return &static AppSelectionDependentKeys.messageSendKey;
}

uint64_t *AppSelectionDependentKeys.messageUsingSiriKey.unsafeMutableAddressor()
{
  if (one-time initialization token for messageUsingSiriKey != -1) {
    swift_once();
  }
  return &static AppSelectionDependentKeys.messageUsingSiriKey;
}

uint64_t *AppSelectionDependentKeys.messageReceivedKey.unsafeMutableAddressor()
{
  if (one-time initialization token for messageReceivedKey != -1) {
    swift_once();
  }
  return &static AppSelectionDependentKeys.messageReceivedKey;
}

void *AppSelectionDependentKeys.appFreqForMessageKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appFreqForMessageKey;
}

void *AppSelectionDependentKeys.appFreqForMessageUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appFreqForMessageUsingSiriKey;
}

void *AppSelectionDependentKeys.appFreqForMessageForCountryCodeKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appFreqForMessageForCountryCodeKey;
}

uint64_t *AppSelectionDependentKeys.phoneCallKey.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallKey != -1) {
    swift_once();
  }
  return &static AppSelectionDependentKeys.phoneCallKey;
}

uint64_t *AppSelectionDependentKeys.phoneCallSiriKey.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallSiriKey != -1) {
    swift_once();
  }
  return &static AppSelectionDependentKeys.phoneCallSiriKey;
}

uint64_t *AppSelectionDependentKeys.phoneCallReceivedKey.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallReceivedKey != -1) {
    swift_once();
  }
  return &static AppSelectionDependentKeys.phoneCallReceivedKey;
}

void *AppSelectionDependentKeys.phoneAppFreqForPhoneCallKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppFreqForPhoneCallKey;
}

void *AppSelectionDependentKeys.phoneAppFreqForPhoneCallUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppFreqForPhoneCallUsingSiriKey;
}

void *AppSelectionDependentKeys.phoneAppFreqForPhoneCallForCountryCodeKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppFreqForPhoneCallForCountryCodeKey;
}

void *AppSelectionDependentKeys.messageSendToContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.messageSendToContactKey;
}

void *AppSelectionDependentKeys.messageSendToContactSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.messageSendToContactSiriKey;
}

void *AppSelectionDependentKeys.messageReceivedFromContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.messageReceivedFromContactKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages2minKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages2minKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages10mKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages10mKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages1hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages1hKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages6hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages6hKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages1dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages1dKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages7dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages7dKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages28dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages28dKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesInfKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesInfKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesUsingSiriKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesHapticKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesHapticKey;
}

void *AppSelectionDependentKeys.phoneCallToContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneCallToContactKey;
}

void *AppSelectionDependentKeys.phoneCallToContactSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneCallToContactSiriKey;
}

void *AppSelectionDependentKeys.phoneCallReceivedFromContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneCallReceivedFromContactKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency2mKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency2mKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency10mKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency10mKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency1hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency1hKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency6hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency6hKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency1dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency1dKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency7dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency7dKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency28dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency28dKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyInfKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyInfKey;
}

void *AppSelectionDependentKeys.phoneAppContactTotalFrequencyKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactTotalFrequencyKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyUsingSiriKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyHapticKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyHapticKey;
}

unint64_t static AppSelectionDependentKeys.foregroundAppSignalKey.getter()
{
  return OUTLINED_FUNCTION_10_2(20);
}

unint64_t static AppSelectionDependentKeys.timeSinceAppLastLaunchedKey.getter()
{
  return OUTLINED_FUNCTION_10_2(36);
}

unint64_t static AppSelectionDependentKeys.timeSpentInAppAffinityScoreKey.getter()
{
  return OUTLINED_FUNCTION_10_2(34);
}

void *AppSelectionDependentKeys.appContactAffinityScore.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactAffinityScore;
}

unint64_t static AppSelectionDependentKeys.appContactAffinityScore.getter()
{
  return OUTLINED_FUNCTION_10_2(30);
}

void *AppSelectionDependentKeys.appAffinityScore.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appAffinityScore;
}

unint64_t static AppSelectionDependentKeys.appAffinityScore.getter()
{
  return OUTLINED_FUNCTION_10_2(17);
}

unint64_t static AppSelectionDependentKeys.timeTotalSpentByUserInAppKey.getter()
{
  return OUTLINED_FUNCTION_10_2(32);
}

unint64_t static AppSelectionDependentKeys.appContactTimeSinceLastUsedKey.getter()
{
  return OUTLINED_FUNCTION_10_2(58);
}

uint64_t one-time initialization function for messageSendKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey(a1, (unsigned int *)&enum case for DomainUseCase.messageSend(_:), &static AppSelectionDependentKeys.messageSendKey, &qword_5D51A8);
}

uint64_t static AppSelectionDependentKeys.messageSendKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for messageSendKey, &static AppSelectionDependentKeys.messageSendKey);
}

uint64_t one-time initialization function for messageUsingSiriKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey(a1, (unsigned int *)&enum case for DomainUseCase.messageSendSiri(_:), &static AppSelectionDependentKeys.messageUsingSiriKey, &qword_5D51B8);
}

uint64_t static AppSelectionDependentKeys.messageUsingSiriKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for messageUsingSiriKey, &static AppSelectionDependentKeys.messageUsingSiriKey);
}

uint64_t one-time initialization function for messageReceivedKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey(a1, (unsigned int *)&enum case for DomainUseCase.messageReceived(_:), &static AppSelectionDependentKeys.messageReceivedKey, &qword_5D51C8);
}

uint64_t static AppSelectionDependentKeys.messageReceivedKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for messageReceivedKey, &static AppSelectionDependentKeys.messageReceivedKey);
}

unint64_t static AppSelectionDependentKeys.appFreqForMessageKey.getter()
{
  return OUTLINED_FUNCTION_10_2(41);
}

unint64_t static AppSelectionDependentKeys.appFreqForMessageUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_10_2(50);
}

unint64_t static AppSelectionDependentKeys.appFreqForMessageForCountryCodeKey.getter()
{
  return OUTLINED_FUNCTION_10_2(54);
}

uint64_t one-time initialization function for phoneCallKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey(a1, (unsigned int *)&enum case for DomainUseCase.phoneCall(_:), &static AppSelectionDependentKeys.phoneCallKey, &qword_5D51D8);
}

uint64_t static AppSelectionDependentKeys.phoneCallKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for phoneCallKey, &static AppSelectionDependentKeys.phoneCallKey);
}

uint64_t one-time initialization function for phoneCallSiriKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey(a1, (unsigned int *)&enum case for DomainUseCase.phoneCallSiri(_:), &static AppSelectionDependentKeys.phoneCallSiriKey, &qword_5D51E8);
}

uint64_t static AppSelectionDependentKeys.phoneCallSiriKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for phoneCallSiriKey, &static AppSelectionDependentKeys.phoneCallSiriKey);
}

uint64_t one-time initialization function for phoneCallReceivedKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey(a1, (unsigned int *)&enum case for DomainUseCase.phoneCallReceived(_:), &static AppSelectionDependentKeys.phoneCallReceivedKey, &qword_5D51F8);
}

uint64_t one-time initialization function for messageSendKey(uint64_t a1, unsigned int *a2, uint64_t *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for DomainUseCase();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *a2, v7);
  uint64_t v11 = DomainUseCase.rawValue.getter();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v17 = v11;
  uint64_t v18 = v13;
  swift_bridgeObjectRetain();
  v14._object = (void *)0x800000000049CCD0;
  v14._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v14);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v18;
  *a3 = v17;
  *a4 = v16;
  return result;
}

uint64_t static AppSelectionDependentKeys.phoneCallReceivedKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for phoneCallReceivedKey, &static AppSelectionDependentKeys.phoneCallReceivedKey);
}

unint64_t static AppSelectionDependentKeys.phoneAppFreqForPhoneCallKey.getter()
{
  return OUTLINED_FUNCTION_10_2(39);
}

unint64_t static AppSelectionDependentKeys.phoneAppFreqForPhoneCallUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_10_2(48);
}

unint64_t static AppSelectionDependentKeys.phoneAppFreqForPhoneCallForCountryCodeKey.getter()
{
  return OUTLINED_FUNCTION_10_2(52);
}

unint64_t static AppSelectionDependentKeys.messageSendToContactKey.getter()
{
  return OUTLINED_FUNCTION_10_2(64);
}

unint64_t static AppSelectionDependentKeys.messageSendToContactSiriKey.getter()
{
  return OUTLINED_FUNCTION_10_2(73);
}

unint64_t static AppSelectionDependentKeys.messageReceivedFromContactKey.getter()
{
  return OUTLINED_FUNCTION_10_2(67);
}

void *AppSelectionDependentKeys.appContactFreqForMessagesPrefix.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesPrefix;
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages2minKey.getter()
{
  return OUTLINED_FUNCTION_10_2(56);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages10mKey.getter()
{
  return OUTLINED_FUNCTION_10_2(57);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages1hKey.getter()
{
  return OUTLINED_FUNCTION_10_2(56);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages6hKey.getter()
{
  return OUTLINED_FUNCTION_10_2(56);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages1dKey.getter()
{
  return OUTLINED_FUNCTION_10_2(56);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages7dKey.getter()
{
  return OUTLINED_FUNCTION_10_2(56);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages28dKey.getter()
{
  return OUTLINED_FUNCTION_10_2(57);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesInfKey.getter()
{
  return OUTLINED_FUNCTION_10_2(57);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesKey.getter()
{
  return OUTLINED_FUNCTION_10_2(57);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_10_2(66);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesHapticKey.getter()
{
  return OUTLINED_FUNCTION_10_2(68);
}

unint64_t static AppSelectionDependentKeys.phoneCallToContactKey.getter()
{
  return OUTLINED_FUNCTION_10_2(62);
}

unint64_t static AppSelectionDependentKeys.phoneCallToContactSiriKey.getter()
{
  return OUTLINED_FUNCTION_10_2(71);
}

unint64_t static AppSelectionDependentKeys.phoneCallReceivedFromContactKey.getter()
{
  return OUTLINED_FUNCTION_10_2(66);
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyPrefix.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyPrefix;
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyPrefix.getter()
{
  return OUTLINED_FUNCTION_10_2(52);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesPrefix.getter()
{
  return OUTLINED_FUNCTION_10_2(54);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency2mKey.getter()
{
  return OUTLINED_FUNCTION_10_2(54);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency10mKey.getter()
{
  return OUTLINED_FUNCTION_10_2(55);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency1hKey.getter()
{
  return OUTLINED_FUNCTION_10_2(54);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency6hKey.getter()
{
  return OUTLINED_FUNCTION_10_2(54);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency1dKey.getter()
{
  return OUTLINED_FUNCTION_10_2(54);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency7dKey.getter()
{
  return OUTLINED_FUNCTION_10_2(54);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency28dKey.getter()
{
  return OUTLINED_FUNCTION_10_2(55);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyInfKey.getter()
{
  return OUTLINED_FUNCTION_10_2(55);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactTotalFrequencyKey.getter()
{
  return OUTLINED_FUNCTION_10_2(55);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_10_2(64);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyHapticKey.getter()
{
  return OUTLINED_FUNCTION_10_2(66);
}

ValueMetadata *type metadata accessor for AppSelectionDependentKeys()
{
  return &type metadata for AppSelectionDependentKeys;
}

uint64_t MachineUtteranceBuilder.addFollowUpOfferMapping(for:)(char a1)
{
  OUTLINED_FUNCTION_1_107();
  uint64_t v2 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_0_2();
      uint64_t v3 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
      swift_release();
      uint64_t v2 = v3;
      break;
    default:
      return v2;
  }
  return v2;
}

uint64_t MachineUtteranceBuilder.addPhoneDomain()()
{
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
}

uint64_t MachineUtteranceBuilder.addPhoneNumber(value:)()
{
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
}

uint64_t MachineUtteranceBuilder.addEmailAddress(value:)()
{
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
}

uint64_t MachineUtteranceBuilder.addPersonFullName(value:)()
{
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
}

uint64_t MachineUtteranceBuilder.addCallBackUtterance(caller:)(void *a1)
{
  outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(a1);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
  {
    id v4 = [a1 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    EntitySpanLabel.rawValue.getter();
    dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
    swift_release();
    swift_bridgeObjectRelease();
  }
  id v5 = [a1 personHandle];
  if (v5)
  {
    outlined bridged method (ob) of @objc INPersonHandle.value.getter(v5);
    if (v6)
    {
      id v7 = [a1 personHandle];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = (char *)[v7 type];

        if (v9 == (unsigned char *)&dword_0 + 2) {
          goto LABEL_9;
        }
        if (v9 == (unsigned char *)&dword_0 + 1)
        {
          OUTLINED_FUNCTION_3_107();
          goto LABEL_11;
        }
        if (!v9)
        {
LABEL_9:
          OUTLINED_FUNCTION_4_103();
LABEL_11:
          dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
          swift_release();
        }
      }
      swift_bridgeObjectRelease();
    }
  }

  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_107()
{
  return 0x6E69616D6F64;
}

uint64_t OUTLINED_FUNCTION_3_107()
{
  return 0x6464416C69616D65;
}

uint64_t OUTLINED_FUNCTION_4_103()
{
  return 0x6D754E656E6F6870;
}

unint64_t default argument 0 of SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:shouldReactOpenContact:openPhoneAction:)()
{
  return 0xD000000000000011;
}

uint64_t SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:shouldReactOpenContact:openPhoneAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for SearchCallHistoryModel();
  Loggable.init(wrappedValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleCallRecordModel]);
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t type metadata accessor for SearchCallHistoryModel()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryModel;
  if (!type metadata singleton initialization cache for SearchCallHistoryModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SearchCallHistoryModel.appId.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchCallHistoryModel.appId : SearchCallHistoryModel()
{
  return SearchCallHistoryModel.appId.setter();
}

uint64_t SearchCallHistoryModel.appId.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.appId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_104((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.callRecords()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.callRecords.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchCallHistoryModel.callRecords : SearchCallHistoryModel()
{
  return SearchCallHistoryModel.callRecords.setter();
}

uint64_t SearchCallHistoryModel.callRecords.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.callRecords.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_104((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.recentsText.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchCallHistoryModel.recentsText : SearchCallHistoryModel()
{
  return SearchCallHistoryModel.recentsText.setter();
}

uint64_t SearchCallHistoryModel.recentsText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.recentsText.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_104((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.openPhoneText.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchCallHistoryModel.openPhoneText : SearchCallHistoryModel()
{
  return SearchCallHistoryModel.openPhoneText.setter();
}

uint64_t SearchCallHistoryModel.openPhoneText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.openPhoneText.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_104((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.shouldShowBottomView.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t SearchCallHistoryModel.shouldShowBottomView.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.shouldShowBottomView.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_104((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.shouldReactOpenContact.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t SearchCallHistoryModel.shouldReactOpenContact.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.shouldReactOpenContact.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_104((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.openPhoneAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SearchCallHistoryModel.openPhoneAction : SearchCallHistoryModel(id *a1)
{
  id v1 = *a1;
  return SearchCallHistoryModel.openPhoneAction.setter();
}

uint64_t SearchCallHistoryModel.openPhoneAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.openPhoneAction.modify())()
{
  id v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_104((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  *(void *)(v0 + 32) = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6449707061 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F6365526C6C6163 && a2 == 0xEB00000000736472;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x5473746E65636572 && a2 == 0xEB00000000747865;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6F68506E65706FLL && a2 == 0xED00007478655465;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x800000000049CD70 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000016 && a2 == 0x800000000049CD90 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xEF6E6F6974634165)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

unint64_t SearchCallHistoryModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0x65736E6F70736572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6449707061;
      break;
    case 2:
      unint64_t result = 0x6F6365526C6C6163;
      break;
    case 3:
      unint64_t result = 0x5473746E65636572;
      break;
    case 4:
    case 7:
      unint64_t result = 0x6E6F68506E65706FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchCallHistoryModel.CodingKeys()
{
  return SearchCallHistoryModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchCallHistoryModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = SearchCallHistoryModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchCallHistoryModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchCallHistoryModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchCallHistoryModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchCallHistoryModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for SearchCallHistoryModel();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_8_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A](uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t SearchCallHistoryModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v62 = v3;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_3_1();
  uint64_t v65 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v75 = v7;
  uint64_t v76 = v6;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v66 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v67 = (char *)&v59 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v71 = v12;
  uint64_t v72 = v11;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_3_1();
  uint64_t v68 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v78 = v15;
  uint64_t v79 = v14;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v59 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v59 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchCallHistoryModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v69 = v25;
  uint64_t v70 = v24;
  __chkstk_darwin(v24);
  OUTLINED_FUNCTION_4();
  long long v28 = (int *)(v27 - v26);
  uint64_t v77 = (int *)type metadata accessor for SearchCallHistoryModel();
  __chkstk_darwin(v77);
  OUTLINED_FUNCTION_4();
  uint64_t v31 = (void *)(v30 - v29);
  *uint64_t v31 = 0xD000000000000011;
  v31[1] = 0x80000000004913A0;
  uint64_t v32 = (uint64_t *)(v30 - v29);
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  uint64_t v74 = a1;
  unsigned int v35 = __swift_project_boxed_opaque_existential_1(a1, v33);
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  unint64_t v36 = v73;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v36)
  {
    uint64_t v37 = v68;
    os_log_type_t v73 = v18;
    char v87 = 0;
    uint64_t v40 = (uint64_t)v32;
    *uint64_t v32 = KeyedDecodingContainer.decode(_:forKey:)();
    v32[1] = v41;
    char v86 = 1;
    unint64_t v42 = _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    uint64_t v43 = v23;
    uint64_t v44 = v79;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    unint64_t v61 = v42;
    uint64_t v45 = v40 + v77[5];
    uint64_t v46 = v78 + 32;
    uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v78 + 32);
    v60(v45, v43, v44);
    char v85 = 2;
    lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>);
    uint64_t v47 = v72;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v59 = v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v40 + v77[6], v37, v47);
    char v84 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v48 = v60;
    v60(v40 + v77[7], v21, v44);
    char v83 = 4;
    uint64_t v49 = v73;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v48(v40 + v77[8], v49, v44);
    char v82 = 5;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    uint64_t v50 = v67;
    uint64_t v51 = v76;
    OUTLINED_FUNCTION_13_57();
    uint64_t v52 = *(void (**)(uint64_t, char *, uint64_t))(v75 + 32);
    v52(v40 + v77[9], v50, v51);
    char v81 = 6;
    uint64_t v53 = v66;
    OUTLINED_FUNCTION_13_57();
    v52(v40 + v77[10], v53, v51);
    char v80 = 7;
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    uint64_t v55 = v64;
    uint64_t v54 = v65;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v56 = OUTLINED_FUNCTION_2_121();
    v57(v56);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v40 + v77[11], v54, v55);
    outlined init with copy of SearchCallHistoryModel(v40, v63);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    return outlined destroy of SearchCallHistoryModel(v40);
  }
  OUTLINED_FUNCTION_7_87();
  os_log_type_t v73 = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  uint64_t result = swift_bridgeObjectRelease();
  if (v34) {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))((char *)v32 + v28[5], v79);
  }
  if (v28) {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))((char *)v32 + v28[6], v72);
  }
  uint64_t v38 = v79;
  if (v23) {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))((char *)v32 + v28[7], v79);
  }
  uint64_t v39 = v76;
  if (v33)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))((char *)v32 + v28[8], v38);
    if (!v35) {
      goto LABEL_12;
    }
  }
  else if (!v35)
  {
LABEL_12:
    if (!v21) {
      return result;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))((char *)v32 + v28[10], v39);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))((char *)v32 + v28[9], v39);
  if (!v21) {
    return result;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))((char *)v32 + v28[10], v39);
}

unint64_t lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A]);
    lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t instantiation function for generic protocol witness table for SearchCallHistoryModel(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel((uint64_t)&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t base witness table accessor for Decodable in SearchCallHistoryModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel((uint64_t)&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel);
}

unint64_t base witness table accessor for Encodable in SearchCallHistoryModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel((uint64_t)&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel);
}

unint64_t lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SearchCallHistoryModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchCallHistoryModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchCallHistoryModel(void *a1)
{
  return SearchCallHistoryModel.encode(to:)(a1);
}

uint64_t sub_3E40B4()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = SearchCallHistoryModel.appId.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_3E40E0()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = SearchCallHistoryModel.callRecords.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_3E410C()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = SearchCallHistoryModel.recentsText.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_3E4138()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = SearchCallHistoryModel.openPhoneText.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_3E4164()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = SearchCallHistoryModel.shouldShowBottomView.getter();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_3E4190()
{
  return SearchCallHistoryModel.shouldShowBottomView.setter();
}

uint64_t sub_3E41B8()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = SearchCallHistoryModel.shouldReactOpenContact.getter();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_3E41E4()
{
  return SearchCallHistoryModel.shouldReactOpenContact.setter();
}

uint64_t sub_3E420C()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = SearchCallHistoryModel.openPhoneAction.getter();
  uint64_t *v0 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    v12(&a1[a3[7]], (char *)a2 + a3[7], v11);
    v12(&a1[a3[8]], (char *)a2 + a3[8], v11);
    uint64_t v17 = a3[9];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    v21(&a1[a3[10]], (char *)a2 + a3[10], v20);
    uint64_t v22 = a3[11];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryModel(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  v6(a1 + a2[7], v5);
  v6(a1 + a2[8], v5);
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(a1 + a2[10], v10);
  uint64_t v12 = a1 + a2[11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

char *initializeWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], &a2[a3[10]], v19);
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

char *assignWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(&a1[a3[10]], &a2[a3[10]], v18);
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

char *initializeWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(&a1[a3[10]], &a2[a3[10]], v18);
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

char *assignWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], &a2[a3[10]], v19);
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3E4DA4);
}

uint64_t sub_3E4DA4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      OUTLINED_FUNCTION_1_6();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_1_6();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[9];
        }
        else
        {
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
          uint64_t v11 = a3[11];
        }
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3E4EBC);
}

uint64_t sub_3E4EBC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      OUTLINED_FUNCTION_1_6();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_1_6();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[9];
        }
        else
        {
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
          uint64_t v11 = a4[11];
        }
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for SearchCallHistoryModel()
{
  type metadata accessor for Loggable<String>(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<[SingleCallRecordModel]>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Loggable<String>(319, &lazy cache variable for type metadata for Loggable<Bool>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CodableAceObject<SABaseCommand>();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void type metadata accessor for Loggable<[SingleCallRecordModel]>()
{
  if (!lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    unint64_t v0 = type metadata accessor for Loggable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3E5254);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SearchCallHistoryModel.CodingKeys()
{
  return &unk_56BED0;
}

uint64_t OUTLINED_FUNCTION_2_121()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_104(uint64_t a1)
{
  void *v1 = a1;
  return type metadata accessor for SearchCallHistoryModel();
}

uint64_t OUTLINED_FUNCTION_6_96()
{
  *(void *)(v2 - 144) = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_57()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v38 = a3;
  uint64_t v37 = a2;
  uint64_t v48 = a1;
  uint64_t v47 = type metadata accessor for PhoneCallNLv3Intent(0);
  __chkstk_darwin(v47);
  unsigned int v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v6 = v5;
  uint64_t v46 = v7;
  int v45 = v8;
  uint64_t v9 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent);
  id v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v11 = [v10 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static Signpost.begin(_:string1:)();
  uint64_t v44 = v12;
  uint64_t v43 = v13;
  uint64_t v42 = v14;
  int v41 = v15;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v40 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v39 = v9;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    v36[1] = v6;
    uint64_t v21 = v20;
    v49[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034, 0x8000000000493710, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v50 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantIntent.Type);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v17, v18, "#SKTransformer %s to %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v24 = v48;
  outlined init with copy of SignalProviding(v48, (uint64_t)&v50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast())
  {
    uint64_t v25 = type metadata accessor for TransformationError();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_14((unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError, (void (*)(uint64_t))&type metadata accessor for TransformationError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, enum case for TransformationError.notImplemented(_:), v25);
    swift_willThrow();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10((uint64_t)v4, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    swift_errorRetain();
    swift_errorRetain();
    long long v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      v49[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v31 = _typeName(_:qualified:)();
      uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v33 = Error.localizedDescription.getter();
      uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v28, v29, "#SKTransformer Error converting PhoneCallNLIntent to %s: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = 0;
    if (swift_dynamicCast())
    {
      uint64_t v27 = specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(v24, v37, v38);
      outlined destroy of PhoneCallNLv4Intent((uint64_t)v49);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  }
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release();
  swift_release();
  return v27;
}

#error "3E5BA4: call analysis failed (funcsize=19)"

void specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v44 = v21;
  uint64_t v43 = v22;
  uint64_t v24 = v23;
  uint64_t v47 = v25;
  uint64_t v46 = v26;
  uint64_t v45 = v27;
  uint64_t v49 = v28;
  type metadata accessor for PhoneCallNLv3Intent(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_89_9(v30, v42);
  static Signpost.begin(_:)();
  uint64_t v31 = type metadata accessor for CNContactStore(0, v24);
  id v32 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v33 = [v32 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static Signpost.begin(_:string1:)();
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
  unsigned int v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    v50[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315394;
    uint64_t v38 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034, 0x8000000000493710, v50);
    OUTLINED_FUNCTION_114_2(v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2080;
    v51[0] = v31;
    __swift_instantiateConcreteTypeFromMangledName(v43);
    uint64_t v39 = String.init<A>(describing:)();
    uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v50);
    OUTLINED_FUNCTION_114_2(v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v35, v36, "#SKTransformer %s to %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  outlined init with copy of SignalProviding(v49, (uint64_t)v51);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast())
  {
    v44(v49, v45, v46, v47);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(v48, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
  }
  else if (swift_dynamicCast())
  {
    a21(v49, v45, v46, v47);
    outlined destroy of PhoneCallNLv4Intent((uint64_t)v50);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v12)(void **__return_ptr, uint64_t);
  uint64_t v13;
  uint64_t result;
  void *v15;
  void v16[2];
  void *v17;

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INSearchCallHistoryIntent>);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v11 = a3;
  static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(v3, a2, a3);
  uint64_t v12 = (void (*)(void **__return_ptr, uint64_t))Transformer.transform.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v13 = v16[1];
  v12(&v17, a1);
  if (v13)
  {
    swift_release();

    return swift_release();
  }
  else
  {
    swift_release();

    swift_release();
    int v15 = v17;
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void (*v15)(long long *__return_ptr, uint64_t);
  uint64_t result;
  void *v17;
  uint64_t v18;
  long long v19[2];

  uint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INIdentifyIncomingCallerIntent>);
  id v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SignalProviding(v5, (uint64_t)v19);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  outlined init with take of AppSelectionSignalComponent(v19, v13 + 32);
  uint64_t v14 = a3;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent);
  Transformer.init(transform:)();
  int v15 = (void (*)(long long *__return_ptr, uint64_t))Transformer.transform.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v15(v19, a1);
  if (v4) {
    return swift_release();
  }
  swift_release();
  uint64_t v17 = *(void **)&v19[0];
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

void specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)()
{
  OUTLINED_FUNCTION_61_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartCallIntent>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_35_36();
  uint64_t v3 = swift_allocObject();
  OUTLINED_FUNCTION_85_9(v3);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  OUTLINED_FUNCTION_127_2();
  Transformer.transform.getter();
  uint64_t v4 = OUTLINED_FUNCTION_34_32();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_43_29();
  v1(v6);
  OUTLINED_FUNCTION_164_3();
  if (v0)
  {
    swift_release();
  }
  else
  {
    swift_release();
    self;
    if (!OUTLINED_FUNCTION_72_2()) {
  }
    }
  OUTLINED_FUNCTION_158_3();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_61_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartVideoCallIntent>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_35_36();
  uint64_t v3 = swift_allocObject();
  OUTLINED_FUNCTION_85_9(v3);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartVideoCallIntent);
  OUTLINED_FUNCTION_127_2();
  Transformer.transform.getter();
  uint64_t v4 = OUTLINED_FUNCTION_34_32();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_43_29();
  v1(v6);
  OUTLINED_FUNCTION_164_3();
  if (v0)
  {
    swift_release();
  }
  else
  {
    swift_release();
    self;
    if (!OUTLINED_FUNCTION_72_2()) {
  }
    }
  OUTLINED_FUNCTION_158_3();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_61_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartAudioCallIntent>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_35_36();
  uint64_t v3 = swift_allocObject();
  OUTLINED_FUNCTION_85_9(v3);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INStartAudioCallIntent);
  OUTLINED_FUNCTION_127_2();
  Transformer.transform.getter();
  uint64_t v4 = OUTLINED_FUNCTION_34_32();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_43_29();
  v1(v6);
  OUTLINED_FUNCTION_164_3();
  if (v0)
  {
    swift_release();
  }
  else
  {
    swift_release();
    self;
    if (!OUTLINED_FUNCTION_72_2()) {
  }
    }
  OUTLINED_FUNCTION_158_3();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void (*v12)(uint64_t);
  void (*v13)(void);
  uint64_t v14;
  void *v15;
  long long v16[2];

  OUTLINED_FUNCTION_11_51();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INHangUpCallIntent>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_65_2();
  outlined init with copy of SignalProviding(v0, (uint64_t)v16);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v7;
  v9[3] = v5;
  outlined init with take of AppSelectionSignalComponent(v16, (uint64_t)(v9 + 4));
  v9[9] = v3;
  id v10 = v3;
  swift_retain();
  id v11 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INHangUpCallIntent);
  Transformer.init(transform:)();
  uint64_t v12 = (void (*)(uint64_t))Transformer.transform.getter();
  OUTLINED_FUNCTION_26();
  v13();
  uint64_t v14 = OUTLINED_FUNCTION_43_29();
  v12(v14);
  OUTLINED_FUNCTION_164_3();
  if (v1)
  {
    swift_release();
  }
  else
  {
    swift_release();
    int v15 = *(void **)&v16[0];
    self;
    if (!OUTLINED_FUNCTION_72_2()) {
  }
    }
  OUTLINED_FUNCTION_9_58();
}

uint64_t specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (*v18)(long long *__return_ptr, uint64_t);
  uint64_t result;
  void *v20;
  uint64_t v21;
  long long v22[2];

  uint64_t v6 = v4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAnswerCallIntent>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SignalProviding(v6, (uint64_t)v22);
  int v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  v15[3] = a3;
  outlined init with take of AppSelectionSignalComponent(v22, (uint64_t)(v15 + 4));
  v15[9] = a4;
  id v16 = a4;
  swift_retain();
  id v17 = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INAnswerCallIntent);
  Transformer.init(transform:)();
  os_log_type_t v18 = (void (*)(long long *__return_ptr, uint64_t))Transformer.transform.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v18(v22, a1);
  if (v5) {
    return swift_release();
  }
  swift_release();
  uint64_t v20 = *(void **)&v22[0];
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

uint64_t specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ContactGroupResolver();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v31[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    outlined init with copy of SignalProviding(v4, (uint64_t)v31);
    if (a3)
    {
      self;
      LODWORD(a3) = swift_dynamicCastObjCClass();
    }
    swift_retain();
    ContactGroupResolver.init()();
    id v17 = static Transformer<>.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:)(a1, a2, v31);
    id v22 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)((int)v17, (int)v31, a2, a3, v18, v19, v20, v21, v30, v31[0], v31[1], v31[2], v31[3], v31[4], v31[5], v32, v33, v34, v35,
            v36,
            v37,
            v38,
            v39,
            v40);
    swift_release();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  else
  {
    uint64_t v24 = v16;
    uint64_t v25 = v14;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v24, v26, v25);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      v31[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x8000000000493780, v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v27, v28, "%s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_41_30();
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_128_4();
  if (!a2)
  {
    uint64_t v13 = v9;
    uint64_t v14 = v8;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    uint64_t v15 = OUTLINED_FUNCTION_93_10();
    v16(v15);
    id v17 = (void *)Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10_15(v18))
    {
      OUTLINED_FUNCTION_4_55();
      uint64_t v22 = OUTLINED_FUNCTION_9_35();
      *uint64_t v13 = 136315138;
      uint64_t v19 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x8000000000493780, &v22);
      OUTLINED_FUNCTION_38_31(v19);
      OUTLINED_FUNCTION_2_46(&dword_0, v20, v21, "%s");
      OUTLINED_FUNCTION_6_71();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_55_21();
    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_30_33();
    OUTLINED_FUNCTION_144_4();
  }
  outlined init with copy of SignalProviding(v3, (uint64_t)&v22);
  if (a3)
  {
    self;
    swift_dynamicCastObjCClass();
  }
  swift_retain();
  ContactGroupResolver.init()();
  specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)();
  uint64_t v11 = v10;
  swift_release();
  OUTLINED_FUNCTION_26_0();
  v12();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  if (v11)
  {
    self;
    if (!swift_dynamicCastObjCClass()) {
  }
    }
  OUTLINED_FUNCTION_158_3();
}

void specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)()
{
}

{
  specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, void *, uint64_t, void, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  void *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, void *, uint64_t, void, uint64_t);
  void v25[5];

  OUTLINED_FUNCTION_11_51();
  uint64_t v24 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v23 = v7;
  uint64_t v8 = type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_48_0();
  uint64_t v12 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_65_2();
  if (!v6)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    id v16 = OUTLINED_FUNCTION_93_10();
    v17(v16);
    os_log_type_t v18 = (void *)Logger.logObject.getter();
    uint64_t v19 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10_15(v19))
    {
      OUTLINED_FUNCTION_4_55();
      v25[0] = OUTLINED_FUNCTION_9_35();
      uint64_t v20 = OUTLINED_FUNCTION_63_14(4.8149e-34);
      OUTLINED_FUNCTION_38_31(v20);
      OUTLINED_FUNCTION_2_46(&dword_0, v21, v22, "%s");
      OUTLINED_FUNCTION_6_71();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_55_21();
    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_30_33();
    OUTLINED_FUNCTION_144_4();
  }
  outlined init with copy of SignalProviding(v0, (uint64_t)v25);
  if (v4)
  {
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_retain();
  ContactGroupResolver.init()();
  uint64_t v15 = (void *)v24(v23, v6, v25, v14, 0, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if (v15)
  {
    self;
    if (!swift_dynamicCastObjCClass()) {
  }
    }
  OUTLINED_FUNCTION_9_58();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void v24[5];

  OUTLINED_FUNCTION_11_51();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_137_2();
  type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_65_0();
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_128_4();
  if (!v7)
  {
    id v16 = v13;
    id v17 = v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    os_log_type_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v16, v18, v17);
    uint64_t v19 = (void *)Logger.logObject.getter();
    uint64_t v20 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10_15(v20))
    {
      OUTLINED_FUNCTION_4_55();
      v24[0] = OUTLINED_FUNCTION_9_35();
      uint64_t v21 = OUTLINED_FUNCTION_63_14(4.8149e-34);
      OUTLINED_FUNCTION_38_31(v21);
      OUTLINED_FUNCTION_2_46(&dword_0, v22, v23, "%s");
      OUTLINED_FUNCTION_6_71();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_55_21();
    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_30_33();
    OUTLINED_FUNCTION_144_4();
  }
  outlined init with copy of SignalProviding(v0, (uint64_t)v24);
  if (v5)
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
  }
  swift_retain();
  ContactGroupResolver.init()();
  uint64_t v14 = (void *)specialized static HangUpCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(v1, v7, (uint64_t)v24, v5, v3);
  swift_release();
  OUTLINED_FUNCTION_26();
  v15();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (v14)
  {
    self;
    if (!swift_dynamicCastObjCClass()) {
  }
    }
  OUTLINED_FUNCTION_9_58();
}

uint64_t specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ContactGroupResolver();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = __chkstk_darwin(v12);
  id v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    outlined init with copy of SignalProviding(v4, (uint64_t)v26);
    if (a3)
    {
      self;
      a3 = swift_dynamicCastObjCClass();
    }
    swift_retain();
    ContactGroupResolver.init()();
    id v17 = (void *)specialized static IdentifyCallerIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(a1, a2, v26, a3, 0, v11);
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if (v17)
    {
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        return result;
      }
    }
    return 0;
  }
  else
  {
    uint64_t v19 = v14;
    uint64_t v20 = v16;
    uint64_t v21 = v13;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v20, v22, v21);
    unint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      v26[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x8000000000493780, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v23, v24, "%s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v20)(long long *__return_ptr, uint64_t);
  uint64_t result;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  long long v30[2];
  uint64_t v31;

  uint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAddCallParticipantIntent>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = __chkstk_darwin(v13);
  id v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    outlined init with copy of SignalProviding(v5, (uint64_t)v30);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = a3;
    outlined init with take of AppSelectionSignalComponent(v30, v18 + 32);
    id v19 = a3;
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent);
    Transformer.init(transform:)();
    uint64_t v20 = (void (*)(long long *__return_ptr, uint64_t))Transformer.transform.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v20(v30, a1);
    if (v4)
    {
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      swift_release();
      uint64_t v22 = *(void **)&v30[0];
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (!result)
      {

        return 0;
      }
    }
  }
  else
  {
    unint64_t v23 = v15;
    os_log_type_t v24 = v17;
    uint64_t v25 = v14;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v24, v26, v25);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(void *)&v30[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x8000000000493780, (uint64_t *)v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v27, v28, "%s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for ContactGroupResolver();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v28[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    outlined init with copy of SignalProviding(v5, (uint64_t)v28);
    if (a3)
    {
      self;
      a3 = swift_dynamicCastObjCClass();
    }
    swift_retain();
    ContactGroupResolver.init()();
    id v19 = (void *)specialized static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(a1, a2, v28, a3, a4, v13);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    if (v19)
    {
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        return result;
      }
    }
    return 0;
  }
  else
  {
    uint64_t v21 = v18;
    uint64_t v22 = v16;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v21, v23, v22);
    os_log_type_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      v28[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x8000000000493780, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v24, v25, "%s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void static PhoneCallRequestSupportPolicy.getSiriKitIntent(input:sharedGlobals:app:intentTypeName:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_137_2();
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_37();
  uint64_t v8 = v6[3];
  uint64_t v9 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v8, v9);
  Input.parse.getter();
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)v10 + 192))(&v20, v0);
  OUTLINED_FUNCTION_26();
  v11();
  if (v21)
  {
    outlined init with take of AppSelectionSignalComponent(&v20, (uint64_t)v22);
    static PhoneCallRequestSupportPolicy.getSiriKitIntent(phoneCallNLIntent:sharedGlobals:app:intentTypeName:)((uint64_t)v22, v6, (uint64_t)v4, v2, v12, v13, v14, v15);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    outlined destroy of UUID?((uint64_t)&v20, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    uint64_t v17 = OUTLINED_FUNCTION_25_0(v16, (uint64_t)static Logger.siriPhone);
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_14_2(v18))
    {
      id v19 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_28_14(v19);
      _os_log_impl(&dword_0, v17, (os_log_type_t)v2, "#PhoneCallRequestSupportPolicy getSiriKitIntent: couldn't convert input to its corresponding INIntent", v4, 2u);
      OUTLINED_FUNCTION_6();
    }

    swift_release();
  }
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

uint64_t static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = a4;
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 40) = a1;
  return _swift_task_switch(static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:), 0, 0);
}

uint64_t static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:)()
{
  static PhoneCallRequestSupportPolicy.getSiriKitIntent(input:sharedGlobals:app:intentTypeName:)();
  uint64_t v3 = v2;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = OUTLINED_FUNCTION_25_0(v4, (uint64_t)static Logger.siriPhone);
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_14_2(v6))
  {
    uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_34_8(v7);
    OUTLINED_FUNCTION_138_3(&dword_0, v5, v0, "#PhoneCallRequestSupportPolicy: Not using SlotResolvers - NOT fully resolving INIntent before starting RCHFlow. RCHFlowDelegate should run makeIntentFromParse.");
    OUTLINED_FUNCTION_6();
  }

  uint64_t v8 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return v8(v3);
}

uint64_t static PhoneCallRequestSupportPolicy.isHomePodPersonalRequest(intent:sharedGlobals:nlIntent:)(void *a1, void *a2, uint64_t a3)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  OUTLINED_FUNCTION_24_2();
  v5();
  __swift_project_boxed_opaque_existential_1(v42, v42[3]);
  if ((dispatch thunk of DeviceState.isHomePod.getter() & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    uint64_t v8 = (void *)OUTLINED_FUNCTION_25_0(v14, (uint64_t)static Logger.siriPhone);
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v15)) {
      goto LABEL_13;
    }
    uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v16);
    uint64_t v13 = "Current request is not considered as a personal request since it's not a HomePod";
    goto LABEL_12;
  }
  outlined init with copy of ResponseMode?(a3, (uint64_t)v41, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if (!v41[3])
  {
    outlined destroy of UUID?((uint64_t)v41, &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_16:
    id v18 = [a1 typeName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain();
    outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
    if (v22)
    {
      OUTLINED_FUNCTION_75_10();
      BOOL v24 = v24 && v23 == v20;
      if (v24) {
        goto LABEL_39;
      }
      char v25 = OUTLINED_FUNCTION_49_25();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_40;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent);
    uint64_t v26 = (void *)swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain();
    outlined bridged method (pb) of @objc static INIntent.typeName()(v26);
    if (v27)
    {
      OUTLINED_FUNCTION_75_10();
      if (v24 && v28 == v20) {
        goto LABEL_39;
      }
      char v30 = OUTLINED_FUNCTION_49_25();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_40;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INAnswerCallIntent);
    uint64_t v31 = (void *)swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain();
    outlined bridged method (pb) of @objc static INIntent.typeName()(v31);
    if (!v32)
    {
      swift_bridgeObjectRelease();
LABEL_43:
      type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INSearchCallHistoryIntent);
      uint64_t v37 = (void *)swift_getObjCClassFromMetadata();
      outlined bridged method (pb) of @objc static INIntent.typeName()(v37);
      if (!v38)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      OUTLINED_FUNCTION_75_10();
      if (!v24 || v39 != v20)
      {
        char v17 = OUTLINED_FUNCTION_49_25();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      char v17 = 1;
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_75_10();
    if (!v24 || v33 != v20)
    {
      char v35 = OUTLINED_FUNCTION_49_25();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35) {
        goto LABEL_40;
      }
      goto LABEL_43;
    }
LABEL_39:
    swift_bridgeObjectRelease_n();
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_1_56(v41);
  Swift::Bool v6 = PhoneCallNLIntent.isEmergencyServicesCall()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  if (!v6) {
    goto LABEL_16;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_25_0(v7, (uint64_t)static Logger.siriPhone);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (!OUTLINED_FUNCTION_8_2(v9)) {
    goto LABEL_13;
  }
  uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_32_2(v10);
  uint64_t v13 = "Current request is not considered as a personal request since it's an emergency services call";
LABEL_12:
  OUTLINED_FUNCTION_1_3(&dword_0, v11, v12, v13);
  OUTLINED_FUNCTION_6();
LABEL_13:

LABEL_14:
  char v17 = 0;
LABEL_41:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v17 & 1;
}

void static PhoneCallRequestSupportPolicy.getFlowFromParse(parse:intentTypeName:resolvedApp:phoneCallNLIntent:sharedGlobals:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v88 = v1;
  uint64_t v89 = v0;
  uint64_t v3 = v2;
  os_log_type_t v5 = v4;
  uint64_t v6 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11 - v10;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_41_30();
  type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for CATOption();
  uint64_t v19 = OUTLINED_FUNCTION_11_0(v18);
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_37();
  switch(v5)
  {
    case 1u:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v57 = OUTLINED_FUNCTION_25_0(v6, (uint64_t)static Logger.siriPhone);
      os_log_type_t v58 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v58))
      {
        uint64_t v59 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_34_8(v59);
        OUTLINED_FUNCTION_138_3(&dword_0, v57, v5, "Making HangUpCallFlow...");
        OUTLINED_FUNCTION_6();
      }

      uint64_t v60 = OUTLINED_FUNCTION_9_76();
      v61(v60);
      OUTLINED_FUNCTION_68_14();
      OUTLINED_FUNCTION_108_5();
      type metadata accessor for HangUpCallFlow();
      OUTLINED_FUNCTION_77_10();
      swift_retain();
      v91[0] = HangUpCallFlow.init(input:sharedGlobals:app:)(v17, (uint64_t)v91, v89);
      uint64_t v55 = (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallFlow and conformance PhoneFlow<A, B>;
      uint64_t v56 = (void (*)(uint64_t))type metadata accessor for HangUpCallFlow;
      goto LABEL_18;
    case 2u:
      uint64_t v43 = type metadata accessor for IdentifyIncomingCallerCATsSimple();
      swift_retain();
      static CATOption.defaultMode.getter();
      uint64_t v44 = CATWrapperSimple.__allocating_init(options:globals:)();
      uint64_t v92 = v43;
      uint64_t v93 = &protocol witness table for IdentifyIncomingCallerCATsSimple;
      OUTLINED_FUNCTION_149_5(v44);
      outlined init with copy of SignalProviding((uint64_t)v88, v45);
      outlined init with copy of IdentifyIncomingCallerOutputStrategy((uint64_t)v91, (uint64_t)v90);
      uint64_t v46 = specialized IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)(v89, (uint64_t)v90, (uint64_t)v98);
      outlined destroy of IdentifyIncomingCallerOutputStrategy((uint64_t)v91);
      uint64_t v47 = OUTLINED_FUNCTION_9_76();
      v48(v47);
      OUTLINED_FUNCTION_68_14();
      uint64_t v49 = OUTLINED_FUNCTION_141_3();
      v50(v49);
      OUTLINED_FUNCTION_11();
      v51();
      v91[0] = v46;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
      lazy protocol witness table accessor for type IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneFlow<A, B>(&lazy protocol witness table cache variable for type IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneFlow<A, B>, &demangling cache variable for type metadata for IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
      goto LABEL_11;
    case 3u:
      type metadata accessor for SearchCallHistoryFlow(0);
      OUTLINED_FUNCTION_108_5();
      type metadata accessor for SearchCallHistoryRCHFlowDelegate();
      swift_allocObject();
      SearchCallHistoryRCHFlowDelegate.init(sharedGlobals:)((uint64_t)v91);
      uint64_t v52 = OUTLINED_FUNCTION_9_76();
      v53(v52);
      OUTLINED_FUNCTION_68_14();
      swift_retain();
      SearchCallHistoryFlow.__allocating_init(delegate:input:app:)();
      v91[0] = v54;
      uint64_t v55 = &lazy protocol witness table cache variable for type SearchCallHistoryFlow and conformance SearchCallHistoryFlow;
      uint64_t v56 = (void (*)(uint64_t))type metadata accessor for SearchCallHistoryFlow;
LABEL_18:
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_14(v55, v56);
      Flow.eraseToAnyFlow()();
      break;
    case 4u:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v31 = OUTLINED_FUNCTION_25_0(v6, (uint64_t)static Logger.siriPhone);
      os_log_type_t v32 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v32))
      {
        uint64_t v33 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_34_8(v33);
        OUTLINED_FUNCTION_138_3(&dword_0, v31, v5, "Making StartCallFlow...");
        OUTLINED_FUNCTION_6();
      }

      OUTLINED_FUNCTION_108_5();
      uint64_t v34 = swift_retain();
      default argument 2 of PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)(v90, v34);
      type metadata accessor for StartCallFlow();
      OUTLINED_FUNCTION_77_10();
      uint64_t v35 = StartCallFlow.init(app:sharedGlobals:appFinder:)(v89, (uint64_t)v91, (uint64_t)v90);
      uint64_t v36 = OUTLINED_FUNCTION_9_76();
      v37(v36);
      OUTLINED_FUNCTION_68_14();
      uint64_t v38 = OUTLINED_FUNCTION_66_11();
      v39(v38);
      OUTLINED_FUNCTION_11();
      v40();
      v91[0] = v35;
      uint64_t v41 = &lazy protocol witness table cache variable for type StartCallFlow and conformance PhoneFlow<A, B>;
      uint64_t v42 = type metadata accessor for StartCallFlow;
      goto LABEL_21;
    case 5u:
      OUTLINED_FUNCTION_108_5();
      type metadata accessor for StartAudioCallFlow();
      OUTLINED_FUNCTION_77_10();
      uint64_t v62 = swift_retain();
      uint64_t v63 = StartAudioCallFlow.init(app:sharedGlobals:)(v62, (uint64_t)v91);
      uint64_t v64 = OUTLINED_FUNCTION_9_76();
      v65(v64);
      OUTLINED_FUNCTION_68_14();
      uint64_t v66 = OUTLINED_FUNCTION_66_11();
      v67(v66);
      OUTLINED_FUNCTION_11();
      v68();
      v91[0] = v63;
      uint64_t v41 = (unint64_t *)&lazy protocol witness table cache variable for type StartAudioCallFlow and conformance PhoneFlow<A, B>;
      uint64_t v42 = type metadata accessor for StartAudioCallFlow;
      goto LABEL_21;
    case 6u:
      OUTLINED_FUNCTION_108_5();
      type metadata accessor for StartVideoCallFlow();
      OUTLINED_FUNCTION_77_10();
      uint64_t v69 = swift_retain();
      uint64_t v70 = StartVideoCallFlow.init(app:sharedGlobals:)(v69, (uint64_t)v91);
      uint64_t v71 = OUTLINED_FUNCTION_9_76();
      v72(v71);
      OUTLINED_FUNCTION_68_14();
      uint64_t v73 = OUTLINED_FUNCTION_66_11();
      v74(v73);
      OUTLINED_FUNCTION_11();
      v75();
      v91[0] = v70;
      uint64_t v41 = (unint64_t *)&lazy protocol witness table cache variable for type StartVideoCallFlow and conformance PhoneFlow<A, B>;
      uint64_t v42 = type metadata accessor for StartVideoCallFlow;
LABEL_21:
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_14(v41, (void (*)(uint64_t))v42);
      Flow.eraseToAnyFlow()();
      break;
    case 7u:
      outlined init with copy of SignalProviding(v3, (uint64_t)v91);
      outlined init with copy of SignalProviding((uint64_t)v88, (uint64_t)v90);
      type metadata accessor for AddCallParticipantFlow();
      swift_allocObject();
      swift_retain();
      v91[0] = AddCallParticipantFlow.init(nlIntent:app:sharedGlobals:)((uint64_t)v91, v89, (uint64_t)v90);
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_14(&lazy protocol witness table cache variable for type AddCallParticipantFlow and conformance PhoneFlow<A, B>, (void (*)(uint64_t))type metadata accessor for AddCallParticipantFlow);
LABEL_11:
      Flow.eraseToAnyFlow()();
      break;
    case 8u:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v76 = __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v76, v6);
      v91[0] = 0;
      v91[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(60);
      v77._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v77._object = (void *)0x800000000049CDB0;
      String.append(_:)(v77);
      LOBYTE(v90[0]) = 8;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallIntentClassNames?);
      v78._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v78);
      swift_bridgeObjectRelease();
      v79._object = (void *)0x800000000049CDD0;
      v79._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
      String.append(_:)(v79);
      swift_bridgeObjectRetain_n();
      char v80 = Logger.logObject.getter();
      os_log_type_t v81 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v80, v81))
      {
        char v82 = (_DWORD *)OUTLINED_FUNCTION_47();
        v91[0] = OUTLINED_FUNCTION_14_0();
        *char v82 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v83 = OUTLINED_FUNCTION_143_3();
        v90[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v84, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_33_9(&dword_0, v86, v87, "%s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      OUTLINED_FUNCTION_143_3();
      static SiriKitLifecycle._logCrashToEventBus(_:)();
      OUTLINED_FUNCTION_77();
      _assertionFailure(_:_:file:line:flags:)();
      OUTLINED_FUNCTION_144_4();
    default:
      __swift_project_boxed_opaque_existential_1(v88, v88[3]);
      OUTLINED_FUNCTION_24_2();
      v20();
      uint64_t v21 = type metadata accessor for AnswerCallCATsSimple();
      static CATOption.defaultMode.getter();
      uint64_t v22 = CATWrapperSimple.__allocating_init(options:globals:)();
      uint64_t v94 = &type metadata for AudioSessionManager;
      uint64_t v95 = &protocol witness table for AudioSessionManager;
      char v96 = &type metadata for EntitlementChecker;
      uint64_t v97 = &protocol witness table for EntitlementChecker;
      uint64_t v92 = v21;
      uint64_t v93 = &protocol witness table for AnswerCallCATsSimple;
      OUTLINED_FUNCTION_149_5(v22);
      outlined init with copy of SignalProviding((uint64_t)v88, v23);
      outlined init with copy of AnswerCallOutputStrategy((uint64_t)v91, (uint64_t)v90);
      uint64_t v24 = swift_retain();
      uint64_t v25 = specialized IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)(v24, v90, (uint64_t)v98);
      uint64_t v26 = OUTLINED_FUNCTION_9_76();
      v27(v26);
      OUTLINED_FUNCTION_68_14();
      uint64_t v28 = OUTLINED_FUNCTION_141_3();
      v29(v28);
      OUTLINED_FUNCTION_11();
      v30();
      v90[0] = v25;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
      lazy protocol witness table accessor for type IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneFlow<A, B>(&lazy protocol witness table cache variable for type IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance PhoneFlow<A, B>, &demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
      Flow.eraseToAnyFlow()();
      outlined destroy of AnswerCallOutputStrategy((uint64_t)v91);
      break;
  }
  swift_release();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

id @nonobjc INAnswerCallIntent.init(audioRoute:callIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  id v6 = [v3 initWithAudioRoute:a1 callIdentifier:v5];

  return v6;
}

id @nonobjc INStartVideoCallIntent.init(contacts:)(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v2.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  id v3 = [v1 initWithContacts:v2.super.isa];

  return v3;
}

uint64_t outlined bridged method (pb) of @objc INPerson.sourceAppBundleIdentifier.getter(void *a1)
{
  id v1 = [a1 sourceAppBundleIdentifier];
  if (v1)
  {
    NSArray v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_7_0();
}

uint64_t specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)()
{
  OUTLINED_FUNCTION_113_3();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_65_0();
  v12[3] = &type metadata for IdentifyIncomingCallerOutputStrategy;
  v12[4] = &protocol witness table for IdentifyIncomingCallerOutputStrategy;
  uint64_t v6 = swift_allocObject();
  v12[0] = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(v2 + 32);
  *(unsigned char *)(v6 + 64) = *(unsigned char *)(v2 + 48);
  OUTLINED_FUNCTION_22();
  outlined init with copy of SignalProviding((uint64_t)v12, v0 + *(void *)(v8 + 288));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_145_4(*(void *)(v9 + 296));
  outlined init with copy of SignalProviding(v1, (uint64_t)v11);
  specialized PhoneFlow.init(state:sharedGlobals:)(v3, v11);
  OUTLINED_FUNCTION_122_4();
  return v0;
}

{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  long long v9[2];
  void v10[5];

  OUTLINED_FUNCTION_113_3();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INAnswerCallIntent, INAnswerCallIntentResponse>);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_65_0();
  void v10[3] = &type metadata for AnswerCallOutputStrategy;
  v10[4] = &protocol witness table for AnswerCallOutputStrategy;
  v10[0] = swift_allocObject();
  memcpy((void *)(v10[0] + 16), v2, 0xB0uLL);
  OUTLINED_FUNCTION_22();
  outlined init with copy of SignalProviding((uint64_t)v10, v0 + *(void *)(v6 + 288));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_145_4(*(void *)(v7 + 296));
  outlined init with copy of SignalProviding(v1, (uint64_t)v9);
  specialized PhoneFlow.init(state:sharedGlobals:)(v3, v9);
  OUTLINED_FUNCTION_122_4();
  return v0;
}

void specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)()
{
  void (*v84)(void *__return_ptr, void *);
  void (*v85)(void);
  void *v86;
  int v87;
  Swift::Bool v88;
  int v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  os_log_t v109;
  int v110;
  char v111;
  id v112;
  int v113;
  int v114;
  int v115;
  int v116;
  id v117;
  id v118;
  id v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  id v123;
  void *v124;
  uint64_t v125;
  void *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  unint64_t v131;
  unint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  id v146;
  void *v147;
  unint64_t v148;
  unint64_t v149;
  id v150;
  id v151;
  Swift::Bool v152;
  NSObject *v153;
  os_log_type_t v154;
  uint8_t *v155;
  void *v156;
  id v157;
  id v158;
  void (*v159)(void);
  void (*v160)(void);
  void (*v161)(void);
  void (*v162)(void);
  void (*v163)(void);
  uint64_t v164;
  id v165;
  void (*v166)(long long *__return_ptr, void *);
  void *v167;
  os_log_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t, void, uint64_t, uint64_t, void *, void *, void, char, unsigned char *, uint64_t, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192[2];
  id v193;
  long long v194[2];
  void v195[3];
  uint64_t v196;
  uint64_t v197;
  uint64_t v198[5];
  uint64_t v199[6];

  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v186 = v3;
  uint64_t v5 = v4;
  uint64_t v183 = v6;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordFilter?>);
  OUTLINED_FUNCTION_0_0();
  long long v176 = v10;
  __chkstk_darwin(v11);
  os_log_type_t v184 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_89_9(v15, (uint64_t)v165);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_0_0();
  int v182 = v17;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v19);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v181 = v20;
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_13_29((uint64_t)&v165 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallCapability>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v180 = v23;
  __chkstk_darwin(v24);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v25);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_0_0();
  os_log_type_t v179 = v27;
  __chkstk_darwin(v28);
  OUTLINED_FUNCTION_48_0();
  uint64_t v29 = type metadata accessor for ContactGroupResolver();
  v199[3] = v29;
  v199[4] = (uint64_t)&protocol witness table for ContactGroupResolver;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v199);
  uint64_t v31 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  unint64_t v173 = boxed_opaque_existential_1;
  v31(boxed_opaque_existential_1, v2, v29);
  if (OUTLINED_FUNCTION_91_11())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    id v33 = v186;
    id v34 = v186;
    uint64_t v35 = (void *)Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_21_19(v36))
    {
      uint64_t v37 = (_DWORD *)OUTLINED_FUNCTION_47();
      v198[0] = OUTLINED_FUNCTION_14_0();
      *uint64_t v37 = 136315138;
      v195[0] = v33;
      id v38 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent?);
      uint64_t v39 = String.init<A>(describing:)();
      v195[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_6(&dword_0, v41, v42, "#INStartCallIntentConversion is confirmation, returning previousIntent: %s.");
      OUTLINED_FUNCTION_6_71();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    id v70 = v34;
    goto LABEL_17;
  }
  int v178 = v16;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v174 = v26;
  uint64_t v43 = type metadata accessor for Logger();
  uint64_t v175 = (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, void *, void *, void, char, unsigned char *, uint64_t, uint64_t, uint64_t))__swift_project_value_buffer(v43, (uint64_t)static Logger.siriPhone);
  uint64_t v44 = (void *)Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v45))
  {
    uint64_t v46 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v46);
    OUTLINED_FUNCTION_1_3(&dword_0, v47, v48, "#INStartCallIntentConversion makeIntentFromParse called with NLv4IntentOnly");
    OUTLINED_FUNCTION_6();
  }

  uint64_t v49 = __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  OUTLINED_FUNCTION_24_2();
  v50();
  outlined init with copy of SignalProviding((uint64_t)v5, (uint64_t)v195);
  uint64_t v51 = OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_6_47(v51);
  v49[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0);
  uint64_t v177 = v0;
  Transformer.init(transform:)();
  outlined init with copy of SignalProviding((uint64_t)v5, (uint64_t)v195);
  uint64_t v52 = OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_6_47(v52);
  uint64_t v53 = v183;
  v49[7] = v183;
  type metadata accessor for INCallCapability(0);
  swift_retain();
  uint64_t v54 = v187;
  Transformer.init(transform:)();
  outlined init with copy of SignalProviding((uint64_t)v5, (uint64_t)v195);
  uint64_t v55 = OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_6_47(v55);
  v49[7] = v53;
  type metadata accessor for INPreferredCallProvider(0);
  swift_retain();
  Transformer.init(transform:)();
  type metadata accessor for INCallDestinationType(0);
  Transformer.init(transform:)();
  outlined init with copy of SignalProviding((uint64_t)v198, (uint64_t)v195);
  outlined init with copy of SignalProviding((uint64_t)v199, (uint64_t)v194);
  uint64_t v56 = swift_allocObject();
  OUTLINED_FUNCTION_6_47(v56);
  outlined init with take of AppSelectionSignalComponent(v194, (uint64_t)(v49 + 7));
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)();
  Transformer.transform.getter();
  OUTLINED_FUNCTION_109_2();
  v58();
  if (!v57)
  {
    swift_release();
    uint64_t v59 = v195[0];
    Transformer.transform.getter();
    uint64_t v60 = OUTLINED_FUNCTION_5_47();
    v61(v60);
    swift_release();
    uint64_t v171 = v195[0];
    Transformer.transform.getter();
    uint64_t v71 = OUTLINED_FUNCTION_5_47();
    v72(v71);
    uint64_t v168 = v59;
    os_log_type_t v170 = v13;
    swift_release();
    uint64_t v167 = (void *)v195[0];
    uint64_t v74 = v8[3];
    uint64_t v73 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v74);
    uint64_t v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 128))(v74, v73);
    uint64_t v76 = v8[3];
    int v169 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v76);
    swift_bridgeObjectRetain();
    LODWORD(v169) = PhoneCallNLIntent.isEmergencyContactCall()();
    Transformer.transform.getter();
    uint64_t v77 = OUTLINED_FUNCTION_5_47();
    v78(v77);
    uint64_t v172 = v75;
    swift_release();
    uint64_t v165 = (id)v195[0];
    uint64_t v166 = (void (*)(long long *__return_ptr, void *))Transformer.transform.getter();
    uint64_t v80 = v8[3];
    uint64_t v79 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v80);
    v195[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 136))(v80, v79);
    v166(v194, v195);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v166 = *(void (**)(long long *__return_ptr, void *))&v194[0];
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    os_log_type_t v81 = PhoneCallNLIntent.getPersons()();
    uint64_t v82 = swift_allocObject();
    os_log_t v83 = v168;
    *(void *)(v82 + 16) = v168;
    *(void *)(v82 + 24) = v81;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
    Transformer.init(transform:)();
    unint64_t v84 = (void (*)(void *__return_ptr, void *))Transformer.transform.getter();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11();
    v85();
    v84(v195, v8);
    swift_release();
    uint64_t v86 = (void *)v195[0];
    uint64_t v87 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    uint64_t v88 = PhoneCallNLIntent.isGroupFaceTimeCall()();
    uint64_t v193 = INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:isGroupCall:callGroups:)(v86, 0, (uint64_t)v165, (uint64_t)v167, v171, (uint64_t)v81, 0, (uint64_t)v83, v88, (uint64_t)v166);
    outlined init with copy of SignalProviding((uint64_t)v8, (uint64_t)v195);
    uint64_t v89 = v183;
    swift_retain_n();
    uint64_t v90 = v172;
    swift_bridgeObjectRetain_n();
    uint64_t v91 = OUTLINED_FUNCTION_165_2();
    uint64_t v92 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v92))
    {
      uint64_t v93 = swift_slowAlloc();
      LODWORD(v171) = v87;
      uint64_t v94 = v93;
      uint64_t v95 = (void *)OUTLINED_FUNCTION_99_8();
      uint64_t v167 = v95;
      long long v176 = swift_slowAlloc();
      v192[0] = v176;
      *(_DWORD *)uint64_t v94 = 138413058;
      uint64_t v168 = v91;
      OUTLINED_FUNCTION_37_4();
      char v96 = v193;
      Swift::Bool v191 = (uint64_t)v193;
      uint64_t v97 = v193;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v95 = v96;
      *(_WORD *)(v94 + 12) = 2080;
      uint64_t v98 = dispatch thunk of App.debugDescription.getter();
      uint64_t v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, v192);
      OUTLINED_FUNCTION_126_2(v100);
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 22) = 2080;
      uint64_t v102 = v196;
      uint64_t v101 = v197;
      __swift_project_boxed_opaque_existential_1(v195, v196);
      (*(void (**)(uint64_t, uint64_t))(v101 + 24))(v102, v101);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
      uint64_t v103 = Array.description.getter();
      uint64_t v105 = v104;
      swift_bridgeObjectRelease();
      id v106 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v103, v105, v192);
      OUTLINED_FUNCTION_126_2(v106);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v195);
      *(_WORD *)(v94 + 32) = 2080;
      type metadata accessor for ContactQuery();
      uint64_t v107 = Array.debugDescription.getter();
      Swift::Bool v191 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, v192);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v109 = v168;
      _os_log_impl(&dword_0, v168, (os_log_type_t)v171, "#INStartCallIntentConversion Starts with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s", (uint8_t *)v94, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v195);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    OUTLINED_FUNCTION_52_21();
    uint64_t v110 = (int)v186;
    long long v111 = v169;
    swift_beginAccess();
    uint64_t v112 = v193;
    uint64_t v117 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)((int)v112, (int)v5, v89, v110, v113, v114, v115, v116, v165, (uint64_t)v166, (uint64_t)v167, (uint64_t)v168, v169, v170, v171, v172, (uint64_t)v173, v174, (uint64_t)v175,
             v176,
             v177,
             v178,
             v179,
             v180);

    uint64_t v118 = v193;
    uint64_t v193 = v117;

    type metadata accessor for App();
    uint64_t v119 = v117;
    App.appIdentifier.getter();
    int v120 = App.__allocating_init(appIdentifier:)();
    specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v119, v90, v111 & 1, v120, (uint64_t)v8, (uint64_t)v5, (uint64_t)v173, (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:), (uint64_t)specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:), v164, (uint64_t)v165, (uint64_t)v166, (uint64_t)v167, (uint64_t)v168, v169, v170, v171, v172, (uint64_t)v173,
      v174,
      v175);

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v121 = v119;
    outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v121);
    uint64_t v122 = one-time initialization token for instance;
    uint64_t v123 = v121;
    if (v122 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v124 = (void *)OUTLINED_FUNCTION_120_4();
    specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)(v124, v125, v126, v127, v128);
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v129 = v198[4];
    __swift_project_boxed_opaque_existential_1(v198, v198[3]);
    if ((dispatch thunk of DeviceState.isXRDevice.getter() & 1) == 0) {
      goto LABEL_63;
    }
    int64_t v130 = v123;
    uint64_t v131 = outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v130);
    if (v131)
    {
      uint64_t v132 = v131;
      if (v131 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_27;
        }
      }
      else if (*(void *)((char *)&dword_10 + (v131 & 0xFFFFFFFFFFFFFF8)))
      {
LABEL_27:
        OUTLINED_FUNCTION_7_49();
        if (v129) {
          uint64_t v133 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v133 = *(id *)(v132 + 32);
        }
        uint64_t v134 = v133;
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v123 = v130;
    unint64_t v144 = outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v123);
    if (!v144) {
      goto LABEL_63;
    }
    uint64_t v145 = v144;
    if (v144 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_49:
        OUTLINED_FUNCTION_7_49();
        if (v129) {
          uint64_t v146 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v146 = *(id *)(v145 + 32);
        }
        char v147 = v146;
        swift_bridgeObjectRelease();
        char v148 = outlined bridged method (ob) of @objc INPerson.siriMatches.getter(v147);
        if (v148)
        {
          int v149 = v148;
          if (v148 >> 62)
          {
            if (_CocoaArrayWrapper.endIndex.getter()) {
              goto LABEL_54;
            }
          }
          else if (*(void *)((char *)&dword_10 + (v148 & 0xFFFFFFFFFFFFFF8)))
          {
LABEL_54:
            OUTLINED_FUNCTION_7_49();
            if (v147) {
              uint64_t v150 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v150 = *(id *)(v149 + 32);
            }
            uint64_t v134 = v150;
            OUTLINED_FUNCTION_52_21();
LABEL_30:
            swift_bridgeObjectRelease();
            uint64_t v135 = outlined bridged method (pb) of @objc INPerson.sourceAppBundleIdentifier.getter(v134);
            if (v136)
            {
              uint64_t v137 = v136;
            }
            else
            {
              uint64_t v135 = 0;
              uint64_t v137 = 0xE000000000000000;
            }
            unint64_t v138 = static PhoneReferenceResolution.getContactSourceType(contactSource:)(v135, v137);
            swift_bridgeObjectRelease();
            if (static PhoneReferenceResolution.isTelephonyTargetFromSrr(contactSourceType:)(v138))
            {
              uint64_t v139 = OUTLINED_FUNCTION_165_2();
              id v140 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v139, v140))
              {
                unint64_t v141 = (uint8_t *)OUTLINED_FUNCTION_47();
                v192[0] = OUTLINED_FUNCTION_14_0();
                *(_DWORD *)unint64_t v141 = 136315138;
                if (v138)
                {
                  if (v138 == 1)
                  {
                    unint64_t v142 = 0x800000000048E760;
                    unint64_t v143 = 0xD000000000000012;
                  }
                  else
                  {
                    unint64_t v142 = 0xED00007465677261;
                    unint64_t v143 = 0x54746C7561666564;
                  }
                }
                else
                {
                  unint64_t v142 = 0xEB00000000737365;
                  unint64_t v143 = 0x6E69737542727273;
                }
                Swift::Bool v191 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v143, v142, v192);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v139, v140, "#INStartCallIntentConversion detected Telephony target(%s from srr, update PreferredCallProvider to telephonyProvider", v141, 0xCu);
                OUTLINED_FUNCTION_20_1();
                OUTLINED_FUNCTION_6();
                OUTLINED_FUNCTION_6();

                OUTLINED_FUNCTION_52_21();
              }
              else
              {
              }
              uint64_t v123 = v193;
              INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(1);
            }
            else
            {

              uint64_t v123 = v130;
            }
            goto LABEL_63;
          }
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_52_21();
        }
LABEL_63:
        __swift_project_boxed_opaque_existential_1(v8, v8[3]);
        unint64_t v151 = v123;
        OUTLINED_FUNCTION_7_0();
        uint64_t v152 = PhoneCallNLIntent.isGroupFaceTimeCall()();
        INStartCallIntent.updateIsGroupCall(isGroupCall:)(v152);

        unint64_t v153 = OUTLINED_FUNCTION_165_2();
        unint64_t v154 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v153, v154))
        {
          uint64_t v155 = (uint8_t *)OUTLINED_FUNCTION_47();
          uint64_t v156 = (void *)OUTLINED_FUNCTION_99_8();
          *(_DWORD *)uint64_t v155 = 138412290;
          uint64_t v157 = v193;
          v192[0] = (uint64_t)v193;
          uint64_t v158 = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v156 = v157;
          _os_log_impl(&dword_0, v153, v154, "#INStartCallIntentConversion ends with %@", v155, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }

        OUTLINED_FUNCTION_159_3();
        OUTLINED_FUNCTION_26_0();
        v159();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11();
        v160();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11();
        v161();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11();
        v162();
        OUTLINED_FUNCTION_118_5();
        OUTLINED_FUNCTION_11();
        v163();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v198);
        goto LABEL_17;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v144 & 0xFFFFFFFFFFFFFF8)))
    {
      goto LABEL_49;
    }
    swift_bridgeObjectRelease();
    goto LABEL_63;
  }
  swift_release();
  OUTLINED_FUNCTION_101_6();
  uint64_t v62 = (void *)OUTLINED_FUNCTION_165_2();
  os_log_type_t v63 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v63))
  {
    uint64_t v64 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v64);
    OUTLINED_FUNCTION_26_30(&dword_0, v65, v66, "#INStartCallIntentConversion makeIntentFromParse cannot transform to startCallIntent");
    OUTLINED_FUNCTION_6();
  }
  swift_errorRelease();

  OUTLINED_FUNCTION_159_3();
  OUTLINED_FUNCTION_26();
  v67();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v190, v178);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v189, v185);
  OUTLINED_FUNCTION_26_0();
  v68();
  OUTLINED_FUNCTION_118_5();
  OUTLINED_FUNCTION_11();
  v69();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v198);
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v199);
  OUTLINED_FUNCTION_26_1();
}

void specialized static StartAudioCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v107 = v2;
  uint64_t v109 = v3;
  uint64_t v5 = v4;
  long long v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_41_30();
  unint64_t v12 = type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_12();
  v16();
  uint64_t v17 = v7[4];
  OUTLINED_FUNCTION_1_56(v7);
  if (PhoneCallNLIntent.hasAnyConfirmation()())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    id v19 = v109;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (_DWORD *)OUTLINED_FUNCTION_47();
      v117[0] = OUTLINED_FUNCTION_14_0();
      *uint64_t v22 = 136315138;
      id v23 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntent?);
      uint64_t v24 = String.init<A>(describing:)();
      v112[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33_9(&dword_0, v26, v27, "#StartAudioCallIntentConversion is confirmation, returning previousIntent: %s.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    id v40 = v19;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v104 = v10;
    uint64_t v28 = type metadata accessor for Logger();
    uint64_t v106 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v30))
    {
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v29, (os_log_type_t)v17, "#StartAudioCallIntentConversion called with NLv4IntentOnly", v31, 2u);
      OUTLINED_FUNCTION_6();
    }

    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    OUTLINED_FUNCTION_24_2();
    v32();
    uint64_t v33 = v5[3];
    uint64_t v34 = v5[4];
    __swift_project_boxed_opaque_existential_1(v5, v33);
    uint64_t v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 72))(v33, v34);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    type metadata accessor for INCallDestinationType(0);
    Transformer.init(transform:)();
    uint64_t v115 = _swiftEmptyArrayStorage;
    Transformer.transform.getter();
    OUTLINED_FUNCTION_109_2();
    v35();
    if (v34)
    {
      swift_release();
      os_log_type_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        id v38 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)id v38 = 0;
        _os_log_impl(&dword_0, v36, v37, "#StartAudioCallIntentConversion makeIntentFromParse cannot transform to startAudioCallIntent", v38, 2u);
        OUTLINED_FUNCTION_6();
      }
      swift_release();
      swift_errorRelease();

      OUTLINED_FUNCTION_11();
      v39();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
    }
    else
    {
      uint64_t v99 = v14;
      uint64_t v97 = v12;
      swift_release();
      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      uint64_t v41 = OUTLINED_FUNCTION_69_14();
      uint64_t v43 = v42(v41);
      uint64_t v115 = (void *)v43;
      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_7_0();
      LODWORD(v12) = PhoneCallNLIntent.isEmergencyContactCall()();
      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      uint64_t v44 = PhoneCallNLIntent.getPersons()();
      id v45 = objc_allocWithZone((Class)INStartAudioCallIntent);
      id v46 = @nonobjc INStartAudioCallIntent.init(destinationType:contacts:)(v112[0], (uint64_t)v44);
      uint64_t v47 = v107;
      id v52 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)((int)v46, (int)v5, v107, (int)v109, v48, v49, v50, v51, v81, v83, v85, v87, v89, v91, v93, v95, v97, v99, v101,
              v103,
              v104,
              v106,
              v107,
              (uint64_t)v109);

      id v116 = v52;
      outlined init with copy of SignalProviding((uint64_t)v7, (uint64_t)v112);
      id v53 = v52;
      swift_retain_n();
      swift_bridgeObjectRetain();
      id v110 = v53;
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.debug.getter();
      int v56 = v55;
      uint64_t v102 = (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, void *, void *, void, char, unsigned char *, uint64_t, uint64_t, uint64_t))v1;
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v57 = swift_slowAlloc();
        uint64_t v84 = v43;
        char v96 = (void *)OUTLINED_FUNCTION_99_8();
        uint64_t v90 = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 138413058;
        HIDWORD(v88) = v56;
        uint64_t v86 = v54;
        v111[0] = v90;
        uint64_t v94 = v111;
        HIDWORD(v92) = v12;
        id v58 = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v96 = v110;
        uint64_t v47 = v108;

        *(_WORD *)(v57 + 12) = 2080;
        uint64_t v59 = dispatch thunk of App.debugDescription.getter();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 22) = 2080;
        uint64_t v82 = v57 + 24;
        uint64_t v62 = v113;
        uint64_t v61 = v114;
        __swift_project_boxed_opaque_existential_1(v112, v113);
        (*(void (**)(uint64_t, uint64_t))(v61 + 24))(v62, v61);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
        uint64_t v63 = Array.description.getter();
        unint64_t v12 = v64;
        swift_bridgeObjectRelease();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v12, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        LOBYTE(v12) = BYTE4(v92);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
        OUTLINED_FUNCTION_151_2();
        uint64_t v65 = Array.debugDescription.getter();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v86, BYTE4(v88), "#StartAudioCallIntentConversion starts with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s", (uint8_t *)v57, 0x2Au);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        uint64_t v1 = (uint64_t)v102;
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_release_n();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
        swift_bridgeObjectRelease_n();
      }
      OUTLINED_FUNCTION_37_4();
      uint64_t v67 = (uint64_t)v115;
      id v68 = v110;
      specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v68, v67, v12 & 1, v47, (uint64_t)v7, (uint64_t)v5, v1, (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:), (uint64_t)specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:), v80, v82, v84, (uint64_t)v86, v88, v90, v92, (uint64_t)v94, (uint64_t)v96, v98,
        v100,
        v102);

      swift_bridgeObjectRelease();
      uint64_t v69 = outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v68);
      uint64_t v70 = one-time initialization token for instance;
      id v71 = v68;
      if (v70 != -1) {
        swift_once();
      }
      uint64_t v72 = static EligibleAppFinder.instance;
      swift_retain();
      specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)(v5, v69, v7, 0, v72);
      swift_release();

      swift_bridgeObjectRelease();
      id v73 = v71;
      uint64_t v74 = Logger.logObject.getter();
      os_log_type_t v75 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = (uint8_t *)OUTLINED_FUNCTION_47();
        uint64_t v77 = (void *)OUTLINED_FUNCTION_99_8();
        *(_DWORD *)uint64_t v76 = 138412290;
        v111[0] = (uint64_t)v73;
        id v78 = v73;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v77 = v110;

        _os_log_impl(&dword_0, v74, v75, "#StartAudioCallIntentConversion ends with %@", v76, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
      }
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v0, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
      OUTLINED_FUNCTION_37_4();
    }
  }
  OUTLINED_FUNCTION_26();
  v79();
  OUTLINED_FUNCTION_26_1();
}

void specialized static StartVideoCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_12();
  v13();
  if (OUTLINED_FUNCTION_91_11())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    id v15 = v2;
    uint64_t v16 = (void *)Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_63_0(v17))
    {
      uint64_t v18 = (_DWORD *)OUTLINED_FUNCTION_47();
      v104[0] = OUTLINED_FUNCTION_14_0();
      *uint64_t v18 = 136315138;
      id v107 = v2;
      id v19 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent?);
      uint64_t v20 = String.init<A>(describing:)();
      uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v104);
      OUTLINED_FUNCTION_106_4(v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_82(&dword_0, v23, v24, "#StartVideoCallIntentConversion is confirmation, returning previousIntent: %s.");
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    id v63 = v15;
  }
  else
  {
    uint64_t v98 = v9;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    uint64_t v93 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = (void *)Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_2(v27))
    {
      uint64_t v28 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v28);
      OUTLINED_FUNCTION_1_3(&dword_0, v29, v30, "#StartVideoCallIntentConversion called with NLv4IntentOnly");
      OUTLINED_FUNCTION_6();
    }

    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    uint64_t v31 = OUTLINED_FUNCTION_69_14();
    uint64_t v33 = v32(v31);
    OUTLINED_FUNCTION_1_5();
    LODWORD(v34) = PhoneCallNLIntent.isEmergencyContactCall()();
    OUTLINED_FUNCTION_1_5();
    uint64_t v35 = PhoneCallNLIntent.getPersons()();
    id v36 = objc_allocWithZone((Class)INStartVideoCallIntent);
    id v37 = @nonobjc INStartVideoCallIntent.init(contacts:)((uint64_t)v35);
    id v42 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)((int)v37, v4, v6, (int)v2, v38, v39, v40, v41, v79, v81, v83, v85, v87, v89, v91, v93, v95, v98, v101,
            v103,
            v104[0],
            v104[1],
            v104[2],
            v105);

    id v107 = v42;
    outlined init with copy of SignalProviding((uint64_t)v8, (uint64_t)v104);
    id v43 = v42;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v44 = v43;
    uint64_t v45 = v6;
    id v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.debug.getter();
    int v48 = v47;
    uint64_t v96 = v11;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v92 = v0;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v82 = (void *)OUTLINED_FUNCTION_99_8();
      uint64_t v86 = swift_slowAlloc();
      uint64_t v103 = v86;
      *(_DWORD *)uint64_t v49 = 138413058;
      uint64_t v84 = (uint64_t)v46;
      HIDWORD(v88) = v34;
      uint64_t v90 = v4;
      HIDWORD(v80) = v48;
      uint64_t v50 = v45;
      id v51 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v82 = v44;

      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v52 = dispatch thunk of App.debugDescription.getter();
      uint64_t v54 = OUTLINED_FUNCTION_135_2(v52, v53);
      OUTLINED_FUNCTION_143_4(v54);
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2080;
      uint64_t v55 = v105;
      uint64_t v56 = v106;
      __swift_project_boxed_opaque_existential_1(v104, v105);
      (*(void (**)(uint64_t, uint64_t))(v56 + 24))(v55, v56);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
      uint64_t v34 = Array.description.getter();
      unint64_t v58 = v57;
      swift_bridgeObjectRelease();
      uint64_t v59 = v34;
      LOBYTE(v34) = BYTE4(v88);
      uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v58, &v103);
      OUTLINED_FUNCTION_143_4(v60);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
      OUTLINED_FUNCTION_151_2();
      uint64_t v61 = Array.debugDescription.getter();
      uint64_t v102 = (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, void *, void *, void, char, unsigned char *, uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_135_2(v61, v62);
      uint64_t v45 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v46, BYTE4(v80), "#StartVideoCallIntentConversion with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s", (uint8_t *)v49, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      uint64_t v0 = v92;
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
      swift_bridgeObjectRelease_n();
    }
    id v64 = v44;
    specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v64, v33, v34 & 1, v45, (uint64_t)v8, v4, v0, (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:), (uint64_t)specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:), v78, v80, (uint64_t)v82, v84, v86, v88, v90, v92, v94, v96,
      v99,
      v102);

    swift_bridgeObjectRelease();
    outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v64);
    uint64_t v65 = one-time initialization token for instance;
    id v66 = v64;
    if (v65 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v67 = (void *)OUTLINED_FUNCTION_120_4();
    specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)(v67, v68, v69, v70, v71);
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v72 = v66;
    id v73 = Logger.logObject.getter();
    os_log_type_t v74 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v73, v74))
    {
      os_log_type_t v75 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v76 = (void *)OUTLINED_FUNCTION_99_8();
      *(_DWORD *)os_log_type_t v75 = 138412290;
      v104[0] = (uint64_t)v72;
      uint64_t v77 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v76 = v44;

      _os_log_impl(&dword_0, v73, v74, "#StartVideoCallIntentConversion ends with %@", v75, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
      uint64_t v72 = v73;
    }
    else
    {
    }
    uint64_t v11 = v97;
    uint64_t v9 = v100;

    OUTLINED_FUNCTION_37_4();
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v9);
  OUTLINED_FUNCTION_26_1();
}

#error "3ED2A4: call analysis failed (funcsize=384)"

#error "3ED4C8: call analysis failed (funcsize=109)"

void specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void *a6, uint64_t *a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  HIDWORD(v50) = a8;
  HIDWORD(v55) = a3;
  uint64_t v53 = a9;
  uint64_t v54 = a10;
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v56 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)a1, a4, a5, (uint64_t)a6, a11, (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply, (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply, (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)&unk_56C050, (uint64_t)closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply, v49, v50, (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a5, a9, a10, v55,
    v56,
    v57,
    v58[0],
    v58[1],
    v58[2]);
  v20._rawValue = (void *)v19;
  unint64_t v22 = v21;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(uint64_t **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
  }
  unint64_t v57 = v23;
  if (v23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = a2;
      *(_WORD *)os_log_type_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "#ReferenceContactResolutionWrapper updated SKIntent with contacts", v27, 2u);
      a2 = v49;
      swift_slowDealloc();
    }

    INStartVideoCallIntent.overwriteContacts(newContacts:)(v20);
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_11;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_11:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v29, v30, "#ReferenceContactResolutionWrapper updated SKIntent with groups", v31, 2u);
      swift_slowDealloc();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v57)
  {
    unint64_t v57 = a7;
    char v40 = BYTE4(v50) & 1;
    uint64_t v41 = a6[3];
    uint64_t v42 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v41);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v58, v41, v42);
    __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    uint64_t v43 = v51;
    dispatch thunk of DeviceState.siriLocale.getter();
    uint64_t v44 = v52[3];
    uint64_t v45 = v52[4];
    id v46 = __swift_project_boxed_opaque_existential_1(v52, v44);
    LOBYTE(v47) = v40;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)((uint64_t)a1, a2, BYTE4(v55) & 1, a4, v43, (uint64_t)v46, (uint64_t)a6, (uint64_t)v57, v47, v53, v54, v44, v45, v48, v49, v50, v51, (uint64_t)v52, v53,
      v54,
      v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v43, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    return;
  }
LABEL_19:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
  unint64_t v57 = a1;
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    *(_DWORD *)id v36 = 138412290;
    v58[0] = (uint64_t)v57;
    int v38 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v37 = v57;

    _os_log_impl(&dword_0, v34, v35, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@", v36, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    int v39 = v57;
  }
}

{
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  Swift::OpaquePointer v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t *v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58[4];
  uint64_t vars8;

  HIDWORD(v50) = a8;
  HIDWORD(v55) = a3;
  uint64_t v53 = a9;
  uint64_t v54 = a10;
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v56 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)a1, a4, a5, (uint64_t)a6, a11, (uint64_t)partial apply for closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)partial apply for closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)&unk_56C000, (uint64_t)partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:), v49, v50, (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a5, a9, a10, v55,
    v56,
    v57,
    v58[0],
    v58[1],
    v58[2]);
  v20._rawValue = (void *)v19;
  unint64_t v22 = v21;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(uint64_t **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
  }
  unint64_t v57 = v23;
  if (v23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = a2;
      *(_WORD *)os_log_type_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "#ReferenceContactResolutionWrapper updated SKIntent with contacts", v27, 2u);
      a2 = v49;
      swift_slowDealloc();
    }

    INStartVideoCallIntent.overwriteContacts(newContacts:)(v20);
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_11;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_11:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v29, v30, "#ReferenceContactResolutionWrapper updated SKIntent with groups", v31, 2u);
      swift_slowDealloc();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v57)
  {
    unint64_t v57 = a7;
    char v40 = BYTE4(v50) & 1;
    uint64_t v41 = a6[3];
    uint64_t v42 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v41);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v58, v41, v42);
    __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    uint64_t v43 = v51;
    dispatch thunk of DeviceState.siriLocale.getter();
    uint64_t v44 = v52[3];
    uint64_t v45 = v52[4];
    id v46 = __swift_project_boxed_opaque_existential_1(v52, v44);
    LOBYTE(v47) = v40;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)((uint64_t)a1, a2, BYTE4(v55) & 1, a4, v43, (uint64_t)v46, (uint64_t)a6, (uint64_t)v57, v47, v53, v54, v44, v45, v48, v49, v50, v51, (uint64_t)v52, v53,
      v54,
      v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v43, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    return;
  }
LABEL_19:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
  unint64_t v57 = a1;
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    *(_DWORD *)id v36 = 138412290;
    v58[0] = (uint64_t)v57;
    int v38 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v37 = v57;

    _os_log_impl(&dword_0, v34, v35, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@", v36, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    int v39 = v57;
  }
}

{
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  Swift::OpaquePointer v20;
  void *v21;
  Swift::OpaquePointer v22;
  uint64_t *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t *v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58[4];
  uint64_t vars8;

  HIDWORD(v50) = a8;
  HIDWORD(v55) = a3;
  uint64_t v53 = a9;
  uint64_t v54 = a10;
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v56 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)a1, a4, a5, (uint64_t)a6, a11, (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply, (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply, (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)&unk_56C168, (uint64_t)closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply, v49, v50, (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a5, a9, a10, v55,
    v56,
    v57,
    v58[0],
    v58[1],
    v58[2]);
  v20._rawValue = (void *)v19;
  v22._rawValue = v21;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(uint64_t **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
  }
  unint64_t v57 = v23;
  if (v23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = a2;
      *(_WORD *)os_log_type_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "#ReferenceContactResolutionWrapper updated SKIntent with contacts", v27, 2u);
      a2 = v49;
      swift_slowDealloc();
    }

    INStartCallIntent.overwriteContacts(newContacts:)(v20);
  }
  if ((unint64_t)v22._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_11;
    }
  }
  else if (*(void *)((char *)&dword_10 + ((unint64_t)v22._rawValue & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_11:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v29, v30, "#ReferenceContactResolutionWrapper updated SKIntent with groups", v31, 2u);
      swift_slowDealloc();
    }

    INStartCallIntent.overwriteCallGroups(newCallGroups:)(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v57)
  {
    unint64_t v57 = a7;
    char v40 = BYTE4(v50) & 1;
    uint64_t v41 = a6[3];
    uint64_t v42 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v41);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v58, v41, v42);
    __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    uint64_t v43 = v51;
    dispatch thunk of DeviceState.siriLocale.getter();
    uint64_t v44 = v52[3];
    uint64_t v45 = v52[4];
    id v46 = __swift_project_boxed_opaque_existential_1(v52, v44);
    LOBYTE(v47) = v40;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)((uint64_t)a1, a2, BYTE4(v55) & 1, a4, v43, (uint64_t)v46, (uint64_t)a6, (uint64_t)v57, v47, v53, v54, v44, v45, v48, v49, v50, v51, (uint64_t)v52, v53,
      v54,
      v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v43, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    return;
  }
LABEL_19:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
  unint64_t v57 = a1;
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    *(_DWORD *)id v36 = 138412290;
    v58[0] = (uint64_t)v57;
    int v38 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v37 = v57;

    _os_log_impl(&dword_0, v34, v35, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@", v36, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    int v39 = v57;
  }
}

void *specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v29[2] = a4;
  v29[3] = a5;
  v29[0] = a2;
  v29[1] = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RREntity();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t v17 = type metadata accessor for ContactGroupResolver();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  Swift::OpaquePointer v20 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a6, v17);
  specialized Collection.first.getter();
  uint64_t v21 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v21) == 1)
  {
    outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v25, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v26 = _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v9, v21);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
    os_log_type_t v26 = v27;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v26;
}

{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  void *v27;
  void v29[4];

  long long v29[2] = a4;
  v29[3] = a5;
  v29[0] = a2;
  v29[1] = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RREntity();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t v17 = type metadata accessor for ContactGroupResolver();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  Swift::OpaquePointer v20 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a6, v17);
  specialized Collection.first.getter();
  uint64_t v21 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v21) == 1)
  {
    outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v25, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v26 = _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v9, v21);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
    os_log_type_t v26 = v27;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v26;
}

{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  void *v27;
  void v29[4];

  long long v29[2] = a4;
  v29[3] = a5;
  v29[0] = a2;
  v29[1] = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RREntity();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t v17 = type metadata accessor for ContactGroupResolver();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  Swift::OpaquePointer v20 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a6, v17);
  specialized Collection.first.getter();
  uint64_t v21 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v21) == 1)
  {
    outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v25, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v26 = _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v9, v21);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
    os_log_type_t v26 = v27;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v26;
}

void specialized static ReferenceContactResolutionWrapper.resolveCommonGroup(group:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  os_log_type_t v26 = v25;
  uint64_t v77 = v27;
  uint64_t v76 = v28;
  uint64_t v75 = v29;
  uint64_t v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v78 = v32;
  __chkstk_darwin(v33);
  OUTLINED_FUNCTION_48_0();
  uint64_t v79 = type metadata accessor for ContactQuery();
  OUTLINED_FUNCTION_0_0();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  OUTLINED_FUNCTION_20_15((uint64_t)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = type metadata accessor for ContactGroupResolver();
  v83[3] = v38;
  v83[4] = (uint64_t)&protocol witness table for ContactGroupResolver;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v83);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(boxed_opaque_existential_1, v24, v38);
  uint64_t v40 = dispatch thunk of UsoEntity_common_Group.name.getter();
  LOBYTE(v38) = specialized Optional<A>.isNilOrEmpty.getter(v40, v41);
  swift_bridgeObjectRelease();
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  if ((v38 & 1) == 0 || (unint64_t v43 = dispatch thunk of UsoEntity_common_Group.members.getter()) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
    uint64_t v48 = (void *)Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_91_9(v49))
    {
      uint64_t v50 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_5_44(v50);
      OUTLINED_FUNCTION_50_15(&dword_0, v51, v52, "#ReferenceContactResolutionWrapper resolved to a named common_Group");
      OUTLINED_FUNCTION_6();
    }

    __swift_project_boxed_opaque_existential_1(v26, v26[3]);
    OUTLINED_FUNCTION_24_2();
    v53();
    outlined init with copy of SignalProviding((uint64_t)v82, (uint64_t)v81);
    outlined init with copy of SignalProviding((uint64_t)v83, (uint64_t)v80);
    uint64_t v54 = swift_allocObject();
    outlined init with take of AppSelectionSignalComponent(v81, v54 + 16);
    outlined init with take of AppSelectionSignalComponent(v80, v54 + 56);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
    Transformer.init(transform:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    uint64_t v55 = (void (*)(void))Transformer.transform.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SmsGroup>);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_467710;
    *(void *)(v56 + 56) = type metadata accessor for UsoEntity_common_Group();
    *(void *)(v56 + 64) = &protocol witness table for UsoEntity_common_Group;
    *(void *)(v56 + 32) = v31;
    v82[0] = v56;
    swift_retain();
    OUTLINED_FUNCTION_109_2();
    v55();
    if (a21)
    {
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v57 = (void *)Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_8_2(v58))
      {
        uint64_t v59 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_28_14(v59);
        OUTLINED_FUNCTION_26_30(&dword_0, v60, v61, "#ReferenceContactResolutionWrapper error transforming namedGroups to INCallGroups");
        OUTLINED_FUNCTION_6();
      }
      swift_errorRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11();
    v62();
    goto LABEL_46;
  }
  unint64_t v44 = v43;
  v82[0] = _swiftEmptyArrayStorage;
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    if (v45) {
      goto LABEL_5;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    unint64_t v63 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  uint64_t v45 = *(void *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v45) {
    goto LABEL_27;
  }
LABEL_5:
  if (v45 < 1)
  {
    __break(1u);
    goto LABEL_48;
  }
  for (uint64_t i = 0; i != v45; ++i)
  {
    if ((v44 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    dispatch thunk of CodeGenListEntry.entry.getter();
    swift_release();
    if (*(void *)&v81[0])
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + (v82[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v82[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v63 = v82[0];
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_28:
  swift_bridgeObjectRelease();
  if (!(v63 >> 62))
  {
    uint64_t v64 = *(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFFF8));
    if (v64) {
      goto LABEL_30;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    id v66 = _swiftEmptyArrayStorage;
LABEL_41:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    uint64_t v69 = OUTLINED_FUNCTION_25_0(v68, (uint64_t)static Logger.siriPhone);
    os_log_type_t v70 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_14_2(v70))
    {
      uint64_t v71 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_34_8(v71);
      OUTLINED_FUNCTION_138_3(&dword_0, v69, (os_log_type_t)v42, "#ReferenceContactResolutionWrapper resolved to an unnamed common_Group");
      OUTLINED_FUNCTION_6();
    }

    v22(v66, v75, v76, v77, v26);
    swift_bridgeObjectRelease();
LABEL_46:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    OUTLINED_FUNCTION_26_1();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v64) {
    goto LABEL_40;
  }
LABEL_30:
  uint64_t v72 = v22;
  id v73 = v26;
  v82[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v78 = v64;
  if ((v64 & 0x8000000000000000) == 0)
  {
    uint64_t v65 = 0;
    id v66 = (void *)v82[0];
    uint64_t v67 = v74;
    do
    {
      if ((v63 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      UsoEntity_common_Agent.toContactQuery()();
      swift_release();
      v82[0] = v66;
      unint64_t v42 = v66[2];
      if (v42 >= v66[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        id v66 = (void *)v82[0];
      }
      ++v65;
      uint64_t v66[2] = v42 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))((unint64_t)v66+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v42, v67, v79);
    }
    while (v78 != v65);
    swift_bridgeObjectRelease();
    os_log_type_t v26 = v73;
    uint64_t v22 = v72;
    goto LABEL_41;
  }
LABEL_48:
  __break(1u);
}

void specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t, uint64_t, void, uint64_t, uint64_t, void *, void *, void, char, unsigned char *, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v54 = v28;
  uint64_t v55 = v29;
  char v52 = v30;
  uint64_t v53 = v31;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v50 = v33;
  uint64_t v51 = v32;
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_4();
  uint64_t v36 = v35 - v34;
  type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v37);
  OUTLINED_FUNCTION_52();
  uint64_t v38 = OUTLINED_FUNCTION_95_7();
  v39(v38);
  uint64_t v40 = v25[3];
  uint64_t v41 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v40);
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 56))(v40, v41);
  LOBYTE(v40) = (*(uint64_t (**)(uint64_t))(*(void *)v42 + 224))(v42);
  swift_release();
  if (v40)
  {
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    uint64_t v43 = swift_allocObject();
    v23(v53, v54, v52 & 1, v55, v27, v25, 0, 1, v57, v43, v21);
    swift_release();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    OUTLINED_FUNCTION_24_2();
    v44();
    __swift_project_boxed_opaque_existential_1(v57, v57[3]);
    dispatch thunk of DeviceState.siriLocale.getter();
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = v27[3];
    uint64_t v47 = v27[4];
    uint64_t v48 = __swift_project_boxed_opaque_existential_1(v27, v46);
    a21(v53, v54, v52 & 1, v55, v36, v48, v25, 0, 1, v56, v45, v46, v47);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v36, v51);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  OUTLINED_FUNCTION_26();
  v49();
  OUTLINED_FUNCTION_26_1();
}

void specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_24_0();
  os_log_type_t v203 = v24;
  v185[5] = v25;
  uint64_t v196 = v26;
  uint64_t v207 = v27;
  uint64_t v208 = v28;
  char v30 = v29;
  uint64_t v187 = v31;
  uint64_t v202 = type metadata accessor for RREntity();
  OUTLINED_FUNCTION_0_0();
  v185[3] = v32;
  __chkstk_darwin(v33);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_20_15(v34);
  uint64_t v188 = type metadata accessor for RRCandidate();
  OUTLINED_FUNCTION_0_0();
  uint64_t v191 = v35;
  __chkstk_darwin(v36);
  OUTLINED_FUNCTION_5_8();
  uint64_t v204 = v37;
  __chkstk_darwin(v38);
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v39);
  OUTLINED_FUNCTION_13_29((uint64_t)v185 - v40);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRResult?);
  uint64_t v42 = OUTLINED_FUNCTION_11_0(v41);
  __chkstk_darwin(v42);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_20_15(v43);
  uint64_t v198 = type metadata accessor for RRResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v190 = v44;
  __chkstk_darwin(v45);
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v46);
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v47);
  OUTLINED_FUNCTION_20_15((uint64_t)v185 - v48);
  uint64_t v49 = type metadata accessor for MatchedResultsSetting();
  OUTLINED_FUNCTION_0_0();
  uint64_t v51 = v50;
  __chkstk_darwin(v52);
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v53);
  uint64_t v55 = (char *)v185 - v54;
  type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v56);
  OUTLINED_FUNCTION_4();
  uint64_t v199 = v57;
  uint64_t v200 = v58;
  uint64_t v61 = (_DWORD *)(v60 - v59);
  OUTLINED_FUNCTION_12();
  v62();
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  uint64_t v63 = OUTLINED_FUNCTION_143_3();
  unint64_t v211 = v64(v63);
  uint64_t v201 = v51;
  uint64_t v65 = *(void (**)(char *, void, uint64_t))(v51 + 104);
  id v66 = v55;
  v65(v55, enum case for MatchedResultsSetting.defaultMatching(_:), v49);
  uint64_t v206 = v30;
  OUTLINED_FUNCTION_1_56(v30);
  if (PhoneCallNLIntent.hasOnlyCallVerb()() && App.isFirstParty()() && static UsoUtils.buildDummyReferenceEntity()())
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((char *)&dword_10 + (v211 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v211 & 0xFFFFFFFFFFFFFF8)) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    (*(void (**)(char *, uint64_t))(v201 + 8))(v55, v49);
    v65(v55, enum case for MatchedResultsSetting.extremelySalientResultsOnly(_:), v49);
  }
  if (v211 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v67 = *(void *)((char *)&dword_10 + (v211 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v68 = v61;
  if (!v67)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v86 = type metadata accessor for Logger();
    uint64_t v87 = (void *)OUTLINED_FUNCTION_25_0(v86, (uint64_t)static Logger.siriPhone);
    os_log_type_t v88 = static os_log_type_t.debug.getter();
    BOOL v89 = OUTLINED_FUNCTION_8_2(v88);
    uint64_t v83 = v199;
    if (v89)
    {
      uint64_t v90 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v90);
      OUTLINED_FUNCTION_1_3(&dword_0, v91, v92, "#ReferenceContactResolutionWrapper - No references found");
      OUTLINED_FUNCTION_6();
    }

    (*(void (**)(char *, uint64_t))(v201 + 8))(v66, v49);
    goto LABEL_23;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v69 = type metadata accessor for Logger();
  v185[1] = __swift_project_value_buffer(v69, (uint64_t)static Logger.siriPhone);
  os_log_type_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.debug.getter();
  BOOL v72 = os_log_type_enabled(v70, v71);
  uint64_t v189 = v49;
  if (v72)
  {
    uint64_t v73 = OUTLINED_FUNCTION_47();
    uint64_t v205 = v61;
    uint64_t v74 = (uint8_t *)v73;
    v210[0] = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v74 = 136315138;
    OUTLINED_FUNCTION_37_4();
    OUTLINED_FUNCTION_12();
    v75();
    uint64_t v76 = String.init<A>(describing:)();
    uint64_t v78 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, v210);
    OUTLINED_FUNCTION_51_1(v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v70, v71, "#ReferenceContactResolutionWrapper Querying SRR with match setting: %s", v74, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    id v66 = v55;
    uint64_t v68 = v205;
    OUTLINED_FUNCTION_6();
  }

  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v80 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  __chkstk_darwin(v80);
  static SiriKitEventSender.current.getter();
  specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v210);
  uint64_t v81 = v195;
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v82 = v198;
  if (__swift_getEnumTagSinglePayload(v81, 1, v198) == 1)
  {
    outlined destroy of UUID?(v81, &demangling cache variable for type metadata for RRResult?);
    goto LABEL_16;
  }
  uint64_t v94 = v190;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v190 + 32))(v197, v81, v82);
  uint64_t v95 = *(void (**)(void))(v94 + 16);
  uint64_t v96 = v194;
  v95();
  int v97 = (*(uint64_t (**)(uint64_t *, uint64_t))(v94 + 88))(v96, v82);
  if (v97 == enum case for RRResult.foundMatch(_:))
  {
    v185[0] = v66;
    uint64_t v205 = v68;
    uint64_t v98 = OUTLINED_FUNCTION_54_22();
    v99(v98);
    uint64_t v100 = v191;
    uint64_t v101 = v192;
    uint64_t v102 = OUTLINED_FUNCTION_7_0();
    uint64_t v103 = v188;
    v104(v102);
    uint64_t v105 = v186;
    uint64_t v204 = *(void (**)(uint64_t, void, uint64_t))(v100 + 16);
    v204(v186, v101, v103);
    uint64_t v106 = OUTLINED_FUNCTION_117_3();
    os_log_type_t v107 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = OUTLINED_FUNCTION_47();
      v210[0] = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v108 = 136315138;
      id v66 = (char *)(v108 + 12);
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_14(&lazy protocol witness table cache variable for type RRCandidate and conformance RRCandidate, (void (*)(uint64_t))&type metadata accessor for RRCandidate);
      uint64_t v109 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v111 = OUTLINED_FUNCTION_135_2(v109, v110);
      OUTLINED_FUNCTION_41_13(v111);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_56();
      ((void (*)(uint64_t, uint64_t))(v108 + 12))(v186, v103);
      _os_log_impl(&dword_0, v106, v107, "#ReferenceContactResolutionWrapper .foundMatch %s", (uint8_t *)v108, 0xCu);
      OUTLINED_FUNCTION_6_71();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_56();
      ((void (*)(uint64_t, uint64_t))v66)(v105, v103);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RRCandidate>);
    unint64_t v128 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    uint64_t v129 = swift_allocObject();
    *(_OWORD *)(v129 + 16) = xmmword_467710;
    unint64_t v130 = v129 + v128;
    uint64_t v131 = v192;
    v204(v130, v192, v103);
    uint64_t v68 = v205;
    OUTLINED_FUNCTION_161_1();
    v132();
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    ((void (*)(void (*)(void, void, void), uint64_t))v66)(v131, v103);
    OUTLINED_FUNCTION_11();
    v133();
    OUTLINED_FUNCTION_11();
    v134();
    uint64_t v83 = v199;
    goto LABEL_23;
  }
  if (v97 == enum case for RRResult.needsDisambiguation(_:))
  {
    uint64_t v112 = OUTLINED_FUNCTION_54_22();
    v113(v112);
    uint64_t v114 = *v96;
    swift_bridgeObjectRetain_n();
    uint64_t v115 = (void *)OUTLINED_FUNCTION_117_3();
    os_log_type_t v116 = static os_log_type_t.debug.getter();
    BOOL v117 = OUTLINED_FUNCTION_21_19(v116);
    v185[0] = v66;
    if (v117)
    {
      uint64_t v118 = (_DWORD *)OUTLINED_FUNCTION_47();
      v210[0] = OUTLINED_FUNCTION_14_0();
      _DWORD *v118 = 136315138;
      uint64_t v205 = v118 + 1;
      swift_bridgeObjectRetain();
      uint64_t v119 = v114;
      uint64_t v120 = Array.description.getter();
      uint64_t v121 = v68;
      unint64_t v123 = v122;
      swift_bridgeObjectRelease();
      uint64_t v124 = v120;
      uint64_t v114 = v119;
      uint64_t v125 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v124, v123, v210);
      OUTLINED_FUNCTION_51_1(v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v68 = v121;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_6(&dword_0, v126, v127, "#ReferenceContactResolutionWrapper found a .needsDisambiguation match %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v210[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v146 = *(void *)(v114 + 16);
    uint64_t v93 = v200;
    if (v146)
    {
      uint64_t v196 = a24;
      uint64_t v195 = a23;
      uint64_t v194 = a21;
      uint64_t v193 = a22;
      uint64_t v192 = *(void (**)(void, void, void))(v191 + 16);
      unint64_t v147 = (*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80);
      uint64_t v186 = v114;
      uint64_t v148 = v114 + v147;
      uint64_t v191 = *(void *)(v191 + 72);
      uint64_t v205 = v68;
      uint64_t v149 = v188;
      uint64_t v150 = v204;
      do
      {
        v192(v150, v148, v149);
        RRCandidate.entity.getter();
        specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
        unint64_t v152 = v151;
        OUTLINED_FUNCTION_26_0();
        v154(v153);
        swift_bridgeObjectRelease();
        unint64_t v155 = v152;
        uint64_t v150 = v204;
        specialized Array.append<A>(contentsOf:)(v155);
        OUTLINED_FUNCTION_26();
        v157(v156);
        v148 += v191;
        --v146;
      }
      while (v146);
      swift_bridgeObjectRelease();
      uint64_t v158 = (void *)v210[0];
      uint64_t v93 = v200;
      uint64_t v68 = v205;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v158 = _swiftEmptyArrayStorage;
    }
    static ReferenceContactResolutionWrapper.dedupePersons(persons:sharedGlobals:)((unint64_t)v158, v208);
    uint64_t v166 = v165;
    swift_bridgeObjectRelease();
    v210[0] = v166;
    static ReferenceContactResolutionWrapper.skeletonINPerson(persons:)();
    uint64_t v168 = v167;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v169 = swift_allocObject();
    *(_OWORD *)(v169 + 16) = xmmword_46A030;
    *(void *)(v169 + 32) = v168;
    uint64_t v209 = v169;
    specialized Array._endMutation()();
    OUTLINED_FUNCTION_11();
    v171(v170);
    OUTLINED_FUNCTION_11();
    v173(v172);
LABEL_49:
    uint64_t v83 = v199;
    goto LABEL_24;
  }
  if (v97 == enum case for RRResult.foundMatchPlural(_:))
  {
    uint64_t v135 = OUTLINED_FUNCTION_54_22();
    v136(v135);
    swift_bridgeObjectRetain_n();
    uint64_t v137 = (void *)OUTLINED_FUNCTION_117_3();
    os_log_type_t v138 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_21_19(v138))
    {
      uint64_t v139 = (_DWORD *)OUTLINED_FUNCTION_47();
      uint64_t v204 = (void (*)(uint64_t, void, uint64_t))OUTLINED_FUNCTION_14_0();
      v210[0] = (uint64_t)v204;
      v185[0] = v66;
      _DWORD *v139 = 136315138;
      os_log_type_t v203 = v139 + 1;
      swift_bridgeObjectRetain();
      uint64_t v140 = Array.description.getter();
      uint64_t v205 = v68;
      unint64_t v142 = v141;
      swift_bridgeObjectRelease();
      uint64_t v143 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v140, v142, v210);
      OUTLINED_FUNCTION_51_1(v143);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v68 = v205;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_6(&dword_0, v144, v145, "#ReferenceContactResolutionWrapper .foundMatchPlural %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    OUTLINED_FUNCTION_161_1();
    v174();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11();
    v175();
    uint64_t v176 = OUTLINED_FUNCTION_105_4();
    v177(v176);
    uint64_t v93 = v200;
    goto LABEL_49;
  }
  if (v97 != enum case for RRResult.noMatch(_:))
  {
    v185[0] = v66;
    uint64_t v205 = v68;
    ((void (*)(void, uint64_t, uint64_t))v95)(v185[2], v197, v82);
    int v178 = OUTLINED_FUNCTION_117_3();
    os_log_type_t v179 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v178, v179))
    {
      uint64_t v180 = (uint8_t *)OUTLINED_FUNCTION_47();
      v210[0] = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v180 = 136315138;
      _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_14(&lazy protocol witness table cache variable for type RRResult and conformance RRResult, (void (*)(uint64_t))&type metadata accessor for RRResult);
      uint64_t v181 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v183 = OUTLINED_FUNCTION_135_2(v181, v182);
      OUTLINED_FUNCTION_41_13(v183);
      swift_bridgeObjectRelease();
      os_log_type_t v184 = *(void (**)(void))(v94 + 8);
      OUTLINED_FUNCTION_65_14();
      v184();
      _os_log_impl(&dword_0, v178, v179, "#ReferenceContactResolutionWrapper dropping result of type %s!", v180, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      os_log_type_t v184 = *(void (**)(void))(v94 + 8);
      OUTLINED_FUNCTION_65_14();
      v184();
    }
    OUTLINED_FUNCTION_65_14();
    v184();
    ((void (*)(uint64_t *, uint64_t))v184)(v194, v82);
    uint64_t v83 = v199;
    uint64_t v68 = v205;
    goto LABEL_17;
  }
  uint64_t v159 = (void *)OUTLINED_FUNCTION_117_3();
  os_log_type_t v160 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v160))
  {
    uint64_t v161 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v161);
    OUTLINED_FUNCTION_1_3(&dword_0, v162, v163, "#ReferenceContactResolutionWrapper found a .nomatch");
    OUTLINED_FUNCTION_6();
  }

  OUTLINED_FUNCTION_65_14();
  v164();
LABEL_16:
  uint64_t v83 = v199;
LABEL_17:
  uint64_t v84 = OUTLINED_FUNCTION_105_4();
  v85(v84);
LABEL_23:
  uint64_t v93 = v200;
LABEL_24:
  swift_bridgeObjectRelease();
  (*(void (**)(_DWORD *, uint64_t))(v93 + 8))(v68, v83);
  OUTLINED_FUNCTION_143_3();
  OUTLINED_FUNCTION_26_1();
}

void specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v40 = v3;
  uint64_t v41 = v2;
  uint64_t v44 = v4;
  uint64_t v45 = v5;
  uint64_t v42 = v6;
  uint64_t v43 = v7;
  OUTLINED_FUNCTION_137_2();
  uint64_t v8 = type metadata accessor for ContactGroupResolver();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_52();
  uint64_t v12 = OUTLINED_FUNCTION_95_7();
  v13(v12);
  static Signpost.begin(_:)();
  uint64_t v46 = v14;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  uint64_t v15 = (void *)RREntity.convertData<A>(to:)();
  Signpost.OpenSignpost.end()();
  if (v15)
  {
    uint64_t v16 = one-time initialization token for siriPhone;
    id v17 = v15;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    uint64_t v19 = (void *)OUTLINED_FUNCTION_25_0(v18, (uint64_t)static Logger.siriPhone);
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_91_9(v20))
    {
      uint64_t v21 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_5_44(v21);
      OUTLINED_FUNCTION_50_15(&dword_0, v22, v23, "#ReferenceContactResolutionWrapper resolved to an INPerson");
      OUTLINED_FUNCTION_6();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_46A030;
    *(void *)(v24 + 32) = v17;
    uint64_t v47 = (void *)v24;
    uint64_t v25 = specialized Array._endMutation()();
    uint64_t v26 = v47;
  }
  else
  {
    RREntity.usoEntity.getter();
    OUTLINED_FUNCTION_62_0();
    type metadata accessor for UsoEntity_common_Person();
    OUTLINED_FUNCTION_22_32();
    swift_release();
    if (v47)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      uint64_t v28 = (void *)OUTLINED_FUNCTION_25_0(v27, (uint64_t)static Logger.siriPhone);
      os_log_type_t v29 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_91_9(v29))
      {
        char v30 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_5_44(v30);
        OUTLINED_FUNCTION_50_15(&dword_0, v31, v32, "#ReferenceContactResolutionWrapper resolved to a common_Person");
        OUTLINED_FUNCTION_6();
      }

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
      uint64_t v33 = type metadata accessor for ContactQuery();
      OUTLINED_FUNCTION_19_0(v33);
      uint64_t v34 = OUTLINED_FUNCTION_40_16();
      *(_OWORD *)(v34 + 16) = xmmword_467710;
      UsoEntity_common_Person.toContactQuery()();
      uint64_t v26 = (void *)v40(v34, v41, v42, v43, v44);
      swift_bridgeObjectRelease();
      uint64_t v25 = swift_release();
    }
    else
    {
      RREntity.usoEntity.getter();
      OUTLINED_FUNCTION_62_0();
      type metadata accessor for UsoEntity_common_Group();
      OUTLINED_FUNCTION_22_32();
      swift_release();
      RREntity.usoEntity.getter();
      OUTLINED_FUNCTION_62_0();
      type metadata accessor for UsoEntity_common_Agent();
      OUTLINED_FUNCTION_22_32();
      swift_release();
      RREntity.usoEntity.getter();
      OUTLINED_FUNCTION_62_0();
      type metadata accessor for UsoEntity_common_App();
      OUTLINED_FUNCTION_22_32();
      swift_release();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      uint64_t v36 = OUTLINED_FUNCTION_25_0(v35, (uint64_t)static Logger.siriPhone);
      os_log_type_t v37 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_21_19(v37))
      {
        uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_0, v36, OS_LOG_TYPE_DEFAULT, "#ReferenceContactResolutionWrapper resolved entity was not recognized as a person or group", v38, 2u);
        OUTLINED_FUNCTION_6();
      }

      uint64_t v26 = _swiftEmptyArrayStorage;
    }
  }
  __chkstk_darwin(v25);
  v39[2] = v1;
  specialized Sequence.compactMap<A>(_:)(v45, (uint64_t)v39, (unint64_t)v26);
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v8);
  OUTLINED_FUNCTION_26_1();
}

uint64_t specialized IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INAnswerCallIntent, INAnswerCallIntentResponse>);
  __chkstk_darwin(v5);
  memcpy(v10, a2, sizeof(v10));
  swift_storeEnumTagMultiPayload();
  outlined init with copy of SignalProviding(a3, (uint64_t)&v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
  swift_allocObject();
  outlined init with copy of AnswerCallOutputStrategy((uint64_t)v10, (uint64_t)&v8);
  uint64_t v6 = specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)();
  __swift_destroy_boxed_opaque_existential_1(a3);
  outlined destroy of AnswerCallOutputStrategy((uint64_t)v10);
  return v6;
}

uint64_t specialized IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  __chkstk_darwin(v5);
  long long v6 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v6;
  long long v11[2] = *(_OWORD *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 48);
  swift_storeEnumTagMultiPayload();
  outlined init with copy of SignalProviding(a3, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  swift_allocObject();
  outlined init with copy of IdentifyIncomingCallerOutputStrategy((uint64_t)v11, (uint64_t)v9);
  uint64_t v7 = specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)();
  __swift_destroy_boxed_opaque_existential_1(a3);
  outlined destroy of IdentifyIncomingCallerOutputStrategy((uint64_t)v11);
  return v7;
}

uint64_t lazy protocol witness table accessor for type IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneFlow<A, B>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallRequestSupportPolicy()
{
  return &type metadata for PhoneCallRequestSupportPolicy;
}

uint64_t sub_3F1A90()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_10(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

uint64_t sub_3F1B90()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3F1BCC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_3F1C24()
{
  return objectdestroy_21Tm(65);
}

uint64_t OUTLINED_FUNCTION_2_122()
{
  __swift_destroy_boxed_opaque_existential_1(v1 - 120);
  uint64_t v2 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_3_108()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), *(void *)(v0 - 96));
  return *(void *)(v0 - 176);
}

void OUTLINED_FUNCTION_4_105()
{
  *(void *)(v1 - 176) = *(void *)(*(void *)(v1 - 200) + 16);
  *(void *)(v1 - 200) = v0;
}

uint64_t OUTLINED_FUNCTION_9_76()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_72()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), *(void *)(v0 - 96));
  return DeviceState.siriInputLocale.getter();
}

uint64_t OUTLINED_FUNCTION_15_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  return ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)(v10, v6, v9, v8, a5, a6, v11 - 160, v7);
}

uint64_t OUTLINED_FUNCTION_23_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_40()
{
  return type metadata accessor for Locale();
}

uint64_t OUTLINED_FUNCTION_28_38()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_29_32(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 192) = a2;
  *(void *)(v2 - 176) = a1;
  return type metadata accessor for ResolvedSiriKitContact();
}

uint64_t OUTLINED_FUNCTION_30_33()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_31_37(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_32_29(float a1)
{
  *uint64_t v2 = a1;
  *(void *)(v3 - 160) = v1;
  return swift_errorRetain();
}

uint64_t OUTLINED_FUNCTION_34_32()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_36()
{
  return outlined init with copy of SignalProviding(v0, v1 - 104);
}

uint64_t OUTLINED_FUNCTION_38_31(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_41_30()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_43_29()
{
  return v0;
}

void OUTLINED_FUNCTION_46_25()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_47_26()
{
  *(void *)(v2 - 192) = v1;
  *(void *)(v2 - 120) = v0;
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t OUTLINED_FUNCTION_49_25()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_54_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_21()
{
  return static SiriKitLifecycle._logCrashToEventBus(_:)();
}

uint64_t OUTLINED_FUNCTION_63_14(float a1)
{
  float *v1 = a1;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, (v2 - 32) | 0x8000000000000000, (uint64_t *)(v3 - 120));
}

uint64_t OUTLINED_FUNCTION_68_14()
{
  return Input.init(parse:)();
}

uint64_t OUTLINED_FUNCTION_69_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_17()
{
  return String.init<A>(describing:)();
}

uint64_t OUTLINED_FUNCTION_73_12()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t OUTLINED_FUNCTION_77_10()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_81_11()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 - 120);
}

void OUTLINED_FUNCTION_84_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 16) = v7;
  uint64_t v8 = a4 + 16 * v4;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v6;
}

id OUTLINED_FUNCTION_85_9(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  outlined init with take of AppSelectionSignalComponent((long long *)(v3 - 104), a1 + 32);
  return v1;
}

void OUTLINED_FUNCTION_89_9(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 296) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

BOOL OUTLINED_FUNCTION_91_11()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return PhoneCallNLIntent.hasAnyConfirmation()();
}

uint64_t OUTLINED_FUNCTION_93_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_94_8()
{
  return objectdestroy_21Tm(64);
}

uint64_t OUTLINED_FUNCTION_99_8()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_105_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_106_4(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t OUTLINED_FUNCTION_114_2(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t OUTLINED_FUNCTION_117_3()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_118_5()
{
  return *(void *)(v0 - 400);
}

uint64_t OUTLINED_FUNCTION_120_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_122_4()
{
  __swift_destroy_boxed_opaque_existential_1(v2);
  __swift_destroy_boxed_opaque_existential_1(v3 - 104);
  return outlined destroy of UUID?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_126_2(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_127_2()
{
  return Transformer.init(transform:)();
}

uint64_t OUTLINED_FUNCTION_132_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_134_4()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_135_2(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_137_2()
{
  return 0;
}

void OUTLINED_FUNCTION_138_3(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_141_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_143_4(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_144_4()
{
}

uint64_t OUTLINED_FUNCTION_145_4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1) = v4;
  return outlined init with copy of ResponseMode?(v1, v5, v3);
}

BOOL OUTLINED_FUNCTION_147_4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return PhoneCallNLIntent.hasAnyConfirmation()();
}

uint64_t OUTLINED_FUNCTION_149_5(uint64_t result)
{
  *(void *)(v1 + 224) = result;
  *(void *)(v1 + 264) = 0;
  *(unsigned char *)(v1 + 272) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_155_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_156_4()
{
  return outlined init with copy of SignalProviding(v0, v1 - 160);
}

uint64_t OUTLINED_FUNCTION_165_2()
{
  return Logger.logObject.getter();
}

uint64_t outlined copy of SlotResolverError(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!a3) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t destroy for SlotResolverError(uint64_t a1)
{
  return outlined consume of SlotResolverError(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t outlined consume of SlotResolverError(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!a3) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SlotResolverError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of SlotResolverError(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SlotResolverError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of SlotResolverError(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  outlined consume of SlotResolverError(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SlotResolverError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  outlined consume of SlotResolverError(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SlotResolverError()
{
  return &type metadata for SlotResolverError;
}

uint64_t PhoneCallGroup.__allocating_init(groupName:groupId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for PhoneCallGroup.Builder(0);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  uint64_t v8 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  __swift_storeEnumTagSinglePayload(v6 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId, 1, 1, v8);
  PhoneCallGroup.Builder.withGroupName(_:)();
  swift_release();
  OUTLINED_FUNCTION_22();
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v9 + 176))(a2);
  swift_release();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v3 + 144))(v10);
  outlined destroy of SpeakableString?(a2);
  outlined destroy of SpeakableString?(a1);
  return v11;
}

uint64_t key path setter for PhoneCallGroup.Builder.groupName : PhoneCallGroup.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 104))(v6);
}

uint64_t PhoneCallGroup.Builder.groupName.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName, a1);
}

uint64_t PhoneCallGroup.Builder.groupName.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName);
}

uint64_t (*PhoneCallGroup.Builder.groupName.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallGroup.Builder.groupId : PhoneCallGroup.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 128))(v6);
}

uint64_t PhoneCallGroup.Builder.groupId.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId, a1);
}

uint64_t PhoneCallGroup.Builder.groupId.setter(uint64_t a1)
{
  return PhoneCallProvider.Builder.preferredCallProvider.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
}

uint64_t (*PhoneCallGroup.Builder.groupId.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneCallGroup.Builder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_14_1(v1);
  OUTLINED_FUNCTION_14_1(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  return v0;
}

uint64_t type metadata accessor for PhoneCallGroup.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallGroup.Builder);
}

uint64_t PhoneCallGroup.Builder.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_14_1(v1);
  OUTLINED_FUNCTION_14_1(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  return v0;
}

uint64_t PhoneCallGroup.Builder.__allocating_init(groupName:groupId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  PhoneCallGroup.Builder.init(groupName:groupId:)(a1, a2);
  return v4;
}

uint64_t PhoneCallGroup.Builder.init(groupName:groupId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  uint64_t v10 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  uint64_t v11 = v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId;
  __swift_storeEnumTagSinglePayload(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId, 1, 1, v10);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v12(v8, a1, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of SpeakableString?((uint64_t)v8, v9);
  swift_endAccess();
  v12(v8, a2, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of SpeakableString?((uint64_t)v8, v11);
  swift_endAccess();
  return v2;
}

uint64_t PhoneCallGroup.Builder.withGroupName(_:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_0_16(v3, v6);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 104))(v0);
  return swift_retain();
}

uint64_t PhoneCallGroup.Builder.withGroupName(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 104))(v0);
  return swift_retain();
}

uint64_t PhoneCallGroup.Builder.withGroupId(_:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_0_16(v3, v6);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 128))(v0);
  return swift_retain();
}

uint64_t PhoneCallGroup.Builder.withGroupId(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v4 + 128))(v0);
  return swift_retain();
}

uint64_t PhoneCallGroup.Builder.build()()
{
  type metadata accessor for PhoneCallGroup(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_retain();
  PhoneCallGroup.init(builder:)(v1);
  return v0;
}

uint64_t PhoneCallGroup.__allocating_init(builder:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PhoneCallGroup.init(builder:)(a1);
  return v2;
}

uint64_t type metadata accessor for PhoneCallGroup(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallGroup);
}

uint64_t PhoneCallGroup.Builder.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  return v0;
}

uint64_t PhoneCallGroup.Builder.__deallocating_deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t static PhoneCallGroup.catTypeName.getter()
{
  return 0x61432E656E6F6870;
}

uint64_t key path setter for PhoneCallGroup.mockGlobals : PhoneCallGroup(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 128);
  id v4 = *a1;
  return v3(v2);
}

uint64_t PhoneCallGroup.groupName.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
}

uint64_t PhoneCallGroup.groupId.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
}

void *PhoneCallGroup.init(builder:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_5_1();
  v1[2] = 0;
  (*(void (**)(void))(*(void *)a1 + 96))();
  uint64_t v7 = outlined init with take of SpeakableString?(v2, (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
  (*(void (**)(uint64_t))(*(void *)a1 + 120))(v7);
  uint64_t v8 = outlined init with take of SpeakableString?(v2, (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
  if (((*(uint64_t (**)(uint64_t))(*v1 + 152))(v8) & 1) == 0)
  {
    uint64_t v9 = (void *)static Log.siriDialogEngine.getter();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_467710;
    OUTLINED_FUNCTION_26_6();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallGroup.Type);
    uint64_t v11 = String.init<A>(describing:)();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
  swift_release();
  return v3;
}

Swift::Bool __swiftcall PhoneCallGroup.allRequiredInputsHaveValues()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_46_0();
  uint64_t v5 = v3 - v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - v7;
  outlined init with copy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName, (uint64_t)&v13 - v7);
  uint64_t v9 = type metadata accessor for SpeakableString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  outlined destroy of SpeakableString?((uint64_t)v8);
  if (EnumTagSinglePayload == 1) {
    return 0;
  }
  outlined init with copy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId, v5);
  Swift::Bool v11 = __swift_getEnumTagSinglePayload(v5, 1, v9) != 1;
  outlined destroy of SpeakableString?(v5);
  return v11;
}

uint64_t PhoneCallGroup.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - v13;
  BOOL v15 = a1 == 0x6D614E70756F7267 && a2 == 0xE900000000000065;
  if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName, (uint64_t)v14);
    uint64_t v16 = type metadata accessor for SpeakableString();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16) != 1)
    {
      *(void *)(a3 + 24) = v16;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
      return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(boxed_opaque_existential_1, v14, v16);
    }
    uint64_t v17 = (uint64_t)v14;
    goto LABEL_16;
  }
  if (a1 != 0x644970756F7267 || a2 != 0xE700000000000000)
  {
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if ((result & 1) == 0) {
      goto LABEL_17;
    }
  }
  outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId, v11);
  uint64_t v21 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v11, 1, v21) == 1)
  {
    uint64_t v17 = v11;
LABEL_16:
    uint64_t result = outlined destroy of SpeakableString?(v17);
LABEL_17:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  *(void *)(a3 + 24) = v21;
  uint64_t v22 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v22, v11, v21);
}

PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional __swiftcall PhoneCallGroup.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallGroup.CodingKeys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.int value = PhoneCallFlowDelegatePlugin_PhoneCallGroup_CodingKeys_groupId;
  }
  else {
    v4.int value = PhoneCallFlowDelegatePlugin_PhoneCallGroup_CodingKeys_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t PhoneCallGroup.CodingKeys.rawValue.getter(char a1)
{
  if (a1) {
    return 0x644970756F7267;
  }
  else {
    return 0x6D614E70756F7267;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallGroup.CodingKeys(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallGroup.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallGroup.CodingKeys()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallGroup.CodingKeys()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallGroup.CodingKeys@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneCallGroup.CodingKeys.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallGroup.CodingKeys@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PhoneCallGroup.CodingKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneCallGroup.CodingKeys()
{
  return PhoneCallGroup.CodingKeys.rawValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneCallGroup.CodingKeys@<W0>(uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneCallGroup.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallGroup.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneCallGroup.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneCallGroup.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
  return v0;
}

uint64_t PhoneCallGroup.__deallocating_deinit()
{
  PhoneCallGroup.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t PhoneCallGroup.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneCallGroup.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for SpeakableString();
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_4(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  OUTLINED_FUNCTION_10_9();
  if (!v1) {
    OUTLINED_FUNCTION_10_9();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }
  return result;
}

uint64_t PhoneCallGroup.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PhoneCallGroup.init(from:)(a1);
  return v2;
}

uint64_t PhoneCallGroup.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_46_0();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v22 - v11;
  long long v22[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneCallGroup.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  *(void *)(v3 + 16) = 0;
  uint64_t v16 = a1[3];
  uint64_t v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v17 = (uint64_t)v23;

    type metadata accessor for PhoneCallGroup(0);
    OUTLINED_FUNCTION_26_6();
    swift_deallocPartialClassInstance();
    uint64_t v21 = v17;
  }
  else
  {
    v22[1] = v14;
    type metadata accessor for SpeakableString();
    char v25 = 0;
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_4(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    OUTLINED_FUNCTION_8_98();
    outlined init with take of SpeakableString?((uint64_t)v12, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
    char v24 = 1;
    OUTLINED_FUNCTION_8_98();
    uint64_t v19 = OUTLINED_FUNCTION_11_73();
    v20(v19);
    outlined init with take of SpeakableString?(v9, v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
    uint64_t v21 = (uint64_t)v23;
  }
  __swift_destroy_boxed_opaque_existential_1(v21);
  return v3;
}

uint64_t _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in PhoneCallGroup()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_4(&lazy protocol witness table cache variable for type PhoneCallGroup and conformance PhoneCallGroup, (void (*)(uint64_t))type metadata accessor for PhoneCallGroup);
}

uint64_t base witness table accessor for Encodable in PhoneCallGroup()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_4(&lazy protocol witness table cache variable for type PhoneCallGroup and conformance PhoneCallGroup, (void (*)(uint64_t))type metadata accessor for PhoneCallGroup);
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhoneCallGroup()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhoneCallGroup()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t protocol witness for CATType.mockGlobals.getter in conformance PhoneCallGroup()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhoneCallGroup()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneCallGroup(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 136))();
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhoneCallGroup()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneCallGroup@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneCallGroup()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_3F4038()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_3F407C()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_3F40C0@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 120))();
  *a1 = result;
  return result;
}

uint64_t ObjC metadata update function for PhoneCallGroup()
{
  return type metadata accessor for PhoneCallGroup(0);
}

void type metadata completion function for PhoneCallGroup()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for PhoneCallGroup.Builder()
{
  return type metadata accessor for PhoneCallGroup.Builder(0);
}

void type metadata completion function for PhoneCallGroup.Builder()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for PhoneCallGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3F4314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallGroup.CodingKeys()
{
  return &type metadata for PhoneCallGroup.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_8_98()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_11_73()
{
  return v0;
}

void *PluginPrewarmProvider.__allocating_init(eligibleAppsFinder:)(uint64_t a1)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v2);
  unsigned int v4 = OUTLINED_FUNCTION_2_20(v3, v8);
  v5(v4);
  unsigned int v6 = OUTLINED_FUNCTION_2_123();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

void *PluginPrewarmProvider.init(eligibleAppsFinder:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v2);
  unsigned int v4 = OUTLINED_FUNCTION_2_20(v3, v8);
  v5(v4);
  unsigned int v6 = OUTLINED_FUNCTION_2_123();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

Swift::Void __swiftcall PluginPrewarmProvider.prewarm(refId:)(Swift::String refId)
{
  object = refId._object;
  uint64_t countAndFlagsBits = refId._countAndFlagsBits;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)(v1 + 56);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = countAndFlagsBits;
  v16[3] = object;
  void v16[4] = v1;
  aBlock[4] = partial apply for closure #1 in PluginPrewarmProvider.prewarm(refId:);
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_10;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  swift_release();
}

void closure #1 in PluginPrewarmProvider.prewarm(refId:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 72);
  if (v6
    && (*(void *)(a3 + 64) == a1 ? (BOOL v7 = v6 == a2) : (BOOL v7 = 0),
        v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v9, v10, "PluginPrewarmProvider#prewarm refId: %s already prewarmed", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v13, v14, "PluginPrewarmProvider#prewarm for refId: %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    PluginPrewarmProvider.prewarm()();
    *(void *)(a3 + 64) = a1;
    *(void *)(a3 + 72) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
}

uint64_t PluginPrewarmProvider.prewarm()()
{
  uint64_t v1 = v0;
  static Signpost.begin(_:)();
  type metadata accessor for ContactResolver();
  static ContactResolver.refreshSharedCache()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_467720;
  id v3 = [objc_allocWithZone((Class)INStartCallIntent) init];
  id v4 = [v3 _className];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  *(void *)(v2 + 32) = v5;
  *(void *)(v2 + 40) = v7;
  id v8 = [objc_allocWithZone((Class)INStartAudioCallIntent) init];
  id v9 = [v8 _className];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  *(void *)(v2 + 48) = v10;
  *(void *)(v2 + 56) = v12;
  id v13 = [objc_allocWithZone((Class)INStartVideoCallIntent) init];
  id v14 = [v13 _className];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v19 = v18;
  void v18[2] = 3;
  v18[8] = v15;
  v18[9] = v17;
  os_log_type_t v20 = v1 + 2;
  uint64_t v22 = v1[5];
  uint64_t v21 = v1[6];
  __swift_project_boxed_opaque_existential_1(v20, v22);
  (*(void (**)(void *, uint64_t, uint64_t))(v21 + 8))(v19, v22, v21);
  swift_bridgeObjectRelease();
  if (PluginPrewarmProvider.shouldRunAppSelectionModelPreWarm()())
  {
    type metadata accessor for PhoneAppSelectionModelCache();
    static PhoneAppSelectionModelCache.prewarm()();
  }
  Signpost.OpenSignpost.end()();

  return swift_release();
}

uint64_t PluginPrewarmProvider.shouldRunAppSelectionModelPreWarm()()
{
  type metadata accessor for SiriEnvironment();
  static SiriEnvironment.default.getter();
  SiriEnvironment.currentDevice.getter();
  swift_release();
  char v0 = dispatch thunk of CurrentDevice.isPhone.getter();
  swift_release();
  if (v0) {
    return 1;
  }
  static SiriEnvironment.default.getter();
  SiriEnvironment.currentDevice.getter();
  swift_release();
  char v2 = dispatch thunk of CurrentDevice.isCarPlay.getter();
  swift_release();
  return v2 & 1;
}

uint64_t PluginPrewarmProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PluginPrewarmProvider.__deallocating_deinit()
{
  PluginPrewarmProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for PluginPrewarmProviding.prewarm(refId:) in conformance PluginPrewarmProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

void *specialized PluginPrewarmProvider.init(eligibleAppsFinder:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  type metadata accessor for OS_dispatch_queue();
  static DispatchQoS.userInteractive.getter();
  uint64_t v18 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v17);
  uint64_t v14 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  a2[8] = 0;
  a2[9] = 0;
  a2[7] = v14;
  outlined init with take of AppSelectionSignalComponent(&v19, (uint64_t)(a2 + 2));
  return a2;
}

uint64_t sub_3F50AC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in PluginPrewarmProvider.prewarm(refId:)()
{
  closure #1 in PluginPrewarmProvider.prewarm(refId:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t type metadata accessor for PluginPrewarmProvider()
{
  return self;
}

void *OUTLINED_FUNCTION_2_123()
{
  return specialized PluginPrewarmProvider.init(eligibleAppsFinder:)(v3, v0, v1, v2);
}

uint64_t TemplatingOperationManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TemplatingOperationManager.init()();
  return v0;
}

BOOL TemplatingOperationType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of TemplatingOperationType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t TemplatingOperationType.rawValue.getter()
{
  return 0xD000000000000015;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance TemplatingOperationType@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = TemplatingOperationType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance TemplatingOperationType@<X0>(void *a1@<X8>)
{
  unint64_t result = TemplatingOperationType.rawValue.getter();
  *a1 = 0xD000000000000015;
  a1[1] = v3;
  return result;
}

uint64_t one-time initialization function for timeout()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();
  __swift_allocate_value_buffer(v0, static TemplatingOperationManager.timeout);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)static TemplatingOperationManager.timeout) = 500;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

uint64_t TemplatingOperationManager.timeout.unsafeMutableAddressor()
{
  if (one-time initialization token for timeout != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();

  return __swift_project_value_buffer(v0, (uint64_t)static TemplatingOperationManager.timeout);
}

uint64_t static TemplatingOperationManager.timeout.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for timeout != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static TemplatingOperationManager.timeout);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t TemplatingOperationManager.addOperation(intentId:key:catCall:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_9_77(a1, a2, a3);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_9_19();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_52();
  static Signpost.begin(_:message:)();
  OUTLINED_FUNCTION_5_78();
  uint64_t v5 = swift_allocObject();
  aBlock[4] = partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:);
  aBlock[5] = OUTLINED_FUNCTION_2_124(v5);
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_11;
  uint64_t v6 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_8_99();
  _Block_release(v6);
  swift_release();
  uint64_t v7 = OUTLINED_FUNCTION_6_97();
  v8(v7);
  uint64_t v9 = OUTLINED_FUNCTION_7_88();
  v10(v9);
  return swift_release();
}

uint64_t closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  uint64_t v11 = &unk_469000;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015, 0x8000000000490E20, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v13 = a1;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, v24);
    uint64_t v11 = (void *)&unk_469000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v9, v10, "OperationManager: Adding operation for key: %s, intent: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v13 = a1;

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = a3[5];
  if (!v14)
  {
    uint64_t v15 = v13;
LABEL_14:
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [TemplatingOperationType : TemplatingOperation]._Variant);
    Dictionary._Variant.removeAll(keepingCapacity:)(1);
    swift_endAccess();
    goto LABEL_15;
  }
  uint64_t v15 = v13;
  BOOL v16 = a3[4] == v13 && v14 == a2;
  if (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_14;
  }
LABEL_15:
  a3[4] = v15;
  a3[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for TemplatingOperation();
  swift_allocObject();
  swift_retain();
  TemplatingOperation.init(key:catCall:)(a4, a5);
  swift_beginAccess();
  uint64_t v17 = swift_retain();
  specialized Dictionary._Variant.setValue(_:forKey:)(v17);
  swift_endAccess();
  TemplatingOperation.start(on:)(a3[3]);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = v11[288];
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015, 0x8000000000490E20, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, a2, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v18, v19, "OperationManager: Finished adding operation for key: %s, intent: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  Signpost.OpenSignpost.end()();
  return swift_release();
}

uint64_t TemplatingOperationManager.getResult(intentId:key:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_9_77(a1, a2, a3);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_9_19();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_52();
  static Signpost.begin(_:message:)();
  OUTLINED_FUNCTION_5_78();
  uint64_t v5 = swift_allocObject();
  aBlock[4] = partial apply for closure #1 in TemplatingOperationManager.getResult(intentId:key:_:);
  aBlock[5] = OUTLINED_FUNCTION_2_124(v5);
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_6;
  uint64_t v6 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_8_99();
  _Block_release(v6);
  swift_release();
  uint64_t v7 = OUTLINED_FUNCTION_6_97();
  v8(v7);
  uint64_t v9 = OUTLINED_FUNCTION_7_88();
  v10(v9);
  return swift_release();
}

uint64_t closure #1 in TemplatingOperationManager.getResult(intentId:key:_:)(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v32[1] = a6;
  void v32[2] = a7;
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  v32[4] = v16;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  v32[3] = a8;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v32[0] = a5;
    v37[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015, 0x8000000000490E20, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, a2, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v17, v18, "OperationManager: Getting operation for key: %s, intent: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    a5 = v32[0];
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v22 = *(void *)(v33 + 40);
  if (v22
    && (*(void *)(v33 + 32) == v34 ? (BOOL v23 = v22 == a2) : (BOOL v23 = 0),
        (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
     && (swift_beginAccess(),
         uint64_t v24 = swift_bridgeObjectRetain(),
         uint64_t v25 = specialized Dictionary.subscript.getter(v24),
         swift_bridgeObjectRelease(),
         v25)))
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a4;
    *(void *)(v26 + 24) = a5;
    swift_retain();
    TemplatingOperation.onComplete(_:)((uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>?) -> (), v26);
    swift_release();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015, 0x8000000000490E20, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, a2, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v27, v28, "OperationManager: Finished getting operation for key: %s, intent: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    Signpost.OpenSignpost.end()();
    return swift_release();
  }
  else
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v30);
    a4(v14);
    return outlined destroy of SubmitCommandError?((uint64_t)v14, &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>?) -> ()(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  a2(v6);
  return outlined destroy of SubmitCommandError?((uint64_t)v6, &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
}

uint64_t TemplatingOperationManager.getResult(intentIdOptional:key:_:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  __chkstk_darwin(v10 - 8);
  OUTLINED_FUNCTION_52();
  if (a2)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t))(*(void *)v4 + 168);
    return v11(a1, a2, a3, a4);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v13);
    a3(v5);
    return outlined destroy of SubmitCommandError?(v5, &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  }
}

uint64_t TemplatingOperationManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TemplatingOperationManager.__deallocating_deinit()
{
  TemplatingOperationManager.deinit();

  return swift_deallocClassInstance();
}

void *TemplatingOperationManager.init()()
{
  v12[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_52();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  type metadata accessor for OS_dispatch_queue();
  static DispatchQoS.userInitiated.getter();
  v12[1] = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v8 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v10 = v12[0];
  v9(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12[0]);
  OUTLINED_FUNCTION_10_68();
  v0[2] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  static DispatchQoS.userInteractive.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  v9(v5, v8, v10);
  OUTLINED_FUNCTION_10_68();
  v0[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  type metadata accessor for TemplatingOperation();
  lazy protocol witness table accessor for type TemplatingOperationType and conformance TemplatingOperationType();
  v0[4] = 0;
  v0[5] = 0;
  v0[6] = Dictionary.init(dictionaryLiteral:)();
  return v0;
}

uint64_t partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)()
{
  return partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)((uint64_t (*)(void, void, void, void, void, void, void, void, __int16))closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t objectdestroyTm_20()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 82, 7);
}

uint64_t partial apply for closure #1 in TemplatingOperationManager.getResult(intentId:key:_:)()
{
  return partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)((uint64_t (*)(void, void, void, void, void, void, void, void, __int16))closure #1 in TemplatingOperationManager.getResult(intentId:key:_:));
}

uint64_t partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)(uint64_t (*a1)(void, void, void, void, void, void, void, void, __int16))
{
  if (*(unsigned char *)(v1 + 81)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  __int16 v4 = v2 | *(unsigned __int8 *)(v1 + 80);
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), v4);
}

uint64_t type metadata accessor for TemplatingOperation()
{
  uint64_t result = type metadata singleton initialization cache for TemplatingOperation;
  if (!type metadata singleton initialization cache for TemplatingOperation) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TemplatingOperationType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3F68B0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplatingOperationType()
{
  return &type metadata for TemplatingOperationType;
}

uint64_t type metadata accessor for TemplatingOperationManager()
{
  return self;
}

uint64_t TemplatingOperation.init(key:catCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PhoneError();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v3
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result);
  *(_OWORD *)uint64_t v8 = xmmword_472DC0;
  *((void *)v8 + 2) = 0xD00000000000003CLL;
  *((void *)v8 + 3) = 0x800000000049CFC0;
  *((void *)v8 + 4) = 0xD000000000000013;
  *((void *)v8 + 5) = 0x8000000000489540;
  *((void *)v8 + 6) = 87;
  v8[56] = 0;
  swift_storeEnumTagMultiPayload();
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
  uint64_t v10 = swift_allocError();
  PhoneError.logged()(v11);
  outlined destroy of PhoneError((uint64_t)v8);
  *uint64_t v9 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group;
  *(void *)(v3 + v12) = dispatch_group_create();
  uint64_t v13 = (void *)(v3
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_catCall);
  *uint64_t v13 = a1;
  v13[1] = a2;
  return v3;
}

uint64_t TemplatingOperation.start(on:)(uint64_t a1)
{
  v20[1] = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v20[0] - 8);
  __chkstk_darwin(v20[0]);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:message:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  __int16 v15 = v14;
  dispatch_group_enter(*(dispatch_group_t *)(v1
                                           + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group));
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v9;
  *(void *)(v17 + 32) = v11;
  *(void *)(v17 + 40) = v13;
  *(unsigned char *)(v17 + 48) = v15;
  *(unsigned char *)(v17 + 49) = HIBYTE(v15) & 1;
  aBlock[4] = partial apply for closure #1 in TemplatingOperation.start(on:);
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_40;
  os_log_type_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  (*(void (**)(char *, void))(v5 + 8))(v7, v20[0]);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in TemplatingOperation.start(on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = *(void (**)(void (*)(uint64_t), uint64_t))(result
                                                                       + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_catCall);
    swift_retain();
    swift_release();
    uint64_t v11 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = a2;
    *(void *)(v12 + 32) = a3;
    *(void *)(v12 + 40) = a4;
    *(unsigned char *)(v12 + 48) = a5;
    *(unsigned char *)(v12 + 49) = HIBYTE(a5) & 1;
    swift_retain();
    swift_retain();
    v10(partial apply for closure #1 in closure #1 in TemplatingOperation.start(on:), v12);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void closure #1 in closure #1 in TemplatingOperation.start(on:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v4);
    uint64_t v7 = v6
       + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result;
    swift_beginAccess();
    outlined assign with take of Result<TemplatingResult, Error>((uint64_t)v4, v7);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v8 = swift_weakLoadStrong();
  if (v8)
  {
    uint64_t v9 = objc_retain(*(id *)(v8
                                       + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group));
    swift_release();
    dispatch_group_leave(v9);
  }
  Signpost.OpenSignpost.end()();
}

uint64_t TemplatingOperation.onComplete(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v30 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  __int16 v15 = (char *)&v29 - v14;
  uint64_t v16 = *(void *)(v3
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group);
  static DispatchTime.now()();
  if (one-time initialization token for timeout != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for DispatchTimeInterval();
  __swift_project_value_buffer(v17, (uint64_t)static TemplatingOperationManager.timeout);
  + infix(_:_:)();
  os_log_type_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  uint64_t v32 = v16;
  char v19 = OS_dispatch_group.wait(timeout:)();
  v18(v15, v9);
  if (v19)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      BOOL v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "Timed out waiting on TemplatingResult, returning .noResult", v23, 2u);
      swift_slowDealloc();
    }
  }
  type metadata accessor for OS_dispatch_queue();
  uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = v33;
  void v25[2] = v30;
  v25[3] = v26;
  v25[4] = v3;
  aBlock[4] = partial apply for closure #1 in TemplatingOperation.onComplete(_:);
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_31;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v36 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v34);
  return swift_release();
}

uint64_t closure #1 in TemplatingOperation.onComplete(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3
     + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result;
  swift_beginAccess();
  outlined init with copy of Result<TemplatingResult, Error>(v8, (uint64_t)v7);
  a1(v7);
  return outlined destroy of SubmitCommandError?((uint64_t)v7, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
}

uint64_t TemplatingOperation.deinit()
{
  outlined destroy of SubmitCommandError?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group));
  swift_release();
  return v0;
}

uint64_t TemplatingOperation.__deallocating_deinit()
{
  TemplatingOperation.deinit();

  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for TemplatingOperation()
{
  return type metadata accessor for TemplatingOperation();
}

void type metadata completion function for TemplatingOperation()
{
  type metadata accessor for Result<TemplatingResult, Error>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for Result<TemplatingResult, Error>()
{
  if (!lazy cache variable for type metadata for Result<TemplatingResult, Error>)
  {
    type metadata accessor for TemplatingResult();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
    unint64_t v0 = type metadata accessor for Result();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Result<TemplatingResult, Error>);
    }
  }
}

uint64_t sub_3F7834()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in TemplatingOperation.onComplete(_:)()
{
  return closure #1 in TemplatingOperation.onComplete(_:)(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_3F7880()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in TemplatingOperation.start(on:)()
{
  if (*(unsigned char *)(v0 + 49)) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return closure #1 in TemplatingOperation.start(on:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v1 | *(unsigned __int8 *)(v0 + 48));
}

uint64_t objectdestroy_36Tm()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 50, 7);
}

void partial apply for closure #1 in closure #1 in TemplatingOperation.start(on:)(uint64_t a1)
{
}

uint64_t outlined assign with take of Result<TemplatingResult, Error>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_3F79B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>?) -> ()(uint64_t a1)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>?) -> ()(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_124(uint64_t result)
{
  *(void *)(result + 16) = *(void *)(v8 - 184);
  *(void *)(result + 24) = v5;
  uint64_t v9 = *(void *)(v8 - 176);
  *(void *)(result + 32) = v4;
  *(void *)(result + 40) = v9;
  *(void *)(result + 48) = v1;
  *(void *)(result + 56) = v3;
  *(void *)(result + 64) = v2;
  *(void *)(result + 72) = v7;
  *(unsigned char *)(result + 80) = v6;
  *(unsigned char *)(result + 81) = HIBYTE(v6) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_109()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_6_97()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_88()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_99()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OUTLINED_FUNCTION_9_77(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 184) = a1;
  *(void *)(v3 - 176) = a3;
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t DeviceState.siriInputLocale.getter()
{
  uint64_t v0 = dispatch thunk of DeviceState.preferencesLanguageCode.getter();
  if (v1)
  {
    return Locale.init(identifier:)(v0);
  }
  else
  {
    return dispatch thunk of DeviceState.siriLocale.getter();
  }
}

void DeviceState.isStandaloneIOS.getter()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_27();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_31_12();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_49_11();
  dispatch thunk of DeviceState.isPhone.getter();
  OUTLINED_FUNCTION_11_74();
  OUTLINED_FUNCTION_8_48();
  v1();
  if (v0)
  {
    char v7 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_38();
    char v7 = dispatch thunk of DeviceState.isPad.getter();
  }
  uint64_t v8 = *(void (**)(void))(v3 + 8);
  OUTLINED_FUNCTION_0_35();
  v8();
  OUTLINED_FUNCTION_8_48();
  v1();
  if (v7)
  {
    OUTLINED_FUNCTION_0_35();
    v8();
    OUTLINED_FUNCTION_8_48();
    v1();
LABEL_7:
    dispatch thunk of DeviceState.isCarPlay.getter();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_15_58();
  char v9 = dispatch thunk of DeviceState.isPod.getter();
  OUTLINED_FUNCTION_0_35();
  v8();
  OUTLINED_FUNCTION_8_48();
  v1();
  if (v9) {
    goto LABEL_7;
  }
LABEL_8:
  OUTLINED_FUNCTION_0_35();
  v8();
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_26_1();
}

void DeviceState.isSiriEmergencyCallingUnsupported.getter()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_46_0();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_31_12();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_49_11();
  dispatch thunk of DeviceState.isPad.getter();
  OUTLINED_FUNCTION_11_74();
  OUTLINED_FUNCTION_8_48();
  v1();
  if (v0) {
    char v7 = 1;
  }
  else {
    char v7 = dispatch thunk of DeviceState.isPod.getter();
  }
  uint64_t v8 = *(void (**)(void))(v3 + 8);
  OUTLINED_FUNCTION_0_35();
  v8();
  OUTLINED_FUNCTION_8_48();
  v1();
  if (v7)
  {
    OUTLINED_FUNCTION_0_35();
    v8();
    OUTLINED_FUNCTION_8_48();
    v1();
  }
  else
  {
    OUTLINED_FUNCTION_15_58();
    char v9 = dispatch thunk of DeviceState.isMac.getter();
    OUTLINED_FUNCTION_0_35();
    v8();
    OUTLINED_FUNCTION_8_48();
    v1();
    if ((v9 & 1) == 0) {
      dispatch thunk of DeviceState.isXRDevice.getter();
    }
  }
  OUTLINED_FUNCTION_0_35();
  v8();
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_26_1();
}

void DeviceState.isGroupFaceTimeDeviceUnsupported(app:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_24_0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  OUTLINED_FUNCTION_1();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_27();
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_31_12();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&a9 - v29;
  Swift::Bool v31 = App.isFirstParty()();
  uint64_t v32 = *(void (**)(void))(v25 + 16);
  OUTLINED_FUNCTION_8_48();
  v32();
  if (v31)
  {
    OUTLINED_FUNCTION_38();
    char v33 = dispatch thunk of DeviceState.isWatch.getter();
    OUTLINED_FUNCTION_8_48();
    v32();
    if (v33)
    {
      char v34 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_38();
      char v34 = dispatch thunk of DeviceState.isHomePod.getter();
    }
    uint64_t v36 = *(void (**)(void))(v25 + 8);
    OUTLINED_FUNCTION_0_35();
    v36();
    OUTLINED_FUNCTION_8_48();
    v32();
    if ((v34 & 1) == 0)
    {
      OUTLINED_FUNCTION_38();
      dispatch thunk of DeviceState.isMac.getter();
    }
    OUTLINED_FUNCTION_0_35();
    v36();
    ((void (*)(char *, uint64_t))v36)(v30, v23);
  }
  else
  {
    OUTLINED_FUNCTION_0_35();
    v35();
  }
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_26_1();
}

void DeviceState.isSearchCallHistoryUnavailable(app:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v23[2] = v6;
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_5_8();
  v23[1] = v10;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v23 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  char v16 = dispatch thunk of DeviceState.isAppleTV.getter();
  uint64_t v17 = *(void (**)(void))(v8 + 16);
  OUTLINED_FUNCTION_42_11();
  v17();
  v23[3] = v3;
  if (v16)
  {
    char v18 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_0();
    char v18 = dispatch thunk of DeviceState.isMac.getter();
  }
  char v19 = *(void (**)(void))(v8 + 8);
  OUTLINED_FUNCTION_53_8();
  v19();
  OUTLINED_FUNCTION_42_11();
  v17();
  if (v18)
  {
    OUTLINED_FUNCTION_53_8();
    v19();
    ((void (*)(char *, uint64_t, uint64_t))v17)(v14, v1, v5);
    goto LABEL_15;
  }
  if (dispatch thunk of DeviceState.isWatch.getter())
  {
    Swift::Bool v20 = App.isFirstParty()();
    OUTLINED_FUNCTION_53_8();
    v19();
    OUTLINED_FUNCTION_42_11();
    v17();
    if (v20) {
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_53_8();
    v19();
    OUTLINED_FUNCTION_42_11();
    v17();
  }
  OUTLINED_FUNCTION_15_58();
  char v21 = dispatch thunk of DeviceState.isHomePod.getter();
  OUTLINED_FUNCTION_42_11();
  v17();
  if (v21)
  {
    OUTLINED_FUNCTION_53_8();
    v19();
LABEL_14:
    App.isFirstParty()();
    goto LABEL_15;
  }
  char v22 = dispatch thunk of DeviceState.isPad.getter();
  OUTLINED_FUNCTION_53_8();
  v19();
  if (v22) {
    goto LABEL_14;
  }
LABEL_15:
  OUTLINED_FUNCTION_53_8();
  v19();
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_26_1();
}

void DeviceState.requiresAppForFaceTime.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_8();
  uint64_t v16 = v8;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_31_12();
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  dispatch thunk of DeviceState.isPhone.getter();
  OUTLINED_FUNCTION_19_43();
  OUTLINED_FUNCTION_42_11();
  v1();
  if (v0)
  {
    char v12 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_0();
    char v12 = dispatch thunk of DeviceState.isPad.getter();
  }
  uint64_t v13 = *(void (**)(void))(v6 + 8);
  OUTLINED_FUNCTION_12_1();
  v13();
  OUTLINED_FUNCTION_42_11();
  v1();
  if (v12)
  {
    OUTLINED_FUNCTION_12_1();
    v13();
    OUTLINED_FUNCTION_42_11();
    v1();
  }
  else
  {
    char v14 = dispatch thunk of DeviceState.isPod.getter();
    OUTLINED_FUNCTION_12_1();
    v13();
    OUTLINED_FUNCTION_42_11();
    v1();
    if ((v14 & 1) == 0)
    {
      char v15 = dispatch thunk of DeviceState.isCarPlay.getter();
      OUTLINED_FUNCTION_12_1();
      v13();
      OUTLINED_FUNCTION_42_11();
      v1();
      if ((v15 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  OUTLINED_FUNCTION_12_1();
  v13();
  ((void (*)(uint64_t, uint64_t, uint64_t))v1)(v16, v2, v4);
LABEL_8:
  dispatch thunk of DeviceState.isXRDevice.getter();
LABEL_9:
  OUTLINED_FUNCTION_12_1();
  v13();
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_26_1();
}

void DeviceState.isSendingFaceTimeLinkDeviceUnsupported(app:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_6_44();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_49_11();
  dispatch thunk of DeviceState.isWatch.getter();
  OUTLINED_FUNCTION_11_74();
  OUTLINED_FUNCTION_23_44();
  v3();
  if (v0) {
    char v10 = 1;
  }
  else {
    char v10 = dispatch thunk of DeviceState.isHomePod.getter();
  }
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v2, v5);
  OUTLINED_FUNCTION_23_44();
  v3();
  if ((v10 & 1) == 0) {
    dispatch thunk of DeviceState.isMac.getter();
  }
  v11(v1, v5);
  App.isFirstParty()();
  OUTLINED_FUNCTION_26_1();
}

uint64_t OUTLINED_FUNCTION_11_74()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_47()
{
  return v0;
}

uint64_t SeasAppUsageRule.__allocating_init(trialSmartAppSelectionConfigProvider:appUsageProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SeasAppUsageRule.init(trialSmartAppSelectionConfigProvider:appUsageProvider:)(a1, a2);
  return v4;
}

void *SeasAppUsageRule.init(trialSmartAppSelectionConfigProvider:appUsageProvider:)(uint64_t a1, uint64_t a2)
{
  v2[4] = type metadata accessor for SeasAppUsageRule();
  v2[5] = &outlined read-only object #0 of SeasAppUsageRule.init(trialSmartAppSelectionConfigProvider:appUsageProvider:);
  v2[6] = 0;
  v2[7] = 0;
  v2[2] = a2;
  v2[3] = a1;
  return v2;
}

uint64_t SeasAppUsageRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a2;
  uint64_t v7[5] = a5;
  v7[3] = a1;
  return _swift_task_switch(SeasAppUsageRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:), 0, 0);
}

uint64_t SeasAppUsageRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)()
{
  uint64_t v267 = v0;
  uint64_t v2 = (void *)v0;
  if (((*(uint64_t (**)(uint64_t, void))(**(void **)(*(void *)(v0 + 56) + 24) + 96))(2, *(void *)(v0 + 32)) & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_44_4();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    BOOL v23 = OUTLINED_FUNCTION_31_31(v22);
    uint64_t v24 = *(void **)(v0 + 56);
    if (v23)
    {
      uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_5_22();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_13_58();
      *(_DWORD *)uint64_t v25 = 136315138;
      buf = v25;
      uint64_t v26 = v2;
      uint64_t v27 = v24[4];
      uint64_t v2 = (void *)v24[5];
      uint64_t v28 = v24[6];
      uint64_t v29 = v24[7];
      uint64_t v265 = 0;
      unint64_t v266 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v27, (uint64_t)v2, v28, v29);
      OUTLINED_FUNCTION_12_60();
      uint64_t v30 = swift_bridgeObjectRelease();
      void v26[2] = OUTLINED_FUNCTION_1_108(v30, v31, v32, v33, v34, v35, v36, v37, (uint64_t)v233, (uint64_t)log, v236, v239, v244, v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_10();
      Swift::Bool v20 = "%s is not enabled via trial, directly return noMatchFound";
      goto LABEL_27;
    }
LABEL_28:
    OUTLINED_FUNCTION_39_10();
    goto LABEL_29;
  }
  static SeasRulesHelper.getContactDonationInfo(phoneCallNLIntent:appBundleIds:)(*(void **)(v0 + 40), *(void *)(v0 + 48));
  if (v5)
  {
    uint64_t v6 = v3;
    char v7 = v4;
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0 && !v6)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_44_4();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_31_31(v10))
      {
        OUTLINED_FUNCTION_5_22();
        OUTLINED_FUNCTION_14_0();
        OUTLINED_FUNCTION_13_58();
        OUTLINED_FUNCTION_2_125(4.8149e-34);
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_10_69();
        OUTLINED_FUNCTION_12_60();
        uint64_t v11 = swift_bridgeObjectRelease();
        uint64_t v19 = OUTLINED_FUNCTION_1_108(v11, v12, v13, v14, v15, v16, v17, v18, (uint64_t)v233, (uint64_t)log, v236, v239, v244, v248);
        OUTLINED_FUNCTION_15_59(v19);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_39_10();
        Swift::Bool v20 = "%s current contact only exists for 1p, skip app usage rule";
LABEL_27:
        _os_log_impl(&dword_0, v9, (os_log_type_t)v1, v20, buf, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
LABEL_29:

        uint64_t v133 = (uint64_t *)v2[3];
        uint64_t v134 = (unsigned int *)&enum case for AppMatchResolution.noMatchFound(_:);
        goto LABEL_30;
      }
      goto LABEL_28;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_44_4();
  swift_bridgeObjectRetain_n();
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.debug.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v43 = *(void *)(v0 + 56);
  buf = (uint8_t *)v39;
  if (v42)
  {
    unint64_t v1 = swift_slowAlloc();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_13_58();
    *(_DWORD *)unint64_t v1 = 136315394;
    uint64_t v44 = v0;
    uint64_t v2 = *(void **)(v43 + 40);
    uint64_t v45 = *(void *)(v43 + 56);
    uint64_t v265 = 0;
    unint64_t v266 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = OUTLINED_FUNCTION_16_59();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v46, v47, v48, v45);
    OUTLINED_FUNCTION_12_60();
    uint64_t v49 = swift_bridgeObjectRelease();
    *(void *)(v44 + 16) = OUTLINED_FUNCTION_1_108(v49, v50, v51, v52, v53, v54, v55, v56, (uint64_t)v233, (uint64_t)log, v236, v239, v244, v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_3();
    *(_WORD *)(v1 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v57 = Array.description.getter();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    v2[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v59, &v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_40();
    _os_log_impl(&dword_0, v40, v41, "%s candidate appIdToApp: %s", (uint8_t *)v1, 0x16u);
    OUTLINED_FUNCTION_28_39();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_17_40();
  }

  uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v2[7] + 16) + 80);
  uint64_t v61 = swift_bridgeObjectRetain();
  uint64_t v62 = v60(v61, 7);
  swift_bridgeObjectRelease();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.debug.getter();
  BOOL v65 = os_log_type_enabled(v63, v64);
  uint64_t v66 = v2[7];
  if (v65)
  {
    uint64_t v67 = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_13_58();
    *(_DWORD *)uint64_t v67 = 136315650;
    uint64_t v68 = *(void *)(v66 + 56);
    uint64_t v265 = 0;
    unint64_t v266 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v69 = OUTLINED_FUNCTION_16_59();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v69, v70, v71, v68);
    swift_bridgeObjectRelease();
    uint64_t v72 = swift_bridgeObjectRelease();
    v2[2] = OUTLINED_FUNCTION_3_110(v72, v73, v74, v75, v76, v77, v78, v79, (uint64_t)v233, (uint64_t)log, v236, v239, v244, v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_3();
    *(_WORD *)(v67 + 12) = 2048;
    v2[2] = 7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 22) = 2080;
    type metadata accessor for NSNumber();
    swift_bridgeObjectRetain();
    uint64_t v80 = Dictionary.description.getter();
    unint64_t v1 = v81;
    swift_bridgeObjectRelease();
    v2[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v1, &v264);
    OUTLINED_FUNCTION_5_79();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_40();
    _os_log_impl(&dword_0, v63, v64, "%s app usage in last %ld days: %s", (uint8_t *)v67, 0x20u);
    OUTLINED_FUNCTION_28_39();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_17_40();
  }

  id v82 = specialized Sequence.max(by:)(v62);
  unint64_t v263 = v84;
  if (!v84)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_4();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v123 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_31_31(v123))
    {
      OUTLINED_FUNCTION_5_22();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_13_58();
      OUTLINED_FUNCTION_2_125(4.8149e-34);
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_10_69();
      OUTLINED_FUNCTION_12_60();
      uint64_t v124 = swift_bridgeObjectRelease();
      uint64_t v132 = OUTLINED_FUNCTION_1_108(v124, v125, v126, v127, v128, v129, v130, v131, (uint64_t)v233, (uint64_t)log, v236, v239, v244, v248);
      OUTLINED_FUNCTION_15_59(v132);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_10();
      Swift::Bool v20 = "%s can't find maxUsage app, this not expected";
      goto LABEL_27;
    }
    goto LABEL_28;
  }
  uint64_t v85 = (uint64_t)v82;
  uint64_t v86 = v83;
  swift_bridgeObjectRetain_n();
  id v87 = v86;
  uint64_t v88 = specialized _NativeDictionary.filter(_:)(v62, v85, v263, v87);
  swift_bridgeObjectRelease();
  id v89 = specialized Sequence.max(by:)(v88);
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  swift_release();
  if (v91)
  {
    uint64_t v254 = v85;
    v256 = v86;
    swift_bridgeObjectRetain_n();
    id v94 = v87;
    swift_bridgeObjectRetain_n();
    id v95 = v93;
    id v96 = v94;
    id v97 = v95;
    OUTLINED_FUNCTION_44_4();
    id v98 = v96;
    id v99 = v97;
    id v100 = v98;
    id v101 = v99;
    outlined copy of (key: String, value: NSNumber)?((uint64_t)v89, v91, v93);
    uint64_t v102 = Logger.logObject.getter();
    os_log_type_t v103 = static os_log_type_t.debug.getter();
    int v104 = v103;
    BOOL v105 = os_log_type_enabled(v102, v103);
    uint64_t v106 = (uint64_t)v89;
    os_log_type_t v107 = (void *)v2[7];
    v257 = (uint8_t *)v91;
    os_log_type_t type = v101;
    v245 = v93;
    uint64_t v249 = v106;
    if (v105)
    {
      uint64_t v108 = swift_slowAlloc();
      uint64_t v234 = swift_slowAlloc();
      uint64_t v240 = swift_slowAlloc();
      uint64_t v264 = v240;
      *(_DWORD *)uint64_t v108 = 136316162;
      LODWORD(v236) = v104;
      v253 = v100;
      uint64_t v109 = v2;
      uint64_t v110 = v107[4];
      uint64_t v2 = (void *)v107[5];
      uint64_t v111 = v107[6];
      uint64_t v112 = v107[7];
      uint64_t v265 = 0;
      unint64_t v266 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v110, (uint64_t)v2, v111, v112);
      OUTLINED_FUNCTION_12_60();
      uint64_t v113 = swift_bridgeObjectRelease();
      v109[2] = OUTLINED_FUNCTION_3_110(v113, v114, v115, v116, v117, v118, v119, v120, v234, (uint64_t)v102, v236, v240, (uint64_t)v245, v249);
      OUTLINED_FUNCTION_5_79();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v108 + 12) = 2080;
      swift_bridgeObjectRetain();
      v109[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v254, v263, &v264);
      OUTLINED_FUNCTION_5_79();
      swift_bridgeObjectRelease_n();

      *(_WORD *)(v108 + 22) = 2112;
      v109[2] = v253;
      id v121 = v253;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v233 = v256;
      swift_bridgeObjectRelease_n();

      *(_WORD *)(v108 + 32) = 2080;
      swift_bridgeObjectRetain();
      v2[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v249, (unint64_t)v257, &v264);
      OUTLINED_FUNCTION_5_79();
      swift_bridgeObjectRelease_n();

      *(_WORD *)(v108 + 42) = 2112;
      uint64_t v93 = v245;
      v2[2] = type;
      id v122 = type;
      uint64_t v91 = (uint64_t)v257;
      id v100 = v253;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v233[1] = v245;
      swift_bridgeObjectRelease_n();

      _os_log_impl(&dword_0, log, (os_log_type_t)v236, "%s find maxUsage %s:%@ and secondMaxUsage: %s:%@", (uint8_t *)v108, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      id v101 = type;
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
    }
    [v101 doubleValue];
    if (v158 != 0.0)
    {
      [v100 doubleValue];
      double v160 = v159;
      [v101 doubleValue];
      if (v160 / v161 < 3.0)
      {
        [v100 doubleValue];
        double v163 = v162;
        [v101 doubleValue];
        double v165 = v163 / v164;
        swift_retain();
        swift_bridgeObjectRetain();
        id v166 = v100;
        if (v165 >= 2.0)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          id v211 = v166;
          uint64_t v212 = Logger.logObject.getter();
          os_log_type_t v213 = static os_log_type_t.debug.getter();
          int v214 = v213;
          BOOL v215 = os_log_type_enabled(v212, v213);
          long long v216 = v2;
          uint64_t v217 = v2[7];
          if (v215)
          {
            uint64_t v218 = swift_slowAlloc();
            uint64_t v264 = OUTLINED_FUNCTION_10_0();
            *(_DWORD *)uint64_t v218 = 136315906;
            LODWORD(v239) = v214;
            uint64_t v220 = *(void *)(v217 + 48);
            uint64_t v219 = *(void *)(v217 + 56);
            uint64_t v265 = 0;
            unint64_t v266 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v221 = OUTLINED_FUNCTION_19_44();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v221, v222, v220, v219);
            swift_bridgeObjectRelease();
            uint64_t v223 = swift_bridgeObjectRelease();
            v216[2] = OUTLINED_FUNCTION_3_110(v223, v224, v225, v226, v227, v228, v229, v230, (uint64_t)v233, (uint64_t)log, v236, v239, (uint64_t)v245, v249);
            OUTLINED_FUNCTION_5_79();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_0();
            *(_WORD *)(v218 + 12) = 2048;
            OUTLINED_FUNCTION_11_75(0x4008000000000000);
            *(_WORD *)(v218 + 22) = 2048;
            OUTLINED_FUNCTION_11_75(0x4000000000000000);
            *(_WORD *)(v218 + 32) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v231 = v254;
            v216[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v254, v263, &v264);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();

            _os_log_impl(&dword_0, v238, v243, "%s maxUsage/secondMaxUsage <= %f and >= %f, return needsConfirmation %s", (uint8_t *)v218, 0x2Au);
            OUTLINED_FUNCTION_27_39();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();

            swift_bridgeObjectRelease();
            outlined consume of (key: String, value: NSNumber)?(v252, (uint64_t)v257, v247);
            outlined consume of (key: String, value: NSNumber)?(v254, v263, v256);
          }
          else
          {
            uint64_t v231 = v254;
            outlined consume of (key: String, value: NSNumber)?(v254, v263, v256);
            outlined consume of (key: String, value: NSNumber)?(v249, v91, v93);
            swift_bridgeObjectRelease();

            OUTLINED_FUNCTION_4_0();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v2 = v216;
          uint64_t v133 = (uint64_t *)v216[3];

          uint64_t *v133 = v231;
          v133[1] = v263;
          uint64_t v134 = (unsigned int *)&enum case for AppMatchResolution.needsConfirmation(_:);
        }
        else
        {
          swift_bridgeObjectRetain_n();
          id v167 = v101;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v168 = (uint8_t *)v166;
          id v169 = v167;
          uint64_t v170 = Logger.logObject.getter();
          os_log_type_t v171 = static os_log_type_t.debug.getter();
          int v172 = v171;
          BOOL v173 = os_log_type_enabled(v170, v171);
          uint64_t v174 = v2;
          uint64_t v175 = v2[7];
          if (v173)
          {
            bufa = v168;
            uint64_t v176 = swift_slowAlloc();
            uint64_t v264 = swift_slowAlloc();
            *(_DWORD *)uint64_t v176 = 136315906;
            LODWORD(v239) = v172;
            unint64_t v177 = v91;
            uint64_t v178 = *(void *)(v175 + 48);
            uint64_t v179 = *(void *)(v175 + 56);
            uint64_t v265 = 0;
            unint64_t v266 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v180 = OUTLINED_FUNCTION_19_44();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v180, v181, v178, v179);
            swift_bridgeObjectRelease();
            uint64_t v91 = v177;
            uint64_t v182 = swift_bridgeObjectRelease();
            v174[2] = OUTLINED_FUNCTION_3_110(v182, v183, v184, v185, v186, v187, v188, v189, (uint64_t)v233, v176 + 4, v236, v239, (uint64_t)v245, v249);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_0();
            *(_WORD *)(v176 + 12) = 2048;
            OUTLINED_FUNCTION_11_75(0x4000000000000000);
            *(_WORD *)(v176 + 22) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v190 = v254;
            v174[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v254, v263, &v264);
            OUTLINED_FUNCTION_5_79();
            swift_bridgeObjectRelease_n();

            *(_WORD *)(v176 + 32) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v191 = v250;
            v174[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v250, v177, &v264);
            OUTLINED_FUNCTION_5_79();
            swift_bridgeObjectRelease_n();

            _os_log_impl(&dword_0, v237, v241, "%s maxUsage/secondMaxUsage <= %f, return needsDisambiguation between %s and %s", (uint8_t *)v176, 0x2Au);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            uint64_t v168 = bufa;
            OUTLINED_FUNCTION_6();

            uint64_t v2 = v174;
          }
          else
          {
            OUTLINED_FUNCTION_4_0();
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease_n();
            uint64_t v2 = v174;
            uint64_t v190 = v254;
            uint64_t v191 = v249;
          }
          uint64_t v133 = (uint64_t *)v2[3];
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
          uint64_t v232 = swift_allocObject();
          *(_OWORD *)(v232 + 16) = xmmword_467720;
          *(void *)(v232 + 32) = v190;
          *(void *)(v232 + 40) = v263;
          *(void *)(v232 + 48) = v191;
          *(void *)(v232 + 56) = v91;
          swift_bridgeObjectRetain();
          outlined consume of (key: String, value: NSNumber)?(v190, v263, v256);

          outlined consume of (key: String, value: NSNumber)?(v191, v91, v245);
          swift_bridgeObjectRelease();

          uint64_t *v133 = v232;
          uint64_t v134 = (unsigned int *)&enum case for AppMatchResolution.needsDisambiguation(_:);
        }
        goto LABEL_30;
      }
    }
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v192 = (uint8_t *)v100;
    uint64_t v193 = Logger.logObject.getter();
    os_log_type_t v194 = static os_log_type_t.debug.getter();
    BOOL v195 = os_log_type_enabled(v193, v194);
    uint64_t v196 = v2;
    uint64_t v197 = (void *)v2[7];
    if (v195)
    {
      uint64_t v198 = OUTLINED_FUNCTION_14_0();
      uint64_t v264 = OUTLINED_FUNCTION_10_0();
      *(_DWORD *)uint64_t v198 = 136315650;
      uint64_t v199 = v197[4];
      uint64_t v200 = v197[5];
      bufb = v192;
      uint64_t v201 = v197[6];
      uint64_t v202 = v197[7];
      uint64_t v265 = 0;
      unint64_t v266 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v199, v200, v201, v202);
      swift_bridgeObjectRelease();
      uint64_t v203 = swift_bridgeObjectRelease();
      v196[2] = OUTLINED_FUNCTION_1_108(v203, v204, v205, v206, v207, v208, v209, v210, (uint64_t)v233, (uint64_t)log, v198 + 4, (uint64_t)v193, (uint64_t)v245, v249);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_4_0();
      *(_WORD *)(v198 + 12) = 2048;
      v196[2] = 0x4008000000000000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v198 + 22) = 2080;
      swift_bridgeObjectRetain();
      v196[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v254, v263, &v264);
      uint64_t v85 = v254;
      uint64_t v192 = bufb;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();

      _os_log_impl(&dword_0, v242, v194, "%s maxUsage/secondMaxUsage >= %f, return resolved %s", (uint8_t *)v198, 0x20u);
      OUTLINED_FUNCTION_27_39();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      swift_bridgeObjectRelease();
      outlined consume of (key: String, value: NSNumber)?(v251, (uint64_t)v257, v246);
      outlined consume of (key: String, value: NSNumber)?(v254, v263, v256);
    }
    else
    {
      uint64_t v85 = v254;
      outlined consume of (key: String, value: NSNumber)?(v254, v263, v256);
      outlined consume of (key: String, value: NSNumber)?(v249, v91, v93);
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_4_0();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v2 = v196;
    uint64_t v133 = (uint64_t *)v196[3];
  }
  else
  {
    OUTLINED_FUNCTION_44_4();
    uint64_t v139 = Logger.logObject.getter();
    os_log_type_t v140 = static os_log_type_t.debug.getter();
    BOOL v141 = os_log_type_enabled(v139, v140);
    unint64_t v142 = (void *)v2[7];
    if (v141)
    {
      uint64_t v143 = (uint8_t *)OUTLINED_FUNCTION_5_22();
      uint64_t v264 = OUTLINED_FUNCTION_14_0();
      v258 = v143;
      *(_DWORD *)uint64_t v143 = 136315138;
      uint64_t v255 = v85;
      uint64_t v145 = v142[4];
      uint64_t v144 = v142[5];
      uint64_t v146 = v2;
      uint64_t v148 = v142[6];
      uint64_t v147 = v142[7];
      uint64_t v265 = 0;
      unint64_t v266 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v149 = v148;
      uint64_t v2 = v146;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v145, v144, v149, v147);
      uint64_t v85 = v255;
      swift_bridgeObjectRelease();
      uint64_t v150 = swift_bridgeObjectRelease();
      v146[2] = OUTLINED_FUNCTION_1_108(v150, v151, v152, v153, v154, v155, v156, v157, (uint64_t)v233, (uint64_t)log, v236, v239, v244, v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_3();
      _os_log_impl(&dword_0, v139, v140, "%s can't find secondMaxUsage app, select max usage app", v258, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      outlined consume of (key: String, value: NSNumber)?(v255, v263, v86);
    }
    else
    {
      outlined consume of (key: String, value: NSNumber)?(v85, v263, v86);
      OUTLINED_FUNCTION_14_3();
    }
    uint64_t v133 = (uint64_t *)v2[3];
  }
  uint64_t *v133 = v85;
  v133[1] = v263;
  uint64_t v134 = (unsigned int *)&enum case for AppMatchResolution.resolved(_:);
LABEL_30:
  uint64_t v135 = *v134;
  uint64_t matched = type metadata accessor for AppMatchResolution();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(matched - 8) + 104))(v133, v135, matched);
  uint64_t v137 = (uint64_t (*)(void))v2[1];
  return v137();
}

id specialized Sequence.max(by:)(uint64_t a1)
{
  id result = (id)specialized _NativeDictionary.makeIterator()(a1, &v26);
  uint64_t v25 = v27;
  if (!v30)
  {
    int64_t v21 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      goto LABEL_44;
    }
    int64_t v4 = (unint64_t)(v28 + 64) >> 6;
    if (v21 < v4)
    {
      unint64_t v22 = *(void *)(v27 + 8 * v21);
      int64_t v5 = v29 + 1;
      if (v22)
      {
LABEL_29:
        unint64_t v2 = (v22 - 1) & v22;
        unint64_t v3 = __clz(__rbit64(v22)) + (v5 << 6);
        goto LABEL_3;
      }
      int64_t v5 = v29 + 2;
      if (v29 + 2 < v4)
      {
        unint64_t v22 = *(void *)(v27 + 8 * v5);
        if (v22) {
          goto LABEL_29;
        }
        int64_t v5 = v29 + 3;
        if (v29 + 3 < v4)
        {
          unint64_t v22 = *(void *)(v27 + 8 * v5);
          if (v22) {
            goto LABEL_29;
          }
          int64_t v5 = v29 + 4;
          if (v29 + 4 < v4)
          {
            unint64_t v22 = *(void *)(v27 + 8 * v5);
            if (v22) {
              goto LABEL_29;
            }
            int64_t v5 = v29 + 5;
            if (v29 + 5 < v4)
            {
              unint64_t v22 = *(void *)(v27 + 8 * v5);
              if (!v22)
              {
                int64_t v23 = v29 + 6;
                do
                {
                  if (v23 >= v4) {
                    goto LABEL_42;
                  }
                  unint64_t v22 = *(void *)(v27 + 8 * v23++);
                }
                while (!v22);
                int64_t v5 = v23 - 1;
              }
              goto LABEL_29;
            }
          }
        }
      }
    }
LABEL_42:
    swift_bridgeObjectRetain();
    outlined release of _NativeDictionary<String, Double>.Iterator((uint64_t)&v26);
    return 0;
  }
  unint64_t v2 = (v30 - 1) & v30;
  unint64_t v3 = __clz(__rbit64(v30)) | (v29 << 6);
  int64_t v4 = (unint64_t)(v28 + 64) >> 6;
  int64_t v5 = v29;
LABEL_3:
  uint64_t v6 = v26;
  uint64_t v24 = *(void *)(*(void *)(v26 + 48) + 16 * v3);
  char v7 = *(void **)(*(void *)(v26 + 56) + 8 * v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id result = v7;
  uint64_t v8 = result;
  while (1)
  {
    if (v2)
    {
      unint64_t v9 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v4) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v25 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v4) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v4) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v4) {
            goto LABEL_25;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v4) {
              goto LABEL_25;
            }
            unint64_t v12 = *(void *)(v25 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v4)
              {
                unint64_t v12 = *(void *)(v25 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_21;
                }
              }
LABEL_25:
              swift_release();
              return (id)v24;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v2 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(v6 + 48) + 16 * v10);
    uint64_t v16 = *(void **)(*(void *)(v6 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v17 = v16;
    [v8 doubleValue];
    double v19 = v18;
    [v17 doubleValue];
    if (v19 < v20)
    {

      id result = (id)swift_bridgeObjectRelease();
      uint64_t v8 = v17;
      uint64_t v24 = v15;
    }
    else
    {

      id result = (id)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

Swift::String __swiftcall SeasAppUsageRule.getName()()
{
  uint64_t v0 = (void *)0x8000000000489560;
  uint64_t v1 = 0xD000000000000010;
  result._object = v0;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t SeasAppUsageRule.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SeasAppUsageRule.__deallocating_deinit()
{
  SeasAppUsageRule.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for SeasRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:) in conformance SeasAppUsageRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v6
                                                                                                 + 112)
                                                                                     + **(int **)(**(void **)v6 + 112));
  int64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *int64_t v14 = v7;
  v14[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for SeasRule.getName() in conformance SeasAppUsageRule()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t type metadata accessor for SeasAppUsageRule()
{
  return self;
}

void outlined consume of (key: String, value: NSNumber)?(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

void outlined copy of (key: String, value: NSNumber)?(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v3 = a3;
  }
}

void specialized _NativeDictionary.extractDictionary(using:count:)(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  OUTLINED_FUNCTION_23_45();
  if (v6)
  {
    swift_retain();
    return;
  }
  uint64_t v7 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _DictionaryStorage<String, Double>);
  uint64_t v8 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = v8;
  uint64_t v32 = v7;
  if (v7 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v8 + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_26;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_40;
    }
    if (v15 >= v32) {
      return;
    }
    unint64_t v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v32) {
        return;
      }
      unint64_t v16 = a1[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v32) {
          return;
        }
        unint64_t v16 = a1[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_26:
    double v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + 8 * v14);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    unint64_t v22 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v9 + 32));
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_7_25();
      while (++v24 != v25 || (v23 & 1) == 0)
      {
        BOOL v26 = v24 == v25;
        if (v24 == v25) {
          uint64_t v24 = 0;
        }
        v23 |= v26;
        if (*(void *)(v12 + 8 * v24) != -1)
        {
          OUTLINED_FUNCTION_2_34();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_3_5();
LABEL_35:
    OUTLINED_FUNCTION_17_9();
    *(void *)(v12 + v27) |= v28;
    unint64_t v30 = (void *)(*(void *)(v9 + 48) + 16 * v29);
    *unint64_t v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v29) = v21;
    OUTLINED_FUNCTION_18_42();
    if (v31) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v32) {
    return;
  }
  unint64_t v16 = a1[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v32) {
      return;
    }
    unint64_t v16 = a1[v11];
    ++v17;
    if (v16) {
      goto LABEL_25;
    }
  }
LABEL_41:
  __break(1u);
}

void specialized _NativeDictionary.extractDictionary(using:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  OUTLINED_FUNCTION_23_45();
  if (v7)
  {
    swift_retain();
    return;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, [INCallGroup]>);
  uint64_t v10 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v11 = v10;
  uint64_t v34 = v9;
  uint64_t v35 = v8;
  if (v8 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v9;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v10 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_26;
    }
    uint64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_40;
    }
    if (v17 >= v35) {
      return;
    }
    unint64_t v18 = v34[v17];
    ++v13;
    if (!v18)
    {
      uint64_t v13 = v17 + 1;
      if (v17 + 1 >= v35) {
        return;
      }
      unint64_t v18 = v34[v13];
      if (!v18)
      {
        uint64_t v13 = v17 + 2;
        if (v17 + 2 >= v35) {
          return;
        }
        unint64_t v18 = v34[v13];
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_26:
    uint64_t v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    unint64_t v24 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v11 + 32));
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_7_25();
      while (++v26 != v27 || (v25 & 1) == 0)
      {
        BOOL v28 = v26 == v27;
        if (v26 == v27) {
          uint64_t v26 = 0;
        }
        v25 |= v28;
        if (*(void *)(v14 + 8 * v26) != -1)
        {
          OUTLINED_FUNCTION_2_34();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_3_5();
LABEL_35:
    OUTLINED_FUNCTION_17_9();
    *(void *)(v14 + v29) |= v30;
    uint64_t v32 = (void *)(*(void *)(v11 + 48) + 16 * v31);
    *uint64_t v32 = v22;
    v32[1] = v21;
    *(void *)(*(void *)(v11 + 56) + 8 * v31) = v23;
    OUTLINED_FUNCTION_18_42();
    if (v33) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }
  uint64_t v19 = v17 + 3;
  if (v19 >= v35) {
    return;
  }
  unint64_t v18 = v34[v19];
  if (v18)
  {
    uint64_t v13 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v35) {
      return;
    }
    unint64_t v18 = v34[v13];
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_41:
  __break(1u);
}

uint64_t specialized _NativeDictionary.extractDictionary(using:count:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, NSNumber>);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  char v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v34) {
        return v9;
      }
      unint64_t v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v34) {
          return v9;
        }
        unint64_t v16 = v33[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v34) {
            return v9;
          }
          unint64_t v16 = v33[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v34) {
              return v9;
            }
            unint64_t v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v34) {
                  return v9;
                }
                unint64_t v16 = v33[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    unint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void **)(*(void *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    id v22 = v21;
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) == 0) {
      break;
    }
    unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v9 + 48) + 16 * v26);
    *uint64_t v31 = v20;
    v31[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v26) = v22;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v9;
    }
  }
  char v27 = 0;
  unint64_t v28 = (unint64_t)(63 - v23) >> 6;
  while (++v25 != v28 || (v27 & 1) == 0)
  {
    BOOL v29 = v25 == v28;
    if (v25 == v28) {
      unint64_t v25 = 0;
    }
    v27 |= v29;
    uint64_t v30 = *(void *)(v12 + 8 * v25);
    if (v30 != -1)
    {
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t specialized _NativeDictionary.makeIterator()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  uint64_t v16 = *(void *)(v14 - 104);
  unint64_t v17 = *(void *)(v14 - 96);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_2_125(float a1)
{
  float *v1 = a1;
  *(void *)(v2 - 104) = 0;
  *(void *)(v2 - 96) = 0xE000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  uint64_t v16 = *(void *)(v14 - 104);
  unint64_t v17 = *(void *)(v14 - 96);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, (uint64_t *)va);
}

void OUTLINED_FUNCTION_10_69()
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v2, v3, v0, v1);
}

uint64_t OUTLINED_FUNCTION_11_75@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_12_60()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_59(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_16_59()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_40()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_18_42()
{
  ++*(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_19_44()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_39()
{
  return swift_arrayDestroy();
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5Tm(a1, a2, a3, a4, (void (*)(BOOL, unint64_t, uint64_t))specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:), (uint64_t (*)(uint64_t *, uint64_t))outlined init with take of AppSelectionSignalComponent);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo12INCallRecordCG_So12SASTCardItemCs5NeverOTg5(void (*a1)(void), uint64_t a2, unint64_t a3)
{
  return _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo12INCallRecordCG_So12SASTCardItemCs5NeverOTg5Tm(a1, a2, a3);
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo12INCallRecordCG_27PhoneCallFlowDelegatePlugin27SCHRowCardSectionComponents_ps5NeverOTg5(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  while (v5)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v5 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v6 = 0;
    char v7 = v13;
    while (v5 != v6)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      OUTLINED_FUNCTION_17_41();
      v10();
      if (v3)
      {
        swift_release();

        return;
      }

      unint64_t v13 = v7;
      unint64_t v11 = v7[2];
      if (v11 >= v7[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        char v7 = v13;
      }
      ++v6;
      v7[2] = v11 + 1;
      outlined init with take of AppSelectionSignalComponent(&v12, (uint64_t)&v7[5 * v11 + 4]);
      if (v5 == v6) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    OUTLINED_FUNCTION_3_39();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8INPersonCG_Say11SiriKitFlow11DisplayHintVG12displayHints_AI13SemanticValueV02idM0ts5NeverOTg5(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
  uint64_t v17 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  while (v9)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v9 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v10 = 0;
    unint64_t v11 = v21;
    unint64_t v16 = a3 & 0xC000000000000001;
    while (v9 != v10)
    {
      if (v16) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a3 + 8 * v10 + 32);
      }
      unint64_t v13 = v12;
      id v20 = v12;
      v18(&v20);
      if (v4)
      {
        swift_release();

        return;
      }
      uint64_t v4 = 0;

      uint64_t v21 = v11;
      unint64_t v14 = v11[2];
      if (v14 >= v11[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v11 = v21;
      }
      ++v10;
      long long v11[2] = v14 + 1;
      outlined init with take of URL?((uint64_t)v8, (uint64_t)v11+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v14, &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
      if (v9 == v10) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin8SmsGroup_ps5NeverOTg5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5Tm(a1, a2, a3, a4, (void (*)(BOOL, unint64_t, uint64_t))specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:), (uint64_t (*)(uint64_t *, uint64_t))outlined init with take of AppSelectionSignalComponent);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(BOOL, unint64_t, uint64_t), uint64_t (*a6)(uint64_t *, uint64_t))
{
  unint64_t v7 = *(void *)(a3 + 16);
  id v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
    a5(0, v7, 0);
    id v8 = _swiftEmptyArrayStorage;
    uint64_t v10 = type metadata accessor for NonTerminalIntentNode();
    OUTLINED_FUNCTION_19_0(v10);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v14 = *(void *)(v13 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_17_41();
      v15();
      if (v6) {
        break;
      }
      uint64_t v31 = v8;
      unint64_t v17 = v8[2];
      unint64_t v16 = v8[3];
      if (v17 >= v16 >> 1) {
        a5(v16 > 1, v17 + 1, 1);
      }
      uint64_t v18 = v29;
      uint64_t v19 = v30;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
      OUTLINED_FUNCTION_1();
      __chkstk_darwin(v20);
      OUTLINED_FUNCTION_4();
      uint64_t v23 = v22 - v21;
      (*(void (**)(uint64_t))(v24 + 16))(v22 - v21);
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v23, (uint64_t *)&v31, v18, v19, a6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      id v8 = v31;
      v12 += v14;
      if (!--v7) {
        return v8;
      }
    }
    swift_release();
  }
  return v8;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay17SiriAppResolution0E0CG_0D8NLUTypes0D27_Nlu_External_UserDialogActVs5NeverOTg5(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v16 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v18 = v9;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  while (v10)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v10 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v11 = 0;
    uint64_t v12 = v20;
    while (v10 != v11)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v13 = *(void *)(a3 + 8 * v11 + 32);
        swift_retain();
      }
      uint64_t v19 = v13;
      a1(&v19);
      if (v4)
      {
        swift_release();
        swift_release();
        return;
      }
      uint64_t v4 = 0;
      swift_release();
      uint64_t v20 = v12;
      unint64_t v14 = v12[2];
      if (v14 >= v12[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v12 = v20;
      }
      ++v11;
      void v12[2] = v14 + 1;
      OUTLINED_FUNCTION_55_1();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))((char *)v12 + v15 + *(void *)(v7 + 72) * v14, v18, v16);
      if (v10 == v11) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo12INCallRecordCG_So12SASTCardItemCs5NeverOTg5Tm(void (*a1)(void), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v6) {
      break;
    }
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      OUTLINED_FUNCTION_17_41();
      a1();

      if (v3) {
        return (void *)swift_release();
      }
      ++v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      OUTLINED_FUNCTION_20_48();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v6 == v8) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    OUTLINED_FUNCTION_3_39();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF10Foundation8IndexSetV9RangeViewV_SnySS0E0VGs5NeverOTg5()
{
  type metadata accessor for IndexSet.RangeView();
  lazy protocol witness table accessor for type IndexSet.RangeView and conformance IndexSet.RangeView();
  uint64_t v1 = dispatch thunk of Collection.count.getter();
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (!v1) {
    return (uint64_t)v2;
  }
  uint64_t v3 = v1;
  uint64_t v12 = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if ((v3 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      uint64_t v5 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
      v5(v10, 0);
      OUTLINED_FUNCTION_17_41();
      v6();
      if (v0) {
        break;
      }
      long long v7 = v11;
      uint64_t v12 = v2;
      unint64_t v8 = v2[2];
      if (v8 >= v2[3] >> 1)
      {
        long long v9 = v11;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        long long v7 = v9;
        uint64_t v2 = v12;
      }
      v2[2] = v8 + 1;
      *(_OWORD *)&v2[2 * v8 + 4] = v7;
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v3) {
        return (uint64_t)v2;
      }
    }
    swift_release();
    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology23UsoEntity_common_PersonCG_So8INPersonCsAE_pTg5(void (*a1)(void), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v6) {
      break;
    }
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      OUTLINED_FUNCTION_17_41();
      a1();
      swift_release();
      if (v3) {
        return (void *)swift_release();
      }
      ++v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      OUTLINED_FUNCTION_20_48();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v6 == v8) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    OUTLINED_FUNCTION_3_39();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PhoneContactDisplayHintFactory.init(assistantProperties:deviceState:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CATOption();
  __chkstk_darwin(v6 - 8);
  OUTLINED_FUNCTION_4();
  outlined init with copy of SharedGlobalsProviding(a1, a3);
  type metadata accessor for PhoneCallDisplayTextCATs();
  static CATOption.defaultMode.getter();
  type metadata accessor for CATGlobals();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v9);
  CATGlobals.__allocating_init(device:)();
  uint64_t v7 = CATWrapper.__allocating_init(options:globals:)();
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(a3 + 80) = v7;
  return outlined init with take of AppSelectionSignalComponent(a2, a3 + 40);
}

uint64_t PhoneContactDisplayHintFactory.build(for:_:)(unint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  type metadata accessor for SemanticValue();
  OUTLINED_FUNCTION_1();
  uint64_t v126 = v6;
  uint64_t v127 = v7;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v125 = v8;
  uint64_t v119 = type metadata accessor for DisplayHint();
  OUTLINED_FUNCTION_1();
  uint64_t v129 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v13 = (char *)(v12 - v11);
  unint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
  OUTLINED_FUNCTION_1();
  uint64_t v114 = v14;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v124 = (char *)v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  *(void *)&long long v130 = (char *)v108 - v19;
  __chkstk_darwin(v18);
  os_log_type_t v123 = (char **)((char *)v108 - v20);
  uint64_t v21 = type metadata accessor for OrdinalDisplayHintsBuilder();
  OUTLINED_FUNCTION_1();
  uint64_t v23 = v22;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v128 = (char *)v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = v26;
  __chkstk_darwin(v25);
  unint64_t v28 = (char *)v108 - v27;
  uint64_t v29 = swift_allocObject();
  uint64_t v113 = a2;
  *(void *)(v29 + 16) = a2;
  *(void *)(v29 + 24) = a3;
  uint64_t v112 = a3;
  swift_retain();
  uint64_t v118 = v28;
  OrdinalDisplayHintsBuilder.init(referenceNode:)();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = _swiftEmptyArrayStorage;
  uint64_t v117 = v30 + 16;
  uint64_t v31 = swift_allocObject();
  uint64_t v116 = v31;
  *(void *)(v31 + 16) = _swiftEmptyArrayStorage;
  uint64_t v32 = (char **)a1;
  uint64_t v111 = v31 + 16;
  if ((specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 2) & 1) != 0
    && (specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 1) & 1) != 0)
  {
    unint64_t v131 = a1;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_0, v34, v35, "Building display hints for foreign emergency disambiguation", v36, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v37 = v128;
    uint64_t v38 = v118;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v128, v118, v21);
    unint64_t v39 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v40 = (v122 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v116;
    *(void *)(v41 + 16) = v30;
    *(void *)(v41 + 24) = v42;
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v41 + v39, v37, v21);
    uint64_t v43 = (uint64_t (**))(v41 + v40);
    *uint64_t v43 = partial apply for closure #1 in PhoneContactDisplayHintFactory.build(for:_:);
    v43[1] = (uint64_t (*))v29;
    swift_retain();
    swift_retain();
    swift_retain();
    PhoneContactDisplayHintFactory.buildForeignEmergencyHints(_:_:)(v131, (void (*)(void))partial apply for closure #2 in PhoneContactDisplayHintFactory.build(for:_:), v41);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v38, v21);
    swift_release();
  }
  else
  {
    v108[2] = v30;
    if (one-time initialization token for siriPhone != -1) {
      goto LABEL_57;
    }
    while (1)
    {
      v108[1] = v29;
      uint64_t v109 = v23;
      uint64_t v110 = v21;
      uint64_t v44 = type metadata accessor for Logger();
      uint64_t v122 = __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&dword_0, v45, v46, "Building display hints for regular contact disambiguation", v47, 2u);
        OUTLINED_FUNCTION_6();
      }
      uint64_t v128 = v13;

      __chkstk_darwin(v48);
      v107[2] = v121;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8INPersonCG_Say11SiriKitFlow11DisplayHintVG12displayHints_AI13SemanticValueV02idM0ts5NeverOTg5((void (*)(id *))partial apply for closure #3 in PhoneContactDisplayHintFactory.build(for:_:), (uint64_t)v107, (unint64_t)v32);
      uint64_t v23 = *(void *)(v49 + 16);
      uint64_t v50 = _swiftEmptyArrayStorage;
      uint64_t v21 = v126;
      uint64_t v115 = v49;
      if (!v23) {
        break;
      }
      OUTLINED_FUNCTION_55_1();
      uint64_t v53 = v51 + v52;
      uint64_t v120 = *(void *)(v54 + 72);
      id v121 = (void (**)(uint64_t, char *, uint64_t))(v127 + 16);
      uint64_t v29 = (uint64_t)(v127 + 8);
      uint64_t v32 = v123;
      while (1)
      {
        outlined init with copy of SpeakableString?(v53, (uint64_t)v32, &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        uint64_t v55 = *(int *)(v131 + 48);
        uint64_t v56 = v130 + v55;
        uint64_t v13 = *v32;
        *(void *)long long v130 = *v32;
        (*v121)(v56, (char *)v32 + v55, v21);
        uint64_t v57 = *(void (**)(uint64_t, uint64_t))v29;
        swift_bridgeObjectRetain();
        v57(v56, v21);
        _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v32, &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        uint64_t v58 = *((void *)v13 + 2);
        uint64_t v59 = v50[2];
        uint64_t v21 = v59 + v58;
        if (__OFADD__(v59, v58)) {
          break;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || v21 > v50[3] >> 1)
        {
          if (v59 <= v21) {
            uint64_t v61 = v59 + v58;
          }
          else {
            uint64_t v61 = v59;
          }
          uint64_t v50 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v61, 1, (uint64_t)v50);
        }
        uint64_t v62 = v125;
        uint64_t v21 = v126;
        if (*((void *)v13 + 2))
        {
          uint64_t v63 = v50[2];
          if ((v50[3] >> 1) - v63 < v58) {
            goto LABEL_55;
          }
          unint64_t v64 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
          uint64_t v65 = *(void *)(v129 + 72);
          uint64_t v66 = (char *)v50 + v64 + v65 * v63;
          if (&v13[v64] < &v66[v65 * v58] && v66 < &v13[v64 + v65 * v58])
          {
            OUTLINED_FUNCTION_1_18();
            OUTLINED_FUNCTION_39_2();
            uint64_t result = OUTLINED_FUNCTION_9_2();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v58)
          {
            uint64_t v68 = v50[2];
            BOOL v69 = __OFADD__(v68, v58);
            uint64_t v70 = v68 + v58;
            if (v69) {
              goto LABEL_56;
            }
            v50[2] = v70;
          }
        }
        else if (v58)
        {
          goto LABEL_54;
        }
        swift_bridgeObjectRelease();
        v53 += v120;
        if (!--v23) {
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      swift_once();
    }
    uint64_t v62 = v125;
LABEL_34:
    specialized Array.append<A>(contentsOf:)((uint64_t)v50);
    uint64_t v71 = v115;
    uint64_t v72 = *(void *)(v115 + 16);
    if (v72)
    {
      uint64_t v132 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      OUTLINED_FUNCTION_55_1();
      uint64_t v74 = v71 + v73;
      uint64_t v126 = *(void *)(v75 + 72);
      uint64_t v76 = (void (**)(char *, uint64_t, uint64_t))(v127 + 16);
      uint64_t v77 = (void (**)(uint64_t, char *, uint64_t))(v127 + 32);
      do
      {
        uint64_t v78 = v130;
        outlined init with copy of SpeakableString?(v74, v130, &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        uint64_t v79 = *(int *)(v131 + 48);
        uint64_t v80 = &v124[v79];
        (*v76)(&v124[v79], v78 + v79, v21);
        unint64_t v81 = *v77;
        (*v77)((uint64_t)v62, v80, v21);
        _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v78, &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        id v82 = v132;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          id v82 = v132;
        }
        unint64_t v83 = v82[2];
        if (v83 >= v82[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          id v82 = v132;
        }
        v82[2] = v83 + 1;
        OUTLINED_FUNCTION_55_1();
        v81((uint64_t)v82 + v84 + *(void *)(v85 + 72) * v83, v62, v21);
        uint64_t v132 = v82;
        v74 += v126;
        --v72;
      }
      while (v72);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v82 = _swiftEmptyArrayStorage;
    }
    specialized Array.append<A>(contentsOf:)((uint64_t)v82);
    swift_bridgeObjectRetain();
    uint64_t v86 = OrdinalDisplayHintsBuilder.build(for:)();
    swift_bridgeObjectRelease();
    uint64_t v87 = v86;
    uint64_t v88 = (uint64_t *)v117;
    specialized Array.append<A>(contentsOf:)(v87);
    uint64_t v89 = *(void *)(*v88 + 16);
    uint64_t v90 = v128;
    uint64_t v126 = *v88;
    if (v89)
    {
      uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 16);
      OUTLINED_FUNCTION_55_1();
      uint64_t v94 = v92 + v93;
      uint64_t v96 = *(void *)(v95 + 56);
      uint64_t v129 = v95;
      unint64_t v131 = v95 - 8;
      swift_bridgeObjectRetain();
      *(void *)&long long v97 = 136315138;
      long long v130 = v97;
      uint64_t v127 = (char *)&type metadata for Any + 8;
      uint64_t v98 = v119;
      do
      {
        v91(v90, v94, v98);
        id v99 = Logger.logObject.getter();
        os_log_type_t v100 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v99, v100))
        {
          id v101 = (void (*)(void, void, void))v91;
          uint64_t v102 = swift_slowAlloc();
          uint64_t v132 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v102 = v130;
          uint64_t v103 = DisplayHint.description.getter();
          *(void *)(v102 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v103, v104, (uint64_t *)&v132);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_10_70();
          v105();
          _os_log_impl(&dword_0, v99, v100, "DisplayHint: %s", (uint8_t *)v102, 0xCu);
          swift_arrayDestroy();
          uint64_t v90 = v128;
          OUTLINED_FUNCTION_6();
          uint64_t v91 = (void (*)(char *, uint64_t, uint64_t))v101;
          OUTLINED_FUNCTION_6();
        }
        else
        {
          (*(void (**)(char *, uint64_t))v131)(v90, v98);
        }

        v94 += v96;
        --v89;
      }
      while (v89);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v113(v126);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v118, v110);
    swift_release();
  }
  return swift_release();
}

uint64_t static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)(unint64_t a1, void *a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);

  return specialized static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)(a1, a2);
}

uint64_t specialized Sequence.contains(where:)(unint64_t a1, id a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [v6 personHandle];
      if (v9)
      {
        uint64_t v10 = v9;
        id v11 = [v9 emergencyType];

        if (v11 == a2)
        {
          uint64_t v12 = 1;
          goto LABEL_17;
        }
      }
      else
      {
      }
      ++v5;
      if (v8 == v4)
      {
        uint64_t v12 = 0;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  swift_release();
  return v12;
}

uint64_t closure #1 in PhoneContactDisplayHintFactory.build(for:_:)(NSObject *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DisplayHint();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = a1[2].isa;
  if (isa)
  {
    v26[1] = a3;
    uint64_t v27 = a2;
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = one-time initialization token for siriPhone;
    swift_bridgeObjectRetain();
    if (v12 != -1) {
LABEL_12:
    }
      swift_once();
    uint64_t v14 = 0;
    v26[0] = a1;
    uint64_t v15 = (char *)a1 + v11;
    uint64_t v32 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v33 = v7 + 16;
    *(void *)&long long v13 = 136315138;
    long long v29 = v13;
    unint64_t v28 = (char *)&type metadata for Any + 8;
    uint64_t v30 = v7;
    uint64_t v31 = isa;
    do
    {
      uint64_t v16 = (objc_class *)(v14 + 1);
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_12;
      }
      uint64_t v17 = &v15[*(void *)(v7 + 72) * v14];
      uint64_t v18 = type metadata accessor for Logger();
      uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v17, v6);
      unint64_t v11 = v19;
      a1 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(a1, v20))
      {
        uint64_t v21 = v6;
        uint64_t v22 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = v29;
        uint64_t v23 = DisplayHint.description.getter();
        unint64_t v11 = v24;
        *(void *)(v22 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v34);
        swift_bridgeObjectRelease();
        (*v32)(v9, v21);
        _os_log_impl(&dword_0, a1, v20, "DisplayHint: %s", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v6 = v21;
        uint64_t v7 = v30;
        Class isa = v31;
        swift_slowDealloc();
      }
      else
      {
        (*v32)(v9, v6);
      }

      ++v14;
    }
    while (v16 != isa);
    a1 = v26[0];
    swift_bridgeObjectRelease();
    a2 = v27;
  }
  return a2(a1);
}

uint64_t closure #2 in PhoneContactDisplayHintFactory.build(for:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v44 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin(v10 - 8);
  uint64_t v51 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for SemanticValue();
  uint64_t v12 = *(void *)(v47 - 8);
  uint64_t v13 = __chkstk_darwin(v47);
  uint64_t v53 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_type_t v46 = (char *)v43 - v15;
  uint64_t v52 = type metadata accessor for DisplayHint();
  uint64_t v16 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v19 = swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)(v19);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    v43[2] = a2 + 16;
    v43[3] = a3;
    v43[4] = a4;
    v43[5] = a6;
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v22 = v16 + 16;
    uint64_t v24 = v20 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
    uint64_t v49 = *(void *)(v22 + 56);
    uint64_t v50 = v23;
    uint64_t v48 = (void (**)(char *, uint64_t))(v22 - 8);
    uint64_t v45 = v12;
    uint64_t v25 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    v43[1] = v20;
    swift_bridgeObjectRetain();
    uint64_t v26 = _swiftEmptyArrayStorage;
    uint64_t v27 = v47;
    uint64_t v28 = v22;
    uint64_t v29 = (uint64_t)v51;
    do
    {
      uint64_t v30 = v52;
      uint64_t v31 = v28;
      v50(v18, v24, v52);
      DisplayHint.idValue.getter();
      (*v48)(v18, v30);
      if (__swift_getEnumTagSinglePayload(v29, 1, v27) == 1)
      {
        _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v29, &demangling cache variable for type metadata for SemanticValue?);
      }
      else
      {
        uint64_t v32 = *v25;
        uint64_t v33 = v46;
        (*v25)(v46, v29, v27);
        v32(v53, (uint64_t)v33, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v26[2] + 1, 1, (uint64_t)v26);
        }
        unint64_t v35 = v26[2];
        unint64_t v34 = v26[3];
        uint64_t v36 = v45;
        if (v35 >= v34 >> 1)
        {
          uint64_t v38 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1, (uint64_t)v26);
          uint64_t v36 = v45;
          uint64_t v26 = (void *)v38;
        }
        void v26[2] = v35 + 1;
        unint64_t v37 = (unint64_t)v26
            + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))
            + *(void *)(v36 + 72) * v35;
        uint64_t v27 = v47;
        v32((char *)v37, (uint64_t)v53, v47);
      }
      v24 += v49;
      --v21;
      uint64_t v28 = v31;
    }
    while (v21);
    swift_bridgeObjectRelease();
    unint64_t v39 = v44;
  }
  else
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
    unint64_t v39 = v44;
  }
  swift_beginAccess();
  specialized Array.append<A>(contentsOf:)((uint64_t)v26);
  swift_endAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v40 = OrdinalDisplayHintsBuilder.build(for:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Array.append<A>(contentsOf:)(v40);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v41 = swift_bridgeObjectRetain();
  v39(v41);
  return swift_bridgeObjectRelease();
}

void PhoneContactDisplayHintFactory.buildForeignEmergencyHints(_:_:)(unint64_t a1, void (*a2)(void), uint64_t a3)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "Building foreign emergency disambiguation display hints...", v9, 2u);
    swift_slowDealloc();
  }

  PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)(a1, 0, (uint64_t)_swiftEmptyArrayStorage, a2, a3);
}

void *closure #3 in PhoneContactDisplayHintFactory.build(for:_:)@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
  uint64_t result = PhoneContactDisplayHintFactory.buildRegularDisplayHint(_:)((uint64_t)a2 + *(int *)(v4 + 48), v3);
  *a2 = result;
  return result;
}

void *PhoneContactDisplayHintFactory.buildRegularDisplayHint(_:)(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v98 = *(void *)(v4 - 8);
  uint64_t v99 = v4;
  __chkstk_darwin(v4);
  uint64_t v96 = (char *)v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v101 = (char *)v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v102 = (char *)v92 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v100 = (char *)v92 - v12;
  __chkstk_darwin(v11);
  uint64_t v103 = (char *)v92 - v13;
  uint64_t v14 = type metadata accessor for SemanticValue();
  uint64_t v108 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DisplayHint();
  uint64_t v106 = *(void *)(v18 - 8);
  uint64_t v107 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  v92[2] = (char *)v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v92[1] = (char *)v92 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  long long v97 = (char *)v92 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v93 = (char *)v92 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v94 = (char *)v92 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)v92 - v29;
  INPerson.asBase64()();
  SemanticValue.init()();
  SemanticValue.string.setter();
  SemanticValue.label.setter();
  PhoneCallNLConstants.canonicalName.getter(2);
  SemanticValue.nodeClass.setter();
  uint64_t v31 = a2;
  id v32 = [a2 displayName];
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v35 = v34;

  swift_bridgeObjectRelease();
  uint64_t v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0) {
    uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v104 = a1;
  uint64_t v105 = v14;
  if (v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v17, a1, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
    id v37 = [v31 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    SemanticValue.init()();
    SemanticValue.string.setter();
    SemanticValue.label.setter();
    PhoneCallNLConstants.canonicalName.getter(10);
    SemanticValue.nodeClass.setter();
    DisplayHint.init(idValue:displayValue:)();
    uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v40 = v38[2];
    unint64_t v39 = v38[3];
    uint64_t v41 = (uint64_t)v17;
    if (v40 >= v39 >> 1) {
      uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1, (uint64_t)v38);
    }
    uint64_t v42 = (uint64_t)v100;
    v38[2] = v40 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))((unint64_t)v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v40, v30, v107);
    uint64_t v43 = v108;
  }
  else
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v41 = (uint64_t)v17;
    uint64_t v43 = v108;
    uint64_t v42 = (uint64_t)v100;
  }
  id v44 = [v31 nameComponents];
  uint64_t v45 = (uint64_t)v103;
  if (v44)
  {
    os_log_type_t v46 = v44;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v47 = type metadata accessor for PersonNameComponents();
    uint64_t v48 = v42;
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v47 = type metadata accessor for PersonNameComponents();
    uint64_t v48 = v42;
    uint64_t v49 = 1;
  }
  __swift_storeEnumTagSinglePayload(v48, v49, 1, v47);
  outlined init with take of URL?(v42, v45, &demangling cache variable for type metadata for PersonNameComponents?);
  type metadata accessor for PersonNameComponents();
  if (__swift_getEnumTagSinglePayload(v45, 1, v47))
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v45, &demangling cache variable for type metadata for PersonNameComponents?);
    goto LABEL_24;
  }
  uint64_t v50 = v43;
  uint64_t v51 = PersonNameComponents.givenName.getter();
  unint64_t v53 = v52;
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v45, &demangling cache variable for type metadata for PersonNameComponents?);
  if (!v53) {
    goto LABEL_23;
  }
  uint64_t v54 = HIBYTE(v53) & 0xF;
  if ((v53 & 0x2000000000000000) == 0) {
    uint64_t v54 = v51 & 0xFFFFFFFFFFFFLL;
  }
  if (!v54)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v43 = v50;
    goto LABEL_24;
  }
  uint64_t v55 = v105;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v41, v104, v105);
  __swift_storeEnumTagSinglePayload(v41, 0, 1, v55);
  SemanticValue.init()();
  SemanticValue.string.setter();
  SemanticValue.label.setter();
  PhoneCallNLConstants.canonicalName.getter(11);
  SemanticValue.nodeClass.setter();
  DisplayHint.init(idValue:displayValue:)();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v38[2] + 1, 1, (uint64_t)v38);
  }
  unint64_t v57 = v38[2];
  unint64_t v56 = v38[3];
  uint64_t v43 = v50;
  if (v57 >= v56 >> 1) {
    uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1, (uint64_t)v38);
  }
  v38[2] = v57 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))((unint64_t)v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v57, v94, v107);
LABEL_24:
  id v58 = [v31 nameComponents];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = (uint64_t)v101;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v61 = 0;
    uint64_t v62 = v105;
  }
  else
  {
    uint64_t v61 = 1;
    uint64_t v62 = v105;
    uint64_t v60 = (uint64_t)v101;
  }
  uint64_t v63 = (uint64_t)v102;
  __swift_storeEnumTagSinglePayload(v60, v61, 1, v47);
  outlined init with take of URL?(v60, v63, &demangling cache variable for type metadata for PersonNameComponents?);
  if (__swift_getEnumTagSinglePayload(v63, 1, v47))
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v63, &demangling cache variable for type metadata for PersonNameComponents?);
  }
  else
  {
    uint64_t v81 = PersonNameComponents.familyName.getter();
    unint64_t v83 = v82;
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v63, &demangling cache variable for type metadata for PersonNameComponents?);
    if (v83)
    {
      uint64_t v84 = HIBYTE(v83) & 0xF;
      if ((v83 & 0x2000000000000000) == 0) {
        uint64_t v84 = v81 & 0xFFFFFFFFFFFFLL;
      }
      if (v84)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v41, v104, v62);
        __swift_storeEnumTagSinglePayload(v41, 0, 1, v62);
        SemanticValue.init()();
        SemanticValue.string.setter();
        SemanticValue.label.setter();
        PhoneCallNLConstants.canonicalName.getter(12);
        SemanticValue.nodeClass.setter();
        uint64_t v85 = v93;
        DisplayHint.init(idValue:displayValue:)();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v38[2] + 1, 1, (uint64_t)v38);
        }
        unint64_t v87 = v38[2];
        unint64_t v86 = v38[3];
        if (v87 >= v86 >> 1) {
          uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v86 > 1, v87 + 1, 1, (uint64_t)v38);
        }
        v38[2] = v87 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))((unint64_t)v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v87, v85, v107);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  id v64 = [v31 personHandle];
  if (v64)
  {
    uint64_t v65 = v64;
    id v66 = [v64 label];
    if (v66)
    {
      uint64_t v67 = v66;
      __swift_project_boxed_opaque_existential_1((void *)(v95 + 40), *(void *)(v95 + 64));
      uint64_t v68 = v62;
      uint64_t v69 = v41;
      uint64_t v70 = v96;
      dispatch thunk of DeviceState.siriLocale.getter();
      uint64_t v113 = Locale.identifier.getter();
      uint64_t v114 = v71;
      uint64_t v111 = 45;
      unint64_t v112 = 0xE100000000000000;
      uint64_t v109 = 95;
      unint64_t v110 = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      swift_bridgeObjectRelease();
      uint64_t v72 = v70;
      uint64_t v41 = v69;
      uint64_t v62 = v68;
      (*(void (**)(char *, uint64_t))(v98 + 8))(v72, v99);
      static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
      uint64_t v43 = v108;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v41, v104, v68);
      __swift_storeEnumTagSinglePayload(v41, 0, 1, v68);
      SemanticValue.init()();
      SemanticValue.string.setter();
      SemanticValue.label.setter();
      PhoneCallNLConstants.canonicalName.getter(13);
      SemanticValue.nodeClass.setter();
      uint64_t v73 = v97;
      DisplayHint.init(idValue:displayValue:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v38[2] + 1, 1, (uint64_t)v38);
      }
      unint64_t v75 = v38[2];
      unint64_t v74 = v38[3];
      if (v75 >= v74 >> 1) {
        uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1, (uint64_t)v38);
      }
      v38[2] = v75 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))((unint64_t)v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v75, v73, v107);
    }
    uint64_t v76 = outlined bridged method (pb) of @objc INPersonHandle.value.getter(v65);
    if (!v77) {
      goto LABEL_58;
    }
    uint64_t v78 = HIBYTE(v77) & 0xF;
    if ((v77 & 0x2000000000000000) == 0) {
      uint64_t v78 = v76 & 0xFFFFFFFFFFFFLL;
    }
    if (v78)
    {
      uint64_t v79 = (char *)[v65 type];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v41, v104, v62);
      __swift_storeEnumTagSinglePayload(v41, 0, 1, v62);
      SemanticValue.init()();
      SemanticValue.string.setter();
      SemanticValue.label.setter();
      if (v79 == (unsigned char *)&dword_0 + 1)
      {
        PhoneCallNLConstants.canonicalName.getter(9);
        SemanticValue.nodeClass.setter();
        uint64_t v80 = &v115;
      }
      else
      {
        PhoneCallNLConstants.canonicalName.getter(8);
        SemanticValue.nodeClass.setter();
        uint64_t v80 = &v116;
      }
      uint64_t v88 = *(v80 - 32);
      DisplayHint.init(idValue:displayValue:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v38[2] + 1, 1, (uint64_t)v38);
      }
      unint64_t v90 = v38[2];
      unint64_t v89 = v38[3];
      if (v90 >= v89 >> 1) {
        uint64_t v38 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v89 > 1, v90 + 1, 1, (uint64_t)v38);
      }
      v38[2] = v90 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v106 + 32))((unint64_t)v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v90, v88, v107);
LABEL_58:

      return v38;
    }

    swift_bridgeObjectRelease();
  }
  return v38;
}

void PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin(v10 - 8);
  unint64_t v56 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DisplayHint();
  uint64_t v58 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v57 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SemanticValue();
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v51 - v20;
  if (a1 >> 62)
  {
    uint64_t v61 = v18;
    uint64_t v54 = a4;
    uint64_t v50 = v19;
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v19 = v50;
    a4 = v54;
    uint64_t v18 = v61;
  }
  else
  {
    uint64_t v22 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (v22 == a2)
  {
    a4(a3);
    return;
  }
  uint64_t v55 = v19;
  uint64_t v61 = v18;
  uint64_t v53 = a5;
  uint64_t v23 = swift_allocObject();
  uint64_t v60 = v23;
  *(void *)(v23 + 16) = a3;
  uint64_t v24 = v23 + 16;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(a2, (a1 & 0xC000000000000001) == 0, a1);
  uint64_t v54 = a4;
  uint64_t v52 = v12;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v25 = *(void **)(a1 + 8 * a2 + 32);
    swift_bridgeObjectRetain();
    id v26 = v25;
  }
  uint64_t v27 = v26;
  INPerson.asBase64()();
  SemanticValue.init()();
  SemanticValue.string.setter();
  SemanticValue.label.setter();
  PhoneCallNLConstants.canonicalName.getter(2);
  SemanticValue.nodeClass.setter();
  id v59 = v27;
  id v28 = [v27 personHandle];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = (char *)[v28 emergencyType];

    if (v30 == (unsigned char *)&dword_0 + 2)
    {
      id v42 = [v59 personHandle];
      if (v42)
      {
        outlined bridged method (ob) of @objc INPersonHandle.value.getter(v42);
        if (v43)
        {
          uint64_t v44 = (uint64_t)v56;
          uint64_t v45 = v61;
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v56, v21, v61);
          __swift_storeEnumTagSinglePayload(v44, 0, 1, v45);
          SemanticValue.init()();
          SemanticValue.string.setter();
          SemanticValue.label.setter();
          PhoneCallNLConstants.canonicalName.getter(8);
          SemanticValue.nodeClass.setter();
          os_log_type_t v46 = v57;
          DisplayHint.init(idValue:displayValue:)();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v47 = *(void *)(*(void *)v24 + 16);
          specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v48 = *(void *)v24;
          *(void *)(v48 + 16) = v47 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v48+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v47, v46, v52);
        }
      }
    }
    else if (v30 == (unsigned char *)&dword_0 + 1)
    {
      uint64_t v31 = v62;
      uint64_t v58 = *(void *)(v62 + 80);
      uint64_t v32 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v17, v21, v61);
      outlined init with copy of PhoneContactDisplayHintFactory(v31, (uint64_t)__src);
      unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      unint64_t v34 = (v15 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = (v34 + 95) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v35 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v60;
      unint64_t v37 = v36 + v33;
      uint64_t v38 = v61;
      (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v37, v17, v61);
      memcpy((void *)(v36 + v34), __src, 0x58uLL);
      *(void *)(v36 + v62) = a1;
      *(void *)(v36 + v35) = a2;
      unint64_t v39 = (void *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v40 = v53;
      *unint64_t v39 = v54;
      v39[1] = v40;
      uint64_t v41 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for PhoneCallDisplayTextCATs
                                                                            + *(void *)v58
                                                                            + 256);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v41(partial apply for closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:), v36);

      swift_release();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v38);
      goto LABEL_16;
    }
  }
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    return;
  }
  uint64_t v49 = *(void *)(v60 + 16);
  swift_bridgeObjectRetain();
  PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)(a1, a2 + 1, v49, v54, v53);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v61);
LABEL_16:
  swift_release();
}

uint64_t closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  uint64_t v39 = a6;
  uint64_t v40 = a1;
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v34 = a3;
  uint64_t v9 = type metadata accessor for SemanticValue();
  uint64_t v33 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DisplayHint();
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  __chkstk_darwin(v13);
  uint64_t v30 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TemplatingResult();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t *)(a2 + 16);
  outlined init with copy of SpeakableString?(v40, (uint64_t)v17, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t result = _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v17, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }
  else
  {
    uint64_t v24 = v19;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v12, v34, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
    uint64_t result = TemplatingResult.print.getter();
    if (!*(void *)(result + 16)) {
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    SemanticValue.init()();
    SemanticValue.string.setter();
    SemanticValue.label.setter();
    PhoneCallNLConstants.canonicalName.getter(4);
    SemanticValue.nodeClass.setter();
    uint64_t v25 = v30;
    DisplayHint.init(idValue:displayValue:)();
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v26 = *(void *)(*v22 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    uint64_t v27 = *v22;
    *(void *)(v27 + 16) = v26 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v27+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v26, v25, v32);
    swift_endAccess();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v21, v18);
  }
  uint64_t v28 = v39 + 1;
  if (!__OFADD__(v39, 1))
  {
    swift_beginAccess();
    uint64_t v29 = *v22;
    swift_bridgeObjectRetain();
    PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)(v35, v28, v29, v37, v38);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t DisplayHint.description.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v6 = (char *)&v44 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v44 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v44 = 40;
  unint64_t v45 = 0xE100000000000000;
  DisplayHint.displayValue.getter();
  type metadata accessor for SemanticValue();
  OUTLINED_FUNCTION_4_6((uint64_t)v11);
  if (v12)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v11, &demangling cache variable for type metadata for SemanticValue?);
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)0xE300000000000000;
    uint64_t v13 = 7104878;
    goto LABEL_6;
  }
  uint64_t v13 = SemanticValue.label.getter();
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10_70();
  v16();
  if (!v15) {
    goto LABEL_5;
  }
LABEL_6:
  v17._uint64_t countAndFlagsBits = v13;
  v17._object = v15;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 8236;
  v18._object = (void *)0xE200000000000000;
  String.append(_:)(v18);
  DisplayHint.displayValue.getter();
  OUTLINED_FUNCTION_4_6((uint64_t)v9);
  if (v12)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v9, &demangling cache variable for type metadata for SemanticValue?);
  }
  else
  {
    SemanticValue.string.getter();
    uint64_t v20 = v19;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10_70();
    v21();
    if (v20)
    {
      uint64_t v22 = String.debugDescription.getter();
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  uint64_t v24 = (void *)0xE300000000000000;
  uint64_t v22 = 7104878;
LABEL_12:
  v25._uint64_t countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = 0x203E3D2029;
  v26._object = (void *)0xE500000000000000;
  String.append(_:)(v26);
  uint64_t v28 = v44;
  unint64_t v27 = v45;
  uint64_t v44 = 40;
  unint64_t v45 = 0xE100000000000000;
  DisplayHint.idValue.getter();
  OUTLINED_FUNCTION_4_6((uint64_t)v6);
  if (v12)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v6, &demangling cache variable for type metadata for SemanticValue?);
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)0xE300000000000000;
    uint64_t v29 = 7104878;
    goto LABEL_17;
  }
  uint64_t v29 = SemanticValue.label.getter();
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10_70();
  v32();
  if (!v31) {
    goto LABEL_16;
  }
LABEL_17:
  v33._uint64_t countAndFlagsBits = v29;
  v33._object = v31;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._uint64_t countAndFlagsBits = 8236;
  v34._object = (void *)0xE200000000000000;
  String.append(_:)(v34);
  DisplayHint.idValue.getter();
  OUTLINED_FUNCTION_4_6((uint64_t)v3);
  if (v12)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v3, &demangling cache variable for type metadata for SemanticValue?);
LABEL_22:
    Substring.init(_:)();
    goto LABEL_23;
  }
  SemanticValue.string.getter();
  uint64_t v36 = v35;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10_70();
  v37();
  if (!v36) {
    goto LABEL_22;
  }
  specialized Collection.prefix(_:)(30);
LABEL_23:
  v38._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = 41;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
  uint64_t v40 = v44;
  uint64_t v41 = (void *)v45;
  uint64_t v44 = v28;
  unint64_t v45 = v27;
  swift_bridgeObjectRetain();
  v42._uint64_t countAndFlagsBits = v40;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)()
{
  OUTLINED_FUNCTION_15_60();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14_49();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_15_60();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14_49();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_15_60();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  if (v2 + 48 * v1 > v0 && v0 + 48 * v1 > v2)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_15_60();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_25_43();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_15_60();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14_49();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_15_60();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_25_43();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2)
{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_98();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SASTTemplateItem);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  void (*v3)(void);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_98();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  v3(0);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_98();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodeGenListEntry<UsoEntity_common_Agent>);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_9_78();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: INPerson));
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_98();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  type metadata accessor for CNContactStore(0, v3);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_98();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INScoredPerson]);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_9_78();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (agent: UsoEntity_common_Agent, contactRole: PhoneCallContactRole));
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_9_78();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_59();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_59();
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_23_46();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_59();
  if (v4 + 32 * v3 > v2 && v2 + 32 * v3 > v4)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  void (*v3)(void);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_59();
  v3(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_23_46();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_4_106();

  return swift_arrayInitWithCopy();
}

uint64_t sub_3FEF48()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in PhoneContactDisplayHintFactory.build(for:_:)(NSObject *a1)
{
  return closure #1 in PhoneContactDisplayHintFactory.build(for:_:)(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_3FEF88()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void *partial apply for closure #3 in PhoneContactDisplayHintFactory.build(for:_:)@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return closure #3 in PhoneContactDisplayHintFactory.build(for:_:)(a1, a2);
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  if (&__dst[8 * a2] > __src && &__src[8 * a2] > __dst)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, 8 * a2);
}

{
  void *result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_40_3();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_9_2();
    __break(1u);
    return result;
  }
  if (&__dst[16 * a2] > __src && &__src[16 * a2] > __dst)
  {
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, 16 * a2);
}

uint64_t sub_3FFB64()
{
  type metadata accessor for OrdinalDisplayHintsBuilder();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_49_24();
  swift_release();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_2_83();
  v4(v3);
  swift_release();

  return _swift_deallocObject(v0, v2 + 16, v1);
}

uint64_t partial apply for closure #2 in PhoneContactDisplayHintFactory.build(for:_:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for OrdinalDisplayHintsBuilder();
  OUTLINED_FUNCTION_19_0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v8;
  uint64_t v12 = v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void (**)(uint64_t))v12;
  uint64_t v14 = *(void *)(v12 + 8);

  return closure #2 in PhoneContactDisplayHintFactory.build(for:_:)(a1, v9, v10, v11, v13, v14);
}

uint64_t specialized static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)(unint64_t a1, void *a2)
{
  uint64_t v72 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin(v3 - 8);
  uint64_t v58 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DisplayHint();
  uint64_t v61 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v69 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for SemanticValue();
  uint64_t v60 = *(void *)(v73 - 8);
  uint64_t v6 = __chkstk_darwin(v73);
  unint64_t v57 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v68 = (char *)&v50 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v74 = (char *)&v50 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v66 = type metadata accessor for Locale();
  uint64_t v14 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v65 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OrdinalDisplayHintsBuilder();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v77 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v20 = result;
  }
  else
  {
    uint64_t v20 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v53 = v19;
  if (v20)
  {
    if (v20 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v51 = v17;
    uint64_t v52 = v16;
    uint64_t v22 = 0;
    unint64_t v71 = a1 & 0xC000000000000001;
    unint64_t v62 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v67 = (void (**)(char *, char *, uint64_t))(v60 + 16);
    uint64_t v56 = v60 + 32;
    uint64_t v55 = v61 + 32;
    uint64_t v54 = (void (**)(char *, uint64_t))(v60 + 8);
    uint64_t v23 = _swiftEmptyArrayStorage;
    unint64_t v64 = a1;
    uint64_t v63 = v20;
    do
    {
      if (v71)
      {
        uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v24 = *(void *)(a1 + 8 * v22 + 32);
        swift_retain();
      }
      swift_retain();
      if (App.isFirstParty()())
      {
        static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(v24, 0, v72);
        swift_release();
      }
      uint64_t v25 = App.appIdentifier.getter();
      if (v26)
      {
        uint64_t v70 = v25;
        uint64_t v27 = (uint64_t)v23;
        __swift_project_boxed_opaque_existential_1(v72, v72[3]);
        uint64_t v28 = v65;
        dispatch thunk of DeviceState.siriLocale.getter();
        type metadata accessor for AppInfoBuilder();
        swift_initStackObject();
        AppInfoBuilder.getAppName(_:requestedLocale:)();
        uint64_t v30 = v29;
        (*v62)(v28, v66);
        if (v30)
        {
          uint64_t v23 = (void *)v27;
          if (one-time initialization token for applicationId != -1) {
            swift_once();
          }
          TerminalOntologyNode.name.getter();
          SemanticValue.init(string:label:)();
          if (one-time initialization token for appName != -1) {
            swift_once();
          }
          TerminalOntologyNode.name.getter();
          SemanticValue.init(string:label:)();
          uint64_t v31 = *v67;
          (*v67)(v68, v13, v73);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v23 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v27 + 16) + 1, 1, v27);
          }
          unint64_t v33 = v23[2];
          unint64_t v32 = v23[3];
          if (v33 >= v32 >> 1) {
            uint64_t v23 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1, (uint64_t)v23);
          }
          v23[2] = v33 + 1;
          uint64_t v34 = v73;
          (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))((unint64_t)v23+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v33, v68, v73);
          uint64_t v35 = (uint64_t)v58;
          v31(v58, v13, v34);
          __swift_storeEnumTagSinglePayload(v35, 0, 1, v34);
          v31(v57, v74, v34);
          DisplayHint.init(idValue:displayValue:)();
          uint64_t v36 = (uint64_t)v77;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v36 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v36 + 16) + 1, 1, v36);
          }
          unint64_t v38 = *(void *)(v36 + 16);
          unint64_t v37 = *(void *)(v36 + 24);
          if (v38 >= v37 >> 1) {
            uint64_t v36 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1, v36);
          }
          *(void *)(v36 + 16) = v38 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v36+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v38, v69, v59);
          swift_release();
          swift_release();
          unint64_t v77 = (void *)v36;
          Swift::String v39 = *v54;
          uint64_t v40 = v73;
          (*v54)(v74, v73);
          v39(v13, v40);
          a1 = v64;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          a1 = v64;
          uint64_t v23 = (void *)v27;
        }
        uint64_t v20 = v63;
      }
      else
      {
        swift_release();
        swift_release();
      }
      ++v22;
    }
    while (v20 != v22);
    swift_bridgeObjectRelease();
    uint64_t v16 = v52;
    uint64_t v17 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (one-time initialization token for reference != -1) {
    swift_once();
  }
  TerminalOntologyNode.name.getter();
  uint64_t v41 = v53;
  OrdinalDisplayHintsBuilder.init(referenceNode:)();
  uint64_t v42 = OrdinalDisplayHintsBuilder.build(for:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v41, v16);
  specialized Array.append<A>(contentsOf:)(v42);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v43 = type metadata accessor for Logger();
  __swift_project_value_buffer(v43, (uint64_t)static Logger.siriPhone);
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    os_log_type_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v46 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v47 = Array.description.getter();
    unint64_t v49 = v48;
    swift_bridgeObjectRelease();
    uint64_t v75 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v49, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v44, v45, "Built display hints for app disambiguation: %s'", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  return (uint64_t)v77;
}

uint64_t destroy for PhoneContactDisplayHintFactory(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);

  return swift_release();
}

uint64_t initializeWithCopy for PhoneContactDisplayHintFactory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for PhoneContactDisplayHintFactory(uint64_t *a1, uint64_t *a2)
{
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for PhoneContactDisplayHintFactory(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneContactDisplayHintFactory(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneContactDisplayHintFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneContactDisplayHintFactory()
{
  return &type metadata for PhoneContactDisplayHintFactory;
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t *, uint64_t))outlined init with take of AppSelectionSignalComponent);
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t))
{
  v12[3] = a4;
  v12[4] = a5;
  __swift_allocate_boxed_opaque_existential_1(v12);
  OUTLINED_FUNCTION_10();
  (*(void (**)(void))(v9 + 32))();
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return a6(v12, v10 + 40 * a1 + 32);
}

unint64_t lazy protocol witness table accessor for type IndexSet.RangeView and conformance IndexSet.RangeView()
{
  unint64_t result = lazy protocol witness table cache variable for type IndexSet.RangeView and conformance IndexSet.RangeView;
  if (!lazy protocol witness table cache variable for type IndexSet.RangeView and conformance IndexSet.RangeView)
  {
    type metadata accessor for IndexSet.RangeView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IndexSet.RangeView and conformance IndexSet.RangeView);
  }
  return result;
}

uint64_t outlined init with copy of PhoneContactDisplayHintFactory(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_400A5C()
{
  type metadata accessor for SemanticValue();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_49_24();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_2_83();
  v4(v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 40);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((((((v2 + 95) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v1);
}

uint64_t partial apply for closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SemanticValue();
  OUTLINED_FUNCTION_19_0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 95) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v8;
  uint64_t v14 = *(void *)(v1 + v10);
  uint64_t v15 = *(void *)(v1 + v11);
  uint64_t v16 = (uint64_t *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];

  return closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)(a1, v12, v13, v1 + v9, v14, v15, v17, v18);
}

uint64_t sub_400BF0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t OUTLINED_FUNCTION_4_106()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_48()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t static Transformer<>.transformer(device:callCapability:participants:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);

  return Transformer.init(transform:)();
}

uint64_t sub_400D74()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

__n128 PhoneCallDirectInvocationNLIntent.init(app:contacts:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:contactQueries:references:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, __n128 a11, uint64_t a12)
{
  outlined init with take of PhoneCallApp?(a1, a9);
  *(void *)(a9 + 40) = a2;
  *(unsigned char *)(a9 + 48) = a3;
  *(void *)(a9 + 56) = a4;
  *(unsigned char *)(a9 + 64) = a5;
  *(unsigned char *)(a9 + 65) = a6;
  *(unsigned char *)(a9 + 66) = a7;
  *(unsigned char *)(a9 + 67) = a8;
  *(_WORD *)(a9 + 68) = a10;
  *(_DWORD *)(a9 + 70) = *(_DWORD *)((char *)&a10 + 2);
  __n128 result = a11;
  *(__n128 *)(a9 + 80) = a11;
  *(void *)(a9 + 96) = a12;
  return result;
}

uint64_t PhoneCallDirectInvocationNLIntent.app.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of PhoneCallApp?(v1, a1);
}

uint64_t outlined init with copy of PhoneCallApp?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallApp?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PhoneCallDirectInvocationNLIntent.app.setter(uint64_t a1)
{
  return outlined assign with take of PhoneCallApp?(a1, v1);
}

uint64_t outlined assign with take of PhoneCallApp?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallApp?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t PhoneCallDirectInvocationNLIntent.contacts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.contacts.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallAVMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallAttributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallAudioRoute.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallCapability.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallCapability.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallCapability.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallConfirmation.getter()
{
  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallConfirmation.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 66) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallConfirmation.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallDestinationType.getter()
{
  return *(unsigned __int8 *)(v0 + 67);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallDestinationType.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 67) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallDestinationType.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 68);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallNoun.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 68) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallPreferredProvider.getter()
{
  return *(unsigned __int8 *)(v0 + 69);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallPreferredProvider.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 69) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallPreferredProvider.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallReference.getter()
{
  return *(unsigned __int8 *)(v0 + 70);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallReference.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 70) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallReference.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallVerb.getter()
{
  return *(unsigned __int8 *)(v0 + 71);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallVerb.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 71) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallVerb.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t destroy for PhoneCallDirectInvocationNLIntent(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhoneCallDirectInvocationNLIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhoneCallDirectInvocationNLIntent(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
  *(unsigned char *)(a1 + 66) = *((unsigned char *)a2 + 66);
  *(unsigned char *)(a1 + 67) = *((unsigned char *)a2 + 67);
  *(unsigned char *)(a1 + 68) = *((unsigned char *)a2 + 68);
  *(unsigned char *)(a1 + 69) = *((unsigned char *)a2 + 69);
  *(unsigned char *)(a1 + 70) = *((unsigned char *)a2 + 70);
  *(unsigned char *)(a1 + 71) = *((unsigned char *)a2 + 71);
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PhoneCallDirectInvocationNLIntent(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneCallDirectInvocationNLIntent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallDirectInvocationNLIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallDirectInvocationNLIntent()
{
  return &type metadata for PhoneCallDirectInvocationNLIntent;
}

uint64_t default argument 5 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)()
{
  return default argument 5 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)((void (*)(void))type metadata accessor for StartCallCATsSimple);
}

uint64_t default argument 6 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)()
{
  return default argument 5 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)((void (*)(void))type metadata accessor for PhoneCallDisplayTextCATsSimple);
}

uint64_t default argument 5 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)(void (*a1)(void))
{
  uint64_t v2 = type metadata accessor for CATOption();
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  a1(0);
  static CATOption.defaultMode.getter();
  return CATWrapperSimple.__allocating_init(options:globals:)();
}

uint64_t EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a8 + 3));
  uint64_t result = outlined init with take of AppSelectionSignalComponent(a5, (uint64_t)(a8 + 8));
  a8[13] = a6;
  a8[14] = a7;
  return result;
}

uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[495] = v0;
  v1[489] = v2;
  v1[483] = v3;
  v1[477] = v4;
  v1[471] = v5;
  v1[465] = v6;
  uint64_t v7 = type metadata accessor for PhoneError();
  v1[501] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[507] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v8);
  v1[513] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for OutputGenerationManifest();
  v1[519] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[525] = v10;
  v1[531] = OUTLINED_FUNCTION_35();
  uint64_t v11 = type metadata accessor for Locale();
  v1[537] = v11;
  OUTLINED_FUNCTION_19_0(v11);
  v1[543] = v12;
  v1[549] = OUTLINED_FUNCTION_35();
  uint64_t v13 = type metadata accessor for EmergencyCountdownModel();
  OUTLINED_FUNCTION_11_0(v13);
  v1[555] = OUTLINED_FUNCTION_35();
  uint64_t v14 = type metadata accessor for CommonDirectAction();
  v1[561] = v14;
  OUTLINED_FUNCTION_11_0(v14);
  v1[567] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v15, v16, v17);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void v17[5];
  void *v18;
  uint64_t v19;

  uint64_t v18 = v0;
  uint64_t v1 = (void *)v0[495];
  uint64_t v15 = (void *)v0[477];
  outlined init with copy of EmergencyCountdownOutputBuilder((uint64_t)v1, (uint64_t)(v0 + 367));
  uint64_t v2 = OUTLINED_FUNCTION_28_40();
  v0[573] = v2;
  memcpy((void *)(v2 + 16), v0 + 367, 0x78uLL);
  swift_retain();
  swift_asyncLet_begin();
  outlined init with copy of EmergencyCountdownOutputBuilder((uint64_t)v1, (uint64_t)(v0 + 327));
  uint64_t v3 = OUTLINED_FUNCTION_28_40();
  v0[579] = v3;
  memcpy((void *)(v3 + 16), v0 + 327, 0x78uLL);
  swift_retain();
  swift_asyncLet_begin();
  outlined init with copy of EmergencyCountdownOutputBuilder((uint64_t)v1, (uint64_t)(v0 + 387));
  uint64_t v4 = OUTLINED_FUNCTION_28_40();
  v0[585] = v4;
  memcpy((void *)(v4 + 16), v0 + 387, 0x78uLL);
  swift_retain();
  swift_asyncLet_begin();
  outlined init with copy of EmergencyCountdownOutputBuilder((uint64_t)v1, (uint64_t)(v0 + 347));
  uint64_t v5 = OUTLINED_FUNCTION_28_40();
  v0[591] = v5;
  memcpy((void *)(v5 + 16), v0 + 347, 0x78uLL);
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v6 = (void *)v1[13];
  uint64_t v7 = v15;
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
  uint64_t v9 = v8;
  v0[597] = v8;
  type metadata accessor for SirikitDeviceState();
  uint64_t v10 = v1[6];
  uint64_t v11 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v17, v10, v11);
  uint64_t v12 = SirikitDeviceState.__allocating_init(from:)();
  v0[603] = v12;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(class metadata base offset for StartCallCATsSimple
                                                             + *v6
                                                             + 512)
                                                 + **(int **)(class metadata base offset for StartCallCATsSimple
                                                            + *v6
                                                            + 512));
  uint64_t v13 = (void *)swift_task_alloc();
  v0[609] = v13;
  *uint64_t v13 = v0;
  v13[1] = EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  return v16(v9, v12);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 4920) = v5;
  *(void *)(v3 + 4968) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)(class metadata base offset for StartCallCATsSimple
                + **(void **)(*(void *)(v0 + 3960) + 104)
                + 264);
  uint64_t v13 = *v1 + *(int *)*v1;
  uint64_t v14 = (uint64_t)v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 4976) = v2;
  *uint64_t v2 = v0;
  v2[1] = EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  OUTLINED_FUNCTION_46_1((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14);
  return v10();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 4984) = v4;
  *(void *)(v2 + 4992) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *log;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  os_log_type_t v46 = v0;
  uint64_t v1 = *(void **)(v0 + 4920);
  *(unsigned char *)(v0 + 5184) = 0;
  *(void *)(v0 + 3560) = dispatch thunk of LabelExecutionResult.subscript.getter();
  *(void *)(v0 + 3568) = v2;
  *(void *)(v0 + 5000) = v2;
  *(unsigned char *)(v0 + 5186) = 1;
  *(void *)(v0 + 3576) = dispatch thunk of LabelExecutionResult.subscript.getter();
  *(void *)(v0 + 3584) = v3;
  *(void *)(v0 + 5008) = v3;
  *(unsigned char *)(v0 + 5185) = 2;
  *(void *)(v0 + 3592) = dispatch thunk of LabelExecutionResult.subscript.getter();
  *(void *)(v0 + 3600) = v4;
  *(void *)(v0 + 5016) = v4;
  uint64_t v5 = [v1 dialog];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for DialogElement);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_3:
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v6 & 0xC000000000000001) == 0);
    if ((v6 & 0xC000000000000001) != 0) {
      uint64_t v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v7 = *(id *)(v6 + 32);
    }
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v9 = [v8 fullPrint];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
    *(void *)(v0 + 3608) = v10;
    *(void *)(v0 + 3616) = v11;

    *(void *)(v0 + 5024) = v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v13 = *(void **)(v0 + 3816);
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    uint64_t v15 = v13;
    swift_retain_n();
    uint64_t v16 = v15;
    uint64_t v17 = Logger.logObject.getter();
    uint64_t v18 = static os_log_type_t.debug.getter();
    uint64_t v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(void **)(v0 + 3816);
    if (v19)
    {
      uint64_t v21 = swift_slowAlloc();
      char log = v17;
      uint64_t v22 = (void *)swift_slowAlloc();
      os_log_type_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412546;
      *(void *)(v0 + 3672) = v20;
      uint64_t v23 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v22 = v20;

      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v24 = App.appIdentifier.getter();
      if (v25)
      {
        uint64_t v26 = v25;
      }
      else
      {
        uint64_t v24 = 7104878;
        uint64_t v26 = 0xE300000000000000;
      }
      *(void *)(v0 + 3624) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v26, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v17 = log;
      _os_log_impl(&dword_0, log, v18, "EmergencyCountdown intent for launch app = %@ \n app=%s", (uint8_t *)v21, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }

    uint64_t v27 = *(void *)(v0 + 4536);
    uint64_t v28 = *(void **)(v0 + 3960);
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    *(void *)(v0 + 5032) = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = v28[6];
    uint64_t v30 = v28[7];
    __swift_project_boxed_opaque_existential_1(v28 + 3, v29);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
    *(void *)(v0 + 5040) = CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v0 + 3256));
    __swift_destroy_boxed_opaque_existential_1(v0 + 3256);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_7(v27, (uint64_t (*)(void))type metadata accessor for CommonDirectAction);
    return _swift_asyncLet_get_throwing(v0 + 1296, v0 + 3544, EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), v0 + 3968);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  unint64_t v32 = type metadata accessor for Logger();
  __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
  unint64_t v33 = Logger.logObject.getter();
  uint64_t v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_0, v33, v34, "#EmergencyCountdownOutputBuilder intentConfirmationEmergency CAT returned no dialog. ", v35, 2u);
    OUTLINED_FUNCTION_6();
  }
  uint64_t v36 = *(void **)(v0 + 4920);
  unint64_t v37 = *(uint64_t **)(v0 + 4056);

  unint64_t v38 = [v36 catId];
  Swift::String v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  *unint64_t v37 = v39;
  v37[1] = v41;
  v37[2] = 0xD000000000000041;
  uint64_t v37[3] = 0x800000000049D080;
  v37[4] = 0xD000000000000049;
  void v37[5] = 0x800000000049D0D0;
  v37[6] = 37;
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
  *(void *)(v0 + 5176) = swift_allocError();
  PhoneError.logged()(v42);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_7((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for PhoneError);
  swift_willThrow();
  swift_release();

  return _swift_asyncLet_finish(v0 + 16);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  v1[631] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[632] = v1[443];
    v1[633] = v1[444];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 242, v1 + 441, EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), v1 + 526);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  v1[634] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[635] = v1[441];
    v1[636] = v1[442];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 82, v1 + 439, EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), v1 + 556);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_18_3();
  v1[637] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[638] = v1[439];
    v1[639] = v1[440];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 437, EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), v1 + 586);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_18_3();
  v1[640] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1[449];
    uint64_t v3 = v1[447];
    uint64_t v4 = v1[445];
    v1[641] = v1[451];
    v1[642] = v2;
    v1[643] = v3;
    v1[644] = v4;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;

  uint64_t v34 = v0[644];
  unint64_t v33 = v0[643];
  unint64_t v32 = v0[642];
  uint64_t v31 = v0[641];
  uint64_t v22 = (void *)v0[630];
  uint64_t v24 = (void *)v0[629];
  uint64_t v26 = v0[628];
  uint64_t v27 = v0[627];
  uint64_t v28 = v0[626];
  uint64_t v30 = v0[625];
  unint64_t v38 = (void *)v0[615];
  uint64_t v29 = v0[555];
  uint64_t v1 = v0[549];
  uint64_t v20 = v0[543];
  uint64_t v21 = v0[537];
  uint64_t v2 = (void *)v0[495];
  unint64_t v37 = v0[489];
  uint64_t v36 = v0[483];
  uint64_t v35 = v0[477];
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v3);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  uint64_t v25 = v24;
  uint64_t v23 = v22;
  v5(v3, v4);
  __swift_project_boxed_opaque_existential_1(v0 + 417, v0[420]);
  dispatch thunk of DeviceState.siriLocale.getter();
  Locale.identifier.getter();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v21);
  uint64_t v6 = v2[6];
  uint64_t v7 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
  (*(void (**)(uint64_t))(*(void *)v8 + 248))(v8);
  swift_release();
  EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:)(v29, v34, v30, v33, v28, v32, v27, v31, v26, v25, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 417));
  static DialogPhase.confirmation.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  long long v9[2] = v29;
  v9[3] = v35;
  v9[4] = v36;
  void v9[5] = v2;
  v9[6] = v37;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v10 = v2 + 8;
  uint64_t v11 = v2[11];
  uint64_t v12 = v2[12];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v0[430] = type metadata accessor for PhoneSnippetDataModels();
  v0[431] = lazy protocol witness table accessor for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 427);
  outlined init with copy of EmergencyCountdownModel(v29, (uint64_t)boxed_opaque_existential_1);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_46A030;
  *(void *)(v14 + 32) = v38;
  Swift::String v39 = v14;
  specialized Array._endMutation()();
  v0[645] = v39;
  uint64_t v15 = v38;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[646] = v16;
  *uint64_t v16 = v0;
  v16[1] = EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  uint64_t v17 = v0[531];
  uint64_t v18 = v0[465];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(v18, v0 + 427, v39, v17, v11, v12);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 3416;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  uint64_t v1 = (void *)v0[630];
  uint64_t v2 = (void *)v0[629];
  uint64_t v3 = (void *)v0[615];
  uint64_t v4 = v0[555];
  uint64_t v5 = v0[531];
  uint64_t v6 = v0[525];
  uint64_t v7 = v0[519];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_7(v4, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
  OUTLINED_FUNCTION_4_3();
  return _swift_asyncLet_finish(v8);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();

  uint64_t v1 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v1);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_7_89();

  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_7_89();

  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_7_89();

  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_7_89();

  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_16_60();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_50();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_17_42();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1_109();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1_109();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1_109();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1_109();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1_109();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1_109();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1_109();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

uint64_t EmergencyCountdownOutputBuilder.startCallCATsSimple.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 104) = a1;
  return result;
}

Swift::Void (__swiftcall *EmergencyCountdownOutputBuilder.startCallCATsSimple.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t EmergencyCountdownOutputBuilder.displayTextCATsSimple.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), 0, 0);
}

uint64_t implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_44();
  uint64_t v13 = *(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 136)
      + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 136);
  uint64_t v14 = class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 136;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  OUTLINED_FUNCTION_46_1((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14);
  return v10();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_13_1();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), 0, 0);
}

uint64_t implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_44();
  uint64_t v13 = *(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 56)
      + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 56);
  uint64_t v14 = class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 56;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  OUTLINED_FUNCTION_46_1((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14);
  return v10();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_13_1();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), 0, 0);
}

uint64_t implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_21_44();
  uint64_t v13 = *(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 72)
      + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 72);
  uint64_t v14 = class metadata base offset for PhoneCallDisplayTextCATsSimple + v1 + 72;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  OUTLINED_FUNCTION_46_1((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14);
  return v10();
}

uint64_t implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:), 0, 0);
}

uint64_t implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void **)(v0[3] + 112);
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                   + *v2
                                                   + 40)
                                       + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + *v2
                                                  + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  uint64_t v5 = v0[4];
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v1;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v4 + 32);
  if (!v0) {
    *(void *)(v5 + 56) = v3;
  }
  outlined destroy of SpeakableString?(v7);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for ResponseMode();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DismissalSettings?);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  OutputGenerationManifest.responseViewId.setter();
  OutputGenerationManifest.canUseServerTTS.setter();
  uint64_t v17 = a5 + 3;
  uint64_t v19 = a5[6];
  uint64_t v18 = a5[7];
  __swift_project_boxed_opaque_existential_1(v17, v19);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 8))(v28, v19, v18);
  LOBYTE(a4) = static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(a3, a4);
  outlined init with copy of SignalProviding((uint64_t)v28, (uint64_t)v27);
  if (a4) {
    static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(a3, (uint64_t)v27);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  OutputGenerationManifest.listenAfterSpeaking.setter();
  OutputGenerationManifest.resultViewId.setter();
  uint64_t v20 = type metadata accessor for NLContextUpdate();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v16, a6, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v20);
  OutputGenerationManifest.nlContextUpdate.setter();
  DismissalSettings.init(_:)();
  uint64_t v21 = type metadata accessor for DismissalSettings();
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v21);
  OutputGenerationManifest.dismissalSettings.setter();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_0, v23, v24, "#EmergencyCountdownOutputBuilder added dismissalSettings to prevent auto-dismissal", v25, 2u);
    swift_slowDealloc();
  }

  static ResponseMode.voiceForward.getter();
  return OutputGenerationManifest.responseMode.setter();
}

uint64_t closure #1 in closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  return DismissalSettings.premptivelyResumeMedia.setter();
}

uint64_t outlined init with copy of EmergencyCountdownOutputBuilder(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t partial apply for implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_27_40();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  uint64_t v3 = OUTLINED_FUNCTION_21_7();
  return implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(v3, v4);
}

uint64_t partial apply for implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_27_40();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = protocol witness for Flow.execute() in conformance CallingIntentContinueInAppFlow<A, B>;
  uint64_t v3 = OUTLINED_FUNCTION_21_7();
  return implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(v3, v4);
}

uint64_t partial apply for implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_27_40();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  uint64_t v3 = OUTLINED_FUNCTION_21_7();
  return implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(v3, v4);
}

uint64_t objectdestroyTm_21()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t partial apply for implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_27_40();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = partial apply for implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  uint64_t v3 = OUTLINED_FUNCTION_21_7();
  return implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(v3, v4);
}

uint64_t partial apply for closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(uint64_t a1)
{
  return closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_7(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for EmergencyCountdownOutputBuilder(uint64_t a1)
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for EmergencyCountdownOutputBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2 + 24;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  id v10 = v4;
  id v11 = v5;
  v9(a1 + 24, v6, v8);
  long long v12 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 64, a2 + 64);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for EmergencyCountdownOutputBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  long long v7 = (void *)a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for EmergencyCountdownOutputBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for EmergencyCountdownOutputBuilder()
{
  return &type metadata for EmergencyCountdownOutputBuilder;
}

uint64_t OUTLINED_FUNCTION_1_109()
{
  return swift_release_n();
}

void OUTLINED_FUNCTION_7_89()
{
  uint64_t v2 = *(void **)(v0 + 5032);
}

uint64_t OUTLINED_FUNCTION_14_50()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_60()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_17_42()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_28_40()
{
  return swift_allocObject();
}

uint64_t static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    long long v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "#OngoingCallFlowProducers Setting ongoing call flow producers", v12, 2u);
    OUTLINED_FUNCTION_6();
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v13 = RCHChildFlowProducersAsync.unsupportedValueFlowProducer.getter();
  if (v13)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    outlined init with copy of SignalProviding(a3, (uint64_t)v24);
    uint64_t v17 = swift_allocObject();
    OUTLINED_FUNCTION_42_24(v17);
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v16;
    swift_retain();
    OUTLINED_FUNCTION_2_126();
    RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter();
    outlined init with copy of SignalProviding(a3, (uint64_t)v24);
    uint64_t v18 = swift_allocObject();
    OUTLINED_FUNCTION_42_24(v18);
    OUTLINED_FUNCTION_2_126();
    RCHChildFlowProducersAsync.confirmIntentFlowProducer.setter();
    outlined init with copy of SignalProviding(a3, (uint64_t)v24);
    uint64_t v19 = swift_allocObject();
    OUTLINED_FUNCTION_42_24(v19);
    OUTLINED_FUNCTION_2_126();
    RCHChildFlowProducersAsync.continueInAppFlowProducer.setter();
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      v24[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v24[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000053, 0x800000000049D120, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v21, v22, "%s", v23, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t (*static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)(uint64_t a1))(uint64_t *a1, uint64_t a2)
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v3);
  uint64_t v1 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v3, v1 + 16);
  return partial apply for closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:);
}

uint64_t closure #1 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v21 = a3;
  uint64_t v7 = type metadata accessor for ParameterIdentifier();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartCallIntent>);
  ParameterResolutionRecord.parameter.getter();
  uint64_t v11 = ParameterIdentifier.name.getter();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14._uint64_t countAndFlagsBits = v11;
  v14._object = v13;
  if (PhoneCallSlotNames.init(rawValue:)(v14).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_contacts
    && (uint64_t v15 = (void *)ParameterResolutionRecord.result.getter(),
        id v16 = [v15 unsupportedReason],
        v15,
        (id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v16))
  {
    outlined init with copy of SignalProviding(v21, (uint64_t)v22);
    uint64_t v17 = swift_allocObject();
    outlined init with take of AppSelectionSignalComponent(v22, v17 + 16);
    uint64_t v18 = partial apply for specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)(a1, a2);
  }
  else
  {
    swift_retain();
    uint64_t v18 = a4(a1, a2);
  }
  uint64_t v19 = v18;
  swift_release();
  return v19;
}

uint64_t closure #2 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v6 = (void *)IntentResolutionRecord.intent.getter();
  uint64_t v7 = (void *)IntentResolutionRecord.intentResponse.getter();
  char v8 = static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v6, v7);

  outlined init with copy of SignalProviding(a3, (uint64_t)v14);
  uint64_t v9 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v14, v9 + 16);
  if (v8) {
    id v10 = partial apply for closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:);
  }
  else {
    id v10 = partial apply for closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:);
  }
  uint64_t v11 = v10;
  swift_retain();
  uint64_t v12 = v11(a1, a2);
  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v11);
  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v11);
  return v12;
}

uint64_t closure #3 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 120))(v33, v6, v7);
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v8, v9);
  (*(void (**)(long long *__return_ptr))(*(void *)v10 + 232))(v29);
  swift_release();
  if (v30 == 1)
  {
    outlined destroy of SubmitCommandError?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    memset(v31, 0, sizeof(v31));
    uint64_t v32 = 0;
  }
  else
  {
    outlined init with copy of PhoneCallNLIntent?((uint64_t)v29 + 8, (uint64_t)v31);
    outlined destroy of TransformationResult((uint64_t)v29);
  }
  static OngoingCallOfferOptions.from(rchRecord:callStateProvider:nlIntent:)(a2, v33, (uint64_t)v31);
  uint64_t v12 = v11;
  outlined destroy of SubmitCommandError?((uint64_t)v31, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  if (!*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_20;
  }
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v17 = ~v14;
    while (!*(unsigned char *)(*(void *)(v12 + 48) + v15) || *(unsigned char *)(*(void *)(v12 + 48) + v15) == 1)
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_26;
      }
      unint64_t v15 = (v15 + 1) & v17;
      if (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_11;
      }
    }
    goto LABEL_25;
  }
LABEL_11:
  if (!*(void *)(v12 + 16))
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v29);
    uint64_t v24 = swift_allocObject();
    outlined init with take of AppSelectionSignalComponent(v29, v24 + 16);
    uint64_t v25 = partial apply for specialized closure #1 in static CallingIntentContinueInAppFlow.makeProducer(sharedGlobals:)(a1, a2);
    goto LABEL_27;
  }
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v19 = Hasher._finalize()();
  uint64_t v20 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v21 = v19 & ~v20;
  if (((*(void *)(v16 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v22 = ~v20;
  while (!*(unsigned char *)(*(void *)(v12 + 48) + v21) || *(unsigned char *)(*(void *)(v12 + 48) + v21) == 2)
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_25;
    }
    unint64_t v21 = (v21 + 1) & v22;
    if (((*(void *)(v16 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v29);
  type metadata accessor for HangUpAndCallHandleIntentStrategy();
  swift_allocObject();
  *(void *)&v29[0] = HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)((uint64_t)v29, v12);
  lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>, (void (*)(uint64_t))type metadata accessor for HangUpAndCallHandleIntentStrategy);
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)();
  swift_release();
  uint64_t v25 = v26(a1, a2);
LABEL_27:
  uint64_t v27 = v25;
  swift_release();
  return v27;
}

uint64_t specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for CATOption();
  __chkstk_darwin(v4 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INAddCallParticipantIntent>);
  uint64_t v5 = (void *)ParameterResolutionRecord.intent.getter();
  uint64_t v6 = (void *)ParameterResolutionRecord.result.getter();
  uint64_t v7 = static EmergencyDuringOngoingCallPromptType.from(intent:intentResolutionResult:)(v5, v6);
  uint64_t v9 = v8;
  char v11 = v10;
  int v12 = v10;

  if (v12 == 255) {
    Swift::Int v13 = 0;
  }
  else {
    Swift::Int v13 = v7;
  }
  if (v12 == 255) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v9;
  }
  if (v12 == 255) {
    char v15 = 0;
  }
  else {
    char v15 = v11;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_1_110();
  OUTLINED_FUNCTION_1_110();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    Swift::Int v19 = (uint8_t *)swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)Swift::Int v19 = 136315138;
    OUTLINED_FUNCTION_1_110();
    uint64_t v20 = a3;
    unint64_t v21 = EmergencyDuringOngoingCallPromptType.description.getter(v13, v14, v15);
    unint64_t v23 = v22;
    OUTLINED_FUNCTION_0_71();
    uint64_t v24 = v21;
    a3 = v20;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v23, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_71();
    OUTLINED_FUNCTION_0_71();
    _os_log_impl(&dword_0, v17, v18, "#OngoingCallFlowProducers Emergency during ongoing call - pushing unsupported value offer flow for %s", v19, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_0_71();
    OUTLINED_FUNCTION_0_71();
  }

  OUTLINED_FUNCTION_1_110();
  uint64_t v25 = (void *)ParameterResolutionRecord.intent.getter();
  outlined init with copy of SignalProviding(a3, (uint64_t)v32);
  type metadata accessor for PhoneCallCommonCATs();
  static CATOption.defaultMode.getter();
  uint64_t v26 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallCommonCATPatternsExecutor();
  static CATOption.defaultMode.getter();
  uint64_t v27 = CATWrapper.__allocating_init(options:globals:)();
  uint64_t v28 = *(uint64_t (**)(uint64_t))(*(void *)specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(v13, v14, v15, v25, (uint64_t)v32, v26, v27)+ 224);
  uint64_t v29 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent);
  v32[0] = v28(v29);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyUnsupportedValueFlow<INAddCallParticipantIntent>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyUnsupportedValueFlow<INAddCallParticipantIntent> and conformance AnyUnsupportedValueFlow<A>, &demangling cache variable for type metadata for AnyUnsupportedValueFlow<INAddCallParticipantIntent>);
  uint64_t v30 = Flow.eraseToAnyValueFlow()();
  swift_release();
  OUTLINED_FUNCTION_0_71();
  swift_release();
  return v30;
}

{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  id v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  char v45;
  void v46[5];
  uint64_t v47[5];

  uint64_t v5 = type metadata accessor for CATOption();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartCallIntent>);
  uint64_t v9 = (void *)ParameterResolutionRecord.intent.getter();
  unsigned __int8 v10 = (void *)ParameterResolutionRecord.result.getter();
  self;
  char v11 = swift_dynamicCastObjCClass();
  if (!v11)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      char v15 = [v10 unsupportedReason];
      if ((id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v15)
      {

        goto LABEL_8;
      }
    }
    goto LABEL_17;
  }
  int v12 = (void *)v11;
  Swift::Int v13 = v9;
  uint64_t v14 = (char *)[v10 unsupportedReason];
  if (v14 == (unsigned char *)&dword_4 + 1)
  {
    uint64_t v17 = outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(v12);
    if (!v17)
    {

      goto LABEL_23;
    }
    os_log_type_t v18 = v17;
    if (v17 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_12:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v18 & 0xC000000000000001) == 0, v18);
        if ((v18 & 0xC000000000000001) != 0) {
          Swift::Int v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          Swift::Int v19 = *(id *)(v18 + 32);
        }
        uint64_t v9 = v19;
        swift_bridgeObjectRelease();
        uint64_t v20 = [v9 personHandle];
        if (v20)
        {
          uint64_t v20 = (id)outlined bridged method (ob) of @objc INPersonHandle.value.getter(v20);
          unint64_t v22 = v21;
        }
        else
        {
          unint64_t v22 = 0;
        }
        os_log_type_t v45 = specialized Optional<A>.isNilOrEmpty.getter((uint64_t)v20, v22);

        swift_bridgeObjectRelease();
        if ((v45 & 1) == 0) {
          goto LABEL_24;
        }
        goto LABEL_22;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8)))
    {
      goto LABEL_12;
    }

    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v14 == (unsigned char *)&dword_4 + 2)
  {

LABEL_8:
    uint64_t v9 = 0;
    uint64_t v16 = 2;
    goto LABEL_25;
  }

LABEL_17:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  unint64_t v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = Logger.logObject.getter();
  uint64_t v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "#EmergencyDuringOngoingCallPromptType Intent and resolutionResult do not correspond to an emergency usecase.", v26, 2u);
    swift_slowDealloc();
  }

LABEL_22:
LABEL_23:
  uint64_t v9 = 0;
LABEL_24:
  uint64_t v16 = 0;
LABEL_25:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
  outlined copy of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
  uint64_t v28 = Logger.logObject.getter();
  uint64_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    v46[1] = v8;
    uint64_t v31 = (uint8_t *)v30;
    uint64_t v32 = swift_slowAlloc();
    v46[2] = a2;
    v47[0] = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    v46[3] = v7;
    v46[0] = v31 + 4;
    outlined copy of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
    unint64_t v33 = a3;
    uint64_t v34 = EmergencyDuringOngoingCallPromptType.description.getter(v9, 0, v16);
    uint64_t v36 = v35;
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
    unint64_t v37 = v34;
    a3 = v33;
    v46[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v36, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
    _os_log_impl(&dword_0, v28, v29, "#OngoingCallFlowProducers Emergency during ongoing call - pushing unsupported value offer flow for %s", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
  }

  outlined copy of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
  unint64_t v38 = (void *)ParameterResolutionRecord.intent.getter();
  outlined init with copy of SignalProviding(a3, (uint64_t)v47);
  type metadata accessor for PhoneCallCommonCATs();
  static CATOption.defaultMode.getter();
  Swift::String v39 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallCommonCATPatternsExecutor();
  static CATOption.defaultMode.getter();
  uint64_t v40 = CATWrapper.__allocating_init(options:globals:)();
  uint64_t v41 = *(uint64_t (**)(uint64_t))(*(void *)specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(v9, 0, v16, v38, (uint64_t)v47, v39, v40)+ 224);
  uint64_t v42 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  v47[0] = v41(v42);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyUnsupportedValueFlow<INStartCallIntent>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyUnsupportedValueFlow<INStartCallIntent> and conformance AnyUnsupportedValueFlow<A>, &demangling cache variable for type metadata for AnyUnsupportedValueFlow<INStartCallIntent>);
  uint64_t v43 = Flow.eraseToAnyValueFlow()();
  swift_release();
  outlined consume of EmergencyDuringOngoingCallPromptType(v9, 0, v16);
  swift_release();
  return v43;
}

uint64_t closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = type metadata accessor for CATOption();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = *(void *)(v4 + class metadata base offset for RCHChildFlowFactory);
  type metadata accessor for ParameterResolutionRecord();
  uint64_t v7 = (void *)ParameterResolutionRecord.intent.getter();
  uint64_t v8 = (void *)ParameterResolutionRecord.result.getter();
  uint64_t v9 = static EmergencyDuringOngoingCallPromptType.from(intent:intentResolutionResult:)(v7, v8);
  char v11 = v10;
  char v13 = v12;
  int v14 = v12;

  if (v14 == 255)
  {
    uint64_t v9 = 0;
    char v11 = 0;
    char v13 = 0;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
  outlined copy of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v30 = v6;
    os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v18 = 136315138;
    outlined copy of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
    uint64_t v19 = a3;
    unint64_t v20 = EmergencyDuringOngoingCallPromptType.description.getter(v9, v11, v13);
    unint64_t v22 = v21;
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
    uint64_t v23 = v20;
    a3 = v19;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v22, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
    _os_log_impl(&dword_0, v16, v17, "#OngoingCallFlowProducers Emergency during ongoing call - pushing unsupported value offer flow for %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v30;
    swift_slowDealloc();
  }
  else
  {
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
    outlined consume of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
  }

  outlined copy of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
  uint64_t v24 = (void *)ParameterResolutionRecord.intent.getter();
  outlined init with copy of SignalProviding(a3, (uint64_t)v31);
  type metadata accessor for PhoneCallCommonCATs();
  static CATOption.defaultMode.getter();
  uint64_t v25 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallCommonCATPatternsExecutor();
  static CATOption.defaultMode.getter();
  uint64_t v26 = CATWrapper.__allocating_init(options:globals:)();
  uint64_t v27 = specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(v9, v11, v13, v24, (uint64_t)v31, v25, v26);
  v31[0] = (*(uint64_t (**)(uint64_t))(*(void *)v27 + 224))(v6);
  type metadata accessor for AnyUnsupportedValueFlow();
  swift_getWitnessTable();
  uint64_t v28 = Flow.eraseToAnyValueFlow()();
  swift_release();
  outlined consume of EmergencyDuringOngoingCallPromptType(v9, v11, v13);
  swift_release();
  return v28;
}

uint64_t closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for CATOption();
  __chkstk_darwin(v4 - 8);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "#OngoingCallFlowProducers Emergency during ongoing call - pushing confirm intent offer flow", v8, 2u);
    swift_slowDealloc();
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v9 = (void *)IntentResolutionRecord.intent.getter();
  unsigned __int8 v10 = (void *)IntentResolutionRecord.intentResponse.getter();
  char v11 = (void *)IntentResolutionRecord.intent.getter();
  outlined init with copy of SignalProviding(a3, (uint64_t)v18);
  type metadata accessor for PhoneCallCommonCATs();
  static CATOption.defaultMode.getter();
  uint64_t v12 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallCommonCATPatternsExecutor();
  static CATOption.defaultMode.getter();
  uint64_t v13 = CATWrapper.__allocating_init(options:globals:)();
  int v14 = *(uint64_t (**)(uint64_t))(*(void *)specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(v9, v10, 1, v11, (uint64_t)v18, v12, v13)+ 216);
  uint64_t v15 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  v18[0] = v14(v15);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyConfirmIntentFlow<INStartCallIntent> and conformance AnyConfirmIntentFlow<A>, &demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  uint64_t v16 = Flow.eraseToAnyValueFlow()();
  swift_release();
  swift_release();
  return v16;
}

uint64_t closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  unsigned __int8 v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "#OngoingCallFlowProducers Call request during ongoing call - pushing confirm intent offer flow", v12, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for OngoingCallConfirmIntentFlow(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  outlined init with copy of SignalProviding(a3, (uint64_t)v16);
  v16[0] = OngoingCallConfirmIntentFlow.__allocating_init(rchRecord:sharedGlobals:)((uint64_t)v8, (uint64_t)v16);
  lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow, (void (*)(uint64_t))type metadata accessor for OngoingCallConfirmIntentFlow);
  uint64_t v13 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v13;
}

uint64_t sub_40781C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(a1, a2, v2 + 16, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 56));
}

uint64_t partial apply for closure #2 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(a1, a2, v2 + 16);
}

uint64_t partial apply for closure #3 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  return closure #3 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(a1, a2, (void *)(v2 + 16));
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)(uint64_t *a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)(a1, a2, v2 + 16);
}

ValueMetadata *type metadata accessor for OngoingCallFlowProducers()
{
  return &type metadata for OngoingCallFlowProducers;
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(void *a1, void *a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v17 = type metadata accessor for ConfirmationResponse();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 2, v17);
  outlined init with copy of SignalProviding(a5, (uint64_t)v22);
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow(0);
  uint64_t v18 = swift_allocObject();
  swift_retain();
  uint64_t v19 = specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)((uint64_t)v16, a1, a2, a3, a4, (uint64_t)v22, a6, a7, v18);
  __swift_destroy_boxed_opaque_existential_1(a5);
  swift_release();
  return v19;
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(uint64_t a1, void *a2, void *a3, char a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v31[3] = type metadata accessor for PhoneCallCommonCATPatternsExecutor();
  v31[4] = &protocol witness table for PhoneCallCommonCATPatternsExecutor;
  v31[0] = a8;
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state);
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(unsigned char *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  outlined init with copy of SignalProviding(a6, a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  *(void *)(a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCats) = a7;
  outlined init with copy of SignalProviding((uint64_t)v31, a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCatPatterns);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  uint64_t v17 = one-time initialization token for siriPhone;
  id v18 = a5;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  unint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v29 = a1;
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 136315138;
    outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    uint64_t v28 = a6;
    unint64_t v23 = EmergencyDuringOngoingCallPromptType.description.getter(a2, a3, a4);
    unint64_t v25 = v24;
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v25, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    _os_log_impl(&dword_0, v20, v21, "#EmergencyDuringOngoingCallOfferFlow initialized with promptType: %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    __swift_destroy_boxed_opaque_existential_1(v28);
    uint64_t v26 = v29;
  }
  else
  {

    swift_release();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    __swift_destroy_boxed_opaque_existential_1(a6);
    uint64_t v26 = a1;
  }
  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return a9;
}

uint64_t sub_407D18()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:)(a1, a2, v2 + 16);
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:)(a1, a2, v2 + 16);
}

uint64_t lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void OUTLINED_FUNCTION_0_71()
{
  outlined consume of EmergencyDuringOngoingCallPromptType(v0, v1, v2);
}

id OUTLINED_FUNCTION_1_110()
{
  return outlined copy of EmergencyDuringOngoingCallPromptType(v0, v1, v2);
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance AddCallParticipantContactSlotResolver()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v2 = OUTLINED_FUNCTION_12_61();
  return v3(v2);
}

uint64_t specialized SlotResolver.resolve(skIntent:nlIntent:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_20_49(v2);
  OUTLINED_FUNCTION_22();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 104) + **(int **)(v3 + 104));
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_4(v4);
  *uint64_t v5 = v6;
  v5[1] = specialized SlotResolver.resolve(skIntent:nlIntent:);
  return v8(v1, v0);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_13_1();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[2];
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t, void *))(v3 + 120))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v4 = v2;
  uint64_t v5 = v0[2];
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_20_49(v0);
  uint64_t v1 = OUTLINED_FUNCTION_9_0();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_40_4(v1);
  *uint64_t v2 = v3;
  v2[1] = specialized SlotResolver.resolve(skIntent:nlIntent:);
  uint64_t v4 = OUTLINED_FUNCTION_12_61();
  return v5(v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_13_1();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_20_49(v0);
  uint64_t v1 = OUTLINED_FUNCTION_9_0();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_40_4(v1);
  *uint64_t v2 = v3;
  v2[1] = specialized SlotResolver.resolve(skIntent:nlIntent:);
  uint64_t v4 = OUTLINED_FUNCTION_12_61();
  return v5(v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_13_1();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[2];
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t, void *))(v3 + 144))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v4 = v2;
  uint64_t v5 = v0[2];
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_20_49(v0);
  uint64_t v1 = OUTLINED_FUNCTION_9_0();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_40_4(v1);
  *uint64_t v2 = v3;
  v2[1] = specialized SlotResolver.resolve(skIntent:nlIntent:);
  uint64_t v4 = OUTLINED_FUNCTION_12_61();
  return v5(v4);
}

uint64_t SlotResolver.resolve(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  _OWORD v5[3] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5[6] = AssociatedTypeWitness;
  OUTLINED_FUNCTION_19_0(AssociatedTypeWitness);
  v5[7] = v8;
  v5[8] = swift_task_alloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  v5[9] = v9;
  *uint64_t v9 = v5;
  v9[1] = SlotResolver.resolve(skIntent:nlIntent:);
  uint64_t v10 = OUTLINED_FUNCTION_22_55();
  return v12(v10);
}

uint64_t SlotResolver.resolve(skIntent:nlIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = (void *)v0[2];
  (*(void (**)(uint64_t, void *, void))(v0[4] + 40))(v1, v4, v0[3]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = v4;
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v7 = v0[2];
  return v6(v7);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = a6;
  unint64_t v23 = a7;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  uint64_t v9 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for EmergencyContactResolution();
  uint64_t v16 = v7[3];
  uint64_t v17 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v16);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v25, v16, v17);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  outlined init with copy of SignalProviding((uint64_t)(v7 + 5), (uint64_t)v24);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v20;
  *(void *)(v18 + 24) = a4;
  swift_retain();
  v23(v21, v14, v24, v22, v18, v15);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:) in conformance EmergencyContactSlotResolver<A>()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_23_47();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  uint64_t v2 = OUTLINED_FUNCTION_22_55();
  return SlotResolver.resolveSlot(skIntent:nlIntent:)(v2, v3, v4, v5, v6);
}

uint64_t specialized SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a1;
  v3[5] = a2;
  v3[3] = v2;
  return _swift_task_switch(specialized SlotResolver.resolveSlot(skIntent:nlIntent:), 0, 0);
}

{
  uint64_t v2;
  void *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
}

{
  uint64_t v2;
  void *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[3] = v2;
  return _swift_task_switch(specialized SlotResolver.resolveSlot(skIntent:nlIntent:), 0, 0);
}

{
  uint64_t v2;
  void *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
}

{
  uint64_t v2;
  void *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[3] = v2;
  return _swift_task_switch(specialized SlotResolver.resolveSlot(skIntent:nlIntent:), 0, 0);
}

{
  uint64_t v2;
  void *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
}

uint64_t specialized SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_16_1();
  unint64_t v13 = OUTLINED_FUNCTION_25_44();
  OUTLINED_FUNCTION_15_61(v13);
  uint64_t v14 = swift_task_alloc();
  OUTLINED_FUNCTION_21_45(v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  OUTLINED_FUNCTION_8_100();
  void *v12 = v15;
  v12[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_19_45();
  uint64_t v16 = OUTLINED_FUNCTION_1_111();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  OUTLINED_FUNCTION_16_1();
  unint64_t v13 = OUTLINED_FUNCTION_26_38();
  OUTLINED_FUNCTION_14_51(v13);
  uint64_t v14 = swift_task_alloc();
  OUTLINED_FUNCTION_21_45(v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  OUTLINED_FUNCTION_8_100();
  void *v12 = v15;
  v12[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_19_45();
  uint64_t v16 = OUTLINED_FUNCTION_1_111();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

{
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  OUTLINED_FUNCTION_16_1();
  unint64_t v13 = OUTLINED_FUNCTION_25_44();
  OUTLINED_FUNCTION_15_61(v13);
  uint64_t v14 = swift_task_alloc();
  OUTLINED_FUNCTION_21_45(v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  OUTLINED_FUNCTION_8_100();
  void *v12 = v15;
  v12[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_19_45();
  uint64_t v16 = OUTLINED_FUNCTION_1_111();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  OUTLINED_FUNCTION_16_1();
  unint64_t v13 = OUTLINED_FUNCTION_26_38();
  OUTLINED_FUNCTION_14_51(v13);
  uint64_t v14 = swift_task_alloc();
  OUTLINED_FUNCTION_21_45(v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  OUTLINED_FUNCTION_8_100();
  void *v12 = v15;
  v12[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_19_45();
  uint64_t v16 = OUTLINED_FUNCTION_1_111();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

{
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  OUTLINED_FUNCTION_16_1();
  unint64_t v13 = OUTLINED_FUNCTION_25_44();
  OUTLINED_FUNCTION_15_61(v13);
  uint64_t v14 = swift_task_alloc();
  OUTLINED_FUNCTION_21_45(v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  OUTLINED_FUNCTION_8_100();
  void *v12 = v15;
  v12[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_19_45();
  uint64_t v16 = OUTLINED_FUNCTION_1_111();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  OUTLINED_FUNCTION_16_1();
  unint64_t v13 = OUTLINED_FUNCTION_26_38();
  OUTLINED_FUNCTION_14_51(v13);
  uint64_t v14 = swift_task_alloc();
  OUTLINED_FUNCTION_21_45(v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  OUTLINED_FUNCTION_8_100();
  void *v12 = v15;
  v12[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_19_45();
  uint64_t v16 = OUTLINED_FUNCTION_1_111();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

uint64_t specialized SlotResolver.resolveSlot(skIntent:nlIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_10_71();
    return v11(v10);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_10_71();
    return v11(v10);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SlotResolver.resolveSlot(skIntent:nlIntent:));
}

uint64_t SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v14 = swift_task_alloc();
  *(void *)(v12 + 64) = v14;
  long long v15 = *(_OWORD *)(v12 + 48);
  long long v16 = *(_OWORD *)(v12 + 24);
  *(void *)(v14 + 16) = v13;
  *(_OWORD *)(v14 + 24) = v15;
  *(_OWORD *)(v14 + 40) = v16;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v12 + 72) = v17;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_8_100();
  *uint64_t v17 = v18;
  v17[1] = SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_19_45();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v19, 0, 0, 0xD00000000000001FLL, v20, partial apply for closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:), v14, v21, a9, a10, a11, a12);
}

uint64_t SlotResolver.resolveSlot(skIntent:nlIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
    return v10();
  }
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance EmergencyContactSlotResolver<A>()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  swift_getWitnessTable();
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v2 = OUTLINED_FUNCTION_28_41();
  return SlotResolver.resolve(skIntent:nlIntent:)(v2, v3, v4, v5);
}

uint64_t specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA;
  *(void *)(v12 + 24) = v11;
  swift_retain();
  specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(a3, a4, (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0, v12, (uint64_t)&unk_56CE80, (uint64_t)closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)partial apply, (void (*)(uint64_t, char *, unsigned char *, uint64_t, uint64_t, uint64_t))specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:));
  swift_release();
  return swift_release();
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA;
  *(void *)(v12 + 24) = v11;
  swift_retain();
  specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(a3, a4, (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0, v12, (uint64_t)&unk_56CD90, (uint64_t)closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)partial apply, (void (*)(uint64_t, char *, unsigned char *, uint64_t, uint64_t, uint64_t))specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:));
  swift_release();
  return swift_release();
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA;
  *(void *)(v12 + 24) = v11;
  swift_retain();
  specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)(a3, a4, (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0, v12, (uint64_t)&unk_56CCA0, (uint64_t)partial apply for closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:), (void (*)(uint64_t, char *, unsigned char *, uint64_t, uint64_t, uint64_t))specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:));
  swift_release();
  return swift_release();
}

uint64_t specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a4;
  uint64_t v24 = a8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v17, (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = v18;
  OUTLINED_FUNCTION_22();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 136);
  swift_retain();
  v21(a3, v23, v24, v19);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v10 = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_(a1, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 32))(a3, a4, v10, v11, a5, a6);

  return swift_release();
}

uint64_t partial apply for closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1)
{
  return closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t (*_s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  uint64_t v6 = type metadata accessor for CheckedContinuation();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - v8, a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, v9, v6);
  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_TA;
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_Tg5Tm(uint64_t a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x100) != 0)
  {
    char v5 = a3;
    lazy protocol witness table accessor for type SlotResolverError and conformance SlotResolverError();
    swift_allocError();
    *(void *)uint64_t v7 = a1;
    *(void *)(v7 + 8) = a2;
    *(unsigned char *)(v7 + 16) = v5;
    outlined copy of SlotResolverError(a1, a2, v5);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  uint64_t v2 = type metadata accessor for CheckedContinuation();
  lazy protocol witness table accessor for type SlotResolverError and conformance SlotResolverError();
  return CheckedContinuation.resume<A>(with:)(a1, v2, (uint64_t)&type metadata for SlotResolverError);
}

uint64_t CheckedContinuation.resume<A>(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[1] = a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v7);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Result();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v22 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v18(v13, v16, a3);
    uint64_t v19 = swift_allocError();
    v18(v20, v13, a3);
    void v22[3] = v19;
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v16, v5);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:) in conformance SiriInferenceContactSlotResolver<A>()
{
  OUTLINED_FUNCTION_23_47();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  uint64_t v6 = type metadata accessor for SiriInferenceContactSlotResolver();
  *uint64_t v5 = v1;
  v5[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return SlotResolver.resolveSlot(skIntent:nlIntent:)(v4, v3, v2, v6, v0);
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance SiriInferenceContactSlotResolver<A>()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  type metadata accessor for SiriInferenceContactSlotResolver();
  swift_getWitnessTable();
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v2 = OUTLINED_FUNCTION_28_41();
  return SlotResolver.resolve(skIntent:nlIntent:)(v2, v3, v4, v5);
}

uint64_t sub_40A42C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  type metadata accessor for CheckedContinuation();
  OUTLINED_FUNCTION_39_8();
  uint64_t v3 = OUTLINED_FUNCTION_24_41();
  v4(v3);

  return _swift_deallocObject(v0, AssociatedTypeWitness, v1);
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_TA(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  uint64_t v2 = type metadata accessor for CheckedContinuation();
  OUTLINED_FUNCTION_13(v2);

  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_(a1);
}

unint64_t lazy protocol witness table accessor for type SlotResolverError and conformance SlotResolverError()
{
  unint64_t result = lazy protocol witness table cache variable for type SlotResolverError and conformance SlotResolverError;
  if (!lazy protocol witness table cache variable for type SlotResolverError and conformance SlotResolverError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SlotResolverError and conformance SlotResolverError);
  }
  return result;
}

uint64_t specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v38 = a1;
  uint64_t v39 = a6;
  uint64_t v34 = a5;
  uint64_t v37 = a4;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  __int16 v17 = v16;
  uint64_t v18 = a3[4];
  uint64_t v36 = a3[3];
  uint64_t v33 = v18;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(a3, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v32;
  *(void *)(v21 + 16) = v13;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = v31;
  *(unsigned char *)(v21 + 40) = v17;
  *(unsigned char *)(v21 + 41) = HIBYTE(v17) & 1;
  uint64_t v23 = v34;
  *(void *)(v21 + 48) = v37;
  *(void *)(v21 + 56) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v19, v11, v8);
  uint64_t v24 = (void *)(v21 + v20);
  uint64_t v25 = v38;
  *uint64_t v24 = v38;
  v24[1] = &protocol witness table for INStartVideoCallIntent;
  *(void *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v39;
  uint64_t v26 = v33;
  uint64_t v27 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v33 + 8);
  swift_retain();
  swift_retain();
  id v28 = v25;
  v27(_s27PhoneCallFlowDelegatePlugin26EmergencyContactResolutionC05fetchF8Contacts13sirikitIntent6locale14medicalIDStore_yAA018INPersonContainingL0_p_10Foundation6LocaleVAA0fG9Providing_pys6ResultOySaySo0P0CGs5Error_pGctFZySaySo012_HKEmergencyG0CGSg_sAR_pSgtcfU_TA_0, v21, v36, v26);
  swift_release();
  return swift_release();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void (*v27)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  unint64_t v38 = a1;
  uint64_t v39 = a6;
  uint64_t v34 = a5;
  uint64_t v37 = a4;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  __int16 v17 = v16;
  uint64_t v18 = a3[4];
  uint64_t v36 = a3[3];
  uint64_t v33 = v18;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(a3, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v32;
  *(void *)(v21 + 16) = v13;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = v31;
  *(unsigned char *)(v21 + 40) = v17;
  *(unsigned char *)(v21 + 41) = HIBYTE(v17) & 1;
  uint64_t v23 = v34;
  *(void *)(v21 + 48) = v37;
  *(void *)(v21 + 56) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v19, v11, v8);
  uint64_t v24 = (void *)(v21 + v20);
  uint64_t v25 = v38;
  *uint64_t v24 = v38;
  v24[1] = &protocol witness table for INStartAudioCallIntent;
  *(void *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v39;
  uint64_t v26 = v33;
  uint64_t v27 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v33 + 8);
  swift_retain();
  swift_retain();
  id v28 = v25;
  v27(_s27PhoneCallFlowDelegatePlugin26EmergencyContactResolutionC05fetchF8Contacts13sirikitIntent6locale14medicalIDStore_yAA018INPersonContainingL0_p_10Foundation6LocaleVAA0fG9Providing_pys6ResultOySaySo0P0CGs5Error_pGctFZySaySo012_HKEmergencyG0CGSg_sAR_pSgtcfU_TA_0, v21, v36, v26);
  swift_release();
  return swift_release();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void (*v27)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  unint64_t v38 = a1;
  uint64_t v39 = a6;
  uint64_t v34 = a5;
  uint64_t v37 = a4;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  __int16 v17 = v16;
  uint64_t v18 = a3[4];
  uint64_t v36 = a3[3];
  uint64_t v33 = v18;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(a3, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v32;
  *(void *)(v21 + 16) = v13;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = v31;
  *(unsigned char *)(v21 + 40) = v17;
  *(unsigned char *)(v21 + 41) = HIBYTE(v17) & 1;
  uint64_t v23 = v34;
  *(void *)(v21 + 48) = v37;
  *(void *)(v21 + 56) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v19, v11, v8);
  uint64_t v24 = (void *)(v21 + v20);
  uint64_t v25 = v38;
  *uint64_t v24 = v38;
  v24[1] = &protocol witness table for INStartCallIntent;
  *(void *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v39;
  uint64_t v26 = v33;
  uint64_t v27 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v33 + 8);
  swift_retain();
  swift_retain();
  id v28 = v25;
  v27(_s27PhoneCallFlowDelegatePlugin26EmergencyContactResolutionC05fetchF8Contacts13sirikitIntent6locale14medicalIDStore_yAA018INPersonContainingL0_p_10Foundation6LocaleVAA0fG9Providing_pys6ResultOySaySo0P0CGs5Error_pGctFZySaySo012_HKEmergencyG0CGSg_sAR_pSgtcfU_TA_0, v21, v36, v26);
  swift_release();
  return swift_release();
}

uint64_t specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, *a2, a3, a4, (uint64_t)&unk_56CDE0, (uint64_t)&unk_56CE08, (uint64_t)_s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA, (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0);
}

{
  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, *a2, a3, a4, (uint64_t)&unk_56CCF0, (uint64_t)&unk_56CD18, (uint64_t)_s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA, (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0);
}

{
  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, *a2, a3, a4, (uint64_t)&unk_56CC00, (uint64_t)&unk_56CC28, (uint64_t)_s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA, (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0);
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_TG5Tm(uint64_t a1)
{
  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_Tg5Tm(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8));
}

uint64_t partial apply for specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1)
{
  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

{
  uint64_t *v1;

  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[2], v1[3], v1[4]);
}

{
  uint64_t v1;

  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

{
  uint64_t *v1;

  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[2], v1[3], v1[4]);
}

{
  uint64_t v1;

  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

{
  uint64_t *v1;

  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_40AD70()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroy_22Tm_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  OUTLINED_FUNCTION_39_8();
  uint64_t v3 = OUTLINED_FUNCTION_24_41();
  v4(v3);

  return _swift_deallocObject(v1, v0, v2);
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TATm(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  OUTLINED_FUNCTION_13(v2);
  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_TG5Tm(a1);
}

uint64_t objectdestroy_40Tm()
{
  uint64_t v1 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 64) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v8);
}

#error "40B044: call analysis failed (funcsize=48)"

uint64_t OUTLINED_FUNCTION_1_111()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_71()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_12_61()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_14_51(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  __n128 result = *(__n128 *)(v2 + 24);
  *(void *)(a1 + 16) = v1;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 OUTLINED_FUNCTION_15_61(unint64_t a1)
{
  v2[3].n128_u64[0] = a1;
  __n128 result = v2[2];
  *(void *)(a1 + 16) = v1;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_49(uint64_t result)
{
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_41()
{
  return v1 + v0;
}

uint64_t OUTLINED_FUNCTION_26_38()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_28_41()
{
  return v0;
}

uint64_t ContactDisambiguationPromptResponseParser.init(personsToDisambiguate:referenceResolver:sharedGlobals:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v5 = (uint64_t)(a4 + 6);
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a4 + 1));

  return outlined init with take of AppSelectionSignalComponent(a3, v5);
}

void *ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v45 = v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)(v1 + 48);
  outlined init with copy of SignalProviding(v1 + 48, (uint64_t)v48);
  unsigned __int8 v16 = ContactPromptResponseParser.parseResponse(from:)(a1);
  outlined destroy of ContactPromptResponseParser((uint64_t)v48);
  if (v16 != 8) {
    return (void *)v16;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v9);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v9);
  if (v17 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v18 = OUTLINED_FUNCTION_2_127();
    v19(v18);
    goto LABEL_10;
  }
  int v21 = v17;
  if (v17 != enum case for Parse.directInvocation(_:))
  {
    if (v17 == enum case for Parse.NLv4IntentOnly(_:))
    {
      uint64_t v27 = OUTLINED_FUNCTION_1_112();
      v28(v27);
      swift_unknownObjectRelease();
    }
    else
    {
      int v29 = enum case for Parse.uso(_:);
      uint64_t v30 = OUTLINED_FUNCTION_2_127();
      v31(v30);
      if (v21 != v29) {
        goto LABEL_13;
      }
    }
LABEL_10:
    uint64_t v32 = *(void *)(v2 + 72);
    uint64_t v33 = *(void *)(v2 + 80);
    __swift_project_boxed_opaque_existential_1(v15, v32);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 72))(v32, v33);
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)v34 + 192))(&v46, a1);
    swift_release();
    if (v47)
    {
      outlined init with take of AppSelectionSignalComponent(&v46, (uint64_t)v48);
      unint64_t v20 = (void *)ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:parse:)(v48);
      char v26 = v35;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      goto LABEL_14;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)&v46, &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_13:
    unint64_t v20 = 0;
    char v26 = -1;
    goto LABEL_14;
  }
  uint64_t v22 = OUTLINED_FUNCTION_1_112();
  v23(v22);
  uint64_t v24 = v45;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v8, v14, v4);
  unint64_t v20 = ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)((uint64_t)v8);
  char v26 = v25;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v4);
LABEL_14:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
  outlined copy of ContactDisambiguationPromptResponse?(v20, v26);
  outlined copy of ContactDisambiguationPromptResponse?(v20, v26);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    *(void *)&long long v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000022, 0x800000000049D1A0, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v39 + 12) = 2080;
    if (v26 == -1)
    {
      unint64_t v42 = 0xE300000000000000;
      uint64_t v40 = 7104878;
    }
    else
    {
      outlined copy of ContactDisambiguationPromptResponse(v20, v26);
      uint64_t v40 = ContactDisambiguationPromptResponse.debugDescription.getter((char *)v20, v26);
      unint64_t v42 = v41;
      outlined consume of ContactDisambiguationPromptResponse?(v20, v26);
    }
    *(void *)&long long v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of ContactDisambiguationPromptResponse?(v20, v26);
    outlined consume of ContactDisambiguationPromptResponse?(v20, v26);
    _os_log_impl(&dword_0, v37, v38, "#ContactDisambiguationPromptResponseParser %s: %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined consume of ContactDisambiguationPromptResponse?(v20, v26);
    outlined consume of ContactDisambiguationPromptResponse?(v20, v26);
  }

  return v20;
}

uint64_t specialized PhoneCallNLIntent.isEmergencyServicesCall()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
LABEL_8:
    int v9 = 0;
    uint64_t v10 = 0;
    int v11 = *(unsigned __int8 *)(v1 + 75);
    if (v11 != 5) {
      goto LABEL_11;
    }
    return v10;
  }
  uint64_t v4 = v2 + 32;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    outlined init with copy of SignalProviding(v4, (uint64_t)v21);
    uint64_t v5 = v22;
    uint64_t v6 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v7 = SiriPhoneContact.getEmergencyType()(v5, v6);
    if (v8 != 3) {
      break;
    }
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v4 += 40;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_8;
    }
  }
  if (v8 != 1)
  {
    outlined consume of PhoneCallEmergencyType?(v7, v8);
    goto LABEL_6;
  }
  int v9 = 1;
  outlined consume of PhoneCallEmergencyType?(v7, 1uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  swift_bridgeObjectRelease_n();
  int v11 = *(unsigned __int8 *)(v1 + 75);
  if (v11 != 5)
  {
LABEL_11:
    PhoneCallDestinationType.rawValue.getter(v11);
    if (v13 == 0x636E656772656D65 && v12 == 0xE900000000000079)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v10 = 0;
      if (((v9 | v15) & 1) == 0) {
        return v10;
      }
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  int v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "#PhoneCallNLIntent EmergencyServices intent", v19, 2u);
    swift_slowDealloc();
  }

  return 1;
}