uint64_t IntentFromParseFlowStrategyHelper.makeIntentFromParseSiriX(parse:nlIntent:previousIntent:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void (*v34)(char *, void *, uint64_t);
  int v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  void (*v48)(uint64_t);
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  BOOL v55;
  id v56;
  uint8_t *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void);
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  Swift::String v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, void *, uint64_t);
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  char *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[4];
  uint64_t v107;

  v4 = v3;
  v99 = a3;
  OUTLINED_FUNCTION_2();
  v102 = v6;
  v103 = v7;
  v8 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  v92 = (void (*)(uint64_t, void *, uint64_t))v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  v93 = v11;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  v96 = v13;
  v97 = v12;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_3_1();
  v95 = v14;
  v15 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  v17 = v16;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_8();
  v94 = v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  v22 = (char *)&v91 - v21;
  v23 = v4[2];
  v104 = a2;
  v105 = v17;
  v100 = v8;
  v101 = (char *)&v91 - v21;
  if (v23)
  {
    v24 = one-time initialization token for siriPhone;
    swift_retain();
    if (v24 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    v25 = Logger.logObject.getter();
    v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)OUTLINED_FUNCTION_47();
      v106[0] = OUTLINED_FUNCTION_14_0();
      v98 = v15;
      *(_DWORD *)v27 = 136315138;
      v107 = v23;
      type metadata accessor for App();
      lazy protocol witness table accessor for type NLIntent and conformance NLIntent((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, (void (*)(uint64_t))&type metadata accessor for App);
      v28 = dispatch thunk of CustomStringConvertible.description.getter();
      v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v106);
      OUTLINED_FUNCTION_8_44(v30);
      v15 = v98;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v25, v26, "#IntentFromParseFlowStrategyHelper makeIntentFromParse: appResolved: %s", v27, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
      swift_release();
    }
    else
    {

      swift_release_n();
    }
    v17 = v105;
    v22 = v101;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    v31 = Logger.logObject.getter();
    v32 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_0, v31, v32, "#IntentFromParseFlowStrategyHelper makeIntentFromParse: no appResolved", v33, 2u);
      OUTLINED_FUNCTION_6();
    }
  }
  v34 = *(void (**)(char *, void *, uint64_t))(v17 + 16);
  v34(v22, v102, v15);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v22, v15);
  if (v35 == enum case for Parse.NLv3IntentOnly(_:))
  {
    v92 = (void (*)(uint64_t, void *, uint64_t))v34;
    v98 = v15;
    v36 = v4[6];
    v37 = v4[7];
    v93 = v4 + 3;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v36);
    v38 = *(void (**)(uint64_t))(v37 + 80);
    swift_retain();
    v39 = v4;
    v40 = (uint64_t)v99;
    v41 = v99;
    v42 = OUTLINED_FUNCTION_36_0();
    v38(v42);
    v43 = *(void *)(v103 + 80);
    v44 = v23;
    v45 = (void *)SKTransformer.convertToSKIntent<A>(ofType:phoneCallNLIntent:rchFlowContext:)(v43, v104, v23, v40, 0, v43);
    outlined destroy of SKTransformer((uint64_t)v106);
    if (v45)
    {
      v99 = v41;
      v46 = v39[7];
      v47 = v93;
      __swift_project_boxed_opaque_existential_1(v93, v39[6]);
      v48 = *(void (**)(uint64_t))(v46 + 8);
      v102 = v45;
      v49 = v45;
      v50 = OUTLINED_FUNCTION_36_0();
      v48(v50);
      __swift_project_boxed_opaque_existential_1(v106, v106[3]);
      v51 = v95;
      OUTLINED_FUNCTION_36_0();
      dispatch thunk of DeviceState.siriLocale.getter();
      specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)((uint64_t)v49, v104, v44, v51, (uint64_t)v47, 0, 1, v43, *(void *)(v103 + 88), v90, v91, (uint64_t)v92, (uint64_t)v93, v94, v95, v96, v97, v98, (uint64_t)v99,
        v100,
        (uint64_t)v101);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v51, v97);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v100, (uint64_t)static Logger.siriPhone);
      v52 = v49;
      v53 = Logger.logObject.getter();
      v54 = static os_log_type_t.debug.getter();
      v55 = os_log_type_enabled(v53, v54);
      v56 = v99;
      if (v55)
      {
        v57 = (uint8_t *)OUTLINED_FUNCTION_47();
        v106[0] = OUTLINED_FUNCTION_14_0();
        *(_DWORD *)v57 = 136315138;
        v107 = (uint64_t)v52;
        v58 = v52;
        swift_getWitnessTable();
        v59 = String.init<A>(describing:)();
        v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, v106);
        OUTLINED_FUNCTION_8_44(v61);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v53, v54, "#IntentFromParseFlowStrategyHelper SKIntent after NCR replacement: %s", v57, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();

        swift_release();
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v105 + 8))(v101, v98);
      return (uint64_t)v102;
    }
    else
    {

      swift_release();
      v72 = v105 + 8;
      v73 = *(void (**)(void))(v105 + 8);
      v74 = v98;
      ((void (*)(char *, uint64_t))v73)(v101, v98);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v100, (uint64_t)static Logger.siriPhone);
      v75 = v94;
      v92(v94, v102, v74);
      v76 = Logger.logObject.getter();
      v77 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = (uint8_t *)OUTLINED_FUNCTION_47();
        v79 = OUTLINED_FUNCTION_14_0();
        *(_DWORD *)v78 = 136315138;
        v105 = v72;
        v106[0] = v79;
        v80 = Parse.typeForLogging()();
        v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80._countAndFlagsBits, (unint64_t)v80._object, v106);
        OUTLINED_FUNCTION_8_44(v81);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_12_20();
        v73();
        _os_log_impl(&dword_0, v76, v77, "#IntentFromParseFlowStrategyHelper makeIntentFromParseSiriX get unexpected parse: %s", v78, 0xCu);
        OUTLINED_FUNCTION_20_1();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        ((void (*)(uint64_t, uint64_t))v73)(v75, v74);
      }

      return 0;
    }
  }
  v62 = v100;
  if (v35 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v22, v15);
    swift_unknownObjectRelease();
LABEL_23:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v62, (uint64_t)static Logger.siriPhone);
    v63 = Logger.logObject.getter();
    v64 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_0, v63, v64, "IntentFromParseFlowStrategyHelper NLv4/USO parse. running convertToIntent.", v65, 2u);
      OUTLINED_FUNCTION_6();
    }

    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    v66 = OUTLINED_FUNCTION_36_0();
    v67(v66);
    v68 = *(void *)(v103 + 80);
    swift_retain();
    v69 = (uint64_t)v99;
    v70 = v99;
    v71 = SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(v104, v23, v69, 0, v68);

    swift_release();
    outlined destroy of SKTransformer((uint64_t)v106);
    return v71;
  }
  if (v35 == enum case for Parse.uso(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v15);
    goto LABEL_23;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  v83 = __swift_project_value_buffer(v62, (uint64_t)static Logger.siriPhone);
  (*((void (**)(void *, uint64_t, uint64_t))v92 + 2))(v93, v83, v62);
  v106[0] = 0;
  v106[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  v84 = Logger.logObject.getter();
  v85 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v84, v85))
  {
    OUTLINED_FUNCTION_47();
    v106[0] = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_50_7(4.8149e-34);
    v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000057, v86, v106);
    OUTLINED_FUNCTION_8_44(v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_9_27(&dword_0, v88, v89, "%s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)();
  OUTLINED_FUNCTION_77();
  result = OUTLINED_FUNCTION_13_17();
  __break(1u);
  return result;
}

uint64_t IntentFromParseFlowStrategyHelper.inferApp(from:)()
{
  Parse.ServerConversion.appResolutionStateProviding.getter();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  OUTLINED_FUNCTION_52_4();
  uint64_t v0 = dispatch thunk of AppResolutionStateProviding.getRequestedApp()();
  outlined init with copy of SignalProviding((uint64_t)v3, (uint64_t)v2);
  if (!v0)
  {
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    OUTLINED_FUNCTION_52_4();
    uint64_t v0 = dispatch thunk of AppResolutionStateProviding.getSuggestedApp()();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v0;
}

uint64_t IntentFromParseFlowStrategyHelper.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t IntentFromParseFlowStrategyHelper.__deallocating_deinit()
{
  IntentFromParseFlowStrategyHelper.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata completion function for IntentFromParseFlowStrategyHelper()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for IntentFromParseFlowStrategyHelper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t lazy protocol witness table accessor for type NLIntent and conformance NLIntent(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void OUTLINED_FUNCTION_8_64(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

BOOL OUTLINED_FUNCTION_12_32(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)(void *a1)
{
  uint64_t v3 = type metadata accessor for TemplatingResult();
  v1[2] = v3;
  v1[3] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v1[4] = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for UnsupportedFlowCATs + *a1 + 104)
                                       + **(int **)(class metadata base offset for UnsupportedFlowCATs + *a1 + 104));
  v5 = (void *)swift_task_alloc();
  v1[5] = v5;
  void *v5 = v1;
  v5[1] = static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:);
  return v7(v4);
}

uint64_t static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:);
  }
  else {
    uint64_t v2 = static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)()
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAUISayIt);
  uint64_t result = (void *)TemplatingResult.speak.getter();
  if (result[2])
  {
    uint64_t v3 = v0[3];
    uint64_t v2 = v0[4];
    uint64_t v4 = v0[2];
    uint64_t v5 = result[4];
    uint64_t v6 = result[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v7 = TemplatingResult.templateIdentifier.getter();
    id v9 = SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(v5, v6, v7, v8, 1, 0);
    id v10 = [objc_allocWithZone((Class)SAResultCallback) init];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_46A030;
    *(void *)(v11 + 32) = v9;
    uint64_t v16 = v11;
    specialized Array._endMutation()();
    id v12 = v9;
    outlined bridged method (mbnn) of @objc SAResultCallback.commands.setter(v16, v10);
    [v10 setCode:SAResultCallbackAnyErrorCodeValue];
    id v13 = [objc_allocWithZone((Class)SAPhoneClientCoordinationPhoneCall) init];
    [v13 setEmergencyCall:1];
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_46A030;
    *(void *)(v14 + 32) = v10;
    uint64_t v17 = v14;
    specialized Array._endMutation()();
    outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.callbacks.setter(v17, v13);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    v15 = (uint64_t (*)(id))v0[1];
    return (void *)v15(v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc SAResultCallback.commands.setter(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCommands:isa];
}

void outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.callbacks.setter(uint64_t a1, void *a2)
{
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAResultCallback);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCallbacks:isa];
}

ValueMetadata *type metadata accessor for MyriadEmergencyCallOutputs()
{
  return &type metadata for MyriadEmergencyCallOutputs;
}

uint64_t _s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TR(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = swift_retain();
  return a2(v3);
}

uint64_t PhoneContactDisambiguationItemFactory.init(contacts:templatingService:isDirectInvocation:appId:assistantProperties:deviceState:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  *id v10 = v12;
  v10[1] = v12;
  outlined init with take of AppSelectionSignalComponent(v13, (uint64_t)(v10 + 15));
  outlined init with take of AppSelectionSignalComponent(v3, (uint64_t)(v11 + 5));
  outlined init with take of AppSelectionSignalComponent(v1, (uint64_t)(v11 + 10));
  *((unsigned char *)v11 + 16) = v9;
  v11[3] = v7;
  v11[4] = v5;
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRetain();
}

uint64_t PhoneContactDisambiguationItemFactory.appId.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactDisambiguationItemFactory.deviceState.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 80, a1);
}

uint64_t PhoneContactDisambiguationItemFactory.templatingService.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 120, a1);
}

uint64_t PhoneContactDisambiguationItemFactory.disambiguationListProperties.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  a1[3] = &type metadata for PhoneContactDisambiguationProperties;
  a1[4] = &protocol witness table for PhoneContactDisambiguationProperties;
  *a1 = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV05buildgH04item_ySo8INPersonC_y07SiriKitC00mngH0CctF04_s11mn9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n()
{
  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v1;
  swift_retain();
  id v9 = [v7 personHandle];
  if (v9
    && (id v10 = v9, v11 = (char *)[v9 emergencyType], v10, v11 == (unsigned char *)&dword_0 + 1))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    id v13 = (void *)OUTLINED_FUNCTION_25_0(v12, (uint64_t)static Logger.siriPhone);
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_4(v14))
    {
      v15 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_11_30(v15);
      OUTLINED_FUNCTION_84(&dword_0, v16, v17, "Building local emergency item");
      OUTLINED_FUNCTION_4_60();
    }

    PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(v7, (uint64_t)_s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA, v8);
  }
  else
  {
    INPerson.isUnnamedPhoneNumber.getter();
    if (v18)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      v20 = (void *)OUTLINED_FUNCTION_25_0(v19, (uint64_t)static Logger.siriPhone);
      os_log_type_t v21 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_8_4(v21))
      {
        v22 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_11_30(v22);
        OUTLINED_FUNCTION_84(&dword_0, v23, v24, "Building unnamed phone number item");
        OUTLINED_FUNCTION_4_60();
      }

      PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(v7, (char *)_s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA, v8);
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      v26 = OUTLINED_FUNCTION_25_0(v25, (uint64_t)static Logger.siriPhone);
      os_log_type_t v27 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_0, v26, v27, "Building regular item", v28, 2u);
        swift_slowDealloc();
      }

      swift_retain();
      _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctF04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n(v7, v5, v3, v1);
    }
  }
  swift_release();
  OUTLINED_FUNCTION_24();
  return swift_release();
}

uint64_t PhoneContactDisambiguationItemFactory.buildDisambiguationItem(item:_:)()
{
  OUTLINED_FUNCTION_28();
  id v1 = [v0 personHandle];
  if (v1 && (uint64_t v2 = v1, v3 = (char *)[v1 emergencyType], v2, v3 == (unsigned char *)&dword_0 + 1))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    uint64_t v5 = (void *)OUTLINED_FUNCTION_25_0(v4, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_4(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_11_30(v7);
      OUTLINED_FUNCTION_84(&dword_0, v8, v9, "Building local emergency item");
      OUTLINED_FUNCTION_4_60();
    }

    OUTLINED_FUNCTION_7_57();
    OUTLINED_FUNCTION_24();
    return PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(v10, v11, v12);
  }
  else
  {
    INPerson.isUnnamedPhoneNumber.getter();
    if (v15)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      uint64_t v17 = (void *)OUTLINED_FUNCTION_25_0(v16, (uint64_t)static Logger.siriPhone);
      os_log_type_t v18 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_8_4(v18))
      {
        uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_11_30(v19);
        OUTLINED_FUNCTION_84(&dword_0, v20, v21, "Building unnamed phone number item");
        OUTLINED_FUNCTION_4_60();
      }

      OUTLINED_FUNCTION_7_57();
      OUTLINED_FUNCTION_24();
      return PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(v22, v23, v24);
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      os_log_type_t v27 = (void *)OUTLINED_FUNCTION_25_0(v26, (uint64_t)static Logger.siriPhone);
      os_log_type_t v28 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_8_4(v28))
      {
        uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_11_30(v29);
        OUTLINED_FUNCTION_84(&dword_0, v30, v31, "Building regular item");
        OUTLINED_FUNCTION_4_60();
      }

      OUTLINED_FUNCTION_7_57();
      OUTLINED_FUNCTION_24();
      return PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(v32, v33, v34);
    }
  }
}

uint64_t PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = a3;
  uint64_t v68 = a2;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v65 = *(void *)(v4 - 8);
  unint64_t v66 = v4;
  __chkstk_darwin(v4);
  os_log_type_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Image();
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  id v10 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = v11;
  uint64_t v13 = *(void (**)(void))(v11 + 104);
  v71 = (char *)&v63 - v14;
  uint64_t v16 = v15;
  v13();
  id v17 = [a1 displayName];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v20 = v19;

  swift_bridgeObjectRelease();
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (v21
    && INPerson.hasHandleLabel.getter()
    && (id v22 = [a1 personHandle]) != 0
    && (uint64_t v23 = v22, v24 = [v22 label], v23, v24))
  {
    id v64 = v24;
    id v25 = [a1 personHandle];
    if (v25 && (uint64_t v26 = outlined bridged method (ob) of @objc INPersonHandle.value.getter(v25), v27))
    {
      uint64_t v65 = v26;
      unint64_t v66 = v27;
    }
    else
    {
      id v43 = [a1 displayName];
      uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v66 = v44;
      swift_bridgeObjectRelease();
    }
    outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)v70, (uint64_t)v73);
    uint64_t v45 = v12;
    uint64_t v46 = v16;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v71, v16);
    unint64_t v47 = (*(unsigned __int8 *)(v12 + 80) + 200) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v48 = (v8 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    v49 = (char *)swift_allocObject();
    memcpy(v49 + 16, v73, 0xA0uLL);
    v50 = v64;
    uint64_t v51 = v68;
    uint64_t v52 = v69;
    *((void *)v49 + 22) = v64;
    *((void *)v49 + 23) = v51;
    *((void *)v49 + 24) = v52;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v49[v47], v10, v46);
    *(void *)&v49[v48] = a1;
    outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)v70, (uint64_t)v72);
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:);
    *(void *)(v53 + 24) = v49;
    *(unsigned char *)(v53 + 32) = 1;
    memcpy((void *)(v53 + 40), v72, 0xA0uLL);
    id v54 = v50;
    swift_retain_n();
    id v55 = a1;
    id v56 = v54;
    id v57 = v55;
    swift_retain();
    PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(v65, v66, (void (*)(void, void, void, void))partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:), v53);
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v71, v46);
  }
  else
  {
    os_log_type_t v28 = a1;
    if (INPerson.hasHandleValue.getter())
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      unint64_t v58 = v66;
      uint64_t v59 = __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
      (*(void (**)(char *, uint64_t, unint64_t))(v65 + 16))(v6, v59, v58);
      v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = (uint8_t *)swift_slowAlloc();
        v73[0] = swift_slowAlloc();
        *(_DWORD *)v62 = 136315138;
        v72[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000095, 0x8000000000497580, v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_0, v60, v61, "%s", v62, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      static SiriKitLifecycle._logCrashToEventBus(_:)();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      uint64_t v29 = v70;
      outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)v70, (uint64_t)v73);
      uint64_t v30 = v12;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v32 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v67 = v16;
      v31(v32, v71, v16);
      unint64_t v33 = (*(unsigned __int8 *)(v30 + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      unint64_t v34 = (v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v35 = (char *)swift_allocObject();
      uint64_t v36 = v69;
      *((void *)v35 + 2) = v68;
      *((void *)v35 + 3) = v36;
      memcpy(v35 + 32, v73, 0xA0uLL);
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v35[v33], v32, v16);
      *(void *)&v35[v34] = v28;
      outlined init with copy of SignalProviding((uint64_t)(v29 + 15), (uint64_t)v72);
      uint64_t v37 = v72[3];
      uint64_t v38 = v72[4];
      v70 = __swift_project_boxed_opaque_existential_1(v72, v72[3]);
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = partial apply for closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:);
      *(void *)(v39 + 24) = v35;
      v40 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v38 + 56);
      swift_retain();
      id v41 = v28;
      swift_retain();
      v40(partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:), v39, v37, v38);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v71, v67);
    }
  }
  return result;
}

uint64_t PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(void *a1, char *a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v5 = type metadata accessor for Image();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - v10;
  id v12 = [a1 personHandle];
  if (v12 && (uint64_t v13 = outlined bridged method (ob) of @objc INPersonHandle.value.getter(v12), v14))
  {
    unint64_t v15 = v14;
    uint64_t v25 = v13;
  }
  else
  {
    id v16 = [a1 displayName];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v17;
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v11, enum case for Image.none(_:), v5);
  outlined init with copy of PhoneContactDisambiguationItemFactory(v3, (uint64_t)v29);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 200) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v19 = (char *)swift_allocObject();
  unint64_t v20 = v26;
  *((void *)v19 + 2) = a1;
  *((void *)v19 + 3) = v20;
  uint64_t v26 = v11;
  *((void *)v19 + 4) = v27;
  memcpy(v19 + 40, v29, 0xA0uLL);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v19[v18], v9, v5);
  outlined init with copy of PhoneContactDisambiguationItemFactory(v3, (uint64_t)v28);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:);
  *(void *)(v21 + 24) = v19;
  *(unsigned char *)(v21 + 32) = 1;
  memcpy((void *)(v21 + 40), v28, 0xA0uLL);
  id v22 = a1;
  swift_retain_n();
  id v23 = v22;
  swift_retain();
  PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(v25, v15, (void (*)(void, void, void, void))closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)partial apply, v21);
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v26, v5);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctF04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n(void *a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  id v54 = a1;
  uint64_t v7 = type metadata accessor for Image();
  unint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  uint64_t v53 = v11;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  uint64_t v51 = swift_allocBox();
  uint64_t v14 = v13;
  unint64_t v50 = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v13, enum case for Image.none(_:), v7);
  unint64_t v15 = a2[1];
  uint64_t v52 = a4;
  swift_retain_n();
  char v16 = PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v15);
  v49 = a3;
  if ((v16 & 1) == 0)
  {
    PhoneContactDisambiguationItemFactory.buildFullNameItemComponent(_:)(v54);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((char *)&dword_10
                                                                                + (*(void *)(v12 + 16) & 0xFFFFFFFFFFFFFF8)));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    __swift_project_boxed_opaque_existential_1(a2 + 10, a2[13]);
    DeviceState.isStandaloneIOS.getter();
    char v29 = v28;
    __swift_project_boxed_opaque_existential_1(a2 + 10, a2[13]);
    char v30 = DeviceState.isAuthenticatedForPhone.getter();
    uint64_t v31 = v54;
    INPerson.buildDisplayImage(supportsCompactView:isDeviceLocked:)(v29 & 1, (v30 & 1) == 0, v10);
    unint64_t v32 = v50;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v50 + 40))(v14, v10, v7);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v32 + 16))(v10, v14, v7);
    uint64_t v33 = swift_bridgeObjectRetain();
    PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v33, (uint64_t)v10, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v32 + 8))(v10, v7);
    uint64_t v34 = swift_retain();
LABEL_8:
    v49(v34);
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v17 = v7;
  unint64_t v18 = v50;
  uint64_t v19 = (uint64_t)a2;
  unint64_t v20 = v54;
  id v21 = [v54 personHandle];
  if (!v21 || (uint64_t v48 = outlined bridged method (ob) of @objc INPersonHandle.value.getter(v21), !v22))
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16))(v10, v14, v17);
    uint64_t v35 = swift_bridgeObjectRetain();
    PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v35, (uint64_t)v10, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v10, v17);
    uint64_t v34 = swift_retain();
    goto LABEL_8;
  }
  unint64_t v50 = v22;
  id v23 = v20;
  id v24 = [v20 personHandle];
  uint64_t v25 = v12;
  if (v24)
  {
    uint64_t v26 = v24;
    uint64_t v27 = (char *)objc_msgSend(v24, "type", v48);
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v37 = v51;
  outlined init with copy of PhoneContactDisambiguationItemFactory(v19, (uint64_t)__src);
  outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)__src, (uint64_t)v56);
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v25;
  v38[3] = v23;
  uint64_t v39 = v53;
  v38[4] = _s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA_57;
  v38[5] = v39;
  memcpy(v38 + 6, __src, 0xA0uLL);
  v38[26] = v37;
  v38[27] = v27;
  if (v27 == (unsigned char *)&dword_0 + 2)
  {
    outlined init with copy of PhoneContactDisambiguationItemFactory(v19, (uint64_t)v55);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
    *(void *)(v40 + 24) = v38;
    *(unsigned char *)(v40 + 32) = 0;
    memcpy((void *)(v40 + 40), v55, 0xA0uLL);
    swift_retain_n();
    id v41 = v23;
    swift_retain_n();
    swift_retain_n();
    id v42 = v41;
    swift_retain();
    PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(v48, v50, (void (*)(void, void, void, void))closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)partial apply, v40);
    swift_release();
  }
  else
  {
    type metadata accessor for SiriKitDisambiguationItemComponent();
    swift_retain_n();
    id v43 = v23;
    swift_retain_n();
    swift_retain_n();
    uint64_t v44 = v37;
    id v45 = v43;
    dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
    dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)();
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v19 + 80), *(void *)(v19 + 104));
    uint64_t v46 = v52;
    DeviceState.isStandaloneIOS.getter();
    dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintBlue(_:)();
    swift_release();
    uint64_t v47 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
    swift_release();
    swift_retain();
    _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctFyAH0qrgH9ComponentCcfU_04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1nnncnnn_n(v47, v25, v45, v56, v44, (uint64_t)v27, v49, v46);
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v56);
  swift_release_n();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(id a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v49 = a3;
  uint64_t v6 = type metadata accessor for Image();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v50 = swift_allocBox();
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for Image.none(_:), v6);
  char v13 = PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v3[1]);
  uint64_t v48 = a2;
  if ((v13 & 1) == 0)
  {
    unint64_t v22 = a1;
    uint64_t v45 = (uint64_t)a1;
    id v23 = v3;
    PhoneContactDisambiguationItemFactory.buildFullNameItemComponent(_:)(v22);
    uint64_t v46 = v10;
    uint64_t v47 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((char *)&dword_10
                                                                                + (*(void *)(v10 + 16) & 0xFFFFFFFFFFFFFF8)));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    __swift_project_boxed_opaque_existential_1(v23 + 10, v23[13]);
    DeviceState.isStandaloneIOS.getter();
    char v25 = v24;
    __swift_project_boxed_opaque_existential_1(v23 + 10, v23[13]);
    char v26 = DeviceState.isAuthenticatedForPhone.getter();
    uint64_t v27 = v45;
    INPerson.buildDisplayImage(supportsCompactView:isDeviceLocked:)(v25 & 1, (v26 & 1) == 0, v9);
    uint64_t v28 = v47;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 40))(v47, v9, v6);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, v28, v6);
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = (uint64_t)v9;
    uint64_t v31 = (void *)v27;
LABEL_8:
    uint64_t v32 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v29, v30, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
    v48(v32);
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v14 = a1;
  id v15 = [a1 personHandle];
  if (!v15 || (uint64_t v16 = outlined bridged method (ob) of @objc INPersonHandle.value.getter(v15), !v17))
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = (uint64_t)v9;
    uint64_t v31 = a1;
    goto LABEL_8;
  }
  unint64_t v18 = v17;
  uint64_t v47 = v16;
  id v19 = [v14 personHandle];
  if (v19)
  {
    unint64_t v20 = v19;
    id v21 = (char *)[v19 type];
  }
  else
  {
    id v21 = 0;
  }
  outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)v3, (uint64_t)__src);
  outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)__src, (uint64_t)v52);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v10;
  v34[3] = v14;
  uint64_t v35 = v49;
  v34[4] = v48;
  v34[5] = v35;
  memcpy(v34 + 6, __src, 0xA0uLL);
  v34[26] = v50;
  v34[27] = v21;
  if (v21 == (unsigned char *)&dword_0 + 2)
  {
    outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)v3, (uint64_t)v51);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
    *(void *)(v36 + 24) = v34;
    *(unsigned char *)(v36 + 32) = 0;
    memcpy((void *)(v36 + 40), v51, 0xA0uLL);
    swift_retain_n();
    id v37 = v14;
    swift_retain_n();
    swift_retain_n();
    id v38 = v37;
    swift_retain();
    PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(v47, v18, (void (*)(void, void, void, void))closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)partial apply, v36);
    swift_release();
  }
  else
  {
    type metadata accessor for SiriKitDisambiguationItemComponent();
    uint64_t v45 = (uint64_t)v21;
    swift_retain_n();
    id v39 = v14;
    uint64_t v40 = v49;
    swift_retain_n();
    uint64_t v41 = v50;
    swift_retain_n();
    id v42 = v39;
    dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
    dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)();
    swift_release();
    uint64_t v47 = v18;
    __swift_project_boxed_opaque_existential_1(v3 + 10, v3[13]);
    DeviceState.isStandaloneIOS.getter();
    dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintBlue(_:)();
    swift_release();
    uint64_t v43 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
    swift_release();
    closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(v43, v10, v42, v48, v40, (uint64_t)v52, v41, v45);
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v52);
  swift_release();
  return swift_release_n();
}

uint64_t PhoneContactDisambiguationItemFactory.buildFullNameItemComponent(_:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17[-1] - v6;
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for DialogPerson();
  static Device.current.getter();
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  id v9 = a1;
  uint64_t v10 = DialogPerson.__allocating_init(person:locale:useConversationalName:)();
  if (!v10)
  {
LABEL_4:
    id v12 = [v9 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    if (!v10) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  swift_retain();
  dispatch thunk of DialogPerson.fullName.getter();
  swift_release();
  uint64_t v11 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v11) == 1)
  {
    outlined destroy of SubmitCommandError?((uint64_t)v7, &demangling cache variable for type metadata for SpeakableString?);
    goto LABEL_4;
  }
  SpeakableString.print.getter();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v7, v11);
LABEL_7:
  swift_retain();
  dispatch thunk of DialogPerson.fullName.getter();
  swift_release();
  uint64_t v13 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v13) != 1)
  {
    SpeakableString.speak.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v5, v13);
    goto LABEL_11;
  }
  outlined destroy of SubmitCommandError?((uint64_t)v5, &demangling cache variable for type metadata for SpeakableString?);
LABEL_9:
  swift_bridgeObjectRetain();
LABEL_11:
  type metadata accessor for SiriKitDisambiguationItemComponent();
  dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
  swift_bridgeObjectRelease();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeak(_:)();
  swift_release();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeakOnLockScreen(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
  swift_release();
  swift_release();
  return v14;
}

uint64_t PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Image();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v3 + 16) == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v11, v12, "#PhoneContactDisambiguationItemFactory Building disambiguation item with direct invocation payload", v13, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for SKIDirectInvocationPayload();
    static SKIDirectInvocationPayload.contactDisambiguation(contact:)(a3);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    type metadata accessor for SiriKitDisambiguationItem();
    swift_allocObject();
    swift_bridgeObjectRetain();
    return SiriKitDisambiguationItem.init(components:image:directInvocation:allowLineWrapForDisplayText:)();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    swift_bridgeObjectRetain();
    INPerson.toStartRequestUtterance()();
    type metadata accessor for SiriKitDisambiguationItem();
    swift_allocObject();
    return SiriKitDisambiguationItem.init(components:image:utterance:allowLineWrapForDisplayText:)();
  }
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctFyAH0qrgH9ComponentCcfU_04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1nnncnnn_n(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v63 = a6;
  v70 = a4;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v62 = v13;
  __chkstk_darwin(v13);
  v60 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for Image();
  uint64_t v15 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  unint64_t v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  uint64_t v67 = a7;
  *(void *)(v18 + 16) = a7;
  *(void *)(v18 + 24) = a8;
  uint64_t v69 = v18;
  uint64_t v64 = a5;
  uint64_t v19 = swift_projectBox();
  swift_beginAccess();
  uint64_t v68 = a8;
  swift_retain_n();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v65 = a2;
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((char *)&dword_10
                                                                              + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  if (INPerson.hasHandleLabel.getter()
    && (id v20 = [a3 personHandle]) != 0
    && (id v21 = v20, v22 = [v20 label], v21, v22))
  {
    v56[0] = v19;
    outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)v70, (uint64_t)__src);
    outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)__src, (uint64_t)v78);
    id v23 = (void *)swift_allocObject();
    v23[2] = v65;
    v23[3] = _s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA_57;
    v23[4] = v69;
    memcpy(v23 + 5, __src, 0xA0uLL);
    v23[25] = v64;
    v23[26] = a3;
    unint64_t v58 = v23;
    id v59 = v22;
    char v24 = v70;
    uint64_t v25 = v70[13];
    v56[2] = v70[14];
    v56[1] = __swift_project_boxed_opaque_existential_1(v70 + 10, v25);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    id v57 = a3;
    char v26 = v60;
    dispatch thunk of DeviceState.siriLocale.getter();
    v71[0] = Locale.identifier.getter();
    v71[1] = v27;
    uint64_t v74 = 45;
    unint64_t v75 = 0xE100000000000000;
    uint64_t v76 = 95;
    unint64_t v77 = 0xE100000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v26, v62);
    uint64_t v28 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    type metadata accessor for SiriKitDisambiguationItemComponent();
    uint64_t v62 = v30;
    dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
    uint64_t v31 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
    swift_release();
    char v32 = PhoneContactDisambiguationProperties.hasOneHandleType.getter(v24[1]);
    uint64_t v33 = v63;
    if ((v32 & 1) != 0 || (unint64_t)(v63 - 3) < 0xFFFFFFFFFFFFFFFELL)
    {
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v51 = v65;
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((char *)&dword_10
                                                                                  + (*(void *)(v65 + 16) & 0xFFFFFFFFFFFFFF8)));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      swift_beginAccess();
      uint64_t v52 = *(void *)(v51 + 16);
      uint64_t v53 = v56[0];
      swift_beginAccess();
      uint64_t v54 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v53, v66);
      swift_bridgeObjectRetain();
      uint64_t v45 = v57;
      PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v52, (uint64_t)v17, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v54);
      uint64_t v55 = swift_retain();
      v67(v55);
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v67 = (void (*)(uint64_t))v31;
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v35, v36))
      {
        id v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v37 = 0;
        _os_log_impl(&dword_0, v35, v36, "More than one handle type -- appending HandleType", v37, 2u);
        swift_slowDealloc();
      }

      outlined init with copy of SignalProviding((uint64_t)(v70 + 15), (uint64_t)v71);
      uint64_t v38 = v72;
      uint64_t v39 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v40 = (void *)swift_allocObject();
      uint64_t v41 = v58;
      v40[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
      v40[3] = v41;
      uint64_t v42 = v62;
      v40[4] = v28;
      v40[5] = v42;
      uint64_t v43 = *(void (**)(id, uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v39 + 48);
      swift_retain();
      id v44 = v59;
      v43(v59, v33, closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)partial apply, v40, v38, v39);
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
      swift_release();
      swift_release();

      uint64_t v45 = v57;
    }
    swift_release();
    outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v78);
    swift_release();

    swift_release();
    return swift_release_n();
  }
  else
  {
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v46 = v19;
    uint64_t v47 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v46, v66);
    uint64_t v48 = swift_bridgeObjectRetain();
    PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v48, (uint64_t)v17, a3);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v47);
    uint64_t v49 = swift_retain();
    v67(v49);
    swift_release_n();
    swift_release();
    return swift_release();
  }
}

uint64_t closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v48 = a8;
  uint64_t v51 = (void *)a6;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v11 = type metadata accessor for Image();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  __chkstk_darwin(v15);
  uint64_t v45 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a7;
  uint64_t v17 = swift_projectBox();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v49 = a2;
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((char *)&dword_10
                                                                              + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  if (INPerson.hasHandleLabel.getter()
    && (id v18 = [a3 personHandle]) != 0
    && (uint64_t v19 = v18, v20 = [v18 label], v19, v20))
  {
    id v21 = v51;
    outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)v51, (uint64_t)__src);
    outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)__src, (uint64_t)v61);
    id v22 = (void *)swift_allocObject();
    id v23 = v52;
    uint64_t v24 = v53;
    v22[2] = v49;
    v22[3] = v23;
    v22[4] = v24;
    memcpy(v22 + 5, __src, 0xA0uLL);
    v22[25] = v50;
    v22[26] = a3;
    id v44 = v20;
    __swift_project_boxed_opaque_existential_1(v21 + 10, v21[13]);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    uint64_t v25 = a3;
    char v26 = v45;
    dispatch thunk of DeviceState.siriLocale.getter();
    v54[0] = Locale.identifier.getter();
    v54[1] = v27;
    uint64_t v59 = 45;
    unint64_t v60 = 0xE100000000000000;
    uint64_t v57 = 95;
    unint64_t v58 = 0xE100000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v47);
    uint64_t v28 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    type metadata accessor for SiriKitDisambiguationItemComponent();
    dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
    uint64_t v31 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
    swift_release();
    if ((PhoneContactDisambiguationProperties.hasOneHandleType.getter(v21[1]) & 1) != 0
      || (unint64_t)(v48 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(v31, v49, v52, v53, (uint64_t)v61, v50, v25);
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v52 = v25;
      uint64_t v32 = type metadata accessor for Logger();
      __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_0, v33, v34, "More than one handle type -- appending HandleType", v35, 2u);
        swift_slowDealloc();
      }

      outlined init with copy of SignalProviding((uint64_t)(v21 + 15), (uint64_t)v54);
      uint64_t v36 = v55;
      uint64_t v37 = v56;
      __swift_project_boxed_opaque_existential_1(v54, v55);
      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
      v38[3] = v22;
      v38[4] = v28;
      v38[5] = v30;
      uint64_t v39 = *(void (**)(id, uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v37 + 48);
      swift_retain();
      id v40 = v44;
      v39(v44, v48, closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)partial apply, v38, v36, v37);
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      swift_release();
      swift_release();

      uint64_t v25 = v52;
    }
    swift_release();
    outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v61);
  }
  else
  {
    swift_beginAccess();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v17, v11);
    uint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v42 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v41, (uint64_t)v14, a3);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v52(v42);
  }
  return swift_release();
}

uint64_t closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v17 = a4;
  id v18 = a3;
  uint64_t v9 = type metadata accessor for Image();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_projectBox();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((char *)&dword_10
                                                                              + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_beginAccess();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v14, (uint64_t)v12, a7);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18(v15);
  return swift_release();
}

void closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v71 = a4;
  uint64_t v72 = a5;
  v70 = a3;
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Image();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v69 + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_46A030;
  *(void *)(v18 + 32) = a1;
  __src[0] = v18;
  specialized Array._endMutation()();
  *(void *)(v17 + 16) = __src[0];
  swift_retain();
  id v19 = [a2 personHandle];
  if (v19)
  {
    id v20 = v19;
    id v21 = [v19 label];
    if (v21)
    {
      uint64_t v65 = v12;
      id v63 = v21;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v25 = HIBYTE(v24) & 0xF;
      if ((v24 & 0x2000000000000000) == 0) {
        uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
      }
      if (v25)
      {
        id v61 = v20;
        uint64_t v62 = (char *)[v20 type];
        outlined init with copy of PhoneContactDisambiguationItemFactory(v72, (uint64_t)__src);
        uint64_t v26 = v69;
        uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
        uint64_t v28 = a6;
        uint64_t v29 = v65;
        v27(v16, v28, v65);
        outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)__src, (uint64_t)v80);
        v27(v68, (uint64_t)v16, v29);
        unint64_t v30 = (*(unsigned __int8 *)(v26 + 80) + 200) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
        unint64_t v31 = (v13 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v32 = (void *)swift_allocObject();
        uint64_t v64 = v17;
        uint64_t v33 = v32;
        os_log_type_t v34 = v70;
        uint64_t v35 = v71;
        v32[2] = v64;
        v32[3] = v34;
        v32[4] = v35;
        memcpy(v32 + 5, __src, 0xA0uLL);
        (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))((unint64_t)v33 + v30, v16, v29);
        uint64_t v59 = v33;
        *(void *)((char *)v33 + v31) = a2;
        uint64_t v36 = v64;
        uint64_t v37 = v72;
        __swift_project_boxed_opaque_existential_1((void *)(v72 + 80), *(void *)(v72 + 104));
        swift_retain_n();
        swift_retain_n();
        id v60 = a2;
        dispatch thunk of DeviceState.siriLocale.getter();
        v73[0] = Locale.identifier.getter();
        v73[1] = v38;
        uint64_t v78 = 45;
        unint64_t v79 = 0xE100000000000000;
        uint64_t v76 = 95;
        unint64_t v77 = 0xE100000000000000;
        lazy protocol witness table accessor for type String and conformance String();
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v67);
        uint64_t v39 = v63;
        uint64_t v40 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        type metadata accessor for SiriKitDisambiguationItemComponent();
        dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
        uint64_t v43 = (void (*)(uint64_t))dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
        id v44 = v62;
        swift_release();
        if ((PhoneContactDisambiguationProperties.hasOneHandleType.getter(*(void *)(v37 + 8)) & 1) != 0
          || (unint64_t)(v44 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
        {
          uint64_t v49 = (uint64_t)v68;
          uint64_t v56 = v60;
          closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)((uint64_t)v43, v36, v70, v71, (uint64_t)v80, (uint64_t)v68, v60);
          swift_release();
          swift_release();

          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          v70 = v43;
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v45 = type metadata accessor for Logger();
          __swift_project_value_buffer(v45, (uint64_t)static Logger.siriPhone);
          uint64_t v46 = Logger.logObject.getter();
          os_log_type_t v47 = static os_log_type_t.debug.getter();
          BOOL v48 = os_log_type_enabled(v46, v47);
          uint64_t v49 = (uint64_t)v68;
          if (v48)
          {
            uint64_t v50 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v50 = 0;
            _os_log_impl(&dword_0, v46, v47, "More than one handle type -- appending HandleType", v50, 2u);
            swift_slowDealloc();
          }

          outlined init with copy of SignalProviding(v72 + 120, (uint64_t)v73);
          uint64_t v51 = v74;
          uint64_t v52 = v75;
          __swift_project_boxed_opaque_existential_1(v73, v74);
          uint64_t v53 = (void *)swift_allocObject();
          uint64_t v54 = v59;
          v53[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:);
          v53[3] = v54;
          v53[4] = v40;
          v53[5] = v42;
          uint64_t v55 = *(void (**)(void *, char *, uint64_t (*)(), void *, uint64_t, uint64_t))(v52 + 48);
          swift_retain();
          v55(v39, v62, closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)partial apply, v53, v51, v52);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
          swift_release();

          swift_release();
          uint64_t v56 = v60;
        }
        swift_release();
        outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v80);
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v49, v65);
        swift_release();

        return;
      }

      id v20 = v63;
    }
  }
  uint64_t v57 = swift_bridgeObjectRetain();
  uint64_t v58 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v57, a6, a2);
  swift_bridgeObjectRelease();
  v70(v58);
  swift_release();

  swift_release();
}

uint64_t closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((char *)&dword_10
                                                                              + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v11, a6, a7);
  swift_bridgeObjectRelease();
  a3(v12);
  return swift_release();
}

void closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v40 = a7;
  uint64_t v47 = a6;
  BOOL v48 = a4;
  uint64_t v49 = a3;
  uint64_t v50 = a5;
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  uint64_t v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Image();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v39 - v15;
  outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)a2, (uint64_t)__src);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v17(v16, v47, v11);
  outlined init with copy of PhoneContactDisambiguationItemFactory((uint64_t)__src, (uint64_t)v58);
  id v44 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17(v44, (uint64_t)v16, v11);
  uint64_t v18 = v50;
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 200) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v20 = (v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v48;
  *((void *)v21 + 3) = v18;
  memcpy(v21 + 32, __src, 0xA0uLL);
  *((void *)v21 + 24) = a1;
  uint64_t v45 = v12;
  uint64_t v46 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v21[v19], v16, v11);
  uint64_t v22 = v40;
  *(void *)&v21[v20] = v40;
  __swift_project_boxed_opaque_existential_1(a2 + 10, a2[13]);
  swift_retain_n();
  uint64_t v47 = a1;
  swift_retain_n();
  unint64_t v23 = v22;
  unint64_t v24 = v41;
  dispatch thunk of DeviceState.siriLocale.getter();
  v51[0] = Locale.identifier.getter();
  v51[1] = v25;
  uint64_t v56 = 45;
  unint64_t v57 = 0xE100000000000000;
  uint64_t v54 = 95;
  unint64_t v55 = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v43);
  uint64_t v26 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  type metadata accessor for SiriKitDisambiguationItemComponent();
  dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
  uint64_t v29 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
  swift_release();
  if (PhoneContactDisambiguationProperties.hasOneHandleType.getter(a2[1]))
  {
    uint64_t v30 = (uint64_t)v44;
    closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(v29, v48, v18, (uint64_t)v58, v47, (uint64_t)v44, v23);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    BOOL v48 = v23;
    uint64_t v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "More than one handle type -- appending HandleType", v34, 2u);
      swift_slowDealloc();
    }

    outlined init with copy of SignalProviding((uint64_t)(a2 + 15), (uint64_t)v51);
    uint64_t v35 = v52;
    uint64_t v36 = v53;
    __swift_project_boxed_opaque_existential_1(v51, v52);
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:);
    v37[3] = v21;
    v37[4] = v26;
    v37[5] = v28;
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v36 + 48);
    swift_retain();
    v38(v49, 2, partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:), v37, v35, v36);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    swift_release();
    swift_release();
    unint64_t v23 = v48;
    uint64_t v30 = (uint64_t)v44;
  }
  outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v58);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v30, v46);
}

uint64_t closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_469DA0;
  *(void *)(v12 + 32) = a5;
  *(void *)(v12 + 40) = a1;
  uint64_t v15 = v12;
  specialized Array._endMutation()();
  swift_retain();
  swift_retain();
  uint64_t v13 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v15, a6, a7);
  swift_bridgeObjectRelease();
  a2(v13);

  return swift_release();
}

uint64_t closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_46A030;
  *(void *)(v10 + 32) = a1;
  uint64_t v13 = v10;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v11 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v13, a5, a6);
  swift_bridgeObjectRelease();
  a2(v11);

  return swift_release();
}

uint64_t closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a4;
  uint64_t v9 = type metadata accessor for TemplatingResult();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v34 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return outlined destroy of SubmitCommandError?((uint64_t)v18, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }
  uint64_t v38 = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v18, v9);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v37 = a3;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v35 = a2;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v36 = v9;
    v34[2] = v26;
    uint64_t v41 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    v34[1] = v25 + 4;
    TemplatingResult.print.getter();
    uint64_t v27 = v10;
    uint64_t v28 = Array.description.getter();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
    v31(v13, v36);
    _os_log_impl(&dword_0, v21, v22, "snippetDisplayHandleLabelWithType SUCCESS: %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v9 = v36;
    swift_slowDealloc();
    a2 = v35;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v13, v9);
  }

  type metadata accessor for SiriKitDisambiguationItemComponent();
  dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
  uint64_t result = TemplatingResult.print.getter();
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v32 = (uint64_t (*)(char *, uint64_t))v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintOnLockScreen(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = TemplatingResult.speak.getter();
  if (!*(void *)(result + 16))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeak(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = TemplatingResult.speak.getter();
  if (*(void *)(result + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeakOnLockScreen(_:)();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v33 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
    swift_release();
    a2(v33);
    swift_release();
    return v32(v15, v9);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for SiriKitDisambiguationItemComponent();
  dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeak(_:)();
  swift_release();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeakOnLockScreen(_:)();
  swift_release();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)();
  swift_release();
  __swift_project_boxed_opaque_existential_1((void *)(a8 + 80), *(void *)(a8 + 104));
  DeviceState.isStandaloneIOS.getter();
  dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintBlue(_:)();
  swift_release();
  uint64_t v10 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
  swift_release();
  a5(v10);

  return swift_release();
}

uint64_t PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(uint64_t a1, unint64_t a2, void (*a3)(void, void, void, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v8 = type metadata accessor for CharacterSet();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CharacterSet.controlCharacters.getter();
  uint64_t v45 = v11;
  swift_bridgeObjectRetain();
  uint64_t v12 = specialized RangeReplaceableCollection.filter(_:)((uint64_t (*)(void *))_sSS27PhoneCallFlowDelegatePluginE6remove10charactersSS10Foundation12CharacterSetV_tFSbs7UnicodeO6ScalarVXEfU_TA_0, (uint64_t)v44, a1, a2);
  uint64_t v14 = v13;
  uint64_t v15 = v11;
  uint64_t v16 = v12;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  uint64_t v47 = 0;
  unint64_t v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  uint64_t v47 = 0xD000000000000012;
  unint64_t v48 = 0x8000000000497620;
  v17._countAndFlagsBits = v16;
  v17._object = v14;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0xD000000000000013;
  v18._object = (void *)0x8000000000497640;
  String.append(_:)(v18);
  uint64_t v19 = v47;
  unint64_t v20 = v48;
  uint64_t v22 = v5[8];
  uint64_t v21 = v5[9];
  __swift_project_boxed_opaque_existential_1(v5 + 5, v22);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v22, v21);
  if (v24)
  {
    uint64_t v38 = v23;
    uint64_t v39 = v19;
    uint64_t v40 = v24;
    unint64_t v41 = v20;
    uint64_t v25 = v42;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)unint64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, (unint64_t)v14, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v27, v28, "Format phone number call: %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v31 = v41;
    uint64_t v32 = v39;
    outlined init with copy of SignalProviding((uint64_t)(v5 + 15), (uint64_t)&v47);
    uint64_t v33 = v49;
    uint64_t v34 = v50;
    __swift_project_boxed_opaque_existential_1(&v47, v49);
    uint64_t v35 = (void *)swift_allocObject();
    uint64_t v36 = v43;
    v35[2] = v25;
    v35[3] = v36;
    v35[4] = v16;
    v35[5] = v14;
    v35[6] = v32;
    v35[7] = v31;
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, void *(*)(uint64_t), void *, uint64_t, uint64_t))(v34 + 64);
    swift_bridgeObjectRetain();
    swift_retain();
    v37(v38, v40, v16, v14, partial apply for closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:), v35, v33, v34);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  }
  else
  {
    v42(a1, a2, v19, v20);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void *closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v41 = a7;
  uint64_t v42 = a3;
  uint64_t v43 = a2;
  uint64_t v11 = type metadata accessor for TemplatingResult();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  Swift::String v17 = (char *)v39 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "Format phone number failure", v24, 2u);
      swift_slowDealloc();
    }

    return (void *)v43(a4, a5, a6, v41);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v20, v11);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v41 = v12;
      unint64_t v30 = (uint8_t *)v29;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v45 = v40;
      *(_DWORD *)unint64_t v30 = 136315138;
      v39[1] = v30 + 4;
      TemplatingResult.speak.getter();
      uint64_t v31 = Array.description.getter();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v41 + 8);
      v34(v15, v11);
      _os_log_impl(&dword_0, v27, v28, "Format phone number success: %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
      v34(v15, v11);
    }

    uint64_t result = (void *)TemplatingResult.print.getter();
    if (result[2])
    {
      uint64_t v36 = result[4];
      uint64_t v35 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = (void *)TemplatingResult.speak.getter();
      if (result[2])
      {
        uint64_t v37 = result[4];
        uint64_t v38 = result[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v43(v36, v35, v37, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (void *)((uint64_t (*)(char *, uint64_t))v34)(v17, v11);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:)(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for TemplatingResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for SiriKitDisambiguationItemComponent();
    dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
    uint64_t v11 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
    swift_release();
    a2(v11);
    swift_release();
    return outlined destroy of SubmitCommandError?((uint64_t)v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    type metadata accessor for SiriKitDisambiguationItemComponent();
    uint64_t result = TemplatingResult.print.getter();
    if (*(void *)(result + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
      swift_bridgeObjectRelease();
      uint64_t v13 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
      swift_release();
      a2(v13);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t protocol witness for DisambiguationItemFactory.buildDisambiguationItem(item:_:) in conformance PhoneContactDisambiguationItemFactory()
{
  return PhoneContactDisambiguationItemFactory.buildDisambiguationItem(item:_:)();
}

uint64_t destroy for PhoneContactDisambiguationItemFactory(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);

  return __swift_destroy_boxed_opaque_existential_1(a1 + 120);
}

uint64_t initializeWithCopy for PhoneContactDisambiguationItemFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = a2 + 40;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 40, v6, v8);
  long long v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 80, a2 + 80);
  long long v11 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 120, a2 + 120);
  return a1;
}

uint64_t assignWithCopy for PhoneContactDisambiguationItemFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  return a1;
}

uint64_t assignWithTake for PhoneContactDisambiguationItemFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  __swift_destroy_boxed_opaque_existential_1(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneContactDisambiguationItemFactory(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 160))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneContactDisambiguationItemFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneContactDisambiguationItemFactory()
{
  return &type metadata for PhoneContactDisambiguationItemFactory;
}

uint64_t outlined init with copy of PhoneContactDisambiguationItemFactory(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24AA5C()
{
  OUTLINED_FUNCTION_28();
  type metadata accessor for Image();
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_10_41();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  uint64_t v2 = OUTLINED_FUNCTION_2_83();
  v3(v2);

  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_24();
  return _swift_deallocObject(v4, v5, v6);
}

uint64_t partial apply for closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)()
{
  uint64_t v2 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_19_0(v2);
  OUTLINED_FUNCTION_12_33();
  uint64_t v8 = *(void **)(v1 + v7);

  return closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(v0, v3, v4, v5, v1 + v6, v8);
}

uint64_t sub_24AB7C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:)(uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:)(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_24ABBC()
{
  OUTLINED_FUNCTION_28();
  type metadata accessor for Image();
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_11_41();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);

  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_2_83();
  v3(v2);

  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_24();
  return _swift_deallocObject(v4, v5, v6);
}

void partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_19_0(v0);
  uint64_t v1 = OUTLINED_FUNCTION_14_34();

  closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(v1, v2, v3, v4, v5, v6, v7);
}

uint64_t partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)(a1, a2, a3, a4, *(void (**)(uint64_t))(v4 + 16), *(void *)(v4 + 24), *(unsigned __int8 *)(v4 + 32), v4 + 40);
}

BOOL _sSS27PhoneCallFlowDelegatePluginE6remove10charactersSS10Foundation12CharacterSetV_tFSbs7UnicodeO6ScalarVXEfU_TA_0()
{
  return closure #1 in String.remove(characters:)();
}

uint64_t sub_24AD28()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void *partial apply for closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24AD80()
{
  OUTLINED_FUNCTION_28();
  type metadata accessor for Image();
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_10_41();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_2_83();
  v3(v2);

  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_24();
  return _swift_deallocObject(v4, v5, v6);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_19_0(v0);
  OUTLINED_FUNCTION_12_33();
  uint64_t v1 = OUTLINED_FUNCTION_14_34();

  return closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(v1, v2, v3, v4, v5, v6, v7);
}

uint64_t partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)(uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24AEB4()
{
  type metadata accessor for Image();
  OUTLINED_FUNCTION_14_11();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 200) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  uint64_t v8 = OUTLINED_FUNCTION_2_83();
  v9(v8);

  return _swift_deallocObject(v0, v6, v7);
}

void partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)()
{
  uint64_t v2 = *(void *)(OUTLINED_FUNCTION_13_31() - 8);
  uint64_t v3 = (void *)v1[2];
  uint64_t v4 = (void (*)(uint64_t))v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = (uint64_t)v1 + ((*(unsigned __int8 *)(v2 + 80) + 200) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(v0, v3, v4, v5, (uint64_t)(v1 + 5), v6);
}

uint64_t sub_24AFF4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_24B02C()
{
  OUTLINED_FUNCTION_28();
  type metadata accessor for Image();
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_11_41();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  uint64_t v2 = OUTLINED_FUNCTION_2_83();
  v3(v2);

  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_24();
  return _swift_deallocObject(v4, v5, v6);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_19_0(v0);
  uint64_t v1 = OUTLINED_FUNCTION_14_34();

  return closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(v1, v2, v3, v4, v5, v6, v7);
}

uint64_t partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), v1 + 48, *(void *)(v1 + 208), *(void *)(v1 + 216));
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);

  return _swift_deallocObject(v0, 200, 7);
}

uint64_t objectdestroy_45Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  swift_release();

  return _swift_deallocObject(v0, 216, 7);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(uint64_t a1)
{
  return closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), v1 + 40, *(void *)(v1 + 200), *(void **)(v1 + 208));
}

uint64_t OUTLINED_FUNCTION_2_83()
{
  return v0 + v1;
}

uint64_t OUTLINED_FUNCTION_4_60()
{
  return swift_slowDealloc();
}

uint64_t OUTLINED_FUNCTION_10_41()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_11_41()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_13_31()
{
  return type metadata accessor for Image();
}

uint64_t OUTLINED_FUNCTION_14_34()
{
  return v0;
}

uint64_t HangUpTipGenerator.init(sharedGlobals:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = 1;
  *(void *)(a2 + 8) = 0xD000000000000013;
  *(void *)(a2 + 16) = 0x800000000048E2A0;
  return outlined init with take of AppSelectionSignalComponent(a1, a2 + 24);
}

Swift::Bool __swiftcall HangUpTipGenerator.isEnabled()()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v4, v1, v2);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  LOBYTE(v1) = dispatch thunk of DeviceState.isHomePod.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v1 & 1;
}

unint64_t instantiation function for generic protocol witness table for HangUpTipGenerator(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type HangUpTipGenerator and conformance HangUpTipGenerator();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type HangUpTipGenerator and conformance HangUpTipGenerator()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpTipGenerator and conformance HangUpTipGenerator;
  if (!lazy protocol witness table cache variable for type HangUpTipGenerator and conformance HangUpTipGenerator)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpTipGenerator and conformance HangUpTipGenerator);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>;
  if (!lazy protocol witness table cache variable for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IdiomKeyedHintHistory<OneTimeHintHistory>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>);
  }
  return result;
}

uint64_t destroy for HangUpTipGenerator(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

uint64_t initializeWithCopy for HangUpTipGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 24, v4, v6);
  return a1;
}

uint64_t assignWithCopy for HangUpTipGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

uint64_t assignWithTake for HangUpTipGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for HangUpTipGenerator(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HangUpTipGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HangUpTipGenerator()
{
  return &type metadata for HangUpTipGenerator;
}

uint64_t AnnotatedAppFinder.thirdPartyAnnotatedAppStore.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 24, a1);
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (a1 < 0 || Array.count.getter() <= a1)
  {
    uint64_t v5 = 1;
  }
  else
  {
    Array.subscript.getter();
    uint64_t v5 = 0;
  }

  return __swift_storeEnumTagSinglePayload(a3, v5, 1, a2);
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (a1 < 0 || Array.count.getter() <= a1)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16);
    return v8(a4, a2, a3);
  }
  else
  {
    return Array.subscript.getter();
  }
}

uint64_t Array<A>.hasQueryableContactInformation.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    outlined init with copy of SignalProviding(v3, (uint64_t)v20);
    OUTLINED_FUNCTION_3_70(v20);
    uint64_t v4 = OUTLINED_FUNCTION_0();
    v5(v4);
    if (v6) {
      break;
    }
    outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v19);
LABEL_7:
    OUTLINED_FUNCTION_3_70(v19);
    uint64_t v7 = OUTLINED_FUNCTION_0();
    v8(v7);
    if (v9)
    {
      OUTLINED_FUNCTION_2_84();
      OUTLINED_FUNCTION_17_20();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v18);
      if (v1) {
        goto LABEL_22;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v18);
    }
    OUTLINED_FUNCTION_3_70(v18);
    uint64_t v10 = OUTLINED_FUNCTION_0();
    v11(v10);
    if (v12)
    {
      OUTLINED_FUNCTION_2_84();
      OUTLINED_FUNCTION_17_20();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v17);
      if (v1) {
        goto LABEL_23;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v17);
    }
    OUTLINED_FUNCTION_3_70(v17);
    uint64_t v13 = OUTLINED_FUNCTION_0();
    v14(v13);
    if (v15)
    {
      OUTLINED_FUNCTION_2_84();
      OUTLINED_FUNCTION_17_20();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      if (v1) {
        goto LABEL_24;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    v3 += 40;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  OUTLINED_FUNCTION_2_84();
  OUTLINED_FUNCTION_17_20();
  outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v19);
  if (!v1) {
    goto LABEL_7;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v18);
LABEL_22:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  outlined init with copy of SignalProviding((uint64_t)v20, (uint64_t)v17);
LABEL_23:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
LABEL_24:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t OUTLINED_FUNCTION_2_84()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_3_70(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t PhoneCallInvite.Builder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v2 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  return v0;
}

uint64_t key path setter for PhoneCallInvite.Builder.inviteType : PhoneCallInvite.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 104))(v6);
}

uint64_t PhoneCallInvite.Builder.inviteType.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_8_65(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType);
  swift_beginAccess();
  return outlined init with copy of SpeakableString?(v1, a1);
}

uint64_t PhoneCallInvite.Builder.inviteType.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_8_65(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType);
  swift_beginAccess();
  outlined assign with take of SpeakableString?(a1, v1);
  return swift_endAccess();
}

uint64_t (*PhoneCallInvite.Builder.inviteType.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallInvite.Builder.participants : PhoneCallInvite.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 128);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneCallInvite.Builder.participants.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneCallInvite.Builder.participants.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_8_65(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants);
  swift_beginAccess();
  void *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallInvite.Builder.participants.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneCallInvite.Builder.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v2 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  return v0;
}

uint64_t PhoneCallInvite.Builder.__allocating_init(inviteType:)()
{
  OUTLINED_FUNCTION_23_6();
  uint64_t v1 = OUTLINED_FUNCTION_18_22();
  PhoneCallInvite.Builder.init(inviteType:)(v1);
  return v0;
}

uint64_t PhoneCallInvite.Builder.init(inviteType:)(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_12_0();
  uint64_t v6 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v7 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
  *(void *)(v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v2, a1, v7);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v7);
  swift_beginAccess();
  outlined assign with take of SpeakableString?(v2, v6);
  swift_endAccess();
  return v1;
}

uint64_t PhoneCallInvite.Builder.withInviteType(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_12_0();
  outlined init with copy of SpeakableString?(a1, v1);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v5 + 104))(v1);
  return swift_retain();
}

uint64_t PhoneCallInvite.Builder.withInviteType(print:speak:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3 - v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SpeakableString.init(print:speak:)();
  uint64_t v5 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v6 + 104))(v4);
  return swift_retain();
}

uint64_t PhoneCallInvite.Builder.withParticipants(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 128);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneCallInvite.Builder.build()()
{
  type metadata accessor for PhoneCallInvite(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_retain();
  PhoneCallInvite.init(builder:)(v1);
  return v0;
}

uint64_t PhoneCallInvite.__allocating_init(builder:)()
{
  OUTLINED_FUNCTION_23_6();
  uint64_t v1 = OUTLINED_FUNCTION_18_22();
  PhoneCallInvite.init(builder:)(v1);
  return v0;
}

uint64_t type metadata accessor for PhoneCallInvite(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallInvite);
}

uint64_t PhoneCallInvite.Builder.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PhoneCallInvite.Builder.__deallocating_deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

unint64_t static PhoneCallInvite.catTypeName.getter()
{
  return 0xD000000000000010;
}

uint64_t key path setter for PhoneCallInvite.mockGlobals : PhoneCallInvite(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 128);
  id v4 = *a1;
  return v3(v2);
}

uint64_t PhoneCallInvite.inviteType.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType, a1);
}

uint64_t PhoneCallInvite.participants.getter()
{
  return swift_bridgeObjectRetain();
}

void *PhoneCallInvite.init(builder:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_5_1();
  v1[2] = 0;
  (*(void (**)(void))(*(void *)a1 + 96))();
  uint64_t v7 = outlined init with take of SpeakableString?(v2, (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType);
  *(void *)((char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120))(v7);
  if (((*(uint64_t (**)(void))(*v1 + 152))() & 1) == 0)
  {
    uint64_t v8 = (void *)static Log.siriDialogEngine.getter();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_467710;
    OUTLINED_FUNCTION_26_6();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallInvite.Type);
    uint64_t v10 = String.init<A>(describing:)();
    uint64_t v12 = v11;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v12;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
  swift_release();
  return v3;
}

uint64_t PhoneCallInvite.__allocating_init(inviteType:participants:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for PhoneCallInvite.Builder(0);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v8 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  *(void *)(v6 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  PhoneCallInvite.Builder.withInviteType(_:)(a1);
  swift_release();
  OUTLINED_FUNCTION_22();
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v9 + 176))(a2);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(v3 + 144))(v10);
  uint64_t v11 = OUTLINED_FUNCTION_18_22();
  outlined destroy of SpeakableString?(v11);
  return v3;
}

uint64_t type metadata accessor for PhoneCallInvite.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneCallInvite.Builder);
}

Swift::Bool __swiftcall PhoneCallInvite.allRequiredInputsHaveValues()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4 - v3;
  outlined init with copy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType, v4 - v3);
  uint64_t v6 = type metadata accessor for SpeakableString();
  Swift::Bool v7 = __swift_getEnumTagSinglePayload(v5, 1, v6) != 1;
  outlined destroy of SpeakableString?(v5);
  return v7;
}

uint64_t PhoneCallInvite.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_12_0();
  BOOL v10 = a1 == 0x7954657469766E69 && a2 == 0xEA00000000006570;
  if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType, v4);
    uint64_t v11 = type metadata accessor for SpeakableString();
    if (__swift_getEnumTagSinglePayload(v4, 1, v11) == 1)
    {
      uint64_t result = outlined destroy of SpeakableString?(v4);
LABEL_8:
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }
    *(void *)(a3 + 24) = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(boxed_opaque_existential_1, v4, v11);
  }
  else
  {
    if (a1 != 0x7069636974726170 || a2 != 0xEC00000073746E61)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants);
    *(void *)(a3 + 24) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    *(void *)a3 = v15;
    return swift_bridgeObjectRetain();
  }
}

PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional __swiftcall PhoneCallInvite.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallInvite.CodingKeys.init(rawValue:), v3);
  OUTLINED_FUNCTION_18_22();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallInvite_CodingKeys_participants;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallInvite_CodingKeys_unknownDefault;
  }
  if (v1) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t PhoneCallInvite.CodingKeys.rawValue.getter(char a1)
{
  if (a1) {
    return 0x7069636974726170;
  }
  else {
    return 0x7954657469766E69;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallInvite.CodingKeys(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallInvite.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallInvite.CodingKeys()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallInvite.CodingKeys()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallInvite.CodingKeys@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallInvite.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallInvite.CodingKeys@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PhoneCallInvite.CodingKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneCallInvite.CodingKeys()
{
  return PhoneCallInvite.CodingKeys.rawValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneCallInvite.CodingKeys@<W0>(uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallInvite.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallInvite.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneCallInvite.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneCallInvite.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PhoneCallInvite.__deallocating_deinit()
{
  PhoneCallInvite.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t PhoneCallInvite.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneCallInvite.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for SpeakableString();
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_0(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_0(&lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A], &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }
  return result;
}

uint64_t _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhoneCallInvite.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PhoneCallInvite.init(from:)(a1);
  return v2;
}

uint64_t PhoneCallInvite.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneCallInvite.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  *(void *)(v1 + 16) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {

    type metadata accessor for PhoneCallInvite(0);
    OUTLINED_FUNCTION_26_6();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for SpeakableString();
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_0(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    OUTLINED_FUNCTION_12_34();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of SpeakableString?(v8, v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_0(&lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A], &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson);
    OUTLINED_FUNCTION_12_34();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v11 = OUTLINED_FUNCTION_9_49();
    v12(v11);
    *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhonePerson]);
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_0(a2, (void (*)(uint64_t))type metadata accessor for PhonePerson);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in PhoneCallInvite()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_0(&lazy protocol witness table cache variable for type PhoneCallInvite and conformance PhoneCallInvite, (void (*)(uint64_t))type metadata accessor for PhoneCallInvite);
}

uint64_t base witness table accessor for Encodable in PhoneCallInvite()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_0(&lazy protocol witness table cache variable for type PhoneCallInvite and conformance PhoneCallInvite, (void (*)(uint64_t))type metadata accessor for PhoneCallInvite);
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhoneCallInvite()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhoneCallInvite()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t protocol witness for CATType.mockGlobals.getter in conformance PhoneCallInvite()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhoneCallInvite()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneCallInvite(void *a1))(void *a1)
{
  Swift::String v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 136))();
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhoneCallInvite()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneCallInvite@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneCallInvite()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_24D4E4()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_24D528@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 120))();
  *a1 = result;
  return result;
}

uint64_t sub_24D574@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 120))();
  *a1 = result;
  return result;
}

uint64_t ObjC metadata update function for PhoneCallInvite()
{
  return type metadata accessor for PhoneCallInvite(0);
}

void type metadata completion function for PhoneCallInvite()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for PhoneCallInvite.Builder()
{
  return type metadata accessor for PhoneCallInvite.Builder(0);
}

void type metadata completion function for PhoneCallInvite.Builder()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for PhoneCallInvite.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallInvite.CodingKeys()
{
  return &type metadata for PhoneCallInvite.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_8_65@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_9_49()
{
  return v0;
}

uint64_t AnnounceIncomingCallerOutputStrategy.init(announceCallsContext:incomingCallCats:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a2 & 1;
  uint64_t result = type metadata accessor for AnnounceIncomingCallCATsSimple();
  *(void *)(a4 + 24) = result;
  *(void *)(a4 + 32) = &protocol witness table for AnnounceIncomingCallCATsSimple;
  *(void *)a4 = a3;
  *(void *)(a4 + 40) = a1;
  *(unsigned char *)(a4 + 48) = v7;
  return result;
}

uint64_t AnnounceIncomingCallerOutputStrategy.makePromptForConfirmationFlow<A>(app:intentResponse:sharedGlobals:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for IncomingCallActionConfirmationStrategy();
  outlined init with copy of SignalProviding(v5, (uint64_t)v23);
  outlined init with copy of SignalProviding(a3, (uint64_t)v22);
  BOOL v10 = *(void **)(v5 + 40);
  char v11 = *(unsigned char *)(v5 + 48);
  id v12 = v10;
  id v13 = a2;
  uint64_t v14 = default argument 4 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)(a4, a5);
  default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)((uint64_t *)v21);
  uint64_t v15 = IncomingCallActionConfirmationStrategy.__allocating_init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)((uint64_t)v13, v23, v22, (uint64_t)v10, v11, v14, v21);
  type metadata accessor for AnnounceCallConfirmationStrategy();
  outlined init with copy of SignalProviding(a3, (uint64_t)v23);
  uint64_t v16 = AnnounceCallConfirmationStrategy.__allocating_init(wrapped:sharedGlobals:)(v15, v23);
  type metadata accessor for IncomingCallActionConfirmation();
  lazy protocol witness table accessor for type IncomingCallActionConfirmation and conformance IncomingCallActionConfirmation();
  type metadata accessor for BargeInCapablePromptForConfirmationFlow();
  *(void *)&v22[0] = v13;
  *(void *)&v21[0] = v16;
  outlined init with copy of SignalProviding(a3, (uint64_t)v23);
  id v17 = v13;
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  BargeInCapablePromptForConfirmationFlow.__allocating_init<A>(itemToConfirm:strategy:sharedGlobals:)();
  *(void *)&v23[0] = v18;
  swift_getWitnessTable();
  uint64_t v19 = Flow.eraseToAnyValueFlow()();
  swift_release();
  swift_release();
  swift_release();
  return v19;
}

ValueMetadata *type metadata accessor for AnnounceIncomingCallerOutputStrategy()
{
  return &type metadata for AnnounceIncomingCallerOutputStrategy;
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.__allocating_init(type:sharedGlobals:startCallCats:ongoingCallCats:startCallCATsSimple:ongoingCallCATsSimple:)()
{
  OUTLINED_FUNCTION_17_27();
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v9;
  *(unsigned char *)(v12 + 32) = v7;
  outlined init with take of AppSelectionSignalComponent(v5, v12 + 40);
  *(void *)(v12 + 80) = v3;
  *(void *)(v12 + 88) = v2;
  *(void *)(v12 + 96) = v1;
  *(void *)(v12 + 104) = v0;
  return v12;
}

void *EmergencyDuringOngoingCallConfirmationStrategy.type.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  outlined copy of EmergencyDuringOngoingCallPromptType(v1, *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  return v1;
}

uint64_t SharedGlobals.appSelectionState.getter()
{
  return swift_retain();
}

uint64_t SharedGlobals.phoneAppSelectionSignalsGatherer.getter()
{
  return swift_retain();
}

uint64_t EmergencyCountdownOutputBuilder.startCallCATsSimple.getter()
{
  return swift_retain();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.init(type:sharedGlobals:startCallCats:ongoingCallCats:startCallCATsSimple:ongoingCallCATsSimple:)()
{
  OUTLINED_FUNCTION_17_27();
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v6;
  *(unsigned char *)(v1 + 32) = v7;
  outlined init with take of AppSelectionSignalComponent(v8, v1 + 40);
  *(void *)(v1 + 80) = v4;
  *(void *)(v1 + 88) = v3;
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v0;
  return v1;
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.actionForInput(_:)()
{
  uint64_t v1 = type metadata accessor for Parse();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  outlined init with copy of SignalProviding(v0 + 40, (uint64_t)v8);
  Input.parse.getter();
  char v5 = ContactPromptResponseParser.parseResponse(from:)((uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  outlined destroy of ContactPromptResponseParser((uint64_t)v8);
  if ((v5 - 5) >= 4u) {
    return static ActionForInput.handle()();
  }
  else {
    return static ActionForInput.ignore()();
  }
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.parseConfirmationResponse(input:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[8] = v2;
  v1[9] = v0;
  v1[7] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[10] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[11] = OUTLINED_FUNCTION_35();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[12] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for Parse();
  v1[13] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[14] = v7;
  v1[15] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  void *v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  void *v9;
  uint64_t v10;
  uint64_t v12;

  uint64_t v1 = v0[15];
  outlined init with copy of SignalProviding(v0[9] + 40, (uint64_t)(v0 + 2));
  Input.parse.getter();
  uint64_t v2 = ContactPromptResponseParser.parseResponse(from:)(v1);
  uint64_t v3 = OUTLINED_FUNCTION_20_7();
  v4(v3);
  outlined destroy of ContactPromptResponseParser((uint64_t)(v0 + 2));
  if (v2 >= 3u)
  {
    uint64_t v9 = (void *)v0[11];
    *uint64_t v9 = 0;
    v9[1] = 0;
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v10);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_5((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
  }
  else
  {
    uint64_t v5 = v0[12];
    uint64_t v6 = *(unsigned int *)*(&off_55EDD0 + (char)v2);
    uint64_t v7 = type metadata accessor for ConfirmationResponse();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload(v5, 0, 1, v7);
    SimpleConfirmationResponseProvider.init(_:)();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[227] = v0;
  v1[221] = v2;
  uint64_t v3 = type metadata accessor for ResponseMode();
  OUTLINED_FUNCTION_11_0(v3);
  v1[233] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v4);
  v1[234] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v1[235] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[236] = v6;
  v1[237] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for YesNoConfirmationModel();
  v1[238] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[239] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v16;
  void *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;

  uint64_t v21 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    unint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[215] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000029, 0x8000000000496590, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v2, v3, "#EmergencyDuringOngoingCallConfirmationStrategy %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  __swift_project_boxed_opaque_existential_1((void *)(v0[227] + 40), *(void *)(v0[227] + 64));
  uint64_t v5 = OUTLINED_FUNCTION_20_7();
  v6(v5);
  __swift_project_boxed_opaque_existential_1(v0 + 167, v0[170]);
  uint64_t v7 = OUTLINED_FUNCTION_20_7();
  if (v8(v7))
  {
    swift_getObjectType();
    uint64_t v9 = SPHCall.toPhoneCallRecord()();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v0[240] = v9;
  uint64_t v10 = v0[227];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 167));
  LODWORD(v10) = *(unsigned __int8 *)(v10 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v11 = swift_allocObject();
  v0[241] = v11;
  *(_OWORD *)(v11 + 16) = xmmword_469DA0;
  uint64_t v12 = v0[227];
  if (v10 >= 2)
  {
    uint64_t v16 = (void *)(class metadata base offset for StartCallCATsSimple + **(void **)(v12 + 96) + 800);
    uint64_t v19 = (uint64_t (*)(void))(*v16 + *(int *)*v16);
    id v17 = (void *)swift_task_alloc();
    v0[242] = v17;
    *id v17 = v0;
    v17[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
    return v19();
  }
  else
  {
    id v13 = *(void **)(v12 + 104);
    v0[248] = v13;
    uint64_t v18 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for OngoingCallCATsSimple + *v13 + 48)
                                          + **(int **)(class metadata base offset for OngoingCallCATsSimple + *v13 + 48));
    uint64_t v14 = (void *)swift_task_alloc();
    v0[249] = v14;
    *uint64_t v14 = v0;
    v14[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
    return v18(v9);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 1944) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 1952) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  int *v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = v0[227];
  *(void *)(v0[241] + 32) = v0[244];
  uint64_t v2 = *(int **)(class metadata base offset for OngoingCallCATsSimple + **(void **)(v1 + 104) + 16);
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[245] = v3;
  *uint64_t v3 = v0;
  v3[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  uint64_t v4 = v0[240];
  return v6(v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 1968) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 1976) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_50(v0[247]);
  v0[255] = v5;
  v0[256] = (uint64_t)static SiriPhoneActionFactory.makeConfirmAndRejectActions()();
  v0[257] = v3;
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_11_42();
  return _swift_asyncLet_get_throwing(v0 + 82, v2, EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:), v1);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 2000) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 2008) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = (void *)v0[248];
  *(void *)(v0[241] + 32) = v0[251];
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(class metadata base offset for OngoingCallCATsSimple + *v1 + 32)
                         + **(int **)(class metadata base offset for OngoingCallCATsSimple + *v1 + 32));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[252] = v2;
  *uint64_t v2 = v0;
  v2[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 2024) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 2032) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_50(v0[254]);
  v0[255] = v5;
  v0[256] = (uint64_t)static SiriPhoneActionFactory.makeConfirmAndRejectActions()();
  v0[257] = v3;
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_11_42();
  return _swift_asyncLet_get_throwing(v0 + 82, v2, EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:), v1);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  v1[258] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[259] = v1[211];
    v1[260] = v1[212];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 213, EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:), v1 + 216);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 2088) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v2, v3, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 1416;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  long long *v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[239];
  (*(void (**)(void, void))(v0[236] + 8))(v0[237], v0[235]);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_5(v1, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 187));
  return _swift_asyncLet_finish(v0 + 2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void **)(v0 + 2056);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  *(void *)(*(void *)(v0 + 1928) + 16) = 0;
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2_85();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 1928);

  *(void *)(v1 + 16) = 0;
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2_85();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  *(void *)(*(void *)(v0 + 1928) + 16) = 0;
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2_85();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 1928);

  *(void *)(v1 + 16) = 0;
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2_85();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 16);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 2056);

  swift_release();
  OUTLINED_FUNCTION_2_85();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 16);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 2056);

  swift_release();
  OUTLINED_FUNCTION_2_85();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10[260];
  uint64_t v12 = v10[259];
  id v13 = (void *)v10[257];
  uint64_t v14 = (void *)v10[256];
  uint64_t v15 = v10[239];
  uint64_t v16 = v10[238];
  uint64_t v38 = (void *)v10[227];
  uint64_t v17 = v10[213];
  uint64_t v18 = v10[214];
  uint64_t v19 = (void *)(v15 + *(int *)(v16 + 32));
  *uint64_t v19 = 0xD000000000000011;
  v19[1] = 0x8000000000491230;
  v10[209] = v12;
  v10[210] = v11;
  swift_bridgeObjectRetain();
  id v20 = v13;
  id v21 = v14;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v22 = v21;
  CodableAceObject.init(wrappedValue:)();
  v10[207] = v17;
  v10[208] = v18;
  Loggable.init(wrappedValue:)();
  CodableAceObject.init(wrappedValue:)();

  v10[200] = v16;
  v10[201] = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_8(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 197);
  outlined init with copy of YesNoConfirmationModel(v15, (uint64_t)boxed_opaque_existential_1);
  static DialogPhase.confirmation.getter();
  *(void *)(swift_task_alloc() + 16) = v10 + 197;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter();
  static ResponseMode.voiceForward.getter();
  OutputGenerationManifest.responseMode.setter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 197));
  uint64_t v24 = v38[8];
  uint64_t v25 = v38[9];
  __swift_project_boxed_opaque_existential_1(v38 + 5, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 136))(v24, v25);
  uint64_t v26 = v10[190];
  uint64_t v27 = v10[191];
  __swift_project_boxed_opaque_existential_1(v10 + 187, v26);
  v10[180] = type metadata accessor for PhoneSnippetDataModels();
  v10[181] = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  __swift_allocate_boxed_opaque_existential_1(v10 + 177);
  uint64_t v28 = OUTLINED_FUNCTION_20_7();
  outlined init with copy of YesNoConfirmationModel(v28, v29);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = *(void *)(v27 + 8);
  unint64_t v33 = (void *)swift_task_alloc();
  v10[262] = (uint64_t)v33;
  *unint64_t v33 = v10;
  v33[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  uint64_t v34 = v10[255];
  uint64_t v35 = v10[237];
  uint64_t v36 = v10[221];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v36, v10 + 177, v34, v35, v26, v30, v31, v32, a9, a10);
}

uint64_t implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return static LabelTemplates.yes()();
}

uint64_t implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
    return v11();
  }
  else
  {
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v13, v14, v15);
  }
}

uint64_t implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return static LabelTemplates.no()();
}

uint64_t implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
    return v11();
  }
  else
  {
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v13, v14, v15);
  }
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_5(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.deinit()
{
  outlined consume of EmergencyDuringOngoingCallPromptType(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.__deallocating_deinit()
{
  EmergencyDuringOngoingCallConfirmationStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.actionForInput(_:) in conformance EmergencyDuringOngoingCallConfirmationStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance EmergencyDuringOngoingCallConfirmationStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:) in conformance EmergencyDuringOngoingCallConfirmationStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:) in conformance EmergencyDuringOngoingCallConfirmationStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:) in conformance EmergencyDuringOngoingCallConfirmationStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse() in conformance EmergencyDuringOngoingCallConfirmationStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsupportedFlowCATs.deleteVoicemail();
  return PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(a1, a2, a3);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance EmergencyDuringOngoingCallConfirmationStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()(a1, a2, a3);
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_2_85()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_50@<X0>(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 1928) + 40) = a1;
  return specialized Array._endMutation()();
}

uint64_t OUTLINED_FUNCTION_11_42()
{
  return swift_asyncLet_begin();
}

uint64_t OUTLINED_FUNCTION_12_35()
{
  return swift_asyncLet_begin();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional __swiftcall StartCallCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  _findStringSwitchCaseWithCache(cases:string:cache:)();
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 0x44) {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional)68;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional)v1;
  }
}

void StartCallCATsSimple.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
      OUTLINED_FUNCTION_24_10();
      break;
    case 10:
    case 14:
    case 20:
    case 32:
    case 42:
      OUTLINED_FUNCTION_24_10();
      OUTLINED_FUNCTION_10_2(37);
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.Properties()
{
  char v1 = OUTLINED_FUNCTION_32();
  StartCallCATsSimple.Properties.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t StartCallCATsSimple.confirmApp(appName:isPhoneApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 64) = v2;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  *(void *)(v1 + 32) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v2 = OUTLINED_FUNCTION_36_2();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  OUTLINED_FUNCTION_36_3();
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v9;
  uint64_t v10 = OUTLINED_FUNCTION_9_0();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_29_6(v10);
  *uint64_t v11 = v12;
  v11[1] = StartCallCATsSimple.confirmApp(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(20);
  OUTLINED_FUNCTION_20_2();
  return v16(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmAppDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmAppDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmAppDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmAppDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t StartCallCATsSimple.ConfirmAppDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000017;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.ConfirmAppDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.ConfirmAppDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmAppDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmAppDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmAppDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmAppDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.ConfirmAppDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 64) = v2;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  *(void *)(v1 + 32) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_4_41(v4, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v9();
  }
  OUTLINED_FUNCTION_36_3();
  *(void *)(v2 + 120) = &type metadata for Bool;
  *(unsigned char *)(v2 + 96) = v10;
  uint64_t v11 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v11);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v12;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(20);
  OUTLINED_FUNCTION_20_2();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.confirmCallCapability(callCapability:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_116_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(31);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmCallCapabilityDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmCallCapabilityDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmCallCapabilityDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmCallCapabilityDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

void StartCallCATsSimple.ConfirmCallCapabilityDialogIds.rawValue.getter()
{
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmCallCapabilityDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmCallCapabilityDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmCallCapabilityDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  OUTLINED_FUNCTION_32();
  StartCallCATsSimple.ConfirmCallCapabilityDialogIds.rawValue.getter();
  *uint64_t v0 = v1;
  v0[1] = 0xE700000000000000;
}

uint64_t StartCallCATsSimple.confirmCallCapabilityAsLabels(callCapability:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_116_1(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  uint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(31);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_145_2(v1, v2, v3, v4, v5, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(void);
  void *v14;
  uint64_t v15;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;

  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_166_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v5 = (__n128 *)swift_allocObject();
  v2[7] = v5;
  uint64_t v6 = OUTLINED_FUNCTION_66_4(v5, (__n128)xmmword_472F90);
  v6[3].n128_u8[0] = v1;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[5].n128_u64[0] = v4 - 8;
  uint64_t v7 = OUTLINED_FUNCTION_214((uint64_t)v6, (uint64_t)"contactToConfirm");
  if (v0)
  {
    uint64_t v7 = type metadata accessor for DialogPerson();
  }
  else
  {
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  uint64_t v8 = v2[3];
  v5[6].n128_u64[0] = (unint64_t)v0;
  v5[7].n128_u64[1] = v7;
  v5[8].n128_u64[0] = v4;
  uint64_t v9 = OUTLINED_FUNCTION_208((uint64_t)"redactedContactToConfirm");
  if (v8)
  {
    uint64_t v9 = type metadata accessor for DialogPerson();
  }
  else
  {
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_108_3(v9);
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_136_2(v11);
  if (v12)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v5[19].n128_u64[1] = v3;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
    swift_retain();
  }
  uint64_t v14 = (void *)OUTLINED_FUNCTION_3_0();
  v2[8] = v14;
  *uint64_t v14 = v2;
  v14[1] = StartCallCATsSimple.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  uint64_t v15 = OUTLINED_FUNCTION_11_6(v4 + 1);
  return v17(v15);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmContactsDialogIds.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  v3._object = v1;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of StartCallCATsSimple.ConfirmContactsDialogIds.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v2 >= 0xB) {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional)11;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional)v2;
  }
}

void StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 6:
      OUTLINED_FUNCTION_24_10();
      OUTLINED_FUNCTION_10_2(23);
      break;
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.ConfirmContactsDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmContactsDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t StartCallCATsSimple.confirmContactsAsLabels(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_145_2(v1, v2, v3, v4, v5, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(void);
  void *v14;
  uint64_t v15;
  uint64_t (*v17)(void);
  uint64_t v18;

  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_166_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v5 = (__n128 *)swift_allocObject();
  v2[7] = v5;
  uint64_t v6 = OUTLINED_FUNCTION_66_4(v5, (__n128)xmmword_472F90);
  v6[3].n128_u8[0] = v1;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[5].n128_u64[0] = v4 - 8;
  uint64_t v7 = OUTLINED_FUNCTION_214((uint64_t)v6, (uint64_t)"contactToConfirm");
  if (v0)
  {
    uint64_t v7 = type metadata accessor for DialogPerson();
  }
  else
  {
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  uint64_t v8 = v2[3];
  v5[6].n128_u64[0] = (unint64_t)v0;
  v5[7].n128_u64[1] = v7;
  v5[8].n128_u64[0] = v4;
  uint64_t v9 = OUTLINED_FUNCTION_208((uint64_t)"redactedContactToConfirm");
  if (v8)
  {
    uint64_t v9 = type metadata accessor for DialogPerson();
  }
  else
  {
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_108_3(v9);
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_136_2(v11);
  if (v12)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v5[19].n128_u64[1] = v3;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
    swift_retain();
  }
  uint64_t v14 = (void *)OUTLINED_FUNCTION_3_0();
  v2[8] = v14;
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v14 = v15;
  v14[1] = StartCallCATsSimple.confirmContactsAsLabels(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  OUTLINED_FUNCTION_24_10();
  return v17();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.confirmDestinationType(destinationType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_115_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(32);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmDestinationTypeDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmDestinationTypeDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmDestinationTypeDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmDestinationTypeDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmDestinationTypeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmDestinationTypeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmDestinationTypeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.confirmDestinationTypeAsLabels(destinationType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_115_1(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  uint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(32);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.confirmPreferredCallProvider(preferredCallProvider:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t StartCallCATsSimple.confirmPreferredCallProvider(preferredCallProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_20_3(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  id v20 = (void *)OUTLINED_FUNCTION_29_6(v19);
  void *v20 = v21;
  v20[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_26_2(0xD000000000000026);
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmPreferredCallProviderDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmPreferredCallProviderDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

void StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.rawValue.getter()
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmPreferredCallProviderDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmPreferredCallProviderDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds()
{
  OUTLINED_FUNCTION_32();
  StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.rawValue.getter();
  *uint64_t v0 = v1;
  v0[1] = 0xE700000000000000;
}

uint64_t StartCallCATsSimple.confirmPreferredCallProviderAsLabels(preferredCallProvider:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t StartCallCATsSimple.confirmPreferredCallProviderAsLabels(preferredCallProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_31_6(v20);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v10 = v21;
  v10[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v27(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateApps(isOnlyPhoneAndFaceTime:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateApps(isOnlyPhoneAndFaceTime:));
}

uint64_t StartCallCATsSimple.disambiguateApps(isOnlyPhoneAndFaceTime:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 32) = 0xD000000000000016;
  *(void *)(v1 + 40) = 0x800000000048F120;
  *(void *)(v1 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_56_10(v1, (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  uint64_t v7 = v2;
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v1 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  void *v4 = v0;
  v4[1] = StartCallCATsSimple.disambiguateApps(isOnlyPhoneAndFaceTime:);
  uint64_t v5 = OUTLINED_FUNCTION_168_0(0xD00000000000001ALL);
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  long long v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateAppsDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateAppsDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.DisambiguateAppsDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000016;
  }
  else {
    return 0x32676F6C616964;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateAppsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = StartCallCATsSimple.DisambiguateAppsDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateAppsAsLabels(isOnlyPhoneAndFaceTime:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateAppsAsLabels(isOnlyPhoneAndFaceTime:));
}

uint64_t StartCallCATsSimple.disambiguateAppsAsLabels(isOnlyPhoneAndFaceTime:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v10 = v2;
  OUTLINED_FUNCTION_18_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  *(void *)(v3 + 32) = 0xD000000000000016;
  *(void *)(v3 + 40) = 0x800000000048F120;
  *(void *)(v3 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_56_10(v3, (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  uint64_t v9 = v4;
  *(void *)(v1 + 24) = v3;
  *(_OWORD *)(v3 + 16) = v5;
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_147(v6);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v7;
  v0[1] = StartCallCATsSimple.disambiguateAppsAsLabels(isOnlyPhoneAndFaceTime:);
  OUTLINED_FUNCTION_24_10();
  return v9();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  long long v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:));
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v2 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_147(v3);
  OUTLINED_FUNCTION_77_4(v4, (__n128)xmmword_467710);
  *(void *)(v0 + 72) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  *(void *)(v0 + 48) = v2;
  OUTLINED_FUNCTION_16_21();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_43_12(v5);
  *uint64_t v6 = v7;
  v6[1] = StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_10_16();
  return v9(0xD000000000000023);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  __n128 *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsVoiceModeDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsVoiceModeDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsVoiceModeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsVoiceModeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:));
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:)()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v2 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_147(v3);
  OUTLINED_FUNCTION_77_4(v4, (__n128)xmmword_467710);
  *(void *)(v0 + 72) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  *(void *)(v0 + 48) = v2;
  OUTLINED_FUNCTION_16_21();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 40) = v5;
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds();
  void *v5 = v1;
  v5[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  return v7(0xD000000000000023);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  __n128 *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateCallCapability()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

BOOL StartCallCATsSimple.DisambiguateCallCapabilityDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateCallCapabilityDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.DisambiguateCallCapabilityDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateCallCapabilityAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(36);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContacts(requestedRelationship:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t StartCallCATsSimple.disambiguateContacts(requestedRelationship:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_20_3(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_29_6(v19);
  void *v20 = v21;
  v20[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_26_2(0xD00000000000001ELL);
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t StartCallCATsSimple.DisambiguateContactsDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.DisambiguateContactsDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsAsLabels(requestedRelationship:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t StartCallCATsSimple.disambiguateContactsAsLabels(requestedRelationship:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_31_6(v20);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v10 = v21;
  v10[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v27(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_36_2();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_20_3(v15);
  OUTLINED_FUNCTION_27_0(v16, (__n128)xmmword_467720);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for SirikitDeviceState();
    uint64_t v18 = v14;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_123_3(v17, v18);
  uint64_t v19 = OUTLINED_FUNCTION_101_2(0x8000000000496680);
  if (v10)
  {
    uint64_t v19 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_26_2(v13 + 22);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

BOOL StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergencyAsLabels(device:nonLocalEmergencyContact:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsForeignEmergencyAsLabels(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergencyAsLabels(device:nonLocalEmergencyContact:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void **)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_36_2();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_20_3(v14);
  OUTLINED_FUNCTION_27_0(v15, (__n128)xmmword_467720);
  if (v13)
  {
    uint64_t v16 = type metadata accessor for SirikitDeviceState();
    uint64_t v17 = (uint64_t)v13;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_123_3(v16, v17);
  uint64_t v18 = OUTLINED_FUNCTION_101_2(0x8000000000496680);
  if (v10)
  {
    uint64_t v18 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v18);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v19 = swift_task_alloc();
  OUTLINED_FUNCTION_31_6(v19);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v13 = v20;
  v13[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v26(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)(char a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 57) = a2;
  *(unsigned char *)(v4 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_144_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  v5[2].n128_u64[0] = v3 | 2;
  v5[2].n128_u64[1] = 0x8000000000493A90;
  v5[3].n128_u8[0] = v1;
  v5[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[5].n128_u64[0] = v3 + 17;
  uint64_t v6 = OUTLINED_FUNCTION_162_0(v5, (unint64_t)&type metadata for Bool, (__n128)xmmword_46A250);
  uint64_t v7 = OUTLINED_FUNCTION_210_0((uint64_t)v6, (uint64_t)"requestedContact");
  if (v0)
  {
    uint64_t v7 = type metadata accessor for DialogPerson();
  }
  else
  {
    v2[19] = 0;
    v2[20] = 0;
  }
  v2[18] = v0;
  v2[21] = v7;
  OUTLINED_FUNCTION_27_19();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_32_0(v3 + 21);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsHandlesDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsHandlesDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

void StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_24_10();
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsHandlesDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsHandlesDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t StartCallCATsSimple.disambiguateContactsHandlesAsLabels(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)(char a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 57) = a2;
  *(unsigned char *)(v4 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsHandlesAsLabels(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsHandlesAsLabels(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_144_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  v5[2].n128_u64[0] = v3 | 2;
  v5[2].n128_u64[1] = 0x8000000000493A90;
  v5[3].n128_u8[0] = v1;
  v5[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[5].n128_u64[0] = v3 + 17;
  uint64_t v6 = OUTLINED_FUNCTION_162_0(v5, (unint64_t)&type metadata for Bool, (__n128)xmmword_46A250);
  uint64_t v7 = OUTLINED_FUNCTION_210_0((uint64_t)v6, (uint64_t)"requestedContact");
  if (v0)
  {
    uint64_t v7 = type metadata accessor for DialogPerson();
  }
  else
  {
    v2[19] = 0;
    v2[20] = 0;
  }
  v2[18] = v0;
  v2[21] = v7;
  OUTLINED_FUNCTION_27_19();
  uint64_t v8 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v8);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v9;
  v0[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v15(v10, v11, v12, v13, v14, v15, v16, v17);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergency(localEmergencyServices:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsLocalEmergency(localEmergencyServices:));
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergency(localEmergencyServices:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_147(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  *(void *)(v5 + 32) = 0xD000000000000016;
  *(void *)(v5 + 40) = 0x80000000004966A0;
  *(void *)(v0 + 72) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  *(void *)(v0 + 48) = v3;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                        + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_43_12(v6);
  *uint64_t v7 = v8;
  v7[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  uint64_t v9 = OUTLINED_FUNCTION_168_0(0xD00000000000002CLL);
  return v11(v9);
}

BOOL StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergencyAsLabels(localEmergencyServices:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsLocalEmergencyAsLabels(localEmergencyServices:));
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergencyAsLabels(localEmergencyServices:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  *(void *)(v4 + 32) = 0xD000000000000016;
  *(void *)(v4 + 40) = 0x80000000004966A0;
  *(void *)(v1 + 72) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  *(void *)(v1 + 48) = v2;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v5);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v2 = v6;
  v2[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v12(v7, v8, v9, v10, v11, v12, v13, v14);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsPartialList()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(41);
  return v4(v3);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsPartialListDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsPartialListDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsPartialListDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsPartialListDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsPartialListDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsPartialListDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsPartialListDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsPartialListAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(41);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoList(personsToDisambiguate:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsVoxNoList(personsToDisambiguate:));
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoList(personsToDisambiguate:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_27_19();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_43_12(v6);
  *uint64_t v7 = v8;
  v7[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_32_0(0xD000000000000027);
  OUTLINED_FUNCTION_20_2();
  return v12(v9, v10, v11, v12, v13, v14, v15, v16);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsVoxNoListDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsVoxNoListDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x65766947656D6153;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsVoxNoListDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsVoxNoListDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoListAsLabels(personsToDisambiguate:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.disambiguateContactsVoxNoListAsLabels(personsToDisambiguate:));
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoListAsLabels(personsToDisambiguate:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_27_19();
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v6);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v2 = v7;
  v2[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v13(v8, v9, v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguateDestinationType()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(37);
  return v4(v3);
}

BOOL StartCallCATsSimple.DisambiguateDestinationTypeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateDestinationTypeDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.DisambiguateDestinationTypeDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateDestinationTypeAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(37);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.disambiguatePreferredCallProvider()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(43);
  return v4(v3);
}

BOOL StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.disambiguatePreferredCallProviderAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(43);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.emergencyCountdown()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(28);
  return v4(v3);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::EmergencyCountdownDialogIds_optional __swiftcall StartCallCATsSimple.EmergencyCountdownDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.EmergencyCountdownDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::EmergencyCountdownDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.EmergencyCountdownDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x676E696C6C6163;
  }
  if (a1 == 1) {
    return 0xD000000000000011;
  }
  return 7565171;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::EmergencyCountdownDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::EmergencyCountdownDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.EmergencyCountdownDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = StartCallCATsSimple.EmergencyCountdownDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.emergencyCountdownAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(28);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCode(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCode(device:));
}

uint64_t StartCallCATsSimple.errorWithCode(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(23);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeAsLabels(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeAsLabels(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(23);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabled(device:isEmergency:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeAirplaneModeEnabled(device:isEmergency:));
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabled(device:isEmergency:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v14 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_82_3(v6);
  OUTLINED_FUNCTION_195_0(v7);
  OUTLINED_FUNCTION_8_1();
  uint64_t v8 = swift_task_alloc();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *unint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  unint64_t v11 = OUTLINED_FUNCTION_73_0(42);
  return v12(v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAirplaneModeEnabledDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAirplaneModeEnabledDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAirplaneModeEnabledDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAirplaneModeEnabledDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabledAsLabels(device:isEmergency:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeAirplaneModeEnabledAsLabels(device:isEmergency:));
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabledAsLabels(device:isEmergency:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_82_3(v6);
  OUTLINED_FUNCTION_195_0(v7);
  OUTLINED_FUNCTION_8_1();
  uint64_t v8 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v8);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v9;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v10 = OUTLINED_FUNCTION_40(42);
  return v11(v10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAppConfigurationRequired(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_36_1(47);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAppConfigurationRequiredAsLabels(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  uint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(47);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgress(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeCallInProgress(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgress(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:);
  unint64_t v10 = OUTLINED_FUNCTION_73_0(37);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallInProgressDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallInProgressDialogIds_optional)StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallInProgressDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallInProgressDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgressAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeCallInProgressAsLabels(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgressAsLabels(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(37);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallRinging(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeCallRinging(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallRinging(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(34);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallRingingDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallRingingDialogIds_optional)StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(Swift::String a1, Swift::OpaquePointer a2)
{
  OUTLINED_FUNCTION_35_6(a1, a2);
  OUTLINED_FUNCTION_15_0();
  if (v2 >= 4) {
    return 4;
  }
  else {
    return v2;
  }
}

void StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.rawValue.getter()
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallRingingDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallRingingDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds()
{
  OUTLINED_FUNCTION_32();
  StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.rawValue.getter();
  *uint64_t v0 = v1;
  v0[1] = 0xE700000000000000;
}

uint64_t StartCallCATsSimple.errorWithCodeCallRingingAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeCallRingingAsLabels(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallRingingAsLabels(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(34);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallingServiceNotAvailable()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(49);
  return v4(v3);
}

BOOL StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallingServiceNotAvailableAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(49);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeContactNotSupportedByApp(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *unint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_36_1(47);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

BOOL StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeContactNotSupportedByAppAsLabels(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  unint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(47);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:));
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  v1[6] = v6;
  v1[9] = v5;
  v1[10] = 0x73746361746E6F63;
  uint64_t v8 = OUTLINED_FUNCTION_101_2(0xE800000000000000);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v1[13] = 0;
    v1[14] = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  unint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *unint64_t v10 = v11;
  v10[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(49);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDownTimeRestrictionEnabledDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDownTimeRestrictionEnabledDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDownTimeRestrictionEnabledDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDownTimeRestrictionEnabledDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabledAsLabels(intent:contacts:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabledAsLabels(intent:contacts:));
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabledAsLabels(intent:contacts:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  v1[6] = v6;
  v1[9] = v5;
  v1[10] = 0x73746361746E6F63;
  uint64_t v8 = OUTLINED_FUNCTION_101_2(0xE800000000000000);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v1[13] = 0;
    v1[14] = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v2 = v10;
  v2[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(49);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeNoValidNumber(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  Swift::OpaquePointer v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(36);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeNoValidNumberDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeNoValidNumberDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeNoValidNumberDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeNoValidNumberDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeNoValidNumberAsLabels(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  uint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(36);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeScreenTimeRestrictionEnabled()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(51);
  return v4(v3);
}

BOOL StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeScreenTimeRestrictionEnabledAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(51);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeUnableToHandOff()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

BOOL StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeUnableToHandOffAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(38);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.finalLowConfidenceResponse()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

BOOL StartCallCATsSimple.FinalLowConfidenceResponseDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.FinalLowConfidenceResponseDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.FinalLowConfidenceResponseDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.finalLowConfidenceResponseAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(36);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.genericError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.genericError(device:));
}

uint64_t StartCallCATsSimple.genericError(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  unint64_t v10 = OUTLINED_FUNCTION_73_0(22);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::GenericErrorDialogIds_optional __swiftcall StartCallCATsSimple.GenericErrorDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.GenericErrorDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::GenericErrorDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::GenericErrorDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.GenericErrorDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::GenericErrorDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.GenericErrorDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.genericErrorAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.genericErrorAsLabels(device:));
}

uint64_t StartCallCATsSimple.genericErrorAsLabels(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(22);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.hangUpTip(device:hintIdentifier:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  __n128 *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t StartCallCATsSimple.hangUpTip(device:hintIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void *)(v10 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_36_2();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_111_2(v14);
  uint64_t v16 = OUTLINED_FUNCTION_24_7(v15, (__n128)xmmword_467720);
  if (v13)
  {
    uint64_t v16 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v12 + 56) = 0;
    *(void *)(v12 + 64) = 0;
  }
  OUTLINED_FUNCTION_66_6(v16);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v17);
  uint64_t v18 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v18);
  if (v19)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_70();
    v20();
    swift_retain();
  }
  uint64_t v21 = OUTLINED_FUNCTION_3_0();
  uint64_t v22 = (void *)OUTLINED_FUNCTION_65_5(v21);
  void *v22 = v23;
  v22[1] = StartCallCATsSimple.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_26_8();
  return v27(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

BOOL StartCallCATsSimple.HangUpTipDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.HangUpTipDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.HangUpTipDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.HangUpTipDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  __n128 *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_36_2();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_111_2(v15);
  uint64_t v17 = OUTLINED_FUNCTION_24_7(v16, (__n128)xmmword_467720);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v13 + 56) = 0;
    *(void *)(v13 + 64) = 0;
  }
  OUTLINED_FUNCTION_66_6(v17);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v18);
  uint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v19);
  if (v20)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_70();
    v21();
    swift_retain();
  }
  uint64_t v22 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_47_4(v22);
  lazy protocol witness table accessor for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v10 = v23;
  v10[1] = StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_26_8();
  return v29(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmation(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentConfirmation(intent:));
}

uint64_t StartCallCATsSimple.intentConfirmation(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_29_2(v5, 0x746E65746E69);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(28);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationDialogIds_optional __swiftcall StartCallCATsSimple.IntentConfirmationDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.IntentConfirmationDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0x436D7269666E6F43;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentConfirmationDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = StartCallCATsSimple.IntentConfirmationDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationAsLabels(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentConfirmationAsLabels(intent:));
}

uint64_t StartCallCATsSimple.intentConfirmationAsLabels(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_29_2(v5, 0x746E65746E69);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(28);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationEmergency(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentConfirmationEmergency(intent:device:));
}

uint64_t StartCallCATsSimple.intentConfirmationEmergency(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  unint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *unint64_t v10 = v11;
  v10[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_36_1(37);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationEmergencyDialogIds_optional __swiftcall StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationEmergencyDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000019;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationEmergencyDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationEmergencyDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyAsLabels(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentConfirmationEmergencyAsLabels(intent:device:));
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyAsLabels(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  unint64_t v3 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = (uint64_t)v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds();
  OUTLINED_FUNCTION_25_1();
  *unint64_t v3 = v10;
  v3[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(37);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyVoiceOnly()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(46);
  return v4(v3);
}

BOOL StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

unint64_t StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.rawValue.getter()
{
  return OUTLINED_FUNCTION_10_2(24);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds@<X0>(void *a1@<X8>)
{
  unint64_t result = StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.rawValue.getter();
  *a1 = 0xD000000000000018;
  a1[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyVoiceOnlyAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(46);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:));
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v15 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = OUTLINED_FUNCTION_24_3();
  uint64_t v17 = (__n128 *)OUTLINED_FUNCTION_111_2(v16);
  OUTLINED_FUNCTION_106(v17, (__n128)xmmword_46A250);
  if (v15)
  {
    uint64_t v18 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v19 = v15;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    v13[7] = 0;
    v13[8] = 0;
  }
  OUTLINED_FUNCTION_72_9(v18, v19);
  if (v10)
  {
    uint64_t v20 = type metadata accessor for PhonePersonList();
    uint64_t v21 = v10;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v20 = 0;
    v13[13] = 0;
    v13[14] = 0;
  }
  OUTLINED_FUNCTION_122_3(v20, v21);
  uint64_t v22 = OUTLINED_FUNCTION_212((uint64_t)"restrictedContacts");
  if (v12)
  {
    uint64_t v22 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v13[19] = 0;
    v13[20] = 0;
  }
  v13[18] = v12;
  v13[21] = v22;
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  swift_retain();
  uint64_t v23 = swift_task_alloc();
  uint64_t v24 = (void *)OUTLINED_FUNCTION_65_5(v23);
  *uint64_t v24 = v25;
  v24[1] = StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_159_0(v14 + 32);
  OUTLINED_FUNCTION_31_1();
  return v29(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10);
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationWithRestrictedContactsDialogIds_optional __swiftcall StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationWithRestrictedContactsDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationWithRestrictedContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationWithRestrictedContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:));
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void **)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_24_3();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_111_2(v15);
  OUTLINED_FUNCTION_106(v16, (__n128)xmmword_46A250);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v18 = (uint64_t)v14;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    v13[7] = 0;
    v13[8] = 0;
  }
  OUTLINED_FUNCTION_72_9(v17, v18);
  if (v10)
  {
    uint64_t v19 = type metadata accessor for PhonePersonList();
    uint64_t v20 = v10;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v19 = 0;
    v13[13] = 0;
    v13[14] = 0;
  }
  OUTLINED_FUNCTION_122_3(v19, v20);
  uint64_t v21 = OUTLINED_FUNCTION_212((uint64_t)"restrictedContacts");
  if (v12)
  {
    uint64_t v21 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v13[19] = 0;
    v13[20] = 0;
  }
  v13[18] = v12;
  v13[21] = v21;
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  swift_retain();
  uint64_t v22 = swift_task_alloc();
  OUTLINED_FUNCTION_47_4(v22);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v14 = v23;
  v14[1] = StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_31_1();
  return v29(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_121_2(v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  *(void *)(v0 + 56) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(void);
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;

  OUTLINED_FUNCTION_48();
  char v5 = v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v6 = swift_allocObject();
  v1[8] = v6;
  *(_OWORD *)(v6 + 16) = xmmword_474610;
  char v7 = OUTLINED_FUNCTION_29_2(v6, 0x746E65746E69);
  if (v5)
  {
    char v7 = type metadata accessor for PhoneStartCallIntent(v7);
  }
  else
  {
    *(void *)(v6 + 56) = 0;
    *(void *)(v6 + 64) = 0;
  }
  OUTLINED_FUNCTION_142_1(v7);
  uint64_t v8 = OUTLINED_FUNCTION_215((uint64_t)"redactedContacts");
  if (v0)
  {
    uint64_t v8 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v6 + 104) = 0;
    *(void *)(v6 + 112) = 0;
  }
  uint64_t v9 = OUTLINED_FUNCTION_91_6(v8);
  if (v5)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v6 + 152) = 0;
    *(void *)(v6 + 160) = 0;
  }
  OUTLINED_FUNCTION_84_7(v9);
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_117_2(v11);
  if (v12)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    *(void *)(v6 + 216) = v3;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_76_6();
  OUTLINED_FUNCTION_93_5();
  OUTLINED_FUNCTION_172_0(v14);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_9_0();
  v1[9] = v15;
  __n128 *v15 = v1;
  v15[1] = StartCallCATsSimple.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  uint64_t v16 = OUTLINED_FUNCTION_11_6(v4 + 15);
  return v18(v16);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall StartCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  v3._object = v1;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of StartCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v2 >= 0xC) {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional)12;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional)v2;
  }
}

void StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 5:
    case 6:
    case 11:
      OUTLINED_FUNCTION_24_10();
      break;
    case 7:
      OUTLINED_FUNCTION_99_4(0x6567u);
      break;
    case 8:
      OUTLINED_FUNCTION_138_2(0x7267u);
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentHandledResponseDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t StartCallCATsSimple.intentHandledResponseAsLabels(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_121_2(v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  *(void *)(v0 + 56) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v12)(void);
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v17)(void);
  uint64_t v18;

  OUTLINED_FUNCTION_48();
  uint64_t v4 = v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v5 = swift_allocObject();
  v1[8] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_474610;
  char v6 = OUTLINED_FUNCTION_29_2(v5, 0x746E65746E69);
  if (v4)
  {
    char v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }
  else
  {
    *(void *)(v5 + 56) = 0;
    *(void *)(v5 + 64) = 0;
  }
  OUTLINED_FUNCTION_142_1(v6);
  char v7 = OUTLINED_FUNCTION_215((uint64_t)"redactedContacts");
  if (v0)
  {
    char v7 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v5 + 104) = 0;
    *(void *)(v5 + 112) = 0;
  }
  uint64_t v8 = OUTLINED_FUNCTION_91_6(v7);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v5 + 152) = 0;
    *(void *)(v5 + 160) = 0;
  }
  OUTLINED_FUNCTION_84_7(v8);
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v9);
  uint64_t v10 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_117_2(v10);
  if (v11)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    *(void *)(v5 + 216) = v3;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v12();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_76_6();
  OUTLINED_FUNCTION_93_5();
  OUTLINED_FUNCTION_172_0(v13);
  uint64_t v14 = (void *)OUTLINED_FUNCTION_9_0();
  v1[9] = v14;
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v14 = v15;
  v14[1] = StartCallCATsSimple.intentHandledResponseAsLabels(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  OUTLINED_FUNCTION_24_10();
  return v17();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)(uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a4;
  *(unsigned char *)(v6 + 65) = a3;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_104();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_20_3(v15);
  OUTLINED_FUNCTION_106(v16, (__n128)xmmword_46DE40);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v18 = v14;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_94_6(v17, v18);
  v12[11] = 0x80000000004966E0;
  OUTLINED_FUNCTION_103_2((uint64_t)&type metadata for Bool);
  uint64_t v20 = OUTLINED_FUNCTION_120_0(v19);
  if (v10)
  {
    uint64_t v20 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v12[31] = 0;
    v12[32] = 0;
  }
  v12[30] = v10;
  v12[33] = v20;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v21 = swift_task_alloc();
  uint64_t v22 = (void *)OUTLINED_FUNCTION_29_6(v21);
  void *v22 = v23;
  v22[1] = StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_26_2(v13 + 22);
  OUTLINED_FUNCTION_26_8();
  return v27(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseEmergencyDialogIds_optional __swiftcall StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseEmergencyDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

void StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_24_10();
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseEmergencyDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseEmergencyDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergencyAsLabels(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)(uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a4;
  *(unsigned char *)(v6 + 65) = a3;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.intentHandledResponseEmergencyAsLabels(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergencyAsLabels(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void **)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_104();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_20_3(v14);
  OUTLINED_FUNCTION_106(v15, (__n128)xmmword_46DE40);
  if (v13)
  {
    uint64_t v16 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v17 = (uint64_t)v13;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_94_6(v16, v17);
  v12[11] = 0x80000000004966E0;
  OUTLINED_FUNCTION_103_2((uint64_t)&type metadata for Bool);
  uint64_t v19 = OUTLINED_FUNCTION_120_0(v18);
  if (v10)
  {
    uint64_t v19 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v12[31] = 0;
    v12[32] = 0;
  }
  v12[30] = v10;
  v12[33] = v19;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  OUTLINED_FUNCTION_31_6(v20);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v13 = v21;
  v13[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v27(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.intentHandledResponseWithFaceTimeLink()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(47);
  return v4(v3);
}

BOOL StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds(void *a1@<X8>)
{
}

uint64_t StartCallCATsSimple.intentHandledResponseWithFaceTimeLinkAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(47);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.internalConversionError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.internalConversionError(device:));
}

uint64_t StartCallCATsSimple.internalConversionError(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(33);
  return v11(v10);
}

BOOL StartCallCATsSimple.InternalConversionErrorDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.InternalConversionErrorDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.InternalConversionErrorDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.InternalConversionErrorDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.internalConversionErrorAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.internalConversionErrorAsLabels(device:));
}

uint64_t StartCallCATsSimple.internalConversionErrorAsLabels(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(33);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.joinFaceTimeMessage()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(29);
  return v4(v3);
}

BOOL StartCallCATsSimple.JoinFaceTimeMessageDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.JoinFaceTimeMessageDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.JoinFaceTimeMessageDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.joinFaceTimeMessageAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(29);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.promptForCallCapability()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(33);
  return v4(v3);
}

BOOL StartCallCATsSimple.PromptForCallCapabilityDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForCallCapabilityDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.PromptForCallCapabilityDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.promptForCallCapabilityAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(33);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_110_3(v1, v2, v3, v4, v5, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v2 = *(void *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_104();
  char v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  char v5 = OUTLINED_FUNCTION_4_41(v4, (__n128)xmmword_46DE40);
  OUTLINED_FUNCTION_39_0((uint64_t)v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v9();
  }
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_108_1((uint64_t)&type metadata for Bool);
  if (v10)
  {
    v1[19] = 0;
    v1[20] = 0;
  }
  OUTLINED_FUNCTION_68_4();
  v1[27] = v11;
  v1[28] = 0xD000000000000015;
  OUTLINED_FUNCTION_170(v11);
  uint64_t v12 = OUTLINED_FUNCTION_9_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_65_5(v12);
  *uint64_t v13 = v14;
  v13[1] = StartCallCATsSimple.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_20_2();
  return v18(v15, v16, v17, v18, v19, v20, v21, v22);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsDialogIds_optional __swiftcall StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsDialogIds_optional)StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.PromptForContactsDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.PromptForContactsDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForContactsDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.promptForContactsAsLabels(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_110_3(v1, v2, v3, v4, v5, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(void);
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v4 = OUTLINED_FUNCTION_104();
  char v5 = (__n128 *)OUTLINED_FUNCTION_57_0(v4);
  char v6 = OUTLINED_FUNCTION_4_41(v5, (__n128)xmmword_46DE40);
  OUTLINED_FUNCTION_39_0((uint64_t)v6, v7, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v8);
  if (v9)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v10();
  }
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_108_1((uint64_t)&type metadata for Bool);
  if (v11)
  {
    v2[19] = 0;
    v2[20] = 0;
  }
  OUTLINED_FUNCTION_68_4();
  v2[27] = v12;
  v2[28] = 0xD000000000000015;
  OUTLINED_FUNCTION_170(v12);
  uint64_t v13 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_47_4(v13);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v14;
  v0[1] = StartCallCATsSimple.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_20_2();
  return v20(v15, v16, v17, v18, v19, v20, v21, v22);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_146_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_36_2();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_57_0(v14);
  uint64_t v16 = OUTLINED_FUNCTION_19_4(v15, (__n128)xmmword_467720);
  uint64_t v17 = OUTLINED_FUNCTION_19_7((uint64_t)v16, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_39_0(v17, v18, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v19);
  if (v20)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v21();
  }
  uint64_t v22 = OUTLINED_FUNCTION_86_6();
  if (v10)
  {
    uint64_t v22 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    v12[13] = 0;
    v12[14] = 0;
  }
  v12[12] = v10;
  v12[15] = v22;
  OUTLINED_FUNCTION_8_1();
  uint64_t v23 = swift_task_alloc();
  uint64_t v24 = (void *)OUTLINED_FUNCTION_65_5(v23);
  *uint64_t v24 = v25;
  v24[1] = StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:);
  OUTLINED_FUNCTION_26_2(v13 + 13);
  OUTLINED_FUNCTION_26_8();
  return v29(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsKnownLabelDialogIds_optional __swiftcall StartCallCATsSimple.PromptForContactsKnownLabelDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForContactsKnownLabelDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsKnownLabelDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsKnownLabelDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsKnownLabelDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.PromptForContactsKnownLabelDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabelAsLabels(requestedHandleLabelEnum:requestedHandle:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabelAsLabels(requestedHandleLabelEnum:requestedHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_146_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_36_2();
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_57_0(v13);
  uint64_t v15 = OUTLINED_FUNCTION_19_4(v14, (__n128)xmmword_467720);
  uint64_t v16 = OUTLINED_FUNCTION_19_7((uint64_t)v15, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_39_0(v16, v17, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v18);
  if (v19)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v20();
  }
  uint64_t v21 = OUTLINED_FUNCTION_86_6();
  if (v10)
  {
    uint64_t v21 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    v12[13] = 0;
    v12[14] = 0;
  }
  v12[12] = v10;
  v12[15] = v21;
  OUTLINED_FUNCTION_8_1();
  uint64_t v22 = swift_task_alloc();
  OUTLINED_FUNCTION_47_4(v22);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v10 = v23;
  v10[1] = StartCallCATsSimple.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v29(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.promptForDestinationType()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(34);
  return v4(v3);
}

BOOL StartCallCATsSimple.PromptForDestinationTypeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForDestinationTypeDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.PromptForDestinationTypeDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.promptForDestinationTypeAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(34);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.promptForPreferredCallProvider()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(40);
  return v4(v3);
}

BOOL StartCallCATsSimple.PromptForPreferredCallProviderDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForPreferredCallProviderDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.PromptForPreferredCallProviderDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.promptForPreferredCallProviderAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(40);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.relationship(relationship:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_124_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_36_1(22);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional __swiftcall StartCallCATsSimple.RelationshipDialogIds.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  _findStringSwitchCaseWithCache(cases:string:cache:)();
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 0x59) {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional)89;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional)v1;
  }
}

unint64_t StartCallCATsSimple.RelationshipDialogIds.rawValue.getter(char a1)
{
  unint64_t result = 0x31676F6C616964;
  switch(a1)
  {
    case 1:
    case 12:
    case 23:
    case 34:
    case 45:
    case 56:
    case 67:
    case 78:
    case 88:
      unint64_t result = 0x2331686374697773;
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
      unint64_t result = OUTLINED_FUNCTION_7_1();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.RelationshipDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.RelationshipDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.RelationshipDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.RelationshipDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.RelationshipDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.RelationshipDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.RelationshipDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.RelationshipDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.relationshipAsLabels(relationship:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_124_1(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  uint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(22);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapability()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.unsupportedCallCapability();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(35);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedCallCapabilityDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedCallCapabilityDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds(void *a1@<X8>)
{
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(35);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityCameraNotAccessible(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmApp(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(54);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

BOOL StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityCameraNotAccessibleAsLabels(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  uint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(54);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  Swift::OpaquePointer v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(58);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

BOOL StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityMicrophoneNotAccessibleAsLabels(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  uint64_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(58);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityVideoCallUnsupported()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(55);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityVideoCallUnsupportedAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(55);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsForeignEmergencyDisambiguation()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(59);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsForeignEmergencyDisambiguationAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(59);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandle(contacts:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedContactsInvalidHandle(contacts:));
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandle(contacts:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x73746361746E6F63);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  unint64_t v10 = OUTLINED_FUNCTION_73_0(42);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsInvalidHandleDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsInvalidHandleDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000017;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsInvalidHandleDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsInvalidHandleDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandleAsLabels(contacts:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedContactsInvalidHandleAsLabels(contacts:));
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandleAsLabels(contacts:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  unint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x73746361746E6F63);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds();
  OUTLINED_FUNCTION_25_1();
  *unint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(42);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsMultipleContactsUnsupported()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(56);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsMultipleContactsUnsupportedAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(56);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoCallHistoryForRedial()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(51);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoCallHistoryForRedialAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(51);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void *)(v10 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_24_3();
  uint64_t v15 = OUTLINED_FUNCTION_111_2(v14);
  *(_OWORD *)(v15 + 16) = xmmword_46A250;
  uint64_t v16 = OUTLINED_FUNCTION_17_22(v15, 0x746361746E6F63);
  if (v13)
  {
    uint64_t v16 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v12 + 56) = 0;
    *(void *)(v12 + 64) = 0;
  }
  OUTLINED_FUNCTION_79_4(v16);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v17);
  uint64_t v18 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v18);
  if (v19)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_70();
    v20();
    swift_retain();
  }
  OUTLINED_FUNCTION_88_5();
  *(void *)(v12 + 168) = &type metadata for Bool;
  *(unsigned char *)(v12 + 144) = v21;
  uint64_t v22 = OUTLINED_FUNCTION_3_0();
  uint64_t v23 = (void *)OUTLINED_FUNCTION_65_5(v22);
  *uint64_t v23 = v24;
  v23[1] = StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_26_8();
  return v28(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoContactFoundDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoContactFoundDialogIds_optional)StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
}

void StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 4:
    case 5:
      OUTLINED_FUNCTION_24_10();
      break;
    case 2:
    case 3:
      OUTLINED_FUNCTION_7_1();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoContactFoundDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoContactFoundDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundAsLabels(contact:appName:isFirstPartyApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundAsLabels(contact:appName:isFirstPartyApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_24_3();
  uint64_t v16 = OUTLINED_FUNCTION_111_2(v15);
  *(_OWORD *)(v16 + 16) = xmmword_46A250;
  uint64_t v17 = OUTLINED_FUNCTION_17_22(v16, 0x746361746E6F63);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v13 + 56) = 0;
    *(void *)(v13 + 64) = 0;
  }
  OUTLINED_FUNCTION_79_4(v17);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v18);
  uint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v19);
  if (v20)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_70();
    v21();
    swift_retain();
  }
  OUTLINED_FUNCTION_88_5();
  *(void *)(v13 + 168) = &type metadata for Bool;
  *(unsigned char *)(v13 + 144) = v22;
  uint64_t v23 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_47_4(v23);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v10 = v24;
  v10[1] = StartCallCATsSimple.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_26_8();
  return v30(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundUserUnknown()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(54);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundUserUnknownAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(54);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[2] = v5;
  v1[3] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v15 = v12[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = OUTLINED_FUNCTION_104();
  v12[10] = v16;
  *(_OWORD *)(v16 + 16) = xmmword_46DE40;
  uint64_t v17 = OUTLINED_FUNCTION_29_2(v16, 0x746E65746E69);
  if (v15)
  {
    uint64_t v17 = type metadata accessor for PhoneStartCallIntent(v17);
  }
  else
  {
    *(void *)(v16 + 56) = 0;
    *(void *)(v16 + 64) = 0;
  }
  OUTLINED_FUNCTION_98_4(v17);
  *(void *)(v16 + 88) = 0x800000000048C170;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v18);
  uint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_125_2(v19);
  if (v20)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v16 + 120) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v21();
    swift_retain();
  }
  uint64_t v22 = v12[4];
  uint64_t v23 = OUTLINED_FUNCTION_213_0((uint64_t)"unsupportedPerson");
  if (v22)
  {
    uint64_t v23 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v16 + 152) = 0;
    *(void *)(v16 + 160) = 0;
  }
  OUTLINED_FUNCTION_113_1(v23);
  *(void *)(v16 + 184) = 0x8000000000493B10;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v24);
  OUTLINED_FUNCTION_154_2();
  if (v20)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v16 + 216) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v25();
    swift_retain();
  }
  uint64_t v26 = v12[6];
  uint64_t v27 = OUTLINED_FUNCTION_211((uint64_t)"unsupportedHandle");
  if (v26)
  {
    uint64_t v27 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    *(void *)(v16 + 248) = 0;
    *(void *)(v16 + 256) = 0;
  }
  *(void *)(v16 + 240) = v26;
  *(void *)(v16 + 264) = v27;
  OUTLINED_FUNCTION_27_19();
  uint64_t v28 = (void *)swift_task_alloc();
  v12[11] = v28;
  void *v28 = v12;
  v28[1] = StartCallCATsSimple.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  OUTLINED_FUNCTION_159_0(v14 + 28);
  OUTLINED_FUNCTION_31_1();
  return v32(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoHandleForLabelDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoHandleForLabelDialogIds_optional)StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
}

unint64_t StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.rawValue.getter(char a1)
{
  unint64_t result = 0x6464416C69616D45;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F437974706D45;
      break;
    case 2:
      unint64_t result = OUTLINED_FUNCTION_99_4(0x6547u);
      break;
    case 3:
      unint64_t result = OUTLINED_FUNCTION_7_1();
      break;
    case 4:
      unint64_t result = 0x6D754E656E6F6850;
      break;
    case 5:
      unint64_t result = 0x6F43656C676E6953;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoHandleForLabelDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoHandleForLabelDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabelAsLabels(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[2] = v5;
  v1[3] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabelAsLabels(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = v12[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_104();
  v12[10] = v15;
  *(_OWORD *)(v15 + 16) = xmmword_46DE40;
  uint64_t v16 = OUTLINED_FUNCTION_29_2(v15, 0x746E65746E69);
  if (v14)
  {
    uint64_t v16 = type metadata accessor for PhoneStartCallIntent(v16);
  }
  else
  {
    *(void *)(v15 + 56) = 0;
    *(void *)(v15 + 64) = 0;
  }
  OUTLINED_FUNCTION_98_4(v16);
  *(void *)(v15 + 88) = 0x800000000048C170;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v17);
  uint64_t v18 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_125_2(v18);
  if (v19)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v15 + 120) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v20();
    swift_retain();
  }
  uint64_t v21 = v12[4];
  uint64_t v22 = OUTLINED_FUNCTION_213_0((uint64_t)"unsupportedPerson");
  if (v21)
  {
    uint64_t v22 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v15 + 152) = 0;
    *(void *)(v15 + 160) = 0;
  }
  OUTLINED_FUNCTION_113_1(v22);
  *(void *)(v15 + 184) = 0x8000000000493B10;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v23);
  OUTLINED_FUNCTION_154_2();
  if (v19)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v15 + 216) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v24();
    swift_retain();
  }
  uint64_t v25 = v12[6];
  uint64_t v26 = OUTLINED_FUNCTION_211((uint64_t)"unsupportedHandle");
  if (v25)
  {
    uint64_t v26 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    *(void *)(v15 + 248) = 0;
    *(void *)(v15 + 256) = 0;
  }
  *(void *)(v15 + 240) = v25;
  *(void *)(v15 + 264) = v26;
  OUTLINED_FUNCTION_27_19();
  uint64_t v27 = (void *)swift_task_alloc();
  v12[11] = v27;
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v27 = v28;
  v27[1] = StartCallCATsSimple.unsupportedContactsNoHandleForLabelAsLabels(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_31_1();
  return v34(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoUsableHandleForRedial()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(52);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoUsableHandleForRedialAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(52);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsUnsupportedMmiUssd()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(47);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsUnsupportedMmiUssdAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(47);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDestinationType()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedDestinationTypeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedDestinationTypeDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedDestinationTypeDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDestinationTypeAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(36);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLink(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedDeviceFaceTimeLink(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLink(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(39);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceFaceTimeLinkDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceFaceTimeLinkDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceFaceTimeLinkDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceFaceTimeLinkDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLinkAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedDeviceFaceTimeLinkAsLabels(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLinkAsLabels(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(39);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTime(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedDeviceGroupFaceTime(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTime(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(40);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceGroupFaceTimeDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceGroupFaceTimeDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceGroupFaceTimeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceGroupFaceTimeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTimeAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedDeviceGroupFaceTimeAsLabels(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTimeAsLabels(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(40);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProvider(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProvider(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProvider(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  unint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *unint64_t v10 = v11;
  v10[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_36_1(42);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.init(rawValue:)(Swift::String rawValue)
{
  OUTLINED_FUNCTION_4_5();
  v3._object = v1;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v2 >= 5) {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional)5;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional)v2;
  }
}

uint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.rawValue.getter(char a1)
{
  uint64_t result = 0x656D695465636146;
  switch(a1)
  {
    case 2:
      uint64_t result = OUTLINED_FUNCTION_138_2(0x7247u);
      break;
    case 3:
      uint64_t result = 0x6C616D726F4ELL;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAsLabels(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderAsLabels(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAsLabels(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = (uint64_t)v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v10;
  v3[1] = StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(42);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(62);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6423317473726966;
  }
  else {
    return 0x31676F6C616964;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequiredAsLabels(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequiredAsLabels(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequiredAsLabels(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = (uint64_t)v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v10;
  v3[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(62);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessible()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(76);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(76);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderProviderDisabledInSettings()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(68);
  return v4(v3);
}

BOOL StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderProviderDisabledInSettingsAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(68);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestricted(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(60);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderSettingsRestrictedDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderSettingsRestrictedDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6544687469575446;
  }
  if (a1 == 1) {
    return 0x756F687469575446;
  }
  return 0x636972656E6547;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderSettingsRestrictedDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderSettingsRestrictedDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestrictedAsLabels(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestrictedAsLabels(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestrictedAsLabels(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_20_3(v4);
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = (uint64_t)v3;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v8 = OUTLINED_FUNCTION_22_24(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v10;
  v3[1] = StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(60);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467720);
  if (v3)
  {
    type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v1[7] = 0;
    v1[8] = 0;
  }
  char v6 = *(unsigned char *)(v0 + 56);
  v1[6] = v3;
  v1[11] = 0x8000000000496740;
  OUTLINED_FUNCTION_195_0(v6);
  OUTLINED_FUNCTION_144(v7);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_32_0(v2 | 0x2A);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds_optional)StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(Swift::String a1, Swift::OpaquePointer a2)
{
  OUTLINED_FUNCTION_35_6(a1, a2);
  OUTLINED_FUNCTION_15_0();
  if (v2 >= 6) {
    return 6;
  }
  else {
    return v2;
  }
}

unint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.rawValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      OUTLINED_FUNCTION_24_10();
      unint64_t result = OUTLINED_FUNCTION_10_2(18);
      break;
    case 2:
      unint64_t result = OUTLINED_FUNCTION_99_4(0x6547u);
      break;
    case 3:
      unint64_t result = 6512973;
      break;
    case 4:
      unint64_t result = 0x6863746157;
      break;
    case 5:
      unint64_t result = 0x6976654468746957;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupportedAsLabels(device:isFaceTimeOnlyDevice:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupportedAsLabels(device:isFaceTimeOnlyDevice:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupportedAsLabels(device:isFaceTimeOnlyDevice:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_19_1(v3);
  OUTLINED_FUNCTION_24_7(v4, (__n128)xmmword_467720);
  if (v2)
  {
    type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v1[7] = 0;
    v1[8] = 0;
  }
  char v5 = *(unsigned char *)(v0 + 56);
  v1[6] = v2;
  v1[11] = 0x8000000000496740;
  OUTLINED_FUNCTION_195_0(v5);
  OUTLINED_FUNCTION_144(v6);
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v2 = v8;
  v2[1] = StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v14(v9, v10, v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds);
  }
  return result;
}

uint64_t StartCallCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t StartCallCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata completion function for StartCallCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for StartCallCATsSimple()
{
  return type metadata accessor for StartCallCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 67 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 67) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xBD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xBC)
  {
    unsigned int v6 = ((a2 - 189) >> 8) + 1;
    *unint64_t result = a2 + 67;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 67;
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.Properties()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmAppDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.ConfirmContactsDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.ConfirmContactsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateAppsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsPartialListDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.EmergencyCountdownDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds()
{
}

uint64_t getEnumTagSinglePayload for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_220(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_220((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_220((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_220((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_220(v8);
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_219((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_216((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2612F4);
      case 4:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_217((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = OUTLINED_FUNCTION_218(result, a2 + 3);
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.FinalLowConfidenceResponseDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.GenericErrorDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.HangUpTipDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.IntentHandledResponseDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.IntentHandledResponseDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.InternalConversionErrorDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.JoinFaceTimeMessageDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForCallCapabilityDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForContactsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForContactsKnownLabelDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForPreferredCallProviderDialogIds()
{
}

uint64_t getEnumTagSinglePayload for StartCallCATsSimple.RelationshipDialogIds(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xA8)
  {
    if (a2 + 88 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 88) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 89;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x59;
  int v5 = v6 - 89;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.RelationshipDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 88 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 88) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xA8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xA7)
  {
    unsigned int v6 = ((a2 - 168) >> 8) + 1;
    *unint64_t result = a2 + 88;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26168CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 88;
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.RelationshipDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.ConfirmAppDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_219((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_216((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261830);
      case 4:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_217((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = OUTLINED_FUNCTION_218(result, a2 + 1);
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x261A18);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_219((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_216((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261B08);
      case 4:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_217((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = OUTLINED_FUNCTION_218(result, a2 + 2);
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
}

uint64_t getEnumTagSinglePayload for StartCallCATsSimple.PromptForContactsDialogIds(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_220(-1);
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_220((*a1 | (v4 << 8)) - 6);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_220((*a1 | (v4 << 8)) - 6);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_220((*a1 | (v4 << 8)) - 6);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_220(v8);
}

unsigned char *storeEnumTagSinglePayload for StartCallCATsSimple.PromptForContactsDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_219((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_216((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261C7CLL);
      case 4:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_217((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = OUTLINED_FUNCTION_218(result, a2 + 5);
        break;
    }
  }
  return result;
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
}

void OUTLINED_FUNCTION_68_4()
{
  char v4 = *(unsigned char *)(v2 + 74);
  *(void *)(v3 + 144) = v1;
  *(void *)(v3 + 168) = v0;
  strcpy((char *)(v3 + 176), "startingOver");
  *(unsigned char *)(v3 + 189) = 0;
  *(_WORD *)(v3 + 190) = -5120;
  *(unsigned char *)(v3 + 192) = v4;
}

uint64_t OUTLINED_FUNCTION_72_9@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x436465776F6C6C61;
  v2[11] = 0xEF73746361746E6FLL;
  return result;
}

void OUTLINED_FUNCTION_76_6()
{
  *(void *)(v0 + 224) = 0x5074737269467369;
  *(void *)(v0 + 232) = 0xEF70704179747261;
}

uint64_t OUTLINED_FUNCTION_82_3(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0x656772656D457369;
  v2[11] = 0xEB0000000079636ELL;
  return result;
}

uint64_t OUTLINED_FUNCTION_84_7(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0x656D614E707061;
  v2[23] = 0xE700000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_86_6()
{
  *(void *)(v0 + 80) = 0x6574736575716572;
  *(void *)(v0 + 88) = 0xEF656C646E614864;
  return 0;
}

void OUTLINED_FUNCTION_88_5()
{
  *(void *)(v0 + 128) = 0x5074737269467369;
  *(void *)(v0 + 136) = 0xEF70704179747261;
}

uint64_t OUTLINED_FUNCTION_91_6(uint64_t a1)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x656369766564;
  v2[17] = 0xE600000000000000;
  return 0;
}

void OUTLINED_FUNCTION_93_6()
{
  *(void *)(v0 + 80) = 0x6954656361467369;
  *(void *)(v0 + 88) = 0xEA0000000000656DLL;
}

uint64_t OUTLINED_FUNCTION_94_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0xD000000000000014;
  return result;
}

uint64_t OUTLINED_FUNCTION_98_4(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0xD000000000000015;
  return result;
}

uint64_t OUTLINED_FUNCTION_99_4(unsigned __int16 a1)
{
  return a1 | 0x636972656E0000;
}

uint64_t OUTLINED_FUNCTION_110_3(uint64_t result, char a2, uint64_t a3, char a4, char a5, char a6)
{
  *(void *)(v7 + 24) = a3;
  *(void *)(v7 + 32) = v6;
  *(unsigned char *)(v7 + 75) = a6;
  *(unsigned char *)(v7 + 74) = a5;
  *(unsigned char *)(v7 + 73) = a4;
  *(unsigned char *)(v7 + 72) = a2;
  *(void *)(v7 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_111_2(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_113_1(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = v3 + 11;
  return result;
}

uint64_t OUTLINED_FUNCTION_117_2(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_121_2(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 90) = a7;
  *(unsigned char *)(v8 + 89) = a6;
  *(unsigned char *)(v8 + 88) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_122_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[12] = a2;
  v2[15] = result;
  v2[16] = 0xD000000000000012;
  return result;
}

uint64_t OUTLINED_FUNCTION_123_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0xD000000000000018;
  return result;
}

uint64_t OUTLINED_FUNCTION_125_2(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_136_2(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_138_2(unsigned __int16 a1)
{
  return a1 | 0x63614670756F0000;
}

uint64_t OUTLINED_FUNCTION_145_2(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = v6;
  *(unsigned char *)(v7 + 82) = a5;
  *(unsigned char *)(v7 + 81) = a4;
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  *(unsigned char *)(v7 + 80) = result;
  return result;
}

void OUTLINED_FUNCTION_150_2(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = 0xE700000000000000;
}

uint64_t OUTLINED_FUNCTION_154_2()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIIdentifier.payloadId.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = 46;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = a3;
  v7._object = a4;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
}

uint64_t static DICodable.from(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    a1 = Dictionary.init(dictionaryLiteral:)();
  }
  uint64_t v15 = a1;
  swift_bridgeObjectRetain();
  static DICodable.adaptUserDataBeforeDecoder(_:)((uint64_t)&v15, a2, a3);
  uint64_t v5 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = 0;
  id v7 = [v5 dataWithPropertyList:isa format:200 options:0 error:&v14];

  id v8 = v14;
  if (v7)
  {
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    swift_release();
    return outlined consume of Data._Representation(v9, v11);
  }
  else
  {
    uint64_t v13 = v8;
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

PhoneCallFlowDelegatePlugin::DIIdentifier __swiftcall DIIdentifier.init(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  v14[0] = 46;
  v14[1] = 0xE100000000000000;
  v13[2] = v14;
  specialized BidirectionalCollection.lastIndex(where:)(partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:), (uint64_t)v13, a1._countAndFlagsBits, (unint64_t)a1._object);
  if (v3)
  {
    unint64_t v6 = 0x80000000004912B0;
    uint64_t v4 = 0xD000000000000025;
  }
  else
  {
    swift_bridgeObjectRetain();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v4 = static String._fromSubstring(_:)();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    unint64_t v7 = String.index(after:)();
    specialized Collection.subscript.getter(v7, countAndFlagsBits, (unint64_t)object);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
    object = v8;
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4;
  unint64_t v10 = (void *)v6;
  uint64_t v11 = countAndFlagsBits;
  uint64_t v12 = object;
  result.id._object = v12;
  result.id._uint64_t countAndFlagsBits = v11;
  result.namespace._object = v10;
  result.namespace._uint64_t countAndFlagsBits = v9;
  return result;
}

unint64_t specialized Collection.subscript.getter(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

uint64_t DICodable.userData()(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  uint64_t v5 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v9 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    v17[0] = 0;
    id v11 = [v9 propertyListWithData:isa options:0 format:0 error:v17];

    if (v11)
    {
      id v12 = v17[0];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
      if (swift_dynamicCast()) {
        uint64_t v13 = v15;
      }
      else {
        uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
      }
      uint64_t v16 = v13;
      static DICodable.adaptUserDataAfterEncoder(_:)((uint64_t)&v16, a1, a2);
      outlined consume of Data._Representation(v5, v7);
      return v16;
    }
    else
    {
      id v14 = v17[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      return outlined consume of Data._Representation(v5, v7);
    }
  }
  return result;
}

uint64_t static DICodable.adaptUserDataAfterEncoder(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 56;
    do
    {
      unint64_t v7 = *(void (**)(uint64_t))(v6 - 24);
      v6 += 32;
      swift_retain();
      swift_retain();
      v7(a1);
      swift_release();
      swift_release();
      --v5;
    }
    while (v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t DICodable.toDirectInvocation()(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 24))();
  uint64_t v6 = v5;
  id v8 = v7;
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v6;
  v10._object = v8;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  DICodable.userData()(a1, a2);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return Parse.DirectInvocation.init(identifier:userData:)();
  }
}

objc_class *DICodable.toDirectInvocationPayload()(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SKIDirectInvocationPayload();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v7 = v6;
  Swift::String v9 = v8;
  uint64_t v17 = v5;
  uint64_t v18 = v10;
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = v7;
  v12._object = v9;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v13 = (objc_class *)SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v14 = DICodable.userData()(a1, a2);
  Class isa = v13;
  if (!v2)
  {
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v14);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    -[objc_class setUserData:](v13, "setUserData:", isa, v17, v18);
  }

  return v13;
}

id DICodable.toStartLocalRequest(deviceState:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = (void *)DeviceState.asInvocationContext.getter();
  id v8 = DICodable.toDirectInvocationPayload()(a2, a3);
  if (!v3)
  {
    Swift::String v9 = v8;
    uint64_t v10 = self;
    id v11 = [v10 runSiriKitExecutorCommandWithContext:v7 payload:v9];

    id v4 = [v10 wrapCommandInStartLocalRequest:v11];
    uint64_t v7 = v11;
  }

  return v4;
}

uint64_t static DICodable.adaptUserDataBeforeDecoder(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 56;
    do
    {
      uint64_t v7 = *(void (**)(uint64_t))(v6 - 8);
      v6 += 32;
      swift_retain();
      swift_retain();
      v7(a1);
      swift_release();
      swift_release();
      --v5;
    }
    while (v5);
  }

  return swift_bridgeObjectRelease();
}

unint64_t specialized BidirectionalCollection.lastIndex(where:)(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  while (1)
  {
    unint64_t v7 = String.index(before:)();
    v12[0] = String.subscript.getter();
    v12[1] = v8;
    char v9 = a1(v12);
    if (v4) {
      break;
    }
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10) {
      return v7;
    }
    if (v7 < 0x4000) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

ValueMetadata *type metadata accessor for DIIdentifier()
{
  return &type metadata for DIIdentifier;
}

void *static StartVideoCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = (void *)OUTLINED_FUNCTION_0_12(a1, a2, a3, a4, a5, a6);

  return specialized static StartVideoCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(v6, v7, v8, v9, v10, v11, v12, v13);
}

void *specialized static StartVideoCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = a7;
  v96 = (char *)a2;
  uint64_t v13 = *(void *)(a7 - 8);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v17);
  OUTLINED_FUNCTION_1_5();
  if (PhoneCallNLIntent.hasAnyConfirmation()())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    id v19 = a4;
    char v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v94 = v13;
      uint64_t v22 = (_DWORD *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v95 = v9;
      v99[0] = v23;
      _DWORD *v22 = 136315138;
      v96 = v15;
      uint64_t v102 = (uint64_t)a4;
      id v24 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent?);
      uint64_t v25 = String.init<A>(describing:)();
      uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v99);
      uint64_t v15 = v96;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v13 = v94;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3(&dword_0, v27, v28, "#StartVideoCallIntentConversion is confirmation, returning previousIntent: %s.");
      swift_arrayDestroy();
      uint64_t v9 = v95;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    id v69 = v19;
  }
  else
  {
    uint64_t v92 = a8;
    uint64_t v94 = v13;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    uint64_t v93 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_0, v30, v31, "#StartVideoCallIntentConversion called with NLv4IntentOnly", v32, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v33 = a1[3];
    uint64_t v34 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v33);
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 128))(v33, v34);
    OUTLINED_FUNCTION_1_5();
    HIDWORD(v91) = PhoneCallNLIntent.isEmergencyContactCall()();
    OUTLINED_FUNCTION_1_5();
    uint64_t v36 = PhoneCallNLIntent.getPersons()();
    id v37 = objc_allocWithZone((Class)INStartVideoCallIntent);
    id v38 = @nonobjc INStartVideoCallIntent.init(contacts:)((uint64_t)v36);
    uint64_t v39 = (uint64_t)v96;
    id v44 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)((int)v38, (int)a3, (int)v96, (int)a4, v40, v41, v42, v43, v84, (uint64_t)v85, (uint64_t)v86, v87, v88, v89, (uint64_t)v90, v91, v92, v93, v94,
            v95,
            (uint64_t)v96,
            v97,
            v98,
            v99[0]);

    uint64_t v102 = (uint64_t)v44;
    outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v99);
    id v45 = v44;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v46 = v45;
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    int v49 = v48;
    BOOL v50 = os_log_type_enabled(v47, v48);
    uint64_t v95 = v9;
    if (v50)
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v52 = (void *)swift_slowAlloc();
      v86 = v52;
      uint64_t v88 = swift_slowAlloc();
      uint64_t v97 = (uint64_t)v46;
      uint64_t v98 = v88;
      *(_DWORD *)uint64_t v51 = 138413058;
      HIDWORD(v87) = v49;
      os_log_t v85 = v47;
      id v53 = v46;
      v90 = a3;
      id v54 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v52 = v46;

      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v55 = dispatch thunk of App.debugDescription.getter();
      uint64_t v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, &v98);
      OUTLINED_FUNCTION_4_61(v57);
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 22) = 2080;
      uint64_t v89 = v35;
      uint64_t v58 = v15;
      uint64_t v59 = v100;
      uint64_t v60 = v101;
      __swift_project_boxed_opaque_existential_1(v99, v100);
      (*(void (**)(uint64_t, uint64_t))(v60 + 24))(v59, v60);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
      uint64_t v61 = Array.description.getter();
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      uint64_t v64 = v61;
      a3 = v90;
      uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v63, &v98);
      OUTLINED_FUNCTION_4_61(v65);
      uint64_t v15 = v58;
      uint64_t v35 = v89;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      *(_WORD *)(v51 + 32) = 2080;
      type metadata accessor for ContactQuery();
      uint64_t v66 = Array.debugDescription.getter();
      uint64_t v97 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, &v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v39 = (uint64_t)v96;
      swift_bridgeObjectRelease();
      os_log_t v68 = v85;
      _os_log_impl(&dword_0, v85, BYTE4(v87), "#StartVideoCallIntentConversion with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s", (uint8_t *)v51, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      uint64_t v9 = v95;
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      swift_bridgeObjectRelease_n();
    }
    id v70 = v46;
    specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v70, v35, BYTE4(v91) & 1, v39, a1, a3, (uint64_t)v15, v9, v92);

    swift_bridgeObjectRelease();
    uint64_t v71 = outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v70);
    uint64_t v72 = one-time initialization token for instance;
    id v73 = v70;
    if (v72 != -1) {
      swift_once();
    }
    uint64_t v74 = static EligibleAppFinder.instance;
    swift_retain();
    specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)(a3, v71, a1, 0, v74);
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v75 = v73;
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (_DWORD *)swift_slowAlloc();
      unint64_t v79 = (void *)swift_slowAlloc();
      *uint64_t v78 = 138412290;
      v99[0] = (uint64_t)v75;
      v80 = v75;
      uint64_t v9 = v95;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v79 = v46;

      OUTLINED_FUNCTION_3(&dword_0, v81, v82, "#StartVideoCallIntentConversion ends with %@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
      uint64_t v75 = v76;
    }
    else
    {
    }
    uint64_t v13 = v94;

    swift_beginAccess();
    a4 = (void *)v102;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v9);
  return a4;
}

ValueMetadata *type metadata accessor for StartVideoCallIntentConversion()
{
  return &type metadata for StartVideoCallIntentConversion;
}

uint64_t OUTLINED_FUNCTION_4_61(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATs::Properties_optional __swiftcall AnnounceVoicemailCATs.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnnounceVoicemailCATs.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_AnnounceVoicemailCATs_Properties_readVoicemailAnnouncementHint;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_AnnounceVoicemailCATs_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t AnnounceVoicemailCATsSimple.Properties.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD00000000000002FLL;
  }
  else {
    return 0xD00000000000002BLL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceVoicemailCATs.Properties(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnnounceVoicemailCATs.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceVoicemailCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceVoicemailCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceVoicemailCATs.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATs::Properties_optional *a2@<X8>)
{
  result.value = AnnounceVoicemailCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceVoicemailCATs.Properties@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AnnounceVoicemailCATsSimple.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:completion:)(unint64_t a1, char a2, char a3, unint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_1_73(v8, (__n128)xmmword_46A250);
  if (a2)
  {
    uint64_t v9 = 0;
    a1 = 0;
    v8[3].n128_u64[1] = 0;
    v8[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v9 = &type metadata for Double;
  }
  v8[3].n128_u64[0] = a1;
  v8[4].n128_u64[1] = (unint64_t)v9;
  v8[5].n128_u64[0] = 0xD00000000000001FLL;
  OUTLINED_FUNCTION_13_32((uint64_t)"n19StartCallCATsSimple");
  v8[6].n128_u8[0] = a3 & 1;
  v8[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[8].n128_u64[0] = 0x69616D6563696F76;
  v8[8].n128_u64[1] = 0xE90000000000006CLL;
  if (a4)
  {
    uint64_t v10 = type metadata accessor for PhoneCallRecord(0);
    unint64_t v11 = a4;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v10 = 0;
    v8[9].n128_u64[1] = 0;
    v8[10].n128_u64[0] = 0;
  }
  v8[9].n128_u64[0] = v11;
  v8[10].n128_u64[1] = v10;
  swift_retain();
  OUTLINED_FUNCTION_15_32();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();

  return swift_bridgeObjectRelease();
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = v5;
  *(unsigned char *)(v6 + 73) = a4;
  *(unsigned char *)(v6 + 72) = a3;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:));
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:)()
{
  char v1 = *(unsigned char *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  Swift::String v2 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 48) = v2;
  OUTLINED_FUNCTION_1_73(v2, (__n128)xmmword_46A250);
  if (v1)
  {
    unint64_t v4 = 0;
    unint64_t v3 = 0;
    v2[3].n128_u64[1] = 0;
    v2[4].n128_u64[0] = 0;
  }
  else
  {
    unint64_t v3 = *(void *)(v0 + 24);
    unint64_t v4 = &type metadata for Double;
  }
  unint64_t v5 = *(void *)(v0 + 32);
  v2[3].n128_u64[0] = v3;
  v2[4].n128_u64[1] = (unint64_t)v4;
  v2[5].n128_u64[0] = 0xD00000000000001FLL;
  OUTLINED_FUNCTION_13_32((uint64_t)"n19StartCallCATsSimple");
  uint64_t v6 = OUTLINED_FUNCTION_3_71((uint64_t)&type metadata for Bool);
  if (v5)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    v2[9].n128_u64[1] = 0;
    v2[10].n128_u64[0] = 0;
  }
  v2[9].n128_u64[0] = v5;
  v2[10].n128_u64[1] = v6;
  OUTLINED_FUNCTION_19_2();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  *uint64_t v7 = v0;
  v7[1] = AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:);
  uint64_t v8 = *(void *)(v0 + 16);
  return v10(v8, 0xD00000000000002BLL, 0x8000000000490020, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  unint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  char v1;
  __n128 *v2;
  unint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  char v1 = *(unsigned char *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  Swift::String v2 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 40) = v2;
  OUTLINED_FUNCTION_1_73(v2, (__n128)xmmword_46A250);
  if (v1)
  {
    unint64_t v4 = 0;
    unint64_t v3 = 0;
    v2[3].n128_u64[1] = 0;
    v2[4].n128_u64[0] = 0;
  }
  else
  {
    unint64_t v3 = *(void *)(v0 + 16);
    unint64_t v4 = &type metadata for Double;
  }
  unint64_t v5 = *(void *)(v0 + 24);
  v2[3].n128_u64[0] = v3;
  v2[4].n128_u64[1] = (unint64_t)v4;
  v2[5].n128_u64[0] = 0xD00000000000001FLL;
  OUTLINED_FUNCTION_13_32((uint64_t)"n19StartCallCATsSimple");
  uint64_t v6 = OUTLINED_FUNCTION_3_71((uint64_t)&type metadata for Bool);
  if (v5)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    v2[9].n128_u64[1] = 0;
    v2[10].n128_u64[0] = 0;
  }
  v2[9].n128_u64[0] = v5;
  v2[10].n128_u64[1] = v6;
  OUTLINED_FUNCTION_19_2();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v7;
  *uint64_t v7 = v0;
  v7[1] = AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:);
  uint64_t v8 = OUTLINED_FUNCTION_11_6(0xD00000000000002BLL);
  return v10(v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  unint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:)(uint64_t a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a3;
  *(unsigned char *)(v5 + 64) = a2;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:));
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:)(unint64_t a1, char a2, char a3, unint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_1_73(v8, (__n128)xmmword_46A250);
  if (a2)
  {
    uint64_t v9 = 0;
    a1 = 0;
    v8[3].n128_u64[1] = 0;
    v8[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v9 = &type metadata for Double;
  }
  v8[3].n128_u64[0] = a1;
  v8[4].n128_u64[1] = (unint64_t)v9;
  v8[5].n128_u64[0] = 0xD00000000000001FLL;
  v8[5].n128_u64[1] = 0x80000000004977D0;
  v8[6].n128_u8[0] = a3 & 1;
  v8[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[8].n128_u64[0] = 0x69616D6563696F76;
  v8[8].n128_u64[1] = 0xE90000000000006CLL;
  if (a4)
  {
    uint64_t v10 = type metadata accessor for PhoneCallRecord(0);
    unint64_t v11 = a4;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v10 = 0;
    v8[9].n128_u64[1] = 0;
    v8[10].n128_u64[0] = 0;
  }
  v8[9].n128_u64[0] = v11;
  v8[10].n128_u64[1] = v10;
  swift_retain();
  OUTLINED_FUNCTION_88();

  return swift_bridgeObjectRelease();
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:completion:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_24_3();
  uint64_t v13 = (void *)v12;
  *(_OWORD *)(v12 + 16) = xmmword_46A250;
  *(void *)(v12 + 32) = 0xD000000000000011;
  *(void *)(v12 + 40) = 0x80000000004977F0;
  if (a2)
  {
    uint64_t v14 = 0;
    a1 = 0;
    *(void *)(v12 + 56) = 0;
    *(void *)(v12 + 64) = 0;
  }
  else
  {
    uint64_t v14 = &type metadata for Double;
  }
  *(void *)(v12 + 48) = a1;
  *(void *)(v12 + 72) = v14;
  *(void *)(v12 + 80) = 0xD000000000000011;
  OUTLINED_FUNCTION_13_32((uint64_t)"announcementCount");
  if (a4)
  {
    a3 = 0;
    v13[13] = 0;
    v13[14] = 0;
  }
  v13[12] = a3;
  OUTLINED_FUNCTION_18_25();
  v13[15] = v15;
  v13[16] = v16;
  v13[17] = 0xE900000000000074;
  if (a6)
  {
    uint64_t v17 = 0;
    a5 = 0;
    v13[19] = 0;
    v13[20] = 0;
  }
  else
  {
    uint64_t v17 = &type metadata for Double;
  }
  v13[21] = v17;
  v13[18] = a5;
  OUTLINED_FUNCTION_15_32();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();

  return swift_bridgeObjectRelease();
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 82) = a7;
  *(unsigned char *)(v8 + 81) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a4;
  *(unsigned char *)(v8 + 80) = a3;
  *(void *)(v8 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:));
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:)()
{
  OUTLINED_FUNCTION_16_1();
  char v1 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_24_3();
  unint64_t v3 = (void *)v2;
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46A250;
  *(void *)(v2 + 32) = 0xD000000000000011;
  *(void *)(v2 + 40) = 0x80000000004977F0;
  if (v1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = &type metadata for Double;
  }
  char v6 = *(unsigned char *)(v0 + 81);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 72) = v5;
  *(void *)(v2 + 80) = 0xD000000000000011;
  *(void *)(v2 + 88) = 0x8000000000497810;
  if (v6)
  {
    uint64_t v7 = 0;
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  else
  {
    uint64_t v7 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_4_62((uint64_t)v7);
  if (v8)
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    v3[19] = 0;
    v3[20] = 0;
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = &type metadata for Double;
  }
  v3[21] = v10;
  v3[18] = v9;
  unint64_t v11 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 64) = v11;
  *unint64_t v11 = v0;
  v11[1] = AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:);
  uint64_t v12 = *(void *)(v0 + 16);
  return v14(v12, 0xD00000000000002FLL, 0x8000000000490050, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *char v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  void *v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;

  OUTLINED_FUNCTION_16_1();
  char v1 = *(unsigned char *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_24_3();
  unint64_t v3 = (void *)v2;
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46A250;
  *(void *)(v2 + 32) = 0xD000000000000011;
  *(void *)(v2 + 40) = 0x80000000004977F0;
  if (v1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = &type metadata for Double;
  }
  char v6 = *(unsigned char *)(v0 + 73);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 72) = v5;
  *(void *)(v2 + 80) = 0xD000000000000011;
  *(void *)(v2 + 88) = 0x8000000000497810;
  if (v6)
  {
    uint64_t v7 = 0;
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  else
  {
    uint64_t v7 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_4_62((uint64_t)v7);
  if (v8)
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    v3[19] = 0;
    v3[20] = 0;
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v10 = &type metadata for Double;
  }
  v3[21] = v10;
  v3[18] = v9;
  unint64_t v11 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 56) = v11;
  *unint64_t v11 = v0;
  v11[1] = AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:);
  uint64_t v12 = OUTLINED_FUNCTION_11_6(0xD00000000000002FLL);
  return v14(v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *char v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

uint64_t AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 74) = a6;
  *(void *)(v7 + 32) = a5;
  *(void *)(v7 + 40) = v6;
  *(unsigned char *)(v7 + 73) = a4;
  *(unsigned char *)(v7 + 72) = a2;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a3;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnnounceVoicemailCATs.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:));
}

{
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_24_3();
  uint64_t v13 = (void *)v12;
  *(_OWORD *)(v12 + 16) = xmmword_46A250;
  *(void *)(v12 + 32) = 0xD000000000000011;
  *(void *)(v12 + 40) = 0x80000000004977F0;
  if (a2)
  {
    uint64_t v14 = 0;
    a1 = 0;
    *(void *)(v12 + 56) = 0;
    *(void *)(v12 + 64) = 0;
  }
  else
  {
    uint64_t v14 = &type metadata for Double;
  }
  *(void *)(v12 + 48) = a1;
  *(void *)(v12 + 72) = v14;
  *(void *)(v12 + 80) = 0xD000000000000011;
  *(void *)(v12 + 88) = 0x8000000000497810;
  if (a4)
  {
    a3 = 0;
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  *(void *)(v12 + 96) = a3;
  OUTLINED_FUNCTION_18_25();
  v13[15] = v15;
  v13[16] = v16;
  v13[17] = 0xE900000000000074;
  if (a6)
  {
    uint64_t v17 = 0;
    a5 = 0;
    v13[19] = 0;
    v13[20] = 0;
  }
  else
  {
    uint64_t v17 = &type metadata for Double;
  }
  v13[21] = v17;
  v13[18] = a5;
  OUTLINED_FUNCTION_88();

  return swift_bridgeObjectRelease();
}

uint64_t AnnounceVoicemailCATs.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return AnnounceVoicemailCATs.init(templateDir:options:globals:)(a1, a2);
}

uint64_t AnnounceVoicemailCATs.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CATOption();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8 - 8);
  outlined init with copy of URL?(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  outlined destroy of URL?(a1);
  return v10;
}

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailCATs.Properties and conformance AnnounceVoicemailCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailCATs.Properties and conformance AnnounceVoicemailCATs.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailCATs.Properties and conformance AnnounceVoicemailCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailCATs.Properties and conformance AnnounceVoicemailCATs.Properties);
  }
  return result;
}

uint64_t type metadata accessor for AnnounceVoicemailCATs()
{
  uint64_t result = type metadata singleton initialization cache for AnnounceVoicemailCATs;
  if (!type metadata singleton initialization cache for AnnounceVoicemailCATs) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for AnnounceVoicemailCATs()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for AnnounceVoicemailCATs()
{
  return type metadata accessor for AnnounceVoicemailCATs();
}

unsigned char *storeEnumTagSinglePayload for AnnounceVoicemailCATs.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x264A2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailCATs.Properties()
{
  return &type metadata for AnnounceVoicemailCATs.Properties;
}

__n128 *OUTLINED_FUNCTION_1_73(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x646E497473727562;
  result[2].n128_u64[1] = 0xEA00000000007865;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_71@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v2 + 96) = v1;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = 0x69616D6563696F76;
  *(void *)(v2 + 136) = 0xE90000000000006CLL;
  return 0;
}

void OUTLINED_FUNCTION_4_62(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x6E756F43746E6968;
  v2[17] = 0xE900000000000074;
}

void OUTLINED_FUNCTION_13_32(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = a1 | 0x8000000000000000;
}

uint64_t static SKIntentResolverChain.firstHit<A>(_:)@<X0>(uint64_t a1@<X8>)
{
  return static SKIntentResolverChain.firstHit<A>(_:)((uint64_t (*)(void))type metadata accessor for FirstHitIntentResolver, a1);
}

uint64_t static SKIntentResolverChain.all<A>(_:)@<X0>(uint64_t a1@<X8>)
{
  return static SKIntentResolverChain.firstHit<A>(_:)((uint64_t (*)(void))type metadata accessor for ChainedIntentResolver, a1);
}

uint64_t static SKIntentResolverChain.firstHit<A>(_:)@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  SKIntentResolver.toAnyIntentResolver()(v3, a2);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FirstHitIntentResolver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ChainedIntentResolver()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for SKIntentResolverChain()
{
  return &type metadata for SKIntentResolverChain;
}

uint64_t ChainedIntentResolver.resolve(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[50] = a3;
  v4[51] = a4;
  v4[48] = a1;
  v4[49] = a2;
  return _swift_task_switch(ChainedIntentResolver.resolve(skIntent:nlIntent:), 0, 0);
}

uint64_t ChainedIntentResolver.resolve(skIntent:nlIntent:)()
{
  id v38 = v0;
  uint64_t v1 = v0[50];
  uint64_t v2 = (void *)v0[48];
  v0[46] = v2;
  v0[38] = v1;
  v0[52] = type metadata accessor for AnyIntentResolver();
  v0[53] = type metadata accessor for Array();
  id v3 = v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[54] = WitnessTable;
  Sequence.enumerated()();
  v0[37] = v0[43];
  type metadata accessor for EnumeratedSequence();
  EnumeratedSequence.makeIterator()();
  type metadata accessor for EnumeratedSequence.Iterator();
  EnumeratedSequence.Iterator.next()();
  swift_getTupleTypeMetadata2();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_1_1();
  (*(void (**)(void *, void *))(v5 + 32))(v0 + 11, v0 + 2);
  if (v0[15])
  {
    OUTLINED_FUNCTION_14_35();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    v0[55] = __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
    uint64_t v7 = (void *)Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_63_0(v8))
    {
      uint64_t v9 = OUTLINED_FUNCTION_10_42();
      uint64_t v37 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_21_27(4.8151e-34);
      uint64_t v10 = String.init<A>(describing:)();
      *(void *)(v9 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v37);
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      *(void *)(v9 + 14) = WitnessTable;
      OUTLINED_FUNCTION_8(&dword_0, v12, v13, "#ChainedIntentResolver<%s> Running resolver @ index=%ld");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_17_28();
    id v15 = v14;
    uint64_t v16 = (void *)swift_task_alloc();
    v0[57] = v16;
    swift_getWitnessTable();
    OUTLINED_FUNCTION_15_33();
    *uint64_t v16 = v17;
    v16[1] = ChainedIntentResolver.resolve(skIntent:nlIntent:);
    uint64_t v18 = OUTLINED_FUNCTION_13_33();
    return SKIntentResolver.run(skIntent:nlIntent:)(v18, v19, v20, v21);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    id v24 = (void *)v0[46];
    swift_bridgeObjectRetain_n();
    id v25 = v24;
    unint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_type_t type = v27;
      uint64_t v28 = v0[51];
      uint64_t v29 = OUTLINED_FUNCTION_14_0();
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v37 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v29 = 136315650;
      v0[39] = v28;
      swift_getMetatypeMetadata();
      uint64_t v30 = String.init<A>(describing:)();
      v0[40] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2048;
      uint64_t v32 = Array.count.getter();
      swift_bridgeObjectRelease();
      v0[41] = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2112;
      id v33 = v25;
      v0[42] = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v36 = v25;

      _os_log_impl(&dword_0, v26, type, "#ChainedIntentResolver<%s> Ran %ld resolvers, calling completion on skIntent: %@", (uint8_t *)v29, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    OUTLINED_FUNCTION_4_63();
    return v34();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)();
  uint64_t v10;

  OUTLINED_FUNCTION_16_1();
  id v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v8 = ChainedIntentResolver.resolve(skIntent:nlIntent:);
  }
  else
  {

    *(void *)(v5 + 472) = v3;
    os_log_type_t v8 = ChainedIntentResolver.resolve(skIntent:nlIntent:);
  }
  return _swift_task_switch(v8, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  id v23;
  void *v24;
  os_log_type_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;

  uint64_t v37 = v0;
  uint64_t v2 = *(void *)(v0 + 472);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v0 + 416) - 8) + 8))(v0 + 160);

  *(void *)(v0 + 368) = v2;
  type metadata accessor for EnumeratedSequence.Iterator();
  EnumeratedSequence.Iterator.next()();
  swift_getTupleTypeMetadata2();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_1_1();
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v0 + 88, v0 + 16);
  if (!*(void *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_30_19();
    uint64_t v23 = (id)(v0 + 16);
    id v24 = (void *)Logger.logObject.getter();
    id v25 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_4(v25))
    {
      OUTLINED_FUNCTION_14_0();
      uint64_t v35 = (void *)OUTLINED_FUNCTION_28_24();
      uint64_t v36 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_27_23(4.8152e-34);
      unint64_t v26 = String.init<A>(describing:)();
      uint64_t v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v36);
      OUTLINED_FUNCTION_19_29(v28);
      swift_bridgeObjectRelease();
      uint64_t v29 = (void *)OUTLINED_FUNCTION_20_28();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_43();
      swift_bridgeObjectRelease();
      uint64_t v30 = OUTLINED_FUNCTION_24_27();
      OUTLINED_FUNCTION_12_36((uint64_t)v30);
      *uint64_t v35 = v23;

      OUTLINED_FUNCTION_25_22(&dword_0, v31, v32, "#ChainedIntentResolver<%s> Ran %ld resolvers, calling completion on skIntent: %@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    OUTLINED_FUNCTION_29_22();
    OUTLINED_FUNCTION_4_63();
    OUTLINED_FUNCTION_39();
    __asm { BRAA            X2, X16 }
  }
  OUTLINED_FUNCTION_14_35();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  unsigned int v4 = type metadata accessor for Logger();
  *(void *)(v0 + 440) = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = (void *)Logger.logObject.getter();
  uint64_t v6 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_63_0(v6))
  {
    uint64_t v7 = OUTLINED_FUNCTION_10_42();
    uint64_t v36 = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_21_27(4.8151e-34);
    os_log_type_t v8 = String.init<A>(describing:)();
    *(void *)(v7 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v36);
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    *(void *)(v7 + 14) = v1;
    OUTLINED_FUNCTION_8(&dword_0, v10, v11, "#ChainedIntentResolver<%s> Running resolver @ index=%ld");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  OUTLINED_FUNCTION_17_28();
  uint64_t v13 = v12;
  id v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v14;
  swift_getWitnessTable();
  OUTLINED_FUNCTION_15_33();
  *id v14 = v15;
  v14[1] = ChainedIntentResolver.resolve(skIntent:nlIntent:);
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_39();
  return SKIntentResolver.run(skIntent:nlIntent:)(v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  long long v15;
  long long v16;
  uint64_t v17;
  void *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  id v36;
  void *v37;
  os_log_type_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v51 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = (_OWORD *)(v0 + 160);

  swift_errorRetain();
  swift_errorRetain();
  id v3 = Logger.logObject.getter();
  unsigned int v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v48 = *(void *)(v0 + 416);
    uint64_t v5 = *(void *)(v0 + 408);
    uint64_t v6 = swift_slowAlloc();
    BOOL v50 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    *(void *)(v0 + 352) = v5;
    swift_getMetatypeMetadata();
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v6 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v50);
    uint64_t v1 = v0 + 16;
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v9 = Error.localizedDescription.getter();
    *(void *)(v6 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v50);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v3, v4, "#ChainedIntentResolver<%s> Error: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    uint64_t v2 = (_OWORD *)(v0 + 160);
    OUTLINED_FUNCTION_6();

    swift_errorRelease();
    (*(void (**)(uint64_t))(*(void *)(v48 - 8) + 8))(v0 + 160);
  }
  else
  {
    unint64_t v11 = *(void *)(v0 + 416);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t))(*(void *)(v11 - 8) + 8))(v0 + 160);
  }
  uint64_t v12 = *(void **)(v0 + 416);
  type metadata accessor for EnumeratedSequence.Iterator();
  EnumeratedSequence.Iterator.next()();
  swift_getTupleTypeMetadata2();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_1_1();
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v0 + 88, v1);
  if (!*(void *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_30_19();
    uint64_t v36 = v12;
    uint64_t v37 = (void *)Logger.logObject.getter();
    id v38 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_4(v38))
    {
      OUTLINED_FUNCTION_14_0();
      int v49 = (void *)OUTLINED_FUNCTION_28_24();
      BOOL v50 = OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_27_23(4.8152e-34);
      uint64_t v39 = String.init<A>(describing:)();
      int v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, &v50);
      OUTLINED_FUNCTION_19_29(v41);
      swift_bridgeObjectRelease();
      int v42 = (void *)OUTLINED_FUNCTION_20_28();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_43();
      swift_bridgeObjectRelease();
      int v43 = OUTLINED_FUNCTION_24_27();
      OUTLINED_FUNCTION_12_36((uint64_t)v43);
      char *v49 = v36;

      OUTLINED_FUNCTION_25_22(&dword_0, v44, v45, "#ChainedIntentResolver<%s> Ran %ld resolvers, calling completion on skIntent: %@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    OUTLINED_FUNCTION_29_22();
    OUTLINED_FUNCTION_4_63();
    OUTLINED_FUNCTION_39();
    __asm { BRAA            X2, X16 }
  }
  id v14 = *(void *)(v0 + 88);
  id v15 = *(_OWORD *)(v0 + 112);
  *uint64_t v2 = *(_OWORD *)(v0 + 96);
  v2[1] = v15;
  uint64_t v16 = *(_OWORD *)(v0 + 144);
  v2[2] = *(_OWORD *)(v0 + 128);
  v2[3] = v16;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  *(void *)(v0 + 440) = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = (void *)Logger.logObject.getter();
  uint64_t v19 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_63_0(v19))
  {
    uint64_t v20 = OUTLINED_FUNCTION_10_42();
    BOOL v50 = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_21_27(4.8151e-34);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v20 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v50);
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2048;
    *(void *)(v20 + 14) = v14;
    OUTLINED_FUNCTION_8(&dword_0, v23, v24, "#ChainedIntentResolver<%s> Running resolver @ index=%ld");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  OUTLINED_FUNCTION_17_28();
  unint64_t v26 = v25;
  os_log_type_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v27;
  swift_getWitnessTable();
  OUTLINED_FUNCTION_15_33();
  *os_log_type_t v27 = v28;
  v27[1] = ChainedIntentResolver.resolve(skIntent:nlIntent:);
  OUTLINED_FUNCTION_39();
  return SKIntentResolver.run(skIntent:nlIntent:)(v29, v30, v31, v32);
}

uint64_t protocol witness for SKIntentResolver.shouldRunResolver(skIntent:nlIntent:) in conformance ChainedIntentResolver<A>()
{
  return CallingIntentContinueInAppStrategy.shouldCheckResponseModeToOutputIntentHandledDialog.getter();
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance ChainedIntentResolver<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  uint64_t v10 = *(void *)(a3 + 16);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance PhoneIntentRCHFlowStrategy<A, B>;
  return ChainedIntentResolver.resolve(skIntent:nlIntent:)(a1, a2, v8, v10);
}

uint64_t FirstHitIntentResolver.resolve(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[50] = a3;
  v4[51] = a4;
  v4[48] = a1;
  v4[49] = a2;
  return _swift_task_switch(FirstHitIntentResolver.resolve(skIntent:nlIntent:), 0, 0);
}

uint64_t FirstHitIntentResolver.resolve(skIntent:nlIntent:)()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void *)(v0 + 408);
  *(void *)(v0 + 368) = *(void *)(v0 + 400);
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 384);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  uint64_t v4 = type metadata accessor for AnyIntentResolver();
  *(void *)(v0 + 416) = v4;
  type metadata accessor for Array();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  Sequence.first(where:)();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Optional();
  *(void *)(v0 + 424) = v5;
  OUTLINED_FUNCTION_1_44();
  uint64_t v7 = v6;
  *(void *)(v0 + 432) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v0 + 208, v0 + 16, v5);
  if (*(void *)(v0 + 232))
  {
    long long v8 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 160) = v8;
    long long v9 = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 192) = v9;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_1_44();
    uint64_t v12 = v11;
    *(void *)(v0 + 440) = v11;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v13(v0 + 272, v0 + 144, v4);
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t type = v15;
      uint64_t v16 = *(void *)(v0 + 408);
      uint64_t v17 = swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      *(void *)(v0 + 352) = v16;
      swift_getMetatypeMetadata();
      uint64_t v18 = String.init<A>(describing:)();
      *(void *)(v0 + 360) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      v13(v0 + 80, v0 + 272, v4);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v20(v0 + 272, v4);
      uint64_t v21 = AnyIntentResolver.description.getter();
      unint64_t v23 = v22;
      v20(v0 + 80, v4);
      *(void *)(v0 + 376) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v14, type, "#FirstHitIntentResolver<%s> Chose resolver: %s)", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v20(v0 + 272, v4);
    }

    *(void *)(v0 + 448) = v20;
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v32;
    uint64_t WitnessTable = swift_getWitnessTable();
    void *v32 = v0;
    v32[1] = FirstHitIntentResolver.resolve(skIntent:nlIntent:);
    uint64_t v34 = *(void *)(v0 + 384);
    uint64_t v35 = *(void *)(v0 + 392);
    return SKIntentResolver.run(skIntent:nlIntent:)(v34, v35, v4, WitnessTable);
  }
  else
  {
    id v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v24(v0 + 208, v5);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    unint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_4(v27))
    {
      uint64_t v28 = *(void *)(v0 + 408);
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      v40[0] = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v29 = 136315138;
      *(void *)(v0 + 344) = v28;
      swift_getMetatypeMetadata();
      uint64_t v30 = String.init<A>(describing:)();
      *(void *)(v0 + 336) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v26, (os_log_type_t)(v0 + 112), "#FirstHitIntentResolver<%s> Didn't find a resolver that supports this request, returning skIntent as-is.", v29, 0xCu);
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      v24(v0 + 16, v5);
    }
    else
    {

      v24(v0 + 16, v5);
    }
    id v37 = *(id *)(v0 + 384);
    OUTLINED_FUNCTION_4_63();
    return v38();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)();
  uint64_t v10;

  OUTLINED_FUNCTION_16_1();
  long long v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  *(void *)(v5 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    long long v8 = FirstHitIntentResolver.resolve(skIntent:nlIntent:);
  }
  else
  {
    *(void *)(v5 + 472) = v3;
    long long v8 = FirstHitIntentResolver.resolve(skIntent:nlIntent:);
  }
  return _swift_task_switch(v8, 0, 0);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_6_56();
  v1(v0);
  uint64_t v2 = OUTLINED_FUNCTION_79_2();
  v3(v2);
  OUTLINED_FUNCTION_4_63();
  return v4();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_6_56();
  v2(v1);
  long long v3 = OUTLINED_FUNCTION_79_2();
  v4(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t closure #1 in FirstHitIntentResolver.resolve(skIntent:nlIntent:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnyIntentResolver();
  char v15 = AnyIntentResolver.shouldRunResolver(skIntent:nlIntent:)();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  v5(v17, a1, v2);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    v5(v16, (uint64_t)v17, v2);
    long long v9 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
    v9(v17, v2);
    uint64_t v10 = AnyIntentResolver.description.getter();
    unint64_t v12 = v11;
    v9(v16, v2);
    v16[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 1024;
    char v13 = v15;
    LODWORD(v16[0]) = v15 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v6, v7, "#%s shouldRunResolver = %{BOOL}d", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v17, v2);

    char v13 = v15;
  }
  return v13 & 1;
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance FirstHitIntentResolver<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  uint64_t v10 = *(void *)(a3 + 16);
  *long long v9 = v4;
  v9[1] = protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance FirstHitIntentResolver<A>;
  return FirstHitIntentResolver.resolve(skIntent:nlIntent:)(a1, a2, v8, v10);
}

uint64_t partial apply for closure #1 in FirstHitIntentResolver.resolve(skIntent:nlIntent:)(uint64_t a1)
{
  return closure #1 in FirstHitIntentResolver.resolve(skIntent:nlIntent:)(a1) & 1;
}

uint64_t OUTLINED_FUNCTION_6_56()
{
  return v0 + 144;
}

uint64_t OUTLINED_FUNCTION_10_42()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_11_43()
{
  *(void *)(v0 + 328) = v1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_12_36(uint64_t a1)
{
  *(void *)(v1 + 336) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_13_33()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_14_35()
{
  long long v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 128);
  long long v4 = *(_OWORD *)(v1 + 144);
  *(__n128 *)(v0 + 32) = result;
  *(_OWORD *)(v0 + 48) = v4;
  return result;
}

void OUTLINED_FUNCTION_17_28()
{
  *(void *)(v0 + 448) = *(void *)(v0 + 368);
}

uint64_t OUTLINED_FUNCTION_19_29(uint64_t a1)
{
  *(void *)(v1 + 320) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_20_28()
{
  *(_WORD *)(v0 + 12) = 2048;
  return Array.count.getter();
}

id OUTLINED_FUNCTION_24_27()
{
  *(_WORD *)(v1 + 22) = 2112;
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_24()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_29_22()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_30_19()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 264) = a2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AceOutput?);
  *(void *)(v3 + 160) = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for AceOutput();
  *(void *)(v3 + 168) = v4;
  OUTLINED_FUNCTION_19_0(v4);
  *(void *)(v3 + 176) = v5;
  *(void *)(v3 + 184) = OUTLINED_FUNCTION_35();
  type metadata accessor for DialogPhase();
  *(void *)(v3 + 192) = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for OutputGenerationManifest();
  *(void *)(v3 + 200) = v6;
  OUTLINED_FUNCTION_19_0(v6);
  *(void *)(v3 + 208) = v7;
  *(void *)(v3 + 216) = OUTLINED_FUNCTION_35();
  return _swift_task_switch(CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:), 0, 0);
}

uint64_t CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:)()
{
  uint64_t v1 = *(void *)(v0 + 144);
  static DialogPhase.confirmation.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  outlined init with copy of SignalProviding(v1 + 80, v0 + 16);
  uint64_t v2 = (void *)(class metadata base offset for SearchCallHistoryCATsSimple + **(void **)(v1 + 184) + 592);
  uint64_t v6 = (uint64_t (*)(uint64_t))(*v2 + *(int *)*v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v3;
  *uint64_t v3 = v0;
  v3[1] = CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 264);
  return v6(v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 232) = v1;
  *(void *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:);
  }
  else {
    uint64_t v3 = CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:);
  }
  return _swift_task_switch(v3, 0, 0);
}

{
  uint64_t v1;

  OUTLINED_FUNCTION_0_1();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *);
  uint8_t *buf;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  unint64_t v26 = v0;
  uint64_t v1 = v0 + 56;
  outlined init with copy of SignalProviding(v0 + 56, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Output);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v3 = *(void *)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 168);
    __swift_storeEnumTagSinglePayload(v5, 0, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v5, v6);
    uint64_t v7 = (void *)AceOutput.commands.getter();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 160);
    __swift_storeEnumTagSinglePayload(v8, 1, 1, *(void *)(v0 + 168));
    outlined destroy of AceOutput?(v8);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v10 = Logger.logObject.getter();
    unint64_t v11 = static os_log_type_t.error.getter();
    uint64_t v12 = os_log_type_enabled(v10, v11);
    char v13 = *(void **)(v0 + 152);
    if (v12)
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)id v14 = 136315138;
      buf = v14;
      uint64_t v16 = v13[2];
      char v15 = v13[3];
      uint64_t v17 = v13[4];
      uint64_t v18 = v13[5];
      v25[1] = 0;
      v25[2] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v16, v15, v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 136) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, v25);
      uint64_t v1 = v0 + 56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v10, v11, "%s can't generate voicemail prompt dialog to an Ace Command", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  uint64_t v20 = *(void *)(v0 + 208);
  unint64_t v19 = *(void *)(v0 + 216);
  uint64_t v21 = *(void *)(v0 + 200);
  __swift_destroy_boxed_opaque_existential_1(v1);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void *))(v0 + 8);
  return v22(v7);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v11 = (void *)v10[29];
  uint64_t v12 = v10[5];
  uint64_t v13 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_46A030;
  *(void *)(v14 + 32) = v11;
  uint64_t v22 = v14;
  specialized Array._endMutation()();
  v10[31] = v22;
  id v15 = v11;
  unint64_t v19 = (void *)swift_task_alloc();
  v10[32] = v19;
  *unint64_t v19 = v10;
  v19[1] = CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:);
  uint64_t v20 = v10[27];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v10 + 7, v22, v20, v12, v13, v16, v17, v18, a9, a10);
}

uint64_t CallHistoryPromptDialogProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  CallHistoryPromptDialogProvider.init()();
  return v0;
}

void *CallHistoryPromptDialogProvider.init()()
{
  v0[2] = type metadata accessor for CallHistoryPromptDialogProvider();
  v0[3] = &outlined read-only object #0 of CallHistoryPromptDialogProvider.init();
  v0[4] = 0;
  v0[5] = 0;
  return v0;
}

uint64_t outlined destroy of AceOutput?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AceOutput?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CallHistoryPromptDialogProvider()
{
  return self;
}

void *specialized PhoneFlow.init(state:sharedGlobals:)(uint64_t a1, long long *a2)
{
  return specialized PhoneFlow.init(state:sharedGlobals:)(a1, a2, &demangling cache variable for type metadata for PhoneCallFlowState<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
}

{
  return specialized PhoneFlow.init(state:sharedGlobals:)(a1, a2, &demangling cache variable for type metadata for PhoneCallFlowState<INAnswerCallIntent, INAnswerCallIntentResponse>);
}

void *specialized PhoneFlow.init(state:sharedGlobals:)(uint64_t a1, long long *a2, uint64_t *a3)
{
  v3[2] = 0x6F6C46656E6F6850;
  v3[3] = 0xE900000000000077;
  outlined init with take of AnnotatedApp?(a1, (uint64_t)v3 + *(void *)(*v3 + 112), a3);
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)v3 + *(void *)(*v3 + 120));
  return v3;
}

uint64_t specialized IntentConversionFlow.init(input:app:sharedGlobals:)(uint64_t a1, uint64_t a2, long long *a3)
{
  return specialized IntentConversionFlow.init(input:app:sharedGlobals:)(a1, a2, a3, &demangling cache variable for type metadata for IntentConversionFlow<INSearchCallHistoryIntent>, (uint64_t)&outlined read-only object #0 of specialized IntentConversionFlow.init(input:app:sharedGlobals:));
}

uint64_t specialized IntentConversionFlow.init(input:app:sharedGlobals:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t *a4, uint64_t a5)
{
  *(void *)(v5 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v5 + direct field offset for IntentConversionFlow.logPrefix);
  *uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10[1] = a5;
  v10[2] = 0;
  v10[3] = 0;
  uint64_t v11 = v5 + direct field offset for IntentConversionFlow.input;
  type metadata accessor for Input();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v11, a1);
  *(void *)(v5 + direct field offset for IntentConversionFlow.appResolved) = a2;
  outlined init with take of AppSelectionSignalComponent(a3, v5 + direct field offset for IntentConversionFlow.sharedGlobals);
  return v5;
}

void *HangUpCallFlow.__allocating_init(input:sharedGlobals:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HangUpCallFlow.init(input:sharedGlobals:app:)(a1, a2, a3);
}

void *HangUpCallFlow.init(input:sharedGlobals:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = one-time initialization token for siriPhone;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "#HangUpCallFlow: initialize", v12, 2u);
    OUTLINED_FUNCTION_6();
  }

  *(void *)(v4 + direct field offset for HangUpCallFlow.app) = a3;
  swift_retain();
  swift_release();
  outlined init with copy of SignalProviding(a2, (uint64_t)v17);
  uint64_t v13 = specialized PhoneFlow.init(sharedGlobals:)(v17);
  uint64_t v14 = *(void (**)(uint64_t))(*v13 + 192);
  swift_retain();
  v14(a1);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  type metadata accessor for Input();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v15 + 8))(a1);
  return v13;
}

void *HangUpCallFlow.__allocating_init(state:sharedGlobals:)(uint64_t a1, void *a2)
{
  return HangUpCallFlow.init(state:sharedGlobals:)(a1, a2);
}

void *HangUpCallFlow.init(state:sharedGlobals:)(uint64_t a1, void *a2)
{
  void (*v11)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  long long v16[6];
  long long v17;
  void v18[4];
  uint64_t v19;
  unsigned char v20[16];
  uint64_t v21;
  unsigned char v22[184];

  uint64_t v4 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
  __chkstk_darwin(v6 - 8);
  OUTLINED_FUNCTION_53();
  uint64_t v7 = one-time initialization token for instance;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  memcpy(v22, &static PhoneCallFeatureFlags.instance, 0xB0uLL);
  type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject();
  v18[1] = &type metadata for PhoneCallFeatureFlags;
  v18[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v17 = swift_allocObject();
  memcpy((void *)(v17 + 16), v22, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v17, inited + 16);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  os_log_type_t v11 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v10 + 8);
  outlined retain of PhoneCallFeatureFlags((uint64_t)v22);
  v11(v16, v9, v10);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v16, (uint64_t)&v17);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  uint64_t v21 = *((void *)&v17 + 1);
  uint64_t v12 = v17;
  outlined release of Set<String>((uint64_t)&v21);
  outlined init with take of AnnotatedApp?((uint64_t)v18, (uint64_t)v20, &demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v20);
  unint64_t v19 = v18[3];
  outlined release of Set<String>((uint64_t)&v19);
  *(void *)(v4 + direct field offset for HangUpCallFlow.app) = v12;
  swift_release();
  outlined init with copy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(a1, v3);
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v16);
  uint64_t v13 = specialized PhoneFlow.init(state:sharedGlobals:)(v3, v16, &demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
  outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v13;
}

uint64_t HangUpCallFlow.on(input:)(uint64_t a1)
{
  void (*v23)(uint64_t *__return_ptr, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(void);
  void v30[2];
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;

  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v34 = (char *)v30 - v9;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_8_66();
  os_log_type_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = OUTLINED_FUNCTION_47();
    uint64_t v32 = a1;
    uint64_t v14 = (uint8_t *)v13;
    v36[0] = swift_slowAlloc();
    id v33 = v4;
    *(_DWORD *)uint64_t v14 = 136315138;
    v30[1] = v14 + 4;
    uint64_t v15 = (uint64_t)v34;
    (*(void (**)(void))(*(void *)v1 + 128))();
    unint64_t v16 = specialized PhoneCallFlowState.description.getter();
    unint64_t v31 = v8;
    unint64_t v18 = v17;
    outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(v15);
    uint64_t v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_6_2();
    uint64_t v8 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, v12, "#HangUpCallFlow: State = %s", v14, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    a1 = v32;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_6_2();
  }
  (*(void (**)(void))(*(void *)v2 + 128))();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    os_log_type_t v27 = dispatch thunk of AnyValueFlow.on(input:)();
    swift_release();
  }
  else if (EnumCaseMultiPayload == 5)
  {
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState))
                 + 48);
    uint64_t v21 = v34;
    type metadata accessor for Input();
    OUTLINED_FUNCTION_15();
    (*(void (**)(char *, uint64_t))(v22 + 16))(v21, a1);
    *(void *)&v21[v20] = *(void *)(v2 + direct field offset for HangUpCallFlow.app);
    uint64_t v23 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v2 + 152);
    id v24 = swift_retain();
    v23(v36, v24);
    uint64_t v25 = v37;
    unint64_t v26 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    os_log_type_t v27 = 1;
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_7_58();
    v28();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  else
  {
    outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>((uint64_t)v8);
    os_log_type_t v27 = 0;
  }
  return v27 & 1;
}

uint64_t HangUpCallFlow.execute()(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for Input();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(HangUpCallFlow.execute(), 0, 0);
}

uint64_t HangUpCallFlow.execute()()
{
  void (*v48)(long long *__return_ptr, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  long long v58[2];
  uint64_t v59;
  uint64_t v60;

  uint64_t v59 = v0;
  uint64_t v1 = (_DWORD *)(v0 + 24);
  OUTLINED_FUNCTION_19();
  uint64_t v3 = *(void (**)(void))(v2 + 128);
  v3();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *(void *)(v0 + 120);
      uint64_t v15 = *(void *)(v0 + 96);
      uint64_t v16 = *(void *)(v0 + 64);
      uint64_t v17 = *(void *)(v0 + 72);
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      uint64_t v57 = *(void *)(v14 + *(int *)(v55 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v15, v14, v16);
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v19 = *(void *)(v0 + 88);
      uint64_t v18 = *(void *)(v0 + 96);
      uint64_t v20 = *(void *)(v0 + 64);
      uint64_t v21 = *(void *)(v0 + 72);
      uint64_t v22 = type metadata accessor for Logger();
      uint64_t v23 = (uint8_t *)__swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
      id v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
      v54(v19, v18, v20);
      id v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v24, v25))
      {
        OUTLINED_FUNCTION_47();
        *(void *)&v58[0] = OUTLINED_FUNCTION_6_53();
        *(_DWORD *)uint64_t v23 = 136315138;
        lazy protocol witness table accessor for type Input and conformance Input();
        uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, (uint64_t *)v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v28 = OUTLINED_FUNCTION_2_86();
        v29(v28);
        _os_log_impl(&dword_0, v24, v25, "#HangUpCallFlow: Converting input: %s to INHangUpCallIntent.", v23, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        uint64_t v42 = OUTLINED_FUNCTION_2_86();
        v43(v42);
      }
      uint64_t v44 = *(void *)(v0 + 96);
      uint64_t v45 = *(void *)(v0 + 80);
      uint64_t v47 = *(void *)(v0 + 56);
      uint64_t v46 = *(void *)(v0 + 64);
      unint64_t v56 = *(void *)(v0 + 120) + *(int *)(v55 + 64);
      v54(v45, v44, v46);
      os_log_type_t v48 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)v47 + 152);
      int v49 = swift_retain();
      v48(v58, v49);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentConversionFlow<INHangUpCallIntent>);
      swift_allocObject();
      *(void *)(v0 + 24) = specialized IntentConversionFlow.init(input:app:sharedGlobals:)(v45, v57, v58, &demangling cache variable for type metadata for IntentConversionFlow<INHangUpCallIntent>, (uint64_t)&outlined read-only object #0 of specialized IntentConversionFlow.init(input:app:sharedGlobals:));
      BOOL v50 = swift_allocObject();
      *(void *)(v50 + 16) = partial apply for implicit closure #4 in implicit closure #3 in HangUpCallFlow.execute();
      *(void *)(v50 + 24) = v47;
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type IntentConversionFlow<INHangUpCallIntent> and conformance IntentConversionFlow<A>, &demangling cache variable for type metadata for IntentConversionFlow<INHangUpCallIntent>);
      swift_retain();
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      swift_release();
      swift_release();
      ((void (*)(uint64_t, uint64_t))(v0 + 40))(v44, v46);
      __swift_destroy_boxed_opaque_existential_1(v56);
      goto LABEL_28;
    case 2u:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
      unint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v31, v32))
      {
        id v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v33 = 0;
        _os_log_impl(&dword_0, v31, v32, "#HangUpCallFlow: Executing RCHFlow.", v33, 2u);
        OUTLINED_FUNCTION_6();
      }

      swift_retain();
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      swift_release();
      goto LABEL_28;
    case 4u:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = *(void *)(v0 + 112);
        OUTLINED_FUNCTION_47();
        *(void *)&v58[0] = OUTLINED_FUNCTION_6_53();
        _DWORD *v1 = 136315138;
        v3();
        unint64_t v38 = specialized PhoneCallFlowState.description.getter();
        unint64_t v40 = v39;
        outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(v37);
        *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, (uint64_t *)v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        OUTLINED_FUNCTION_6_57(&dword_0, v35, v41, "#HangUpCallFlow: encountered unexpected state %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_release_n();
      }

      uint64_t v51 = *(void *)(v0 + 120);
      static ExecuteResponse.complete()();
      outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(v51);
      goto LABEL_28;
    case 5u:
      goto LABEL_3;
    case 6u:
      (*(void (**)(void))(**(void **)(v0 + 56) + 232))();
      goto LABEL_28;
    case 7u:
      goto LABEL_23;
    default:
      outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(*(void *)(v0 + 120));
LABEL_3:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = *(void *)(v0 + 112);
        OUTLINED_FUNCTION_47();
        *(void *)&v58[0] = OUTLINED_FUNCTION_6_53();
        _DWORD *v1 = 136315138;
        v3();
        unint64_t v8 = specialized PhoneCallFlowState.description.getter();
        unint64_t v10 = v9;
        outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(v7);
        *(void *)(v0 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, (uint64_t *)v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        OUTLINED_FUNCTION_6_57(&dword_0, v5, v11, "#HangUpCallFlow: encountered unexpected state %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_release_n();
      }

      uint64_t v12 = *(void *)(v0 + 112);
      uint64_t v13 = *(void *)(v0 + 56);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t))(*(void *)v13 + 136))(v12);
LABEL_23:
      static ExecuteResponse.complete()();
LABEL_28:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
      return v52();
  }
}

uint64_t HangUpCallFlow.makeRCHFlow(input:intent:app:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  id v6 = a2;
  OUTLINED_FUNCTION_8_66();
  id v7 = a2;
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    id v11 = [v7 debugDescription];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v15 = dispatch thunk of App.debugDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_6_2();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, v9, "#HangUpCallFlow: Making RCHFlow for intent %s and App %s.", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_6_2();
  }
  uint64_t v17 = *(void (**)(void))(*(void *)v3 + 152);
  OUTLINED_FUNCTION_11_44();
  v17();
  type metadata accessor for HangUpCallRCHFlowDelegate();
  uint64_t v18 = swift_allocObject();
  outlined init with copy of SignalProviding((uint64_t)v22, v18 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals);
  BaseRCHFlowDelegate.init()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  OUTLINED_FUNCTION_11_44();
  v17();
  static PhoneCallFlowFactory.makeHangUpCallRCHFlow(delegate:intent:app:sharedGlobals:)();
  uint64_t v20 = v19;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v20;
}

uint64_t HangUpCallFlow.processIntentConversionResult(exitValue:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v35 = (void *)((char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)v34 - v8;
  uint64_t v10 = type metadata accessor for Input();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_53();
  uint64_t v12 = *(void (**)(void))(*(void *)v1 + 128);
  v12();
  uint64_t v36 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = (uint64_t)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState))
                              + 64)];
    (*(void (**)(_DWORD *, char *, uint64_t))(v11 + 32))(v2, v9, v10);
    __swift_destroy_boxed_opaque_existential_1(v13);
    if (a1)
    {
      id v14 = a1;
      uint64_t v38 = HangUpCallFlow.makeRCHFlow(input:intent:app:)((uint64_t)v14, v14);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
      uint64_t v15 = Flow.eraseToAnyValueFlow()();
      swift_release();
      *uint64_t v35 = v15;
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_7_58();
      v16();
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v31 = 0;
        _os_log_impl(&dword_0, v29, v30, "#HangUpCallFlow: Could not convert input to INHangUpCallIntent, stopping", v31, 2u);
        OUTLINED_FUNCTION_6();
      }

      os_log_type_t v32 = v35;
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_19();
      (*(void (**)(uint64_t *))(v33 + 136))(v32);
    }
    swift_release();
    return (*(uint64_t (**)(_DWORD *, uint64_t))(v11 + 8))(v2, v10);
  }
  else
  {
    outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>((uint64_t)v9);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_8_66();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = (uint64_t)v35;
    if (v20)
    {
      OUTLINED_FUNCTION_47();
      uint64_t v38 = OUTLINED_FUNCTION_6_53();
      *uint64_t v2 = 136315138;
      v34[1] = v2 + 1;
      v12();
      unint64_t v22 = specialized PhoneCallFlowState.description.getter();
      unint64_t v24 = v23;
      outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(v21);
      uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_57(&dword_0, v18, v25, "#HangUpCallFlow: Unexpected state, stopping: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_6_2();
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_7_58();
    return v26();
  }
}

void HangUpCallFlow.init(sharedGlobals:)()
{
}

uint64_t HangUpCallFlow.__ivar_destroyer()
{
  return swift_release();
}

uint64_t HangUpCallFlow.deinit()
{
  uint64_t v0 = specialized PhoneFlow.deinit();
  swift_release();
  return v0;
}

uint64_t HangUpCallFlow.__deallocating_deinit()
{
  specialized PhoneFlow.deinit();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_269288()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t outlined init with copy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t partial apply for implicit closure #6 in implicit closure #5 in HangUpCallFlow.execute()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t sub_269430()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed INHangUpCallIntent?) -> ()(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t type metadata accessor for HangUpCallFlow()
{
  uint64_t result = type metadata singleton initialization cache for HangUpCallFlow;
  if (!type metadata singleton initialization cache for HangUpCallFlow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for HangUpCallFlow()
{
  return swift_initClassMetadata2();
}

uint64_t OUTLINED_FUNCTION_2_86()
{
  return v0;
}

void OUTLINED_FUNCTION_6_57(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_8_66()
{
  return swift_retain_n();
}

uint64_t SearchCallHistoryRCHFlowDelegate.__allocating_init(sharedGlobals:)()
{
  swift_allocObject();
  uint64_t v0 = OUTLINED_FUNCTION_18_22();
  return SearchCallHistoryRCHFlowDelegate.init(sharedGlobals:)(v0);
}

uint64_t SearchCallHistoryRCHFlowDelegate.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals, a1);
}

uint64_t SearchCallHistoryRCHFlowDelegate.init(sharedGlobals:)(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix);
  *uint64_t v3 = type metadata accessor for SearchCallHistoryRCHFlowDelegate();
  v3[1] = (uint64_t)&outlined read-only object #0 of SearchCallHistoryRCHFlowDelegate.init(sharedGlobals:);
  v3[2] = 0;
  v3[3] = 0;
  outlined init with copy of SignalProviding(a1, v1 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals);
  BaseRCHFlowDelegate.init()();
  uint64_t v4 = OUTLINED_FUNCTION_18_22();
  __swift_destroy_boxed_opaque_existential_1(v4);
  return v1;
}

uint64_t type metadata accessor for SearchCallHistoryRCHFlowDelegate()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryRCHFlowDelegate;
  if (!type metadata singleton initialization cache for SearchCallHistoryRCHFlowDelegate) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SearchCallHistoryRCHFlowDelegate.makeDialogTemplating()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CATOption();
  __chkstk_darwin(v2 - 8);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix);
    uint64_t v7 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 8);
    uint64_t v10 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 16);
    uint64_t v9 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 24);
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v8, v7, v10, v9);
    uint64_t v1 = v0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v5, "%s Making SearchCallHistoryTemplatingService", v6, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  outlined init with copy of SignalProviding(v1 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals, (uint64_t)v19);
  type metadata accessor for PhoneCallDisplayTextCATs();
  OUTLINED_FUNCTION_4_64();
  uint64_t v11 = OUTLINED_FUNCTION_3_72();
  type metadata accessor for PhoneCallCommonCATs();
  OUTLINED_FUNCTION_4_64();
  uint64_t v12 = OUTLINED_FUNCTION_3_72();
  type metadata accessor for SearchCallHistoryCATs();
  OUTLINED_FUNCTION_4_64();
  uint64_t v13 = OUTLINED_FUNCTION_3_72();
  type metadata accessor for StartCallCATs();
  OUTLINED_FUNCTION_4_64();
  uint64_t v14 = OUTLINED_FUNCTION_3_72();
  type metadata accessor for AppInfoBuilder();
  uint64_t v15 = swift_allocObject();
  type metadata accessor for SearchCallHistoryTemplatingService();
  unint64_t v16 = (void *)OUTLINED_FUNCTION_21_0();
  return specialized SearchCallHistoryTemplatingService.init(sharedGlobals:displayTextCats:phoneCallCommonCats:searchCallHistoryCatFamily:startCallCatFamily:appInfoBuilder:labelTemplating:)((uint64_t)v19, v11, v12, v13, v14, v15, 0, 0, 0, 0, v16);
}

uint64_t SearchCallHistoryRCHFlowDelegate.makeAceViewProvider()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_18_22();
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    uint64_t v6 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix);
    uint64_t v7 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 8);
    uint64_t v9 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 16);
    uint64_t v8 = *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 24);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v6, v7, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v3, v4, "%s Making SearchCallHistoryAceViewProvider", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  outlined init with copy of SignalProviding(v1 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals, (uint64_t)v15);
  type metadata accessor for AppInfoBuilder();
  uint64_t v11 = swift_allocObject();
  type metadata accessor for SearchCallHistoryAceViewProvider();
  uint64_t v12 = OUTLINED_FUNCTION_21_0();
  return specialized SearchCallHistoryAceViewProvider.init(templatingService:sharedGlobals:appInfoBuilder:)(v10, (uint64_t)v15, v11, v12);
}

uint64_t SearchCallHistoryRCHFlowDelegate.makeNLContextProvider()()
{
  uint64_t v1 = (void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals), *(void *)(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals + 24));
  uint64_t v2 = OUTLINED_FUNCTION_5_48();
  v3(v2);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v4 = OUTLINED_FUNCTION_5_48();
  v5(v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>);
  OUTLINED_FUNCTION_21_0();
  return specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v8, &v7);
}

uint64_t SearchCallHistoryRCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = a3;
  v14._object = a4;
  if (PhoneCallSlotNames.init(rawValue:)(v14).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_recipient
    && (id v15 = [a5 disambiguationItems],
        uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v15,
        uint64_t v17 = specialized _arrayConditionalCast<A, B>(_:)(v16),
        swift_bridgeObjectRelease(),
        v17))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    os_log_type_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t type = v20;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      *(void *)&long long v41 = v38;
      uint64_t v22 = *(void *)(v8 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix);
      uint64_t v23 = *(void *)(v8 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 8);
      uint64_t v25 = *(void *)(v8 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 16);
      uint64_t v24 = *(void *)(v8 + direct field offset for SearchCallHistoryRCHFlowDelegate.logPrefix + 24);
      uint64_t v44 = 0;
      unint64_t v45 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v22, v23, v25, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v19, type, "%s Building disambiguation list for recipient slot.", v21, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v28 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
    uint64_t v42 = type metadata accessor for SearchCallHistoryTemplatingService();
    int v43 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
    *(void *)&long long v41 = v28;
    uint64_t v29 = App.appIdentifier.getter();
    if (v30) {
      uint64_t v31 = v29;
    }
    else {
      uint64_t v31 = 0;
    }
    if (v30) {
      unint64_t v32 = v30;
    }
    else {
      unint64_t v32 = 0xE000000000000000;
    }
    uint64_t v33 = (void *)(v8 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals);
    __swift_project_boxed_opaque_existential_1((void *)(v8 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals), *(void *)(v8 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals + 24));
    uint64_t v34 = OUTLINED_FUNCTION_6_58();
    v35(v34);
    __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    uint64_t v36 = OUTLINED_FUNCTION_6_58();
    v37(v36);
    uint64_t v44 = (uint64_t)v17;
    unint64_t v45 = (unint64_t)v17;
    outlined init with take of AppSelectionSignalComponent(&v41, (uint64_t)&v50);
    outlined init with take of AppSelectionSignalComponent(&v40, (uint64_t)&v49);
    char v46 = 1;
    uint64_t v47 = v31;
    unint64_t v48 = v32;
    swift_bridgeObjectRetain();
    specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)((uint64_t)a6, a7);
    return outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)&v44);
  }
  else
  {
    id v26 = [a5 disambiguationItems];
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for SiriKitDisambiguationList();
    OUTLINED_FUNCTION_21_0();
    SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)();
    a6();
    return swift_release();
  }
}

uint64_t SearchCallHistoryRCHFlowDelegate.makeErrorDialogBehavior(app:intent:intentResponse:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ErrorDialogBehavior.openAppButton(_:);
  uint64_t v3 = type metadata accessor for ErrorDialogBehavior();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t SearchCallHistoryRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v6 = *(void *)(v2 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals), v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v7 + 192))(v10, a1);
  swift_release();
  outlined destroy of SubmitCommandError?((uint64_t)v10, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BaseRCHFlowDelegate<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))method lookup function for BaseRCHFlowDelegate();
  return v8(a1, a2);
}

uint64_t SearchCallHistoryRCHFlowDelegate.applyParameterValue(value:intent:parameterName:applicationStrategy:_:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6, uint64_t (*a7)(void *, void), uint64_t a8)
{
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = a3;
  v16._object = a4;
  int value = PhoneCallSlotNames.init(rawValue:)(v16).value;
  if (value == 15)
  {
    outlined init with copy of Any(a1, (uint64_t)v21);
    type metadata accessor for INCallCapabilityOptions(0);
    if (OUTLINED_FUNCTION_9_51()) {
      [a2 setCallCapabilities:v20];
    }
    return a7(a2, 0);
  }
  if (value == 9)
  {
    outlined init with copy of Any(a1, (uint64_t)v21);
    type metadata accessor for INCallRecordTypeOptions(0);
    if (OUTLINED_FUNCTION_9_51()) {
      [a2 setCallTypes:v20];
    }
    return a7(a2, 0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BaseRCHFlowDelegate<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>);
  os_log_type_t v19 = (uint64_t (*)(uint64_t, void *, uint64_t, void *, uint64_t, void, uint64_t (*)(void, void), uint64_t))method lookup function for BaseRCHFlowDelegate();

  return v19(a1, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(void, void))a7, a8);
}

BOOL SearchCallHistoryRCHFlowDelegate.isReadRequest(intent:intentResponse:deviceState:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_1_74(a3);
  char v6 = dispatch thunk of DeviceState.isHomePod.getter();
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v28);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v27);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v26);
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v25);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return 1;
  }
  OUTLINED_FUNCTION_1_74(v28);
  char v7 = dispatch thunk of DeviceState.isCarPlay.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v27);
  if (v7) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_1_74(v27);
  char v9 = dispatch thunk of DeviceState.isCarDNDMode.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v26);
  if (v9) {
    goto LABEL_5;
  }
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  char v10 = DeviceState.isVox.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v25);
  if (v10) {
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  OUTLINED_FUNCTION_18_22();
  char v11 = dispatch thunk of DeviceState.isEyesFree.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if (v11) {
    return 1;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v4 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals), *(void *)(v4 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals + 24));
  uint64_t v12 = OUTLINED_FUNCTION_3_35();
  uint64_t v14 = v13(v12);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 128))(v14);
  swift_release();
  specialized BidirectionalCollection.last.getter(v15, (uint64_t)v21);
  swift_bridgeObjectRelease();
  if (v22[3] == 1)
  {
    Swift::String v16 = (uint64_t *)&demangling cache variable for type metadata for TransformationResult?;
    uint64_t v17 = v21;
LABEL_17:
    outlined destroy of SubmitCommandError?((uint64_t)v17, v16);
    return 0;
  }
  outlined init with copy of PhoneCallNLIntent?((uint64_t)v22, (uint64_t)v23);
  outlined destroy of TransformationResult((uint64_t)v21);
  if (!v24)
  {
    Swift::String v16 = &demangling cache variable for type metadata for PhoneCallNLIntent?;
    uint64_t v17 = v23;
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(v23, v24);
  uint64_t v18 = OUTLINED_FUNCTION_3_35();
  int v20 = v19(v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v20 != 6;
}

void SearchCallHistoryRCHFlowDelegate.init()()
{
}

uint64_t SearchCallHistoryRCHFlowDelegate.__ivar_destroyer()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryRCHFlowDelegate.deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SearchCallHistoryRCHFlowDelegate.__deallocating_deinit()
{
  SearchCallHistoryRCHFlowDelegate.deinit();

  return swift_deallocClassInstance();
}

uint64_t vtable thunk for BaseRCHFlowDelegate.applyParameterValue(value:intent:parameterName:applicationStrategy:_:) dispatching to SearchCallHistoryRCHFlowDelegate.applyParameterValue(value:intent:parameterName:applicationStrategy:_:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6, uint64_t (*a7)(void *, void), uint64_t a8)
{
  return SearchCallHistoryRCHFlowDelegate.applyParameterValue(value:intent:parameterName:applicationStrategy:_:)(a1, a2, a3, a4, a5, a6 & 1, a7, a8);
}

uint64_t protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance SearchCallHistoryRCHFlowDelegate@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(*v1 + direct field offset for SearchCallHistoryRCHFlowDelegate.sharedGlobals, a1);
}

uint64_t specialized SearchCallHistoryAceViewProvider.init(templatingService:sharedGlobals:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[3] = type metadata accessor for AppInfoBuilder();
  v10[4] = &protocol witness table for AppInfoBuilder;
  v10[0] = a3;
  *(void *)(a4 + direct field offset for SearchCallHistoryAceViewProvider.templatingService) = a1;
  outlined init with copy of SignalProviding(a2, a4 + direct field offset for SearchCallHistoryAceViewProvider.sharedGlobals);
  outlined init with copy of SignalProviding((uint64_t)v10, a4 + direct field offset for SearchCallHistoryAceViewProvider.appInfoBuilder);
  uint64_t v8 = DefaultAceViewProvider.init()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

uint64_t specialized SearchCallHistoryTemplatingService.init(sharedGlobals:displayTextCats:phoneCallCommonCats:searchCallHistoryCatFamily:startCallCatFamily:appInfoBuilder:labelTemplating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v16 = type metadata accessor for CATOption();
  __chkstk_darwin(v16 - 8);
  *(void *)((char *)a11 + direct field offset for SearchCallHistoryTemplatingService.searchCallHistoryCatFamily) = a4;
  *(void *)((char *)a11 + direct field offset for SearchCallHistoryTemplatingService.startCallCatFamily) = a5;
  outlined init with copy of SignalProviding(a1, (uint64_t)v23);
  type metadata accessor for StartCallCATs();
  swift_retain();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0xD000000000000010, 0x800000000048C8D0, v23, a2, a3, a6, a7, a8, a9, a10, v17, a11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v18;
}

uint64_t instantiation function for generic protocol witness table for SearchCallHistoryRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type SearchCallHistoryRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>(&lazy protocol witness table cache variable for type SearchCallHistoryRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryRCHFlowDelegate);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata completion function for SearchCallHistoryRCHFlowDelegate()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for SearchCallHistoryRCHFlowDelegate()
{
  return type metadata accessor for SearchCallHistoryRCHFlowDelegate();
}

uint64_t sub_26B0A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t lazy protocol witness table accessor for type SearchCallHistoryRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_74(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_3_72()
{
  return CATWrapper.__allocating_init(options:globals:)();
}

uint64_t OUTLINED_FUNCTION_4_64()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_6_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_51()
{
  return swift_dynamicCast();
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology22UsoEntity_common_AgentC5agent_AF0fg1_H7_PersonC6persontG_27PhoneCallFlowDelegatePlugin0mN11NLv4ContactC7contact_0D9Inference0S5QueryV5queryts5NeverOTg504_s12d10Ontology22fg1_h1_i11CAA0cd1_E7_k3C27mnop11Plugin0hI11rs16C0A9Inference0N5v49VIgggor_AC5agent_AE6persontAH7contact_AK5queryts5X11OIegnrzr_TRAhkpTIgggor_Tf1cn_n(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t), uint64_t a3)
{
  os_log_type_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v18[1] = v3;
    uint64_t v21 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    char v10 = v21;
    char v11 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v12 = *(v11 - 1);
      uint64_t v13 = *v11;
      uint64_t v14 = (char *)v8 + *(int *)(v5 + 48);
      swift_retain();
      swift_retain();
      uint64_t v15 = v19(v14, v12, v13);
      swift_release();
      swift_release();
      *uint64_t v8 = v15;
      uint64_t v21 = v10;
      unint64_t v16 = v10[2];
      if (v16 >= v10[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        char v10 = v21;
      }
      v10[2] = v16 + 1;
      outlined init with take of (contact: PhoneCallNLv4Contact, query: ContactQuery)((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16);
      v11 += 2;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t NLv4UpdateTransformer.transform(updateTask:)@<X0>(unint64_t a1@<X8>)
{
  return NLv4UpdateTransformer.transform(updateTask:)((uint64_t (*)(uint64_t))&dispatch thunk of UsoEntity_common_Communication.participants.getter, (uint64_t (*)(uint64_t))&dispatch thunk of UsoEntity_common_Communication.recipients.getter, a1);
}

{
  return NLv4UpdateTransformer.transform(updateTask:)((uint64_t (*)(uint64_t))&dispatch thunk of UsoEntity_common_PhoneCall.participants.getter, (uint64_t (*)(uint64_t))&dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter, a1);
}

uint64_t NLv4UpdateTransformer.transform(agents:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ContactQuery();
  uint64_t v128 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  v121 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t)&v117 - v9;
  __chkstk_darwin(v8);
  v129 = ((char *)&v117 - v11);
  unint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
  uint64_t v125 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v13);
  v126 = (uint8_t *)&v117 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v120 = (uint64_t)&v117 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v124 = (uint64_t *)((char *)&v117 - v21);
  __chkstk_darwin(v20);
  uint64_t v131 = (uint64_t)&v117 - v22;
  v127 = v2;
  unint64_t v24 = (unint64_t)NLv4UpdateTransformer.sortParticipants(agents:)(a1);
  if (v23 >> 62)
  {
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8));
  }
  if (v25)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_0, v27, v28, "#NLv4UpdateTransformer Found participants to remove", v29, 2u);
      swift_slowDealloc();
    }

    uint64_t v137 = 0;
    long long v135 = 0u;
    long long v136 = 0u;
    *(void *)(a2 + 24) = &type metadata for PhoneCallNLv4Intent;
    *(void *)(a2 + 32) = &protocol witness table for PhoneCallNLv4Intent;
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v30 + 16;
    *(void *)a2 = v30;
    unint64_t v32 = _swiftEmptyArrayStorage;
    v115 = _swiftEmptyArrayStorage;
    v116 = _swiftEmptyArrayStorage;
    BYTE6(v114) = 2;
    WORD2(v114) = 1552;
    LODWORD(v114) = 587401477;
    uint64_t v33 = _swiftEmptyArrayStorage;
    return PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)((uint64_t)v32, (uint64_t)v33, (uint64_t)&v135, 2, 0, 4, 2, 5, v31, v114, (uint64_t)v115, (uint64_t)v116);
  }
  v130 = (char *)v15;
  uint64_t v133 = v5;
  *(void *)&long long v135 = _swiftEmptyArrayStorage;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v34 = result;
  }
  else
  {
    uint64_t v34 = *(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v123 = v10;
  unint64_t v132 = v12;
  v119 = (uint64_t *)a2;
  if (!v34)
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = swift_bridgeObjectRelease_n();
    unint64_t v39 = _swiftEmptyArrayStorage;
    v118 = _swiftEmptyArrayStorage;
LABEL_36:
    uint64_t v5 = (uint64_t)&v117;
    __chkstk_darwin(v47);
    v116 = v127;
    unint64_t v24 = (unint64_t)_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology22UsoEntity_common_AgentC5agent_AF0fg1_H7_PersonC6persontG_27PhoneCallFlowDelegatePlugin0mN11NLv4ContactC7contact_0D9Inference0S5QueryV5queryts5NeverOTg504_s12d10Ontology22fg1_h1_i11CAA0cd1_E7_k3C27mnop11Plugin0hI11rs16C0A9Inference0N5v49VIgggor_AC5agent_AE6persontAH7contact_AK5queryts5X11OIegnrzr_TRAhkpTIgggor_Tf1cn_n((uint64_t)v39, partial apply for closure #3 in NLv4UpdateTransformer.transform(agents:), (uint64_t)&v114);
    swift_bridgeObjectRelease();
    *(void *)&long long v135 = _swiftEmptyArrayStorage;
    uint64_t v122 = *(void *)(v24 + 16);
    if (!v122)
    {
      uint64_t v60 = _swiftEmptyArrayStorage;
LABEL_55:
      swift_bridgeObjectRelease();
      uint64_t v61 = v60[2];
      if (v61)
      {
        *(void *)&long long v135 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v62 = v125;
        unint64_t v63 = v126;
        unint64_t v64 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
        v124 = v60;
        uint64_t v125 = v61;
        uint64_t v65 = (uint64_t)v60 + v64;
        uint64_t v66 = *(void *)(v62 + 72);
        v129 = (v128 + 16);
        v127 = (void *)(v128 + 8);
        uint64_t v67 = v65;
        uint64_t v131 = v66;
        uint64_t v68 = v133;
        id v69 = (void (**)(char *, uint64_t))(v128 + 8);
        do
        {
          outlined init with copy of (contact: PhoneCallNLv4Contact, query: ContactQuery)(v67, (uint64_t)v63);
          uint64_t v70 = *(int *)(v132 + 48);
          uint64_t v71 = &v130[v70];
          *(void *)v130 = *(void *)v63;
          Class isa = (void (*)(char *, uint64_t, uint64_t))v129->isa;
          ((void (*)(char *, uint8_t *, uint64_t))v129->isa)(v71, &v63[v70], v68);
          id v73 = *v69;
          swift_retain();
          v73(v71, v68);
          outlined destroy of SubmitCommandError?((uint64_t)v63, (uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v74 = v131;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v67 += v74;
          --v61;
        }
        while (v61);
        v127 = (void *)v135;
        *(void *)&long long v135 = _swiftEmptyArrayStorage;
        uint64_t v75 = v125;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v76 = (void (**)(uint64_t, char *, uint64_t))(v128 + 32);
        uint64_t v77 = v133;
        uint64_t v78 = v123;
        unint64_t v79 = isa;
        uint64_t v80 = v75;
        do
        {
          uint64_t v81 = (uint64_t)v126;
          outlined init with copy of (contact: PhoneCallNLv4Contact, query: ContactQuery)(v65, (uint64_t)v126);
          uint64_t v82 = *(int *)(v132 + 48);
          v83 = &v130[v82];
          v79(&v130[v82], v81 + v82, v77);
          id v84 = *v76;
          (*v76)(v78, v83, v77);
          outlined destroy of SubmitCommandError?(v81, (uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
          os_log_t v85 = (void *)v135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            os_log_t v85 = (void *)v135;
          }
          unint64_t v86 = v85[2];
          if (v86 >= v85[3] >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            os_log_t v85 = (void *)v135;
          }
          v85[2] = v86 + 1;
          unint64_t v87 = (unint64_t)v85
              + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))
              + *(void *)(v128 + 72) * v86;
          uint64_t v78 = v123;
          uint64_t v77 = v133;
          v84(v87, (char *)v123, v133);
          *(void *)&long long v135 = v85;
          v65 += v131;
          --v80;
        }
        while (v80);
        swift_release();
        uint64_t v88 = v119;
        uint64_t v89 = v127;
      }
      else
      {
        swift_release();
        os_log_t v85 = _swiftEmptyArrayStorage;
        uint64_t v89 = _swiftEmptyArrayStorage;
        uint64_t v88 = v119;
      }
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v90 = type metadata accessor for Logger();
      __swift_project_value_buffer(v90, (uint64_t)static Logger.siriPhone);
      swift_bridgeObjectRetain_n();
      uint64_t v91 = Logger.logObject.getter();
      int v92 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v91, (os_log_type_t)v92))
      {
        uint64_t v93 = (uint8_t *)swift_slowAlloc();
        v130 = (char *)swift_slowAlloc();
        *(void *)&long long v135 = v130;
        *(_DWORD *)uint64_t v93 = 136315138;
        uint64_t v94 = v85[2];
        if (v94)
        {
          LODWORD(v125) = v92;
          v126 = v93;
          v127 = v89;
          v129 = v91;
          v134 = _swiftEmptyArrayStorage;
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          unint64_t v95 = *(void *)(v128 + 16);
          v96 = (char *)v85
              + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
          uint64_t v131 = *(void *)(v128 + 72);
          unint64_t v132 = v95;
          uint64_t v97 = (void (**)(char *, uint64_t))(v128 + 8);
          do
          {
            uint64_t v98 = v121;
            uint64_t v99 = v133;
            ((void (*)(char *, char *, uint64_t))v132)(v121, v96, v133);
            uint64_t v100 = ContactQuery.description.getter();
            uint64_t v102 = v101;
            (*v97)(v98, v99);
            v103 = v134;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              v103 = v134;
            }
            unint64_t v104 = v103[2];
            if (v104 >= v103[3] >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              v103 = v134;
            }
            v103[2] = v104 + 1;
            v105 = &v103[2 * v104];
            v105[4] = v100;
            v105[5] = v102;
            v96 += v131;
            --v94;
          }
          while (v94);
          uint64_t v88 = v119;
          uint64_t v93 = v126;
          uint64_t v91 = v129;
          LOBYTE(v92) = v125;
        }
        uint64_t v106 = Array.description.getter();
        unint64_t v108 = v107;
        swift_bridgeObjectRelease();
        v134 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v106, v108, (uint64_t *)&v135);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v91, (os_log_type_t)v92, "#NLv4UpdateTransformer contactQueries: %s", v93, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      specialized _arrayForceCast<A, B>(_:)();
      v110 = v109;
      swift_bridgeObjectRelease();
      uint64_t v137 = 0;
      long long v135 = 0u;
      long long v136 = 0u;
      specialized _arrayForceCast<A, B>(_:)();
      v112 = v111;
      swift_bridgeObjectRelease();
      v88[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
      v88[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
      uint64_t v113 = swift_allocObject();
      uint64_t v31 = v113 + 16;
      *uint64_t v88 = v113;
      v115 = v112;
      v116 = _swiftEmptyArrayStorage;
      BYTE6(v114) = 2;
      WORD2(v114) = 1551;
      LODWORD(v114) = 587401477;
      unint64_t v32 = v85;
      uint64_t v33 = v110;
      return PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)((uint64_t)v32, (uint64_t)v33, (uint64_t)&v135, 2, 0, 4, 2, 5, v31, v114, (uint64_t)v115, (uint64_t)v116);
    }
    unint64_t v12 = 0;
    unint64_t v48 = (void (**)(char *, char *, uint64_t))(v128 + 16);
    uint64_t v15 = (uint64_t *)(v128 + 8);
    while (1)
    {
      if (v12 >= *(void *)(v24 + 16))
      {
        __break(1u);
        goto LABEL_82;
      }
      uint64_t v5 = *(void *)(v125 + 72);
      uint64_t v49 = (void *)v24;
      v127 = (void *)((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
      uint64_t v50 = (uint64_t)v127 + v24 + v5 * v12;
      uint64_t v51 = (char *)v131;
      outlined init with copy of (contact: PhoneCallNLv4Contact, query: ContactQuery)(v50, v131);
      uint64_t v10 = v133;
      uint64_t v52 = *(int *)(v132 + 48);
      id v53 = (char *)v124 + v52;
      void *v124 = *(void *)v51;
      id v54 = *v48;
      (*v48)(v53, &v51[v52], v10);
      if (one-time initialization token for emptyQuery != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v10, (uint64_t)static ContactQuery.emptyQuery);
      a2 = static ContactQuery.== infix(_:_:)();
      uint64_t v55 = v129;
      v54((char *)v129, v53, v10);
      if (a2)
      {
        uint64_t v5 = *v15;
        ((void (*)(NSObject *, uint64_t))*v15)(v55, v10);
        ((void (*)(char *, uint64_t))v5)(v53, v10);
      }
      else
      {
        if (one-time initialization token for emptyNLv4Query != -1) {
          swift_once();
        }
        uint64_t v10 = v133;
        __swift_project_value_buffer(v133, (uint64_t)static ContactQuery.emptyNLv4Query);
        unint64_t v56 = v129;
        a2 = static ContactQuery.== infix(_:_:)();
        uint64_t v57 = (void (*)(char *, uint64_t))*v15;
        ((void (*)(NSObject *, uint64_t))*v15)(v56, v10);
        v57(v53, v10);
        if ((a2 & 1) == 0)
        {
          outlined init with take of (contact: PhoneCallNLv4Contact, query: ContactQuery)(v131, v120);
          uint64_t v58 = v135;
          unint64_t v24 = (unint64_t)v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v58 = v135;
          }
          uint64_t v10 = (uint64_t)v127;
          unint64_t v59 = *(void *)(v58 + 16);
          a2 = v59 + 1;
          if (v59 >= *(void *)(v58 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v58 = v135;
          }
          *(void *)(v58 + 16) = a2;
          outlined init with take of (contact: PhoneCallNLv4Contact, query: ContactQuery)(v120, v58 + v10 + v59 * v5);
          goto LABEL_52;
        }
      }
      outlined destroy of SubmitCommandError?(v131, (uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
      unint64_t v24 = (unint64_t)v49;
LABEL_52:
      if (v122 == ++v12)
      {
        uint64_t v60 = (void *)v135;
        goto LABEL_55;
      }
    }
  }
  if (v34 >= 1)
  {
    uint64_t v36 = 0;
    unint64_t v37 = v24 & 0xC000000000000001;
    do
    {
      if (v37) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v38 = UsoEntity_common_Agent.asCommonGroup()();
      swift_release();
      if (v38)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        a2 = *(void *)((char *)&dword_10 + (v135 & 0xFFFFFFFFFFFFFF8));
        if (a2 >= *(void *)((char *)&dword_18 + (v135 & 0xFFFFFFFFFFFFFF8)) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v36;
    }
    while (v34 != v36);
    swift_bridgeObjectRelease();
    v118 = (void *)v135;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    unint64_t v39 = _swiftEmptyArrayStorage;
    do
    {
      if (v37)
      {
        uint64_t v40 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v40 = *(void *)(v24 + 8 * v10 + 32);
        swift_retain();
      }
      uint64_t v41 = UsoEntity_common_Agent.asCommonPerson()();
      if (v41)
      {
        uint64_t v42 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          unint64_t v39 = v45;
        }
        unint64_t v43 = v39[2];
        a2 = v43 + 1;
        if (v43 >= v39[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          unint64_t v39 = v46;
        }
        void v39[2] = a2;
        uint64_t v44 = &v39[2 * v43];
        v44[4] = v40;
        v44[5] = v42;
      }
      else
      {
        swift_release();
      }
      ++v10;
    }
    while (v34 != v10);
    swift_bridgeObjectRelease();
    uint64_t v47 = swift_bridgeObjectRelease_n();
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t NLv4UpdateTransformer.transform(updateTask:)@<X0>(uint64_t (*a1)(uint64_t)@<X1>, uint64_t (*a2)(uint64_t)@<X2>, unint64_t a3@<X8>)
{
  uint64_t v6 = dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter();
  if (!v10 || (uint64_t v7 = (void *)a1(v6), swift_release(), !v7))
  {
    uint64_t v8 = dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter();
    if (v10 && (uint64_t v7 = (void *)a2(v8), swift_release(), v7))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v7 = _swiftEmptyArrayStorage;
    }
  }
  NLv4UpdateTransformer.transform(agents:)((unint64_t)v7, a3);
  return swift_bridgeObjectRelease();
}

void *NLv4UpdateTransformer.sortParticipants(agents:)(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListOperators();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v30 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v7 = &v28[-v6];
  uint64_t v38 = _swiftEmptyArrayStorage;
  unint64_t v39 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v8 = (uint64_t)result;
    if (result) {
      goto LABEL_3;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  uint64_t result = (void *)swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_43;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    unint64_t v34 = a1 & 0xC000000000000001;
    unsigned int v33 = enum case for ListOperators.addToSet(_:);
    uint64_t v35 = (void (**)(unsigned char *, uint64_t))(v3 + 8);
    uint64_t v36 = (void (**)(unsigned char *, void, uint64_t))(v3 + 104);
    unsigned int v29 = enum case for ListOperators.removeFromSet(_:);
    uint64_t v31 = v8;
    unint64_t v32 = a1;
    while (1)
    {
      if (v34) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      if (dispatch thunk of CodeGenListEntry.entryAsExpression.getter())
      {
        uint64_t v11 = dispatch thunk of CodeGenExpression.operatorAsString.getter();
        uint64_t v13 = v12;
        swift_release();
      }
      else
      {
        uint64_t v11 = 0;
        uint64_t v13 = 0;
      }
      uint64_t v14 = *v36;
      (*v36)(v7, v33, v2);
      uint64_t v15 = ListOperators.rawValue.getter();
      uint64_t v17 = v16;
      uint64_t v18 = *v35;
      (*v35)(v7, v2);
      if (v13)
      {
        if (v15 == v11 && v13 == v17)
        {
          swift_bridgeObjectRelease();
LABEL_27:
          swift_bridgeObjectRelease();
          if (!dispatch thunk of CodeGenListEntry.entryAsExpression.getter()) {
            goto LABEL_40;
          }
          dispatch thunk of CodeGenExpression.operand.getter();
          swift_release();
          goto LABEL_31;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_27;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v21 = v30;
      v14(v30, v29, v2);
      uint64_t v22 = ListOperators.rawValue.getter();
      uint64_t v24 = v23;
      v18(v21, v2);
      if (!v13)
      {
        swift_bridgeObjectRelease();
LABEL_30:
        dispatch thunk of CodeGenListEntry.entry.getter();
LABEL_31:
        if (v37)
        {
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          unint64_t v27 = (unint64_t)v39;
LABEL_37:
          if (*(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v27 & 0xFFFFFFFFFFFFFF8)) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_release();
          goto LABEL_40;
        }
        goto LABEL_40;
      }
      if (v22 == v11 && v13 == v24)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0) {
          goto LABEL_30;
        }
      }
      if (dispatch thunk of CodeGenListEntry.entryAsExpression.getter())
      {
        dispatch thunk of CodeGenExpression.operand.getter();
        swift_release();
        if (v37)
        {
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          unint64_t v27 = (unint64_t)v38;
          goto LABEL_37;
        }
      }
LABEL_40:
      swift_release();
      if (v31 == ++v10)
      {
        swift_bridgeObjectRelease();
        return v39;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t closure #3 in NLv4UpdateTransformer.transform(agents:)(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return NLv4UpdateTransformer.mapEntityToContactAndQuery(referenceResolver:agent:person:)(a1, a4);
}

uint64_t NLv4UpdateTransformer.mapEntityToContactAndQuery(referenceResolver:agent:person:)(char *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery)?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
  uint64_t v8 = __chkstk_darwin(v7);
  unsigned int v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v28 = (uint64_t *)((char *)&v27 - v10);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  CodeGenBase.entity.getter();
  LOBYTE(a2) = dispatch thunk of RRReferenceResolverProtocol.hasReference(usoEntity:)();
  swift_release();
  if ((a2 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v11 = a1;
  NLv4UpdateTransformer.runSRR(agent:person:)(v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    outlined destroy of SubmitCommandError?((uint64_t)v6, &demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery)?);
LABEL_4:
    type metadata accessor for PhoneCallNLv4Contact();
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = swift_retain();
    uint64_t v14 = specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:)(v13, 1, v12);
    UsoEntity_common_Person.toContactQuery()();
    return v14;
  }
  uint64_t v15 = *(int *)(v7 + 48);
  uint64_t v16 = v28;
  uint64_t v17 = (char *)v28 + v15;
  uint64_t v18 = (char *)v6 + v15;
  uint64_t *v28 = *v6;
  uint64_t v19 = type metadata accessor for ContactQuery();
  char v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "#NLv4UpdateTransformer Found reference to entity in context", v24, 2u);
    swift_slowDealloc();
  }

  uint64_t v25 = &v29[*(int *)(v7 + 48)];
  uint64_t v14 = *v16;
  v20(v25, v17, v19);
  v20(v11, v25, v19);
  return v14;
}

uint64_t NLv4UpdateTransformer.runSRR(agent:person:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v46 = type metadata accessor for PhoneRRTarget.Target(0);
  __chkstk_darwin(v46);
  uint64_t v3 = (void **)((char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for MatchedResultsSetting();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget?);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PhoneRRTarget(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = CodeGenBase.entity.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for MatchedResultsSetting.defaultMatching(_:), v4);
  static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)(v14, v1, (uint64_t)v7, (uint64_t)v10);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) != 1)
  {
    uint64_t v17 = v47;
    outlined init with take of PhoneRRTarget((uint64_t)v10, (uint64_t)v13);
    type metadata accessor for PhoneCallNLv4Contact();
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = swift_retain();
    uint64_t v20 = specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:)(v19, 1, v18);
    uint64_t v50 = v20;
    outlined init with copy of PhoneRRTarget.Target((uint64_t)v13, (uint64_t)v3);
    uint64_t v21 = (uint64_t)v13;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_retain();
        unint64_t v25 = dispatch thunk of UsoEntity_common_Group.members.getter();
        if (!v25) {
          goto LABEL_32;
        }
        uint64_t v26 = v25 >> 62
            ? _CocoaArrayWrapper.endIndex.getter()
            : *(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8));
        swift_bridgeObjectRelease();
        if (v26 != 1) {
          goto LABEL_32;
        }
        unint64_t v27 = dispatch thunk of UsoEntity_common_Group.members.getter();
        unint64_t v28 = v27;
        if (!v27) {
          goto LABEL_26;
        }
        if (v27 >> 62)
        {
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_12:
            specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v28 & 0xC000000000000001) == 0, v28);
            if ((v28 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            swift_bridgeObjectRelease();
            dispatch thunk of CodeGenListEntry.entry.getter();
            swift_release();
            if (v48)
            {
              CodeGenBase.entity.getter();
              swift_release();
            }
LABEL_26:
            type metadata accessor for UsoEntity_common_Person();
            static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
            swift_release();
            if (v49)
            {
              if (one-time initialization token for siriPhone != -1) {
                swift_once();
              }
              uint64_t v36 = type metadata accessor for Logger();
              __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
              uint64_t v37 = Logger.logObject.getter();
              os_log_type_t v38 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v37, v38))
              {
                unint64_t v39 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)unint64_t v39 = 0;
                _os_log_impl(&dword_0, v37, v38, "#NLv4UpdateTransformer SRR found common_Group with 1 common_Person", v39, 2u);
                swift_slowDealloc();
              }

              uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
              *uint64_t v17 = v20;
              UsoEntity_common_Person.toContactQuery()();
              swift_release();
              swift_release();
              swift_release();
              outlined destroy of PhoneRRTarget(v21);
              goto LABEL_17;
            }
LABEL_32:
            swift_release();
            if (one-time initialization token for siriPhone != -1) {
              swift_once();
            }
            uint64_t v40 = type metadata accessor for Logger();
            __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
            uint64_t v41 = Logger.logObject.getter();
            os_log_type_t v42 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v41, v42))
            {
              unint64_t v43 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v43 = 0;
              _os_log_impl(&dword_0, v41, v42, "#NLv4UpdateTransformer SRR found common_Group with >1 member in context but this is not supported", v43, 2u);
              swift_slowDealloc();
            }

            swift_release();
            goto LABEL_37;
          }
        }
        else if (*(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8)))
        {
          goto LABEL_12;
        }
        swift_bridgeObjectRelease();
        goto LABEL_26;
      case 2u:
        outlined destroy of PhoneRRTarget((uint64_t)v13);
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
        uint64_t v30 = (char *)v17 + *(int *)(v29 + 48);
        uint64_t v31 = type metadata accessor for ContactQuery();
        (*(void (**)(char *, void **, uint64_t))(*(void *)(v31 - 8) + 32))(v30, v3, v31);
        *uint64_t v17 = v50;
LABEL_17:
        uint64_t v16 = (uint64_t)v17;
        uint64_t v24 = 0;
        uint64_t v15 = v29;
        return __swift_storeEnumTagSinglePayload(v16, v24, 1, v15);
      case 3u:
        swift_release();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v32 = type metadata accessor for Logger();
        __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
        unsigned int v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v35 = 0;
          _os_log_impl(&dword_0, v33, v34, "##NLv4UpdateTransformer SRR can't resolve apps", v35, 2u);
          swift_slowDealloc();
        }

LABEL_37:
        swift_release();
        outlined destroy of PhoneRRTarget(v21);
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
        uint64_t v16 = (uint64_t)v17;
        goto LABEL_38;
      default:
        uint64_t v22 = *v3;
        specialized SiriPhoneContact.update(person:)();
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
        *uint64_t v17 = v20;
        swift_retain();
        INPerson.toContactQuery()();
        swift_release();

        outlined destroy of PhoneRRTarget((uint64_t)v13);
        uint64_t v16 = (uint64_t)v17;
        uint64_t v24 = 0;
        uint64_t v15 = v23;
        return __swift_storeEnumTagSinglePayload(v16, v24, 1, v15);
    }
  }
  outlined destroy of SubmitCommandError?((uint64_t)v10, &demangling cache variable for type metadata for PhoneRRTarget?);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
  uint64_t v16 = (uint64_t)v47;
LABEL_38:
  uint64_t v24 = 1;
  return __swift_storeEnumTagSinglePayload(v16, v24, 1, v15);
}

ValueMetadata *type metadata accessor for NLv4UpdateTransformer()
{
  return &type metadata for NLv4UpdateTransformer;
}

uint64_t sub_26D2A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t partial apply for closure #3 in NLv4UpdateTransformer.transform(agents:)(char *a1, uint64_t a2, uint64_t a3)
{
  return closure #3 in NLv4UpdateTransformer.transform(agents:)(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t outlined init with copy of (contact: PhoneCallNLv4Contact, query: ContactQuery)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of (contact: PhoneCallNLv4Contact, query: ContactQuery)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (contact: PhoneCallNLv4Contact, query: ContactQuery));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of PhoneRRTarget.Target(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneRRTarget.Target(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PhoneRRTarget(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhoneRRTarget(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CommunalDeviceEmergencyFlow.__allocating_init(parse:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CATOption();
  __chkstk_darwin(v5 - 8);
  OUTLINED_FUNCTION_65_2();
  uint64_t v6 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v6);
  outlined init with copy of SignalProviding(a2, (uint64_t)v16);
  type metadata accessor for UnsupportedFlowCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v12 = CATWrapperSimple.__allocating_init(options:globals:)();
  uint64_t v13 = (*(uint64_t (**)(uint64_t, unsigned char *, unsigned char *, uint64_t))(v2 + 168))(3, v11, v16, v12);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
  return v13;
}

uint64_t CommunalDeviceEmergencyFlow.identifiedUser.getter()
{
  return CommunalDeviceEmergencyFlow.identifiedUser.getter(&demangling cache variable for type metadata for SiriEnvironmentValue<IdentifiedUser>);
}

uint64_t CommunalDeviceEmergencyFlow.multiUserState.getter()
{
  return CommunalDeviceEmergencyFlow.identifiedUser.getter(&demangling cache variable for type metadata for SiriEnvironmentValue<MultiUserState>);
}

uint64_t CommunalDeviceEmergencyFlow.identifiedUser.getter(uint64_t *a1)
{
  return swift_release();
}

uint64_t CommunalDeviceEmergencyFlow.parse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_parse;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_15();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t CommunalDeviceEmergencyFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals, a1);
}

uint64_t CommunalDeviceEmergencyFlow.unsupportedFlowCATsSimple.getter()
{
  return swift_retain();
}

void CommunalDeviceEmergencyFlow.state.didset()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v10 = v6;
    uint64_t v7 = (char *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_state);
    swift_beginAccess();
    uint64_t v8 = CommunalDeviceEmergencyFlow.State.description.getter(*v7);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v3, v4, "#CommunalDeviceEmergencyFlow state => %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t CommunalDeviceEmergencyFlow.state.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_state);
  swift_beginAccess();
  return *v1;
}

void CommunalDeviceEmergencyFlow.state.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_state);
  swift_beginAccess();
  *uint64_t v3 = a1;
  CommunalDeviceEmergencyFlow.state.didset();
}

uint64_t CommunalDeviceEmergencyFlow.__allocating_init(state:parse:sharedGlobals:unsupportedFlowCATsSimple:)(char a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  CommunalDeviceEmergencyFlow.init(state:parse:sharedGlobals:unsupportedFlowCATsSimple:)(a1, a2, a3, a4);
  return v8;
}

uint64_t CommunalDeviceEmergencyFlow.init(state:parse:sharedGlobals:unsupportedFlowCATsSimple:)(char a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriEnvironmentValue<IdentifiedUser>);
  swift_allocObject();
  *(void *)(v4 + 16) = SiriEnvironmentValue.init(_:)();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriEnvironmentValue<MultiUserState>);
  swift_allocObject();
  *(void *)(v4 + 24) = SiriEnvironmentValue.init(_:)();
  *(unsigned char *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_state) = a1;
  uint64_t v10 = v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_parse;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v10, a2);
  outlined init with take of AppSelectionSignalComponent(a3, v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals);
  *(void *)(v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_unsupportedFlowCATsSimple) = a4;
  return v5;
}

BOOL CommunalDeviceEmergencyFlow.on(input:)()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v8 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v5 = 136315138;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x7475706E69286E6FLL, 0xEA0000000000293ALL, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v3, v4, "#CommunalDeviceEmergencyFlow %s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  return (*(unsigned __int8 (**)(uint64_t))(*(void *)v1 + 144))(v6) == 3;
}

uint64_t CommunalDeviceEmergencyFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[33] = v2;
  v1[34] = v0;
  uint64_t v3 = type metadata accessor for CompanionDeviceInfoRequirement();
  v1[35] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[36] = v4;
  v1[37] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for ExecuteOnRemoteDeviceSpecification();
  v1[38] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[39] = v6;
  v1[40] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for Parse();
  v1[41] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[42] = v8;
  v1[43] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for Input();
  v1[44] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[45] = v10;
  v1[46] = OUTLINED_FUNCTION_35();
  uint64_t v11 = type metadata accessor for IdentifiedUser();
  v1[47] = v11;
  OUTLINED_FUNCTION_19_0(v11);
  v1[48] = v12;
  v1[49] = OUTLINED_FUNCTION_35();
  v1[50] = type metadata accessor for MultiUserState();
  v1[51] = OUTLINED_FUNCTION_35();
  return _swift_task_switch(CommunalDeviceEmergencyFlow.execute(), 0, 0);
}

{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint8_t *buf;
  uint8_t *bufa;
  uint64_t v62;
  uint64_t v63;
  os_log_type_t type[8];
  void *v65;
  void *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;

  id v69 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[31] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x2865747563657865, 0xE900000000000029, &v68);
    uint64_t v7 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 144))(v7);
    uint64_t v9 = CommunalDeviceEmergencyFlow.State.description.getter(v8);
    v0[32] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v2, v3, "#CommunalDeviceEmergencyFlow %s, state = %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }
  uint64_t v11 = (*(unsigned __int8 (**)(void))(*(void *)v0[34] + 144))();
  if (v11 == 4)
  {
    uint64_t v18 = v0[34];
    uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals + 24);
    uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v18 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals), v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
    uint64_t v21 = v0[5];
    uint64_t v22 = v0[7];
    uint64_t v23 = __swift_project_boxed_opaque_existential_1(v0 + 2, v21);
    v0[11] = v21;
    v0[12] = v22;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 8);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(boxed_opaque_existential_1, v23, v21);
    type metadata accessor for SimpleOutputFlowAsync();
    swift_allocObject();
    swift_retain();
    unint64_t v25 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    v0[24] = v25;
    static ExecuteResponse.complete<A>(next:)();
  }
  else
  {
    if (v11 != 3)
    {
      static ExecuteResponse.complete()();
      goto LABEL_18;
    }
    uint64_t v65 = v0 + 13;
    uint64_t v66 = v0 + 18;
    swift_retain_n();
    uint64_t v12 = Logger.logObject.getter();
    uint64_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = v0[34];
      uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v68 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v15 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriEnvironmentValue<MultiUserState>);
      swift_getKeyPath();
      swift_getKeyPath();
      v0[29] = v14;
      swift_retain();
      static SiriEnvironmentValue.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v16 = String.init<A>(describing:)();
      v0[30] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v12, v13, "#CommunalDeviceEmergencyFlow MUXState = %s", v15, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    swift_retain_n();
    uint64_t v26 = Logger.logObject.getter();
    unint64_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = v0[48];
      uint64_t v29 = v0[49];
      buf = (uint8_t *)v0[47];
      uint64_t v30 = v0[34];
      uint64_t v67 = v27;
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_47();
      uint64_t v68 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v31 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriEnvironmentValue<IdentifiedUser>);
      swift_getKeyPath();
      swift_getKeyPath();
      v0[27] = v30;
      swift_retain();
      static SiriEnvironmentValue.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      lazy protocol witness table accessor for type IdentifiedUser and conformance IdentifiedUser(&lazy protocol witness table cache variable for type IdentifiedUser and conformance IdentifiedUser, (void (*)(uint64_t))&type metadata accessor for IdentifiedUser);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      os_log_type_t v34 = v33;
      (*(void (**)(uint64_t, uint8_t *))(v28 + 8))(v29, buf);
      v0[28] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v26, v67, "#CommunalDeviceEmergencyFlow User = %s", v31, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    unint64_t v59 = v0[45];
    bufa = (uint8_t *)v0[44];
    uint64_t v35 = v0[42];
    uint64_t v55 = v0[43];
    uint64_t v36 = v0[40];
    unint64_t v56 = v0[41];
    uint64_t v57 = v0[46];
    uint64_t v37 = v0[39];
    uint64_t v58 = v0[38];
    uint64_t v62 = v0[36];
    os_log_type_t v38 = v0[34];
    unint64_t v63 = v0[35];
    *(void *)os_log_type_t type = v0[37];
    unint64_t v39 = (void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals);
    uint64_t v40 = *(void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals + 24);
    uint64_t v41 = *(void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals), v40);
    (*(void (**)(uint64_t, uint64_t))(v41 + 104))(v40, v41);
    os_log_type_t v42 = v0[21];
    unint64_t v43 = v0[22];
    __swift_project_boxed_opaque_existential_1(v66, v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v55, v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_parse, v56);
    Input.init(parse:)();
    (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v36, enum case for ExecuteOnRemoteDeviceSpecification.userCompanion(_:), v58);
    uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v43 + 96))(v57, v36, v39, v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v58);
    (*(void (**)(uint64_t, uint8_t *))(v59 + 8))(v57, bufa);
    v0[23] = v44;
    uint64_t v45 = v39[3];
    uint64_t v46 = v39[4];
    __swift_project_boxed_opaque_existential_1(v39, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 104))(v45, v46);
    uint64_t v47 = v0[16];
    uint64_t v48 = v0[17];
    __swift_project_boxed_opaque_existential_1(v65, v47);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CommonFlowGuard>);
    uint64_t v49 = type metadata accessor for CommonFlowGuard();
    OUTLINED_FUNCTION_19_0(v49);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_467710;
    type metadata accessor for CompanionCompatibilityCheckFlowStrategy();
    (*(void (**)(os_log_type_t *, void, uint64_t))(v62 + 104))(*(os_log_type_t **)type, enum case for CompanionDeviceInfoRequirement.anyKnownCompanion(_:), v63);
    static CompanionCompatibilityCheckFlowStrategy.require(_:redirectToServerOnFailure:)();
    (*(void (**)(os_log_type_t *, uint64_t))(v62 + 8))(*(os_log_type_t **)type, v63);
    static CommonFlowGuard.ensuringUserHasSupportedCompanion(using:)();
    swift_release();
    uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 104))(v50, v47, v48);
    swift_bridgeObjectRelease();
    v0[25] = v51;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<ExecuteOnRemoteFlowResult>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<GuardFlowResult>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyValueFlow<ExecuteOnRemoteFlowResult> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<ExecuteOnRemoteFlowResult>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyValueFlow<GuardFlowResult> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<GuardFlowResult>);
    uint64_t v52 = Flow.guarded<A>(by:)();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    v0[26] = v52;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConditionalFlow<ExecuteOnRemoteFlowResult>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type ConditionalFlow<ExecuteOnRemoteFlowResult> and conformance ConditionalFlow<A>, &demangling cache variable for type metadata for ConditionalFlow<ExecuteOnRemoteFlowResult>);
    static ExecuteResponse.ongoing<A>(next:childCompletion:)();
    swift_release();
  }
  swift_release();
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v53();
}

uint64_t closure #1 in CommunalDeviceEmergencyFlow.execute()(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  type metadata accessor for DialogPhase();
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(closure #1 in CommunalDeviceEmergencyFlow.execute(), 0, 0);
}

uint64_t closure #1 in CommunalDeviceEmergencyFlow.execute()()
{
  uint64_t v1 = *(int **)(class metadata base offset for UnsupportedFlowCATsSimple
               + **(void **)(*(void *)(v0 + 64)
                             + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_unsupportedFlowCATsSimple)
               + 48);
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in CommunalDeviceEmergencyFlow.execute();
  return v4();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(closure #1 in CommunalDeviceEmergencyFlow.execute(), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

uint64_t closure #1 in CommunalDeviceEmergencyFlow.execute()(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v8();
  }
  else
  {
    *(void *)(v5 + 112) = a1;
    return _swift_task_switch(closure #1 in CommunalDeviceEmergencyFlow.execute(), 0, 0);
  }
}

uint64_t closure #1 in CommunalDeviceEmergencyFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[14];
  uint64_t v12 = v10[8];
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v13 = (void *)(v12 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals);
  uint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals + 24);
  uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 136))(v14, v15);
  uint64_t v16 = v10[5];
  uint64_t v17 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_46A030;
  *(void *)(v18 + 32) = v11;
  uint64_t v28 = v18;
  specialized Array._endMutation()();
  v10[15] = v28;
  uint64_t v19 = *(void *)(v17 + 8);
  id v20 = v11;
  uint64_t v24 = (void *)swift_task_alloc();
  v10[16] = v24;
  *uint64_t v24 = v10;
  v24[1] = closure #1 in CommunalDeviceEmergencyFlow.execute();
  uint64_t v25 = v10[12];
  uint64_t v26 = v10[7];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v26, v28, v25, v16, v19, v21, v22, v23, a9, a10);
}

uint64_t closure #1 in closure #1 in CommunalDeviceEmergencyFlow.execute()()
{
  return OutputGenerationManifest.canUseServerTTS.setter();
}

uint64_t CommunalDeviceEmergencyFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

void CommunalDeviceEmergencyFlow.onExecuteOnRemoteFlowComplete(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ExecuteOnRemoteFlowResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (void (*)(uint64_t))((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v42 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConditionalFlowResult<ExecuteOnRemoteFlowResult>);
  __chkstk_darwin(v16 - 8);
  OUTLINED_FUNCTION_65_2();
  outlined init with copy of ConditionalFlowResult<ExecuteOnRemoteFlowResult>(a1, (uint64_t)v1);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (result: ExecuteOnRemoteFlowResult));
  if (__swift_getEnumTagSinglePayload((uint64_t)v1, 1, v17) == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_24_1(&dword_0, v21, v22, "#CommunalDeviceEmergencyFlow Did not pass GuardFlows");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v23 = (char *)v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_state;
    OUTLINED_FUNCTION_11_45();
    *uint64_t v23 = 4;
LABEL_13:
    CommunalDeviceEmergencyFlow.state.didset();
    return;
  }
  if ((*(unsigned int (**)(id *, uint64_t))(v6 + 88))(v1, v4) == enum case for ExecuteOnRemoteFlowResult.success(_:))
  {
    (*(void (**)(id *, uint64_t))(v6 + 96))(v1, v4);

    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_24_1(&dword_0, v27, v28, "#CommunalDeviceEmergencyFlow Exited ExecuteOnRemoteFlow successfully");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v29 = (char *)v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_state;
    OUTLINED_FUNCTION_11_45();
    *uint64_t v29 = 1;
    goto LABEL_13;
  }
  uint64_t v45 = v1;
  (*(void (**)(char *, id *, uint64_t))(v6 + 32))(v15, v1, v4);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v31(v13, v15, v4);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = OUTLINED_FUNCTION_47();
    os_log_t v43 = v32;
    uint64_t v35 = (uint8_t *)v34;
    uint64_t v44 = OUTLINED_FUNCTION_14_0();
    v47[0] = v44;
    *(_DWORD *)uint64_t v35 = 136315138;
    os_log_type_t v42 = v35 + 4;
    v31((char *)v10, v13, v4);
    uint64_t v36 = String.init<A>(describing:)();
    uint64_t v10 = (void (*)(uint64_t))v37;
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = OUTLINED_FUNCTION_5_54();
    v10(v38);
    os_log_t v39 = v43;
    _os_log_impl(&dword_0, v43, v33, "#CommunalDeviceEmergencyFlow Exited ExecuteOnRemoteFlow with result other than success %s", v35, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    uint64_t v40 = OUTLINED_FUNCTION_5_54();
    v10(v40);
  }
  uint64_t v41 = (char *)v45 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_state;
  swift_beginAccess();
  *uint64_t v41 = 4;
  CommunalDeviceEmergencyFlow.state.didset();
  ((void (*)(char *, uint64_t))v10)(v15, v4);
}

uint64_t CommunalDeviceEmergencyFlow.State.description.getter(char a1)
{
  if (a1 == 3) {
    return 0x6C616974696E692ELL;
  }
  if (a1 == 4) {
    return 0x64656C6961662ELL;
  }
  v2._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0x74656C706D6F632ELL;
}

BOOL static CommunalDeviceEmergencyFlow.State.__derived_enum_equals(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 == 4) {
    return a2 == 4;
  }
  if (a1 == 3) {
    return a2 == 3;
  }
  if (a2 - 3 < 2) {
    return 0;
  }
  return a1 == a2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CommunalDeviceEmergencyFlow.State()
{
  return CommunalDeviceEmergencyFlow.State.description.getter(*v0);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CommunalDeviceEmergencyFlow.State(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static CommunalDeviceEmergencyFlow.State.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t CommunalDeviceEmergencyFlow.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_parse;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceEmergencyFlow_sharedGlobals);
  swift_release();
  return v0;
}

uint64_t CommunalDeviceEmergencyFlow.__deallocating_deinit()
{
  CommunalDeviceEmergencyFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance CommunalDeviceEmergencyFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance CommunalDeviceEmergencyFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t protocol witness for Flow.execute() in conformance CommunalDeviceEmergencyFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 184) + **(int **)(**(void **)v1 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance CommunalDeviceEmergencyFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for CommunalDeviceEmergencyFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t key path getter for CommunalDeviceEmergencyFlow.identifiedUser : CommunalDeviceEmergencyFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return swift_release();
}

uint64_t partial apply for closure #1 in CommunalDeviceEmergencyFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in CommunalDeviceEmergencyFlow.execute()(v3, v0);
}

uint64_t sub_26FB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path getter for CommunalDeviceEmergencyFlow.identifiedUser : CommunalDeviceEmergencyFlow(a1, a2, a3, &demangling cache variable for type metadata for SiriEnvironmentValue<IdentifiedUser>);
}

uint64_t sub_26FB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path getter for CommunalDeviceEmergencyFlow.identifiedUser : CommunalDeviceEmergencyFlow(a1, a2, a3, &demangling cache variable for type metadata for SiriEnvironmentValue<MultiUserState>);
}

uint64_t type metadata accessor for CommunalDeviceEmergencyFlow()
{
  uint64_t result = type metadata singleton initialization cache for CommunalDeviceEmergencyFlow;
  if (!type metadata singleton initialization cache for CommunalDeviceEmergencyFlow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t base witness table accessor for Flow in CommunalDeviceEmergencyFlow()
{
  return lazy protocol witness table accessor for type IdentifiedUser and conformance IdentifiedUser(&lazy protocol witness table cache variable for type CommunalDeviceEmergencyFlow and conformance CommunalDeviceEmergencyFlow, (void (*)(uint64_t))type metadata accessor for CommunalDeviceEmergencyFlow);
}

uint64_t base witness table accessor for SiriEnvironmentLocating in CommunalDeviceEmergencyFlow()
{
  return lazy protocol witness table accessor for type IdentifiedUser and conformance IdentifiedUser(&lazy protocol witness table cache variable for type CommunalDeviceEmergencyFlow and conformance CommunalDeviceEmergencyFlow, (void (*)(uint64_t))type metadata accessor for CommunalDeviceEmergencyFlow);
}

uint64_t lazy protocol witness table accessor for type IdentifiedUser and conformance IdentifiedUser(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_26FCC0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 144))();
  *a2 = result;
  return result;
}

void sub_26FD0C(char *a1)
{
}

uint64_t ObjC metadata update function for CommunalDeviceEmergencyFlow()
{
  return type metadata accessor for CommunalDeviceEmergencyFlow();
}

uint64_t type metadata completion function for CommunalDeviceEmergencyFlow()
{
  uint64_t result = type metadata accessor for Parse();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CommunalDeviceEmergencyFlow.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x26FEA0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CommunalDeviceEmergencyFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x26FF88);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommunalDeviceEmergencyFlow.State()
{
  return &type metadata for CommunalDeviceEmergencyFlow.State;
}

uint64_t OUTLINED_FUNCTION_11_45()
{
  return swift_beginAccess();
}

uint64_t CallTypesSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                     + **(void **)(v6 + 40)
                                                     + 416))(a5, a6);
}

uint64_t CallTypesSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a5 callTypes];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = _swiftEmptyArrayStorage;
  uint64_t v17 = (uint64_t *)(v16 + 16);
  aBlock[4] = OUTLINED_FUNCTION_9_28;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned _INPBCallRecordType) -> ();
  aBlock[3] = &block_descriptor_5;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  INCallRecordTypeOptionsEnumerateBackingTypes();
  _Block_release(v18);
  swift_beginAccess();
  uint64_t v19 = *v17;
  swift_bridgeObjectRetain();
  swift_release();
  if ((INSearchCallHistoryIntent.unseen.getter() & 1) == 0)
  {
    if (*(void *)(v19 + 16)) {
      goto LABEL_9;
    }
    __break(1u);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v19 = v25;
  }
  unint64_t v20 = *(void *)(v19 + 16);
  if (v20 >= *(void *)(v19 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v19 = v26;
  }
  *(void *)(v19 + 16) = v20 + 1;
  uint64_t v21 = v19 + 16 * v20;
  *(void *)(v21 + 32) = 0x6E6565736E75;
  *(void *)(v21 + 40) = 0xE600000000000000;
LABEL_9:
  uint64_t v22 = *(void **)(v9 + 40);
  swift_bridgeObjectRetain();
  SpeakableString.init(print:speak:)();
  uint64_t v23 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v23);
  (*(void (**)(char *, double, void, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                                   + *v22
                                                                   + 64))(v15, (double)*(uint64_t *)(v19 + 16), 0, a7, a8);
  outlined destroy of SpeakableString?((uint64_t)v15);
  return swift_bridgeObjectRelease();
}

uint64_t CallTypesSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_69(a1, a2, a3, a4, a5, a6, a7, a8);
  return (*(uint64_t (**)(uint64_t))(class metadata base offset for SearchCallHistoryCATs + v9 + 960))(v8);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:) in conformance CallTypesSlotTemplating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return CallTypesSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_270394()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for CallTypesSlotTemplating()
{
  return &type metadata for CallTypesSlotTemplating;
}

id SAUIPlayNotificationSound.init(notificationId:soundType:)(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v4 = v3;
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  [v3 setNotificationId:v5];

  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  return v3;
}

id SASTButtonItem.init(label:commands:centered:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v6 setCentered:a4 & 1];
  id v7 = [objc_allocWithZone((Class)SASTCommandTemplateAction) init];
  outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(a3, (uint64_t)v7, &demangling cache variable for type metadata for SAClientBoundCommand);
  OUTLINED_FUNCTION_1_75(v8, "setAction:");

  id v9 = [objc_allocWithZone((Class)SAUIDecoratedText) init];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  OUTLINED_FUNCTION_1_75(v10, "setDecoratedLabel:");

  return v6;
}

id SAPhoneCallConfirmationSnippet.init(confirmOption:confirmationDisplayText:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAUIConfirmationOptions);
  id v6 = v5;
  id v7 = a1;
  id v8 = SAUIConfirmationOptions.init(denyOption:confirmOption:)(0, v7);
  [v6 setConfirmationOptions:v8];

  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  [v6 setConfirmationDisplayText:v9];

  return v6;
}

id SAUIConfirmationOption.init(label:type:iconType:commands:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  if (a6)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  [v9 setIconType:v10];

  outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(a7, (uint64_t)v9, &demangling cache variable for type metadata for SAClientBoundCommand);
  return v9;
}

id SAUIConfirmationOptions.init(denyOption:confirmOption:)(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v5 = outlined bridged method (pb) of @objc SAUIConfirmationOption.commands.getter(a2);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
    v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v5 = swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  OUTLINED_FUNCTION_1_2(v5, "setConfirmCommands:");

  if (!a1
    || (id v7 = (void *)outlined bridged method (ob) of @objc SAUIConfirmationOption.commands.getter(a1)) == 0)
  {
    swift_bridgeObjectRelease();
    id v7 = _swiftEmptyArrayStorage;
  }
  outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter((uint64_t)v7, (uint64_t)v4, &demangling cache variable for type metadata for SAClientBoundCommand);
  uint64_t v8 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(a2, (SEL *)&selRef_label);
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    uint64_t v8 = swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  OUTLINED_FUNCTION_1_2(v8, "setConfirmText:");

  if (a1 && (uint64_t v11 = outlined bridged method (ob) of @objc SAUIConfirmationOption.label.getter(a1), v12))
  {
    NSString v13 = String._bridgeToObjectiveC()();
    uint64_t v11 = swift_bridgeObjectRelease();
  }
  else
  {
    NSString v13 = 0;
  }
  OUTLINED_FUNCTION_1_2(v11, "setDenyText:");

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  if (a1)
  {
    id v14 = a1;
    id v15 = a2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
      OUTLINED_FUNCTION_7_59();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    id v16 = a2;
  }
  id v17 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    OUTLINED_FUNCTION_7_59();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  outlined bridged method (mbnn) of @objc SAUIConfirmationView.allConfirmationOptions.setter((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v4, &lazy cache variable for type metadata for SAUIConfirmationOption);
  return v4;
}

id SASTItemGroup.init(items:)()
{
  return SASTItemGroup.init(items:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  uint64_t v2 = [objc_allocWithZone((Class)OUTLINED_FUNCTION_6_59()) init];
  outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(v1, (uint64_t)v2, v0);
  return v2;
}

id SAAppsLaunchApp.init(app:)(uint64_t a1)
{
  return SAAppsLaunchApp.init(app:)(a1, (const char **)&selRef_setLaunchId_);
}

id SAAceConfirmationContext.init(reason:)(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  outlined bridged method (mbnn) of @objc SAAceConfirmationContext.reason.setter(a1, a2, v4);
  return v4;
}

id SASTCommandTemplateAction.init(commands:)()
{
  return SASTItemGroup.init(items:)();
}

id SAIntentGroupHandleIntent.init(intent:appIdentifier:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_65_0();
  id v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  UUID.init()();
  uint64_t v11 = UUID.uuidString.getter();
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
  outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v11, v13, v10);

  id v14 = v10;
  if (a3)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    id v14 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  OUTLINED_FUNCTION_1_2((uint64_t)v14, "setAppId:");

  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupProtobufMessage);
  id v16 = a1;
  id v17 = SAIntentGroupProtobufMessage.init(intent:)(v16);
  OUTLINED_FUNCTION_1_2((uint64_t)v17, "setIntent:");

  return v10;
}

id SAUISash.init(app:)(uint64_t a1)
{
  return SAAppsLaunchApp.init(app:)(a1, (const char **)&selRef_setApplicationBundleIdentifier_);
}

id SAAppsLaunchApp.init(app:)(uint64_t a1, const char **a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v5 = App.appIdentifier.getter();
  if (v6)
  {
    String._bridgeToObjectiveC()();
    uint64_t v5 = OUTLINED_FUNCTION_2_87();
  }
  else
  {
    uint64_t v2 = 0;
  }
  OUTLINED_FUNCTION_1_75(v5, *a2);

  swift_release();
  return v4;
}

id SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v9 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_65_0();
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  [v13 setCanUseServerTTS:a5 & 1];
  id v14 = v13;
  UUID.init()();
  uint64_t v15 = UUID.uuidString.getter();
  uint64_t v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v6, v9);
  outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v15, v17, v14);

  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class isa = NSNumber.init(integerLiteral:)(a6 & 1).super.super.isa;
  [v14 setListenAfterSpeaking:isa];

  return v14;
}

id SAUIButton.init(text:commands:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = [objc_allocWithZone((Class)OUTLINED_FUNCTION_6_59()) init];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(a3, (uint64_t)v4, &demangling cache variable for type metadata for SAClientBoundCommand);

  return v4;
}

id SAUIConfirmationView.init(confirmOption:denyOption:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = outlined bridged method (pb) of @objc SAUIConfirmationOption.commands.getter(a1);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
    Array._bridgeToObjectiveC()();
    uint64_t v6 = OUTLINED_FUNCTION_2_87();
  }
  else
  {
    uint64_t v2 = 0;
  }
  OUTLINED_FUNCTION_1_75(v6, "setConfirmCommands:");

  uint64_t v7 = outlined bridged method (pb) of @objc SAUIConfirmationOption.commands.getter(a2);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
    Array._bridgeToObjectiveC()();
    uint64_t v7 = OUTLINED_FUNCTION_2_87();
  }
  else
  {
    uint64_t v2 = 0;
  }
  OUTLINED_FUNCTION_1_75(v7, "setDenyCommands:");

  uint64_t v8 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(a1, (SEL *)&selRef_label);
  if (v9)
  {
    String._bridgeToObjectiveC()();
    uint64_t v8 = OUTLINED_FUNCTION_2_87();
  }
  else
  {
    uint64_t v2 = 0;
  }
  OUTLINED_FUNCTION_1_75(v8, "setConfirmText:");

  uint64_t v10 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(a2, (SEL *)&selRef_label);
  if (v11)
  {
    String._bridgeToObjectiveC()();
    uint64_t v10 = OUTLINED_FUNCTION_2_87();
  }
  else
  {
    uint64_t v2 = 0;
  }
  OUTLINED_FUNCTION_1_75(v10, "setDenyText:");

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_469DA0;
  *(void *)(v12 + 32) = a2;
  *(void *)(v12 + 40) = a1;
  uint64_t v14 = v12;
  specialized Array._endMutation()();
  outlined bridged method (mbnn) of @objc SAUIConfirmationView.allConfirmationOptions.setter(v14, (uint64_t)v5, &lazy cache variable for type metadata for SAUIConfirmationOption);

  return v5;
}

id SAABPersonPicker.init(canUseServerTTS:showImmediately:canBeRefreshed:)(char a1, char a2, char a3)
{
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  [v6 setShowImmediately:a2 & 1];
  [v6 setCanBeRefreshed:a3 & 1];
  [v6 setCanUseServerTTS:a1 & 1];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();

  return v6;
}

id SAUIDecoratedText.init(label:)()
{
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  return v0;
}

id static SASTItemGroup.makeButtonGroup(label:commands:centered:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_46A030;
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SASTButtonItem);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v8 + 32) = SASTButtonItem.init(label:commands:centered:)(a1, a2, a3, a4);
  specialized Array._endMutation()();
  id v9 = [objc_allocWithZone((Class)SASTItemGroup) init];
  outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for SASTTemplateItem);
  return v9;
}

id SAIntentGroupProtobufMessage.init(intent:)(void *a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = outlined bridged method (ob) of @objc PBCodable.data.getter([a1 backingStore]);
  if (v4 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v6 = v3;
    unint64_t v7 = v4;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v3 = outlined consume of Data?(v6, v7);
  }
  OUTLINED_FUNCTION_8_67(v3, "setData:");

  id v8 = [a1 typeName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  return v2;
}

id SAIntentGroupProtobufMessage.init(response:)(void *a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id result = [a1 backingStore];
  if (result)
  {
    uint64_t v4 = outlined bridged method (ob) of @objc PBCodable.data.getter(result);
    if (v5 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      uint64_t v7 = v4;
      unint64_t v8 = v5;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v4 = outlined consume of Data?(v7, v8);
    }
    OUTLINED_FUNCTION_8_67(v4, "setData:");

    uint64_t v9 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(a1, (SEL *)&selRef__payloadResponseTypeName);
    if (v10)
    {
      NSString v11 = String._bridgeToObjectiveC()();
      uint64_t v9 = swift_bridgeObjectRelease();
    }
    else
    {
      NSString v11 = 0;
    }
    OUTLINED_FUNCTION_8_67(v9, "setTypeName:");

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SAUIColor.init(r:g:b:alpha:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v7 setRedValue:a1];
  OUTLINED_FUNCTION_8_67((uint64_t)[v7 setGreenValue:a2], "setBlueValue:");
  [v7 setAlpha:a4];

  return v7;
}

id SAUIAddDialogs.init(dialogString:templateIdentifier:)()
{
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v1 = objc_allocWithZone((Class)SADialogText);
  id v2 = v0;
  id v3 = [v1 init];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  id v4 = [objc_allocWithZone((Class)SADialog) init];
  [v4 setContent:v3];
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_46A030;
  *(void *)(v5 + 32) = v4;
  uint64_t v8 = v5;
  specialized Array._endMutation()();
  id v6 = v4;
  outlined bridged method (mbnn) of @objc SAUIConfirmationView.allConfirmationOptions.setter(v8, (uint64_t)v2, &lazy cache variable for type metadata for SADialog);

  return v2;
}

id SANotificationsSearch.init(after:isOnDeviceSearch:)(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = [objc_allocWithZone((Class)OUTLINED_FUNCTION_6_59()) init];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = v4;
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter();
  id v6 = [objc_allocWithZone((Class)NSNumber) initWithBool:a3 & 1];
  [v5 setIsOnDeviceSearch:v6];

  return v5;
}

void outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(uint64_t a1, uint64_t a2)
{
}

void outlined bridged method (mbnn) of @objc SASTCommandTemplateAction.commands.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t outlined bridged method (pb) of @objc SAUIConfirmationOption.commands.getter(void *a1)
{
  id v1 = [a1 commands];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc SAUIDecoratedText.text.setter()
{
}

void outlined bridged method (mbnn) of @objc SAUIConfirmationView.allConfirmationOptions.setter(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  type metadata accessor for CNContactStore(0, a3);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  int v3 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_65(v3, v4, v5, v6, v7, v8, v9, v10, v11, (uint64_t)isa);
}

uint64_t outlined bridged method (ob) of @objc SAUIConfirmationOption.label.getter(void *a1)
{
  id v2 = [a1 label];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (ob) of @objc SAUIConfirmationOption.commands.getter(void *a1)
{
  id v2 = [a1 commands];

  if (!v2) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  int v3 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_65(v3, v4, v5, v6, v7, v8, v9, v10, v11, (uint64_t)isa);
}

void outlined bridged method (mbnn) of @objc SAUIConfirmationOption.label.setter()
{
  NSString v9 = String._bridgeToObjectiveC()();
  int v0 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_65(v0, v1, v2, v3, v4, v5, v6, v7, v8, (uint64_t)v9);
}

id OUTLINED_FUNCTION_1_75(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_2_87()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_4_65(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  id v13 = *v10;
  return objc_msgSend(v11, v13, a10);
}

uint64_t OUTLINED_FUNCTION_6_59()
{
  return swift_getObjCClassFromMetadata();
}

uint64_t OUTLINED_FUNCTION_7_59()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_8_67(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t ReaderNLConstants.rawValue.getter(char a1)
{
  uint64_t result = 0x726564616572;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6973734169726953;
      break;
    case 2:
      uint64_t result = 0x6E6F69746361;
      break;
    case 3:
      uint64_t result = 0x646E616D6D6F63;
      break;
    case 4:
      uint64_t result = 0x7463656A627573;
      break;
    case 5:
      uint64_t result = 0x6556726564616572;
      break;
    default:
      return result;
  }
  return result;
}

PhoneCallFlowDelegatePlugin::ReaderNLConstants_optional __swiftcall ReaderNLConstants.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ReaderNLConstants.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return (PhoneCallFlowDelegatePlugin::ReaderNLConstants_optional)6;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ReaderNLConstants_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ReaderNLConstants(char *a1)
{
  return specialized == infix<A>(_:_:)(*a1);
}

unint64_t lazy protocol witness table accessor for type ReaderNLConstants and conformance ReaderNLConstants()
{
  unint64_t result = lazy protocol witness table cache variable for type ReaderNLConstants and conformance ReaderNLConstants;
  if (!lazy protocol witness table cache variable for type ReaderNLConstants and conformance ReaderNLConstants)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderNLConstants and conformance ReaderNLConstants);
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ReaderNLConstants()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ReaderNLConstants()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ReaderNLConstants(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::ReaderNLConstants_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReaderNLConstants@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ReaderNLConstants_optional *a2@<X8>)
{
  result.int value = ReaderNLConstants.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ReaderNLConstants@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ReaderNLConstants.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReaderNLConstants(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x271E40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderNLConstants()
{
  return &type metadata for ReaderNLConstants;
}

id DisambiguationReferenceResolver.resolveDisambiguationReference(_:)()
{
  uint64_t v1 = type metadata accessor for MatchedResultsSetting();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget?);
  __chkstk_darwin(v5 - 8);
  int v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (id *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  id v13 = (char *)&v47 - v12;
  uint64_t v14 = DisambiguationReferenceResolver.extractReferenceResolutionEntity(parse:)();
  if (!v14)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_1_3(&dword_0, v28, v29, "#DisambiguationReferenceResolver No reference or entity found, returning nil");
      OUTLINED_FUNCTION_6();
    }

    return 0;
  }
  uint64_t v15 = (void *)v14;
  uint64_t v52 = v2;
  id v53 = v0;
  uint64_t v54 = v1;
  uint64_t v16 = static UsoBuilderConversionUtils.convertEntityToGraph(entity:)();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v51 = v18;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v49 = v11;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v55 = v16;
    uint64_t v56 = v48;
    uint64_t v50 = v13;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v47 = v22 + 4;
    type metadata accessor for Graph();
    lazy protocol witness table accessor for type Graph and conformance Graph();
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v56);
    id v13 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v19, v20, "#DisambiguationReferenceResolver found entity, querying SRR for %s", v22, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    uint64_t v11 = v49;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v30 = v52;
  uint64_t v31 = v54;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v4, enum case for MatchedResultsSetting.defaultMatching(_:), v54);
  static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)((uint64_t)v15, v53, (uint64_t)v4, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v31);
  uint64_t v32 = type metadata accessor for PhoneRRTarget(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v32) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v7, &demangling cache variable for type metadata for PhoneRRTarget?);
    uint64_t v33 = type metadata accessor for PhoneRRTarget.Target(0);
    uint64_t v34 = (uint64_t)v13;
    uint64_t v35 = 1;
  }
  else
  {
    outlined init with copy of PhoneRRTarget.Target((uint64_t)v7, (uint64_t)v13);
    _s27PhoneCallFlowDelegatePlugin0A8RRTargetV6TargetOWOhTm_0((uint64_t)v7, (void (*)(void))type metadata accessor for PhoneRRTarget);
    uint64_t v33 = type metadata accessor for PhoneRRTarget.Target(0);
    uint64_t v34 = (uint64_t)v13;
    uint64_t v35 = 0;
  }
  __swift_storeEnumTagSinglePayload(v34, v35, 1, v33);
  outlined init with copy of PhoneRRTarget.Target?((uint64_t)v13, (uint64_t)v11);
  type metadata accessor for PhoneRRTarget.Target(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v33) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v11, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
LABEL_19:
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_1_3(&dword_0, v38, v39, "#DisambiguationReferenceResolver SRR didn't return an INPerson");
      OUTLINED_FUNCTION_6();
    }
    swift_release();

    swift_release();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v13, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    _s27PhoneCallFlowDelegatePlugin0A8RRTargetV6TargetOWOhTm_0((uint64_t)v11, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
    goto LABEL_19;
  }
  uint64_t v54 = v16;
  id v40 = *v11;
  os_log_type_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    id v53 = v15;
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 138412290;
    uint64_t v56 = (uint64_t)v40;
    id v46 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v45 = v40;

    _os_log_impl(&dword_0, v42, v43, "#DisambiguationReferenceResolver SRR selected %@", v44, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_release();
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v13, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  return v40;
}

uint64_t DisambiguationReferenceResolver.extractReferenceResolutionEntity(parse:)()
{
  if (!Parse.usoTask.getter())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_0, v3, v4, "#DisambiguationReferenceResolver couldn't extract UsoTask from Parse", v5, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v0 = DisambiguationReferenceResolver.extractPositionEntity(task:)();
  if (!v0)
  {
    if (UsoTask.convertToCommonPhoneCallEntity()())
    {
      uint64_t v1 = DisambiguationReferenceResolver.extractAgentEntity(commonPhoneCall:)();
      swift_release();
      goto LABEL_4;
    }
    swift_release();
    return 0;
  }
  uint64_t v1 = v0;
LABEL_4:
  swift_release();
  return v1;
}

uint64_t DisambiguationReferenceResolver.extractPositionEntity(task:)()
{
  static UsoTask_CodegenConverter.convert(task:)();
  if (!v6[3])
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)v6, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  type metadata accessor for UsoTask_noVerb_uso_NoEntity();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  swift_retain();
  dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
  swift_release();
  if (!v6[0])
  {
    swift_release();
    return 0;
  }
  swift_retain();
  uint64_t v0 = dispatch thunk of CodeGenGlobalArgs.usoListPosition.getter();
  swift_release();
  swift_release();
  if (v0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v4 = 0;
      _os_log_impl(&dword_0, v2, v3, "#DisambiguationReferenceResolver Found position reference, passing to SRR", v4, 2u);
      swift_slowDealloc();
    }

    swift_retain();
    uint64_t v0 = CodeGenBase.entity.getter();
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_release();
    swift_release();
  }
  return v0;
}

uint64_t DisambiguationReferenceResolver.extractAgentEntity(commonPhoneCall:)()
{
  uint64_t v0 = dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter();
  if (v0) {
    unint64_t v1 = v0;
  }
  else {
    unint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  }
  dispatch thunk of UsoEntity_common_PhoneCall.participants.getter();
  specialized Array.append<A>(contentsOf:)();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_6:
      if (v2 >= 1)
      {
        uint64_t v3 = 0;
        while (1)
        {
          if ((v1 & 0xC000000000000001) != 0) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          dispatch thunk of CodeGenListEntry.entry.getter();
          if (v10) {
            break;
          }
          if (dispatch thunk of CodeGenListEntry.entryAsExpression.getter())
          {
            dispatch thunk of CodeGenExpression.operand.getter();
            swift_release();
            swift_release();
            if (v11) {
              goto LABEL_13;
            }
          }
          else
          {
            swift_release();
          }
LABEL_16:
          if (v2 == ++v3) {
            goto LABEL_23;
          }
        }
        swift_release();
LABEL_13:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        goto LABEL_16;
      }
      __break(1u);
      goto LABEL_36;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v4) {
      goto LABEL_25;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_33;
  }
LABEL_25:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, ((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0, _swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
  {
LABEL_36:
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_27;
  }
  swift_retain();
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v4 = CodeGenBase.entity.getter();
  swift_release();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "#DisambiguationReferenceResolver Found agent entity, passing to SRR", v8, 2u);
    swift_slowDealloc();
  }

  return v4;
}

uint64_t outlined init with copy of PhoneRRTarget.Target?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A8RRTargetV6TargetOWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_39_8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t lazy protocol witness table accessor for type Graph and conformance Graph()
{
  unint64_t result = lazy protocol witness table cache variable for type Graph and conformance Graph;
  if (!lazy protocol witness table cache variable for type Graph and conformance Graph)
  {
    type metadata accessor for Graph();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Graph and conformance Graph);
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationReferenceResolver()
{
  return &type metadata for DisambiguationReferenceResolver;
}

uint64_t SingleCallResultFlow.__allocating_init(app:callRecord:intent:intentResponse:isIncomingCallFollowupPrompt:sharedGlobals:schGlobals:)(uint64_t a1, void *a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = (void *)(v14 - v13);
  type metadata accessor for AppInfoBuilder();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = a2;
  static Device.current.getter();
  __swift_project_boxed_opaque_existential_1(v40, v41);
  dispatch thunk of DeviceState.siriLocale.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  swift_retain();
  specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(v17, 1, v16, v15);
  type metadata accessor for PhoneCallRecord(0);
  OUTLINED_FUNCTION_21_0();
  uint64_t v38 = PhoneCallRecord.init(builder:)();
  uint64_t v33 = v17;

  uint64_t v18 = *(void (**)(uint64_t))(v11 + 8);
  uint64_t v19 = OUTLINED_FUNCTION_43_15();
  v18(v19);
  swift_release_n();
  id v20 = a3;
  id v21 = a4;
  if (!App.isFirstParty()())
  {
    id v23 = [v20 recipient];
    if (v23)
    {
      unint64_t v24 = v23;
      type metadata accessor for PhonePerson(0);
      id v32 = v24;
      static Device.current.getter();
      __swift_project_boxed_opaque_existential_1(v40, v41);
      OUTLINED_FUNCTION_93_1();
      dispatch thunk of DeviceState.siriLocale.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      uint64_t v25 = static PhonePerson.make(phonePerson:options:locale:)(v24, 0, (uint64_t)v15);

      uint64_t v26 = OUTLINED_FUNCTION_43_15();
      v18(v26);
      if (v25)
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_46A030;
        *(void *)(v27 + 32) = v25;
        v40[0] = v27;
        specialized Array._endMutation()();
        uint64_t v22 = (void *)v40[0];

        goto LABEL_8;
      }
    }
    uint64_t v22 = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }
  uint64_t v22 = static SearchCallHistoryCatParameterHelper.makePhonePersons1P(intent:intentResponse:)(v20, (unint64_t)v21);

LABEL_8:
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  type metadata accessor for PhonePersonList();
  uint64_t v28 = PhonePersonList.__allocating_init(list:)((uint64_t)v22);
  uint64_t v29 = PhoneSearchCallHistoryIntent.__allocating_init(intent:recipients:)(v20, v28);
  outlined init with copy of SignalProviding(a6, (uint64_t)v42);
  outlined init with copy of SearchCallHistorySharedGlobals(a7, (uint64_t)v40);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, __CFString *, uint64_t, id, uint64_t, unsigned char *, void *, void))(v35 + 208))(a1, v33, v38, v20, v29, v42, v40, a5 & 1);

  outlined destroy of SearchCallHistorySharedGlobals(a7);
  __swift_destroy_boxed_opaque_existential_1(a6);
  return v30;
}

uint64_t specialized IncomingCallNLContextProvider.makeOfferFollowUpIntentContext(followUpOfferType:isAnnouncement:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for NLContextUpdate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (FollowUpOfferType.requiresConfirmation.getter(a1))
  {
    specialized IncomingCallNLContextProvider.makeFollowUpConfirmationContext(followUpOfferType:)(a1);
    switch(a1)
    {
      case 1u:
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v18 = type metadata accessor for Logger();
        __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v19, v20))
        {
          id v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v21 = 0;
          _os_log_impl(&dword_0, v19, v20, "#IncomingCallNLContextProvider: Adding NLv4 context for startCall", v21, 2u);
          swift_slowDealloc();
        }

        type metadata accessor for UsoTaskBuilder_call_common_PhoneCall();
        swift_allocObject();
        uint64_t v14 = UsoTaskBuilder_call_common_PhoneCall.init()();
        uint64_t v15 = 0x6163207472617473;
        unint64_t v16 = 0xEA00000000006C6CLL;
        break;
      case 2u:
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
        id v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl(&dword_0, v23, v24, "#IncomingCallNLContextProvider: Adding NLv4 context for answerCall", v25, 2u);
          swift_slowDealloc();
        }

        type metadata accessor for UsoTaskBuilder_answer_common_PhoneCall();
        swift_allocObject();
        uint64_t v14 = UsoTaskBuilder_answer_common_PhoneCall.init()();
        uint64_t v15 = 0x6320726577736E61;
        unint64_t v16 = 0xEB000000006C6C61;
        break;
      case 3u:
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v13 = 0;
          _os_log_impl(&dword_0, v11, v12, "#IncomingCallNLContextProvider: Adding NLv4 context for callBack", v13, 2u);
          swift_slowDealloc();
        }

        type metadata accessor for UsoTaskBuilder_callback_common_PhoneCall();
        swift_allocObject();
        uint64_t v14 = UsoTaskBuilder_callback_common_PhoneCall.init()();
        uint64_t v15 = 0x636162206C6C6163;
        unint64_t v16 = 0xE90000000000006BLL;
        break;
      default:
LABEL_24:
        if (a2)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v26 = type metadata accessor for Logger();
          __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
          uint64_t v27 = Logger.logObject.getter();
          os_log_type_t v28 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl(&dword_0, v27, v28, "#NLContextUpdate: Setting Announce Calls NLContextUpdate fields", v29, 2u);
            swift_slowDealloc();
          }

          NLContextUpdate.submitAsSpokenNotificationContext.setter();
          NLContextUpdate.weightedPromptStrict.setter();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_46A030;
          uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v33 = v32;
          id v34 = [objc_allocWithZone((Class)SAAceConfirmationContext) init];
          outlined bridged method (mbnn) of @objc SAAceConfirmationContext.reason.setter(v31, v33, v34);
          *(void *)(v30 + 32) = v34;
          v35[1] = v30;
          specialized Array._endMutation()();
          NLContextUpdate.conversationStateAttachments.setter();
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
        return __swift_storeEnumTagSinglePayload(a3, 0, 1, v6);
    }
    specialized IncomingCallNLContextProvider.createNLUSystemDialogAct(taskBuilder:typeForLogging:)(v14, v15, v16);
    swift_release();
    NLContextUpdate.nluSystemDialogActs.setter();
    goto LABEL_24;
  }

  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v6);
}

id specialized IncomingCallNLContextProvider.makeFollowUpConfirmationContext(followUpOfferType:)(uint64_t a1)
{
  char v1 = a1;
  int v2 = a1;
  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()(a1);
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_467710;
    *(void *)(v3 + 32) = PhoneCallNLConstants.canonicalName.getter(15);
    *(void *)(v3 + 40) = v4;
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_467720;
    String.uppercased()();
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    unint64_t v15 = PhoneCallNLConstants.canonicalName.getter(15);
    uint64_t v17 = v6;
    v7._uint64_t countAndFlagsBits = 0x2E65756C61562ELL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
    Swift::String v8 = String.uppercased()();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 32) = v15;
    *(void *)(v5 + 40) = v17;
    String.uppercased()();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    unint64_t v16 = PhoneCallNLConstants.canonicalName.getter(15);
    uint64_t v18 = v9;
    v10._uint64_t countAndFlagsBits = 0x2E65756C61562ELL;
    v10._object = (void *)0xE700000000000000;
    String.append(_:)(v10);
    Swift::String v11 = String.uppercased()();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 48) = v16;
    *(void *)(v5 + 56) = v18;
  }
  NLContextUpdate.weightedPromptResponseTargets.getter();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  NLContextUpdate.weightedPromptResponseTargets.setter();
  NLContextUpdate.weightedPromptResponseOptions.getter();
  swift_bridgeObjectRelease();
  specialized Array.append<A>(contentsOf:)();
  NLContextUpdate.weightedPromptResponseOptions.setter();
  id result = specialized IncomingCallNLContextProvider.getConfirmationAttachment(for:)(v1);
  if (result)
  {
    id v13 = result;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_46A030;
    *(void *)(v14 + 32) = v13;
    specialized Array._endMutation()();
    return (id)NLContextUpdate.conversationStateAttachments.setter();
  }
  return result;
}

id specialized IncomingCallNLContextProvider.getConfirmationAttachment(for:)(char a1)
{
  if (a1 == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    int v2 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v6))
    {
      Swift::String v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v7 = 0;
      _os_log_impl(&dword_0, v2, v6, "#IncomingCallNLContextProvider: Adding NLv3 context for startCall", v7, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (a1 != 3) {
      return 0;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
    int v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_0, v2, v3, "#IncomingCallNLContextProvider: Adding NLv3 context for callBack", v4, 2u);
      swift_slowDealloc();
    }
  }

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  id v11 = [objc_allocWithZone((Class)SAAceConfirmationContext) init];
  outlined bridged method (mbnn) of @objc SAAceConfirmationContext.reason.setter(v8, v10, v11);
  return v11;
}

uint64_t specialized IncomingCallNLContextProvider.createNLUSystemDialogAct(taskBuilder:typeForLogging:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v62 = a3;
  uint64_t v56 = a2;
  uint64_t v64 = type metadata accessor for PhoneError();
  uint64_t v4 = __chkstk_darwin(v64);
  unint64_t v63 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v61 = (char *)v54 - v6;
  uint64_t v60 = type metadata accessor for Logger();
  v54[1] = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  v54[0] = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for Siri_Nlu_External_SystemDialogAct();
  uint64_t v67 = *(void *)(v65 - 8);
  uint64_t v8 = __chkstk_darwin(v65);
  uint64_t v55 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v70 = (char *)v54 - v10;
  uint64_t v66 = type metadata accessor for Siri_Nlu_External_SystemOffered();
  uint64_t v58 = *(void *)(v66 - 8);
  uint64_t v11 = __chkstk_darwin(v66);
  uint64_t v57 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v54 - v13;
  uint64_t v71 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v15 = __chkstk_darwin(v71);
  uint64_t v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v54 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UsoGraph();
  __chkstk_darwin(v20 - 8);
  uint64_t v21 = type metadata accessor for Siri_Nlu_External_UserWantedToProceed();
  uint64_t v68 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  os_log_type_t v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v54 - v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_46A030;
  *(void *)(v30 + 32) = a1;
  v74[0] = v30;
  specialized Array._endMutation()();
  uint64_t v31 = type metadata accessor for UsoBuilderOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 1, 1, v31);
  swift_retain();
  uint64_t v32 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
  swift_bridgeObjectRelease();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v29, &demangling cache variable for type metadata for UsoBuilderOptions?);
  Siri_Nlu_External_UserWantedToProceed.init()();
  uint64_t v59 = v32;
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
  Siri_Nlu_External_UserWantedToProceed.reference.setter();
  Siri_Nlu_External_UserDialogAct.init()();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  uint64_t v61 = v26;
  unint64_t v63 = (char *)v21;
  v33(v24, v26, v21);
  Siri_Nlu_External_UserDialogAct.wantedToProceed.setter();
  Siri_Nlu_External_SystemOffered.init()();
  id v34 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  uint64_t v64 = (uint64_t)v19;
  v34(v17, v19, v71);
  Siri_Nlu_External_SystemOffered.offeredAct.setter();
  Siri_Nlu_External_SystemDialogAct.init()();
  uint64_t v35 = v58;
  uint64_t v36 = v66;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v14, v66);
  Siri_Nlu_External_SystemDialogAct.offered.setter();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v60, (uint64_t)static Logger.siriPhone);
  unint64_t v37 = v62;
  swift_bridgeObjectRetain_n();
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v41 = v65;
  uint64_t v42 = v67;
  if (v40)
  {
    uint64_t v43 = swift_slowAlloc();
    v74[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v37, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 2080;
    uint64_t v44 = v70;
    swift_beginAccess();
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v46 = (uint64_t)v55;
    v45(v55, v44, v41);
    uint64_t v47 = specialized String.init(describing:)(v46);
    uint64_t v72 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, v74);
    uint64_t v36 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v42 = v67;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v38, v39, "Returning NLUUserDialogAct.NLUSystemOffered for %s: %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v44 = v70;
  }
  uint64_t v50 = v63;
  uint64_t v49 = v64;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  unint64_t v51 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_467710;
  swift_beginAccess();
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 16))(v52 + v51, v44, v41);
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v49, v71);
  (*(void (**)(char *, char *))(v68 + 8))(v61, v50);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
  return v52;
}

uint64_t SingleCallResultFlow.State.description.getter(uint64_t a1)
{
  if (a1 == 1) {
    return 0x646165722ELL;
  }
  if (a1 == 2) {
    return 0xD000000000000016;
  }
  outlined copy of SingleCallResultFlow.State(a1);
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error?);
  v3._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  outlined consume of SingleCallResultFlow.State(a1);
  return 0x74656C706D6F632ELL;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleCallResultFlow.State()
{
  return SingleCallResultFlow.State.description.getter(*v0);
}

id SingleCallResultFlow.intent.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t SingleCallResultFlow.schGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SearchCallHistorySharedGlobals(v1 + 104, a1);
}

uint64_t key path setter for SingleCallResultFlow.state : SingleCallResultFlow(uint64_t *a1)
{
  uint64_t v1 = *a1;
  outlined copy of SingleCallResultFlow.State(*a1);
  return SingleCallResultFlow.state.setter(v1);
}

void SingleCallResultFlow.state.didset()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  int v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = v0[38];
    uint64_t v6 = v0[39];
    uint64_t v8 = v0[40];
    uint64_t v7 = v0[41];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v5, v6, v8, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    swift_beginAccess();
    uint64_t v9 = v0[42];
    if (v9 == 1)
    {
      unint64_t v10 = 0xE500000000000000;
      uint64_t v11 = 0x646165722ELL;
    }
    else if (v9 == 2)
    {
      unint64_t v10 = 0x8000000000497A60;
      uint64_t v11 = 0xD000000000000016;
    }
    else
    {
      outlined copy of SingleCallResultFlow.State(v9);
      swift_errorRetain();
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error?);
      v12._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
      outlined consume of SingleCallResultFlow.State(v9);
      outlined consume of SingleCallResultFlow.State(v9);
      uint64_t v11 = 0x74656C706D6F632ELL;
      unint64_t v10 = 0xEA00000000002865;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v2, v3, "%s state => %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t SingleCallResultFlow.state.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 336);
  outlined copy of SingleCallResultFlow.State(v1);
  return v1;
}

uint64_t SingleCallResultFlow.state.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 336);
  *(void *)(v1 + 336) = a1;
  outlined copy of SingleCallResultFlow.State(a1);
  outlined consume of SingleCallResultFlow.State(v3);
  SingleCallResultFlow.state.didset();
  return outlined consume of SingleCallResultFlow.State(a1);
}

BOOL SingleCallResultFlow.requiresCallBackOffer.getter()
{
  id v1 = [*(id *)(v0 + 24) caller];
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t SingleCallResultFlow.__allocating_init(app:callRecord:phoneCallRecord:intent:phoneIntent:sharedGlobals:schGlobals:isIncomingCallFollowupPrompt:)()
{
  OUTLINED_FUNCTION_7_55();
  uint64_t v0 = swift_allocObject();
  SingleCallResultFlow.init(app:callRecord:phoneCallRecord:intent:phoneIntent:sharedGlobals:schGlobals:isIncomingCallFollowupPrompt:)();
  return v0;
}

uint64_t SingleCallResultFlow.init(app:callRecord:phoneCallRecord:intent:phoneIntent:sharedGlobals:schGlobals:isIncomingCallFollowupPrompt:)()
{
  OUTLINED_FUNCTION_7_55();
  *(void *)(v1 + 304) = type metadata accessor for SingleCallResultFlow();
  *(void *)(v1 + 312) = &outlined read-only object #0 of SingleCallResultFlow.init(app:callRecord:phoneCallRecord:intent:phoneIntent:sharedGlobals:schGlobals:isIncomingCallFollowupPrompt:);
  *(void *)(v1 + 320) = 0;
  *(void *)(v1 + 328) = 0;
  *(void *)(v1 + 336) = 1;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v7;
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v5;
  *(void *)(v1 + 48) = v4;
  outlined init with take of AppSelectionSignalComponent(v3, v1 + 64);
  memcpy((void *)(v1 + 104), v2, 0xC8uLL);
  *(unsigned char *)(v1 + 56) = v0;
  return v1;
}

uint64_t SingleCallResultFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[9] = v2;
  v1[10] = v0;
  uint64_t v3 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v3);
  v1[11] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  uint64_t v25 = v0;
  uint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 80) + 160))();
  if (v1)
  {
    uint64_t v2 = v1;
    if (v1 == 2)
    {
      SingleCallResultFlow.makeFollowUpAction()();
      swift_retain();
      static ExecuteResponse.complete(next:childCompletion:)();
      swift_release();
    }
    else
    {
      if (v1 == 1)
      {
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v3;
        *uint64_t v3 = v0;
        v3[1] = SingleCallResultFlow.execute();
        return SingleCallResultFlow.executeRead()();
      }
      swift_errorRetain();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
      swift_retain();
      outlined copy of SingleCallResultFlow.State(v2);
      swift_retain();
      outlined copy of SingleCallResultFlow.State(v2);
      uint64_t v6 = Logger.logObject.getter();
      uint64_t v7 = static os_log_type_t.error.getter();
      uint64_t v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void **)(v0 + 80);
      if (v8)
      {
        unint64_t v10 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v23 = 0;
        *(_DWORD *)unint64_t v10 = 136315394;
        uint64_t v11 = v9[38];
        Swift::String v12 = v9[39];
        uint64_t v14 = v9[40];
        uint64_t v13 = v9[41];
        os_log_type_t v24 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v11, v12, v14, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, 0xE000000000000000, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v15 = Error.localizedDescription.getter();
        *(void *)(v0 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined consume of SingleCallResultFlow.State(v2);
        outlined consume of SingleCallResultFlow.State(v2);
        _os_log_impl(&dword_0, v6, v7, "%s Flow encountered an error: %s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_release_n();
        outlined consume of SingleCallResultFlow.State(v2);
        outlined consume of SingleCallResultFlow.State(v2);
      }

      uint64_t v17 = type metadata accessor for StartCallCATsSimple();
      static CATOption.defaultMode.getter();
      CATWrapperSimple.__allocating_init(options:globals:)();
      uint64_t v18 = OUTLINED_FUNCTION_93_1();
      uint64_t v19 = static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)(v18, v17);
      uint64_t v20 = swift_release();
      (*(void (**)(uint64_t))(*(void *)v19 + 112))(v20);
      OUTLINED_FUNCTION_47_15();
      *(void *)(v0 + 40) = v19;
      type metadata accessor for SimpleOutputFlowAsync();
      static ExecuteResponse.complete<A>(next:)();
      outlined consume of SingleCallResultFlow.State(v2);
      outlined consume of SingleCallResultFlow.State(v2);
    }
    swift_release();
  }
  else
  {
    static ExecuteResponse.complete()();
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v21();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  uint8_t *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 104);
  swift_errorRetain();
  SingleCallResultFlow.state.setter(v1);
  static ExecuteResponse.replan(requireInput:)();
  swift_errorRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t closure #1 in SingleCallResultFlow.execute()()
{
  return SingleCallResultFlow.state.setter(0);
}

uint64_t SingleCallResultFlow.execute(completion:)()
{
  type metadata accessor for SingleCallResultFlow();
  lazy protocol witness table accessor for type SingleCallResultFlow and conformance SingleCallResultFlow(&lazy protocol witness table cache variable for type SingleCallResultFlow and conformance SingleCallResultFlow, v0, (void (*)(uint64_t))type metadata accessor for SingleCallResultFlow);
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t SingleCallResultFlow.executeRead()()
{
  OUTLINED_FUNCTION_1_0();
  v1[46] = v2;
  v1[47] = v0;
  uint64_t v3 = (void *)swift_task_alloc();
  v1[48] = v3;
  *uint64_t v3 = v1;
  v3[1] = SingleCallResultFlow.executeRead();
  return SingleCallResultFlow.makeOutput()();
}

{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 392) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 400) = v3 & 1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;

  uint64_t v1 = *(unsigned __int8 *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 376);
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 152), v0 + 192);
  uint64_t v22 = v0 + 192;
  outlined init with copy of SignalProviding(v0 + 192, v0 + 112);
  uint64_t v3 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 112), v3 + 16);
  uint64_t v4 = (void *)(v2 + 64);
  if (v1 == 1)
  {
    uint64_t v5 = *(void *)(v0 + 376);
    outlined init with copy of SignalProviding(v2 + 64, v0 + 272);
    type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
    swift_allocObject();
    PhoneCallYesNoConfirmationFlowStrategy.init(outputProducer:sharedGlobals:)((uint64_t)&async function pointer to partial apply for closure #1 in SingleCallResultFlow.executeRead(), v3, (long long *)(v0 + 272));
    uint64_t v6 = *(void *)(v5 + 88);
    uint64_t v7 = *(void *)(v5 + 96);
    __swift_project_boxed_opaque_existential_1(v4, v6);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
    swift_retain();
    v8(v6, v7);
    uint64_t v9 = *(void *)(v0 + 40);
    unint64_t v10 = *(void *)(v0 + 56);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v9);
    *(void *)(v0 + 256) = v9;
    *(void *)(v0 + 264) = v10;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 232));
    OUTLINED_FUNCTION_42_15();
    v11();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
    OUTLINED_FUNCTION_21_0();
    lazy protocol witness table accessor for type SingleCallResultFlow and conformance SingleCallResultFlow(&lazy protocol witness table cache variable for type PhoneCallYesNoConfirmationFlowStrategy and conformance PhoneCallYesNoConfirmationFlowStrategy, 255, (void (*)(uint64_t))type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy);
    Swift::String v12 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    *(void *)(v0 + 360) = v12;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>, &demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
    swift_retain();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v22);
    swift_release();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 376);
    uint64_t v14 = *(void *)(v13 + 88);
    uint64_t v15 = *(void *)(v13 + 96);
    __swift_project_boxed_opaque_existential_1(v4, v14);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 104);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), v16);
    *(void *)(v0 + 336) = v16;
    *(void *)(v0 + 344) = v17;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 312));
    OUTLINED_FUNCTION_42_15();
    v18();
    type metadata accessor for SimpleOutputFlowAsync();
    OUTLINED_FUNCTION_21_0();
    swift_retain();
    uint64_t v19 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    *(void *)(v0 + 352) = v19;
    swift_retain();
    static ExecuteResponse.complete<A>(next:childCompletion:)();
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v22);
  }
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t closure #1 in SingleCallResultFlow.executeRead()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(closure #1 in SingleCallResultFlow.executeRead(), 0, 0);
}

uint64_t closure #1 in SingleCallResultFlow.executeRead()()
{
  OUTLINED_FUNCTION_1_0();
  outlined init with copy of SignalProviding(v0[3], v0[2]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t closure #2 in SingleCallResultFlow.executeRead()(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse();
  uint64_t v59 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v55 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
  __chkstk_darwin(v58);
  uint64_t v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v56 = (uint64_t)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v50 - v12;
  __chkstk_darwin(v11);
  uint64_t v61 = (uint64_t)v50 - v14;
  uint64_t v15 = type metadata accessor for SimpleConfirmationResponseProvider();
  uint64_t v62 = *(void *)(v15 - 8);
  uint64_t v63 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<SimpleConfirmationResponseProvider>);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v67 = (char *)v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v68 = (char *)v50 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v60 = v13;
  uint64_t v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v65 = *(void (**)(void))(v19 + 16);
  uint64_t v66 = v19 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v65)(v68, a1, v18);
  swift_retain_n();
  os_log_type_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  int v26 = v25;
  uint64_t v64 = v24;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v54 = v4;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v53 = v29;
    *(_DWORD *)uint64_t v28 = 136315394;
    v50[1] = v28 + 4;
    uint64_t v52 = v19;
    uint64_t v30 = a2[38];
    uint64_t v31 = a2[39];
    uint64_t v57 = v17;
    uint64_t v32 = a2[40];
    uint64_t v33 = a2[41];
    uint64_t v69 = 0;
    unint64_t v70 = 0xE000000000000000;
    v71[0] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v51 = v26;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v30, v31, v32, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type PromptResult<SimpleConfirmationResponseProvider> and conformance PromptResult<A>, &demangling cache variable for type metadata for PromptResult<SimpleConfirmationResponseProvider>);
    id v34 = v68;
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v71);
    uint64_t v17 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v37 = v52;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v52 + 8);
    v38(v34, v18);
    os_log_type_t v39 = v64;
    _os_log_impl(&dword_0, v64, (os_log_type_t)v51, "%s Received response from confirmation flow: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v54;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    uint64_t v37 = v19;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v19 + 8);
    v38(v68, v18);
  }
  BOOL v40 = v67;
  v65();
  if ((*(unsigned int (**)(char *, uint64_t))(v37 + 88))(v40, v18) != enum case for PromptResult.answered<A>(_:))
  {
    v38(v40, v18);
    return SingleCallResultFlow.state.setter(0);
  }
  (*(void (**)(char *, uint64_t))(v37 + 96))(v40, v18);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v17, v40, v63);
  uint64_t v41 = v61;
  SimpleConfirmationResponseProvider.confirmationResponse.getter();
  uint64_t v42 = (uint64_t)v60;
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v60, enum case for ConfirmationResponse.confirmed(_:), v4);
  __swift_storeEnumTagSinglePayload(v42, 0, 1, v4);
  uint64_t v43 = (uint64_t)&v7[*(int *)(v58 + 48)];
  outlined init with copy of ConfirmationResponse?(v41, (uint64_t)v7, &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined init with copy of ConfirmationResponse?(v42, v43, &demangling cache variable for type metadata for ConfirmationResponse?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4) != 1)
  {
    uint64_t v44 = v56;
    outlined init with copy of ConfirmationResponse?((uint64_t)v7, v56, &demangling cache variable for type metadata for ConfirmationResponse?);
    if (__swift_getEnumTagSinglePayload(v43, 1, v4) != 1)
    {
      uint64_t v46 = v59;
      uint64_t v47 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v55, v43, v4);
      lazy protocol witness table accessor for type SingleCallResultFlow and conformance SingleCallResultFlow(&lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse, 255, (void (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
      char v48 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v57 = v17;
      uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
      v49(v47, v4);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v60, &demangling cache variable for type metadata for ConfirmationResponse?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v61, &demangling cache variable for type metadata for ConfirmationResponse?);
      v49((char *)v44, v4);
      uint64_t v17 = v57;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v7, &demangling cache variable for type metadata for ConfirmationResponse?);
      if (v48) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v60, &demangling cache variable for type metadata for ConfirmationResponse?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v61, &demangling cache variable for type metadata for ConfirmationResponse?);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v44, v4);
LABEL_13:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v7, &demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
LABEL_14:
    (*(void (**)(char *, uint64_t))(v62 + 8))(v17, v63);
    return SingleCallResultFlow.state.setter(0);
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v42, &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v41, &demangling cache variable for type metadata for ConfirmationResponse?);
  if (__swift_getEnumTagSinglePayload(v43, 1, v4) != 1) {
    goto LABEL_13;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v7, &demangling cache variable for type metadata for ConfirmationResponse?);
LABEL_17:
  SingleCallResultFlow.state.setter(2);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v17, v63);
}

uint64_t SingleCallResultFlow.makeOutput()()
{
  OUTLINED_FUNCTION_1_0();
  v1[227] = v0;
  v1[221] = v2;
  uint64_t v3 = type metadata accessor for PhoneSnippetDataModels();
  v1[233] = v3;
  OUTLINED_FUNCTION_11_0(v3);
  v1[239] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for SingleResultCallHistoryModel();
  OUTLINED_FUNCTION_11_0(v4);
  v1[240] = OUTLINED_FUNCTION_35();
  uint64_t v5 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v5);
  v1[241] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for ResponseMode();
  v1[242] = v6;
  OUTLINED_FUNCTION_19_0(v6);
  v1[243] = v7;
  v1[244] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for OutputGenerationManifest();
  v1[245] = v8;
  OUTLINED_FUNCTION_19_0(v8);
  v1[246] = v9;
  v1[247] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Bool v9;
  int v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  void *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  void *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *buf;
  uint64_t v40;
  os_log_type_t type;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  uint64_t v45 = v0;
  uint64_t v1 = v0 + 656;
  uint64_t v2 = v0 + 1672;
  uint64_t v3 = *(void **)(v0 + 1816);
  uint64_t v4 = v3[11];
  uint64_t v5 = v3[12];
  __swift_project_boxed_opaque_existential_1(v3 + 8, v4);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 112))(v4, v5)
    && (uint64_t v6 = *(void *)(v0 + 1952),
        uint64_t v7 = *(void *)(v0 + 1944),
        uint64_t v8 = *(void *)(v0 + 1936),
        CurrentRequest.responseMode.getter(),
        swift_release(),
        uint64_t v9 = ResponseMode.isVoiceMode()(),
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8),
        v9)
    && SingleCallResultFlow.requiresCallBackOffer.getter())
  {
    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v10 = *(unsigned __int8 *)(*(void *)(v0 + 1816) + 56);
  }
  *(unsigned char *)(v0 + 2088) = v10;
  swift_retain_n();
  type metadata accessor for CNContactStore(255, (unint64_t *)&lazy cache variable for type metadata for DialogExecutionResult);
  swift_asyncLet_begin();
  if (v10)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v12 = Logger.logObject.getter();
    uint64_t v13 = static os_log_type_t.debug.getter();
    uint64_t v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void **)(v0 + 1816);
    if (v14)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      BOOL v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      buf = v16;
      uint64_t v42 = v40;
      uint64_t v17 = v15[38];
      uint64_t v18 = v15[39];
      uint64_t v19 = v15[40];
      uint64_t v20 = v15[41];
      uint64_t v43 = 0;
      uint64_t v44 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v17, v18, v19, v20);
      uint64_t v1 = v0 + 656;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1720) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v42);
      uint64_t v2 = v0 + 1672;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v12, v13, "%s Read single call record + prompt", buf, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    swift_retain_n();
    swift_asyncLet_begin();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v32 = swift_allocObject();
    *(void *)(v0 + 1984) = v32;
    *(_OWORD *)(v32 + 16) = xmmword_469DA0;
    uint64_t v33 = SingleCallResultFlow.makeOutput();
    id v34 = v1;
    uint64_t v35 = v2;
    unint64_t v36 = v0 + 1728;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v22 = Logger.logObject.getter();
    uint64_t v23 = static os_log_type_t.debug.getter();
    os_log_type_t v24 = os_log_type_enabled(v22, v23);
    os_log_type_t v25 = *(void **)(v0 + 1816);
    if (v24)
    {
      os_log_type_t type = v23;
      int v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = 0;
      *(_DWORD *)int v26 = 136315138;
      uint64_t v28 = v25[38];
      uint64_t v27 = v25[39];
      uint64_t v30 = v25[40];
      uint64_t v29 = v25[41];
      uint64_t v44 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = v28;
      uint64_t v1 = v0 + 656;
      uint64_t v2 = v0 + 1672;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v31, v27, v30, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1624) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, 0xE000000000000000, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v22, type, "%s Read single call record", v26, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v37 = swift_allocObject();
    *(void *)(v0 + 2016) = v37;
    *(_OWORD *)(v37 + 16) = xmmword_46A030;
    uint64_t v33 = SingleCallResultFlow.makeOutput();
    id v34 = v1;
    uint64_t v35 = v2;
    unint64_t v36 = v0 + 1296;
  }
  return _swift_asyncLet_get_throwing(v34, v35, v33, v36);
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 1992) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
  }
}

{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 1672);
  *(void *)(*(void *)(v0 + 1984) + 32) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_get_throwing(v3, v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 2000) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;

  uint64_t v1 = v0[248];
  uint64_t v2 = (void *)v0[197];
  *(void *)(v1 + 40) = v2;
  uint64_t v5 = v1;
  specialized Array._endMutation()();
  v0[251] = v5;
  uint64_t v3 = v2;
  static DialogPhase.confirmation.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  return _swift_asyncLet_finish(v0 + 2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 2024) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 1336), *(void *)(v0 + 1768));
  uint64_t v1 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v1);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  uint8_t *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 2072) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_40_0();
  uint64_t v1 = v0[239];
  uint64_t v2 = v0[233];
  uint64_t v3 = (void *)v0[227];
  outlined init with copy of SingleResultCallHistoryModel(v0[240], v1, (void (*)(void))type metadata accessor for SingleResultCallHistoryModel);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  OutputGenerationManifest.responseViewId.setter();
  uint64_t v4 = v3[26];
  uint64_t v5 = v3[27];
  __swift_project_boxed_opaque_existential_1(v3 + 23, v4);
  v0[190] = v2;
  v0[191] = lazy protocol witness table accessor for type SingleCallResultFlow and conformance SingleCallResultFlow((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, 255, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 187);
  outlined init with copy of SingleResultCallHistoryModel(v1, (uint64_t)boxed_opaque_existential_1, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[260] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = SingleCallResultFlow.makeOutput();
  uint64_t v8 = v0[256];
  uint64_t v9 = v0[247];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(v0 + 167, v0 + 187, v8, v9, v4, v5);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 1496;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  uint8_t *v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(v0 + 1920);
  outlined destroy of PhoneSnippetDataModels(*(void *)(v0 + 1912), (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  outlined destroy of PhoneSnippetDataModels(v1, (void (*)(void))type metadata accessor for SingleResultCallHistoryModel);
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 1336), *(void *)(v0 + 1768));
  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_40_0();
  uint64_t v1 = *(void *)(v0 + 2032);
  (*(void (**)(void, void))(*(void *)(v0 + 1968) + 8))(*(void *)(v0 + 1976), *(void *)(v0 + 1960));
  swift_release_n();
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 2088);
  return v2(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  *(void *)(*(void *)(v0 + 1984) + 16) = 0;
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v1);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v3;

  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_26();
  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)&async function pointer to partial apply for implicit closure #6 in SingleCallResultFlow.makeOutput());
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v0 = OUTLINED_FUNCTION_22_31();
  return v1(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void *)(v0 + 1984);

  *(void *)(v1 + 16) = 0;
  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v3;

  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_26();
  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)&async function pointer to partial apply for implicit closure #6 in SingleCallResultFlow.makeOutput());
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v0 = OUTLINED_FUNCTION_22_31();
  return v1(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  *(void *)(*(void *)(v0 + 2016) + 16) = 0;
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v1);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v3;

  swift_release_n();
  outlined consume of (@escaping @callee_guaranteed () -> ())?(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v0 = OUTLINED_FUNCTION_22_31();
  return v1(v0);
}

{
  uint64_t v0;

  return _swift_asyncLet_finish(v0 + 656);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)SingleCallResultFlow.makeOutput());
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  OUTLINED_FUNCTION_40_0();
  (*(void (**)(void, void))(v0[246] + 8))(v0[247], v0[245]);
  uint64_t v1 = v0[254];
  swift_release_n();
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = OUTLINED_FUNCTION_22_31();
  return v3(v2);
}

uint64_t SingleCallResultFlow.makeOutput()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_release();
  uint64_t v11 = v10[227];
  v10[256] = v10[251];
  v10[255] = v11;
  v10[254] = &async function pointer to partial apply for implicit closure #6 in SingleCallResultFlow.makeOutput();
  uint64_t v12 = OUTLINED_FUNCTION_15_34(v11);
  v13(v12);
  char v14 = OUTLINED_FUNCTION_31_21();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 177));
  if (v14)
  {
    __swift_project_boxed_opaque_existential_1((void *)(v10[227] + 184), *(void *)(v10[227] + 208));
    uint64_t v15 = (void *)swift_task_alloc();
    v10[257] = v15;
    void *v15 = v10;
    v15[1] = SingleCallResultFlow.makeOutput();
    uint64_t v16 = OUTLINED_FUNCTION_28_25();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    os_log_type_t v24 = (void *)swift_task_alloc();
    v10[258] = v24;
    *os_log_type_t v24 = v10;
    v24[1] = SingleCallResultFlow.makeOutput();
    OUTLINED_FUNCTION_49_15();
    return static SearchCallHistoryHelper.generateSingleResultCallHistoryModel(item:searchCallHistorySharedGlobals:)();
  }
}

{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = *(void *)(v10 + 2016);
  uint64_t v12 = *(void **)(v10 + 1672);
  *(void *)(v11 + 32) = v12;
  uint64_t v28 = v11;
  specialized Array._endMutation()();
  uint64_t v13 = v12;
  static DialogPhase.completion.getter();
  *(_OWORD *)(swift_task_alloc() + 16) = 0u;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  *(void *)(v10 + 2048) = v28;
  *(_OWORD *)(v10 + 2032) = 0u;
  char v14 = OUTLINED_FUNCTION_15_34(*(void *)(v10 + 1816));
  v15(v14);
  uint64_t v16 = OUTLINED_FUNCTION_31_21();
  __swift_destroy_boxed_opaque_existential_1(v10 + 1416);
  if (v16)
  {
    __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v10 + 1816) + 184), *(void *)(*(void *)(v10 + 1816) + 208));
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v10 + 2056) = v17;
    *uint64_t v17 = v10;
    v17[1] = SingleCallResultFlow.makeOutput();
    uint64_t v18 = OUTLINED_FUNCTION_28_25();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
  }
  else
  {
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v10 + 2064) = v26;
    char *v26 = v10;
    v26[1] = SingleCallResultFlow.makeOutput();
    OUTLINED_FUNCTION_49_15();
    return static SearchCallHistoryHelper.generateSingleResultCallHistoryModel(item:searchCallHistorySharedGlobals:)();
  }
}

uint64_t implicit closure #4 in SingleCallResultFlow.makeOutput()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #4 in SingleCallResultFlow.makeOutput(), 0, 0);
}

uint64_t implicit closure #4 in SingleCallResultFlow.makeOutput()()
{
  OUTLINED_FUNCTION_40_0();
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (void *)v1[36];
  v0[4] = v2;
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[4];
  swift_retain();
  INSearchCallHistoryIntent.isSingleDateRequest.getter();
  char v6 = v5;
  char v7 = INSearchCallHistoryIntent.isTimeRangeRequest.getter();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, void, void))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple
                                                                             + *v2
                                                                             + 400)
                                                                 + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple
                                                                            + *v2
                                                                            + 400));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[5] = v8;
  *uint64_t v8 = v0;
  v8[1] = implicit closure #4 in SingleCallResultFlow.makeOutput();
  return v10(v4, v3, v6 & 1, v7 & 1);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  char v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *char v6 = v5;
  char v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 56) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;

  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t implicit closure #6 in SingleCallResultFlow.makeOutput()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #6 in SingleCallResultFlow.makeOutput(), 0, 0);
}

uint64_t implicit closure #6 in SingleCallResultFlow.makeOutput()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0[3] + 288);
  v0[4] = v1;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple + *v1 + 160)
                         + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple + *v1 + 160));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #6 in SingleCallResultFlow.makeOutput();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *char v6 = v5;
  char v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 56) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t closure #1 in SingleCallResultFlow.makeOutput()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v4[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OutputGenerationManifest.canUseServerTTS.setter();
  OutputGenerationManifest.listenAfterSpeaking.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallNLContextProvider<INIdentifyIncomingCallerIntentResponse>);
  swift_initStackObject();
  specialized IncomingCallNLContextProvider.makeOfferFollowUpIntentContext(followUpOfferType:isAnnouncement:)(3, 0, (uint64_t)v2);
  OutputGenerationManifest.nlContextUpdate.setter();
  return OutputGenerationManifest.printSupportingDialogInDisplayModes.setter();
}

void *SingleCallResultFlow.makeFollowUpAction()()
{
  uint64_t v1 = v0;
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = (void *)(v4 - v3);
  id v6 = objc_allocWithZone((Class)INCallRecordFilter);
  OUTLINED_FUNCTION_11_1();
  id v10 = @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:)(v7, v8, v9);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  uint64_t v11 = *(void **)(v1 + 24);
  id v12 = v10;
  id v13 = v11;
  id v14 = INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:isGroupCall:callGroups:)(v10, v11, 0, 5, 0, 0, 0, 0, 0, 0);
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(*(void *)(v1 + 16), *(id *)(v1 + 40));
  static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
  if (v15)
  {
    uint64_t v16 = v15;
  }
  else
  {
    void *v5 = 0xD000000000000014;
    v5[1] = 0x800000000047BD40;
    v5[2] = 0xD00000000000001FLL;
    v5[3] = 0x8000000000497B20;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type SingleCallResultFlow and conformance SingleCallResultFlow((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    uint64_t v16 = v5;
    PhoneError.logged()(v17);
    outlined destroy of PhoneSnippetDataModels((uint64_t)v5, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
  }

  return v16;
}

uint64_t SingleCallResultFlow.deinit()
{
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  outlined destroy of SearchCallHistorySharedGlobals(v0 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of SingleCallResultFlow.State(*(void *)(v0 + 336));
  return v0;
}

uint64_t SingleCallResultFlow.__deallocating_deinit()
{
  SingleCallResultFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance SingleCallResultFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance SingleCallResultFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232))();
}

uint64_t protocol witness for Flow.execute() in conformance SingleCallResultFlow(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 224) + **(int **)(**(void **)v1 + 224));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance SingleCallResultFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SingleCallResultFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t specialized AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (App.isFirstParty()()) {
    return 0;
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 88))(a1, a2);
  }
}

id @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v7.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v7.super.Class isa = 0;
  }
  id v8 = [v4 initWithParticipants:v7.super.isa callTypes:a2 callCapability:a3];

  return v8;
}

uint64_t specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(__CFString *a1, uint64_t a2, uint64_t a3, void *a4)
{
  v237 = a4;
  uint64_t v226 = a2;
  v239 = (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v219 = v5;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v238 = v7;
  uint64_t v8 = type metadata accessor for CATOption();
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_3_1();
  uint64_t v220 = v10;
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_0_0();
  uint64_t v232 = v12;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_5_8();
  v235 = v14;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v20);
  v228 = (char *)&v209 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v23 = OUTLINED_FUNCTION_11_0(v22);
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_4();
  uint64_t v26 = (__CFString *)(v25 - v24);
  uint64_t v27 = type metadata accessor for Date();
  OUTLINED_FUNCTION_0_0();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  OUTLINED_FUNCTION_5_8();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v209 - v34;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v37 = OUTLINED_FUNCTION_11_0(v36);
  __chkstk_darwin(v37);
  OUTLINED_FUNCTION_5_8();
  uint64_t v236 = v38;
  __chkstk_darwin(v39);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v40);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v42);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v43);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v44);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v45);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v46);
  char v48 = (char *)&v209 - v47;
  type metadata accessor for App();
  outlined bridged method (pb) of @objc INCallRecord.providerBundleId.getter(a1);
  uint64_t v222 = App.__allocating_init(appIdentifier:)();
  specialized AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)(v222, (uint64_t)v237);
  if (v49)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_2();
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 1, 1, v11);
  }
  id v50 = [(__CFString *)a1 dateCreated];
  if (v50)
  {
    int v51 = v50;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v52 = *(void (**)(__CFString *, uint64_t, uint64_t))(v29 + 32);
    v52(v26, v32, v27);
    OUTLINED_FUNCTION_21_28((uint64_t)v26);
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27) != 1)
    {
      v52((__CFString *)v35, (uint64_t)v26, v27);
      goto LABEL_9;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v27);
  }
  Date.init()();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v26, &demangling cache variable for type metadata for Date?);
LABEL_9:
  type metadata accessor for DialogCalendar();
  OUTLINED_FUNCTION_93_1();
  uint64_t v225 = static DialogCalendar.make(date:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v27);
  if ([(__CFString *)a1 callRecordType])
  {
    uint64_t BackingType = INCallRecordTypeGetBackingType();
    switch((int)BackingType)
    {
      case 2:
        uint64_t v54 = @"OUTGOING";
        goto LABEL_21;
      case 3:
        uint64_t v54 = @"MISSED";
        goto LABEL_21;
      case 4:
        uint64_t v54 = @"RECEIVED";
        goto LABEL_21;
      case 5:
        uint64_t v54 = @"LATEST";
        goto LABEL_21;
      case 7:
        uint64_t v54 = @"VOICEMAIL";
        goto LABEL_21;
      case 8:
        uint64_t v54 = @"RINGING";
        goto LABEL_21;
      case 9:
        uint64_t v54 = @"IN_PROGRESS";
        goto LABEL_21;
      case 10:
        uint64_t v54 = @"ON_HOLD";
LABEL_21:
        uint64_t v56 = v54;
        break;
      default:
        uint64_t v54 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        break;
    }
    uint64_t v55 = v236;
    uint64_t v26 = v54;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v55 = v236;
  }
  SpeakableString.init(serializedValue:)();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_11_2();
  uint64_t v57 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(a1);
  unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
  if (v57) {
    unint64_t v59 = v57;
  }
  else {
    unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
  }
  v240[0] = _swiftEmptyArrayStorage;
  v237 = (void *)v59;
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v59 = (unint64_t)v237;
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v60 = *(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v233 = v11;
  v224 = v48;
  v221 = a1;
  if (v60)
  {
    unint64_t v234 = type metadata accessor for PhonePerson(0);
    if (v60 < 1)
    {
      __break(1u);
      goto LABEL_97;
    }
    uint64_t v61 = 0;
    char v62 = v226 & 2;
    unint64_t v63 = v59 & 0xC000000000000001;
    uint64_t v64 = (void (**)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t)))(v219 + 8);
    do
    {
      if (v63) {
        id v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v65 = *(id *)(v59 + 8 * v61 + 32);
      }
      uint64_t v66 = v65;
      static Device.current.getter();
      __swift_project_boxed_opaque_existential_1(v242, (uint64_t)v242[3]);
      uint64_t v67 = v238;
      dispatch thunk of DeviceState.siriLocale.getter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v242);
      uint64_t v68 = static PhonePerson.make(phonePerson:options:locale:)(v66, v62, v67);
      (*v64)(v67, v239);

      uint64_t v55 = v236;
      if (v68)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v240[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                           + (v240[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v61;
      unint64_t v59 = (unint64_t)v237;
    }
    while (v60 != v61);
    swift_bridgeObjectRelease();
    uint64_t v69 = (void *)v240[0];
    uint64_t v11 = v233;
    a1 = v221;
    unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v69 = _swiftEmptyArrayStorage;
  }
  unint64_t v234 = (unint64_t)v69;
  swift_bridgeObjectRelease();
  uint64_t v70 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(a1);
  if (v70) {
    unint64_t v58 = v70;
  }
  if (v58 >> 62)
  {
    OUTLINED_FUNCTION_57_6();
    uint64_t v26 = (__CFString *)_CocoaArrayWrapper.endIndex.getter();
    if (v26)
    {
LABEL_45:
      if ((uint64_t)v26 >= 1)
      {
        uint64_t v71 = 0;
        uint64_t v72 = (void (**)(void))(v232 + 32);
        v237 = _swiftEmptyArrayStorage;
        do
        {
          if ((v58 & 0xC000000000000001) != 0) {
            id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v73 = *(id *)(v58 + 8 * (void)v71 + 32);
          }
          uint64_t v74 = v73;
          outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v73);
          OUTLINED_FUNCTION_11_2();
          __swift_storeEnumTagSinglePayload(v55, 0, 1, v11);

          if (__swift_getEnumTagSinglePayload(v55, 1, v11) == 1)
          {
            outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v55, &demangling cache variable for type metadata for SpeakableString?);
          }
          else
          {
            uint64_t v75 = *v72;
            OUTLINED_FUNCTION_39_16();
            v75();
            OUTLINED_FUNCTION_39_16();
            v75();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v237 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v237[2] + 1, 1, (uint64_t)v237);
            }
            unint64_t v77 = v237[2];
            unint64_t v76 = v237[3];
            if (v77 >= v76 >> 1) {
              v237 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1, (uint64_t)v237);
            }
            v237[2] = v77 + 1;
            uint64_t v11 = v233;
            OUTLINED_FUNCTION_39_16();
            v75();
            uint64_t v55 = v236;
          }
          uint64_t v71 = (__CFString *)((char *)v71 + 1);
        }
        while (v26 != v71);
        goto LABEL_62;
      }
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v26 = *(__CFString **)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_45;
    }
  }
  v237 = _swiftEmptyArrayStorage;
LABEL_62:
  swift_bridgeObjectRelease_n();
  if (v234 >> 62)
  {
    OUTLINED_FUNCTION_57_6();
    uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v78 = *(void *)((char *)&dword_10 + (v234 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = v221;
  if (!v78)
  {
    swift_bridgeObjectRelease();
    uint64_t v82 = 0;
    goto LABEL_67;
  }
  uint64_t v79 = OUTLINED_FUNCTION_102_1();
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v79, v80, v81);
LABEL_98:
  uint64_t v82 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_67:
  v83 = v26;
  static Device.current.getter();
  type metadata accessor for PhoneCallDisplayTextCATs();
  OUTLINED_FUNCTION_45_14();
  id v84 = (void *)CATWrapper.__allocating_init(options:globals:)();
  v235 = v83;
  v242[0] = v83;
  v242[6] = v84;
  CallRecordDisplayTextComponents.callDateText.getter();
  uint64_t v85 = v217;
  static CallRecordViewUtils.generateDisplayTime(dateTime:formattedDate:)(v217);
  swift_bridgeObjectRelease();
  uint64_t v86 = v232;
  unint64_t v87 = (__CFString *)(v232 + 8);
  uint64_t v88 = v229;
  v231 = *(void (**)(uint64_t, uint64_t))(v232 + 8);
  v231((uint64_t)v229, v11);
  uint64_t v89 = v11;
  uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32);
  v90((uint64_t)v88, v85, v89);
  uint64_t v91 = INCallRecord.callDuration.getter();
  if ((v92 & 1) == 0)
  {
    double v93 = *(double *)&v91;
    id v94 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v94 setUnitsStyle:0];
    [v94 setAllowedUnits:192];
    [v94 setZeroFormattingBehavior:0x10000];
    id v95 = [v94 stringFromTimeInterval:ceil(v93)];
    if (v95)
    {
      v96 = v95;
      uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v99 = v98;

      swift_bridgeObjectRetain();
      v100._uint64_t countAndFlagsBits = 48;
      v100._object = (void *)0xE100000000000000;
      LOBYTE(v96) = String.hasPrefix(_:)(v100);
      swift_bridgeObjectRelease();
      if (v96)
      {
        specialized Collection.dropFirst(_:)(1uLL, v97, v99);
        static String._fromSubstring(_:)();
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v101 = v218;
  OUTLINED_FUNCTION_11_2();
  uint64_t v102 = v230;
  uint64_t v103 = v233;
  v231(v230, v233);
  v90(v102, v101, v103);
  unint64_t v104 = v235;
  v105 = (char *)[(__CFString *)v235 callRecordType];
  v221 = v87;
  if (v105 != (unsigned char *)&dword_4 + 1)
  {
    if (![(__CFString *)v104 preferredCallProvider])
    {
      uint64_t v217 = 0xE700000000000000;
      uint64_t v213 = 0x4E574F4E4B4E55;
      uint64_t v108 = v233;
      goto LABEL_86;
    }
    uint64_t v109 = INPreferredCallProviderGetBackingType();
    uint64_t v108 = v233;
    switch(v109)
    {
      case 4:
        v110 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        v110 = @"FACETIME_PROVIDER";
        break;
      case 2:
        v110 = @"TELEPHONY_PROVIDER";
        break;
      default:
        v110 = +[NSString stringWithFormat:@"(unknown: %i)", v109];
        goto LABEL_84;
    }
    v111 = v110;
LABEL_84:
    uint64_t v106 = v110;
    goto LABEL_85;
  }
  uint64_t v106 = @"TELEPHONY_PROVIDER";
  unint64_t v107 = @"TELEPHONY_PROVIDER";
  uint64_t v108 = v233;
LABEL_85:
  v112 = v106;
  uint64_t v213 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v217 = v113;

LABEL_86:
  type metadata accessor for PhoneCallRecord.Builder(0);
  OUTLINED_FUNCTION_21_0();
  PhoneCallRecord.Builder.init()();
  id v114 = [(__CFString *)v104 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v115 = v227;
  SpeakableString.init(serializedValue:)();
  __swift_storeEnumTagSinglePayload(v115, 0, 1, v108);
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v116 + 856))(v115);
  OUTLINED_FUNCTION_24_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v115, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_6();
  v118 = *(void (**)(uint64_t))(v117 + 872);
  uint64_t v119 = swift_retain();
  v118(v119);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2();
  uint64_t v120 = OUTLINED_FUNCTION_40_15();
  uint64_t v122 = v121(v120);
  swift_release();
  unint64_t v123 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(v104);
  if (!v123)
  {
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_101;
  }
  unint64_t v124 = v123;
  if (v123 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_89;
    }
LABEL_100:
    swift_bridgeObjectRelease();
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_101;
  }
  if (!*(void *)((char *)&dword_10 + (v123 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_100;
  }
LABEL_89:
  uint64_t v125 = OUTLINED_FUNCTION_102_1();
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v125, v126, v127);
  if (v114) {
    goto LABEL_138;
  }
  for (id i = *(id *)(v124 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    v129 = i;
    swift_bridgeObjectRelease();
    v130 = (void *)outlined bridged method (ob) of @objc INPerson.alternatives.getter(v129);
    unint64_t v131 = (unint64_t)(v130 ? v130 : _swiftEmptyArrayStorage);
LABEL_101:
    uint64_t v218 = v82;
    unint64_t v241 = (unint64_t)_swiftEmptyArrayStorage;
    if (v131 >> 62)
    {
      OUTLINED_FUNCTION_57_6();
      uint64_t v132 = _CocoaArrayWrapper.endIndex.getter();
      if (!v132)
      {
LABEL_115:
        swift_bridgeObjectRelease();
        v141 = _swiftEmptyArrayStorage;
        goto LABEL_116;
      }
    }
    else
    {
      uint64_t v132 = *(void *)((char *)&dword_10 + (v131 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v132) {
        goto LABEL_115;
      }
    }
    uint64_t v236 = type metadata accessor for PhonePerson(0);
    if (v132 >= 1) {
      break;
    }
    __break(1u);
LABEL_138:
    ;
  }
  uint64_t v210 = v122;
  uint64_t v133 = 0;
  unint64_t v134 = v131 & 0xC000000000000001;
  long long v135 = (void (**)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t)))(v219 + 8);
  long long v136 = (void *)v131;
  uint64_t v137 = v238;
  do
  {
    if (v134) {
      id v138 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v138 = *(id *)(v131 + 8 * v133 + 32);
    }
    v139 = v138;
    static Device.current.getter();
    __swift_project_boxed_opaque_existential_1(v240, v240[3]);
    dispatch thunk of DeviceState.siriLocale.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
    uint64_t v140 = static PhonePerson.make(phonePerson:options:locale:)(v139, 0, v137);
    (*v135)(v137, v239);

    if (v140)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + (v241 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                      + (v241 & 0xFFFFFFFFFFFFFF8)) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    ++v133;
    unint64_t v131 = (unint64_t)v136;
  }
  while (v132 != v133);
  swift_bridgeObjectRelease();
  v141 = (void *)v241;
  uint64_t v122 = v210;
LABEL_116:
  swift_bridgeObjectRelease();
  (*(void (**)(void *))(*(void *)v122 + 904))(v141);
  swift_release();
  swift_bridgeObjectRelease();
  v142 = *(void (**)(uint64_t, char *, uint64_t))(v232 + 16);
  uint64_t v143 = v227;
  uint64_t v144 = v233;
  v142(v227, v228, v233);
  __swift_storeEnumTagSinglePayload(v143, 0, 1, v144);
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v145 + 912))(v143);
  OUTLINED_FUNCTION_24_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v143, &demangling cache variable for type metadata for SpeakableString?);
  v146 = v235;
  id v147 = INCallRecord.refinedCallDurationAsDouble.getter();
  LOBYTE(v143) = v148;
  type metadata accessor for PhoneCallMetrics();
  if (v143) {
    uint64_t v149 = 0;
  }
  else {
    uint64_t v149 = (uint64_t)v147;
  }
  PhoneCallMetrics.__allocating_init(timeToEstablish:duration:)(0, 0, v149, 0);
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_32_17();
  v150();
  swift_release();
  swift_release();
  INCallRecord.refinedUnseenAsBool.getter();
  OUTLINED_FUNCTION_7_60();
  (*(void (**)(void))(v151 + 944))(v152 & 1);
  OUTLINED_FUNCTION_47_15();
  id v153 = [(__CFString *)v146 callCapability];
  uint64_t v154 = v216;
  if (!v153)
  {
    uint64_t v156 = v214;
    goto LABEL_128;
  }
  uint64_t v155 = INCallCapabilityGetBackingType();
  uint64_t v156 = v214;
  if (v155 == 2)
  {
    v157 = @"VIDEO_CALL";
  }
  else
  {
    if (v155 != 1)
    {
      v157 = +[NSString stringWithFormat:@"(unknown: %i)", v155];
      goto LABEL_127;
    }
    v157 = @"AUDIO_CALL";
  }
  v158 = v157;
LABEL_127:
  v159 = v157;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_128:
  uint64_t v160 = v215;
  SpeakableString.init(serializedValue:)();
  uint64_t v161 = v233;
  __swift_storeEnumTagSinglePayload(v160, 0, 1, v233);
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v162 + 952))(v160);
  OUTLINED_FUNCTION_24_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v160, &demangling cache variable for type metadata for SpeakableString?);
  id v163 = INCallRecord.refinedNumberOfCallsAsInt.getter();
  if (v164) {
    id v163 = 0;
  }
  specialized Double.init<A>(exactly:)((uint64_t)v163);
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_32_17();
  uint64_t v166 = v165();
  swift_release();
  uint64_t v167 = v223;
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_21_28(v167);
  outlined init with copy of ConfirmationResponse?((uint64_t)v224, v154, &demangling cache variable for type metadata for SpeakableString?);
  App.appIdentifier.getter();
  if (v168)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_2();
    OUTLINED_FUNCTION_21_28(v156);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v156, 1, 1, v161);
  }
  type metadata accessor for PhoneCallProvider(0);
  uint64_t v169 = PhoneCallProvider.__allocating_init(preferredCallProvider:providerName:providerBundleId:)(v223, v154, v156);
  (*(void (**)(uint64_t))(*(void *)v166 + 976))(v169);
  swift_release();
  swift_release();
  INCallRecord.refinedIsCallerIDBlockedAsBool.getter();
  OUTLINED_FUNCTION_7_60();
  (*(void (**)(void))(v170 + 992))(v171 & 1);
  OUTLINED_FUNCTION_47_15();
  uint64_t v172 = v227;
  v142(v227, v229, v161);
  __swift_storeEnumTagSinglePayload(v172, 0, 1, v161);
  OUTLINED_FUNCTION_2();
  uint64_t v173 = OUTLINED_FUNCTION_40_15();
  v174(v173);
  OUTLINED_FUNCTION_24_22();
  OUTLINED_FUNCTION_20_29();
  v239 = (void (*)(uint64_t, uint64_t, uint64_t))v142;
  uint64_t v175 = SpeakableString.print.getter();
  static CallRecordViewUtils.generatedDisplayTextColor(callRecordType:forCallHistoryDisplay:)(v175, v176);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_32_17();
  v177();
  swift_release();
  OUTLINED_FUNCTION_20_29();
  uint64_t v178 = SpeakableString.print.getter();
  static CallRecordViewUtils.generatedDisplaySymbolIcon(callRecordType:forCallHistoryDisplay:)(v178, v179);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_60();
  (*(void (**)(uint64_t))(v180 + 1048))(v172);
  OUTLINED_FUNCTION_47_15();
  OUTLINED_FUNCTION_20_29();
  static Device.current.getter();
  v181 = (void *)OUTLINED_FUNCTION_33_15();
  static CallRecordViewUtils.generatedSelectedAction(callRecord:forCallHistoryDisplay:deviceState:)(v181, v182, v183, v184);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
  OUTLINED_FUNCTION_2();
  uint64_t v185 = OUTLINED_FUNCTION_40_15();
  v186(v185);
  OUTLINED_FUNCTION_24_22();
  OUTLINED_FUNCTION_20_29();
  OUTLINED_FUNCTION_33_15();
  static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)(v187, v188);
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_32_17();
  v189();
  swift_release();
  OUTLINED_FUNCTION_20_29();
  OUTLINED_FUNCTION_33_15();
  static CallRecordViewUtils.generatedActionForOpeningCallRecord(callRecord:forCallHistoryDisplay:)(v190, v191);
  OUTLINED_FUNCTION_2();
  uint64_t v192 = OUTLINED_FUNCTION_40_15();
  v193(v192);
  OUTLINED_FUNCTION_24_22();
  OUTLINED_FUNCTION_20_29();
  v239(v172, v230, v161);
  OUTLINED_FUNCTION_21_28(v172);
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_32_17();
  uint64_t v195 = v194();
  swift_release();
  OUTLINED_FUNCTION_20_29();
  id v196 = INCallRecord.refinedCallDurationAsDouble.getter();
  (*(void (**)(id, void))(*(void *)v195 + 1168))(v196, v197 & 1);
  swift_release();
  OUTLINED_FUNCTION_2();
  unint64_t v199 = v234;
  (*(void (**)(unint64_t))(v198 + 1144))(v234);
  OUTLINED_FUNCTION_24_22();
  specialized Sequence.compactMap<A>(_:)(v199);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_32_17();
  v200();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  uint64_t v202 = (*(uint64_t (**)(void *))(v201 + 1160))(v237);
  swift_release();
  swift_bridgeObjectRelease();
  if (v226)
  {
    type metadata accessor for PhoneCallRecord(0);
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_93_1();
    swift_retain();
    PhoneCallRecord.init(builder:)();
    type metadata accessor for SearchCallHistoryCATs();
    OUTLINED_FUNCTION_45_14();
    CATWrapper.__allocating_init(options:globals:)();
    uint64_t v203 = v211;
    static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATs:callRecord:)(v211);
    uint64_t v204 = v212;
    (*(void (**)(uint64_t))(*(void *)v202 + 1000))(v203);
    swift_release();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v203, &demangling cache variable for type metadata for SpeakableString?);
    static CallRecordViewUtils.generatedDisplayCallDetail(searchCallHistoryCATs:callRecord:)(v204);
    (*(void (**)(uint64_t))(*(void *)v202 + 1064))(v204);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v204, &demangling cache variable for type metadata for SpeakableString?);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  outlined destroy of CallRecordDisplayTextComponents(v242);
  v205 = (void (*)(uint64_t))v231;
  v231(v230, v161);
  uint64_t v206 = OUTLINED_FUNCTION_50_12((uint64_t)&v244);
  v205(v206);
  uint64_t v207 = OUTLINED_FUNCTION_50_12((uint64_t)&v243);
  v205(v207);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v224, &demangling cache variable for type metadata for SpeakableString?);
  return v202;
}

uint64_t outlined copy of SingleCallResultFlow.State(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t outlined consume of SingleCallResultFlow.State(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t type metadata accessor for SingleCallResultFlow()
{
  return self;
}

uint64_t partial apply for closure #1 in SingleCallResultFlow.execute()()
{
  return closure #1 in SingleCallResultFlow.execute()();
}

uint64_t sub_27A334@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 160))();
  *a2 = result;
  return result;
}

unint64_t destroy for SingleCallResultFlow.State(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_errorRelease();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SingleCallResultFlow.State(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((int)v4 - 1 < 0) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

uint64_t *assignWithCopy for SingleCallResultFlow.State(uint64_t *a1, uint64_t *a2)
{
  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  else {
    uint64_t v4 = *a1;
  }
  int v5 = v4 - 1;
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v3 = *a2;
  }
  int v7 = v3 - 1;
  if (v5 < 0)
  {
    if (v7 < 0)
    {
      swift_errorRetain();
      *a1 = v6;
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      *a1 = *a2;
    }
  }
  else
  {
    if (v7 < 0) {
      swift_errorRetain();
    }
    *a1 = v6;
  }
  return a1;
}

unint64_t *assignWithTake for SingleCallResultFlow.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  int v4 = -1;
  if (v3 < 0xFFFFFFFF) {
    int v4 = v3;
  }
  unint64_t v5 = *a2;
  if (v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF) {
      unint64_t v6 = *a2;
    }
    if ((int)v6 - 1 < 0)
    {
      *a1 = v5;
      swift_errorRelease();
      return a1;
    }
    swift_errorRelease();
  }
  *a1 = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleCallResultFlow.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 1;
  if (v5 >= 3) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t getEnumTag for SingleCallResultFlow.State(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *destructiveInjectEnumTag for SingleCallResultFlow.State(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2) {
LABEL_5:
  }
    *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SingleCallResultFlow.State()
{
  return &type metadata for SingleCallResultFlow.State;
}

uint64_t partial apply for implicit closure #4 in SingleCallResultFlow.makeOutput()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v3 = OUTLINED_FUNCTION_21_7();
  return implicit closure #4 in SingleCallResultFlow.makeOutput()(v3, v4);
}

uint64_t outlined init with copy of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = OUTLINED_FUNCTION_74();
  v5(v4);
  return a2;
}

uint64_t partial apply for implicit closure #6 in SingleCallResultFlow.makeOutput()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v3 = OUTLINED_FUNCTION_21_7();
  return implicit closure #6 in SingleCallResultFlow.makeOutput()(v3, v4);
}

uint64_t partial apply for closure #1 in SingleCallResultFlow.makeOutput()()
{
  return closure #1 in SingleCallResultFlow.makeOutput()();
}

uint64_t outlined destroy of PhoneSnippetDataModels(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_27A778()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in SingleCallResultFlow.executeRead()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  void *v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v3 = OUTLINED_FUNCTION_21_7();
  return closure #1 in SingleCallResultFlow.executeRead()(v3, v4);
}

uint64_t partial apply for closure #3 in SingleCallResultFlow.executeRead()()
{
  return SingleCallResultFlow.state.setter(0);
}

uint64_t partial apply for closure #2 in SingleCallResultFlow.executeRead()(uint64_t a1)
{
  return closure #2 in SingleCallResultFlow.executeRead()(a1, v1);
}

uint64_t lazy protocol witness table accessor for type SingleCallResultFlow and conformance SingleCallResultFlow(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_15_34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = *(void *)(a1 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 64), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_18_26()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_20_29()
{
  return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_31()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_28_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_21()
{
  __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 1440));
  return dispatch thunk of DeviceState.isCarPlay.getter();
}

uint64_t OUTLINED_FUNCTION_33_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_43_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45_14()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_47_15()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_49_15()
{
  return *(void *)(v0 + 1920);
}

uint64_t OUTLINED_FUNCTION_50_12@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

unint64_t EmergencyDuringOngoingCallPromptType.description.getter(void *a1, void *a2, char a3)
{
  if (!a3)
  {
    id v19 = a1;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xD000000000000010;
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INPerson?);
    v21._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 41;
    v22._object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    outlined consume of EmergencyDuringOngoingCallPromptType(a1, a2, 0);
    return v24;
  }
  if (a3 == 1)
  {
    id v5 = a1;
    id v6 = a2;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xD000000000000018;
    id v7 = [v5 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    v11._uint64_t countAndFlagsBits = v8;
    v11._object = v10;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    id v13 = [v6 description];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    v17._uint64_t countAndFlagsBits = v14;
    v17._object = v16;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._uint64_t countAndFlagsBits = 41;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);

    return v24;
  }
  return 0xD000000000000011;
}

void *static EmergencyDuringOngoingCallPromptType.from(intent:intentResolutionResult:)(void *a1, void *a2)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = (void *)v4;
    id v6 = a1;
    id v7 = (char *)[a2 unsupportedReason];
    if (v7 != (unsigned char *)&dword_4 + 1)
    {
      if (v7 == (unsigned char *)&dword_4 + 2)
      {

        return 0;
      }

      goto LABEL_16;
    }
    unint64_t v10 = outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(v5);
    if (!v10)
    {

      return 0;
    }
    unint64_t v11 = v10;
    if (v10 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_11;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_11:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v11 & 0xC000000000000001) == 0);
      if ((v11 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v11 + 32);
      }
      uint64_t v9 = v12;
      swift_bridgeObjectRelease();
      id v13 = [v9 personHandle];
      if (v13)
      {
        id v13 = (id)outlined bridged method (ob) of @objc INPersonHandle.value.getter(v13);
        unint64_t v15 = v14;
      }
      else
      {
        unint64_t v15 = 0;
      }
      char v20 = specialized Optional<A>.isNilOrEmpty.getter((uint64_t)v13, v15);

      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        return v9;
      }

      return 0;
    }

    swift_bridgeObjectRelease();
    return 0;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v8 = [a2 unsupportedReason];
    if ((id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v8) {
      return 0;
    }
  }
LABEL_16:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  Swift::String v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "#EmergencyDuringOngoingCallPromptType Intent and resolutionResult do not correspond to an emergency usecase.", v19, 2u);
    swift_slowDealloc();
  }

  return 0;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance EmergencyDuringOngoingCallPromptType()
{
  return EmergencyDuringOngoingCallPromptType.description.getter(*(void **)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void destroy for EmergencyDuringOngoingCallPromptType(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for EmergencyDuringOngoingCallPromptType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of EmergencyDuringOngoingCallPromptType(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EmergencyDuringOngoingCallPromptType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of EmergencyDuringOngoingCallPromptType(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  id v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  outlined consume of EmergencyDuringOngoingCallPromptType(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EmergencyDuringOngoingCallPromptType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  outlined consume of EmergencyDuringOngoingCallPromptType(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyDuringOngoingCallPromptType(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyDuringOngoingCallPromptType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for EmergencyDuringOngoingCallPromptType(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t destructiveInjectEnumTag for EmergencyDuringOngoingCallPromptType(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyDuringOngoingCallPromptType()
{
  return &type metadata for EmergencyDuringOngoingCallPromptType;
}

PhoneCallFlowDelegatePlugin::PhoneCallCommonCATsSimple::Properties_optional __swiftcall PhoneCallCommonCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallCommonCATsSimple.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::PhoneCallCommonCATsSimple::Properties_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneCallCommonCATsSimple::Properties_optional)v3;
  }
}

void PhoneCallCommonCATsSimple.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallCommonCATsSimple.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallCommonCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallCommonCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneCallCommonCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCommonCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallCommonCATsSimple::Properties_optional *a2@<X8>)
{
  result.int value = PhoneCallCommonCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallCommonCATsSimple.Properties(void *a1@<X8>)
{
  PhoneCallCommonCATsSimple.Properties.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t PhoneCallCommonCATsSimple.orList(items:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneCallCommonCATsSimple.orList(items:));
}

uint64_t PhoneCallCommonCATsSimple.orList(items:)()
{
  OUTLINED_FUNCTION_16_1();
  unint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)swift_allocObject();
  v0[4] = v2;
  OUTLINED_FUNCTION_1_36(v2, (__n128)xmmword_467710);
  v2[4].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  v2[3].n128_u64[0] = v1;
  OUTLINED_FUNCTION_16_21();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = AnnounceIncomingCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:);
  OUTLINED_FUNCTION_24_10();
  return v5(0xD000000000000016);
}

BOOL PhoneCallCommonCATsSimple.OrListDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallCommonCATsSimple.OrListDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCommonCATsSimple.OrListDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallCommonCATsSimple.OrListDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t PhoneCallCommonCATsSimple.orListAsLabels(items:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneCallCommonCATsSimple.orListAsLabels(items:));
}

uint64_t PhoneCallCommonCATsSimple.orListAsLabels(items:)()
{
  OUTLINED_FUNCTION_16_1();
  unint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)swift_allocObject();
  v0[4] = v2;
  OUTLINED_FUNCTION_1_36(v2, (__n128)xmmword_467710);
  v2[4].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  v2[3].n128_u64[0] = v1;
  OUTLINED_FUNCTION_16_21();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds();
  *uint64_t v3 = v0;
  v3[1] = AnnounceIncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:);
  OUTLINED_FUNCTION_24_10();
  return v5(0xD000000000000016);
}

unint64_t lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListDialogIds and conformance PhoneCallCommonCATsSimple.OrListDialogIds);
  }
  return result;
}

uint64_t PhoneCallCommonCATsSimple.orListForPics(contactNamesNotFromPics:contactNameOfPics:inferenceSource:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t (*v14)(uint64_t, unint64_t, uint64_t);
  uint64_t v15;

  OUTLINED_FUNCTION_21_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = swift_allocObject();
  v3[8] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_46A250;
  *(void *)(v5 + 32) = v4 | 6;
  *(void *)(v5 + 40) = 0x80000000004931C0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  *(void *)(v5 + 48) = v1;
  *(void *)(v5 + 72) = v6;
  *(void *)(v5 + 80) = v4;
  *(void *)(v5 + 88) = 0x80000000004931E0;
  outlined init with copy of Result<TemplatingResult, Error>(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_17_29(v7);
  if (v8)
  {
    swift_bridgeObjectRetain();
    outlined destroy of SubmitCommandError?(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v5 + 96) = 0u;
    *(_OWORD *)(v5 + 112) = 0u;
  }
  else
  {
    *(void *)(v5 + 120) = v0;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 + 96));
    OUTLINED_FUNCTION_9_52();
    OUTLINED_FUNCTION_23_31();
    v9();
    swift_bridgeObjectRetain();
  }
  unint64_t v10 = OUTLINED_FUNCTION_3_73();
  outlined init with copy of Result<TemplatingResult, Error>(v10, v5 + 96, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v5 + 96, 1, v0) == 1)
  {
    outlined destroy of SubmitCommandError?(v3[6], &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    *(void *)(v5 + 168) = v0;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)v2);
    OUTLINED_FUNCTION_9_52();
    (*(void (**)(void))(v11 + 32))();
  }
  id v12 = (void *)OUTLINED_FUNCTION_9_0();
  v3[9] = (uint64_t)v12;
  *id v12 = v3;
  v12[1] = PhoneCallCommonCATsSimple.orListForPics(contactNamesNotFromPics:contactNameOfPics:inferenceSource:);
  return v14(v4 + 12, 0x800000000048C830, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL PhoneCallCommonCATsSimple.OrListForPicsDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallCommonCATsSimple.OrListForPicsDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallCommonCATsSimple.OrListForPicsDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t PhoneCallCommonCATsSimple.orListForPicsAsLabels(contactNamesNotFromPics:contactNameOfPics:inferenceSource:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v15)(void);
  uint64_t v16;

  OUTLINED_FUNCTION_21_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = swift_allocObject();
  v3[8] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_46A250;
  *(void *)(v5 + 32) = v4 | 6;
  *(void *)(v5 + 40) = 0x80000000004931C0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  *(void *)(v5 + 48) = v1;
  *(void *)(v5 + 72) = v6;
  *(void *)(v5 + 80) = v4;
  *(void *)(v5 + 88) = 0x80000000004931E0;
  outlined init with copy of Result<TemplatingResult, Error>(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_17_29(v7);
  if (v8)
  {
    swift_bridgeObjectRetain();
    outlined destroy of SubmitCommandError?(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v5 + 96) = 0u;
    *(_OWORD *)(v5 + 112) = 0u;
  }
  else
  {
    *(void *)(v5 + 120) = v0;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 + 96));
    OUTLINED_FUNCTION_9_52();
    OUTLINED_FUNCTION_23_31();
    v9();
    swift_bridgeObjectRetain();
  }
  unint64_t v10 = OUTLINED_FUNCTION_3_73();
  outlined init with copy of Result<TemplatingResult, Error>(v10, v5 + 96, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v5 + 96, 1, v0) == 1)
  {
    outlined destroy of SubmitCommandError?(v3[6], &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    *(void *)(v5 + 168) = v0;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)v2);
    OUTLINED_FUNCTION_9_52();
    (*(void (**)(void))(v11 + 32))();
  }
  id v12 = (void *)OUTLINED_FUNCTION_9_0();
  v3[9] = (uint64_t)v12;
  lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *id v12 = v13;
  v12[1] = PhoneCallCommonCATsSimple.orListForPicsAsLabels(contactNamesNotFromPics:contactNameOfPics:inferenceSource:);
  OUTLINED_FUNCTION_24_10();
  return v15();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.OrListForPicsDialogIds and conformance PhoneCallCommonCATsSimple.OrListForPicsDialogIds);
  }
  return result;
}

uint64_t PhoneCallCommonCATsSimple.phoneFeaturesUnavailable()()
{
  OUTLINED_FUNCTION_1_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  return v3(0xD000000000000028);
}

BOOL PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t PhoneCallCommonCATsSimple.phoneFeaturesUnavailableAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  return v4(0xD000000000000028);
}

unint64_t lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds and conformance PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds);
  }
  return result;
}

uint64_t PhoneCallCommonCATsSimple.promptCancelled()()
{
  OUTLINED_FUNCTION_1_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_24_10();
  return v3(0xD00000000000001FLL);
}

BOOL PhoneCallCommonCATsSimple.PromptCancelledDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallCommonCATsSimple.PromptCancelledDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallCommonCATsSimple.PromptCancelledDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t PhoneCallCommonCATsSimple.promptCancelledAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  return v4(0xD00000000000001FLL);
}

unint64_t lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.PromptCancelledDialogIds and conformance PhoneCallCommonCATsSimple.PromptCancelledDialogIds);
  }
  return result;
}

uint64_t PhoneCallCommonCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t PhoneCallCommonCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type PhoneCallCommonCATsSimple.Properties and conformance PhoneCallCommonCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.Properties and conformance PhoneCallCommonCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.Properties and conformance PhoneCallCommonCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATsSimple.Properties and conformance PhoneCallCommonCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata completion function for PhoneCallCommonCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for PhoneCallCommonCATsSimple()
{
  return type metadata accessor for PhoneCallCommonCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for PhoneCallCommonCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x27C560);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for PhoneCallCommonCATsSimple.Properties()
{
}

void type metadata accessor for PhoneCallCommonCATsSimple.OrListDialogIds()
{
}

void type metadata accessor for PhoneCallCommonCATsSimple.OrListForPicsDialogIds()
{
}

void type metadata accessor for PhoneCallCommonCATsSimple.PhoneFeaturesUnavailableDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for PhoneCallCommonCATsSimple.OrListDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x27C658);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for PhoneCallCommonCATsSimple.PromptCancelledDialogIds()
{
}

uint64_t OUTLINED_FUNCTION_3_73()
{
  uint64_t result = *(void *)(v0 + 32);
  *(void *)(v1 + 128) = 0x636E657265666E69;
  *(void *)(v1 + 136) = 0xEF656372756F5365;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_29(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology9UsoEntityCG_0D28ReferenceResolutionDataModel12ResolveQueryCs5NeverOTg5033_s27PhoneCallFlowDelegatePlugin33h7Contacti183WrapperO20runCombinedSRRandCRR33_6E03C60D186988DA16A96BF8932754FFLL13siriKitIntent3app02nlW013sharedGlobals20contactGroupResolverAC20SRRResolutionResultsAELLVAA013NCRResolvableW0_p_07d91AppH03AppCAA0aB8NLIntent_pAA22SharedGlobalsProviding_pAA0G14GroupResolving_ptFZSay04SirifH9j26Model8RRResultOGyXEfU_AT12lm3C12d9Ontology9fG6CXEfU_AJ21MatchedResultsSettingOTf1cn_n(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v14 = a2;
  uint64_t v13 = type metadata accessor for MatchedResultsSetting();
  uint64_t v5 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v8) {
      break;
    }
    unint64_t v15 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = v3;
    swift_beginAccess();
    uint64_t v10 = 0;
    unint64_t v11 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (v8 != v10)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v10;
      (*v11)(v7, v14, v13);
      type metadata accessor for ResolveQuery();
      swift_allocObject();
      uint64_t v5 = ResolveQuery.init(referenceEntity:alternativeEntityTypes:restrictedEntitiesKey:matchedResultsSetting:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v3 = v15[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v8 == v10) {
        return v15;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

void *specialized Sequence.filter(_:)(unint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
LABEL_27:
  }
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  else {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (v4)
  {
    unint64_t v5 = 0;
    unint64_t v21 = v3 & 0xC000000000000001;
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v7 = (void *)(v3 + 32);
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
    char v20 = a2;
    do
    {
      unint64_t v8 = v5;
      while (1)
      {
        if (v21)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v8 >= *(void *)(v6 + 16))
          {
            __break(1u);
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
          id v9 = (id)v7[v8];
        }
        uint64_t v10 = v9;
        unint64_t v5 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_26;
        }
        uint64_t v11 = *a2;
        if (!*(void *)(*a2 + 16)) {
          break;
        }
        uint64_t v12 = static Hasher._hash(seed:_:)();
        uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
        unint64_t v14 = v12 & ~v13;
        if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        uint64_t v15 = *(void *)(v11 + 48);
        if (*(void *)(v15 + 8 * v14) != v8)
        {
          uint64_t v16 = ~v13;
          do
          {
            unint64_t v14 = (v14 + 1) & v16;
            if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
              goto LABEL_19;
            }
          }
          while (*(void *)(v15 + 8 * v14) != v8);
        }

        ++v8;
        if (v5 == v4) {
          goto LABEL_24;
        }
      }
LABEL_19:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      unint64_t v17 = _swiftEmptyArrayStorage[2];
      if (v17 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v17 + 1;
      os_log_type_t v18 = &_swiftEmptyArrayStorage[2 * v17];
      v18[4] = v8;
      v18[5] = v10;
      a2 = v20;
    }
    while (v5 != v4);
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

__n128 static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t ObjectType = swift_getObjectType();
  specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)(a1, a3, a4, a5, a6, a7, a8, a9 & 1, a10, a11, a12, ObjectType, a2, v22, a10, a11, v23, v24, v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31);
  return result;
}

uint64_t closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology9UsoEntityCG_0D28ReferenceResolutionDataModel12ResolveQueryCs5NeverOTg5033_s27PhoneCallFlowDelegatePlugin33h7Contacti183WrapperO20runCombinedSRRandCRR33_6E03C60D186988DA16A96BF8932754FFLL13siriKitIntent3app02nlW013sharedGlobals20contactGroupResolverAC20SRRResolutionResultsAELLVAA013NCRResolvableW0_p_07d91AppH03AppCAA0aB8NLIntent_pAA22SharedGlobalsProviding_pAA0G14GroupResolving_ptFZSay04SirifH9j26Model8RRResultOGyXEfU_AT12lm3C12d9Ontology9fG6CXEfU_AJ21MatchedResultsSettingOTf1cn_n(v6, a1);
  swift_bridgeObjectRelease();
  v10[2] = a2;
  unint64_t v8 = specialized Sequence.compactMap<A>(_:)((void (*)(uint64_t *))partial apply for closure #2 in closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)v10, (unint64_t)v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v8;
  return result;
}

uint64_t closure #2 in closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v3 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 200))(v5, v2, v3);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  RRReferenceResolverProtocol.resolveReference(resolveQuery:)();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

void static ReferenceContactResolutionWrapper.dedupePersons(persons:sharedGlobals:)(unint64_t a1, void *a2)
{
  uint64_t v69 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_32_3();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      if (v4 < 1) {
        goto LABEL_68;
      }
      uint64_t v5 = 0;
      unint64_t v6 = a1;
      unint64_t v7 = a1 & 0xC000000000000001;
      while (1)
      {
        if (v7) {
          id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v8 = *(id *)(v6 + 8 * v5 + 32);
        }
        id v9 = v8;
        uint64_t v10 = [v8 personHandle];
        if (!v10) {
          goto LABEL_14;
        }
        uint64_t v11 = v10;
        uint64_t v12 = a2[3];
        uint64_t v13 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v12);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 120))(v65, v12, v13);
        uint64_t v14 = v66;
        uint64_t v15 = v67;
        __swift_project_boxed_opaque_existential_1(v65, v66);
        uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
        uint64_t v18 = (*(uint64_t (**)(NSObject *, uint64_t, uint64_t))(v17 + 16))(v11, v16, v17);
        if (!v18) {
          break;
        }
        id v19 = (void *)v18;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
        id v20 = v19;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (v69[2] >= v69[3] >> 1) {
          OUTLINED_FUNCTION_4_21();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

LABEL_22:
        ++v5;

        if (v4 == v5)
        {
          swift_bridgeObjectRelease();
          uint64_t v27 = v69;
          goto LABEL_26;
        }
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
LABEL_14:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
      uint64_t v11 = v9;
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_5_32(v23))
      {
        uint64_t v24 = OUTLINED_FUNCTION_47();
        uint64_t v25 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 138412290;
        id v26 = [v11 personHandle];
        *(void *)(v24 + 4) = v26;
        *uint64_t v25 = v26;

        _os_log_impl(&dword_0, v22, (os_log_type_t)v9, "#ReferenceContactResolutionWrapper: Could not normalize handles %@ for validation.", (uint8_t *)v24, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        uint64_t v22 = v11;
      }

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (v69[2] >= v69[3] >> 1) {
        OUTLINED_FUNCTION_4_21();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = _swiftEmptyArrayStorage;
LABEL_26:
  v65[0] = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v28 = v27[2];
  if (!v28)
  {
LABEL_60:
    unint64_t v57 = swift_bridgeObjectRetain();
    unint64_t v58 = specialized Sequence.filter(_:)(v57, v65);
    uint64_t v59 = v58[2];
    if (v59)
    {
      uint64_t v68 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v60 = 5;
      do
      {
        id v61 = (id)v58[v60];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v60 += 2;
        --v59;
      }
      while (v59);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v29 = v27 + 4;
  swift_bridgeObjectRetain();
  unint64_t v30 = 0;
  uint64_t v63 = v28;
  uint64_t v64 = v27;
  char v62 = v27 + 4;
  while (1)
  {
    if (v30 >= v27[2]) {
      goto LABEL_66;
    }
    unint64_t v31 = v30;
    uint64_t v32 = (void *)v29[v30++];
    if (v32)
    {
      uint64_t v33 = v65[0];
      if (!*(void *)(v65[0] + 16)) {
        goto LABEL_36;
      }
      static Hasher._hash(seed:_:)();
      OUTLINED_FUNCTION_53_12();
      if ((v35 & 1) == 0) {
        goto LABEL_36;
      }
      if (*(void *)(*(void *)(v33 + 48) + 8 * v34) != v31) {
        break;
      }
    }
LABEL_58:
    if (v30 == v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_60;
    }
  }
  while (1)
  {
    OUTLINED_FUNCTION_39_17();
    if ((v38 & 1) == 0) {
      break;
    }
    if (*(void *)(v36 + 8 * v37) == v31) {
      goto LABEL_58;
    }
  }
LABEL_36:
  unint64_t v39 = v69[2];
  if (v39 <= v31) {
    goto LABEL_67;
  }
  if (v30 == v39) {
    goto LABEL_58;
  }
  id v40 = v32;
  unint64_t v41 = v30;
  while (v41 < v39)
  {
    if (v41 >= v69[2]) {
      goto LABEL_65;
    }
    uint64_t v42 = (void *)v69[v41 + 4];
    uint64_t v43 = v65[0];
    if (!*(void *)(v65[0] + 16)) {
      goto LABEL_47;
    }
    static Hasher._hash(seed:_:)();
    OUTLINED_FUNCTION_53_12();
    if ((v45 & 1) == 0) {
      goto LABEL_47;
    }
    if (*(void *)(*(void *)(v43 + 48) + 8 * v44) != v41)
    {
      while (1)
      {
        OUTLINED_FUNCTION_39_17();
        if ((v48 & 1) == 0) {
          break;
        }
        if (*(void *)(v46 + 8 * v47) == v41) {
          goto LABEL_56;
        }
      }
LABEL_47:
      if (v42)
      {
        id v49 = v42;
        if (TUHandlesAreCanonicallyEqual())
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v50 = type metadata accessor for Logger();
          os_log_type_t v51 = __swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
          uint64_t v52 = v49;
          uint64_t v53 = Logger.logObject.getter();
          os_log_type_t v54 = static os_log_type_t.debug.getter();
          if (OUTLINED_FUNCTION_63_0(v54))
          {
            uint64_t v55 = swift_slowAlloc();
            uint64_t v56 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v55 = 134218242;
            *(void *)(v55 + 4) = v41;
            *(_WORD *)(v55 + 12) = 2112;
            *(void *)(v55 + 14) = v52;
            *uint64_t v56 = v42;
            _os_log_impl(&dword_0, v53, v51, "#ReferenceContactResolutionWrapper index:%ld handle:%@ is a dupe, filter it out.", (uint8_t *)v55, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();
          }
          else
          {

            uint64_t v53 = v52;
          }

          specialized Set._Variant.insert(_:)((uint64_t *)&v68, v41);
        }
        else
        {
        }
      }
    }
LABEL_56:
    if (++v41 == v39)
    {

      uint64_t v28 = v63;
      uint64_t v27 = v64;
      uint64_t v29 = v62;
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

void static ReferenceContactResolutionWrapper.skeletonINPerson(persons:)()
{
  OUTLINED_FUNCTION_24_0();
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PersonNameComponents();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  uint64_t v6 = __chkstk_darwin(v5);
  id v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v11 - 8);
  OUTLINED_FUNCTION_5_8();
  uint64_t v41 = v12;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - v14;
  unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v42 = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (v16) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v16)
    {
LABEL_3:
      if (v16 >= 1)
      {
        uint64_t v17 = 0;
        unint64_t v18 = v42;
        unint64_t v43 = v42 & 0xC000000000000001;
        uint64_t v44 = v16;
        unint64_t v39 = (void (**)(char *, char *, uint64_t))(v4 + 32);
        id v40 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
        id v19 = (void (**)(char *, uint64_t))(v4 + 8);
        while (1)
        {
          id v20 = v43 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v18 + 8 * v17 + 32);
          uint64_t v21 = v20;
          id v22 = objc_msgSend(v20, "nameComponents", v39);
          if (!v22) {
            break;
          }
          os_log_type_t v23 = v22;
          static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

          (*v39)(v15, v10, v2);
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v2);
          if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v2) == 1) {
            goto LABEL_12;
          }
          outlined destroy of SpeakableString?((uint64_t)v15, &demangling cache variable for type metadata for PersonNameComponents?);
LABEL_15:
          id v28 = v21;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v46 & 0xFFFFFFFFFFFFFF8)) >> 1)
            OUTLINED_FUNCTION_4_21();
          ++v17;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          if (v44 == v17) {
            goto LABEL_20;
          }
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v2);
LABEL_12:
        outlined destroy of SpeakableString?((uint64_t)v15, &demangling cache variable for type metadata for PersonNameComponents?);
        id v24 = [v21 personHandle];
        if (v24) {
          outlined bridged method (ob) of @objc INPersonHandle.value.getter(v24);
        }
        PersonNameComponents.init()();
        PersonNameComponents.givenName.setter();
        PersonNameComponents.init()();
        PersonNameComponents.givenName.setter();
        uint64_t v25 = v41;
        (*v40)(v41, v10, v2);
        __swift_storeEnumTagSinglePayload(v25, 0, 1, v2);
        PersonNameComponents.phoneticRepresentation.setter();
        id v26 = *v19;
        (*v19)(v10, v2);
        Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
        v26(v8, v2);
        [v21 setNameComponents:isa];

        unint64_t v18 = v42;
        goto LABEL_15;
      }
      __break(1u);
      goto LABEL_33;
    }
  }
LABEL_20:
  swift_bridgeObjectRelease();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  id v29 = objc_allocWithZone((Class)INPersonHandle);
  uint64_t v30 = OUTLINED_FUNCTION_62_0();
  id v31 = @nonobjc INPersonHandle.init(value:type:)(v30, 0, 0);
  v32.super.Class isa = INPerson.init(personHandle:)((INPersonHandle)v31).super.isa;
  unint64_t v33 = v46;
  if (!(v46 >> 62))
  {
    uint64_t v34 = *(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v34) {
      goto LABEL_22;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    char v38 = _swiftEmptyArrayStorage;
LABEL_31:
    swift_bridgeObjectRelease();
    outlined bridged method (mbnn) of @objc INPerson.scoredAlternatives.setter((uint64_t)v38, v32.super.isa);
    OUTLINED_FUNCTION_26_1();
    return;
  }
  OUTLINED_FUNCTION_26_24();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  if (!v34) {
    goto LABEL_30;
  }
LABEL_22:
  char v45 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v34 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = 0;
    do
    {
      if ((v33 & 0xC000000000000001) != 0) {
        id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v36 = *(id *)(v33 + 8 * v35 + 32);
      }
      uint64_t v37 = v36;
      ++v35;
      [objc_allocWithZone((Class)INScoredPerson) initWithPerson:v36 recommendation:2];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v34 != v35);
    char v38 = v45;
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
LABEL_33:
  __break(1u);
}

uint64_t closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = RREntity.appBundleId.getter();
  id v6 = static ReferenceContactResolutionWrapper.attachSourceBundleId(person:appBundleId:)(v3, v4, v5);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

id static ReferenceContactResolutionWrapper.attachSourceBundleId(person:appBundleId:)(void *a1, uint64_t a2, unint64_t a3)
{
  char v5 = static PhoneReferenceResolution.getContactSourceType(contactSource:)(a2, a3);
  if (static PhoneReferenceResolution.isTelephonyTargetFromSrr(contactSourceType:)(v5))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    id v7 = a1;
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315394;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2112;
      id v11 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v7;

      _os_log_impl(&dword_0, v8, v9, "#ReferenceContactResolutionWrapper attach %s to sourceAppBundleIdentifier for person %@", (uint8_t *)v10, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    outlined bridged method (mbgnn) of @objc INPerson.sourceAppBundleIdentifier.setter(a2, a3, v7);
  }

  return a1;
}

void outlined bridged method (mbnn) of @objc INPerson.scoredAlternatives.setter(uint64_t a1, void *a2)
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INScoredPerson);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setScoredAlternatives:isa];
}

void outlined bridged method (mbgnn) of @objc INPerson.sourceAppBundleIdentifier.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setSourceAppBundleIdentifier:v4];
}

void specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  OUTLINED_FUNCTION_24_0();
  HIDWORD(v76) = v25;
  uint64_t v27 = v26;
  id v29 = v28;
  id v31 = v30;
  uint64_t v33 = v32;
  HIDWORD(v79) = v34;
  uint64_t v80 = v35;
  uint64_t v37 = v36;
  uint64_t v81 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  char v78 = v38;
  __chkstk_darwin(v39);
  OUTLINED_FUNCTION_3_1();
  uint64_t v77 = v40;
  uint64_t v82 = v33;
  unint64_t v41 = (unint64_t)specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v37, v33, v31, v29, a23, a24, a25);
  unint64_t v42 = v41;
  unint64_t v44 = v43;
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = *(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v83 = v45;
  if (v45)
  {
    OUTLINED_FUNCTION_11_36();
    if (!v46) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    char v48 = (void *)OUTLINED_FUNCTION_25_0(v47, (uint64_t)static Logger.siriPhone);
    os_log_type_t v49 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_63_0(v49))
    {
      uint64_t v75 = (uint64_t)v31;
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_16_37(&dword_0, v50, v51, "#ReferenceContactResolutionWrapper updated SKIntent with contacts");
      OUTLINED_FUNCTION_6();
    }

    (*(void (**)(unint64_t, uint64_t))(*(void *)(a25 + 8) + 16))(v42, a24);
  }
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v57) {
      goto LABEL_11;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_11:
    OUTLINED_FUNCTION_11_36();
    if (!v46) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    uint64_t v53 = (void *)OUTLINED_FUNCTION_25_0(v52, (uint64_t)static Logger.siriPhone);
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_63_0(v54))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_16_37(&dword_0, v55, v56, "#ReferenceContactResolutionWrapper updated SKIntent with groups");
      OUTLINED_FUNCTION_6();
    }

    (*(void (**)(unint64_t, uint64_t))(*(void *)(a25 + 8) + 32))(v44, a24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v83)
  {
    uint64_t v68 = (uint64_t)v31;
    uint64_t v69 = v29[3];
    uint64_t v70 = v29[4];
    __swift_project_boxed_opaque_existential_1(v29, v69);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v70 + 8))(v85, v69, v70);
    __swift_project_boxed_opaque_existential_1(v85, v85[3]);
    dispatch thunk of DeviceState.siriLocale.getter();
    LOBYTE(v72) = BYTE4(v76) & 1;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)((uint64_t)v37, v80, BYTE4(v79) & 1, v82, v77, v68, (uint64_t)v29, v27, v72, a21, a22, a24, a25, v73, v74, v75, v76, v77, a21,
      a22,
      v78,
      v79,
      v80,
      v81,
      v82);
    OUTLINED_FUNCTION_11();
    v71();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    goto LABEL_27;
  }
LABEL_19:
  OUTLINED_FUNCTION_11_36();
  if (!v46) {
    swift_once();
  }
  uint64_t v58 = type metadata accessor for Logger();
  uint64_t v59 = (_DWORD *)__swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
  id v84 = v37;
  uint64_t v60 = (void *)Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_1_34(v61))
  {
    OUTLINED_FUNCTION_47();
    char v62 = (void *)OUTLINED_FUNCTION_34_13();
    *uint64_t v59 = 138412290;
    v85[0] = v84;
    id v63 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v62 = v84;

    OUTLINED_FUNCTION_9_27(&dword_0, v64, v65, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_35_21();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();

LABEL_27:
    OUTLINED_FUNCTION_26_1();
    return;
  }

  OUTLINED_FUNCTION_26_1();
}

ValueMetadata *type metadata accessor for ReferenceContactResolutionWrapper()
{
  return &type metadata for ReferenceContactResolutionWrapper;
}

uint64_t partial apply for closure #2 in closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1)
{
  return closure #2 in closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(a1, *(void **)(v1 + 16));
}

void *specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v142 = a6;
  uint64_t v143 = a7;
  uint64_t v129 = a5;
  uint64_t v145 = a2;
  v146 = a4;
  uint64_t v140 = a1;
  uint64_t v139 = type metadata accessor for RREntity();
  uint64_t v124 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v125 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for RRCandidate();
  uint64_t v128 = *(void *)(v130 - 8);
  uint64_t v9 = __chkstk_darwin(v130);
  id v147 = (void (*)(char *, char *, uint64_t))((char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v127 = (char *)&v121 - v12;
  __chkstk_darwin(v11);
  unint64_t v131 = (char *)&v121 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRResult?);
  __chkstk_darwin(v14 - 8);
  uint64_t v137 = (uint64_t)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RRResult();
  uint64_t v135 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  id v138 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v133 = (uint64_t *)((char *)&v121 - v20);
  __chkstk_darwin(v19);
  long long v136 = (char *)&v121 - v21;
  uint64_t v22 = type metadata accessor for MatchedResultsSetting();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v132 = (char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v121 - v26;
  uint64_t v28 = a3[3];
  uint64_t v29 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v28);
  unint64_t v150 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 144))(v28, v29);
  uint64_t v30 = *(void (**)(char *, void, uint64_t))(v23 + 104);
  uint64_t v144 = v27;
  v30(v27, enum case for MatchedResultsSetting.defaultMatching(_:), v22);
  uint64_t v31 = a3[3];
  v141 = a3;
  __swift_project_boxed_opaque_existential_1(a3, v31);
  if (PhoneCallNLIntent.hasOnlyCallVerb()() && App.isFirstParty()() && static UsoUtils.buildDummyReferenceEntity()())
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((char *)&dword_10 + (v150 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v150 & 0xFFFFFFFFFFFFFF8)) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    uint64_t v32 = v144;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v144, v22);
    v30(v32, enum case for MatchedResultsSetting.extremelySalientResultsOnly(_:), v22);
  }
  if (v150 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((char *)&dword_10 + (v150 & 0xFFFFFFFFFFFFFF8));
  }
  if (!v33)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    __swift_project_value_buffer(v48, (uint64_t)static Logger.siriPhone);
    os_log_type_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&dword_0, v49, v50, "#ReferenceContactResolutionWrapper - No references found", v51, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v144, v22);
    goto LABEL_22;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v134 = v22;
  uint64_t v34 = type metadata accessor for Logger();
  uint64_t v123 = __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v126 = v16;
    char v38 = (uint8_t *)v37;
    v149[0] = swift_slowAlloc();
    *(_DWORD *)char v38 = 136315138;
    uint64_t v39 = v144;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v132, v39, v134);
    uint64_t v40 = String.init<A>(describing:)();
    uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v35, v36, "#ReferenceContactResolutionWrapper Querying SRR with match setting: %s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v16 = v126;
    swift_slowDealloc();
  }

  unint64_t v42 = v138;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v44 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  __chkstk_darwin(v44);
  *(&v121 - 4) = (uint64_t)&v150;
  uint64_t v45 = v146;
  *(&v121 - 3) = (uint64_t)v144;
  *(&v121 - 2) = (uint64_t)v45;
  static SiriKitEventSender.current.getter();
  specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  uint64_t v46 = v137;
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v46, 1, v16) == 1)
  {
    outlined destroy of SpeakableString?(v46, &demangling cache variable for type metadata for RRResult?);
    uint64_t v47 = v134;
LABEL_16:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v144, v47);
LABEL_22:
    uint64_t v52 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v54 = v135;
  uint64_t v55 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 32))(v136, v46, v16);
  uint64_t v56 = *(void (**)(uint64_t *, char *, uint64_t))(v54 + 16);
  uint64_t v57 = v133;
  v56(v133, v55, v16);
  int v58 = (*(uint64_t (**)(uint64_t *, uint64_t))(v54 + 88))(v57, v16);
  if (v58 == enum case for RRResult.foundMatch(_:))
  {
    uint64_t v122 = v23;
    (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v16);
    uint64_t v59 = v128;
    uint64_t v60 = v131;
    uint64_t v61 = v130;
    (*(void (**)(char *, uint64_t *, uint64_t))(v128 + 32))(v131, v57, v130);
    char v62 = v127;
    id v147 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    v147(v127, v60, v61);
    id v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      uint64_t v126 = v16;
      v149[0] = v66;
      *(_DWORD *)uint64_t v65 = 136315138;
      lazy protocol witness table accessor for type RRResult and conformance RRResult(&lazy protocol witness table cache variable for type RRCandidate and conformance RRCandidate, (void (*)(uint64_t))&type metadata accessor for RRCandidate);
      uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v69 = *(void (**)(char *, uint64_t))(v59 + 8);
      v69(v127, v61);
      _os_log_impl(&dword_0, v63, v64, "#ReferenceContactResolutionWrapper .foundMatch %s", v65, 0xCu);
      swift_arrayDestroy();
      uint64_t v16 = v126;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v69 = *(void (**)(char *, uint64_t))(v59 + 8);
      v69(v62, v61);
    }

    uint64_t v81 = v143;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RRCandidate>);
    unint64_t v82 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_467710;
    unint64_t v84 = v83 + v82;
    uint64_t v85 = v131;
    v147((char *)v84, v131, v61);
    uint64_t v52 = specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v83, v140, v145, (uint64_t)v141, (uint64_t)v146, v129, v142, v81);
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    v69(v85, v61);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v16);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v144, v134);
  }
  else if (v58 == enum case for RRResult.needsDisambiguation(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v16);
    uint64_t v70 = (char *)*v57;
    swift_bridgeObjectRetain_n();
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.debug.getter();
    BOOL v73 = os_log_type_enabled(v71, v72);
    uint64_t v122 = v23;
    if (v73)
    {
      uint64_t v74 = v70;
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      v149[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v75 = 136315138;
      id v138 = (char *)(v75 + 4);
      swift_bridgeObjectRetain();
      uint64_t v76 = v16;
      uint64_t v77 = Array.description.getter();
      unint64_t v79 = v78;
      swift_bridgeObjectRelease();
      uint64_t v80 = v77;
      uint64_t v16 = v76;
      uint64_t v70 = v74;
      uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v79, v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v71, v72, "#ReferenceContactResolutionWrapper found a .needsDisambiguation match %s", v75, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v149[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v93 = *((void *)v70 + 2);
    id v94 = v147;
    if (v93)
    {
      uint64_t v126 = v16;
      id v138 = *(char **)(v128 + 16);
      unint64_t v95 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
      uint64_t v133 = (uint64_t *)v70;
      v96 = &v70[v95];
      uint64_t v137 = *(void *)(v128 + 72);
      uint64_t v97 = (void (**)(uint64_t, uint64_t))(v124 + 8);
      unint64_t v98 = (void (**)(char *, uint64_t))(v128 + 8);
      uint64_t v99 = v129;
      uint64_t v100 = v130;
      uint64_t v101 = (uint64_t)v125;
      do
      {
        ((void (*)(void, char *, uint64_t))v138)(v94, v96, v100);
        RRCandidate.entity.getter();
        uint64_t v102 = specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v101, v140, v145, (uint64_t)v141, (uint64_t)v146, v99, v142, v143);
        (*v97)(v101, v139);
        swift_bridgeObjectRelease();
        specialized Array.append<A>(contentsOf:)((unint64_t)v102);
        id v94 = v147;
        (*v98)((char *)v147, v100);
        v96 += v137;
        --v93;
      }
      while (v93);
      swift_bridgeObjectRelease();
      uint64_t v103 = (void *)v149[0];
      uint64_t v16 = v126;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v103 = _swiftEmptyArrayStorage;
    }
    static ReferenceContactResolutionWrapper.dedupePersons(persons:sharedGlobals:)((unint64_t)v103, v146);
    uint64_t v108 = v107;
    swift_bridgeObjectRelease();
    v149[0] = v108;
    static ReferenceContactResolutionWrapper.skeletonINPerson(persons:)();
    uint64_t v110 = v109;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v111 = swift_allocObject();
    *(_OWORD *)(v111 + 16) = xmmword_46A030;
    *(void *)(v111 + 32) = v110;
    uint64_t v148 = v111;
    specialized Array._endMutation()();
    uint64_t v52 = (void *)v148;
    (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v16);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v144, v134);
  }
  else
  {
    uint64_t v126 = v16;
    uint64_t v47 = v134;
    if (v58 != enum case for RRResult.foundMatchPlural(_:))
    {
      if (v58 == enum case for RRResult.noMatch(_:))
      {
        unint64_t v104 = Logger.logObject.getter();
        os_log_type_t v105 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v104, v105))
        {
          uint64_t v106 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v106 = 0;
          _os_log_impl(&dword_0, v104, v105, "#ReferenceContactResolutionWrapper found a .nomatch", v106, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v126);
      }
      else
      {
        uint64_t v112 = v126;
        v56((uint64_t *)v42, v55, v126);
        uint64_t v113 = Logger.logObject.getter();
        os_log_type_t v114 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v113, v114))
        {
          uint64_t v115 = (uint8_t *)swift_slowAlloc();
          id v147 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
          v149[0] = (uint64_t)v147;
          *(_DWORD *)uint64_t v115 = 136315138;
          uint64_t v122 = v23;
          lazy protocol witness table accessor for type RRResult and conformance RRResult(&lazy protocol witness table cache variable for type RRResult and conformance RRResult, (void (*)(uint64_t))&type metadata accessor for RRResult);
          uint64_t v116 = v138;
          uint64_t v117 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v117, v118, v149);
          uint64_t v23 = v122;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v119 = *(void (**)(char *, uint64_t))(v54 + 8);
          v119(v116, v112);
          _os_log_impl(&dword_0, v113, v114, "#ReferenceContactResolutionWrapper dropping result of type %s!", v115, 0xCu);
          swift_arrayDestroy();
          uint64_t v57 = v133;
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v120 = v136;
        }
        else
        {

          uint64_t v119 = *(void (**)(char *, uint64_t))(v54 + 8);
          v119(v138, v112);
          uint64_t v120 = v55;
        }
        v119(v120, v112);
        v119((char *)v57, v112);
      }
      goto LABEL_16;
    }
    (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v126);
    uint64_t v86 = *v57;
    swift_bridgeObjectRetain_n();
    unint64_t v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v122 = v23;
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      v149[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v90 = Array.description.getter();
      unint64_t v92 = v91;
      swift_bridgeObjectRelease();
      uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v92, v149);
      uint64_t v23 = v122;
      uint64_t v55 = v136;
      uint64_t v54 = v135;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v87, v88, "#ReferenceContactResolutionWrapper .foundMatchPlural %s", v89, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v52 = specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v86, v140, v145, (uint64_t)v141, (uint64_t)v146, v129, v142, v143);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v126);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v144, v47);
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return v52;
}

void *specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v30 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for RREntity();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v29 - v20;
  specialized Collection.first.getter();
  uint64_t v22 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v22) == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v14, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v26, 2u);
      swift_slowDealloc();
    }

    return _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v14, v22);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v19, v15);
    uint64_t v27 = specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v21, a2, a3, a4, a5, v30, v31, v32);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  return v27;
}

{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  uint64_t v37 = a5;
  char v38 = a8;
  uint64_t v35 = a3;
  os_log_type_t v36 = a4;
  uint64_t v34 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RREntity();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = *(void *)(a7 - 8);
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a6, a7);
  specialized Collection.first.getter();
  uint64_t v24 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v24) == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v12, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    os_log_type_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = Logger.logObject.getter();
    uint64_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v28, 2u);
      swift_slowDealloc();
    }

    uint64_t v29 = _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v12, v24);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v17, v13);
    specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v20, v34, v35, v36, v37, (uint64_t)v23, a7, v38, (uint64_t)partial apply for closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)&unk_561EF8, (uint64_t)partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:), v32, v33, v34, v35, v36, v37,
      v38,
      v39,
      v40);
    uint64_t v29 = v30;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, a7);
  return v29;
}

{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  uint64_t v37 = a5;
  char v38 = a8;
  uint64_t v35 = a3;
  os_log_type_t v36 = a4;
  uint64_t v34 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RREntity();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = *(void *)(a7 - 8);
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a6, a7);
  specialized Collection.first.getter();
  uint64_t v24 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v24) == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v12, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    os_log_type_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = Logger.logObject.getter();
    uint64_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v28, 2u);
      swift_slowDealloc();
    }

    uint64_t v29 = _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v12, v24);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v17, v13);
    specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v20, v34, v35, v36, v37, (uint64_t)v23, a7, v38, (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply, (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)&unk_561F70, (uint64_t)closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply, v32, v33, v34, v35, v36, v37,
      v38,
      v39,
      v40);
    uint64_t v29 = v30;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, a7);
  return v29;
}

{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  uint64_t v37 = a5;
  char v38 = a8;
  uint64_t v35 = a3;
  os_log_type_t v36 = a4;
  uint64_t v34 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RREntity();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = *(void *)(a7 - 8);
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a6, a7);
  specialized Collection.first.getter();
  uint64_t v24 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v24) == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v12, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    os_log_type_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = Logger.logObject.getter();
    uint64_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v28, 2u);
      swift_slowDealloc();
    }

    uint64_t v29 = _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v12, v24);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v17, v13);
    specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v20, v34, v35, v36, v37, (uint64_t)v23, a7, v38, (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply, (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:), (uint64_t)&unk_561F20, (uint64_t)closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply, v32, v33, v34, v35, v36, v37,
      v38,
      v39,
      v40);
    uint64_t v29 = v30;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, a7);
  return v29;
}

void *specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v30[8] = a7;
  v30[9] = a8;
  v30[6] = a4;
  v30[7] = a5;
  v30[5] = a3;
  static Signpost.begin(_:)();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  uint64_t v9 = (void *)RREntity.convertData<A>(to:)();
  Signpost.OpenSignpost.end()();
  if (v9)
  {
    uint64_t v10 = one-time initialization token for siriPhone;
    id v11 = v9;
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "#ReferenceContactResolutionWrapper resolved to an INPerson", v15, 2u);
      swift_slowDealloc();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_46A030;
    *(void *)(v16 + 32) = v11;
    uint64_t v31 = (void *)v16;
    uint64_t v17 = specialized Array._endMutation()();
    uint64_t v18 = v31;
  }
  else
  {
    RREntity.usoEntity.getter();
    type metadata accessor for UsoEntity_common_Person();
    static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
    swift_release();
    if (v31)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_0, v20, v21, "#ReferenceContactResolutionWrapper resolved to a common_Person", v22, 2u);
        swift_slowDealloc();
      }

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
      type metadata accessor for ContactQuery();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_467710;
      UsoEntity_common_Person.toContactQuery()();
      specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)();
      uint64_t v18 = v23;
      swift_bridgeObjectRelease();
      uint64_t v17 = swift_release();
    }
    else
    {
      RREntity.usoEntity.getter();
      type metadata accessor for UsoEntity_common_Group();
      static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
      swift_release();
      RREntity.usoEntity.getter();
      type metadata accessor for UsoEntity_common_Agent();
      static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
      swift_release();
      RREntity.usoEntity.getter();
      type metadata accessor for UsoEntity_common_App();
      static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
      swift_release();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_0, v27, v28, "#ReferenceContactResolutionWrapper resolved entity was not recognized as a person or group", v29, 2u);
        swift_slowDealloc();
      }

      uint64_t v18 = _swiftEmptyArrayStorage;
    }
  }
  __chkstk_darwin(v17);
  v30[2] = a1;
  uint64_t v24 = specialized Sequence.compactMap<A>(_:)((uint64_t)closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply, (uint64_t)v30, (unint64_t)v18);
  swift_bridgeObjectRelease();
  swift_release();

  return v24;
}

void specialized static ReferenceContactResolutionWrapper.resolveCommonGroup(group:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v33)(long long *__return_ptr, void *);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void v44[7];
  unint64_t v45;
  uint64_t v46;
  long long v47[2];
  long long v48[2];
  void v49[6];

  v44[5] = a4;
  v44[6] = a7;
  v44[4] = a3;
  v44[3] = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  uint64_t v45 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ContactQuery();
  uint64_t v15 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = dispatch thunk of UsoEntity_common_Group.name.getter();
  char v20 = specialized Optional<A>.isNilOrEmpty.getter(v18, v19);
  swift_bridgeObjectRelease();
  if (v20)
  {
    unint64_t v21 = dispatch thunk of UsoEntity_common_Group.members.getter();
    if (v21)
    {
      unint64_t v22 = v21;
      v49[0] = _swiftEmptyArrayStorage;
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v23 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
      }
      uint64_t v24 = v17;
      v44[2] = a8;
      if (v23)
      {
        if (v23 < 1)
        {
          __break(1u);
          goto LABEL_42;
        }
        for (uint64_t i = 0; i != v23; ++i)
        {
          if ((v22 & 0xC000000000000001) != 0) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          dispatch thunk of CodeGenListEntry.entry.getter();
          swift_release();
          if (*(void *)&v48[0])
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((char *)&dword_10 + (v49[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                              + (v49[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            uint64_t v24 = v17;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v35 = v49[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      if (v35 >> 62)
      {
        swift_bridgeObjectRetain();
        os_log_type_t v36 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v36)
        {
LABEL_25:
          v44[1] = a5;
          v49[0] = _swiftEmptyArrayStorage;
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          if ((v36 & 0x8000000000000000) == 0)
          {
            uint64_t v37 = 0;
            char v38 = v49[0];
            uint64_t v45 = v35 & 0xC000000000000001;
            do
            {
              if (v45) {
                specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                swift_retain();
              }
              UsoEntity_common_Agent.toContactQuery()();
              swift_release();
              v49[0] = v38;
              uint64_t v39 = *(void *)(v38 + 16);
              if (v39 >= *(void *)(v38 + 24) >> 1)
              {
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                char v38 = v49[0];
              }
              ++v37;
              *(void *)(v38 + 16) = v39 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v38+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v39, v24, v46);
            }
            while (v36 != v37);
            goto LABEL_36;
          }
LABEL_42:
          __break(1u);
          return;
        }
      }
      else
      {
        os_log_type_t v36 = *(void *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFFF8));
        if (v36) {
          goto LABEL_25;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
      unint64_t v41 = Logger.logObject.getter();
      unint64_t v42 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v41, v42))
      {
        unint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v43 = 0;
        _os_log_impl(&dword_0, v41, v42, "#ReferenceContactResolutionWrapper resolved to an unnamed common_Group", v43, 2u);
        swift_slowDealloc();
      }

      specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)();
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&dword_0, v27, v28, "#ReferenceContactResolutionWrapper resolved to a named common_Group", v29, 2u);
    swift_slowDealloc();
  }

  uint64_t v30 = a5[3];
  uint64_t v31 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v30);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v31 + 8))(v49, v30, v31);
  outlined init with copy of SignalProviding((uint64_t)v49, (uint64_t)v48);
  outlined init with copy of SignalProviding(a6, (uint64_t)v47);
  uint64_t v32 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v48, v32 + 16);
  outlined init with take of AppSelectionSignalComponent(v47, v32 + 56);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  uint64_t v33 = (void (*)(long long *__return_ptr, void *))Transformer.transform.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SmsGroup>);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_467710;
  *(void *)(v34 + 56) = type metadata accessor for UsoEntity_common_Group();
  *(void *)(v34 + 64) = &protocol witness table for UsoEntity_common_Group;
  *(void *)(v34 + 32) = a1;
  v49[0] = v34;
  swift_retain();
  v33(v48, v49);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v12);
}

#error "280A74: call analysis failed (funcsize=220)"

#error "281224: call analysis failed (funcsize=220)"

void specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t, uint64_t), uint8_t *, uint64_t, uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v202 = (uint8_t *)v26;
  uint64_t v208 = v28;
  uint64_t v209 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v210 = (void (*)(uint64_t, uint64_t))v33;
  uint64_t v35 = v34;
  uint64_t v207 = v36;
  uint64_t v204 = (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for RREntity();
  OUTLINED_FUNCTION_1();
  uint64_t v185 = v37;
  __chkstk_darwin(v38);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_20_15(v39);
  uint64_t v188 = type metadata accessor for RRCandidate();
  OUTLINED_FUNCTION_1();
  uint64_t v192 = v40;
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_5_8();
  v205 = v42;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v43);
  uint64_t v194 = (uint64_t)&v184 - v44;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v45);
  uint64_t v195 = (uint64_t)&v184 - v46;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRResult?);
  __chkstk_darwin(v47 - 8);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_20_15(v48);
  uint64_t v199 = type metadata accessor for RRResult();
  OUTLINED_FUNCTION_1();
  uint64_t v190 = v49;
  __chkstk_darwin(v50);
  OUTLINED_FUNCTION_5_8();
  uint64_t v193 = v51;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v52);
  char v197 = (uint64_t *)((char *)&v184 - v53);
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v54);
  OUTLINED_FUNCTION_20_15((uint64_t)&v184 - v55);
  uint64_t v56 = type metadata accessor for MatchedResultsSetting();
  OUTLINED_FUNCTION_1();
  uint64_t v58 = v57;
  uint64_t v60 = __chkstk_darwin(v59);
  char v62 = (char *)&v184 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  os_log_type_t v64 = (char *)&v184 - v63;
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v65);
  OUTLINED_FUNCTION_4();
  uint64_t v68 = v67 - v66;
  uint64_t v200 = v69;
  uint64_t v201 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v67 - v66, v32, v30);
  uint64_t v70 = v35[3];
  uint64_t v71 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v70);
  os_log_type_t v72 = *(uint64_t (**)(uint64_t, uint64_t))(v71 + 144);
  uint64_t v73 = v71;
  uint64_t v74 = v35;
  unint64_t v213 = v72(v70, v73);
  uint64_t v75 = *(void (**)(uint64_t))(v58 + 104);
  uint64_t v76 = OUTLINED_FUNCTION_59_10();
  v75(v76);
  __swift_project_boxed_opaque_existential_1(v74, v74[3]);
  if (PhoneCallNLIntent.hasOnlyCallVerb()() && App.isFirstParty()() && static UsoUtils.buildDummyReferenceEntity()())
  {
    uint64_t v206 = v35;
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((char *)&dword_10 + (v213 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v213 & 0xFFFFFFFFFFFFFF8)) >> 1)
      OUTLINED_FUNCTION_4_21();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v64, v56);
    uint64_t v77 = OUTLINED_FUNCTION_59_10();
    v75(v77);
    uint64_t v74 = v206;
  }
  if (v213 >> 62)
  {
    OUTLINED_FUNCTION_32_3();
    uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v78 = *(void *)((char *)&dword_10 + (v213 & 0xFFFFFFFFFFFFFF8));
  }
  if (!v78)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v98 = type metadata accessor for Logger();
    uint64_t v99 = (void *)OUTLINED_FUNCTION_25_0(v98, (uint64_t)static Logger.siriPhone);
    os_log_type_t v100 = static os_log_type_t.debug.getter();
    BOOL v101 = OUTLINED_FUNCTION_8_2(v100);
    uint64_t v95 = v200;
    if (v101)
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_1_3(&dword_0, v102, v103, "#ReferenceContactResolutionWrapper - No references found");
      OUTLINED_FUNCTION_6();
    }

    (*(void (**)(char *, uint64_t))(v58 + 8))(v64, v56);
    goto LABEL_23;
  }
  uint64_t v206 = v74;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for Logger();
  uint64_t v191 = __swift_project_value_buffer(v79, (uint64_t)static Logger.siriPhone);
  uint64_t v80 = Logger.logObject.getter();
  os_log_type_t v81 = static os_log_type_t.debug.getter();
  BOOL v82 = os_log_type_enabled(v80, v81);
  uint64_t v203 = v64;
  uint64_t v187 = v56;
  uint64_t v189 = v58;
  if (v82)
  {
    uint64_t v83 = (uint8_t *)OUTLINED_FUNCTION_47();
    v212[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v83 = 136315138;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v62, v203, v56);
    uint64_t v84 = String.init<A>(describing:)();
    uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85, v212);
    OUTLINED_FUNCTION_51_1(v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v80, v81, "#ReferenceContactResolutionWrapper Querying SRR with match setting: %s", v83, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  unint64_t v87 = v197;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v89 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  __chkstk_darwin(v89);
  uint64_t v90 = v210;
  static SiriKitEventSender.current.getter();
  specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v212);
  uint64_t v91 = v196;
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_45_15();
  if (__swift_getEnumTagSinglePayload(v92, v93, (uint64_t)&v184) == 1)
  {
    outlined destroy of SpeakableString?(v91, &demangling cache variable for type metadata for RRResult?);
    goto LABEL_16;
  }
  uint64_t v104 = v190;
  uint64_t v105 = v198;
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(v190 + 32))(v198, v91, &v184);
  uint64_t v106 = *(uint8_t **)(v104 + 16);
  ((void (*)(uint64_t *, uint64_t, uint64_t *))v106)(v87, v105, &v184);
  int v107 = (*(uint64_t (**)(uint64_t *, uint64_t *))(v104 + 88))(v87, &v184);
  if (v107 == enum case for RRResult.foundMatch(_:))
  {
    v205 = a21;
    uint64_t v202 = (uint8_t *)v68;
    uint64_t v108 = OUTLINED_FUNCTION_19_30();
    v109(v108);
    uint64_t v110 = v192;
    uint64_t v111 = v195;
    uint64_t v112 = v188;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v192 + 32))(v195, v87, v188);
    uint64_t v113 = v194;
    uint64_t v204 = *(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16);
    v204(v194, v111, v112);
    os_log_type_t v114 = OUTLINED_FUNCTION_42_16();
    os_log_type_t v115 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v114, v115))
    {
      OUTLINED_FUNCTION_47();
      v212[0] = OUTLINED_FUNCTION_11_29();
      *(_DWORD *)uint64_t v113 = 136315138;
      uint64_t v90 = (void (*)(uint64_t, uint64_t))(v113 + 12);
      lazy protocol witness table accessor for type RRResult and conformance RRResult(&lazy protocol witness table cache variable for type RRCandidate and conformance RRCandidate, (void (*)(uint64_t))&type metadata accessor for RRCandidate);
      uint64_t v116 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v118 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v116, v117, v212);
      OUTLINED_FUNCTION_41_13(v118);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_56();
      ((void (*)(uint64_t, uint64_t))(v113 + 12))(v194, v112);
      OUTLINED_FUNCTION_51_11(&dword_0, v114, v119, "#ReferenceContactResolutionWrapper .foundMatch %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_45_15();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      OUTLINED_FUNCTION_56();
      v90(v113, v112);
    }

    uint64_t v131 = v208;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RRCandidate>);
    unint64_t v132 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    uint64_t v133 = swift_allocObject();
    *(_OWORD *)(v133 + 16) = xmmword_467710;
    uint64_t v134 = v195;
    v204(v133 + v132, v195, v112);
    uint64_t v94 = v201;
    uint64_t v68 = (uint64_t)v202;
    v205(v133, v207, v209, v206, v210, v202, v201, v131);
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    v90(v134, v112);
    OUTLINED_FUNCTION_11();
    v135();
    OUTLINED_FUNCTION_11();
    v136();
LABEL_48:
    uint64_t v95 = v200;
    goto LABEL_49;
  }
  if (v107 == enum case for RRResult.needsDisambiguation(_:))
  {
    uint64_t v120 = OUTLINED_FUNCTION_19_30();
    v121(v120);
    uint64_t v122 = *v87;
    swift_bridgeObjectRetain_n();
    uint64_t v123 = OUTLINED_FUNCTION_42_16();
    os_log_type_t v124 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_21_19(v124))
    {
      OUTLINED_FUNCTION_47();
      v212[0] = OUTLINED_FUNCTION_11_29();
      *(_DWORD *)uint64_t v106 = 136315138;
      uint64_t v202 = v106 + 4;
      swift_bridgeObjectRetain();
      uint64_t v125 = Array.description.getter();
      uint64_t v126 = v68;
      unint64_t v128 = v127;
      swift_bridgeObjectRelease();
      uint64_t v129 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v125, v128, v212);
      OUTLINED_FUNCTION_51_1(v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v68 = v126;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_51_11(&dword_0, v123, v130, "#ReferenceContactResolutionWrapper found a .needsDisambiguation match %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v212[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v149 = *(void *)(v122 + 16);
    if (v149)
    {
      char v197 = (uint64_t *)a26;
      uint64_t v196 = a25;
      uint64_t v195 = a24;
      uint64_t v194 = a23;
      uint64_t v193 = a22;
      uint64_t v150 = v192 + 16;
      uint64_t v192 = *(void *)(v192 + 16);
      unint64_t v151 = (*(unsigned __int8 *)(v150 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 64);
      uint64_t v184 = v122;
      unint64_t v152 = v122 + v151;
      uint64_t v191 = *(void *)(v150 + 56);
      uint64_t v202 = (uint8_t *)v68;
      id v153 = (void (**)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t)))(v185 + 8);
      uint64_t v154 = v201;
      uint64_t v155 = v188;
      uint64_t v156 = v186;
      v157 = (void (*)(void, void, void, void, void, void, void, void))v205;
      do
      {
        ((void (*)(void, void, void))v192)(v157, v152, v155);
        RRCandidate.entity.getter();
        specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v156, v207, v209, (uint64_t)v206, (uint64_t)v210, (uint64_t)v202, v154, v208, v193, v194, v195, v196, (uint64_t)v197, v183, v184, v185, v186, v187, v188,
          v189,
          v190,
          (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v191);
        unint64_t v159 = v158;
        (*v153)(v156, v204);
        swift_bridgeObjectRelease();
        unint64_t v160 = v159;
        v157 = (void (*)(void, void, void, void, void, void, void, void))v205;
        specialized Array.append<A>(contentsOf:)(v160);
        (*(void (**)(void (*)(void, void, void, void, void, void, void, void), uint64_t))(v150 - 8))(v157, v155);
        v152 += v191;
        --v149;
      }
      while (v149);
      swift_bridgeObjectRelease();
      uint64_t v161 = (void *)v212[0];
      uint64_t v95 = v200;
      uint64_t v68 = (uint64_t)v202;
      uint64_t v90 = v210;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v161 = _swiftEmptyArrayStorage;
      uint64_t v95 = v200;
    }
    static ReferenceContactResolutionWrapper.dedupePersons(persons:sharedGlobals:)((unint64_t)v161, v90);
    uint64_t v167 = v166;
    swift_bridgeObjectRelease();
    v212[0] = v167;
    static ReferenceContactResolutionWrapper.skeletonINPerson(persons:)();
    uint64_t v169 = v168;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v170 = swift_allocObject();
    *(_OWORD *)(v170 + 16) = xmmword_46A030;
    *(void *)(v170 + 32) = v169;
    uint64_t v211 = v170;
    specialized Array._endMutation()();
    OUTLINED_FUNCTION_11();
    v171();
    OUTLINED_FUNCTION_11();
    v172();
LABEL_23:
    uint64_t v94 = v201;
    goto LABEL_49;
  }
  v205 = a21;
  if (v107 == enum case for RRResult.foundMatchPlural(_:))
  {
    uint64_t v137 = OUTLINED_FUNCTION_19_30();
    v138(v137);
    uint64_t v139 = *v87;
    swift_bridgeObjectRetain_n();
    uint64_t v140 = OUTLINED_FUNCTION_42_16();
    os_log_type_t v141 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_21_19(v141))
    {
      OUTLINED_FUNCTION_47();
      uint64_t v204 = (void (*)(uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_11_29();
      v212[0] = (uint64_t)v204;
      *(_DWORD *)uint64_t v106 = 136315138;
      char v197 = (uint64_t *)(v106 + 4);
      swift_bridgeObjectRetain();
      Array.description.getter();
      uint64_t v202 = (uint8_t *)v68;
      unint64_t v143 = v142;
      swift_bridgeObjectRelease();
      uint64_t v144 = v201;
      OUTLINED_FUNCTION_45_15();
      uint64_t v147 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v145, v143, v146);
      OUTLINED_FUNCTION_51_1(v147);
      uint64_t v90 = v210;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v68 = (uint64_t)v202;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_51_11(&dword_0, v140, v148, "#ReferenceContactResolutionWrapper .foundMatchPlural %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v144 = v201;
    }
    v205(v139, v207, v209, v206, v90, (uint8_t *)v68, v144, v208);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11();
    v173();
    uint64_t v174 = OUTLINED_FUNCTION_48_16();
    v175(v174);
    uint64_t v94 = v144;
    goto LABEL_48;
  }
  if (v107 != enum case for RRResult.noMatch(_:))
  {
    uint64_t v202 = (uint8_t *)v68;
    uint64_t v176 = v193;
    ((void (*)(uint64_t, uint64_t, uint64_t *))v106)(v193, v198, &v184);
    v177 = OUTLINED_FUNCTION_42_16();
    os_log_type_t v178 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v177, v178))
    {
      OUTLINED_FUNCTION_47();
      v212[0] = OUTLINED_FUNCTION_11_29();
      *(_DWORD *)uint64_t v106 = 136315138;
      lazy protocol witness table accessor for type RRResult and conformance RRResult(&lazy protocol witness table cache variable for type RRResult and conformance RRResult, (void (*)(uint64_t))&type metadata accessor for RRResult);
      uint64_t v179 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v181 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v179, v180, v212);
      OUTLINED_FUNCTION_41_13(v181);
      swift_bridgeObjectRelease();
      char v182 = *(void (**)(uint64_t, uint64_t *))(v190 + 8);
      v182(v176, &v184);
      _os_log_impl(&dword_0, v177, v178, "#ReferenceContactResolutionWrapper dropping result of type %s!", v106, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      v182(v198, &v184);
      unint64_t v87 = v197;
    }
    else
    {

      char v182 = *(void (**)(uint64_t, uint64_t *))(v190 + 8);
      v182(v176, &v184);
      v182(v198, &v184);
    }
    v182((uint64_t)v87, &v184);
    uint64_t v95 = v200;
    uint64_t v94 = v201;
    uint64_t v68 = (uint64_t)v202;
    goto LABEL_17;
  }
  uint64_t v162 = (void *)OUTLINED_FUNCTION_42_16();
  os_log_type_t v163 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v163))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_1_3(&dword_0, v164, v165, "#ReferenceContactResolutionWrapper found a .nomatch");
    OUTLINED_FUNCTION_6();
  }

  (*(void (**)(uint64_t, uint64_t *))(v104 + 8))(v198, &v184);
LABEL_16:
  uint64_t v95 = v200;
  uint64_t v94 = v201;
LABEL_17:
  uint64_t v96 = OUTLINED_FUNCTION_48_16();
  v97(v96);
LABEL_49:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v68, v94);
  OUTLINED_FUNCTION_26_1();
}

void specialized static ReferenceContactResolutionWrapper.resolveCommonGroup(group:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(void *, uint64_t, uint64_t, uint64_t, void *))
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v71 = v31;
  uint64_t v70 = v32;
  uint64_t v34 = v33;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v36);
  OUTLINED_FUNCTION_4();
  uint64_t v39 = v38 - v37;
  uint64_t v72 = type metadata accessor for ContactQuery();
  OUTLINED_FUNCTION_1();
  uint64_t v73 = v40;
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_3_1();
  uint64_t v69 = v42;
  v77[3] = v24;
  v77[4] = v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v77);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, v26, v24);
  uint64_t v44 = dispatch thunk of UsoEntity_common_Group.name.getter();
  LOBYTE(v26) = specialized Optional<A>.isNilOrEmpty.getter(v44, v45);
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0 || (unint64_t v46 = dispatch thunk of UsoEntity_common_Group.members.getter()) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    __swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_0, v51, v52, "#ReferenceContactResolutionWrapper resolved to a named common_Group", v53, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v54 = v28[3];
    uint64_t v55 = v28[4];
    __swift_project_boxed_opaque_existential_1(v28, v54);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v55 + 8))(v76, v54, v55);
    outlined init with copy of SignalProviding((uint64_t)v76, (uint64_t)v75);
    outlined init with copy of SignalProviding((uint64_t)v77, (uint64_t)v74);
    uint64_t v56 = swift_allocObject();
    outlined init with take of AppSelectionSignalComponent(v75, v56 + 16);
    outlined init with take of AppSelectionSignalComponent(v74, v56 + 56);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
    Transformer.init(transform:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    uint64_t v57 = Transformer.transform.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SmsGroup>);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_467710;
    *(void *)(v58 + 56) = type metadata accessor for UsoEntity_common_Group();
    *(void *)(v58 + 64) = &protocol witness table for UsoEntity_common_Group;
    *(void *)(v58 + 32) = v34;
    v76[0] = v58;
    swift_retain();
    ((void (*)(long long *__return_ptr, void *))v57)(v75, v76);
    swift_bridgeObjectRelease();
    swift_release();
    OUTLINED_FUNCTION_45_15();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v39, v35);
    goto LABEL_41;
  }
  unint64_t v47 = v46;
  v76[0] = _swiftEmptyArrayStorage;
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
    if (v48) {
      goto LABEL_5;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v48 = *(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v48) {
    goto LABEL_22;
  }
LABEL_5:
  if (v48 < 1)
  {
    __break(1u);
    goto LABEL_44;
  }
  for (uint64_t i = 0; i != v48; ++i)
  {
    if ((v47 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    dispatch thunk of CodeGenListEntry.entry.getter();
    swift_release();
    if (*(void *)&v75[0])
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + (v76[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v76[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        OUTLINED_FUNCTION_4_21();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v59 = v76[0];
LABEL_23:
  swift_bridgeObjectRelease();
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v60 = *(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFFF8));
  }
  if (!v60)
  {
    swift_bridgeObjectRelease();
    char v62 = _swiftEmptyArrayStorage;
LABEL_36:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    uint64_t v65 = (void *)OUTLINED_FUNCTION_25_0(v64, (uint64_t)static Logger.siriPhone);
    os_log_type_t v66 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_21_19(v66))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_16_4(&dword_0, v67, v68, "#ReferenceContactResolutionWrapper resolved to an unnamed common_Group");
      OUTLINED_FUNCTION_6();
    }

    a21(v62, v70, v71, v30, v28);
    OUTLINED_FUNCTION_58();
LABEL_41:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    OUTLINED_FUNCTION_26_1();
    return;
  }
  v76[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v60 & 0x8000000000000000) == 0)
  {
    uint64_t v61 = 0;
    char v62 = (void *)v76[0];
    do
    {
      if ((v59 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      UsoEntity_common_Agent.toContactQuery()();
      swift_release();
      v76[0] = v62;
      unint64_t v63 = v62[2];
      if (v63 >= v62[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        char v62 = (void *)v76[0];
      }
      ++v61;
      v62[2] = v63 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v73 + 32))((unint64_t)v62+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v63, v69, v72);
    }
    while (v60 != v61);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
}

#error "2833B4: call analysis failed (funcsize=226)"

void specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_24_0();
  os_log_type_t v66 = v23;
  uint64_t v67 = v22;
  uint64_t v25 = v24;
  uint64_t v69 = v26;
  uint64_t v70 = v27;
  uint64_t v68 = v28;
  uint64_t v30 = v29;
  OUTLINED_FUNCTION_1();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  OUTLINED_FUNCTION_4();
  uint64_t v36 = v35 - v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v35 - v34, v37, v38);
  static Signpost.begin(_:)();
  uint64_t v72 = v39;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  uint64_t v71 = v30;
  uint64_t v40 = (void *)RREntity.convertData<A>(to:)();
  Signpost.OpenSignpost.end()();
  if (v40)
  {
    uint64_t v41 = one-time initialization token for siriPhone;
    id v42 = v40;
    if (v41 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    uint64_t v44 = (void *)OUTLINED_FUNCTION_25_0(v43, (uint64_t)static Logger.siriPhone);
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_5_32(v45))
    {
      unint64_t v46 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_81(v46);
      OUTLINED_FUNCTION_15_35(&dword_0, v47, v48, "#ReferenceContactResolutionWrapper resolved to an INPerson");
      OUTLINED_FUNCTION_6();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_46A030;
    *(void *)(v49 + 32) = v42;
    uint64_t v73 = (void *)v49;
    uint64_t v50 = specialized Array._endMutation()();
    uint64_t v51 = v73;
LABEL_13:
    uint64_t v52 = v71;
    goto LABEL_14;
  }
  uint64_t v52 = v71;
  RREntity.usoEntity.getter();
  OUTLINED_FUNCTION_62_0();
  type metadata accessor for UsoEntity_common_Person();
  OUTLINED_FUNCTION_22_32();
  swift_release();
  if (v73)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    os_log_type_t v66 = a22;
    uint64_t v53 = type metadata accessor for Logger();
    uint64_t v54 = (void *)OUTLINED_FUNCTION_25_0(v53, (uint64_t)static Logger.siriPhone);
    os_log_type_t v55 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_5_32(v55))
    {
      uint64_t v56 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_81(v56);
      OUTLINED_FUNCTION_15_35(&dword_0, v57, v58, "#ReferenceContactResolutionWrapper resolved to a common_Person");
      OUTLINED_FUNCTION_6();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
    uint64_t v59 = type metadata accessor for ContactQuery();
    OUTLINED_FUNCTION_19_0(v59);
    uint64_t v60 = OUTLINED_FUNCTION_40_16();
    *(_OWORD *)(v60 + 16) = xmmword_467710;
    UsoEntity_common_Person.toContactQuery()();
    uint64_t v51 = (void *)v66(v60, v67, v68, v69, v70);
    swift_bridgeObjectRelease();
    uint64_t v50 = swift_release();
    goto LABEL_13;
  }
  RREntity.usoEntity.getter();
  OUTLINED_FUNCTION_62_0();
  type metadata accessor for UsoEntity_common_Group();
  OUTLINED_FUNCTION_22_32();
  swift_release();
  RREntity.usoEntity.getter();
  OUTLINED_FUNCTION_62_0();
  type metadata accessor for UsoEntity_common_Agent();
  OUTLINED_FUNCTION_22_32();
  swift_release();
  RREntity.usoEntity.getter();
  OUTLINED_FUNCTION_62_0();
  type metadata accessor for UsoEntity_common_App();
  OUTLINED_FUNCTION_22_32();
  swift_release();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v61 = type metadata accessor for Logger();
  char v62 = OUTLINED_FUNCTION_25_0(v61, (uint64_t)static Logger.siriPhone);
  os_log_type_t v63 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v64 = 0;
    _os_log_impl(&dword_0, v62, v63, "#ReferenceContactResolutionWrapper resolved entity was not recognized as a person or group", v64, 2u);
    uint64_t v52 = v71;
    OUTLINED_FUNCTION_6();
  }

  uint64_t v51 = _swiftEmptyArrayStorage;
LABEL_14:
  __chkstk_darwin(v50);
  v65[2] = v52;
  specialized Sequence.compactMap<A>(_:)(a21, (uint64_t)v65, (unint64_t)v51);
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v25);
  OUTLINED_FUNCTION_26_1();
}

uint64_t closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return partial apply for closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_88()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_74()
{
  *(void *)(v2 - 128) = v1;
  uint64_t v3 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_4_66(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(v8 - 180) = a8;
  *(_DWORD *)(v8 - 132) = a3;
  uint64_t v10 = *(void *)(v8 + 24);
  *(void *)(v8 - 160) = *(void *)(v8 + 16);
  *(void *)(v8 - 152) = v10;
  return type metadata accessor for Locale();
}

void OUTLINED_FUNCTION_7_61(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t, uint64_t), uint8_t *, uint64_t, uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  *(void *)(v33 - 168) = v31;
  specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v26, v32, v31, v29, v27, v28, v30, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

id OUTLINED_FUNCTION_8_68(float a1)
{
  float *v1 = a1;
  *(void *)(v2 - 120) = *(void *)(v2 - 128);
  NSString v4 = *(void **)(v2 - 128);
  return v4;
}

uint64_t OUTLINED_FUNCTION_9_53()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), *(void *)(v0 - 96));
  return dispatch thunk of DeviceState.siriLocale.getter();
}

_WORD *OUTLINED_FUNCTION_10_43(_WORD *result)
{
  *(void *)(v2 - 192) = v1;
  *uint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_37()
{
  return v0;
}

void OUTLINED_FUNCTION_13_34(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_15_35(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_16_37(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_19_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_32()
{
  return static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
}

uint64_t OUTLINED_FUNCTION_26_24()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_31_22()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_34_13()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_35_21()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_38_16()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_41_13(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_42_16()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_48_16()
{
  return *(void *)(v0 - 232);
}

void OUTLINED_FUNCTION_51_11(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

_WORD *OUTLINED_FUNCTION_52_11(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_59_10()
{
  return v0;
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::Properties_optional __swiftcall AnnounceGroupFaceTimeInviteCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AnnounceGroupFaceTimeInviteCATsSimple.Properties.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::Properties_optional)AnnounceGroupFaceTimeInviteCATsSimple.Properties.init(rawValue:)(rawValue, v1);
}

unint64_t AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD00000000000003FLL;
  }
  else {
    return 0xD00000000000002FLL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::Properties_optional *a2@<X8>)
{
  result.int value = AnnounceGroupFaceTimeInviteCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.offerFollowUpIntent()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
     + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
  Swift::OpaquePointer v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance AnswerCallCATsSimple;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v3)(0xD00000000000002FLL, 0x80000000004900C0, _swiftEmptyArrayStorage);
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::OfferFollowUpIntentDialogIds_optional __swiftcall AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::OfferFollowUpIntentDialogIds_optional)AnnounceGroupFaceTimeInviteCATsSimple.Properties.init(rawValue:)(rawValue, v1);
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.Properties.init(rawValue:)(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::OfferFollowUpIntentDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::OfferFollowUpIntentDialogIds_optional *a2@<X8>)
{
  result.int value = AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = 0xE700000000000000;
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.offerFollowUpIntentAsLabels()()
{
  uint64_t v4 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:)
     + async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:);
  Swift::OpaquePointer v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = lazy protocol witness table accessor for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds();
  void *v1 = v0;
  v1[1] = protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple;
  return ((uint64_t (*)(unint64_t, unint64_t, void *, ValueMetadata *, unint64_t))v4)(0xD00000000000002FLL, 0x80000000004900C0, _swiftEmptyArrayStorage, &type metadata for AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds, v2);
}

unint64_t lazy protocol witness table accessor for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_4_67(v1, v2, v3, v4, v5, v6, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v0 + 72) = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v9, v10, v11);
}

{
  char v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;

  OUTLINED_FUNCTION_20_30();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v5 = swift_allocObject();
  v2[10] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_472F90;
  uint64_t v6 = (uint64_t *)(v5 + 48);
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = 0x8000000000497C30;
  outlined init with copy of SpeakableString?(v1, v3, &demangling cache variable for type metadata for SpeakableString?);
  char v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_14_36(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v6 = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
  }
  else
  {
    *(void *)(v5 + 72) = v1;
    __swift_allocate_boxed_opaque_existential_1(v6);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v9 + 32))();
  }
  OUTLINED_FUNCTION_6_60();
  if (v5 == -48)
  {
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    stru_20.vmaddr = 0;
    stru_20.vmsize = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for PhonePerson(0);
    uint64_t v11 = v5 + 48;
  }
  OUTLINED_FUNCTION_2_89(v10, v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_3_75(v12);
  if (v0)
  {
    uint64_t v13 = 0;
    *(void *)(v5 + 200) = 0;
    *(void *)(v5 + 208) = 0;
  }
  else
  {
    uint64_t v13 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_18_27((uint64_t)v13);
  *(void *)(v5 + 232) = 0x8000000000497C50;
  if (v14)
  {
    uint64_t v15 = 0;
    *(void *)(v5 + 248) = 0;
    *(void *)(v5 + 256) = 0;
  }
  else
  {
    uint64_t v15 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_13_35((uint64_t)v15);
  *(void *)(v5 + 280) = 0x8000000000497C70;
  if (v16)
  {
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    *(void *)(v5 + 296) = 0;
    *(void *)(v5 + 304) = 0;
  }
  else
  {
    uint64_t v17 = v2[7];
    uint64_t v18 = &type metadata for Double;
  }
  *(void *)(v5 + 312) = v18;
  *(void *)(v5 + 288) = v17;
  OUTLINED_FUNCTION_11_46();
  swift_bridgeObjectRetain();
  unint64_t v19 = (void *)swift_task_alloc();
  v2[11] = v19;
  *unint64_t v19 = v2;
  v19[1] = AnnounceGroupFaceTimeInviteCATsSimple.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:);
  return v21(v4 + 46, 0x80000000004900F0, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  char *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::ReadGroupFaceTimeInviteAnnouncementDialogIds_optional __swiftcall AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xC) {
    return (PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::ReadGroupFaceTimeInviteAnnouncementDialogIds_optional)12;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::ReadGroupFaceTimeInviteAnnouncementDialogIds_optional)v3;
  }
}

unint64_t AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000030;
      break;
    case 2:
      unint64_t result = 0xD000000000000031;
      break;
    case 3:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 4:
    case 8:
      unint64_t result = 0xD000000000000033;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000032;
      break;
    case 9:
      unint64_t result = 0xD00000000000003DLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000035;
      break;
    case 11:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::ReadGroupFaceTimeInviteAnnouncementDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATsSimple::ReadGroupFaceTimeInviteAnnouncementDialogIds_optional *a2@<X8>)
{
  result.int value = AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.readGroupFaceTimeInviteAnnouncementAsLabels(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_4_67(v1, v2, v3, v4, v5, v6, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v0 + 72) = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v9, v10, v11);
}

{
  char v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t GroupFaceTimeInviteAnnouncementDialogIds;
  uint64_t (*v22)(uint64_t, unint64_t, uint64_t, ValueMetadata *, unint64_t);
  uint64_t v23;

  OUTLINED_FUNCTION_20_30();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v5 = swift_allocObject();
  v2[10] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_472F90;
  uint64_t v6 = (uint64_t *)(v5 + 48);
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = 0x8000000000497C30;
  outlined init with copy of SpeakableString?(v1, v3, &demangling cache variable for type metadata for SpeakableString?);
  char v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_14_36(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v6 = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
  }
  else
  {
    *(void *)(v5 + 72) = v1;
    __swift_allocate_boxed_opaque_existential_1(v6);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v9 + 32))();
  }
  OUTLINED_FUNCTION_6_60();
  if (v5 == -48)
  {
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    stru_20.vmaddr = 0;
    stru_20.vmsize = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for PhonePerson(0);
    uint64_t v11 = v5 + 48;
  }
  OUTLINED_FUNCTION_2_89(v10, v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_3_75(v12);
  if (v0)
  {
    uint64_t v13 = 0;
    *(void *)(v5 + 200) = 0;
    *(void *)(v5 + 208) = 0;
  }
  else
  {
    uint64_t v13 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_18_27((uint64_t)v13);
  *(void *)(v5 + 232) = 0x8000000000497C50;
  if (v14)
  {
    uint64_t v15 = 0;
    *(void *)(v5 + 248) = 0;
    *(void *)(v5 + 256) = 0;
  }
  else
  {
    uint64_t v15 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_13_35((uint64_t)v15);
  *(void *)(v5 + 280) = 0x8000000000497C70;
  if (v16)
  {
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    *(void *)(v5 + 296) = 0;
    *(void *)(v5 + 304) = 0;
  }
  else
  {
    uint64_t v17 = v2[7];
    uint64_t v18 = &type metadata for Double;
  }
  *(void *)(v5 + 312) = v18;
  *(void *)(v5 + 288) = v17;
  OUTLINED_FUNCTION_11_46();
  swift_bridgeObjectRetain();
  unint64_t v19 = (void *)swift_task_alloc();
  v2[11] = v19;
  GroupFaceTimeInviteAnnouncementDialogIds = lazy protocol witness table accessor for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds();
  *unint64_t v19 = v2;
  v19[1] = AnnounceGroupFaceTimeInviteCATsSimple.readGroupFaceTimeInviteAnnouncementAsLabels(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:);
  return v22(v4 + 46, 0x80000000004900F0, v5, &type metadata for AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds, GroupFaceTimeInviteAnnouncementDialogIds);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  char *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds and conformance AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds);
  }
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return AnnounceGroupFaceTimeInviteCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10 - 8);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type AnnounceGroupFaceTimeInviteCATsSimple.Properties and conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.Properties and conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.Properties and conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATsSimple.Properties and conformance AnnounceGroupFaceTimeInviteCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for AnnounceGroupFaceTimeInviteCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for AnnounceGroupFaceTimeInviteCATsSimple;
  if (!type metadata singleton initialization cache for AnnounceGroupFaceTimeInviteCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for AnnounceGroupFaceTimeInviteCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for AnnounceGroupFaceTimeInviteCATsSimple()
{
  return type metadata accessor for AnnounceGroupFaceTimeInviteCATsSimple();
}

void type metadata accessor for AnnounceGroupFaceTimeInviteCATsSimple.Properties()
{
}

unsigned char *storeEnumTagSinglePayload for AnnounceGroupFaceTimeInviteCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x285900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x285A00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void type metadata accessor for AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds()
{
}

uint64_t OUTLINED_FUNCTION_2_89@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 96) = a2;
  *(void *)(v2 + 120) = result;
  strcpy((char *)(v2 + 128), "participants");
  *(unsigned char *)(v2 + 141) = 0;
  *(_WORD *)(v2 + 142) = -5120;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_75(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0x646E497473727562;
  v2[23] = 0xEA00000000007865;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_67(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  char v11 = *(unsigned char *)(v10 + 16);
  *(void *)(v9 + 56) = a8;
  *(void *)(v9 + 64) = v8;
  *(unsigned char *)(v9 + 106) = v11;
  *(unsigned char *)(v9 + 105) = a7;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 48) = a6;
  *(unsigned char *)(v9 + 104) = a5;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_6_60()
{
  *(void *)(v0 + 80) = 0x72656C6C6163;
  *(void *)(v0 + 88) = 0xE600000000000000;
}

uint64_t OUTLINED_FUNCTION_11_46()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_13_35(uint64_t a1@<X8>)
{
  v2[30] = v1;
  v2[33] = a1;
  v2[34] = v3 + 15;
}

uint64_t OUTLINED_FUNCTION_14_36(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_18_27(uint64_t a1@<X8>)
{
  v2[24] = v1;
  v2[27] = a1;
  v2[28] = v3 + 3;
}

uint64_t ContactNeedsConfirmationFlowStrategy.init(promptProvider:sharedGlobals:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for ContactNeedsConfirmationFlowStrategy() + 36);

  return outlined init with take of AppSelectionSignalComponent(a2, v6);
}

uint64_t type metadata accessor for ContactNeedsConfirmationFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ContactNeedsConfirmationFlowStrategy.actionForInput(_:resolveRecord:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Parse();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  outlined init with copy of SignalProviding(v3 + *(int *)(a3 + 36), (uint64_t)v12);
  Input.parse.getter();
  char v9 = ContactPromptResponseParser.parseResponse(from:)((uint64_t)v8);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  outlined destroy of ContactPromptResponseParser((uint64_t)v12);
  if ((v9 - 5) >= 4u) {
    return static ActionForInput.handle()();
  }
  else {
    return static ActionForInput.ignore()();
  }
}

uint64_t ContactNeedsConfirmationFlowStrategy.parseConfirmationResponse(input:resolveRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  v1[18] = v2;
  v1[19] = v0;
  v1[16] = v4;
  v1[17] = v5;
  v1[15] = v6;
  v1[20] = type metadata accessor for PhoneError();
  v1[21] = OUTLINED_FUNCTION_35();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  v1[22] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for ParameterIdentifier();
  v1[23] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[24] = v8;
  v1[25] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for Parse();
  v1[26] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[27] = v10;
  v1[28] = OUTLINED_FUNCTION_35();
  v1[29] = *(void *)(v3 + 24);
  v1[30] = *(void *)(v3 + 16);
  v1[31] = swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for ParameterResolutionRecord();
  v1[32] = v11;
  OUTLINED_FUNCTION_19_0(v11);
  v1[33] = v12;
  v1[34] = OUTLINED_FUNCTION_35();
  return _swift_task_switch(ContactNeedsConfirmationFlowStrategy.parseConfirmationResponse(input:resolveRecord:), 0, 0);
}

{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  void *v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;
  char v35;
  Swift::Int v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v67;
  uint64_t v68;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v71;
  void *person;
  uint64_t v73[2];
  void *v74;
  uint64_t v75;

  uint64_t v74 = v0;
  uint64_t v1 = (void *)ParameterResolutionRecord.result.getter();
  uint64_t v2 = [v1 itemToConfirm];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for INPerson();
  if (!swift_dynamicCast())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    unint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    char v20 = Logger.logObject.getter();
    uint64_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "#ContactNeedsConfirmationFlowStrategy No item to confirm.", v22, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v23 = v0[21];

    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    OUTLINED_FUNCTION_3_76();
    PhoneError.logged()(v24);
    outlined destroy of PhoneError(v23);
    swift_willThrow();
    goto LABEL_29;
  }
  uint64_t v71 = (uint64_t)(v0 + 2);
  person = (void *)v0[11];
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v4 = v0[33];
  uint64_t v3 = v0[34];
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[17];
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  uint64_t v8 = Logger.logObject.getter();
  uint64_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[31];
    os_log_type_t type = v9;
    uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_5_22();
    v73[0] = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = (void *)ParameterResolutionRecord.intent.getter();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v10);

    uint64_t v14 = OUTLINED_FUNCTION_8_69();
    v15(v14);
    uint64_t v16 = Array.description.getter();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    v0[14] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, type, "#ContactNeedsConfirmationFlowStrategy contacts before parsing confirmation response: %s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    uint64_t v25 = OUTLINED_FUNCTION_8_69();
    v26(v25);
  }

  uint64_t v28 = v0[27];
  uint64_t v27 = v0[28];
  uint64_t v30 = v0[25];
  uint64_t v29 = v0[26];
  uint64_t v31 = v0[24];
  *(void *)typea = v0[23];
  outlined init with copy of SignalProviding(v0[19] + *(int *)(v0[18] + 36), v71);
  Input.parse.getter();
  uint64_t v67 = ContactPromptResponseParser.parseResponse(from:)(v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  outlined destroy of ContactPromptResponseParser(v71);
  uint64_t v32 = (void *)ParameterResolutionRecord.intent.getter();
  ParameterResolutionRecord.parameter.getter();
  uint64_t v33 = ParameterIdentifier.multicardinalIndex.getter();
  uint64_t v35 = v34;
  (*(void (**)(uint64_t, os_log_type_t *))(v31 + 8))(v30, *(os_log_type_t **)typea);
  if (v35) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = v33;
  }
  if (v67 - 1 >= 2)
  {
    if (!v67)
    {
      unint64_t v46 = v0[31];
      uint64_t v47 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
      uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8);
      uint64_t v49 = v48(v46, v47);
      if (v49) {
        uint64_t v50 = v49;
      }
      else {
        uint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
      }
      if (v50 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v51 = *(void *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease();
      if (v36 >= v51) {
        INPersonContainingIntent.appendContact(person:)((INPerson)person);
      }
      else {
        INPersonContainingIntent.replaceContact(at:person:)(v36, (INPerson)person);
      }
      uint64_t v56 = v32;
      uint64_t v57 = Logger.logObject.getter();
      uint64_t v58 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v68 = v0[31];
        uint64_t v59 = (uint8_t *)OUTLINED_FUNCTION_5_22();
        v73[0] = OUTLINED_FUNCTION_14_0();
        *(_DWORD *)uint64_t v59 = 136315138;
        v48(v68, v47);
        uint64_t v60 = Array.description.getter();
        char v62 = v61;
        swift_bridgeObjectRelease();
        v0[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v62, v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_0, v57, v58, "#ContactNeedsConfirmationFlowStrategy contacts after user said yes: %s", v59, 0xCu);
        OUTLINED_FUNCTION_9();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
      }
      uint64_t v52 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
      goto LABEL_35;
    }
    uint64_t v53 = v0[21];
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    OUTLINED_FUNCTION_3_76();
    PhoneError.logged()(v54);
    outlined destroy of PhoneError(v53);
    swift_willThrow();

LABEL_29:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v55 = (uint64_t (*)(void))v0[1];
    goto LABEL_36;
  }
  uint64_t v37 = *(void *)(swift_getAssociatedConformanceWitness() + 8);

  uint64_t v38 = v32;
  uint64_t v39 = Logger.logObject.getter();
  uint64_t v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = v0[31];
    id v42 = (uint8_t *)OUTLINED_FUNCTION_5_22();
    v73[0] = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)id v42 = 136315138;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v37);
    uint64_t v43 = Array.description.getter();
    os_log_type_t v45 = v44;
    swift_bridgeObjectRelease();
    v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v39, v40, "#ContactNeedsConfirmationFlowStrategy contacts after user said no: %s", v42, 0xCu);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  uint64_t v52 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
LABEL_35:
  os_log_type_t v63 = v0[22];
  uint64_t v64 = *v52;
  uint64_t v65 = type metadata accessor for ConfirmationResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 104))(v63, v64, v65);
  __swift_storeEnumTagSinglePayload(v63, 0, 1, v65);
  NeedsConfirmationAnswer.init(answeredValue:updatedIntent:)();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v55 = (uint64_t (*)(void))v0[1];
LABEL_36:
  return v55();
}

uint64_t ContactNeedsConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[11] = v2;
  v1[12] = v0;
  v1[9] = v3;
  v1[10] = v4;
  v1[8] = v5;
  v1[13] = type metadata accessor for PhoneError();
  v1[14] = OUTLINED_FUNCTION_35();
  return _swift_task_switch(ContactNeedsConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void *v20;
  uint64_t v21;

  char v20 = v0;
  outlined init with copy of Any(v0[9], (uint64_t)(v0 + 2));
  type metadata accessor for INPerson();
  if (swift_dynamicCast())
  {
    uint64_t v1 = v0[11];
    uint64_t v2 = v0[6];
    v0[15] = v2;
    uint64_t v4 = *(void *)(v1 + 16);
    uint64_t v3 = *(void *)(v1 + 24);
    swift_getAssociatedTypeWitness();
    type metadata accessor for ParameterResolutionRecord();
    uint64_t v5 = ParameterResolutionRecord.app.getter();
    v0[16] = v5;
    uint64_t v6 = ParameterResolutionRecord.intent.getter();
    v0[17] = v6;
    uint64_t v7 = ParameterResolutionRecord.result.getter();
    v0[18] = v7;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40)
                                                                                                + **(int **)(v3 + 40));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[19] = v8;
    *uint64_t v8 = v0;
    v8[1] = ContactNeedsConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:);
    uint64_t v9 = v0[8];
    return v18(v9, v5, v6, v7, v2, v4, v3);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
    uint64_t v12 = Logger.logObject.getter();
    uint64_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      unint64_t v19 = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v14 = 136315138;
      v0[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000037, 0x8000000000497CF0, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v12, v13, "#%s: No item to confirm.", v14, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    uint64_t v15 = v0[14];
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    OUTLINED_FUNCTION_3_76();
    PhoneError.logged()(v16);
    outlined destroy of PhoneError(v15);
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v9;

  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  void *v5 = v4;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = ContactNeedsConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:);
  }
  else
  {
    uint64_t v7 = *(void **)(v3 + 136);

    swift_release();
    uint64_t v6 = ContactNeedsConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:);
  }
  return _swift_task_switch(v6, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v2 = *(void **)(v0 + 120);

  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.authenticationPolicy.getter in conformance ContactNeedsConfirmationFlowStrategy<A>()
{
  return NeedsConfirmationFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.parseConfirmationResponse(input:resolveRecord:) in conformance ContactNeedsConfirmationFlowStrategy<A>()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ContactNeedsConfirmationFlowStrategy.parseConfirmationResponse(input:resolveRecord:)();
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.shouldRequestUnlockForConfirmation(itemToConfirm:resolveRecord:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for Flow.onAsync(input:) in conformance RedirectToCompanionFlow;
  return NeedsConfirmationFlowStrategyAsync.shouldRequestUnlockForConfirmation(itemToConfirm:resolveRecord:)(a1, a2, a3, a4);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:resolveRecord:) in conformance ContactNeedsConfirmationFlowStrategy<A>()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  return ContactNeedsConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:)();
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:resolveRecord:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:resolveRecord:)(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:resolveRecord:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:resolveRecord:)(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return NeedsConfirmationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return NeedsConfirmationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse(app:intent:parameter:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return NeedsConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse(app:intent:parameter:)(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:) in conformance ContactNeedsConfirmationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  void *v15 = v7;
  v15[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t base witness table accessor for ParameterResolutionHandlingAsync in ContactNeedsConfirmationFlowStrategy<A>()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for ContactNeedsConfirmationFlowStrategy()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContactNeedsConfirmationFlowStrategy(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x287810);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double storeEnumTagSinglePayload for ContactNeedsConfirmationFlowStrategy(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x287A00);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v18 + 8) = 0u;
            *(_OWORD *)(v18 + 24) = 0u;
            *(void *)unint64_t v18 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v18 + 24) = (a2 - 1);
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return result;
  }
}

uint64_t OUTLINED_FUNCTION_3_76()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_8_69()
{
  return v0;
}

unint64_t DeviceIdiom.getPBDeviceIdiom()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DeviceIdiom();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DeviceIdiom.car(_:))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = 5;
  }
  else if (v6 == enum case for DeviceIdiom.homepod(_:))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = 4;
  }
  else if (v6 == enum case for DeviceIdiom.mac(_:))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = 7;
  }
  else if (v6 == enum case for DeviceIdiom.pad(_:))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = 2;
  }
  else if (v6 == enum case for DeviceIdiom.phone(_:))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = 1;
  }
  else if (v6 == enum case for DeviceIdiom.watch(_:))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = 3;
  }
  else if (v6 == enum case for DeviceIdiom.tv(_:))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = 6;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v8 = 0;
    unsigned __int8 v7 = 1;
  }
  return v8 | ((unint64_t)v7 << 32);
}

uint64_t specialized Sequence.contains(where:)(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v7 = *(void *)(a3 + 8 * v6);
        swift_retain();
      }
      uint64_t v8 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      uint64_t v14 = v7;
      char v9 = a1(&v14);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return v11 & 1;
      }
      char v10 = v9;
      swift_release();
      if (v10)
      {
        swift_bridgeObjectRelease();
        char v11 = 1;
        return v11 & 1;
      }
      ++v6;
      if (v8 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v11 = 0;
  return v11 & 1;
}

BOOL static UnsupportedPhoneCall.isInRetailStoreDemoMode()()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v0 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (AppBooleanValue) {
    BOOL v3 = keyExistsAndHasValidFormat == 0;
  }
  else {
    BOOL v3 = 1;
  }
  return !v3;
}

unint64_t UnsupportedPhoneCall.description.getter(char a1)
{
  unint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
    case 6:
      unint64_t result = OUTLINED_FUNCTION_7_62();
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000020;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t UnsupportedPhoneCall.rawValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
    case 6:
      unint64_t result = OUTLINED_FUNCTION_7_62();
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000020;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static UnsupportedPhoneCall.from(nlIntent:device:)(void *a1)
{
  if (PhoneCallNLIntent.isRemoveParticipant()()) {
    return 11;
  }
  else {
    return 14;
  }
}

uint64_t static UnsupportedPhoneCall.from(nlIntent:app:sharedGlobals:)(void *a1, uint64_t a2, void *a3)
{
  OUTLINED_FUNCTION_12_38(a3);
  uint64_t v6 = OUTLINED_FUNCTION_4_68();
  v7(v6);
  OUTLINED_FUNCTION_1_56(a1);
  Swift::Bool v8 = PhoneCallNLIntent.isOutgoingCall()();
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v114);
  if (!v8)
  {
    OUTLINED_FUNCTION_9_54();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_1_56(v114);
  Swift::Bool v9 = PhoneCallNLIntent.isEmergencyServicesCall()();
  outlined init with copy of SignalProviding((uint64_t)v114, (uint64_t)v113);
  if (!v9)
  {
    OUTLINED_FUNCTION_1_56(v113);
    Swift::Bool v32 = PhoneCallNLIntent.isEmergencyNumberCall()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
    OUTLINED_FUNCTION_9_54();
    if (v32) {
      goto LABEL_20;
    }
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
    goto LABEL_6;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  OUTLINED_FUNCTION_9_54();
LABEL_20:
  OUTLINED_FUNCTION_1_56(v113);
  DeviceState.isSiriEmergencyCallingUnsupported.getter();
  if (v33)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
LABEL_23:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    uint64_t v36 = (void *)OUTLINED_FUNCTION_25_0(v35, (uint64_t)static Logger.siriPhone);
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_2(v37))
    {
      uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v38);
      OUTLINED_FUNCTION_1_3(&dword_0, v39, v40, "#PhoneCallRequestSupportPolicy Unsupported StartCallEmergency!");
      OUTLINED_FUNCTION_5_16();
    }

    uint64_t v16 = 0;
    goto LABEL_28;
  }
  BOOL v34 = static UnsupportedPhoneCall.isInRetailStoreDemoMode()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  if (v34) {
    goto LABEL_23;
  }
LABEL_6:
  __swift_project_boxed_opaque_existential_1(v115, v115[3]);
  if (dispatch thunk of DeviceState.isAppleTV.getter())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    char v11 = (void *)OUTLINED_FUNCTION_25_0(v10, (uint64_t)static Logger.siriPhone);
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_8_2(v12))
    {
      unsigned int v13 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v13);
      OUTLINED_FUNCTION_1_3(&dword_0, v14, v15, "#PhoneCallRequestSupportPolicy Unsupported on AppleTV!");
      OUTLINED_FUNCTION_5_16();
    }

    uint64_t v16 = 12;
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_1_56(a1);
  Swift::Bool v17 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  outlined init with copy of SignalProviding((uint64_t)v115, (uint64_t)v110);
  if (v17)
  {
    uint64_t v18 = v111;
    uint64_t v19 = v112;
    char v20 = __swift_project_boxed_opaque_existential_1(v110, v111);
    DeviceState.isGroupFaceTimeDeviceUnsupported(app:)(a2, v18, v19, (uint64_t)v20, v21, v22, v23, v24, v96, v97, v98, v99, v100, v101, v103[0], v103[1], v103[2], v104, v105,
      v106[0]);
    LOBYTE(v18) = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    if (v18)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      uint64_t v27 = (void *)OUTLINED_FUNCTION_25_0(v26, (uint64_t)static Logger.siriPhone);
      os_log_type_t v28 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_8_2(v28))
      {
        uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_32_2(v29);
        OUTLINED_FUNCTION_1_3(&dword_0, v30, v31, "#PhoneCallRequestSupportPolicy Unsupported device for group FaceTime call");
        OUTLINED_FUNCTION_5_16();
      }

      uint64_t v16 = 9;
      goto LABEL_28;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  }
  uint64_t v102 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AppAndDeviceRestriction.Condition>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467720;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_46A030;
  *(void *)(v43 + 32) = swift_getKeyPath();
  OUTLINED_FUNCTION_13_36();
  specialized Set.init(_nonEmptyArrayLiteral:)();
  *(void *)(inited + 32) = v109[0];
  *(void *)(inited + 40) = v44;
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_469DA0;
  *(void *)(v45 + 32) = swift_getKeyPath();
  *(void *)(v45 + 40) = swift_getKeyPath();
  OUTLINED_FUNCTION_13_36();
  swift_bridgeObjectRetain();
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v109[0];
  *(void *)(inited + 56) = v47;
  uint64_t v48 = swift_initStackObject();
  *(_OWORD *)(v48 + 16) = xmmword_467720;
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_46A030;
  *(void *)(v49 + 32) = swift_getKeyPath();
  OUTLINED_FUNCTION_13_36();
  specialized Set.init(_nonEmptyArrayLiteral:)();
  *(void *)(v48 + 32) = v109[0];
  *(void *)(v48 + 40) = v50;
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_47C580;
  *(void *)(v51 + 32) = swift_getKeyPath();
  *(void *)(v51 + 40) = swift_getKeyPath();
  *(void *)(v51 + 48) = swift_getKeyPath();
  OUTLINED_FUNCTION_13_36();
  swift_bridgeObjectRetain();
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  *(void *)(v48 + 48) = v109[0];
  *(void *)(v48 + 56) = v53;
  OUTLINED_FUNCTION_1_56(a1);
  LOBYTE(v51) = PhoneCallNLIntent.isAudioCall()();
  outlined init with copy of SignalProviding((uint64_t)v115, (uint64_t)v109);
  if (v51)
  {
    uint64_t v54 = v102;
    char v55 = AppAndDeviceRestriction.isRestricted(device:app:)((uint64_t)v109, v102, inited);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
    if (v55)
    {
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v56 = type metadata accessor for Logger();
      uint64_t v57 = (void *)OUTLINED_FUNCTION_25_0(v56, (uint64_t)static Logger.siriPhone);
      os_log_type_t v58 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_8_2(v58))
      {
        uint64_t v59 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_32_2(v59);
        OUTLINED_FUNCTION_1_3(&dword_0, v60, v61, "#PhoneCallRequestSupportPolicy Unsupported StartAudioCall!");
        OUTLINED_FUNCTION_5_16();
      }

      uint64_t v16 = 1;
      goto LABEL_28;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
    swift_bridgeObjectRelease();
    uint64_t v54 = v102;
  }
  OUTLINED_FUNCTION_1_56(a1);
  Swift::Bool v62 = PhoneCallNLIntent.isVideoCall()();
  outlined init with copy of SignalProviding((uint64_t)v115, (uint64_t)v108);
  if (v62)
  {
    char v63 = AppAndDeviceRestriction.isRestricted(device:app:)((uint64_t)v108, v54, v48);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    if (v63)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v64 = type metadata accessor for Logger();
      uint64_t v65 = OUTLINED_FUNCTION_25_0(v64, (uint64_t)static Logger.siriPhone);
      os_log_type_t v66 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v16 = 2;
        uint64_t v67 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v67 = 0;
        _os_log_impl(&dword_0, v65, v66, "#PhoneCallRequestSupportPolicy Unsupported StartVideoCall!", v67, 2u);
        swift_slowDealloc();
      }
      else
      {

        uint64_t v16 = 2;
      }
      goto LABEL_28;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1_56(a1);
  if (!PhoneCallNLIntent.isAnswerCall()())
  {
    outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v107);
    goto LABEL_53;
  }
  Swift::Bool v68 = App.isFirstParty()();
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v107);
  if (v68)
  {
LABEL_53:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
    goto LABEL_54;
  }
  OUTLINED_FUNCTION_12_38(v107);
  uint64_t v69 = OUTLINED_FUNCTION_4_68();
  v70(v69);
  __swift_project_boxed_opaque_existential_1(v106, v106[3]);
  OUTLINED_FUNCTION_11_47();
  char v72 = v71;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  if ((v72 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    uint64_t v74 = (void *)OUTLINED_FUNCTION_25_0(v73, (uint64_t)static Logger.siriPhone);
    os_log_type_t v75 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v75)) {
      goto LABEL_75;
    }
    uint64_t v76 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v76);
    uint64_t v79 = "#PhoneCallRequestSupportPolicy Unsupported AnswerCall!";
LABEL_74:
    OUTLINED_FUNCTION_1_3(&dword_0, v77, v78, v79);
    OUTLINED_FUNCTION_5_16();
LABEL_75:

    uint64_t v16 = 5;
    goto LABEL_28;
  }
LABEL_54:
  OUTLINED_FUNCTION_1_56(a1);
  if (PhoneCallNLIntent.isJoinCall()() && !App.isFirstParty()())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v92 = type metadata accessor for Logger();
    uint64_t v74 = (void *)OUTLINED_FUNCTION_25_0(v92, (uint64_t)static Logger.siriPhone);
    os_log_type_t v93 = static os_log_type_t.debug.getter();
    if (!OUTLINED_FUNCTION_8_2(v93)) {
      goto LABEL_75;
    }
    uint64_t v94 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v94);
    uint64_t v79 = "#PhoneCallRequestSupportPolicy Unsupported JoinCall!";
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_1_56(a1);
  if (!PhoneCallNLIntent.isHangUpCall()())
  {
    outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v106);
    goto LABEL_65;
  }
  Swift::Bool v80 = App.isFirstParty()();
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v106);
  if (v80)
  {
LABEL_65:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
LABEL_66:
    OUTLINED_FUNCTION_1_56(a1);
    Swift::Bool v91 = PhoneCallNLIntent.isEmergencyContactCall()();
    outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v103);
    if (v91)
    {
      OUTLINED_FUNCTION_1_56(v103);
      if (PhoneCallNLIntent.isFaceTimeCall()())
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
LABEL_80:
        uint64_t v16 = 10;
        goto LABEL_28;
      }
      Swift::Bool v95 = App.isFirstParty()();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
      if (!v95) {
        goto LABEL_80;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
    }
    OUTLINED_FUNCTION_1_56(a1);
    if (PhoneCallNLIntent.isRemoveParticipant()()) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = static UnsupportedPhoneCall.checkUnsupportedSearchCallHistoryOrVoicemail(nlIntent:app:sharedGlobals:)(a1, v54, a3);
    }
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_12_38(v106);
  uint64_t v81 = OUTLINED_FUNCTION_4_68();
  v82(v81);
  __swift_project_boxed_opaque_existential_1(v103, v104);
  OUTLINED_FUNCTION_11_47();
  char v84 = v83;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  if (v84) {
    goto LABEL_66;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v85 = type metadata accessor for Logger();
  uint64_t v86 = (void *)OUTLINED_FUNCTION_25_0(v85, (uint64_t)static Logger.siriPhone);
  os_log_type_t v87 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v87))
  {
    os_log_type_t v88 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v88);
    OUTLINED_FUNCTION_1_3(&dword_0, v89, v90, "#PhoneCallRequestSupportPolicy Unsupported HangUpCall!");
    OUTLINED_FUNCTION_5_16();
  }

  uint64_t v16 = 6;
LABEL_28:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v115);
  return v16;
}

uint64_t sub_288B88@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return key path getter for DeviceState.isAppleTV : DeviceState(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of DeviceState.isAppleTV.getter, a2);
}

uint64_t static AppAndDeviceRestriction.Condition.restrictAll(deviceStates:)(uint64_t a1)
{
  return static AppAndDeviceRestriction.Condition.restrictAll(deviceStates:)(a1);
}

{
  swift_bridgeObjectRetain();
  specialized Set.init(_nonEmptyArrayLiteral:)();
  return a1;
}

uint64_t static AppAndDeviceRestriction.Condition.restrictThirdParty(deviceStates:)(uint64_t a1)
{
  return static AppAndDeviceRestriction.Condition.restrictAll(deviceStates:)(a1);
}

uint64_t key path getter for DeviceState.isAppleTV : DeviceState@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t result = a2(v5, v6);
  *a3 = result & 1;
  return result;
}

uint64_t AppAndDeviceRestriction.isRestricted(device:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Bool v4 = App.isFirstParty()();
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    Swift::Bool v6 = v4;
    uint64_t v7 = a3 + 32;
    Swift::UInt v8 = !v4;
    swift_bridgeObjectRetain_n();
    uint64_t v9 = 0;
    uint64_t v24 = v5;
    Swift::UInt v23 = v8;
    while (1)
    {
      uint64_t v10 = (unint64_t *)(v7 + 16 * v9);
      unint64_t v11 = v10[1];
      if (*(void *)(v11 + 16))
      {
        unint64_t v12 = *v10;
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v8);
        Swift::Int v13 = Hasher._finalize()();
        uint64_t v14 = -1 << *(unsigned char *)(v11 + 32);
        unint64_t v15 = v13 & ~v14;
        if ((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
        {
          uint64_t v16 = *(void *)(v11 + 48);
          if (v6 == *(unsigned char *)(v16 + v15))
          {
            uint64_t v17 = ~v14;
            while (1)
            {
              unint64_t v15 = (v15 + 1) & v17;
              if (((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
                break;
              }
              if (v6 != *(unsigned char *)(v16 + v15)) {
                goto LABEL_9;
              }
            }
          }
          else
          {
LABEL_9:
            if (v12 >> 62)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v18)
              {
LABEL_11:
                uint64_t v19 = 4;
                while (1)
                {
                  uint64_t result = (v12 & 0xC000000000000001) != 0
                         ? specialized _ArrayBuffer._getElementSlowPath(_:)()
                         : swift_retain();
                  uint64_t v21 = v19 - 3;
                  if (__OFADD__(v19 - 4, 1)) {
                    break;
                  }
                  swift_getAtKeyPath();
                  swift_release();
                  if (v25 == 1)
                  {
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();
                    uint64_t v22 = 1;
                    goto LABEL_25;
                  }
                  ++v19;
                  if (v21 == v18) {
                    goto LABEL_18;
                  }
                }
                __break(1u);
                return result;
              }
            }
            else
            {
              uint64_t v18 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8));
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if (v18) {
                goto LABEL_11;
              }
            }
LABEL_18:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v7 = a3 + 32;
            uint64_t v5 = v24;
            Swift::UInt v8 = v23;
          }
        }
      }
      if (++v9 == v5)
      {
        uint64_t v22 = 0;
LABEL_25:
        swift_bridgeObjectRelease_n();
        return v22;
      }
    }
  }
  return 0;
}

uint64_t static UnsupportedPhoneCall.checkUnsupportedSearchCallHistoryOrVoicemail(nlIntent:app:sharedGlobals:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[3];
  uint64_t v5 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v41, v4, v5);
  Swift::Bool v6 = App.isFirstParty()();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (PhoneCallNLIntent.isIncomingCallSearch()() && !v6)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    Swift::UInt v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "#PhoneCallRequestSupportPolicy Unsupported IdentifyIncomingCaller!", v10, 2u);
      swift_slowDealloc();
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    return 3;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  Swift::Bool v12 = PhoneCallNLIntent.hasVoiceMail()();
  outlined init with copy of SignalProviding((uint64_t)v41, (uint64_t)v40);
  if (v12)
  {
    __swift_project_boxed_opaque_existential_1(v40, v40[3]);
    char v13 = dispatch thunk of DeviceState.isHomePod.getter();
    outlined init with copy of SignalProviding((uint64_t)v40, (uint64_t)v37);
    if (v13)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
LABEL_27:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v30, v31))
      {
        Swift::Bool v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)Swift::Bool v32 = 0;
        _os_log_impl(&dword_0, v30, v31, "#PhoneCallRequestSupportPolicy FaceTime-only or HomePod devices do not support voicemail requests", v32, 2u);
        swift_slowDealloc();
      }

LABEL_40:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      return 4;
    }
    uint64_t v27 = v38;
    uint64_t v28 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    LOBYTE(v27) = DeviceState.supportsOnlyFaceTimeCalls.getter(v27, v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    if (v27) {
      goto LABEL_27;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  Swift::Bool v14 = PhoneCallNLIntent.isSearchCallOrVoiceMail()();
  outlined init with copy of SignalProviding((uint64_t)v41, (uint64_t)v37);
  if (v14)
  {
    __swift_project_boxed_opaque_existential_1(v37, v38);
    DeviceState.isSearchCallHistoryUnavailable(app:)();
    char v16 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    if (v16)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v18, v19))
      {
        char v20 = (uint8_t *)swift_slowAlloc();
        v40[0] = swift_slowAlloc();
        *(_DWORD *)char v20 = 136315138;
        uint64_t v21 = dispatch thunk of App.description.getter();
        v37[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v18, v19, "#PhoneCallRequestSupportPolicy searchCallHistory/Voicemail on an unsupported device, or on app:%s is not supported anywhere", v20, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }

      goto LABEL_40;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (PhoneCallNLIntent.isDelete()())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    if (PhoneCallNLIntent.hasVoiceMail()())
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_0, v24, v25, "#PhoneCallRequestSupportPolicy delete verb isn't supported by phone domain for voicemail", v26, 2u);
        swift_slowDealloc();
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      return 13;
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
      BOOL v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl(&dword_0, v34, v35, "#PhoneCallRequestSupportPolicy delete verb isn't supported by phone domain for call history", v36, 2u);
        swift_slowDealloc();
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      return 7;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    return 14;
  }
}

PhoneCallFlowDelegatePlugin::UnsupportedPhoneCall_optional __swiftcall UnsupportedPhoneCall.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of UnsupportedPhoneCall.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xE) {
    return (PhoneCallFlowDelegatePlugin::UnsupportedPhoneCall_optional)14;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::UnsupportedPhoneCall_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance UnsupportedPhoneCall(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance UnsupportedPhoneCall()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UnsupportedPhoneCall(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance UnsupportedPhoneCall(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::UnsupportedPhoneCall_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedPhoneCall@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UnsupportedPhoneCall_optional *a2@<X8>)
{
  result.int value = UnsupportedPhoneCall.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance UnsupportedPhoneCall@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = UnsupportedPhoneCall.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance UnsupportedPhoneCall()
{
  return UnsupportedPhoneCall.description.getter(*v0);
}

uint64_t AppAndDeviceRestriction.Condition.matches(device:app:)(uint64_t a1, char a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = specialized Set.contains(_:)(a2 & 1, a4);
  if (v6)
  {
    __chkstk_darwin(v6);
    v9[2] = a1;
    swift_bridgeObjectRetain();
    char v7 = specialized Sequence.contains(where:)((uint64_t (*)(uint64_t *))partial apply for closure #1 in AppAndDeviceRestriction.Condition.matches(device:app:), (uint64_t)v9, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t closure #1 in AppAndDeviceRestriction.Condition.matches(device:app:)()
{
  swift_getAtKeyPath();
  return v1;
}

uint64_t static AppAndDeviceRestriction.Condition.restrictFirstParty(deviceStates:)(uint64_t a1)
{
  return static AppAndDeviceRestriction.Condition.restrictAll(deviceStates:)(a1);
}

uint64_t sub_289748@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return key path getter for DeviceState.isAppleTV : DeviceState(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of DeviceState.isHomePod.getter, a2);
}

uint64_t sub_289774@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return key path getter for DeviceState.isAppleTV : DeviceState(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of DeviceState.isMac.getter, a2);
}

uint64_t sub_2897A0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return key path getter for DeviceState.isAppleTV : DeviceState(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of DeviceState.isWatch.getter, a2);
}

uint64_t partial apply for closure #1 in AppAndDeviceRestriction.Condition.matches(device:app:)()
{
  return closure #1 in AppAndDeviceRestriction.Condition.matches(device:app:)() & 1;
}

unint64_t lazy protocol witness table accessor for type UnsupportedPhoneCall and conformance UnsupportedPhoneCall()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedPhoneCall and conformance UnsupportedPhoneCall;
  if (!lazy protocol witness table cache variable for type UnsupportedPhoneCall and conformance UnsupportedPhoneCall)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedPhoneCall and conformance UnsupportedPhoneCall);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AppAndDeviceRestriction.AppCategory and conformance AppAndDeviceRestriction.AppCategory()
{
  unint64_t result = lazy protocol witness table cache variable for type AppAndDeviceRestriction.AppCategory and conformance AppAndDeviceRestriction.AppCategory;
  if (!lazy protocol witness table cache variable for type AppAndDeviceRestriction.AppCategory and conformance AppAndDeviceRestriction.AppCategory)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppAndDeviceRestriction.AppCategory and conformance AppAndDeviceRestriction.AppCategory);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnsupportedPhoneCall(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x289958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

void type metadata accessor for UnsupportedPhoneCall()
{
}

void type metadata accessor for AppAndDeviceRestriction()
{
}

unsigned char *storeEnumTagSinglePayload for AppAndDeviceRestriction.AppCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x289A64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AppAndDeviceRestriction.AppCategory()
{
}

uint64_t destroy for AppAndDeviceRestriction.Condition()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for AppAndDeviceRestriction.Condition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppAndDeviceRestriction.Condition(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for AppAndDeviceRestriction.Condition(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppAndDeviceRestriction.Condition(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppAndDeviceRestriction.Condition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AppAndDeviceRestriction.Condition()
{
}

uint64_t OUTLINED_FUNCTION_4_68()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_7_62()
{
  return 0xD000000000000015;
}

uint64_t OUTLINED_FUNCTION_9_54()
{
  __swift_destroy_boxed_opaque_existential_1(v0 - 168);
  return outlined init with copy of SignalProviding(v0 - 128, v0 - 208);
}

void OUTLINED_FUNCTION_11_47()
{
  DeviceState.isStandaloneIOS.getter();
}

void *OUTLINED_FUNCTION_12_38(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_13_36()
{
  return specialized Array._endMutation()();
}

uint64_t static IdentifyCallerIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = OUTLINED_FUNCTION_0_12(a1, a2, a3, a4, a5, a6);

  return specialized static IdentifyCallerIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(v6, v7, v8, v9, v10, v11, v12, v13);
}

#error "289EFC: call analysis failed (funcsize=133)"

ValueMetadata *type metadata accessor for IdentifyCallerIntentConversion()
{
  return &type metadata for IdentifyCallerIntentConversion;
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::Properties_optional __swiftcall SearchCallHistoryCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  _findStringSwitchCaseWithCache(cases:string:cache:)();
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 0x28) {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::Properties_optional)40;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::Properties_optional)v1;
  }
}

void SearchCallHistoryCATsSimple.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::Properties_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.Properties()
{
  char v1 = OUTLINED_FUNCTION_32();
  SearchCallHistoryCATsSimple.Properties.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:));
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(39);
  return v11(v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  char *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

BOOL SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:));
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(39);
  return v10(v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  char *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDisplayName(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDisplayName(callRecord:));
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDisplayName(callRecord:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  unint64_t v10 = OUTLINED_FUNCTION_73_0(44);
  return v11(v10);
}

BOOL SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDisplayNameAsLabels(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDisplayNameAsLabels(callRecord:));
}

uint64_t SearchCallHistoryCATsSimple.buildCallRecordDisplayNameAsLabels(callRecord:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(44);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds and conformance SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.confirmCallTypes(callTypeToConfirm:callTypesCount:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t SearchCallHistoryCATsSimple.confirmCallTypes(callTypeToConfirm:callTypesCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_164_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_36_2();
  uint64_t v14 = OUTLINED_FUNCTION_57_0(v13);
  *(_OWORD *)(v14 + 16) = xmmword_467720;
  *(void *)(v14 + 32) = 0xD000000000000011;
  *(void *)(v14 + 40) = 0x80000000004971D0;
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v18();
  }
  OUTLINED_FUNCTION_81_5();
  if (v19)
  {
    uint64_t v21 = 0;
    uint64_t v20 = 0;
    v12[13] = 0;
    v12[14] = 0;
  }
  else
  {
    uint64_t v20 = *(void *)(v10 + 24);
    uint64_t v21 = &type metadata for Double;
  }
  v12[15] = v21;
  v12[12] = v20;
  uint64_t v22 = OUTLINED_FUNCTION_3_0();
  uint64_t v23 = (void *)OUTLINED_FUNCTION_65_5(v22);
  *uint64_t v23 = v24;
  v23[1] = StartCallCATsSimple.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_26_2(0xD000000000000022);
  OUTLINED_FUNCTION_26_8();
  return v28(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmCallTypesDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmCallTypesDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

void SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_24_10();
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmCallTypesDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmCallTypesDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t SearchCallHistoryCATsSimple.confirmCallTypesAsLabels(callTypeToConfirm:callTypesCount:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t SearchCallHistoryCATsSimple.confirmCallTypesAsLabels(callTypeToConfirm:callTypesCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_164_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_36_2();
  uint64_t v14 = OUTLINED_FUNCTION_57_0(v13);
  *(_OWORD *)(v14 + 16) = xmmword_467720;
  uint64_t v15 = (void *)(v14 + 48);
  *(void *)(v14 + 32) = 0xD000000000000011;
  *(void *)(v14 + 40) = 0x80000000004971D0;
  OUTLINED_FUNCTION_39_0(v14, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v19();
  }
  OUTLINED_FUNCTION_81_5();
  if (v20)
  {
    uint64_t v22 = 0;
    uint64_t v21 = 0;
    v12[13] = 0;
    v12[14] = 0;
  }
  else
  {
    uint64_t v21 = *(void *)(v10 + 24);
    uint64_t v22 = &type metadata for Double;
  }
  v12[15] = v22;
  v12[12] = v21;
  uint64_t v23 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_47_4(v23);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v15 = v24;
  v15[1] = StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v30(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:));
}

uint64_t SearchCallHistoryCATsSimple.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_179_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  uint64_t v5 = OUTLINED_FUNCTION_244(v4, 20);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for DialogCalendar();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 56);
  *(void *)(v2 + 88) = 0x8000000000497210;
  *(void *)(v2 + 120) = &type metadata for Bool;
  *(unsigned char *)(v2 + 96) = v6;
  OUTLINED_FUNCTION_160_1(v5);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:);
  OUTLINED_FUNCTION_32_0(36);
  OUTLINED_FUNCTION_20_2();
  return v13(v10, v11, v12, v13, v14, v15, v16, v17);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmDateCreatedDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmDateCreatedDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmDateCreatedDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmDateCreatedDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.confirmDateCreatedAsLabels(dateCreatedToConfirm:isTimeDescriptive:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.confirmDateCreatedAsLabels(dateCreatedToConfirm:isTimeDescriptive:));
}

uint64_t SearchCallHistoryCATsSimple.confirmDateCreatedAsLabels(dateCreatedToConfirm:isTimeDescriptive:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_179_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  uint64_t v5 = OUTLINED_FUNCTION_244(v4, 20);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for DialogCalendar();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 56);
  *(void *)(v2 + 88) = 0x8000000000497210;
  *(void *)(v2 + 120) = &type metadata for Bool;
  *(unsigned char *)(v2 + 96) = v6;
  OUTLINED_FUNCTION_160_1(v5);
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v8;
  v0[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v14(v9, v10, v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.confirmRecipient(recipientToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.confirmRecipient(recipientToConfirm:));
}

uint64_t SearchCallHistoryCATsSimple.confirmRecipient(recipientToConfirm:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_179_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = OUTLINED_FUNCTION_19_1(v2);
  *(_OWORD *)(v3 + 16) = xmmword_467710;
  uint64_t v4 = OUTLINED_FUNCTION_10_1(v3, (uint64_t)"recipientToConfirm");
  if (v0)
  {
    uint64_t v4 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v4);
  OUTLINED_FUNCTION_19_2();
  uint64_t v5 = swift_task_alloc();
  char v6 = (void *)OUTLINED_FUNCTION_43_12(v5);
  *char v6 = v7;
  v6[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_32_0(34);
  OUTLINED_FUNCTION_20_2();
  return v11(v8, v9, v10, v11, v12, v13, v14, v15);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmRecipientDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmRecipientDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x31676F6C616964;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmRecipientDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmRecipientDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.confirmRecipientAsLabels(recipientToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.confirmRecipientAsLabels(recipientToConfirm:));
}

uint64_t SearchCallHistoryCATsSimple.confirmRecipientAsLabels(recipientToConfirm:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_179_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = OUTLINED_FUNCTION_19_1(v2);
  *(_OWORD *)(v3 + 16) = xmmword_467710;
  uint64_t v4 = OUTLINED_FUNCTION_10_1(v3, (uint64_t)"recipientToConfirm");
  if (v0)
  {
    uint64_t v4 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v4);
  OUTLINED_FUNCTION_19_2();
  uint64_t v5 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v5);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v6;
  v0[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v12(v7, v8, v9, v10, v11, v12, v13, v14);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.confirmUnseen(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.confirmUnseen(intent:));
}

uint64_t SearchCallHistoryCATsSimple.confirmUnseen(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(31);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmUnseenDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmUnseenDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0x32676F6C616964;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmUnseenDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ConfirmUnseenDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.confirmUnseenAsLabels(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.confirmUnseenAsLabels(intent:));
}

uint64_t SearchCallHistoryCATsSimple.confirmUnseenAsLabels(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(31);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds and conformance SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.errorWithCode()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(31);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.errorWithCodeAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(31);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.errorWithCodeAppConfigurationRequired(appName:intent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_164_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  uint64_t v5 = OUTLINED_FUNCTION_4_41(v4, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v9();
  }
  unint64_t v10 = OUTLINED_FUNCTION_120_2();
  if (v0)
  {
    unint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    v2[13] = 0;
    v2[14] = 0;
  }
  v2[12] = v0;
  v2[15] = v10;
  OUTLINED_FUNCTION_19_2();
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_65_5(v11);
  *uint64_t v12 = v13;
  v12[1] = StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_20_2();
  return v17(v14, v15, v16, v17, v18, v19, v20, v21);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.errorWithCodeAppConfigurationRequiredAsLabels(appName:intent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_164_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  uint64_t v5 = OUTLINED_FUNCTION_4_41(v4, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v9();
  }
  unint64_t v10 = OUTLINED_FUNCTION_120_2();
  if (v0)
  {
    unint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    v2[13] = 0;
    v2[14] = 0;
  }
  v2[12] = v0;
  v2[15] = v10;
  OUTLINED_FUNCTION_19_2();
  uint64_t v11 = swift_task_alloc();
  OUTLINED_FUNCTION_47_4(v11);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v12;
  v0[1] = StartCallCATsSimple.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_20_2();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_180(v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v9);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  char *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v17 = *(unsigned __int8 *)(v14 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = swift_allocObject();
  char v19 = (__n128 *)OUTLINED_FUNCTION_203_1(v18);
  OUTLINED_FUNCTION_2_81(v19, (__n128)xmmword_472F90);
  if (v17)
  {
    uint64_t v20 = 0;
    v15[7] = 0;
    v15[8] = 0;
  }
  else
  {
    uint64_t v20 = *(void *)(v14 + 16);
  }
  OUTLINED_FUNCTION_147_3(v20);
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v21) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    uint64_t v22 = &type metadata for Double;
  }
  uint64_t v23 = OUTLINED_FUNCTION_34_14((uint64_t)v22);
  if (v12)
  {
    uint64_t v23 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v15[19] = 0;
    v15[20] = 0;
  }
  uint64_t v24 = OUTLINED_FUNCTION_33_16(v23);
  if (v17)
  {
    uint64_t v24 = type metadata accessor for PhoneSearchCallHistoryIntent(v24);
  }
  else
  {
    v15[25] = 0;
    v15[26] = 0;
  }
  OUTLINED_FUNCTION_22_33(v24);
  OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v25);
  uint64_t v26 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_198_1(v26);
  if (v27)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v28();
    swift_retain();
    swift_retain();
  }
  uint64_t v29 = OUTLINED_FUNCTION_3_0();
  uint64_t v30 = (void *)OUTLINED_FUNCTION_159_1(v29);
  *uint64_t v30 = v31;
  v30[1] = SearchCallHistoryCATsSimple.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(v16 + 19);
  OUTLINED_FUNCTION_117();
  return v35(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12);
}

BOOL SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_180(v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v9);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  char *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = *(unsigned __int8 *)(v14 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = (__n128 *)OUTLINED_FUNCTION_203_1(v17);
  OUTLINED_FUNCTION_2_81(v18, (__n128)xmmword_472F90);
  if (v16)
  {
    uint64_t v19 = 0;
    v15[7] = 0;
    v15[8] = 0;
  }
  else
  {
    uint64_t v19 = *(void *)(v14 + 16);
  }
  OUTLINED_FUNCTION_147_3(v19);
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v20) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    char v21 = &type metadata for Double;
  }
  uint64_t v22 = OUTLINED_FUNCTION_34_14((uint64_t)v21);
  if (v12)
  {
    uint64_t v22 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v15[19] = 0;
    v15[20] = 0;
  }
  uint64_t v23 = OUTLINED_FUNCTION_33_16(v22);
  if (v16)
  {
    uint64_t v23 = type metadata accessor for PhoneSearchCallHistoryIntent(v23);
  }
  else
  {
    v15[25] = 0;
    v15[26] = 0;
  }
  OUTLINED_FUNCTION_22_33(v23);
  OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v24);
  uint64_t v25 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_198_1(v25);
  if (v26)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v27();
    swift_retain();
    swift_retain();
  }
  uint64_t v28 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_129_3(v28);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v12 = v29;
  v12[1] = SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_117();
  return v35(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v3 = *(unsigned char *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_134_2(v4);
  OUTLINED_FUNCTION_2_81(v5, (__n128)xmmword_46A250);
  if (v3) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v6 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_153(v6);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v7) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = OUTLINED_FUNCTION_20_31((uint64_t)v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v9);
  OUTLINED_FUNCTION_19_2();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_5(v10);
  *uint64_t v11 = v12;
  v11[1] = SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_32_0(49);
  OUTLINED_FUNCTION_20_2();
  return v16(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  char *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

BOOL SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponseMissedCallAsLabels(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.intentHandledResponseMissedCallAsLabels(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATsSimple.intentHandledResponseMissedCallAsLabels(callRecordCount:totalCallRecordCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v3 = *(unsigned char *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_134_2(v4);
  OUTLINED_FUNCTION_2_81(v5, (__n128)xmmword_46A250);
  if (v3) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v6 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_153(v6);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v7) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = OUTLINED_FUNCTION_20_31((uint64_t)v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v9);
  OUTLINED_FUNCTION_19_2();
  uint64_t v10 = swift_task_alloc();
  OUTLINED_FUNCTION_47_4(v10);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v11;
  v0[1] = SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v17(v12, v13, v14, v15, v16, v17, v18, v19);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds and conformance SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.offerToCallBack()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(33);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.OfferToCallBackDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.OfferToCallBackDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.OfferToCallBackDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.offerToCallBackAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(33);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToCallBackDialogIds and conformance SearchCallHistoryCATsSimple.OfferToCallBackDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.offerToContinueReading(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.offerToContinueReading(isLastPage:));
}

uint64_t SearchCallHistoryCATsSimple.offerToContinueReading(isLastPage:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_19_28(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_86_5(v1, v2);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_40_4(v3);
  void *v4 = v5;
  v4[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v6 = OUTLINED_FUNCTION_215_1(40);
  return v7(v6);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToContinueReadingDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToContinueReadingDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToContinueReadingDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToContinueReadingDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.offerToContinueReadingAsLabels(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.offerToContinueReadingAsLabels(isLastPage:));
}

uint64_t SearchCallHistoryCATsSimple.offerToContinueReadingAsLabels(isLastPage:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = OUTLINED_FUNCTION_19_28(v1);
  *(void *)(v2 + 72) = &type metadata for Bool;
  uint64_t v4 = OUTLINED_FUNCTION_62_11(v2, v3);
  OUTLINED_FUNCTION_147(v4);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v5;
  v0[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v6 = OUTLINED_FUNCTION_153_3(40);
  return v7(v6);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.offerToReadMoreCallRecords(isLastWindow:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.offerToReadMoreCallRecords(isLastWindow:));
}

uint64_t SearchCallHistoryCATsSimple.offerToReadMoreCallRecords(isLastWindow:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_146_1(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_86_5(v1, v2);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_40_4(v3);
  void *v4 = v5;
  v4[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  unint64_t v6 = OUTLINED_FUNCTION_215_1(44);
  return v7(v6);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToReadMoreCallRecordsDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToReadMoreCallRecordsDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToReadMoreCallRecordsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::OfferToReadMoreCallRecordsDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.offerToReadMoreCallRecordsAsLabels(isLastWindow:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.offerToReadMoreCallRecordsAsLabels(isLastWindow:));
}

uint64_t SearchCallHistoryCATsSimple.offerToReadMoreCallRecordsAsLabels(isLastWindow:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = OUTLINED_FUNCTION_146_1(v1);
  *(void *)(v2 + 72) = &type metadata for Bool;
  uint64_t v4 = OUTLINED_FUNCTION_62_11(v2, v3);
  OUTLINED_FUNCTION_147(v4);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v5;
  v0[1] = AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v6 = OUTLINED_FUNCTION_153_3(44);
  return v7(v6);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForCallTypes()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForCallTypesAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(36);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForDateCreated()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForDateCreatedAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(38);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForRecipient()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.PromptForRecipientDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.PromptForRecipientDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.PromptForRecipientDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForRecipientAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(36);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForRecipientDialogIds and conformance SearchCallHistoryCATsSimple.PromptForRecipientDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForUnseen()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(33);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.PromptForUnseenDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.PromptForUnseenDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.PromptForUnseenDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.promptForUnseenAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(33);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.PromptForUnseenDialogIds and conformance SearchCallHistoryCATsSimple.PromptForUnseenDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a5;
  *(unsigned char *)(v6 + 65) = a4;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATsSimple.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_104();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_20_3(v15);
  OUTLINED_FUNCTION_3_6(v16, (__n128)xmmword_46DE40);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v18 = v14;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_69_6(v17, v18);
  uint64_t v19 = OUTLINED_FUNCTION_141_0();
  if (v10)
  {
    uint64_t v19 = type metadata accessor for PhoneSearchCallHistoryIntent(v19);
  }
  else
  {
    *(void *)(v12 + 152) = 0;
    *(void *)(v12 + 160) = 0;
  }
  OUTLINED_FUNCTION_121_3(v19);
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_208_1(v20);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  char v21 = (void *)swift_task_alloc();
  *(void *)(v11 + 48) = v21;
  *char v21 = v11;
  v21[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_26_2(v13 + 14);
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

BOOL SearchCallHistoryCATsSimple.ReadCallRecordDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadCallRecordDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.ReadCallRecordDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readCallRecordAsLabels(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a5;
  *(unsigned char *)(v6 + 65) = a4;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readCallRecordAsLabels(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATsSimple.readCallRecordAsLabels(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_104();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_20_3(v14);
  OUTLINED_FUNCTION_3_6(v15, (__n128)xmmword_46DE40);
  if (v13)
  {
    uint64_t v16 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_69_6(v16, v17);
  uint64_t v18 = OUTLINED_FUNCTION_141_0();
  if (v10)
  {
    uint64_t v18 = type metadata accessor for PhoneSearchCallHistoryIntent(v18);
  }
  else
  {
    *(void *)(v12 + 152) = 0;
    *(void *)(v12 + 160) = 0;
  }
  OUTLINED_FUNCTION_121_3(v18);
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_208_1(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  char v20 = (void *)swift_task_alloc();
  *(void *)(v11 + 48) = v20;
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v20 = v21;
  v20[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v27(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadCallRecordDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATsSimple.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v3 = *(unsigned char *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_134_2(v4);
  OUTLINED_FUNCTION_2_81(v5, (__n128)xmmword_46A250);
  if (v3) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v6 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_153(v6);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v7) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = OUTLINED_FUNCTION_20_31((uint64_t)v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v9);
  OUTLINED_FUNCTION_19_2();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_5(v10);
  *uint64_t v11 = v12;
  v11[1] = SearchCallHistoryCATsSimple.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_32_0(51);
  OUTLINED_FUNCTION_20_2();
  return v16(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

BOOL SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readMissedCallHistoryIntroductionAsLabels(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readMissedCallHistoryIntroductionAsLabels(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATsSimple.readMissedCallHistoryIntroductionAsLabels(callRecordCount:totalCallRecordCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v3 = *(unsigned char *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_134_2(v4);
  OUTLINED_FUNCTION_2_81(v5, (__n128)xmmword_46A250);
  if (v3) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v6 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_153(v6);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v7) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = OUTLINED_FUNCTION_20_31((uint64_t)v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v9);
  OUTLINED_FUNCTION_19_2();
  uint64_t v10 = swift_task_alloc();
  OUTLINED_FUNCTION_47_4(v10);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v11;
  v0[1] = SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v17(v12, v13, v14, v15, v16, v17, v18, v19);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds);
  }
  return result;
}

#error "28E120: call analysis failed (funcsize=9)"

uint64_t SearchCallHistoryCATsSimple.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  OUTLINED_FUNCTION_48();
  char v5 = *(unsigned char *)(v1 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_136_1();
  *(void *)(v1 + 72) = v6;
  OUTLINED_FUNCTION_107_2(v6, (__n128)xmmword_46DE50);
  if (v5)
  {
    uint64_t v7 = 0;
    v6[3].n128_u64[1] = 0;
    v6[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_118_3(v7);
  v6[5].n128_u64[1] = 0x80000000004972B0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  v6[6].n128_u64[0] = v3;
  v6[7].n128_u64[1] = v8;
  v6[8].n128_u64[0] = v4;
  v6[8].n128_u64[1] = 0x80000000004972D0;
  v6[9].n128_u64[0] = v2;
  uint64_t v9 = OUTLINED_FUNCTION_214_1(v8, (uint64_t)"callRecordsItem3");
  uint64_t v10 = OUTLINED_FUNCTION_118_2(v9, (uint64_t)"callRecordsItem4");
  if (v0)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    v6[18].n128_u64[1] = 0;
    v6[19].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_148_1(v10);
  v6[20].n128_u64[1] = 0x8000000000497270;
  v6[21].n128_u8[0] = v11;
  v6[22].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[23].n128_u64[0] = v4 + 2;
  OUTLINED_FUNCTION_207_0(v12);
  OUTLINED_FUNCTION_213_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = swift_task_alloc();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_159_1(v13);
  *uint64_t v14 = v15;
  v14[1] = SearchCallHistoryCATsSimple.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:);
  uint64_t v16 = OUTLINED_FUNCTION_11_6(v4 + 25);
  return v18(v16);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadMultipleCallRecordsDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadMultipleCallRecordsDialogIds_optional)StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds.rawValue.getter()
{
  return 0x61696423316C6C61;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadMultipleCallRecordsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadMultipleCallRecordsDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds()
{
  OUTLINED_FUNCTION_32();
  uint64_t result = SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds.rawValue.getter();
  *uint64_t v0 = 0x61696423316C6C61;
  v0[1] = v2;
  return result;
}

#error "28E530: call analysis failed (funcsize=9)"

uint64_t SearchCallHistoryCATsSimple.readMultipleCallRecordsAsLabels(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  OUTLINED_FUNCTION_48();
  char v5 = *(unsigned char *)(v1 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_136_1();
  *(void *)(v1 + 72) = v6;
  OUTLINED_FUNCTION_107_2(v6, (__n128)xmmword_46DE50);
  if (v5)
  {
    uint64_t v7 = 0;
    v6[3].n128_u64[1] = 0;
    v6[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_118_3(v7);
  v6[5].n128_u64[1] = 0x80000000004972B0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  v6[6].n128_u64[0] = v3;
  v6[7].n128_u64[1] = v8;
  v6[8].n128_u64[0] = v4;
  v6[8].n128_u64[1] = 0x80000000004972D0;
  v6[9].n128_u64[0] = v2;
  uint64_t v9 = OUTLINED_FUNCTION_214_1(v8, (uint64_t)"callRecordsItem3");
  uint64_t v10 = OUTLINED_FUNCTION_118_2(v9, (uint64_t)"callRecordsItem4");
  if (v0)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    v6[18].n128_u64[1] = 0;
    v6[19].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_148_1(v10);
  v6[20].n128_u64[1] = 0x8000000000497270;
  v6[21].n128_u8[0] = v11;
  v6[22].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[23].n128_u64[0] = v4 + 2;
  OUTLINED_FUNCTION_207_0(v12);
  OUTLINED_FUNCTION_213_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = swift_task_alloc();
  OUTLINED_FUNCTION_129_3(v13);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v14;
  v0[1] = SearchCallHistoryCATsSimple.readMultipleCallRecordsAsLabels(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:);
  OUTLINED_FUNCTION_24_10();
  return v16();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds and conformance SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, unsigned __int8 a10, unsigned __int8 a11)
{
  OUTLINED_FUNCTION_1_0();
  *(_WORD *)(v11 + 100) = __PAIR16__(a11, a10);
  OUTLINED_FUNCTION_84_6(v12, v13, v14, v15, v16, v17, v18, v19, a9);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v20);
  *(void *)(v11 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v21, v22, v23);
}

uint64_t SearchCallHistoryCATsSimple.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v17 = *(void *)(v14 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = (__n128 *)OUTLINED_FUNCTION_203_1(v18);
  uint64_t v20 = OUTLINED_FUNCTION_8_62(v19, (__n128)xmmword_4771A0);
  if (v17)
  {
    uint64_t v20 = type metadata accessor for PhoneCallRecord(v20);
  }
  else
  {
    v15[7] = 0;
    v15[8] = 0;
  }
  uint64_t v21 = OUTLINED_FUNCTION_21_30(v20);
  if (v12)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    v15[13] = 0;
    v15[14] = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v22);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v23);
  uint64_t v24 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v24);
  if (v25)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v26();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_16_38();
  if (v27) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v28 = *(void *)(v14 + 40);
  }
  OUTLINED_FUNCTION_77_5(v28);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v29) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    uint64_t v30 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v30);
  OUTLINED_FUNCTION_62_10((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v31 = OUTLINED_FUNCTION_3_0();
  uint64_t v32 = (void *)OUTLINED_FUNCTION_159_1(v31);
  void *v32 = v33;
  v32[1] = SearchCallHistoryCATsSimple.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(v16 + 30);
  OUTLINED_FUNCTION_117();
  return v37(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewOrSavedVoiceMailRecordDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewOrSavedVoiceMailRecordDialogIds_optional)StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewOrSavedVoiceMailRecordDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewOrSavedVoiceMailRecordDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readNewOrSavedVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, unsigned __int8 a10, unsigned __int8 a11)
{
  OUTLINED_FUNCTION_1_0();
  *(_WORD *)(v11 + 100) = __PAIR16__(a11, a10);
  OUTLINED_FUNCTION_84_6(v12, v13, v14, v15, v16, v17, v18, v19, a9);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v20);
  *(void *)(v11 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v21, v22, v23);
}

uint64_t SearchCallHistoryCATsSimple.readNewOrSavedVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = *(void *)(v14 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = swift_allocObject();
  char v18 = (__n128 *)OUTLINED_FUNCTION_203_1(v17);
  uint64_t v19 = OUTLINED_FUNCTION_8_62(v18, (__n128)xmmword_4771A0);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for PhoneCallRecord(v19);
  }
  else
  {
    v15[7] = 0;
    v15[8] = 0;
  }
  uint64_t v20 = OUTLINED_FUNCTION_21_30(v19);
  if (v12)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v20);
  }
  else
  {
    v15[13] = 0;
    v15[14] = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v21);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v22);
  uint64_t v23 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v23);
  if (v24)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v25();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_16_38();
  if (v26) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v27 = *(void *)(v14 + 40);
  }
  OUTLINED_FUNCTION_77_5(v27);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v28) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    char v29 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v29);
  OUTLINED_FUNCTION_62_10((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_129_3(v30);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v12 = v31;
  v12[1] = SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_117();
  return v37(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_84_6(v10, v11, v12, v13, v14, v15, v16, v17, a9);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v18);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v19, v20, v21);
}

uint64_t SearchCallHistoryCATsSimple.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v17 = v14[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_217_0();
  uint64_t v19 = (__n128 *)OUTLINED_FUNCTION_203_1(v18);
  uint64_t v20 = OUTLINED_FUNCTION_8_62(v19, (__n128)xmmword_474610);
  if (v17)
  {
    uint64_t v20 = type metadata accessor for PhoneCallRecord(v20);
  }
  else
  {
    *(void *)(v15 + 56) = 0;
    *(void *)(v15 + 64) = 0;
  }
  uint64_t v21 = OUTLINED_FUNCTION_21_30(v20);
  if (v12)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    *(void *)(v15 + 104) = 0;
    *(void *)(v15 + 112) = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v22);
  *(unsigned char *)(v15 + 144) = v23;
  *(void *)(v15 + 168) = &type metadata for Bool;
  *(void *)(v15 + 176) = v16 + 1;
  OUTLINED_FUNCTION_187_1();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v24);
  uint64_t v25 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v25);
  if (v26)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v27();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_16_38();
  if (v28) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v29 = v14[5];
  }
  OUTLINED_FUNCTION_77_5(v29);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v30)
  {
    uint64_t v32 = 0;
    uint64_t v31 = 0;
    *(void *)(v15 + 344) = 0;
    *(void *)(v15 + 352) = 0;
  }
  else
  {
    uint64_t v31 = v14[6];
    uint64_t v32 = &type metadata for Double;
  }
  *(void *)(v15 + 360) = v32;
  *(void *)(v15 + 336) = v31;
  uint64_t v33 = OUTLINED_FUNCTION_3_0();
  uint64_t v34 = (void *)OUTLINED_FUNCTION_159_1(v33);
  *uint64_t v34 = v35;
  v34[1] = SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(v16 + 23);
  OUTLINED_FUNCTION_117();
  return v39(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewVoiceMailRecordDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewVoiceMailRecordDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewVoiceMailRecordDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadNewVoiceMailRecordDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readNewVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_84_6(v10, v11, v12, v13, v14, v15, v16, v17, a9);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v18);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v19, v20, v21);
}

uint64_t SearchCallHistoryCATsSimple.readNewVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v17 = v14[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_217_0();
  uint64_t v19 = (__n128 *)OUTLINED_FUNCTION_203_1(v18);
  uint64_t v20 = OUTLINED_FUNCTION_8_62(v19, (__n128)xmmword_474610);
  if (v17)
  {
    uint64_t v20 = type metadata accessor for PhoneCallRecord(v20);
  }
  else
  {
    *(void *)(v15 + 56) = 0;
    *(void *)(v15 + 64) = 0;
  }
  uint64_t v21 = OUTLINED_FUNCTION_21_30(v20);
  if (v12)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    *(void *)(v15 + 104) = 0;
    *(void *)(v15 + 112) = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v22);
  *(unsigned char *)(v15 + 144) = v23;
  *(void *)(v15 + 168) = &type metadata for Bool;
  *(void *)(v15 + 176) = v16 + 1;
  OUTLINED_FUNCTION_187_1();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v24);
  uint64_t v25 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v25);
  if (v26)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v27();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_16_38();
  if (v28) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v29 = v14[5];
  }
  OUTLINED_FUNCTION_77_5(v29);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v30)
  {
    uint64_t v32 = 0;
    uint64_t v31 = 0;
    *(void *)(v15 + 344) = 0;
    *(void *)(v15 + 352) = 0;
  }
  else
  {
    uint64_t v31 = v14[6];
    uint64_t v32 = &type metadata for Double;
  }
  *(void *)(v15 + 360) = v32;
  *(void *)(v15 + 336) = v31;
  uint64_t v33 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_129_3(v33);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds();
  OUTLINED_FUNCTION_25_1();
  *char v12 = v34;
  v12[1] = SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_117();
  return v40(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readPlayVoiceMailPrePrompt()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(44);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readPlayVoiceMailPrePromptAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(44);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds and conformance SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v10 + 100) = a10;
  OUTLINED_FUNCTION_84_6(v11, v12, v13, v14, v15, v16, v17, v18, a9);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v19);
  *(void *)(v10 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v20, v21, v22);
}

uint64_t SearchCallHistoryCATsSimple.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v17 = *(void *)(v14 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_136_1();
  uint64_t v19 = (__n128 *)OUTLINED_FUNCTION_203_1(v18);
  uint64_t v20 = OUTLINED_FUNCTION_8_62(v19, (__n128)xmmword_46DE50);
  if (v17)
  {
    uint64_t v20 = type metadata accessor for PhoneCallRecord(v20);
  }
  else
  {
    v15[7] = 0;
    v15[8] = 0;
  }
  uint64_t v21 = OUTLINED_FUNCTION_21_30(v20);
  if (v12)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    v15[13] = 0;
    v15[14] = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v22);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v23);
  uint64_t v24 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v24);
  if (v25)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v26();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_16_38();
  if (v27) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v28 = *(void *)(v14 + 40);
  }
  OUTLINED_FUNCTION_77_5(v28);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v29) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    char v30 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v30);
  OUTLINED_FUNCTION_216_1((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v31 = OUTLINED_FUNCTION_3_0();
  uint64_t v32 = (void *)OUTLINED_FUNCTION_159_1(v31);
  void *v32 = v33;
  v32[1] = SearchCallHistoryCATsSimple.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(v16 + 25);
  OUTLINED_FUNCTION_117();
  return v37(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSavedVoiceMailRecordDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSavedVoiceMailRecordDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSavedVoiceMailRecordDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSavedVoiceMailRecordDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSavedVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v10 + 100) = a10;
  OUTLINED_FUNCTION_84_6(v11, v12, v13, v14, v15, v16, v17, v18, a9);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v19);
  *(void *)(v10 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v20, v21, v22);
}

uint64_t SearchCallHistoryCATsSimple.readSavedVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = *(void *)(v14 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = OUTLINED_FUNCTION_136_1();
  uint64_t v18 = (__n128 *)OUTLINED_FUNCTION_203_1(v17);
  uint64_t v19 = OUTLINED_FUNCTION_8_62(v18, (__n128)xmmword_46DE50);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for PhoneCallRecord(v19);
  }
  else
  {
    v15[7] = 0;
    v15[8] = 0;
  }
  uint64_t v20 = OUTLINED_FUNCTION_21_30(v19);
  if (v12)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v20);
  }
  else
  {
    v15[13] = 0;
    v15[14] = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v21);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v22);
  uint64_t v23 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v23);
  if (v24)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v25();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_16_38();
  if (v26) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v27 = *(void *)(v14 + 40);
  }
  OUTLINED_FUNCTION_77_5(v27);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v28) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    char v29 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v29);
  OUTLINED_FUNCTION_216_1((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_129_3(v30);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v12 = v31;
  v12[1] = SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_117();
  return v37(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_136_3(v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  *(void *)(v0 + 56) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(void);
  void *v15;
  uint64_t v16;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;

  OUTLINED_FUNCTION_40_0();
  uint64_t v5 = *(unsigned __int8 *)(v2 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v6 = (__n128 *)OUTLINED_FUNCTION_104();
  *(void *)(v2 + 64) = v6;
  OUTLINED_FUNCTION_2_81(v6, (__n128)xmmword_46DE40);
  if (v5)
  {
    uint64_t v7 = 0;
    v6[3].n128_u64[1] = 0;
    v6[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 16);
  }
  OUTLINED_FUNCTION_156_2(v7);
  v6[5].n128_u64[1] = 0x8000000000497250;
  if (v8)
  {
    uint64_t v9 = 0;
    v6[6].n128_u64[1] = 0;
    v6[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v9 = &type metadata for Double;
  }
  uint64_t v10 = OUTLINED_FUNCTION_91_7((uint64_t)v9);
  if (v5)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    v6[9].n128_u64[1] = 0;
    v6[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_60_8(v10);
  OUTLINED_FUNCTION_121_1();
  outlined init with copy of SpeakableString?(v11, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_149_3(v12);
  if (v13)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v6[16].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_59();
    v14();
    swift_retain();
  }
  uint64_t v15 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v2 + 72) = v15;
  void *v15 = v2;
  v15[1] = SearchCallHistoryCATsSimple.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:);
  uint64_t v16 = OUTLINED_FUNCTION_11_6(v4 + 31);
  return v18(v16);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

BOOL SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSearchCallHistoryIntroductionAsLabels(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_136_3(v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  *(void *)(v0 + 56) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(void);
  void *v14;
  uint64_t v15;
  uint64_t (*v17)(void);
  uint64_t v18;

  OUTLINED_FUNCTION_40_0();
  char v4 = *(unsigned __int8 *)(v2 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_104();
  *(void *)(v2 + 64) = v5;
  OUTLINED_FUNCTION_2_81(v5, (__n128)xmmword_46DE40);
  if (v4)
  {
    char v6 = 0;
    v5[3].n128_u64[1] = 0;
    v5[4].n128_u64[0] = 0;
  }
  else
  {
    char v6 = *(void *)(v2 + 16);
  }
  OUTLINED_FUNCTION_156_2(v6);
  v5[5].n128_u64[1] = 0x8000000000497250;
  if (v7)
  {
    uint64_t v8 = 0;
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = OUTLINED_FUNCTION_91_7((uint64_t)v8);
  if (v4)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_60_8(v9);
  OUTLINED_FUNCTION_121_1();
  outlined init with copy of SpeakableString?(v10, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_149_3(v11);
  if (v12)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v5[16].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_59();
    v13();
    swift_retain();
  }
  uint64_t v14 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v2 + 72) = v14;
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v14 = v15;
  v14[1] = SearchCallHistoryCATsSimple.readSearchCallHistoryIntroductionAsLabels(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_24_10();
  return v17();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a4;
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATsSimple.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_33_1();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_20_3(v15);
  OUTLINED_FUNCTION_3_6(v16, (__n128)xmmword_469650);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v18 = v14;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v19 = OUTLINED_FUNCTION_35_22(v17, v18);
  if (v10)
  {
    uint64_t v19 = type metadata accessor for PhoneSearchCallHistoryIntent(v19);
  }
  else
  {
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  OUTLINED_FUNCTION_43_16(v19);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v20);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v11 + 48) = v21;
  *uint64_t v21 = v11;
  v21[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_26_2(v13 + 20);
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

BOOL SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSingleCallRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a4;
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readSingleCallRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATsSimple.readSingleCallRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_33_1();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_20_3(v14);
  OUTLINED_FUNCTION_3_6(v15, (__n128)xmmword_469650);
  if (v13)
  {
    uint64_t v16 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v18 = OUTLINED_FUNCTION_35_22(v16, v17);
  if (v10)
  {
    uint64_t v18 = type metadata accessor for PhoneSearchCallHistoryIntent(v18);
  }
  else
  {
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  OUTLINED_FUNCTION_43_16(v18);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  char v20 = (void *)swift_task_alloc();
  *(void *)(v11 + 48) = v20;
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v20 = v21;
  v20[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v27(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a4;
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATsSimple.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v14 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_33_1();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_20_3(v15);
  OUTLINED_FUNCTION_3_6(v16, (__n128)xmmword_469650);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v18 = v14;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v19 = OUTLINED_FUNCTION_35_22(v17, v18);
  if (v10)
  {
    uint64_t v19 = type metadata accessor for PhoneSearchCallHistoryIntent(v19);
  }
  else
  {
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  OUTLINED_FUNCTION_43_16(v19);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v20);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v11 + 48) = v21;
  *uint64_t v21 = v11;
  v21[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_26_2(v13 + 25);
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSingleVoiceMailRecordDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSingleVoiceMailRecordDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSingleVoiceMailRecordDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ReadSingleVoiceMailRecordDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_32();
  unint64_t result = SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = 0xE700000000000000;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readSingleVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a4;
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readSingleVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATsSimple.readSingleVoiceMailRecordAsLabels(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void *)(v11 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_33_1();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_20_3(v14);
  OUTLINED_FUNCTION_3_6(v15, (__n128)xmmword_469650);
  if (v13)
  {
    uint64_t v16 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v18 = OUTLINED_FUNCTION_35_22(v16, v17);
  if (v10)
  {
    uint64_t v18 = type metadata accessor for PhoneSearchCallHistoryIntent(v18);
  }
  else
  {
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  OUTLINED_FUNCTION_43_16(v18);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  char v20 = (void *)swift_task_alloc();
  *(void *)(v11 + 48) = v20;
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds();
  OUTLINED_FUNCTION_25_1();
  void *v20 = v21;
  v20[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_26_8();
  return v27(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds and conformance SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:));
}

uint64_t SearchCallHistoryCATsSimple.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v3 = *(unsigned char *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = OUTLINED_FUNCTION_134_2(v4);
  *(_OWORD *)(v5 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_10_39(v5, 0x726F63655277656ELL);
  if (v3) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v6 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_153(v6);
  OUTLINED_FUNCTION_49_0((uint64_t)"savedRecordsCount");
  if (v7) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = OUTLINED_FUNCTION_20_31((uint64_t)v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v9);
  OUTLINED_FUNCTION_19_2();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_5(v10);
  *uint64_t v11 = v12;
  v11[1] = SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_32_0(50);
  OUTLINED_FUNCTION_20_2();
  return v16(v13, v14, v15, v16, v17, v18, v19, v20);
}

BOOL SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.readVoiceMailHistoryIntroductionAsLabels(newRecordsCount:savedRecordsCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.readVoiceMailHistoryIntroductionAsLabels(newRecordsCount:savedRecordsCount:intent:));
}

uint64_t SearchCallHistoryCATsSimple.readVoiceMailHistoryIntroductionAsLabels(newRecordsCount:savedRecordsCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v3 = *(unsigned char *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = OUTLINED_FUNCTION_134_2(v4);
  *(_OWORD *)(v5 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_10_39(v5, 0x726F63655277656ELL);
  if (v3) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v6 = *(void *)(v1 + 16);
  }
  OUTLINED_FUNCTION_153(v6);
  OUTLINED_FUNCTION_49_0((uint64_t)"savedRecordsCount");
  if (v7) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = OUTLINED_FUNCTION_20_31((uint64_t)v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v9);
  OUTLINED_FUNCTION_19_2();
  uint64_t v10 = swift_task_alloc();
  OUTLINED_FUNCTION_47_4(v10);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v11;
  v0[1] = SearchCallHistoryCATsSimple.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_20_2();
  return v17(v12, v13, v14, v15, v16, v17, v18, v19);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds and conformance SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.repeatVoicemailPause()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

uint64_t SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds.rawValue.getter()
{
  return 0x6573756170;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds(void *a1@<X8>)
{
  *a1 = 0x6573756170;
  a1[1] = 0xE500000000000000;
}

uint64_t SearchCallHistoryCATsSimple.repeatVoicemailPauseAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(38);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds and conformance SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v9 + 99) = a9;
  OUTLINED_FUNCTION_180(v10, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v18);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v19, v20, v21);
}

uint64_t SearchCallHistoryCATsSimple.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v17 = *(unsigned __int8 *)(v14 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_217_0();
  uint64_t v19 = (__n128 *)OUTLINED_FUNCTION_203_1(v18);
  OUTLINED_FUNCTION_2_81(v19, (__n128)xmmword_474610);
  if (v17)
  {
    uint64_t v20 = 0;
    v15[7] = 0;
    v15[8] = 0;
  }
  else
  {
    uint64_t v20 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_132_2((uint64_t)v20);
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v21) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    uint64_t v22 = &type metadata for Double;
  }
  uint64_t v23 = OUTLINED_FUNCTION_34_14((uint64_t)v22);
  if (v12)
  {
    uint64_t v23 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v15[19] = 0;
    v15[20] = 0;
  }
  uint64_t v24 = OUTLINED_FUNCTION_33_16(v23);
  if (v17)
  {
    uint64_t v24 = type metadata accessor for PhoneSearchCallHistoryIntent(v24);
  }
  else
  {
    v15[25] = 0;
    v15[26] = 0;
  }
  OUTLINED_FUNCTION_22_33(v24);
  OUTLINED_FUNCTION_129_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v25);
  uint64_t v26 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_198_1(v26);
  if (v27)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v28();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_131_2((uint64_t)"isShowingMissedCall");
  uint64_t v29 = OUTLINED_FUNCTION_3_0();
  uint64_t v30 = (void *)OUTLINED_FUNCTION_159_1(v29);
  *uint64_t v30 = v31;
  v30[1] = SearchCallHistoryCATsSimple.intentHandledResponseAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(v16 + 19);
  OUTLINED_FUNCTION_117();
  return v35(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ShowCallHistoryIntroDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ShowCallHistoryIntroDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

unint64_t SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ShowCallHistoryIntroDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::ShowCallHistoryIntroDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  unint64_t result = SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.showCallHistoryIntroAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v9 + 99) = a9;
  OUTLINED_FUNCTION_180(v10, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v18);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v19, v20, v21);
}

uint64_t SearchCallHistoryCATsSimple.showCallHistoryIntroAsLabels(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = *(unsigned __int8 *)(v14 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = OUTLINED_FUNCTION_217_0();
  uint64_t v18 = (__n128 *)OUTLINED_FUNCTION_203_1(v17);
  OUTLINED_FUNCTION_2_81(v18, (__n128)xmmword_474610);
  if (v16)
  {
    uint64_t v19 = 0;
    v15[7] = 0;
    v15[8] = 0;
  }
  else
  {
    uint64_t v19 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_132_2((uint64_t)v19);
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v20) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    uint64_t v21 = &type metadata for Double;
  }
  uint64_t v22 = OUTLINED_FUNCTION_34_14((uint64_t)v21);
  if (v12)
  {
    uint64_t v22 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v15[19] = 0;
    v15[20] = 0;
  }
  uint64_t v23 = OUTLINED_FUNCTION_33_16(v22);
  if (v16)
  {
    uint64_t v23 = type metadata accessor for PhoneSearchCallHistoryIntent(v23);
  }
  else
  {
    v15[25] = 0;
    v15[26] = 0;
  }
  OUTLINED_FUNCTION_22_33(v23);
  OUTLINED_FUNCTION_129_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v24);
  uint64_t v25 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_198_1(v25);
  if (v26)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_41_14();
    OUTLINED_FUNCTION_29_21();
    v27();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_131_2((uint64_t)"isShowingMissedCall");
  uint64_t v28 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_129_3(v28);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v12 = v29;
  v12[1] = SearchCallHistoryCATsSimple.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_117();
  return v35(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds and conformance SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedCallTypes()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedCallTypesAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.unsupportedCallCapability();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(38);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedDateCreated()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(40);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedDateCreatedAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(40);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedRecipient()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedRecipientAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(38);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)(char a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = v4;
  *(unsigned char *)(v5 + 58) = a3;
  *(unsigned char *)(v5 + 57) = a2;
  *(unsigned char *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:));
}

uint64_t SearchCallHistoryCATsSimple.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_130_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_33_1();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_19_1(v12);
  uint64_t v14 = OUTLINED_FUNCTION_35_20(v13, (__n128)xmmword_469650);
  uint64_t v15 = OUTLINED_FUNCTION_50_11((uint64_t)v14, (uint64_t)&type metadata for Bool);
  uint64_t v16 = OUTLINED_FUNCTION_258(v15, (uint64_t)"contactToConfirm");
  if (v10)
  {
    uint64_t v16 = type metadata accessor for DialogPerson();
  }
  else
  {
    v11[25] = 0;
    v11[26] = 0;
  }
  v11[24] = v10;
  v11[27] = v16;
  OUTLINED_FUNCTION_9_43();
  uint64_t v17 = swift_task_alloc();
  uint64_t v18 = (void *)OUTLINED_FUNCTION_43_12(v17);
  *uint64_t v18 = v19;
  v18[1] = SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:);
  OUTLINED_FUNCTION_26_8();
  return v23(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
}

BOOL SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedSearchParametersAsLabels(isVoicemail:isMissed:isLatest:contactToConfirm:)(char a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = v4;
  *(unsigned char *)(v5 + 58) = a3;
  *(unsigned char *)(v5 + 57) = a2;
  *(unsigned char *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.unsupportedSearchParametersAsLabels(isVoicemail:isMissed:isLatest:contactToConfirm:));
}

uint64_t SearchCallHistoryCATsSimple.unsupportedSearchParametersAsLabels(isVoicemail:isMissed:isLatest:contactToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_130_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_33_1();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_19_1(v12);
  uint64_t v14 = OUTLINED_FUNCTION_35_20(v13, (__n128)xmmword_469650);
  uint64_t v15 = OUTLINED_FUNCTION_50_11((uint64_t)v14, (uint64_t)&type metadata for Bool);
  uint64_t v16 = OUTLINED_FUNCTION_258(v15, (uint64_t)"contactToConfirm");
  if (v10)
  {
    uint64_t v16 = type metadata accessor for DialogPerson();
  }
  else
  {
    v11[25] = 0;
    v11[26] = 0;
  }
  v11[24] = v10;
  v11[27] = v16;
  OUTLINED_FUNCTION_9_43();
  uint64_t v17 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v17);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v10 = v18;
  v10[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_26_8();
  return v24(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedUnseen(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.unsupportedUnseen(intent:));
}

uint64_t SearchCallHistoryCATsSimple.unsupportedUnseen(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(35);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::UnsupportedUnseenDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::UnsupportedUnseenDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::UnsupportedUnseenDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::UnsupportedUnseenDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.unsupportedUnseenAsLabels(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.unsupportedUnseenAsLabels(intent:));
}

uint64_t SearchCallHistoryCATsSimple.unsupportedUnseenAsLabels(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(35);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds and conformance SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.visualCatText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(31);
  return v4(v3);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VisualCatTextDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.VisualCatTextDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.VisualCatTextDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VisualCatTextDialogIds_optional)StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t SearchCallHistoryCATsSimple.VisualCatTextDialogIds.rawValue.getter(char a1)
{
  uint64_t result = 28494;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x73746E65636552;
      break;
    case 2:
      uint64_t result = 0x69616D6563696F56;
      break;
    case 3:
      uint64_t result = 7562585;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VisualCatTextDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VisualCatTextDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.VisualCatTextDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = SearchCallHistoryCATsSimple.VisualCatTextDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.visualCatTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(31);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VisualCatTextDialogIds and conformance SearchCallHistoryCATsSimple.VisualCatTextDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)(char a1, char a2)
{
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 49) = a2;
  *(unsigned char *)(v3 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:));
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)()
{
  OUTLINED_FUNCTION_16_1();
  char v1 = *(unsigned char *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_36_2();
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467720;
  uint64_t v3 = OUTLINED_FUNCTION_19_28(v2);
  *(unsigned char *)(v3 + 48) = v1;
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(void *)(v3 + 80) = 0xD000000000000020;
  OUTLINED_FUNCTION_209_0(v3, (uint64_t)&type metadata for Bool);
  uint64_t v4 = OUTLINED_FUNCTION_9_0();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_4(v4);
  void *v5 = v6;
  v5[1] = AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:);
  uint64_t v7 = OUTLINED_FUNCTION_11_6(0xD000000000000031);
  return v9(v7);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToContinueReadingDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToContinueReadingDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToContinueReadingDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToContinueReadingDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToContinueReadingAsLabels(isLastPage:isLeadingSavedVoiceMailPrePrompt:)(char a1, char a2)
{
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 49) = a2;
  *(unsigned char *)(v3 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.voiceMailOfferToContinueReadingAsLabels(isLastPage:isLeadingSavedVoiceMailPrePrompt:));
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToContinueReadingAsLabels(isLastPage:isLeadingSavedVoiceMailPrePrompt:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v9 = v1;
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = (void *)*(unsigned __int8 *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  *(void *)(v0 + 24) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_467720;
  uint64_t v4 = OUTLINED_FUNCTION_19_28(v3);
  *(unsigned char *)(v4 + 48) = (_BYTE)v2;
  *(void *)(v4 + 72) = &type metadata for Bool;
  *(void *)(v4 + 80) = 0xD000000000000020;
  OUTLINED_FUNCTION_209_0(v4, (uint64_t)&type metadata for Bool);
  uint64_t v5 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_147(v5);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v2 = v6;
  v2[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_24_10();
  return v8();
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToFollowUpAction(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.voiceMailOfferToFollowUpAction(isLastPage:));
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToFollowUpAction(isLastPage:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_19_28(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_86_5(v1, v2);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_40_4(v3);
  void *v4 = v5;
  v4[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v6 = OUTLINED_FUNCTION_215_1(48);
  return v7(v6);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToFollowUpActionDialogIds_optional __swiftcall SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToFollowUpActionDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToFollowUpActionDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATsSimple::VoiceMailOfferToFollowUpActionDialogIds_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToFollowUpActionAsLabels(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.voiceMailOfferToFollowUpActionAsLabels(isLastPage:));
}

uint64_t SearchCallHistoryCATsSimple.voiceMailOfferToFollowUpActionAsLabels(isLastPage:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = OUTLINED_FUNCTION_19_28(v1);
  *(void *)(v2 + 72) = &type metadata for Bool;
  uint64_t v4 = OUTLINED_FUNCTION_62_11(v2, v3);
  OUTLINED_FUNCTION_147(v4);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v5;
  v0[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v6 = OUTLINED_FUNCTION_153_3(48);
  return v7(v6);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.voiceMailPromptToPlay()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(39);
  return v4(v3);
}

BOOL SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.voiceMailPromptToPlayAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(39);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds and conformance SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)(char a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 58) = a4;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = v4;
  *(unsigned char *)(v5 + 57) = a2;
  *(unsigned char *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:));
}

uint64_t SearchCallHistoryCATsSimple.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v17 = v2;
  OUTLINED_FUNCTION_18_3();
  char v3 = *(unsigned char *)(v1 + 58);
  char v4 = *(unsigned char *)(v1 + 57);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_24_3();
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_147(v5);
  uint64_t v7 = OUTLINED_FUNCTION_30_18(v6, (__n128)xmmword_46A250);
  uint64_t v8 = OUTLINED_FUNCTION_90_6((uint64_t)v7, (uint64_t)&type metadata for Bool);
  *(unsigned char *)(v8 + 96) = v4;
  OUTLINED_FUNCTION_38_1((void *)v8, v9);
  if (v3)
  {
    char v11 = 0;
    uint64_t v10 = 0;
    v0[19] = 0;
    v0[20] = 0;
  }
  else
  {
    uint64_t v10 = *(void *)(v1 + 16);
    char v11 = &type metadata for Double;
  }
  v0[21] = v11;
  v0[18] = v10;
  uint64_t v12 = OUTLINED_FUNCTION_3_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_43_12(v12);
  *uint64_t v13 = v14;
  v13[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_10_16();
  return v16(0xD000000000000036);
}

BOOL SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t SearchCallHistoryCATsSimple.windowIntroForReadingMultipleRecordsAsLabels(isFirstWindow:isLastWindow:windowSize:)(char a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 58) = a4;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = v4;
  *(unsigned char *)(v5 + 57) = a2;
  *(unsigned char *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATsSimple.windowIntroForReadingMultipleRecordsAsLabels(isFirstWindow:isLastWindow:windowSize:));
}

uint64_t SearchCallHistoryCATsSimple.windowIntroForReadingMultipleRecordsAsLabels(isFirstWindow:isLastWindow:windowSize:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v14 = v1;
  OUTLINED_FUNCTION_18_3();
  char v2 = *(unsigned char *)(v0 + 58);
  char v3 = (void *)*(unsigned __int8 *)(v0 + 57);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = OUTLINED_FUNCTION_30_18(v4, (__n128)xmmword_46A250);
  uint64_t v6 = OUTLINED_FUNCTION_90_6((uint64_t)v5, (uint64_t)&type metadata for Bool);
  *(unsigned char *)(v6 + 96) = (_BYTE)v3;
  OUTLINED_FUNCTION_38_1((void *)v6, v7);
  if (v2)
  {
    uint64_t v9 = 0;
    unint64_t v8 = 0;
    v4[9].n128_u64[1] = 0;
    v4[10].n128_u64[0] = 0;
  }
  else
  {
    unint64_t v8 = *(void *)(v0 + 16);
    uint64_t v9 = &type metadata for Double;
  }
  v4[10].n128_u64[1] = (unint64_t)v9;
  v4[9].n128_u64[0] = v8;
  uint64_t v10 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_44(v10);
  lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *char v3 = v11;
  v3[1] = SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:);
  OUTLINED_FUNCTION_24_10();
  return v13(0xD000000000000036);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds and conformance SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds);
  }
  return result;
}

uint64_t SearchCallHistoryCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return SearchCallHistoryCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t SearchCallHistoryCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v11 = OUTLINED_FUNCTION_11_0(v10);
  __chkstk_darwin(v11);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v13 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v13;
}

uint64_t SearchCallHistoryCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t SearchCallHistoryCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATsSimple.Properties and conformance SearchCallHistoryCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.Properties and conformance SearchCallHistoryCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.Properties and conformance SearchCallHistoryCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATsSimple.Properties and conformance SearchCallHistoryCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for SearchCallHistoryCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryCATsSimple;
  if (!type metadata singleton initialization cache for SearchCallHistoryCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for SearchCallHistoryCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for SearchCallHistoryCATsSimple()
{
  return type metadata accessor for SearchCallHistoryCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    *uint64_t result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x293CD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 39;
        break;
    }
  }
  return result;
}

void type metadata accessor for SearchCallHistoryCATsSimple.Properties()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.BuildCallRecordDisplayNameDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ConfirmRecipientDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ConfirmUnseenDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ErrorWithCodeDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.IntentHandledResponseDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.IntentHandledResponseMissedCallDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.OfferToCallBackDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.OfferToContinueReadingDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.OfferToReadMoreCallRecordsDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.PromptForCallTypesDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.PromptForDateCreatedDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.PromptForRecipientDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.PromptForUnseenDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadCallRecordDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadMissedCallHistoryIntroductionDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadNewOrSavedVoiceMailRecordDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadNewVoiceMailRecordDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadPlayVoiceMailPrePromptDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadSavedVoiceMailRecordDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadSearchCallHistoryIntroductionDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadSingleCallRecordDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ReadVoiceMailHistoryIntroductionDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.RepeatVoicemailPauseDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.UnsupportedCallTypesDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.UnsupportedDateCreatedDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.UnsupportedRecipientDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.UnsupportedSearchParametersDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.UnsupportedUnseenDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryCATsSimple.ReadMultipleCallRecordsDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_219((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_216((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x293F74);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_217((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_218(result, a2 + 3);
        break;
    }
  }
  return result;
}

void type metadata accessor for SearchCallHistoryCATsSimple.VisualCatTextDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_219((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_216((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x294064);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_217((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_218(result, a2 + 2);
        break;
    }
  }
  return result;
}

void type metadata accessor for SearchCallHistoryCATsSimple.VoiceMailOfferToContinueReadingDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_219((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_216((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x294154);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_217((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_218(result, a2 + 1);
        break;
    }
  }
  return result;
}

void type metadata accessor for SearchCallHistoryCATsSimple.VoiceMailOfferToFollowUpActionDialogIds()
{
}

void type metadata accessor for SearchCallHistoryCATsSimple.VoiceMailPromptToPlayDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryCATsSimple.BuildCallRecordDetailDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x294230);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SearchCallHistoryCATsSimple.WindowIntroForReadingMultipleRecordsDialogIds()
{
}

void OUTLINED_FUNCTION_16_38()
{
  *(void *)(v0 + 272) = 0x726F63655277656ELL;
  *(void *)(v0 + 280) = 0xEF746E756F437364;
}

uint64_t OUTLINED_FUNCTION_20_31@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x746E65746E69;
  v2[17] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_33(uint64_t result)
{
  v2[24] = v1;
  v2[27] = result;
  v2[28] = 0x5074737269467369;
  v2[29] = 0xEF70704179747261;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_16(uint64_t a1)
{
  v2[18] = v1;
  v2[21] = a1;
  v2[22] = 0x746E65746E69;
  v2[23] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_34_14@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x656369766564;
  v2[17] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_35_22@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x746E65746E69;
  v2[11] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_43_16(uint64_t result)
{
  v2[12] = v1;
  v2[15] = result;
  v2[16] = 0xD000000000000013;
  return result;
}

uint64_t OUTLINED_FUNCTION_60_8(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0x5074737269467369;
  v2[23] = 0xEF70704179747261;
  return result;
}

uint64_t OUTLINED_FUNCTION_62_11(uint64_t a1, __n128 a2)
{
  *(unsigned char *)(a1 + 48) = v2;
  *(void *)(v4 + 24) = v3;
  v3[1] = a2;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_69_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 48) = a2;
  *(void *)(v2 + 72) = result;
  strcpy((char *)(v2 + 80), "isLastOfGroup");
  *(_WORD *)(v2 + 94) = -4864;
  return result;
}

void OUTLINED_FUNCTION_77_5(uint64_t a1@<X8>)
{
  v2[36] = a1;
  v2[39] = v1;
  v2[40] = v3;
}

void OUTLINED_FUNCTION_81_5()
{
  strcpy((char *)(v0 + 80), "callTypesCount");
  *(unsigned char *)(v0 + 95) = -18;
}

uint64_t OUTLINED_FUNCTION_90_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(result + 48) = v2;
  *(void *)(result + 72) = a2;
  strcpy((char *)(result + 80), "isLastWindow");
  *(unsigned char *)(result + 93) = 0;
  *(_WORD *)(result + 94) = -5120;
  return result;
}

uint64_t OUTLINED_FUNCTION_91_7@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x746E65746E69;
  v2[17] = 0xE600000000000000;
  return 0;
}

void OUTLINED_FUNCTION_118_3(uint64_t a1@<X8>)
{
  v2[6] = a1;
  v2[9] = v1;
  v2[10] = 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_120_2()
{
  *(void *)(v0 + 80) = 0x746E65746E69;
  *(void *)(v0 + 88) = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_121_3(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0xD000000000000013;
  return result;
}

uint64_t OUTLINED_FUNCTION_129_3(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

void OUTLINED_FUNCTION_131_2(uint64_t a1@<X8>)
{
  char v5 = *(unsigned char *)(v2 + 99);
  *(void *)(v3 + 320) = v4;
  *(void *)(v3 + 328) = (a1 - 32) | 0x8000000000000000;
  *(void *)(v3 + 360) = v1;
  *(unsigned char *)(v3 + 336) = v5;
}

void OUTLINED_FUNCTION_132_2(uint64_t a1@<X8>)
{
  v2[6] = v1;
  v2[9] = a1;
  v2[10] = 0xD000000000000014;
}

uint64_t OUTLINED_FUNCTION_134_2(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_136_3(uint64_t result, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 90) = a6;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = a5;
  *(unsigned char *)(v8 + 89) = a4;
  *(unsigned char *)(v8 + 88) = a2;
  *(void *)(v8 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_147_3(uint64_t a1@<X8>)
{
  v2[6] = a1;
  v2[9] = v1;
  v2[10] = 0xD000000000000014;
}

uint64_t OUTLINED_FUNCTION_148_1(uint64_t result)
{
  v2[36] = v1;
  v2[39] = result;
  v2[40] = v3 + 3;
  return result;
}

uint64_t OUTLINED_FUNCTION_149_3(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

unint64_t OUTLINED_FUNCTION_153_3(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_156_2(uint64_t a1@<X8>)
{
  v2[6] = a1;
  v2[9] = v1;
  v2[10] = 0xD000000000000014;
}

uint64_t OUTLINED_FUNCTION_174_1(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  *(void *)(v10 + 56) = a7;
  *(void *)(v10 + 64) = v9;
  *(unsigned char *)(v10 + 98) = a9;
  *(unsigned char *)(v10 + 97) = a8;
  *(void *)(v10 + 40) = a5;
  *(void *)(v10 + 48) = a6;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(unsigned char *)(v10 + 96) = a2;
  *(void *)(v10 + 16) = result;
  return result;
}

INPerson __swiftcall SAPerson.toINPerson()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v1 - 8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v4 = v2 - v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for PersonNameComponents();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v12 = (char *)(v10 - v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - v14;
  PersonNameComponents.init()();
  outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v0, (SEL *)&selRef_firstNamePhonetic);
  PersonNameComponents.givenName.setter();
  outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v0, (SEL *)&selRef_lastNamePhonetic);
  PersonNameComponents.familyName.setter();
  PersonNameComponents.init()();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v16(v7, v15, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  PersonNameComponents.phoneticRepresentation.setter();
  outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v0, (SEL *)&selRef_firstName);
  PersonNameComponents.givenName.setter();
  outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v0, (SEL *)&selRef_lastName);
  PersonNameComponents.familyName.setter();
  id v17 = objc_allocWithZone((Class)INPersonHandle);
  id v34 = @nonobjc INPersonHandle.init(value:type:)(0, 0, 0);
  v16((char *)v4, v12, v8);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v8);
  uint64_t v18 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v0, (SEL *)&selRef_fullName);
  uint64_t v32 = v19;
  uint64_t v33 = v18;
  uint64_t v20 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v0, (SEL *)&selRef_internalGUID);
  uint64_t v22 = v21;
  id v23 = [v0 me];
  type metadata accessor for NSNumber();
  v24.super.super.Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  if (v23)
  {
    id v25 = v23;
    char v26 = static NSObject.== infix(_:_:)();
  }
  else
  {
    char v26 = 0;
  }

  id v27 = objc_allocWithZone((Class)INPerson);
  id v28 = @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isMe:)(v34, v4, v33, v32, 0, v20, v22, 0, 0, v26 & 1);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v12, v8);
  v29(v15, v8);
  return (INPerson)v28;
}

id SAPerson.init(person:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v2 - 8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v5 = v3 - v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v81 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v81 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  char v84 = (char *)&v81 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  BOOL v82 = (char *)&v81 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  char v83 = (char *)&v81 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v81 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  NSNumber v24 = (char *)&v81 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  id v27 = (char *)&v81 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v81 - v28;
  id v30 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v31 = [a1 nameComponents];
  if (v31)
  {
    uint64_t v32 = v31;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for PersonNameComponents();
    uint64_t v33 = (uint64_t)v27;
    uint64_t v34 = 0;
  }
  else
  {
    type metadata accessor for PersonNameComponents();
    uint64_t v33 = (uint64_t)v27;
    uint64_t v34 = 1;
  }
  OUTLINED_FUNCTION_3_77(v33, v34);
  outlined init with take of PersonNameComponents?((uint64_t)v27, (uint64_t)v29);
  type metadata accessor for PersonNameComponents();
  int v35 = OUTLINED_FUNCTION_0_51((uint64_t)v29);
  uint64_t v81 = v9;
  uint64_t v36 = a1;
  uint64_t v37 = v12;
  uint64_t v38 = v5;
  if (v35)
  {
    uint64_t v39 = outlined destroy of PersonNameComponents?((uint64_t)v29);
LABEL_6:
    NSString v40 = 0;
    goto LABEL_9;
  }
  PersonNameComponents.givenName.getter();
  uint64_t v42 = v41;
  uint64_t v39 = outlined destroy of PersonNameComponents?((uint64_t)v29);
  if (!v42) {
    goto LABEL_6;
  }
  NSString v40 = String._bridgeToObjectiveC()();
  uint64_t v39 = swift_bridgeObjectRelease();
LABEL_9:
  OUTLINED_FUNCTION_1_2(v39, "setFirstName:");

  id v43 = [v36 displayName];
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;

  outlined bridged method (mbnn) of @objc SAPerson.fullName.setter(v44, v46, v30);
  id v47 = [v36 nameComponents];
  if (v47)
  {
    uint64_t v48 = v47;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  uint64_t v50 = v38;
  uint64_t v51 = (uint64_t)v37;
  uint64_t v52 = v36;
  uint64_t v53 = (uint64_t)v81;
  OUTLINED_FUNCTION_3_77((uint64_t)v21, v49);
  outlined init with take of PersonNameComponents?((uint64_t)v21, (uint64_t)v24);
  if (OUTLINED_FUNCTION_0_51((uint64_t)v24))
  {
    uint64_t v54 = outlined destroy of PersonNameComponents?((uint64_t)v24);
LABEL_14:
    NSString v55 = 0;
    goto LABEL_17;
  }
  PersonNameComponents.familyName.getter();
  uint64_t v57 = v56;
  uint64_t v54 = outlined destroy of PersonNameComponents?((uint64_t)v24);
  if (!v57) {
    goto LABEL_14;
  }
  NSString v55 = String._bridgeToObjectiveC()();
  uint64_t v54 = swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v59 = (uint64_t)v83;
  uint64_t v58 = (uint64_t)v84;
  uint64_t v60 = (uint64_t)v82;
  OUTLINED_FUNCTION_1_2(v54, "setLastName:");

  id v61 = [v52 nameComponents];
  if (v61)
  {
    Swift::Bool v62 = v61;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v63 = 0;
  }
  else
  {
    uint64_t v63 = 1;
  }
  OUTLINED_FUNCTION_3_77(v60, v63);
  outlined init with take of PersonNameComponents?(v60, v59);
  if (OUTLINED_FUNCTION_0_51(v59)) {
    goto LABEL_23;
  }
  PersonNameComponents.phoneticRepresentation.getter();
  if (OUTLINED_FUNCTION_0_51(v58))
  {
    outlined destroy of PersonNameComponents?(v58);
LABEL_23:
    uint64_t v64 = outlined destroy of PersonNameComponents?(v59);
LABEL_24:
    NSString v65 = 0;
    goto LABEL_25;
  }
  PersonNameComponents.givenName.getter();
  uint64_t v78 = v77;
  outlined destroy of PersonNameComponents?(v58);
  uint64_t v64 = outlined destroy of PersonNameComponents?(v59);
  if (!v78) {
    goto LABEL_24;
  }
  NSString v65 = String._bridgeToObjectiveC()();
  uint64_t v64 = swift_bridgeObjectRelease();
LABEL_25:
  OUTLINED_FUNCTION_1_2(v64, "setFirstNamePhonetic:");

  id v66 = [v52 nameComponents];
  if (v66)
  {
    uint64_t v67 = v66;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v68 = 0;
  }
  else
  {
    uint64_t v68 = 1;
  }
  OUTLINED_FUNCTION_3_77(v53, v68);
  outlined init with take of PersonNameComponents?(v53, v51);
  if (OUTLINED_FUNCTION_0_51(v51)) {
    goto LABEL_31;
  }
  PersonNameComponents.phoneticRepresentation.getter();
  if (OUTLINED_FUNCTION_0_51(v50))
  {
    outlined destroy of PersonNameComponents?(v50);
LABEL_31:
    uint64_t v69 = outlined destroy of PersonNameComponents?(v51);
LABEL_32:
    NSString v70 = 0;
    goto LABEL_33;
  }
  PersonNameComponents.familyName.getter();
  uint64_t v80 = v79;
  outlined destroy of PersonNameComponents?(v50);
  uint64_t v69 = outlined destroy of PersonNameComponents?(v51);
  if (!v80) {
    goto LABEL_32;
  }
  NSString v70 = String._bridgeToObjectiveC()();
  uint64_t v69 = swift_bridgeObjectRelease();
LABEL_33:
  OUTLINED_FUNCTION_1_2(v69, "setLastNamePhonetic:");

  uint64_t v71 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v52, (SEL *)&selRef_contactIdentifier);
  if (v72)
  {
    NSString v73 = String._bridgeToObjectiveC()();
    uint64_t v71 = swift_bridgeObjectRelease();
  }
  else
  {
    NSString v73 = 0;
  }
  OUTLINED_FUNCTION_1_2(v71, "setInternalGUID:");

  unsigned int v74 = [v52 isMe];
  type metadata accessor for NSNumber();
  Class isa = NSNumber.init(integerLiteral:)(v74).super.super.isa;
  OUTLINED_FUNCTION_1_2((uint64_t)isa, "setMe:");

  return v30;
}

id @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isMe:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v11 = v10;
  uint64_t v17 = type metadata accessor for PersonNameComponents();
  Class isa = 0;
  if (__swift_getEnumTagSinglePayload(a2, 1, v17) != 1)
  {
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  }
  if (a4)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  if (a7)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  if (a9)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v21 = 0;
  }
  LOBYTE(v24) = a10 & 1;
  id v22 = [v11 initWithPersonHandle:a1 nameComponents:isa displayName:v19 image:a5 contactIdentifier:v20 customIdentifier:v21 isMe:v24];

  return v22;
}

unint64_t type metadata accessor for NSNumber()
{
  unint64_t result = lazy cache variable for type metadata for NSNumber;
  if (!lazy cache variable for type metadata for NSNumber)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc SAPerson.fullName.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setFullName:v4];
}

uint64_t OUTLINED_FUNCTION_0_51(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_3_77(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t specialized RawRepresentable<>.hash(into:)()
{
  OUTLINED_FUNCTION_72_10();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_100_3();
      break;
    case 3:
      OUTLINED_FUNCTION_96_4();
      break;
    case 4:
      OUTLINED_FUNCTION_101_4();
      break;
    case 5:
      OUTLINED_FUNCTION_102_5();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_7_63();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_66_7();
  OUTLINED_FUNCTION_91_8();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_94_7();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_38_17();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_10_44();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_21_31();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_38_17();
  switch(v0)
  {
    case 1:
    case 3:
      OUTLINED_FUNCTION_10_44();
      break;
    case 2:
      OUTLINED_FUNCTION_62_12();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_88_6();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_79_5();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_7_63();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_72_10();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_100_3();
      break;
    case 3:
      OUTLINED_FUNCTION_96_4();
      break;
    case 4:
      OUTLINED_FUNCTION_101_4();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_69_7();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_7_63();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_35_23();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_42_17();
      break;
    case 2:
      OUTLINED_FUNCTION_34_15();
      break;
    case 3:
      OUTLINED_FUNCTION_30_20();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_97_4();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_98_5();
      break;
    case 3:
      OUTLINED_FUNCTION_58_11();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_67_8();
  if (v0)
  {
    OUTLINED_FUNCTION_10_44();
  }
  else
  {
    OUTLINED_FUNCTION_262();
    OUTLINED_FUNCTION_85_5();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_21_31();
}

{
  return OUTLINED_FUNCTION_51_12();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  OUTLINED_FUNCTION_90_7();
  return String.hash(into:)();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_73_6();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_31_23();
      break;
    case 2:
      goto LABEL_4;
    case 3:
      OUTLINED_FUNCTION_87_4();
LABEL_4:
      OUTLINED_FUNCTION_63();
      break;
    case 5:
      OUTLINED_FUNCTION_8_70();
      break;
    case 6:
      OUTLINED_FUNCTION_9_55();
      break;
    case 7:
      OUTLINED_FUNCTION_83_2();
      break;
    case 8:
      OUTLINED_FUNCTION_81_6();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_19_31();
}

{
  return OUTLINED_FUNCTION_25_23();
}

{
  return OUTLINED_FUNCTION_7_63();
}

{
  return OUTLINED_FUNCTION_25_23();
}

{
  return OUTLINED_FUNCTION_3_78();
}

{
  return OUTLINED_FUNCTION_25_23();
}

{
  return OUTLINED_FUNCTION_21_31();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_19_31();
}

{
  return OUTLINED_FUNCTION_3_78();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_17_30();
}

{
  return String.hash(into:)();
}

{
  return OUTLINED_FUNCTION_46_12();
}

{
  return OUTLINED_FUNCTION_3_78();
}

{
  return String.hash(into:)();
}

{
  return OUTLINED_FUNCTION_19_31();
}

{
  return OUTLINED_FUNCTION_17_30();
}

{
  return OUTLINED_FUNCTION_17_30();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_74_5();
  switch(v0)
  {
    case 2:
      OUTLINED_FUNCTION_14_37();
      break;
    case 3:
      OUTLINED_FUNCTION_13_37();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_7_63();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_52_12();
  switch(v0)
  {
    case 3:
      OUTLINED_FUNCTION_8_70();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_70_5();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_64_3();
      break;
    case 3:
      OUTLINED_FUNCTION_9_55();
      break;
    case 4:
      OUTLINED_FUNCTION_92_5();
      OUTLINED_FUNCTION_10_44();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_73_6();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_31_23();
      break;
    case 2:
      goto LABEL_4;
    case 3:
      OUTLINED_FUNCTION_87_4();
LABEL_4:
      OUTLINED_FUNCTION_63();
      break;
    case 4:
      OUTLINED_FUNCTION_8_70();
      break;
    case 12:
      OUTLINED_FUNCTION_102_5();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_74_5();
  switch(v0)
  {
    case 3:
      OUTLINED_FUNCTION_14_37();
      break;
    case 4:
      OUTLINED_FUNCTION_13_37();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_38_17();
  switch(v0)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_10_44();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_8_70();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_9_55();
      break;
    case 2:
      OUTLINED_FUNCTION_81_6();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_31_23();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_92_5();
      OUTLINED_FUNCTION_10_44();
      break;
    case 2:
      OUTLINED_FUNCTION_9_55();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_31_23();
  switch(v0)
  {
    case 2:
      OUTLINED_FUNCTION_94_7();
      break;
    case 4:
      OUTLINED_FUNCTION_62_12();
      break;
    case 5:
      OUTLINED_FUNCTION_31_23();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_51_12();
}

{
  return String.hash(into:)();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_52_12();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_31_23();
      break;
    case 8:
      OUTLINED_FUNCTION_8_70();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  OUTLINED_FUNCTION_84_8();
  return String.hash(into:)();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_88_6();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_17_30();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_67_8();
  if (v0) {
    OUTLINED_FUNCTION_10_44();
  }
  else {
    OUTLINED_FUNCTION_134();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_46_12();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_69_7();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_67_8();
  if (v0) {
    OUTLINED_FUNCTION_10_44();
  }
  else {
    OUTLINED_FUNCTION_134();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_53_13();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_67_8();
  if (v0)
  {
    OUTLINED_FUNCTION_10_44();
  }
  else
  {
    OUTLINED_FUNCTION_262();
    OUTLINED_FUNCTION_85_5();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_21_31();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  return OUTLINED_FUNCTION_3_78();
}

{
  return OUTLINED_FUNCTION_7_63();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_67_8();
  if (v0) {
    OUTLINED_FUNCTION_10_44();
  }
  else {
    OUTLINED_FUNCTION_262();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_69_7();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_15_36();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_69_7();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_69_7();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_38_17();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_93_7();
      break;
    case 2:
      OUTLINED_FUNCTION_11_48();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_71_6();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_89_7();
      break;
    case 4:
      OUTLINED_FUNCTION_9_55();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_66_7();
  if (v0) {
    OUTLINED_FUNCTION_134();
  }
  else {
    OUTLINED_FUNCTION_91_8();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  char v0;
  uint64_t vars8;

  OUTLINED_FUNCTION_71_6();
  OUTLINED_FUNCTION_89_7();
  switch(v0)
  {
    case 2:
      OUTLINED_FUNCTION_11_48();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_12_39();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_55_10();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))UsoIdentifierNamespaceType.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))DucFamilyNames.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallSlotNames.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallReference.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallAttribute.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallRecord.CodingKeys.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallVerb.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATsSimple.UnsupportedSwitchToFaceTimeDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallContactReference.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallDisplayTextCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallControlAction.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))OngoingCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))OngoingCallCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))StartCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))StartCallCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.RelationshipDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))AddCallParticipantCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))AddCallParticipantCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))UnsupportedPhoneCall.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))UnsupportedFlowCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))UnsupportedFlowCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))UnsupportedFlowCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter);
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, char a2)
{
  if (a2) {
    OUTLINED_FUNCTION_27_24();
  }
  else {
    OUTLINED_FUNCTION_62_12();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2)
  {
    OUTLINED_FUNCTION_32_18();
    OUTLINED_FUNCTION_27_24();
  }
  else
  {
    OUTLINED_FUNCTION_29_23();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  switch(a2)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_10_44();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2) {
    OUTLINED_FUNCTION_134();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2) {
    OUTLINED_FUNCTION_27_24();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2) {
    OUTLINED_FUNCTION_76_7();
  }
  else {
    OUTLINED_FUNCTION_65_6();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_10_44();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_95_5();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_78_5();
  }
  OUTLINED_FUNCTION_60_9();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_36_20();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2)
  {
    OUTLINED_FUNCTION_262();
    OUTLINED_FUNCTION_47_16();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_41_15();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  switch(a2)
  {
    case 1:
    case 2:
      OUTLINED_FUNCTION_64_3();
      break;
    case 3:
    case 4:
      OUTLINED_FUNCTION_70_5();
      break;
    case 6:
      OUTLINED_FUNCTION_9_55();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  switch(a2)
  {
    case 1:
      OUTLINED_FUNCTION_83_2();
      break;
    case 4:
      OUTLINED_FUNCTION_31_23();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2) {
    OUTLINED_FUNCTION_76_7();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_49_16();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2) {
    OUTLINED_FUNCTION_27_24();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_44_18();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_99_5();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_10_44();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  switch(a2)
  {
    case 1:
      OUTLINED_FUNCTION_57_11();
      break;
    case 2:
      OUTLINED_FUNCTION_28_26();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  switch(a2)
  {
    case 2:
      OUTLINED_FUNCTION_11_48();
      break;
    case 3:
      OUTLINED_FUNCTION_9_55();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2) {
    OUTLINED_FUNCTION_262();
  }
  else {
    OUTLINED_FUNCTION_10_44();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2) {
    OUTLINED_FUNCTION_134();
  }
  else {
    OUTLINED_FUNCTION_31_23();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_59_11();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_39_18();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  switch(a2)
  {
    case 1:
      OUTLINED_FUNCTION_9_55();
      break;
    case 2:
    case 3:
      OUTLINED_FUNCTION_10_44();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  switch(a2)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_10_44();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_11_48();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_37_18();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (!a2) {
    OUTLINED_FUNCTION_93_7();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  if (a2)
  {
    OUTLINED_FUNCTION_262();
    OUTLINED_FUNCTION_47_16();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ActionableCallControlFlow.UnsupportedHoldActionReason.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))UnsupportedFlowCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))UnsupportedFlowCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))UnsupportedFlowCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))UnsupportedPhoneCall.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))FaceTimeMessageControllerFlow.State.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AddCallParticipantCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AddCallParticipantCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AddCallParticipantCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnswerCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SiriPhoneDefaultsKey.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.RelationshipDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.EmergencyCountdownDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))HangUpCallCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))HangUpCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))OngoingCallCATsSimple.NewCallPromptDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))OngoingCallCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))OngoingCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceCallBellCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceCallBellCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))CallControlUsoIdentifiers.PhoneSetting.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneStartCallIntent.CodingKeys.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneSearchCallHistoryIntent.CodingKeys.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneIncomingCall.CodingKeys.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallAudioRoute.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallCommonCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallConfirmation.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlAction.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlNLIntent.Verb.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlNLIntent.Target.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallDestinationType.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallDisplayTextCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallCommonCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallContactReference.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATsSimple.CallControlDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallControlCATsSimple.UnsupportedSwitchToFaceTimeDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallNoun.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallVerb.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallRecord.CodingKeys.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallProvider.CodingKeys.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallAttribute.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallReference.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallSlotNames.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))DucFamilyNames.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SuggestionsCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ParseTypeLogging.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ContactSourceType.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))FollowUpOfferType.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ReaderNLConstants.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SuggestionsCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))UsoIdentifierNamespaceType.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceVoicemailDirectAction.CodingKeys.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))TrialSmartAppSelectionConfigKey.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))LogTag.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))VoiceMail.VoiceMailVerb.rawValue.getter);
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)()
{
  return OUTLINED_FUNCTION_6_61();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_77_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_37_18();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_11_48();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_39_18();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_59_11();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_77_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_6_61();
}

{
  return OUTLINED_FUNCTION_2_90();
}

{
  return OUTLINED_FUNCTION_20_32();
}

{
  OUTLINED_FUNCTION_56_12();
  OUTLINED_FUNCTION_53_13();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_56_12();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_57_11();
      break;
    case 2:
      OUTLINED_FUNCTION_28_26();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_45_16();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_77_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_16_39();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_99_5();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_84_8();
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_44_18();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_50_13();
}

{
  OUTLINED_FUNCTION_4_69();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (v0) {
    OUTLINED_FUNCTION_76_7();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_41_15();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_49_16();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_56_12();
  switch(v0)
  {
    case 2:
      OUTLINED_FUNCTION_14_37();
      break;
    case 3:
      OUTLINED_FUNCTION_13_37();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_16_39();
}

{
  return OUTLINED_FUNCTION_16_39();
}

{
  return OUTLINED_FUNCTION_18_28();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return OUTLINED_FUNCTION_2_90();
}

{
  return OUTLINED_FUNCTION_45_16();
}

{
  return OUTLINED_FUNCTION_18_28();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return OUTLINED_FUNCTION_16_39();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_2_90();
}

{
  OUTLINED_FUNCTION_4_69();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_20_32();
}

{
  return OUTLINED_FUNCTION_24_28();
}

{
  return OUTLINED_FUNCTION_2_90();
}

{
  return OUTLINED_FUNCTION_24_28();
}

{
  return OUTLINED_FUNCTION_6_61();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_36_20();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_24_28();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_78_5();
  }
  OUTLINED_FUNCTION_60_9();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_18_28();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (!v0) {
    OUTLINED_FUNCTION_95_5();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (v0) {
    OUTLINED_FUNCTION_76_7();
  }
  else {
    OUTLINED_FUNCTION_65_6();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_90_7();
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_50_13();
}

{
  return OUTLINED_FUNCTION_20_32();
}

{
  char v0;

  OUTLINED_FUNCTION_56_12();
  OUTLINED_FUNCTION_97_4();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_98_5();
      break;
    case 3:
      OUTLINED_FUNCTION_58_11();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_4_69();
  if (v0)
  {
    OUTLINED_FUNCTION_32_18();
    OUTLINED_FUNCTION_27_24();
  }
  else
  {
    OUTLINED_FUNCTION_29_23();
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_56_12();
  OUTLINED_FUNCTION_35_23();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_42_17();
      break;
    case 2:
      OUTLINED_FUNCTION_34_15();
      break;
    case 3:
      OUTLINED_FUNCTION_30_20();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_6_61();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_6_61();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_79_5();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_20_32();
}

{
  return OUTLINED_FUNCTION_6_61();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_77_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_5_55();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, char a2)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceIncomingCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PostCallInquiryAnswerCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.ConfirmAppDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.DisambiguateContactsDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnswerCallCATs.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneAppResolutionLogger.CodePathId.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneAppSelectionSignalsGathererType.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))PhoneCallCommonCATPatternsIdentifiers.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SlotResolutionError.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceVoicemailCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SpecifyingContactAddress.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))IdentifyIncomingCallerCATsSimple.Properties.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ForcedAppDisambiguationPhase.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.rawValue.getter);
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4 = a2 & 1;
  Hasher.init(_seed:)();
  a3(v4);
  OUTLINED_FUNCTION_61_8();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo13SABaseCommandCG_AGs5NeverOTg50139_s27PhoneCallFlowDelegatePlugin09HangUpAndB20HandleIntentStrategyC22makePostDialogCommands22intentResolutionRecord16dialogTemplatingSaySo13dE103CG07SiriKitC00jqR0VySo07INStartbJ0CSo0ybJ8ResponseCG_AA05Startb3CatT7ServiceCSgtYaKFA2HcACcfu1_A2Hcfu2_0hijK6Plugin0mnoiqrS0CTf1cn_n(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_12;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v2)
  {
    while (1)
    {
      unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
      if (v2 < 0) {
        break;
      }
      uint64_t v4 = 0;
      while (v2 != v4)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(a1 + 8 * v4 + 32);
        }
        uint64_t v6 = v5;
        ++v4;
        HangUpAndCallHandleIntentStrategy.wrapLaunchAppWithHangUp(command:)(v5);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v2 == v4) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v2) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t HangUpAndCallHandleIntentStrategy.__allocating_init(sharedGlobals:options:)(uint64_t a1, uint64_t a2)
{
  return HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)(a1, a2);
}

uint64_t HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CATOption();
  __chkstk_darwin(v6 - 8);
  *(void *)(v3 + direct field offset for HangUpAndCallHandleIntentStrategy.options) = a2;
  outlined init with copy of SignalProviding(a1, (uint64_t)v11);
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v7 = CATWrapperSimple.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallDisplayTextCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v8 = CATWrapperSimple.__allocating_init(options:globals:)();
  uint64_t v9 = specialized CallingIntentContinueInAppStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)(v11, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t specialized CallingIntentContinueInAppStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)(long long *a1, uint64_t a2, uint64_t a3)
{
  static UnlockDevicePolicy.default.getter();
  *(void *)(v3 + direct field offset for CallingIntentContinueInAppStrategy.additionalCommands) = _swiftEmptyArrayStorage;
  outlined init with take of AppSelectionSignalComponent(a1, v3 + 16);
  *(void *)(v3 + 56) = a2;
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t HangUpAndCallHandleIntentStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  return _swift_task_switch(HangUpAndCallHandleIntentStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:), 0, 0);
}

uint64_t HangUpAndCallHandleIntentStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)()
{
  uint64_t v14 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  v0[13] = v2;
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_18(v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    v0[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000040, 0x8000000000497D90, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2080;
    lazy protocol witness table accessor for type OngoingCallOfferOptions and conformance OngoingCallOfferOptions();
    swift_bridgeObjectRetain();
    uint64_t v6 = Set.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[9] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v3, (os_log_type_t)v2, "#HangUpAndCallHandleIntentStrategy %s, options: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    OUTLINED_FUNCTION_5_16();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)
                                        + async function pointer to specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[14] = v9;
  *uint64_t v9 = v0;
  v9[1] = HangUpAndCallHandleIntentStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:);
  uint64_t v10 = v0[10];
  return v12(v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  *(void *)(v4 + 120) = v3;
  *(void *)(v4 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v2 + 8);
    return v5();
  }
  else
  {
    return _swift_task_switch(HangUpAndCallHandleIntentStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:), 0, 0);
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t ObjectType;
  void *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v28;

  uint64_t v2 = *(void *)(v0[12] + direct field offset for HangUpAndCallHandleIntentStrategy.options);
  if (!*(void *)(v2 + 16)) {
    goto LABEL_23;
  }
  Hasher.init(_seed:)();
  String.hash(into:)();
  Hasher._finalize()();
  OUTLINED_FUNCTION_82_4();
  OUTLINED_FUNCTION_80_4();
  if ((v3 & 1) == 0)
  {
LABEL_8:
    if (*(void *)(v2 + 16))
    {
      Hasher.init(_seed:)();
      String.hash(into:)();
      Hasher._finalize()();
      OUTLINED_FUNCTION_82_4();
      OUTLINED_FUNCTION_80_4();
      if (v6)
      {
        while (!*(unsigned char *)(*(void *)(v2 + 48) + v1) || *(unsigned char *)(*(void *)(v2 + 48) + v1) == 1)
        {
          unint64_t v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v7) {
            goto LABEL_18;
          }
          OUTLINED_FUNCTION_43_17();
          if ((v8 & 1) == 0) {
            goto LABEL_23;
          }
        }
        swift_bridgeObjectRelease();
LABEL_18:
        uint64_t v10 = (void *)v0[12];
        uint64_t v11 = v10[5];
        uint64_t v12 = v10[6];
        __swift_project_boxed_opaque_existential_1(v10 + 2, v11);
        (*(void (**)(uint64_t, uint64_t))(v12 + 120))(v11, v12);
        uint64_t v13 = v0[5];
        uint64_t v14 = v0[6];
        __swift_project_boxed_opaque_existential_1(v0 + 2, v13);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14))
        {
          uint64_t v16 = v15;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
          uint64_t v17 = Logger.logObject.getter();
          uint64_t v18 = static os_log_type_t.debug.getter();
          if (OUTLINED_FUNCTION_18(v18))
          {
            NSString v19 = (uint8_t *)OUTLINED_FUNCTION_7_2();
            *(_WORD *)NSString v19 = 0;
            _os_log_impl(&dword_0, v17, (os_log_type_t)((_BYTE)v0 + 16), "#HangUpAndCallHandleIntentStrategy Holding call and sending default continueInApp commands", v19, 2u);
            swift_slowDealloc();
          }

          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v16 + 200))(ObjectType, v16);
          swift_unknownObjectRelease();
          goto LABEL_26;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      }
    }
LABEL_23:
    NSString v21 = (void *)Logger.logObject.getter();
    id v22 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_18(v22))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_25_4(&dword_0, v23, v24, "#HangUpAndCallHandleIntentStrategy Unexpected case: sending default continueInApp commands");
      OUTLINED_FUNCTION_5_16();
    }

    goto LABEL_26;
  }
  while (1)
  {
    if (!*(unsigned char *)(*(void *)(v2 + 48) + v1)) {
      goto LABEL_6;
    }
    if (*(unsigned char *)(*(void *)(v2 + 48) + v1) != 2) {
      break;
    }
    OUTLINED_FUNCTION_66_7();
LABEL_6:
    os_log_type_t v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_43_17();
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v9 = v0[15];
  swift_retain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo13SABaseCommandCG_AGs5NeverOTg50139_s27PhoneCallFlowDelegatePlugin09HangUpAndB20HandleIntentStrategyC22makePostDialogCommands22intentResolutionRecord16dialogTemplatingSaySo13dE103CG07SiriKitC00jqR0VySo07INStartbJ0CSo0ybJ8ResponseCG_AA05Startb3CatT7ServiceCSgtYaKFA2HcACcfu1_A2Hcfu2_0hijK6Plugin0mnoiqrS0CTf1cn_n(v9);
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v25 = OUTLINED_FUNCTION_12_2();
  return v26(v25);
}

uint64_t specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1)
{
  void v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return _swift_task_switch(specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:), 0, 0);
}

uint64_t specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14 = v12[7];
  uint64_t v13 = v12[8];
  uint64_t v15 = v12[6];
  uint64_t v16 = v12[4];
  void v12[2] = _swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = (void *)Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_18(v19))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_25_4(&dword_0, v20, v21, "#CallingIntentContinueInAppStrategy: Building launch app command for INStartCallIntent");
    OUTLINED_FUNCTION_5_16();
  }
  uint64_t v22 = v12[8];
  uint64_t v23 = v12[5];

  uint64_t v24 = swift_task_alloc();
  v12[9] = v24;
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = v23;
  uint64_t v25 = (void *)swift_task_alloc();
  v12[10] = v25;
  uint64_t v26 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  *uint64_t v25 = v12;
  v25[1] = specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v12 + 3, 0, 0, 0xD000000000000040, 0x8000000000497D90, partial apply for specialized closure #1 in CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:), v24, v26, a9, a10, a11, a12);
}

uint64_t specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)()
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = specialized CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  uint64_t v1 = *(id *)(v0 + 24);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((char *)&dword_10 + (*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                                  + (*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  swift_task_dealloc();
  uint64_t v2 = OUTLINED_FUNCTION_12_2();
  return v3(v2);
}

id HangUpAndCallHandleIntentStrategy.wrapLaunchAppWithHangUp(command:)(void *a1)
{
  void (*v17)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v30;
  uint64_t v31;
  void v32[5];
  uint64_t __dst[22];
  long long v34;
  void v35[4];
  uint64_t v36;
  uint64_t v37;
  uint64_t vars8;

  uint64_t v2 = v1;
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  uint64_t v4 = one-time initialization token for siriPhone;
  if (v3)
  {
    uint64_t v5 = v3;
    id v6 = a1;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "#HangUpAndCallHandleIntentStrategy HandleIntent(INHangUpCallIntent) before LaunchAppWithIntent", v10, 2u);
      swift_slowDealloc();
    }

    id v11 = [objc_allocWithZone((Class)SAResultCallback) init];
    [v11 setCode:SAResultCallbackAnySuccessCodeValue];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_46A030;
    *(void *)(v12 + 32) = v5;
    __dst[0] = v12;
    specialized Array._endMutation()();
    id v30 = v6;
    outlined bridged method (mbnn) of @objc SAResultCallback.commands.setter(__dst[0], v11);
    id v13 = [objc_allocWithZone((Class)INHangUpCallIntent) init];
    if (one-time initialization token for instance != -1) {
      swift_once();
    }
    memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
    type metadata accessor for PhoneCallFeatureManager();
    uint64_t inited = swift_initStackObject();
    v35[1] = &type metadata for PhoneCallFeatureFlags;
    void v35[2] = &protocol witness table for PhoneCallFeatureFlags;
    *(void *)&uint64_t v34 = swift_allocObject();
    memcpy((void *)(v34 + 16), __dst, 0xB0uLL);
    outlined init with take of AppSelectionSignalComponent(&v34, inited + 16);
    uint64_t v16 = v2[5];
    uint64_t v15 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v16);
    uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8);
    outlined retain of PhoneCallFeatureFlags((uint64_t)__dst);
    v17(v32, v16, v15);
    FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v32, (uint64_t)&v34);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    uint64_t v37 = *((void *)&v34 + 1);
    outlined release of Set<String>((uint64_t)&v37);
    outlined init with take of String?((uint64_t)v35, (uint64_t)v32);
    outlined release of String?((uint64_t)v32);
    uint64_t v36 = v35[3];
    outlined release of Set<String>((uint64_t)&v36);
    uint64_t v18 = swift_retain();
    INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v18, 0);
    swift_release();
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAIntentGroupHandleIntent);
    os_log_type_t v19 = v13;
    uint64_t v20 = SAIntentGroupHandleIntent.init(intent:appIdentifier:)(v19, 0, 0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_46A030;
    *(void *)(v21 + 32) = v11;
    id v31 = v21;
    specialized Array._endMutation()();
    uint64_t v22 = v20;
    uint64_t v23 = v11;
    outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.callbacks.setter(v31, v22);

    swift_release();
    return v22;
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = Logger.logObject.getter();
    id v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "#HangUpAndCallHandleIntentStrategy Not LaunchApp - no modification to AceCommand", v28, 2u);
      OUTLINED_FUNCTION_5_16();
    }

    return a1;
  }
}

void HangUpAndCallHandleIntentStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)()
{
}

uint64_t HangUpAndCallHandleIntentStrategy.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

uint64_t HangUpAndCallHandleIntentStrategy.deinit()
{
  uint64_t v0 = specialized CallingIntentContinueInAppStrategy.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t specialized CallingIntentContinueInAppStrategy.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  uint64_t v1 = v0 + direct field offset for CallingIntentContinueInAppStrategy.authenticationPolicy;
  uint64_t v2 = type metadata accessor for UnlockDevicePolicy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HangUpAndCallHandleIntentStrategy.__deallocating_deinit()
{
  specialized CallingIntentContinueInAppStrategy.deinit();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t specialized closure #1 in CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = a3;
  uint64_t v4 = type metadata accessor for CATOption();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  IntentResolutionRecord.app.getter();
  unint64_t v8 = (void *)IntentResolutionRecord.intent.getter();
  os_log_type_t v9 = (void *)IntentResolutionRecord.intentResponse.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)static BiomeEventSender.instance;
  type metadata accessor for UnsupportedFlowCATs();
  id v13 = v12;
  static CATOption.defaultMode.getter();
  CATWrapper.__allocating_init(options:globals:)();
  specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for HangUpAndCallHandleIntentStrategy()
{
  uint64_t result = type metadata singleton initialization cache for HangUpAndCallHandleIntentStrategy;
  if (!type metadata singleton initialization cache for HangUpAndCallHandleIntentStrategy) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for HangUpAndCallHandleIntentStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t sub_29D2C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t partial apply for specialized closure #1 in CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(uint64_t a1)
{
  return specialized closure #1 in CallingIntentContinueInAppStrategy.makePostDialogCommands(intentResolutionRecord:dialogTemplating:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_29D380()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t _s27PhoneCallFlowDelegatePlugin34CallingIntentContinueInAppStrategyC22makePostDialogCommands22intentResolutionRecord16dialogTemplatingSaySo13SABaseCommandCG07SiriKitC00gqR0Vyxq_G_AA05Startb3CatT7ServiceCSgtYaKFyScCySo019SAIntentGroupLaunchj4WithG0Cs5Error_pGXEfU_ys6ResultOyARsAS_pGYucATcfu_yAWYucfu0_TA(void *a1, char a2)
{
  char v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);

  return _s27PhoneCallFlowDelegatePlugin34CallingIntentContinueInAppStrategyC22makePostDialogCommands22intentResolutionRecord16dialogTemplatingSaySo13SABaseCommandCG07SiriKitC00gqR0Vyxq_G_AA05Startb3CatT7ServiceCSgtYaKFyScCySo019SAIntentGroupLaunchj4WithG0Cs5Error_pGXEfU_ys6ResultOyARsAS_pGYucATcfu_yAWYucfu0_(a1, v3);
}

Swift::Int OUTLINED_FUNCTION_0_52()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_1_76()
{
  return String.hash(into:)();
}

Swift::Int OUTLINED_FUNCTION_2_90()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_3_78()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_4_69()
{
  return Hasher.init(_seed:)();
}

Swift::Int OUTLINED_FUNCTION_6_61()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_7_63()
{
  return String.hash(into:)();
}

Swift::Int OUTLINED_FUNCTION_16_39()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_17_30()
{
  return String.hash(into:)();
}

Swift::Int OUTLINED_FUNCTION_18_28()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_19_31()
{
  return String.hash(into:)();
}

Swift::Int OUTLINED_FUNCTION_20_32()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

Swift::Int OUTLINED_FUNCTION_22_34()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_23_32()
{
  return String.hash(into:)();
}

Swift::Int OUTLINED_FUNCTION_24_28()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

Swift::Int OUTLINED_FUNCTION_45_16()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_46_12()
{
  return String.hash(into:)();
}

Swift::Int OUTLINED_FUNCTION_50_13()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_51_12()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_53_13()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_56_12()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_60_9()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_61_8()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_77_6()
{
  return String.hash(into:)();
}

uint64_t ConfirmationViewBuilder.viewTemplate.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ConfirmationViewTemplate(v1 + 16, a1);
}

uint64_t outlined init with copy of ConfirmationViewTemplate(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ConfirmationViewBuilder.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 176, a1);
}

uint64_t ConfirmationViewBuilder.__allocating_init(viewTemplate:sharedGlobals:)(const void *a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  memcpy((void *)(v4 + 16), a1, 0xA0uLL);
  outlined init with take of AppSelectionSignalComponent(a2, v4 + 176);
  return v4;
}

uint64_t ConfirmationViewBuilder.init(viewTemplate:sharedGlobals:)(void *__src, long long *a2)
{
  memcpy((void *)(v2 + 16), __src, 0xA0uLL);
  outlined init with take of AppSelectionSignalComponent(a2, v2 + 176);
  return v2;
}

uint64_t ConfirmationViewBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void))
{
  char v3 = v2;
  id v30 = [objc_allocWithZone((Class)SASTItemGroup) init];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConfirmationViewTemplate.Button>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467720;
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v3[6];
  uint64_t v10 = v3[7];
  uint64_t v11 = v3[8];
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = v3[10];
  uint64_t v13 = v3[11];
  uint64_t v14 = v3[12];
  uint64_t v16 = v3[13];
  uint64_t v15 = v3[14];
  uint64_t v17 = v3[15];
  *(void *)(inited + 88) = v3[9];
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 112) = v14;
  *(void *)(inited + 120) = v16;
  *(void *)(inited + 128) = v15;
  *(void *)(inited + 136) = v17;
  v32[0] = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized ContiguousArray.reserveCapacity(_:)();
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SASTButtonItem);
  uint64_t v18 = *(void *)(inited + 32);
  uint64_t v19 = *(void *)(inited + 40);
  uint64_t v20 = *(void *)(inited + 80);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v21 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v21 + 16) = xmmword_46A030;
  *(void *)(v21 + 32) = v20;
  uint64_t v33 = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  SASTButtonItem.init(label:commands:centered:)(v18, v19, v33, 1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  OUTLINED_FUNCTION_2_91();
  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized ContiguousArray._endMutation()();
  uint64_t v23 = *(void *)(inited + 88);
  uint64_t v22 = *(void *)(inited + 96);
  uint64_t v24 = *(void *)(inited + 136);
  uint64_t v25 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v25 + 16) = xmmword_46A030;
  *(void *)(v25 + 32) = v24;
  uint64_t v33 = v25;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  SASTButtonItem.init(label:commands:centered:)(v23, v22, v33, 1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  OUTLINED_FUNCTION_2_91();
  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized ContiguousArray._endMutation()();
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(v32[0], (uint64_t)v30);
  type metadata accessor for SiriKitAceViewBuilder();
  uint64_t v26 = v3[25];
  uint64_t v27 = v3[26];
  __swift_project_boxed_opaque_existential_1(v3 + 22, v26);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v27 + 8))(v32, v26, v27);
  dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)();
  swift_release();
  dispatch thunk of SiriKitAceViewBuilder.addButtonGroup(buttonGroup:)();
  swift_release();
  uint64_t v28 = dispatch thunk of SiriKitAceViewBuilder.build()();
  swift_release();
  a2(v28, 0);

  return swift_bridgeObjectRelease();
}

uint64_t ConfirmationViewBuilder.makeViewsForCar(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void))
{
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIConfirmationView);
  uint64_t v3 = v2[7];
  uint64_t v28 = v2[6];
  uint64_t v4 = v2[8];
  uint64_t v26 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIConfirmationOption);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v5 + 16) = xmmword_46A030;
  *(void *)(v5 + 32) = v4;
  uint64_t v30 = v5;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_3_79();
  id v27 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v6, v7, v8, v9, v28, v3, v30);
  uint64_t v10 = v2[9];
  uint64_t v11 = v2[10];
  uint64_t v12 = v2[11];
  uint64_t v13 = v2[12];
  uint64_t v14 = v2[13];
  uint64_t v15 = v2[14];
  uint64_t v16 = v2[15];
  uint64_t v17 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v17 + 16) = xmmword_46A030;
  *(void *)(v17 + 32) = v16;
  uint64_t v31 = v17;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v18 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v10, v11, v12, v13, v14, v15, v31);
  id v19 = SAUIConfirmationView.init(confirmOption:denyOption:)(v27, v18);
  if (v2[21]) {
    NSString v20 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v20 = 0;
  }
  objc_msgSend(v19, "setStyle:", v20, v26);

  if (v2[17]) {
    NSString v21 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v21 = 0;
  }
  [v19 setTitle:v21];

  if (v2[19]) {
    NSString v22 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v22 = 0;
  }
  [v19 setSubtitle:v22];

  uint64_t v23 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v23 + 16) = xmmword_46A030;
  *(void *)(v23 + 32) = v19;
  uint64_t v32 = v23;
  specialized Array._endMutation()();
  id v24 = v19;
  a2(v32, 0);

  return swift_bridgeObjectRelease();
}

uint64_t ConfirmationViewBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void))
{
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIConfirmationView);
  uint64_t v3 = v2[7];
  uint64_t v23 = v2[6];
  uint64_t v4 = v2[8];
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIConfirmationOption);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v5 + 16) = xmmword_46A030;
  *(void *)(v5 + 32) = v4;
  uint64_t v26 = v5;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_3_79();
  id v24 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v6, v7, v8, v9, v23, v3, v26);
  uint64_t v10 = v2[9];
  uint64_t v11 = v2[10];
  uint64_t v12 = v2[11];
  uint64_t v13 = v2[12];
  uint64_t v15 = v2[13];
  uint64_t v14 = v2[14];
  uint64_t v16 = v2[15];
  uint64_t v17 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v17 + 16) = xmmword_46A030;
  *(void *)(v17 + 32) = v16;
  uint64_t v27 = v17;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v10, v11, v12, v13, v15, v14, v27);
  id v19 = SAUIConfirmationView.init(confirmOption:denyOption:)(v24, v18);
  uint64_t v20 = OUTLINED_FUNCTION_93();
  *(_OWORD *)(v20 + 16) = xmmword_46A030;
  *(void *)(v20 + 32) = v19;
  uint64_t v28 = v20;
  specialized Array._endMutation()();
  id v21 = v19;
  a2(v28, 0);

  return swift_bridgeObjectRelease();
}

uint64_t ConfirmationViewBuilder.deinit()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  outlined release of ConfirmationViewTemplate((uint64_t)v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  return v0;
}

uint64_t ConfirmationViewBuilder.__deallocating_deinit()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  outlined release of ConfirmationViewTemplate((uint64_t)v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  return swift_deallocClassInstance();
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.sharedGlobals.getter in conformance ConfirmationViewBuilder@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(*v1 + 176, a1);
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForWatch(utteranceViews:_:) in conformance ConfirmationViewBuilder()
{
  OUTLINED_FUNCTION_0_53();
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForMac(utteranceViews:_:) in conformance ConfirmationViewBuilder()
{
  OUTLINED_FUNCTION_0_53();
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForCar(utteranceViews:_:) in conformance ConfirmationViewBuilder()
{
  OUTLINED_FUNCTION_0_53();
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForIOS(utteranceViews:_:) in conformance ConfirmationViewBuilder()
{
  OUTLINED_FUNCTION_0_53();
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForTV(utteranceViews:_:) in conformance ConfirmationViewBuilder()
{
  OUTLINED_FUNCTION_0_53();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t outlined release of ConfirmationViewTemplate(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for ConfirmationViewBuilder()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_2_91()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t OUTLINED_FUNCTION_3_79()
{
  return v0;
}

uint64_t PhonePersonProperties<>.isUnnamedPhoneNumber.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_4705E0;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = swift_getKeyPath();
  *(void *)(inited + 48) = swift_getKeyPath();
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = swift_getKeyPath();
  v6[6] = inited;
  specialized Array._endMutation()();
  v6[2] = a1;
  v6[3] = v2;
  LOBYTE(v2) = specialized Sequence.allSatisfy(_:)((uint64_t (*)(uint64_t *))partial apply for closure #1 in PhonePersonProperties<>.isUnnamedPhoneNumber.getter, (uint64_t)v6, inited);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t key path getter for DialogPerson.givenName : PhonePerson()
{
  return DialogPerson.givenName.getter();
}

uint64_t sub_29E8FC()
{
  return DialogPerson.givenName.getter();
}

uint64_t key path getter for DialogPerson.middleName : PhonePerson()
{
  return DialogPerson.middleName.getter();
}

uint64_t sub_29E944()
{
  return DialogPerson.middleName.getter();
}

uint64_t key path getter for DialogPerson.familyName : PhonePerson()
{
  return DialogPerson.familyName.getter();
}

uint64_t sub_29E98C()
{
  return DialogPerson.familyName.getter();
}

uint64_t key path getter for DialogPerson.nickname : PhonePerson()
{
  return DialogPerson.nickname.getter();
}

uint64_t sub_29E9D4()
{
  return DialogPerson.nickname.getter();
}

uint64_t key path getter for DialogPerson.fullNameFromInput : PhonePerson()
{
  return DialogPerson.fullNameFromInput.getter();
}

uint64_t sub_29EA1C()
{
  return DialogPerson.fullNameFromInput.getter();
}

BOOL closure #1 in PhonePersonProperties<>.isUnnamedPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v6 = type metadata accessor for SpeakableString();
  BOOL v7 = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1;
  outlined destroy of SpeakableString?((uint64_t)v5);
  return v7;
}

BOOL partial apply for closure #1 in PhonePersonProperties<>.isUnnamedPhoneNumber.getter(uint64_t a1)
{
  return closure #1 in PhonePersonProperties<>.isUnnamedPhoneNumber.getter(a1, *(void *)(v1 + 24));
}

uint64_t protocol witness for PhonePersonProperties.isUnnamedPhoneNumber.getter in conformance PhonePerson(uint64_t a1)
{
  return PhonePersonProperties<>.isUnnamedPhoneNumber.getter(a1) & 1;
}

PhoneCallFlowDelegatePlugin::PhoneCallControlCATs::Properties_optional __swiftcall PhoneCallControlCATs.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallControlCATs.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return (PhoneCallFlowDelegatePlugin::PhoneCallControlCATs::Properties_optional)6;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneCallControlCATs::Properties_optional)v3;
  }
}

unint64_t PhoneCallControlCATs.Properties.rawValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000027;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    case 4:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 5:
      unint64_t result = 0xD00000000000002CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallControlCATs.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallControlCATs.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallControlCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallControlCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneCallControlCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallControlCATs.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallControlCATs::Properties_optional *a2@<X8>)
{
  result.int value = PhoneCallControlCATs.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallControlCATs.Properties@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PhoneCallControlCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallControlCATs.callControl(callControlAction:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_11_49(a1, a2, a3, 0x8000000000492200, 28, 0x800000000048C2A0);
}

uint64_t PhoneCallControlCATs.callControl(callControlAction:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_32_19(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  __n128 *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t PhoneCallControlCATs.callControl(callControlAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"callControlAction");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = PhoneCallControlCATs.callControl(callControlAction:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"callControlAction");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  char v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  OUTLINED_FUNCTION_26_2(v11 + 11);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t PhoneCallControlCATs.callControl(callControlAction:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_10_45(a1, 0x8000000000492200);
}

uint64_t PhoneCallControlCATs.unsupportedCallControl(unsupportedReason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_11_49(a1, a2, a3, 0x8000000000492220, 39, 0x800000000048C2C0);
}

uint64_t PhoneCallControlCATs.callControl(callControlAction:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v17[1] = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v12 + 16) = xmmword_467710;
  uint64_t v13 = (uint64_t *)(v12 + 48);
  *(void *)(v12 + 32) = 0xD000000000000011;
  *(void *)(v12 + 40) = a4;
  outlined init with copy of SpeakableString?(a1, (uint64_t)v11, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v14) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v11, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v13 = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
  }
  else
  {
    *(void *)(v12 + 72) = v14;
    __swift_allocate_boxed_opaque_existential_1(v13);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v15 + 32))();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  return swift_bridgeObjectRelease();
}

uint64_t PhoneCallControlCATs.unsupportedCallControl(unsupportedReason:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_32_19(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  __n128 *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t PhoneCallControlCATs.unsupportedCallControl(unsupportedReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = PhoneCallControlCATs.unsupportedCallControl(unsupportedReason:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  char v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = AnswerCallCATsSimple.offerFollowUpIntent(followUpOfferType:);
  OUTLINED_FUNCTION_26_2(v11 + 22);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t PhoneCallControlCATs.unsupportedCallControl(unsupportedReason:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_10_45(a1, 0x8000000000492220);
}

uint64_t PhoneCallControlCATs.callControl(callControlAction:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v7 + 16) = xmmword_467710;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  *(void *)(v7 + 32) = 0xD000000000000011;
  *(void *)(v7 + 40) = a2;
  outlined init with copy of SpeakableString?(a1, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = type metadata accessor for SpeakableString();
  if (__swift_getEnumTagSinglePayload(v2, 1, v9) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    __swift_allocate_boxed_opaque_existential_1(v8);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v10 + 32))();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  return swift_bridgeObjectRelease();
}

uint64_t PhoneCallControlCATs.unsupportedHoldAction(unsupportedReason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_11_49(a1, a2, a3, 0x8000000000492220, 38, 0x800000000048C2F0);
}

uint64_t PhoneCallControlCATs.unsupportedHoldAction(unsupportedReason:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_32_19(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t PhoneCallControlCATs.unsupportedHoldAction(unsupportedReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = PhoneCallControlCATs.callControl(callControlAction:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  char v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  OUTLINED_FUNCTION_26_2(v11 + 21);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t PhoneCallControlCATs.unsupportedHoldAction(unsupportedReason:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_10_45(a1, 0x8000000000492220);
}

uint64_t PhoneCallControlCATs.unsupportedIntent(unsupportedIntent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_11_49(a1, a2, a3, 0x8000000000490ED0, 34, 0x800000000048C320);
}

uint64_t PhoneCallControlCATs.unsupportedIntent(unsupportedIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_32_19(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t PhoneCallControlCATs.unsupportedIntent(unsupportedIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"unsupportedIntent");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = PhoneCallControlCATs.callControl(callControlAction:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"unsupportedIntent");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  char v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  OUTLINED_FUNCTION_26_2(v11 + 17);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t PhoneCallControlCATs.unsupportedIntent(unsupportedIntent:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_10_45(a1, 0x8000000000490ED0);
}

uint64_t PhoneCallControlCATs.unsupportedSpeakerphoneAction(unsupportedReason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_11_49(a1, a2, a3, 0x8000000000492220, 46, 0x800000000048C350);
}

uint64_t PhoneCallControlCATs.unsupportedSpeakerphoneAction(unsupportedReason:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_32_19(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t PhoneCallControlCATs.unsupportedSpeakerphoneAction(unsupportedReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = PhoneCallControlCATs.callControl(callControlAction:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  char v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  OUTLINED_FUNCTION_26_2(v11 + 29);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t PhoneCallControlCATs.unsupportedSpeakerphoneAction(unsupportedReason:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_10_45(a1, 0x8000000000492220);
}

uint64_t PhoneCallControlCATs.unsupportedSwitchToFaceTime(unsupportedReason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_11_49(a1, a2, a3, 0x8000000000492220, 44, 0x800000000048C380);
}

uint64_t PhoneCallControlCATs.unsupportedSwitchToFaceTime(unsupportedReason:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_32_19(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t PhoneCallControlCATs.unsupportedSwitchToFaceTime(unsupportedReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_18_29();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = PhoneCallControlCATs.callControl(callControlAction:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_31_0();
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_20_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_19_4(v13, (__n128)xmmword_467710);
  uint64_t v15 = OUTLINED_FUNCTION_19_7((uint64_t)v14, (uint64_t)"unsupportedReason");
  OUTLINED_FUNCTION_39_0(v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  char v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v19();
  }
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  OUTLINED_FUNCTION_26_2(v11 + 27);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t PhoneCallControlCATs.unsupportedSwitchToFaceTime(unsupportedReason:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_10_45(a1, 0x8000000000492220);
}

uint64_t PhoneCallControlCATs.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return PhoneCallControlCATs.init(templateDir:options:globals:)(a1, a2);
}

uint64_t PhoneCallControlCATs.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CATOption();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a2, v5);
  uint64_t v10 = CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v10;
}

unint64_t lazy protocol witness table accessor for type PhoneCallControlCATs.Properties and conformance PhoneCallControlCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallControlCATs.Properties and conformance PhoneCallControlCATs.Properties;
  if (!lazy protocol witness table cache variable for type PhoneCallControlCATs.Properties and conformance PhoneCallControlCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallControlCATs.Properties and conformance PhoneCallControlCATs.Properties);
  }
  return result;
}

uint64_t type metadata accessor for PhoneCallControlCATs()
{
  uint64_t result = type metadata singleton initialization cache for PhoneCallControlCATs;
  if (!type metadata singleton initialization cache for PhoneCallControlCATs) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for PhoneCallControlCATs()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for PhoneCallControlCATs()
{
  return type metadata accessor for PhoneCallControlCATs();
}

unsigned char *storeEnumTagSinglePayload for PhoneCallControlCATs.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2A0AC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallControlCATs.Properties()
{
  return &type metadata for PhoneCallControlCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_10_45(uint64_t a1, uint64_t a2)
{
  return PhoneCallControlCATs.callControl(callControlAction:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_11_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return PhoneCallControlCATs.callControl(callControlAction:completion:)(a1, a2, a3, a4, a5 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a6);
}

uint64_t OUTLINED_FUNCTION_32_19(uint64_t result, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = result;
  return result;
}

uint64_t FirstPartyAnnotatedAppStore.init(featureManager:appExistsPredicate:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t FirstPartyAnnotatedAppStore.getDefaultApp(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_1_74(a1);
  if (dispatch thunk of DeviceState.isMac.getter())
  {
    if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
      swift_once();
    }
    unsigned int v4 = &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
  }
  else
  {
    OUTLINED_FUNCTION_1_74(a1);
    if (dispatch thunk of DeviceState.isWatch.getter())
    {
      if (one-time initialization token for siriPhoneWatchExtension != -1) {
        swift_once();
      }
      unsigned int v4 = &static DefaultPhoneApps.siriPhoneWatchExtension;
    }
    else
    {
      OUTLINED_FUNCTION_1_74(a1);
      if (dispatch thunk of DeviceState.isXRDevice.getter())
      {
        if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
          swift_once();
        }
        unsigned int v4 = &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
      }
      else
      {
        if (one-time initialization token for siriPhoneExtension != -1) {
          swift_once();
        }
        unsigned int v4 = &static DefaultPhoneApps.siriPhoneExtension;
      }
    }
  }
  uint64_t v5 = v4[5];
  char v6 = *((unsigned char *)v4 + 32);
  uint64_t v8 = v4[2];
  uint64_t v7 = v4[3];
  uint64_t v10 = *v4;
  uint64_t v9 = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v5;
  return result;
}

Swift::Bool __swiftcall AnnotatedAppFinder.isInstalledOnDevice(appBundleId:)(Swift::String appBundleId)
{
  object = appBundleId._object;
  uint64_t countAndFlagsBits = appBundleId._countAndFlagsBits;
  objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v3 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(countAndFlagsBits, (uint64_t)object, 0);
  if (v3)
  {

    LOBYTE(v3) = 1;
  }
  return (char)v3;
}

uint64_t one-time initialization function for defaultFirstPartyBundleIds()
{
  uint64_t result = closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultFirstPartyBundleIds();
  static FirstPartyAnnotatedAppStore.defaultFirstPartyBundleIds = result;
  return result;
}

uint64_t closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultFirstPartyBundleIds()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_474610;
  *(void *)(v0 + 32) = 0xD000000000000017;
  *(void *)(v0 + 40) = 0x8000000000493240;
  *(void *)(v0 + 48) = 0xD000000000000012;
  *(void *)(v0 + 56) = 0x8000000000492070;
  if (one-time initialization token for macFaceTimeBundleId != -1) {
    swift_once();
  }
  uint64_t v1 = unk_5D4E10;
  *(void *)(v0 + 64) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
  *(void *)(v0 + 72) = v1;
  *(void *)(v0 + 80) = 0xD000000000000012;
  *(void *)(v0 + 88) = 0x8000000000497F90;
  *(void *)(v0 + 96) = 0xD000000000000012;
  *(void *)(v0 + 104) = 0x8000000000493260;
  *(void *)(v0 + 112) = 0xD000000000000013;
  *(void *)(v0 + 120) = 0x8000000000493280;
  *(void *)(v0 + 128) = 0xD000000000000015;
  *(void *)(v0 + 136) = 0x80000000004932A0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t *DefaultPhoneApps.siriPhoneFaceTimeMacExtension.unsafeMutableAddressor()
{
  if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
    swift_once();
  }
  return &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
}

uint64_t *DefaultPhoneApps.siriPhoneWatchExtension.unsafeMutableAddressor()
{
  if (one-time initialization token for siriPhoneWatchExtension != -1) {
    swift_once();
  }
  return &static DefaultPhoneApps.siriPhoneWatchExtension;
}

uint64_t *DefaultPhoneApps.siriPhoneFaceTimeExtension.unsafeMutableAddressor()
{
  if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
    swift_once();
  }
  return &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
}

uint64_t *DefaultPhoneApps.siriPhoneExtension.unsafeMutableAddressor()
{
  if (one-time initialization token for siriPhoneExtension != -1) {
    swift_once();
  }
  return &static DefaultPhoneApps.siriPhoneExtension;
}

void FirstPartyAnnotatedAppStore.getApp(for:device:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000013, 0x8000000000497F50, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v13 = OUTLINED_FUNCTION_5_56();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v10, v11, "#FirstPartyAnnotatedAppStore %s identifier=%s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (one-time initialization token for defaultFirstPartyBundleIds != -1) {
    swift_once();
  }
  uint64_t v16 = OUTLINED_FUNCTION_5_56();
  if (specialized Sequence<>.contains(_:)(v16, v17, v18))
  {
    uint64_t v19 = OUTLINED_FUNCTION_5_56();
    FirstPartyAnnotatedAppStore.getDefaultApp(for:device:)(v19, v20, a3, a4, a5, v21);
    uint64_t v22 = v47;
    uint64_t v23 = v48;
    uint64_t v24 = v49;
    uint64_t v25 = v50;
    uint64_t v26 = v51;
    uint64_t v27 = v52;
  }
  else
  {
    uint64_t v28 = OUTLINED_FUNCTION_5_56();
    if (((uint64_t (*)(uint64_t))a4)(v28))
    {
      __swift_project_boxed_opaque_existential_1(a3, a3[3]);
      if ((dispatch thunk of DeviceState.isWatch.getter() & 1) != 0
        && (uint64_t v47 = a1,
            uint64_t v48 = a2,
            lazy protocol witness table accessor for type String and conformance String(),
            lazy protocol witness table accessor for type String and conformance String(),
            (BidirectionalCollection<>.starts<A>(with:)() & 1) != 0))
      {
        if (one-time initialization token for walkieTalkieWatchExtension != -1) {
          swift_once();
        }
        uint64_t v22 = static DefaultPhoneApps.walkieTalkieWatchExtension;
        uint64_t v23 = *(void **)algn_5D4C98;
        uint64_t v24 = qword_5D4CA0;
        uint64_t v25 = unk_5D4CA8;
        uint64_t v26 = byte_5D4CB0;
        uint64_t v27 = (void *)qword_5D4CB8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v33, v34))
        {
          *(_WORD *)swift_slowAlloc() = 0;
          OUTLINED_FUNCTION_1_3(&dword_0, v35, v36, "#FirstPartyAnnotatedAppStore 1P app found on device, returning app with no supported intents.");
          OUTLINED_FUNCTION_6();
        }

        type metadata accessor for App();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_5_56();
        uint64_t v22 = App.__allocating_init(appIdentifier:)();
        uint64_t v24 = App.appIdentifier.getter();
        uint64_t v25 = v37;
        uint64_t v26 = 0;
        uint64_t v23 = &_swiftEmptySetSingleton;
        uint64_t v27 = &_swiftEmptySetSingleton;
      }
    }
    else
    {
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v29, v30))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_1_3(&dword_0, v31, v32, "#FirstPartyAnnotatedAppStore 1P app not found on device, returning nil.");
        OUTLINED_FUNCTION_6();
      }

      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
    }
  }
  OUTLINED_FUNCTION_2_92();
  OUTLINED_FUNCTION_2_92();
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000013, 0x8000000000497F50, &v46);
    OUTLINED_FUNCTION_2_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v40 + 12) = 2080;
    OUTLINED_FUNCTION_2_92();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnnotatedApp?);
    uint64_t v41 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v46);
    OUTLINED_FUNCTION_2_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_77();
    OUTLINED_FUNCTION_1_77();
    _os_log_impl(&dword_0, v38, v39, "#FirstPartyAnnotatedAppStore %s => %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_1_77();
    OUTLINED_FUNCTION_1_77();
  }

  *a6 = v22;
  a6[1] = (uint64_t)v23;
  a6[2] = v24;
  a6[3] = v25;
  a6[4] = v26;
  a6[5] = (uint64_t)v27;
}

void FirstPartyAnnotatedAppStore.getDefaultApp(for:device:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v9 = a2;
  uint64_t v10 = a1;
  uint64_t v12 = static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(a1, a2);
  if (v12)
  {
    uint64_t v9 = 0x8000000000492070;
    uint64_t v10 = 0xD000000000000012;
  }
  else
  {
    uint64_t v12 = swift_bridgeObjectRetain();
  }
  char v13 = (*(uint64_t (**)(uint64_t))(*(void *)a5 + 152))(v12);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v27);
  if ((v13 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
LABEL_14:
    FirstPartyAnnotatedAppStore.getDefaultApp(for:)(a3, (uint64_t)v28);
    App.systemExtensionBundleId.getter();
    App.systemUIExtensionBundleId.getter();
    App.pluginIdentifier.getter();
    type metadata accessor for App();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v21 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
    uint64_t v22 = v28[1];
    uint64_t v23 = v28[2];
    uint64_t v24 = v28[3];
    uint64_t v26 = v30;
    uint64_t v25 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  DeviceState.requiresAppForFaceTime.getter();
  char v15 = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  if ((v15 & 1) == 0) {
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  char v16 = static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(v10, v9);
  swift_bridgeObjectRelease();
  if (v16 & 1) == 0 || (a4(v10, v9)) {
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  id v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "#FirstPartyAnnotatedAppStore Device requires that FaceTime app is installed for FaceTime calls, returning nil.", v20, 2u);
    swift_slowDealloc();
  }

  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
LABEL_15:
  *a6 = v21;
  a6[1] = v22;
  a6[2] = v23;
  a6[3] = v24;
  a6[4] = v25;
  a6[5] = v26;
}

uint64_t *DefaultPhoneApps.walkieTalkieWatchExtension.unsafeMutableAddressor()
{
  if (one-time initialization token for walkieTalkieWatchExtension != -1) {
    swift_once();
  }
  return &static DefaultPhoneApps.walkieTalkieWatchExtension;
}

void one-time initialization function for supportedFirstPartyIntents()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_474610;
  id v1 = [objc_allocWithZone((Class)INStartCallIntent) init];
  id v2 = [v1 _className];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  id v6 = [objc_allocWithZone((Class)INSearchCallHistoryIntent) init];
  id v7 = [v6 _className];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v10;
  id v11 = [objc_allocWithZone((Class)INHangUpCallIntent) init];
  id v12 = [v11 _className];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v15;
  id v16 = [objc_allocWithZone((Class)INIdentifyIncomingCallerIntent) init];
  id v17 = [v16 _className];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(inited + 80) = v18;
  *(void *)(inited + 88) = v20;
  id v21 = [objc_allocWithZone((Class)INAnswerCallIntent) init];
  id v22 = [v21 _className];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  *(void *)(inited + 96) = v23;
  *(void *)(inited + 104) = v25;
  id v26 = [objc_allocWithZone((Class)INJoinCallIntent) init];
  id v27 = [v26 _className];

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)(inited + 112) = v28;
  *(void *)(inited + 120) = v30;
  id v31 = [objc_allocWithZone((Class)INAddCallParticipantIntent) init];
  id v32 = [v31 _className];

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;

  *(void *)(inited + 128) = v33;
  *(void *)(inited + 136) = v35;
  specialized Set.init(_nonEmptyArrayLiteral:)();
  static DefaultPhoneApps.supportedFirstPartyIntents = v36;
}

uint64_t one-time initialization function for siriPhoneExtension()
{
  type metadata accessor for App();
  swift_allocObject();
  uint64_t v0 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
  if (one-time initialization token for supportedFirstPartyIntents != -1) {
    swift_once();
  }
  uint64_t v1 = static DefaultPhoneApps.supportedFirstPartyIntents;
  swift_bridgeObjectRetain();
  uint64_t result = App.appIdentifier.getter();
  static DefaultPhoneApps.siriPhoneExtension = v0;
  *(void *)algn_5D4BD8 = v1;
  qword_5D4BE0 = result;
  unk_5D4BE8 = v3;
  byte_5D4BF0 = 0;
  qword_5D4BF8 = (uint64_t)&_swiftEmptySetSingleton;
  return result;
}

uint64_t static DefaultPhoneApps.siriPhoneExtension.getter()
{
  if (one-time initialization token for siriPhoneExtension != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_54((uint64_t)&static DefaultPhoneApps.siriPhoneExtension);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t one-time initialization function for siriPhoneWatchExtension()
{
  type metadata accessor for App();
  swift_allocObject();
  uint64_t v0 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_46DE40;
  id v2 = [objc_allocWithZone((Class)INStartCallIntent) init];
  id v3 = [v2 _className];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  id v7 = [objc_allocWithZone((Class)INSearchCallHistoryIntent) init];
  id v8 = [v7 _className];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v11;
  id v12 = [objc_allocWithZone((Class)INHangUpCallIntent) init];
  id v13 = [v12 _className];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v16;
  id v17 = [objc_allocWithZone((Class)INIdentifyIncomingCallerIntent) init];
  id v18 = [v17 _className];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *(void *)(inited + 80) = v19;
  *(void *)(inited + 88) = v21;
  id v22 = [objc_allocWithZone((Class)INAnswerCallIntent) init];
  id v23 = [v22 _className];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(inited + 96) = v24;
  *(void *)(inited + 104) = v26;
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v28 = v27;
  uint64_t result = App.appIdentifier.getter();
  static DefaultPhoneApps.siriPhoneWatchExtension = v0;
  *(void *)algn_5D4C08 = v28;
  qword_5D4C10 = result;
  unk_5D4C18 = v30;
  byte_5D4C20 = 0;
  qword_5D4C28 = (uint64_t)&_swiftEmptySetSingleton;
  return result;
}

uint64_t static DefaultPhoneApps.siriPhoneWatchExtension.getter()
{
  if (one-time initialization token for siriPhoneWatchExtension != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_54((uint64_t)&static DefaultPhoneApps.siriPhoneWatchExtension);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t one-time initialization function for siriPhoneFaceTimeExtension()
{
  type metadata accessor for App();
  swift_allocObject();
  OUTLINED_FUNCTION_6_62();
  uint64_t v0 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
  if (one-time initialization token for supportedFirstPartyIntents != -1) {
    swift_once();
  }
  uint64_t v1 = static DefaultPhoneApps.supportedFirstPartyIntents;
  swift_bridgeObjectRetain();
  uint64_t result = App.appIdentifier.getter();
  static DefaultPhoneApps.siriPhoneFaceTimeExtension = v0;
  *(void *)algn_5D4C38 = v1;
  qword_5D4C40 = result;
  unk_5D4C48 = v3;
  byte_5D4C50 = 0;
  qword_5D4C58 = (uint64_t)&_swiftEmptySetSingleton;
  return result;
}

uint64_t static DefaultPhoneApps.siriPhoneFaceTimeExtension.getter()
{
  if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_54((uint64_t)&static DefaultPhoneApps.siriPhoneFaceTimeExtension);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t one-time initialization function for siriPhoneFaceTimeMacExtension()
{
  if (one-time initialization token for macFaceTimeBundleId != -1) {
    swift_once();
  }
  type metadata accessor for App();
  swift_allocObject();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_62();
  uint64_t v0 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467720;
  id v2 = [objc_allocWithZone((Class)INStartCallIntent) init];
  id v3 = [v2 _className];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  id v7 = [objc_allocWithZone((Class)INSearchCallHistoryIntent) init];
  id v8 = [v7 _className];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v11;
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v13 = v12;
  uint64_t result = App.appIdentifier.getter();
  static DefaultPhoneApps.siriPhoneFaceTimeMacExtension = v0;
  *(void *)algn_5D4C68 = v13;
  qword_5D4C70 = result;
  unk_5D4C78 = v15;
  byte_5D4C80 = 0;
  qword_5D4C88 = (uint64_t)&_swiftEmptySetSingleton;
  return result;
}

uint64_t outlined copy of AnnotatedApp?(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t static DefaultPhoneApps.siriPhoneFaceTimeMacExtension.getter()
{
  if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_54((uint64_t)&static DefaultPhoneApps.siriPhoneFaceTimeMacExtension);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t one-time initialization function for walkieTalkieWatchExtension()
{
  type metadata accessor for App();
  swift_allocObject();
  uint64_t v0 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467710;
  id v2 = [objc_allocWithZone((Class)INStartCallIntent) init];
  id v3 = [v2 _className];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v8 = v7;
  uint64_t result = App.appIdentifier.getter();
  static DefaultPhoneApps.walkieTalkieWatchExtension = v0;
  *(void *)algn_5D4C98 = v8;
  qword_5D4CA0 = result;
  unk_5D4CA8 = v10;
  byte_5D4CB0 = 0;
  qword_5D4CB8 = (uint64_t)&_swiftEmptySetSingleton;
  return result;
}

uint64_t static DefaultPhoneApps.walkieTalkieWatchExtension.getter()
{
  if (one-time initialization token for walkieTalkieWatchExtension != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_54((uint64_t)&static DefaultPhoneApps.walkieTalkieWatchExtension);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for FirstPartyAnnotatedAppStore()
{
  swift_release();

  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for FirstPartyAnnotatedAppStore(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FirstPartyAnnotatedAppStore(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FirstPartyAnnotatedAppStore(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FirstPartyAnnotatedAppStore(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FirstPartyAnnotatedAppStore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FirstPartyAnnotatedAppStore()
{
  return &type metadata for FirstPartyAnnotatedAppStore;
}

ValueMetadata *type metadata accessor for DefaultPhoneApps()
{
  return &type metadata for DefaultPhoneApps;
}

uint64_t OUTLINED_FUNCTION_0_54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)uint64_t v1 = *(void *)a1;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v7;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_77()
{
  return outlined consume of AnnotatedApp?(v0);
}

uint64_t OUTLINED_FUNCTION_2_92()
{
  return outlined copy of AnnotatedApp?(v0);
}

PhoneCallFlowDelegatePlugin::SuggestionsCATs::Properties_optional __swiftcall SuggestionsCATs.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of SuggestionsCATs.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::SuggestionsCATs::Properties_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::SuggestionsCATs::Properties_optional)v3;
  }
}

unint64_t SuggestionsCATs.Properties.rawValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001FLL;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000021;
    }
    else {
      return 0xD000000000000022;
    }
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SuggestionsCATs.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SuggestionsCATs.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SuggestionsCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SuggestionsCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SuggestionsCATs.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SuggestionsCATs::Properties_optional *a2@<X8>)
{
  result.int value = SuggestionsCATs.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SuggestionsCATs.Properties@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SuggestionsCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void SuggestionsCATs.phoneCall_StartCall(name:hasReference:thirdPartyAppName:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v18[-v9];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_24_3();
  *(_OWORD *)(v11 + 16) = xmmword_46A250;
  uint64_t v12 = (uint64_t *)(v11 + 48);
  uint64_t v13 = OUTLINED_FUNCTION_15_37(v11);
  outlined init with copy of SpeakableString?(v13, (uint64_t)v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_22_35((uint64_t)v10);
  if (v15)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v10, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v12 = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
  }
  else
  {
    *(void *)(v11 + 72) = v14;
    __swift_allocate_boxed_opaque_existential_1(v12);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v16 + 32))();
  }
  OUTLINED_FUNCTION_8_71();
  *(unsigned char *)(v11 + 96) = v3 & 1;
  *(void *)(v11 + 120) = &type metadata for Bool;
  *(void *)(v11 + 128) = 0xD000000000000011;
  *(void *)(v11 + 136) = 0x80000000004916D0;
  outlined init with copy of SpeakableString?(v1, (uint64_t)v8, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_22_35((uint64_t)v8);
  if (v15)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v8, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v11 + 144) = 0u;
    *(_OWORD *)(v11 + 160) = 0u;
  }
  else
  {
    *(void *)(v11 + 168) = v14;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v11 + 144));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v17 + 32))();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SuggestionsCATs.phoneCall_StartCall(name:hasReference:thirdPartyAppName:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  *(unsigned char *)(v1 + 88) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v6);
  *(void *)(v1 + 48) = swift_task_alloc();
  *(void *)(v1 + 56) = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  char v7;
  uint64_t v8;
  void (*v9)(void);
  void *v10;
  uint64_t v11;
  uint64_t (*v13)(uint64_t, unint64_t, unint64_t, uint64_t);
  uint64_t v14;

  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = OUTLINED_FUNCTION_24_3();
  v0[8] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_6_63(v3);
  outlined init with copy of SpeakableString?(v2, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = type metadata accessor for SpeakableString();
  if (OUTLINED_FUNCTION_60(v4) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0[7], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v3 + 72) = v2;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 48));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v5();
  }
  uint64_t v6 = v0[6];
  OUTLINED_FUNCTION_2_26();
  *(unsigned char *)(v3 + 96) = v7;
  *(void *)(v3 + 120) = &type metadata for Bool;
  *(void *)(v3 + 128) = 0xD000000000000011;
  *(void *)(v3 + 136) = 0x80000000004916D0;
  outlined init with copy of SpeakableString?(v8, v6, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v6, 1, v2) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0[6], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v3 + 168) = v2;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 144));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v9();
  }
  uint64_t v10 = (void *)OUTLINED_FUNCTION_3_0();
  v0[9] = v10;
  *uint64_t v10 = v0;
  v10[1] = SuggestionsCATs.phoneCall_StartCall(name:hasReference:thirdPartyAppName:);
  uint64_t v11 = v0[2];
  return v13(v11, 0xD00000000000001FLL, 0x800000000048C650, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  uint64_t *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 80) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = swift_task_alloc();
  *(void *)(v1 + 48) = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  char v7;
  uint64_t v8;
  void (*v9)(void);
  void *v10;
  uint64_t (*v12)(unint64_t, unint64_t, uint64_t);
  uint64_t v13;

  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = OUTLINED_FUNCTION_24_3();
  v0[7] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_6_63(v3);
  outlined init with copy of SpeakableString?(v2, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = type metadata accessor for SpeakableString();
  if (OUTLINED_FUNCTION_60(v4) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0[6], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v3 + 72) = v2;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 48));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v5();
  }
  uint64_t v6 = v0[5];
  OUTLINED_FUNCTION_2_26();
  *(unsigned char *)(v3 + 96) = v7;
  *(void *)(v3 + 120) = &type metadata for Bool;
  *(void *)(v3 + 128) = 0xD000000000000011;
  *(void *)(v3 + 136) = 0x80000000004916D0;
  outlined init with copy of SpeakableString?(v8, v6, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v6, 1, v2) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0[5], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v3 + 168) = v2;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 144));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v9();
  }
  uint64_t v10 = (void *)OUTLINED_FUNCTION_3_0();
  v0[8] = v10;
  *uint64_t v10 = v0;
  v10[1] = SuggestionsCATs.phoneCall_StartCall(name:hasReference:thirdPartyAppName:);
  return v12(0xD00000000000001FLL, 0x800000000048C650, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  uint64_t *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

void SuggestionsCATs.phoneCall_StartCall(name:hasReference:thirdPartyAppName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_24_0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v27 = OUTLINED_FUNCTION_11_0(v26);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  id v32 = (char *)&a9 - v31;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v33 = OUTLINED_FUNCTION_24_3();
  *(_OWORD *)(v33 + 16) = xmmword_46A250;
  uint64_t v34 = (uint64_t *)(v33 + 48);
  uint64_t v35 = OUTLINED_FUNCTION_16_40(v33);
  outlined init with copy of SpeakableString?(v35, (uint64_t)v32, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v36 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_0_3((uint64_t)v32);
  if (v37)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v32, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v34 = 0u;
    *(_OWORD *)(v33 + 64) = 0u;
  }
  else
  {
    *(void *)(v33 + 72) = v36;
    __swift_allocate_boxed_opaque_existential_1(v34);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v38 + 32))();
  }
  OUTLINED_FUNCTION_9_56();
  *(unsigned char *)(v33 + 96) = v25 & 1;
  *(void *)(v33 + 120) = &type metadata for Bool;
  *(void *)(v33 + 128) = 0xD000000000000011;
  *(void *)(v33 + 136) = 0x80000000004916D0;
  outlined init with copy of SpeakableString?(v23, (uint64_t)v30, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_0_3((uint64_t)v30);
  if (v37)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v30, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v33 + 144) = 0u;
    *(_OWORD *)(v33 + 160) = 0u;
  }
  else
  {
    *(void *)(v33 + 168) = v36;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v33 + 144));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v39 + 32))();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void SuggestionsCATs.phoneCall_StartFTCall(name:hasReference:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  char v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v5 + 16) = xmmword_467720;
  uint64_t v6 = (uint64_t *)(v5 + 48);
  uint64_t v7 = OUTLINED_FUNCTION_15_37(v5);
  outlined init with copy of SpeakableString?(v7, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_22_35(v0);
  if (v9)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v6 = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
  }
  else
  {
    *(void *)(v5 + 72) = v8;
    __swift_allocate_boxed_opaque_existential_1(v6);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v10 + 32))();
  }
  OUTLINED_FUNCTION_8_71();
  *(void *)(v5 + 120) = &type metadata for Bool;
  *(unsigned char *)(v5 + 96) = v2 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SuggestionsCATs.phoneCall_StartFTCall(name:hasReference:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, unint64_t, unint64_t, uint64_t);
  uint64_t v12;

  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = OUTLINED_FUNCTION_36_2();
  v0[6] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_467720;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  OUTLINED_FUNCTION_6_63(v3);
  outlined init with copy of SpeakableString?(v2, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  if (OUTLINED_FUNCTION_37_2(v5) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0[5], &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v2;
    __swift_allocate_boxed_opaque_existential_1(v4);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v6 + 32))();
  }
  OUTLINED_FUNCTION_2_26();
  *(void *)(v3 + 120) = &type metadata for Bool;
  *(unsigned char *)(v3 + 96) = v7;
  uint64_t v8 = (void *)OUTLINED_FUNCTION_9_0();
  v0[7] = v8;
  *uint64_t v8 = v0;
  v8[1] = SuggestionsCATs.phoneCall_StartFTCall(name:hasReference:);
  char v9 = v0[2];
  return v11(v9, 0xD000000000000021, 0x800000000048C670, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  uint64_t *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 64) = v2;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  *(void *)(v1 + 32) = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t (*v10)(unint64_t, unint64_t, uint64_t);
  uint64_t v11;

  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = OUTLINED_FUNCTION_36_2();
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_467720;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  OUTLINED_FUNCTION_6_63(v3);
  outlined init with copy of SpeakableString?(v2, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  if (OUTLINED_FUNCTION_37_2(v5) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0[4], &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v2;
    __swift_allocate_boxed_opaque_existential_1(v4);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v6 + 32))();
  }
  OUTLINED_FUNCTION_2_26();
  *(void *)(v3 + 120) = &type metadata for Bool;
  *(unsigned char *)(v3 + 96) = v7;
  uint64_t v8 = (void *)OUTLINED_FUNCTION_9_0();
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = SuggestionsCATs.phoneCall_StartFTCall(name:hasReference:);
  return v10(0xD000000000000021, 0x800000000048C670, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  uint64_t *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t SuggestionsCATs.phoneCall_StartFTCall(name:hasReference:)(uint64_t a1, char a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v7 + 16) = xmmword_467720;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  uint64_t v9 = OUTLINED_FUNCTION_16_40(v7);
  outlined init with copy of SpeakableString?(v9, (uint64_t)v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_0_3((uint64_t)v6);
  if (v11)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v6, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v10;
    __swift_allocate_boxed_opaque_existential_1(v8);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v12 + 32))();
  }
  OUTLINED_FUNCTION_9_56();
  *(void *)(v7 + 120) = &type metadata for Bool;
  *(unsigned char *)(v7 + 96) = a2 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  return swift_bridgeObjectRelease();
}

uint64_t SuggestionsCATs.phoneCall_StartGFTCall(completion:)()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
}

uint64_t SuggestionsCATs.phoneCall_StartGFTCall()(uint64_t a1)
{
  uint64_t v3 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v5(a1, 0xD000000000000022, 0x800000000048C6A0, _swiftEmptyArrayStorage);
}

uint64_t SuggestionsCATs.phoneCall_StartGFTCall()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v3(0xD000000000000022, 0x800000000048C6A0, _swiftEmptyArrayStorage);
}

{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)();
}

#error "2A40FC: call analysis failed (funcsize=21)"

void SuggestionsCATs.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_24_0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = type metadata accessor for CATOption();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_53();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v30 = OUTLINED_FUNCTION_11_0(v29);
  __chkstk_darwin(v30);
  outlined init with copy of SpeakableString?(v26, (uint64_t)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v20, v24, v27);
  CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v24, v27);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v26, (uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_26_1();
}

unint64_t lazy protocol witness table accessor for type SuggestionsCATs.Properties and conformance SuggestionsCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type SuggestionsCATs.Properties and conformance SuggestionsCATs.Properties;
  if (!lazy protocol witness table cache variable for type SuggestionsCATs.Properties and conformance SuggestionsCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SuggestionsCATs.Properties and conformance SuggestionsCATs.Properties);
  }
  return result;
}

uint64_t type metadata accessor for SuggestionsCATs()
{
  uint64_t result = type metadata singleton initialization cache for SuggestionsCATs;
  if (!type metadata singleton initialization cache for SuggestionsCATs) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for SuggestionsCATs()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for SuggestionsCATs()
{
  return type metadata accessor for SuggestionsCATs();
}

unsigned char *storeEnumTagSinglePayload for SuggestionsCATs.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2A4414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionsCATs.Properties()
{
  return &type metadata for SuggestionsCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_6_63(uint64_t result)
{
  *(void *)(result + 32) = 1701667182;
  *(void *)(result + 40) = 0xE400000000000000;
  return result;
}

void OUTLINED_FUNCTION_8_71()
{
  strcpy((char *)(v0 + 80), "hasReference");
  *(unsigned char *)(v0 + 93) = 0;
  *(_WORD *)(v0 + 94) = -5120;
}

void OUTLINED_FUNCTION_9_56()
{
  strcpy((char *)(v0 + 80), "hasReference");
  *(unsigned char *)(v0 + 93) = 0;
  *(_WORD *)(v0 + 94) = -5120;
}

uint64_t OUTLINED_FUNCTION_15_37(uint64_t a1)
{
  *(void *)(a1 + 32) = 1701667182;
  *(void *)(a1 + 40) = 0xE400000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_16_40(uint64_t a1)
{
  *(void *)(a1 + 32) = 1701667182;
  *(void *)(a1 + 40) = 0xE400000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_22_35(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t PhoneCallActivityNotificationFlow.__allocating_init(_:sharedGlobals:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  PhoneCallActivityNotificationFlow.init(_:sharedGlobals:)(a1, a2);
  return v4;
}

uint64_t PhoneCallActivityNotificationFlow.init(_:sharedGlobals:)(uint64_t a1, long long *a2)
{
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  uint64_t v4 = *((void *)a2 + 3);
  uint64_t v5 = *((void *)a2 + 4);
  __swift_project_boxed_opaque_existential_1(a2, v4);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v7, v4, v5);
  outlined init with take of AppSelectionSignalComponent(v7, v2 + 32);
  outlined init with take of AppSelectionSignalComponent(a2, v2 + 72);
  return v2;
}

uint64_t PhoneCallActivityNotificationFlow.on(input:)()
{
  swift_retain();
  char v0 = dispatch thunk of AnyFlow.on(input:)();
  swift_release();
  return v0 & 1;
}

uint64_t PhoneCallActivityNotificationFlow.execute(completion:)()
{
  type metadata accessor for PhoneCallActivityNotificationFlow();
  lazy protocol witness table accessor for type PhoneCallActivityNotificationFlow and conformance PhoneCallActivityNotificationFlow(&lazy protocol witness table cache variable for type PhoneCallActivityNotificationFlow and conformance PhoneCallActivityNotificationFlow, v0, (void (*)(uint64_t))type metadata accessor for PhoneCallActivityNotificationFlow);
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t type metadata accessor for PhoneCallActivityNotificationFlow()
{
  return self;
}

uint64_t PhoneCallActivityNotificationFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return _swift_task_switch(PhoneCallActivityNotificationFlow.execute(), 0, 0);
}

uint64_t PhoneCallActivityNotificationFlow.execute()()
{
  if (*(unsigned char *)(v0[9] + 16))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_0, v2, v3, "Activity Notification: Posted", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = v0[9];

    v0[2] = *(void *)(v5 + 24);
    type metadata accessor for AnyFlow();
    Flow.eraseToAnyFlow()();
    static ExecuteResponse.complete(next:)();
    swift_release();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "Activity Notification: Posting", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v10 = (void *)v0[9];

    uint64_t v11 = v10[12];
    uint64_t v12 = v10[13];
    __swift_project_boxed_opaque_existential_1(v10 + 9, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
    uint64_t v14 = v0[5];
    uint64_t v13 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v14);
    uint64_t v15 = type metadata accessor for PhoneCallNotificationFlowStrategy();
    v0[7] = swift_allocObject();
    uint64_t v16 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 80);
    uint64_t v17 = lazy protocol witness table accessor for type PhoneCallActivityNotificationFlow and conformance PhoneCallActivityNotificationFlow(&lazy protocol witness table cache variable for type PhoneCallNotificationFlowStrategy and conformance PhoneCallNotificationFlowStrategy, 255, (void (*)(uint64_t))type metadata accessor for PhoneCallNotificationFlowStrategy);
    v16(v0 + 7, v15, v17, v14, v13);
    swift_release();
    swift_retain();
    static ExecuteResponse.ongoing(next:childCompletion:)();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  }
  id v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

Swift::Void __swiftcall PhoneCallActivityNotificationFlow.overrideStateForTesting(state:)(PhoneCallFlowDelegatePlugin::PhoneCallActivityNotificationFlow::State state)
{
  *(unsigned char *)(v1 + 16) = state & 1;
}

uint64_t PhoneCallActivityNotificationFlow.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return v0;
}

uint64_t PhoneCallActivityNotificationFlow.__deallocating_deinit()
{
  PhoneCallActivityNotificationFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance PhoneCallActivityNotificationFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance PhoneCallActivityNotificationFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t protocol witness for Flow.execute() in conformance PhoneCallActivityNotificationFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 184) + **(int **)(**(void **)v1 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = protocol witness for Flow.execute() in conformance PhoneFlow<A, B>;
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance PhoneCallActivityNotificationFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PhoneCallActivityNotificationFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t lazy protocol witness table accessor for type PhoneCallActivityNotificationFlow and conformance PhoneCallActivityNotificationFlow(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void partial apply for closure #1 in PhoneCallActivityNotificationFlow.execute()()
{
  *(unsigned char *)(v0 + 16) = 1;
}

unint64_t lazy protocol witness table accessor for type PhoneCallActivityNotificationFlow.State and conformance PhoneCallActivityNotificationFlow.State()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallActivityNotificationFlow.State and conformance PhoneCallActivityNotificationFlow.State;
  if (!lazy protocol witness table cache variable for type PhoneCallActivityNotificationFlow.State and conformance PhoneCallActivityNotificationFlow.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallActivityNotificationFlow.State and conformance PhoneCallActivityNotificationFlow.State);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PhoneCallActivityNotificationFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2A4DECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallActivityNotificationFlow.State()
{
  return &type metadata for PhoneCallActivityNotificationFlow.State;
}

uint64_t TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  v1[189] = v0;
  v1[183] = v4;
  v1[177] = v2;
  v1[171] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  OUTLINED_FUNCTION_19_0(v6);
  v1[195] = v7;
  v1[201] = *(void *)(v8 + 64);
  v1[207] = swift_task_alloc();
  v1[213] = swift_task_alloc();
  uint64_t v9 = *(void *)(v3 - 8);
  v1[214] = v9;
  v1[215] = *(void *)(v9 + 64);
  v1[216] = swift_task_alloc();
  v1[217] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  uint64_t v1 = v0[217];
  uint64_t v19 = v0[216];
  uint64_t v2 = v0[215];
  uint64_t v3 = v0[214];
  uint64_t v4 = v0[213];
  uint64_t v20 = v0[207];
  uint64_t v5 = v0[195];
  uint64_t v6 = v0[183];
  uint64_t v15 = v6;
  uint64_t v7 = v0[177];
  uint64_t v8 = v0[171];
  uint64_t v17 = v0[189];
  id v18 = v8;
  uint64_t v16 = *(void (**)(uint64_t))(v3 + 16);
  v16(v1);
  outlined init with copy of AppDisplayInfo?(v8, v4);
  uint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[218] = v11;
  *(void *)(v11 + 16) = v7;
  *(void *)(v11 + 24) = v6;
  uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  v12(v11 + v9, v1, v7);
  outlined init with take of AppDisplayInfo?(v4, v11 + v10);
  swift_retain();
  swift_asyncLet_begin();
  ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v19, v17, v7);
  outlined init with copy of AppDisplayInfo?(v18, v20);
  uint64_t v13 = swift_allocObject();
  v0[219] = v13;
  *(void *)(v13 + 16) = v7;
  *(void *)(v13 + 24) = v15;
  v12(v13 + v9, v19, v7);
  outlined init with take of AppDisplayInfo?(v20, v13 + v10);
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 82, v0 + 169, TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:), v0 + 178);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  v1[220] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2);
  }
  else
  {
    v1[221] = v1[169];
    v1[222] = v1[170];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 167, TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:), v1 + 196);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_16_1();
  v1[223] = v0;
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[224] = v1[167];
    v1[225] = v1[168];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_finish(v1 + 2);
  }
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:));
}

{
  void *v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_18_3();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  uint64_t v2 = v0[225];
  uint64_t v3 = v0[224];
  uint64_t v4 = v0[222];
  uint64_t v5 = v0[221];
  return v1(v5, v4, v3, v2);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:));
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:));
}

void TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_10_46();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_15_38();
  __asm { BRAA            X1, X16 }
}

{
  uint64_t v1;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_10_46();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_15_38();
  __asm { BRAA            X1, X16 }
}

uint64_t implicit closure #1 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *uint64_t v9 = v5;
  v9[1] = implicit closure #1 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:);
  return v11(a3, a4, a5);
}

uint64_t implicit closure #1 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_8_27();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
    return v11();
  }
  else
  {
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v13, v14, v15);
  }
}

uint64_t outlined init with copy of AppDisplayInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of AppDisplayInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for implicit closure #1 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_1();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  OUTLINED_FUNCTION_13(v0);
  OUTLINED_FUNCTION_14_38();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  OUTLINED_FUNCTION_11_50();
  OUTLINED_FUNCTION_15_38();
  return implicit closure #1 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)(v4, v5, v6, v7, v8);
}

uint64_t implicit closure #2 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *uint64_t v9 = v5;
  v9[1] = implicit closure #2 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:);
  return v11(a3, a4, a5);
}

uint64_t implicit closure #2 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_8_27();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
    return v11();
  }
  else
  {
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v13, v14, v15);
  }
}

uint64_t objectdestroyTm_15()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  OUTLINED_FUNCTION_19_0(v8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v5 + v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v12 + 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  uint64_t v14 = type metadata accessor for AppDisplayInfo();
  if (!__swift_getEnumTagSinglePayload(v0 + v11, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v0 + v11, v14);
  }

  return _swift_deallocObject(v0, v11 + v13, v4 | v10 | 7);
}

uint64_t partial apply for implicit closure #2 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_1();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  OUTLINED_FUNCTION_13(v0);
  OUTLINED_FUNCTION_14_38();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  OUTLINED_FUNCTION_11_50();
  OUTLINED_FUNCTION_15_38();
  return implicit closure #2 in TCCTemplatesProviding.promptToEnableAppSnippetTitleAndSubtitle(appDisplayInfo:)(v4, v5, v6, v7, v8);
}

uint64_t TCCTemplatesProvider.promptToEnableApp(appDisplayInfo:deviceState:)()
{
  OUTLINED_FUNCTION_1_0();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = type metadata accessor for TCCResponses();
  v0[4] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v0[5] = v4;
  v0[6] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  TCCResponses.init()();
  uint64_t v1 = Dictionary.init(dictionaryLiteral:)();
  v0[7] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = TCCTemplatesProvider.promptToEnableApp(appDisplayInfo:deviceState:);
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  return TCCResponses.promptToEnableApp(appDisplayInfo:deviceState:catOverrides:)(v4, v3, v1);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = (void *)*v1;
  OUTLINED_FUNCTION_8_27();
  void *v4 = v3;
  void *v4 = *v1;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[5] + 8))(v2[6], v2[4]);
  swift_bridgeObjectRelease();
  if (!v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_15_38();
    __asm { BRAA            X2, X16 }
  }
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_15_38();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TCCTemplatesProvider.promptToEnableAppSnippetSubtitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = protocol witness for LabelTemplatesProviding.yes() in conformance LabelTemplatesProvider;
  return static TCCTemplates.promptToEnableAppSnippetSubtitle(appDisplayInfo:)(v1);
}

uint64_t TCCTemplatesProvider.promptToEnableAppSnippetTitle(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = LabelTemplatesProvider.openApp(appDisplayInfo:);
  return static TCCTemplates.promptToEnableAppSnippetTitle(appDisplayInfo:)(v1);
}

uint64_t protocol witness for TCCTemplatesProviding.promptToEnableApp(appDisplayInfo:deviceState:) in conformance TCCTemplatesProvider()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return TCCTemplatesProvider.promptToEnableApp(appDisplayInfo:deviceState:)();
}

uint64_t protocol witness for TCCTemplatesProviding.promptToEnableAppSnippetSubtitle(appDisplayInfo:) in conformance TCCTemplatesProvider()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for LabelTemplatesProviding.yes() in conformance LabelTemplatesProvider;
  return TCCTemplatesProvider.promptToEnableAppSnippetSubtitle(appDisplayInfo:)();
}

uint64_t protocol witness for TCCTemplatesProviding.promptToEnableAppSnippetTitle(appDisplayInfo:) in conformance TCCTemplatesProvider()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = protocol witness for LabelTemplatesProviding.yes() in conformance LabelTemplatesProvider;
  return TCCTemplatesProvider.promptToEnableAppSnippetTitle(appDisplayInfo:)();
}

ValueMetadata *type metadata accessor for TCCTemplatesProvider()
{
  return &type metadata for TCCTemplatesProvider;
}

uint64_t OUTLINED_FUNCTION_10_46()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_11_50()
{
  return v0;
}

uint64_t PhoneStartCallIntent.Builder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PhoneStartCallIntent.Builder.init()();
  return v0;
}

void PhoneStartCallIntent.__allocating_init(callCapability:audioRoute:preferredCallProvider:destinationType:contacts:callGroups:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  type metadata accessor for PhoneStartCallIntent.Builder(0);
  swift_allocObject();
  PhoneStartCallIntent.Builder.init()();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v14 + 288))(a1);
  swift_release();
  OUTLINED_FUNCTION_3_80();
  (*(void (**)(uint64_t))(v15 + 304))(a2);
  swift_release();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v16 + 320))(a3);
  swift_release();
  OUTLINED_FUNCTION_3_80();
  (*(void (**)(uint64_t))(v17 + 336))(a4);
  swift_release();
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v18 + 352))(a5);
  swift_release();
  OUTLINED_FUNCTION_3_80();
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v19 + 368))(a6);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(v7 + 176))(v20);
  swift_release();
  outlined destroy of SpeakableString?(a4);
  outlined destroy of SpeakableString?(a3);
  outlined destroy of SpeakableString?(a2);
  outlined destroy of SpeakableString?(a1);
  OUTLINED_FUNCTION_26_1();
}

uint64_t key path setter for PhoneStartCallIntent.Builder.callCapability : PhoneStartCallIntent.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 136))(v6);
}

uint64_t PhoneStartCallIntent.Builder.callCapability.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_callCapability, a1);
}

uint64_t PhoneStartCallIntent.Builder.callCapability.setter(uint64_t a1)
{
  return PhoneStartCallIntent.Builder.callCapability.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_callCapability);
}

uint64_t (*PhoneStartCallIntent.Builder.callCapability.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneStartCallIntent.Builder.audioRoute : PhoneStartCallIntent.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 160))(v6);
}

uint64_t PhoneStartCallIntent.Builder.audioRoute.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_audioRoute, a1);
}

uint64_t PhoneStartCallIntent.Builder.audioRoute.setter(uint64_t a1)
{
  return PhoneStartCallIntent.Builder.callCapability.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_audioRoute);
}

uint64_t (*PhoneStartCallIntent.Builder.audioRoute.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneStartCallIntent.Builder.preferredCallProvider : PhoneStartCallIntent.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 184))(v6);
}

uint64_t PhoneStartCallIntent.Builder.preferredCallProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_preferredCallProvider, a1);
}

uint64_t PhoneStartCallIntent.Builder.preferredCallProvider.setter(uint64_t a1)
{
  return PhoneStartCallIntent.Builder.callCapability.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_preferredCallProvider);
}

uint64_t (*PhoneStartCallIntent.Builder.preferredCallProvider.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneStartCallIntent.Builder.destinationType : PhoneStartCallIntent.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 208))(v6);
}

uint64_t PhoneStartCallIntent.Builder.destinationType.getter@<X0>(uint64_t a1@<X8>)
{
  return PhoneCallProvider.Builder.preferredCallProvider.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_destinationType, a1);
}

uint64_t PhoneStartCallIntent.Builder.destinationType.setter(uint64_t a1)
{
  return PhoneStartCallIntent.Builder.callCapability.setter(a1, &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_destinationType);
}

uint64_t PhoneStartCallIntent.Builder.callCapability.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  OUTLINED_FUNCTION_0_38();
  outlined assign with take of SpeakableString?(a1, v4);
  return swift_endAccess();
}

uint64_t (*PhoneStartCallIntent.Builder.destinationType.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneStartCallIntent.Builder.contacts : PhoneStartCallIntent.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 232);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t PhoneStartCallIntent.Builder.contacts.getter()
{
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.contacts.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_36_21();
  void *v1 = a1;
  return swift_release();
}

uint64_t (*PhoneStartCallIntent.Builder.contacts.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneStartCallIntent.Builder.callGroups : PhoneStartCallIntent.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 256);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneStartCallIntent.Builder.callGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneStartCallIntent.Builder.callGroups.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_36_21();
  void *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneStartCallIntent.Builder.callGroups.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneStartCallIntent.Builder.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_callCapability;
  uint64_t v2 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  OUTLINED_FUNCTION_21_32(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_audioRoute);
  OUTLINED_FUNCTION_21_32(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_preferredCallProvider);
  OUTLINED_FUNCTION_21_32(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_destinationType);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_contacts) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_callGroups) = _swiftEmptyArrayStorage;
  return v0;
}

uint64_t type metadata accessor for PhoneStartCallIntent.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneStartCallIntent.Builder);
}

uint64_t PhoneStartCallIntent.Builder.__allocating_init(callCapability:audioRoute:preferredCallProvider:destinationType:contacts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  PhoneStartCallIntent.Builder.init(callCapability:audioRoute:preferredCallProvider:destinationType:contacts:)(a1, a2, a3, a4, a5);
  return v10;
}

void PhoneStartCallIntent.Builder.init(callCapability:audioRoute:preferredCallProvider:destinationType:contacts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_callCapability;
  uint64_t v10 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_15_8(v9);
  uint64_t v11 = v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_audioRoute;
  OUTLINED_FUNCTION_15_8(v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_audioRoute);
  uint64_t v12 = v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_preferredCallProvider;
  OUTLINED_FUNCTION_15_8(v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_preferredCallProvider);
  uint64_t v13 = v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_destinationType;
  OUTLINED_FUNCTION_15_8(v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_destinationType);
  uint64_t v14 = (void *)(v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_contacts);
  *(void *)(v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_contacts) = 0;
  *(void *)(v5 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_callGroups) = _swiftEmptyArrayStorage;
  uint64_t v15 = *(void (**)(void))(*(void *)(v10 - 8) + 32);
  OUTLINED_FUNCTION_27_25();
  v15();
  OUTLINED_FUNCTION_8_72();
  OUTLINED_FUNCTION_0_38();
  outlined assign with take of SpeakableString?(v6, v9);
  swift_endAccess();
  OUTLINED_FUNCTION_27_25();
  v15();
  OUTLINED_FUNCTION_8_72();
  OUTLINED_FUNCTION_0_38();
  outlined assign with take of SpeakableString?(v6, v11);
  swift_endAccess();
  OUTLINED_FUNCTION_27_25();
  v15();
  OUTLINED_FUNCTION_8_72();
  OUTLINED_FUNCTION_0_38();
  outlined assign with take of SpeakableString?(v6, v12);
  swift_endAccess();
  OUTLINED_FUNCTION_27_25();
  v15();
  OUTLINED_FUNCTION_8_72();
  OUTLINED_FUNCTION_0_38();
  outlined assign with take of SpeakableString?(v6, v13);
  swift_endAccess();
  swift_beginAccess();
  *uint64_t v14 = a5;
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneStartCallIntent.Builder.withCallCapability(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_22();
  uint64_t v3 = OUTLINED_FUNCTION_38_18();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withCallCapability(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  uint64_t v4 = OUTLINED_FUNCTION_43_18();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withAudioRoute(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_22();
  uint64_t v3 = OUTLINED_FUNCTION_38_18();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withAudioRoute(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  uint64_t v4 = OUTLINED_FUNCTION_43_18();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withPreferredCallProvider(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_22();
  uint64_t v3 = OUTLINED_FUNCTION_38_18();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withPreferredCallProvider(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  uint64_t v4 = OUTLINED_FUNCTION_43_18();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withDestinationType(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v1 = OUTLINED_FUNCTION_11_0(v0);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_0_16(v2, v6);
  OUTLINED_FUNCTION_22();
  uint64_t v3 = OUTLINED_FUNCTION_38_18();
  v4(v3);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withDestinationType(print:speak:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_19();
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  OUTLINED_FUNCTION_22();
  uint64_t v4 = OUTLINED_FUNCTION_43_18();
  v5(v4);
  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withContacts(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 232);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withContacts(_:)(uint64_t a1)
{
  if (a1) {
    a1 = (*(uint64_t (**)(void))(*(void *)a1 + 128))();
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 232))(a1);

  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.withCallGroups(_:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 256);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);

  return swift_retain();
}

uint64_t PhoneStartCallIntent.Builder.build()()
{
  type metadata accessor for PhoneStartCallIntent(0);
  uint64_t v0 = swift_allocObject();
  swift_retain();
  PhoneStartCallIntent.init(builder:)();
  return v0;
}

uint64_t PhoneStartCallIntent.__allocating_init(builder:)()
{
  uint64_t v0 = swift_allocObject();
  PhoneStartCallIntent.init(builder:)();
  return v0;
}

uint64_t type metadata accessor for PhoneStartCallIntent(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneStartCallIntent);
}

uint64_t PhoneStartCallIntent.Builder.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_callCapability);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_audioRoute);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_preferredCallProvider);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent7Builder_destinationType);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PhoneStartCallIntent.Builder.__deallocating_deinit()
{
  return PhoneStartCallIntent.Builder.__deallocating_deinit((void (*)(void))PhoneStartCallIntent.Builder.deinit);
}

unint64_t static PhoneStartCallIntent.catTypeName.getter()
{
  return OUTLINED_FUNCTION_7_62();
}

uint64_t key path setter for PhoneStartCallIntent.mockGlobals : PhoneStartCallIntent(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 160);
  id v4 = *a1;
  return v3(v2);
}

uint64_t (*PhoneStartCallIntent.mockGlobals.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t PhoneStartCallIntent.callCapability.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callCapability);
}

uint64_t PhoneStartCallIntent.audioRoute.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_audioRoute);
}

uint64_t PhoneStartCallIntent.preferredCallProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_preferredCallProvider);
}

uint64_t PhoneStartCallIntent.destinationType.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_6_1(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_destinationType);
}

uint64_t PhoneStartCallIntent.contacts.getter()
{
  return swift_retain();
}

uint64_t PhoneStartCallIntent.callGroups.getter()
{
  return swift_bridgeObjectRetain();
}

void *PhoneStartCallIntent.init(builder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_5_1();
  v0[2] = 0;
  OUTLINED_FUNCTION_36_12();
  (*(void (**)(void))(v4 + 128))();
  OUTLINED_FUNCTION_42_18(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callCapability);
  OUTLINED_FUNCTION_36_12();
  (*(void (**)(void))(v5 + 152))();
  OUTLINED_FUNCTION_42_18(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_audioRoute);
  OUTLINED_FUNCTION_36_12();
  (*(void (**)(void))(v6 + 176))();
  OUTLINED_FUNCTION_42_18(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_preferredCallProvider);
  OUTLINED_FUNCTION_36_12();
  (*(void (**)(void))(v7 + 200))();
  OUTLINED_FUNCTION_42_18(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_destinationType);
  OUTLINED_FUNCTION_36_12();
  *(void *)((char *)v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts) = (*(uint64_t (**)(void))(v8 + 224))();
  OUTLINED_FUNCTION_36_12();
  *(void *)((char *)v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callGroups) = (*(uint64_t (**)(void))(v9 + 248))();
  if (((*(uint64_t (**)(void))(*v0 + 184))() & 1) == 0)
  {
    uint64_t v10 = (void *)static Log.siriDialogEngine.getter();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_467710;
    OUTLINED_FUNCTION_26_6();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneStartCallIntent.Type);
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v14 = v13;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
  swift_release();
  return v1;
}

Swift::Bool __swiftcall PhoneStartCallIntent.allRequiredInputsHaveValues()()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_29_9();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - v7;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_33_17();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - v10;
  outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callCapability, (uint64_t)&v17 - v10);
  type metadata accessor for SpeakableString();
  int v12 = OUTLINED_FUNCTION_37_19((uint64_t)v11);
  outlined destroy of SpeakableString?((uint64_t)v11);
  if (v12 == 1) {
    return 0;
  }
  outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_audioRoute, v2);
  int v13 = OUTLINED_FUNCTION_37_19(v2);
  outlined destroy of SpeakableString?(v2);
  if (v13 == 1) {
    return 0;
  }
  outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_preferredCallProvider, (uint64_t)v8);
  int v14 = OUTLINED_FUNCTION_37_19((uint64_t)v8);
  outlined destroy of SpeakableString?((uint64_t)v8);
  if (v14 == 1) {
    return 0;
  }
  outlined init with copy of SpeakableString?(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_destinationType, v0);
  int v15 = OUTLINED_FUNCTION_37_19(v0);
  outlined destroy of SpeakableString?(v0);
  return v15 != 1
      && *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts) != 0;
}

void PhoneStartCallIntent.getProperty(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_33_17();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_31_12();
  uint64_t v13 = __chkstk_darwin(v12);
  int v15 = (char *)&v29 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v29 - v16;
  BOOL v18 = a1 == 0x617061436C6C6163 && a2 == 0xEE007974696C6962;
  if (v18 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callCapability, (uint64_t)v17);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_21_8((uint64_t)v17);
    if (!v18) {
      goto LABEL_32;
    }
    uint64_t v19 = (uint64_t)v17;
    goto LABEL_9;
  }
  BOOL v20 = a1 == 0x756F526F69647561 && a2 == 0xEA00000000006574;
  if (v20 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_audioRoute, (uint64_t)v15);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_21_8((uint64_t)v15);
    if (!v18) {
      goto LABEL_32;
    }
    uint64_t v19 = (uint64_t)v15;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x800000000048C170 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_preferredCallProvider, v5);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_21_8(v5);
    if (!v18) {
      goto LABEL_32;
    }
    uint64_t v19 = v5;
LABEL_9:
    outlined destroy of SpeakableString?(v19);
LABEL_10:
    *a3 = 0u;
    a3[1] = 0u;
LABEL_11:
    OUTLINED_FUNCTION_26_1();
    return;
  }
  BOOL v21 = a1 == 0x74616E6974736564 && a2 == 0xEF657079546E6F69;
  if (v21 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    outlined init with copy of SpeakableString?(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_destinationType, v4);
    type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_21_8(v4);
    if (!v18)
    {
LABEL_32:
      OUTLINED_FUNCTION_39_19();
      OUTLINED_FUNCTION_26_25();
      (*(void (**)(void))(v22 + 32))();
      goto LABEL_11;
    }
    uint64_t v19 = v4;
    goto LABEL_9;
  }
  BOOL v23 = a1 == 0x73746361746E6F63 && a2 == 0xE800000000000000;
  if (v23 || (OUTLINED_FUNCTION_4_20() & 1) != 0)
  {
    if (!*(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts)) {
      goto LABEL_10;
    }
    uint64_t v24 = type metadata accessor for PhonePersonList();
    OUTLINED_FUNCTION_40_17(v24);
    OUTLINED_FUNCTION_26_1();
    swift_retain();
  }
  else
  {
    BOOL v26 = a1 == 0x756F72476C6C6163 && a2 == 0xEA00000000007370;
    if (!v26 && (OUTLINED_FUNCTION_4_20() & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallGroup]);
    OUTLINED_FUNCTION_40_17(v27);
    OUTLINED_FUNCTION_26_1();
    swift_bridgeObjectRetain();
  }
}

PhoneCallFlowDelegatePlugin::PhoneStartCallIntent::CodingKeys_optional __swiftcall PhoneStartCallIntent.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneStartCallIntent.CodingKeys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return (PhoneCallFlowDelegatePlugin::PhoneStartCallIntent::CodingKeys_optional)6;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneStartCallIntent::CodingKeys_optional)v3;
  }
}

uint64_t PhoneStartCallIntent.CodingKeys.rawValue.getter()
{
  uint64_t result = OUTLINED_FUNCTION_30_21();
  switch(v1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_20_33();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_7_62();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_16_41();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_28_27();
      break;
    case 5:
      uint64_t result = 0x756F72476C6C6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t PhoneStartCallIntent.CodingKeys.stringValue.getter()
{
  uint64_t result = OUTLINED_FUNCTION_30_21();
  switch(v1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_20_33();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_7_62();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_16_41();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_28_27();
      break;
    case 5:
      uint64_t result = 0x756F72476C6C6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneStartCallIntent.CodingKeys()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneStartCallIntent.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneStartCallIntent.CodingKeys()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneStartCallIntent.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneStartCallIntent::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneStartCallIntent.CodingKeys@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneStartCallIntent::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneStartCallIntent.CodingKeys.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneStartCallIntent.CodingKeys@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PhoneStartCallIntent.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneStartCallIntent.CodingKeys()
{
  return PhoneStartCallIntent.CodingKeys.stringValue.getter();
}

PhoneCallFlowDelegatePlugin::PhoneStartCallIntent::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneStartCallIntent.CodingKeys@<W0>(uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneStartCallIntent::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneStartCallIntent.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneStartCallIntent.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneStartCallIntent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneStartCallIntent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneStartCallIntent.deinit()
{
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callCapability);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_audioRoute);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_preferredCallProvider);
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_destinationType);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PhoneStartCallIntent.__deallocating_deinit()
{
  return PhoneStartCallIntent.Builder.__deallocating_deinit((void (*)(void))PhoneStartCallIntent.deinit);
}

uint64_t PhoneStartCallIntent.Builder.__deallocating_deinit(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t PhoneStartCallIntent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneStartCallIntent.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for SpeakableString();
  _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  OUTLINED_FUNCTION_9_57();
  if (!v1)
  {
    OUTLINED_FUNCTION_9_57();
    OUTLINED_FUNCTION_9_57();
    OUTLINED_FUNCTION_9_57();
    type metadata accessor for PhonePersonList();
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(&lazy protocol witness table cache variable for type PhonePersonList and conformance PhonePersonList, (void (*)(uint64_t))type metadata accessor for PhonePersonList);
    OUTLINED_FUNCTION_24_29();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallGroup]);
    lazy protocol witness table accessor for type [PhoneCallGroup] and conformance <A> [A](&lazy protocol witness table cache variable for type [PhoneCallGroup] and conformance <A> [A], &lazy protocol witness table cache variable for type PhoneCallGroup and conformance PhoneCallGroup);
    OUTLINED_FUNCTION_24_29();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys);
  }
  return result;
}

uint64_t _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhoneStartCallIntent.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PhoneStartCallIntent.init(from:)(a1);
  return v2;
}

uint64_t PhoneStartCallIntent.init(from:)(void *a1)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_29_9();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_33_17();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_31_12();
  __chkstk_darwin(v10);
  uint64_t v27 = (char *)&v25 - v11;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneStartCallIntent.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v31 = v2;
  *(void *)(v2 + 16) = 0;
  uint64_t v15 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  lazy protocol witness table accessor for type PhoneStartCallIntent.CodingKeys and conformance PhoneStartCallIntent.CodingKeys();
  uint64_t v16 = v30;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16)
  {
    uint64_t v22 = (uint64_t)v29;
    uint64_t v21 = v31;

    type metadata accessor for PhoneStartCallIntent(0);
    OUTLINED_FUNCTION_26_6();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v26 = v3;
    uint64_t v30 = v13;
    type metadata accessor for SpeakableString();
    LOBYTE(v33) = 0;
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    uint64_t v17 = (uint64_t)v27;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of SpeakableString?(v17, v31 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callCapability);
    LOBYTE(v33) = 1;
    OUTLINED_FUNCTION_34_16();
    outlined init with take of SpeakableString?(v4, v31 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_audioRoute);
    LOBYTE(v33) = 2;
    uint64_t v19 = v26;
    uint64_t v27 = 0;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of SpeakableString?(v19, v31 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_preferredCallProvider);
    LOBYTE(v33) = 3;
    uint64_t v20 = v1;
    OUTLINED_FUNCTION_34_16();
    uint64_t v21 = v31;
    outlined init with take of SpeakableString?(v20, v31 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_destinationType);
    type metadata accessor for PhonePersonList();
    char v32 = 4;
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(&lazy protocol witness table cache variable for type PhonePersonList and conformance PhonePersonList, (void (*)(uint64_t))type metadata accessor for PhonePersonList);
    OUTLINED_FUNCTION_25_24();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(void *)(v21 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts) = v33;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallGroup]);
    char v32 = 5;
    lazy protocol witness table accessor for type [PhoneCallGroup] and conformance <A> [A](&lazy protocol witness table cache variable for type [PhoneCallGroup] and conformance <A> [A], &lazy protocol witness table cache variable for type PhoneCallGroup and conformance PhoneCallGroup);
    OUTLINED_FUNCTION_25_24();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v22 = (uint64_t)v29;
    uint64_t v23 = OUTLINED_FUNCTION_0_55();
    v24(v23);
    *(void *)(v21 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callGroups) = v33;
  }
  __swift_destroy_boxed_opaque_existential_1(v22);
  return v21;
}

uint64_t lazy protocol witness table accessor for type [PhoneCallGroup] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhoneCallGroup]);
    _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(a2, (void (*)(uint64_t))type metadata accessor for PhoneCallGroup);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in PhoneStartCallIntent()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(&lazy protocol witness table cache variable for type PhoneStartCallIntent and conformance PhoneStartCallIntent, (void (*)(uint64_t))type metadata accessor for PhoneStartCallIntent);
}

uint64_t base witness table accessor for Encodable in PhoneStartCallIntent()
{
  return _s16SiriDialogEngine15SpeakableStringVACSEAAWlTm_1(&lazy protocol witness table cache variable for type PhoneStartCallIntent and conformance PhoneStartCallIntent, (void (*)(uint64_t))type metadata accessor for PhoneStartCallIntent);
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhoneStartCallIntent()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhoneStartCallIntent()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t protocol witness for CATType.mockGlobals.getter in conformance PhoneStartCallIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhoneStartCallIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneStartCallIntent(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 168))();
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhoneStartCallIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t protocol witness for PhoneStartCallIntentProperties.callCapability.getter in conformance PhoneStartCallIntent@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_callCapability, a1);
}

uint64_t protocol witness for PhoneStartCallIntentProperties.audioRoute.getter in conformance PhoneStartCallIntent@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_audioRoute, a1);
}

uint64_t protocol witness for PhoneStartCallIntentProperties.preferredCallProvider.getter in conformance PhoneStartCallIntent@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_preferredCallProvider, a1);
}

uint64_t protocol witness for PhoneStartCallIntentProperties.destinationType.getter in conformance PhoneStartCallIntent@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(*v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_destinationType, a1);
}

uint64_t protocol witness for PhoneStartCallIntentProperties.contacts.getter in conformance PhoneStartCallIntent()
{
  return swift_retain();
}

uint64_t protocol witness for PhoneStartCallIntentProperties.callGroups.getter in conformance PhoneStartCallIntent()
{
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneStartCallIntent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 208))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneStartCallIntent()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

uint64_t sub_2A93F0()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_2A9434()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_2A9478()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_2A94BC()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_2A9500@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 224))();
  *a1 = result;
  return result;
}

uint64_t sub_2A954C@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 248))();
  *a1 = result;
  return result;
}

uint64_t sub_2A9598@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 152))();
  *a1 = result;
  return result;
}

uint64_t ObjC metadata update function for PhoneStartCallIntent()
{
  return type metadata accessor for PhoneStartCallIntent(0);
}

void type metadata completion function for PhoneStartCallIntent()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for PhoneStartCallIntent.Builder()
{
  return type metadata accessor for PhoneStartCallIntent.Builder(0);
}

void type metadata completion function for PhoneStartCallIntent.Builder()
{
  type metadata accessor for SpeakableString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for PhoneStartCallIntent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2A981CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneStartCallIntent.CodingKeys()
{
  return &type metadata for PhoneStartCallIntent.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_0_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_72()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_9_57()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_16_41()
{
  return 0x74616E6974736564;
}

uint64_t OUTLINED_FUNCTION_20_33()
{
  return 0x756F526F69647561;
}

uint64_t OUTLINED_FUNCTION_24_29()
{
  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_28_27()
{
  return 0x73746361746E6F63;
}

uint64_t OUTLINED_FUNCTION_30_21()
{
  return 0x617061436C6C6163;
}

uint64_t OUTLINED_FUNCTION_34_16()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_36_21()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_37_19(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_38_18()
{
  return v0;
}

uint64_t *OUTLINED_FUNCTION_39_19()
{
  v0[3] = v1;
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_42_18@<X0>(uint64_t a1@<X8>)
{
  return outlined init with take of SpeakableString?(v2, v1 + a1);
}

uint64_t OUTLINED_FUNCTION_43_18()
{
  return v0;
}

uint64_t DisambiguationItemWithDirectInvocationModel.id.getter()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = OUTLINED_FUNCTION_7_0();

  return v1(v0);
}

uint64_t DisambiguationItemWithDirectInvocationModel.personHandle.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for DisambiguationItemWithDirectInvocationModel(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for DisambiguationItemWithDirectInvocationModel);
}

uint64_t DisambiguationItemWithDirectInvocationModel.personHandle.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.personHandle.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_13_38((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return DisambiguationItemWithDirectInvocationModel.personHandle.modify;
}

uint64_t DisambiguationItemWithDirectInvocationModel.spokenHandle.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  OUTLINED_FUNCTION_45_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.spokenHandle : DisambiguationItemWithDirectInvocationModel()
{
  return DisambiguationItemWithDirectInvocationModel.spokenHandle.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.spokenHandle.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.spokenHandle.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_13_38((uint64_t)v1);
  OUTLINED_FUNCTION_45_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return DisambiguationItemWithDirectInvocationModel.personHandle.modify;
}

uint64_t DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  OUTLINED_FUNCTION_18_30();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_13_38((uint64_t)v1);
  OUTLINED_FUNCTION_18_30();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return DisambiguationItemWithDirectInvocationModel.personHandle.modify;
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.personHandle()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.label.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t DisambiguationItemWithDirectInvocationModel.label.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.label.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_13_38((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return DisambiguationItemWithDirectInvocationModel.personHandle.modify;
}

void property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.rskeCommand(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v2);
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v3 = a1;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.rskeCommand.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5 - v4;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  OUTLINED_FUNCTION_39_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  uint64_t v7 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return v7;
}

void key path setter for DisambiguationItemWithDirectInvocationModel.rskeCommand : DisambiguationItemWithDirectInvocationModel(id *a1)
{
  id v1 = *a1;
  DisambiguationItemWithDirectInvocationModel.rskeCommand.setter();
}

void DisambiguationItemWithDirectInvocationModel.rskeCommand.setter()
{
  uint64_t v1 = OUTLINED_FUNCTION_37_6();
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(v1);
  OUTLINED_FUNCTION_39_20();
  id v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  uint64_t v3 = (void (*)(uint64_t *, void))Loggable.wrappedValue.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.setter();
  v3(&v4, 0);
}

void (*DisambiguationItemWithDirectInvocationModel.rskeCommand.modify(void *a1))(uint64_t a1)
{
  id v2 = malloc(0x50uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  OUTLINED_FUNCTION_39_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  v2[8] = OUTLINED_FUNCTION_10_38();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[9] = CodableAceObject.wrappedValue.modify();
  return DisambiguationItemWithDirectInvocationModel.rskeCommand.modify;
}

void DisambiguationItemWithDirectInvocationModel.rskeCommand.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  id v2 = *(void (**)(uint64_t))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  uint64_t v3 = OUTLINED_FUNCTION_49_17();
  v2(v3);

  free(v1);
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.type()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.type.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

uint64_t DisambiguationItemWithDirectInvocationModel.type.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.type.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_13_38((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return DisambiguationItemWithDirectInvocationModel.personHandle.modify;
}

unint64_t DisambiguationItemWithDirectInvocationModel.ItemType.description.getter(uint64_t a1, void *a2)
{
  if (!a2) {
    return 0xD000000000000018;
  }
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v7, ".phoneNumber(");
  HIWORD(v7[1]) = -4864;
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return v7[0];
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000004981B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0x6D754E656E6F6870;
  }
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys.init(stringValue:)()
{
  return 1;
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys.stringValue.getter()
{
  return 12383;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys()
{
  return DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional protocol witness for CodingKey.init(intValue:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys@<W0>(Swift::Int a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneCallMetrics.CodingKeys.init(intValue:)(a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys.init(stringValue:)();
  *a1 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

void DisambiguationItemWithDirectInvocationModel.ItemType.encode(to:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v11 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_1();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_15_39();
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v11)
  {
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  }
  else
  {
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    OUTLINED_FUNCTION_11();
    v10();
  }
  uint64_t v8 = OUTLINED_FUNCTION_26_26();
  v9(v8);
  OUTLINED_FUNCTION_9_58();
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

void DisambiguationItemWithDirectInvocationModel.ItemType.init(from:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v26 = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_52();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v9 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v25 = (uint64_t)v3;
  if (!v10)
  {
    uint64_t v11 = v1;
    goto LABEL_7;
  }
  uint64_t v11 = v1;
  char v12 = *(unsigned char *)(v9 + 32);
  specialized ArraySlice.subscript.getter(1, v10, v9, v9 + 32, 0, (2 * v10) | 1);
  uint64_t v14 = v13;
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v14 != v16 >> 1)
  {
LABEL_7:
    uint64_t v17 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *uint64_t v19 = &type metadata for DisambiguationItemWithDirectInvocationModel.ItemType;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v11, v6);
    uint64_t v3 = (void *)v25;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    goto LABEL_10;
  }
  if (v12)
  {
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();
    OUTLINED_FUNCTION_42_19();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    OUTLINED_FUNCTION_11();
    v20();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_11();
    v21();
  }
  else
  {
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();
    OUTLINED_FUNCTION_42_19();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedDecodingContainer.decode(_:forKey:)();
    OUTLINED_FUNCTION_11();
    v22();
    swift_unknownObjectRelease();
    uint64_t v23 = OUTLINED_FUNCTION_27_26();
    v24(v23);
  }
  __swift_destroy_boxed_opaque_existential_1(v25);
LABEL_10:
  OUTLINED_FUNCTION_9_58();
}

void protocol witness for Decodable.init(from:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType(void *a1@<X8>)
{
  DisambiguationItemWithDirectInvocationModel.ItemType.init(from:)();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void protocol witness for Encodable.encode(to:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType()
{
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType()
{
  return DisambiguationItemWithDirectInvocationModel.ItemType.description.getter(*(void *)v0, *(void **)(v0 + 8));
}

uint64_t DisambiguationItemWithDirectInvocationModel.init(id:personHandle:spokenHandle:shouldPrintHandleBlue:label:rskeCommand:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>, void *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v7 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v8 = a3 + *(int *)(v7 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Loggable.init(wrappedValue:)();
  uint64_t v9 = a3 + *(int *)(v7 + 32);
  Loggable.init(wrappedValue:)();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_6();
  uint64_t v11 = v10;
  uint64_t v20 = a1;
  uint64_t v18 = v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(a3, a1);
  swift_bridgeObjectRetain();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  OUTLINED_FUNCTION_15();
  unint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v8, v13);
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  v15(v9, v13);
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v16 = a4;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  if (a2) {
    swift_bridgeObjectRelease();
  }
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v20, v18);
}

uint64_t static DisambiguationItemWithDirectInvocationModel.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.hash(into:)()
{
  OUTLINED_FUNCTION_37_6();
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);

  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x61486E6F73726570 && a2 == 0xEC000000656C646ELL;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x61486E656B6F7073 && a2 == 0xEC000000656C646ELL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000000004981D0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6D6D6F43656B7372 && a2 == 0xEB00000000646E61;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 1701869940 && a2 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t DisambiguationItemWithDirectInvocationModel.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x6E6F73726570;
      goto LABEL_4;
    case 2:
      uint64_t v3 = 0x6E656B6F7073;
LABEL_4:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6148000000000000;
      break;
    case 3:
      uint64_t result = 0xD000000000000015;
      break;
    case 4:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 5:
      uint64_t result = 0x6D6D6F43656B7372;
      break;
    case 6:
      uint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  return DisambiguationItemWithDirectInvocationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = DisambiguationItemWithDirectInvocationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static PhoneAppResolutionHelper.appUsageLookUpDays.getter();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

void DisambiguationItemWithDirectInvocationModel.encode(to:)()
{
  OUTLINED_FUNCTION_11_51();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_15_39();
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  OUTLINED_FUNCTION_17_31();
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  OUTLINED_FUNCTION_12_40();
  if (!v0)
  {
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<String?> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_12_40();
    OUTLINED_FUNCTION_44_19();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_12_40();
    OUTLINED_FUNCTION_43_19();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_12_40();
    OUTLINED_FUNCTION_12_40();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_12_40();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    lazy protocol witness table accessor for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_12_40();
  }
  uint64_t v2 = OUTLINED_FUNCTION_33_18();
  v3(v2);
  OUTLINED_FUNCTION_9_58();
}

Swift::Int DisambiguationItemWithDirectInvocationModel.hashValue.getter()
{
  return Hasher._finalize()();
}

void DisambiguationItemWithDirectInvocationModel.init(from:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v81 = v0;
  uint64_t v4 = v3;
  uint64_t v63 = v5;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v62 = v6;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_3_1();
  uint64_t v64 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v73 = v10;
  uint64_t v74 = v9;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_3_1();
  uint64_t v66 = v11;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v75 = v12;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_3_1();
  uint64_t v68 = v14;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v76 = v15;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_3_1();
  uint64_t v72 = v17;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v85 = v18;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v67 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v59 - v22;
  uint64_t v24 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  uint64_t v69 = v25;
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_3_1();
  uint64_t v71 = v27;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v70 = v28;
  __chkstk_darwin(v29);
  uint64_t v30 = OUTLINED_FUNCTION_10_47();
  uint64_t v31 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(v30);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_37();
  uint64_t v34 = v1 + *(int *)(v33 + 20);
  uint64_t v86 = 0;
  uint64_t v87 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  uint64_t v84 = v34;
  Loggable.init(wrappedValue:)();
  uint64_t v35 = v1;
  uint64_t v36 = v1 + *(int *)(v31 + 32);
  uint64_t v86 = 0;
  uint64_t v87 = 0;
  BOOL v82 = (int *)v31;
  uint64_t v83 = v36;
  Loggable.init(wrappedValue:)();
  uint64_t v38 = v4[3];
  uint64_t v37 = v4[4];
  uint64_t v80 = v4;
  unsigned int v39 = __swift_project_boxed_opaque_existential_1(v4, v38);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  uint64_t v40 = v81;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v40)
  {
    unint64_t v42 = v82;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    OUTLINED_FUNCTION_34_17();
    id v43 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v43(v84, v88);
    if (v37) {
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v35 + v42[6], v78);
    }
    if (v39) {
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v35 + v42[7], v77);
    }
    v43(v83, v88);
    if (v35) {
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v35 + v42[9], v74);
    }
  }
  else
  {
    uint64_t v41 = v23;
    LOBYTE(v86) = 0;
    _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
    OUTLINED_FUNCTION_28_28();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v44 = v2;
    uint64_t v45 = v35;
    OUTLINED_FUNCTION_15_10();
    v46();
    LOBYTE(v86) = 1;
    unint64_t v47 = lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<String?> and conformance <A> Loggable<A>);
    uint64_t v81 = v44;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    unint64_t v61 = v47;
    uint64_t v71 = v24;
    uint64_t v49 = v85 + 40;
    uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v85 + 40);
    v48(v84, v41, v88);
    LOBYTE(v86) = 2;
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_28_28();
    OUTLINED_FUNCTION_29_24();
    uint64_t v59 = v49;
    uint64_t v60 = v48;
    OUTLINED_FUNCTION_15_10();
    v50();
    LOBYTE(v86) = 3;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_28_28();
    OUTLINED_FUNCTION_29_24();
    OUTLINED_FUNCTION_15_10();
    v51();
    LOBYTE(v86) = 4;
    uint64_t v52 = v67;
    OUTLINED_FUNCTION_29_24();
    uint64_t v72 = v45;
    v60(v83, v52, v88);
    LOBYTE(v86) = 5;
    lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_28_28();
    OUTLINED_FUNCTION_29_24();
    uint64_t v53 = v72;
    OUTLINED_FUNCTION_15_10();
    v54();
    LOBYTE(v86) = 6;
    lazy protocol witness table accessor for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_28_28();
    uint64_t v55 = v64;
    uint64_t v56 = v65;
    OUTLINED_FUNCTION_29_24();
    uint64_t v57 = OUTLINED_FUNCTION_2_93();
    v58(v57);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v53 + v82[10], v55, v56);
    outlined init with copy of DisambiguationItemWithDirectInvocationModel(v53, v63, (void (*)(void))type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    outlined destroy of DisambiguationItemWithDirectInvocationModel();
  }
  OUTLINED_FUNCTION_9_58();
}

uint64_t protocol witness for Identifiable.id.getter in conformance DisambiguationItemWithDirectInvocationModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance DisambiguationItemWithDirectInvocationModel()
{
  return Hasher._finalize()();
}

void protocol witness for Decodable.init(from:) in conformance DisambiguationItemWithDirectInvocationModel()
{
}

void protocol witness for Encodable.encode(to:) in conformance DisambiguationItemWithDirectInvocationModel()
{
}

uint64_t ForeignEmergencyCallDisambiguationModel.emergencyServicesItem.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of DisambiguationItemWithDirectInvocationModel?(v1, a1);
}

uint64_t ForeignEmergencyCallDisambiguationModel.foreignEmergencyNumberItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);

  return outlined init with copy of DisambiguationItemWithDirectInvocationModel?(v3, a1);
}

uint64_t ForeignEmergencyCallDisambiguationModel.prompt.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t ForeignEmergencyCallDisambiguationModel.responseViewId.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t ForeignEmergencyCallDisambiguationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  OUTLINED_FUNCTION_18_30();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

Swift::Void (__swiftcall *ForeignEmergencyCallDisambiguationModel.responseViewId.modify())(Swift::OpaquePointer newCallGroups)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_6();
  type metadata accessor for ForeignEmergencyCallDisambiguationModel(v0);
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ForeignEmergencyCallDisambiguationModel.init(emergencyServicesItem:foreignEmergencyNumberItem:prompt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v11 = (void *)(a5 + v10[7]);
  *uint64_t v11 = 0xD00000000000001ELL;
  v11[1] = 0x80000000004912E0;
  outlined init with take of DisambiguationItemWithDirectInvocationModel?(a1, a5);
  uint64_t result = outlined init with take of DisambiguationItemWithDirectInvocationModel?(a2, a5 + v10[5]);
  uint64_t v13 = (void *)(a5 + v10[6]);
  *uint64_t v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t ForeignEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000000004981F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000000498210 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t ForeignEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0x74706D6F7270;
      break;
    case 3:
      unint64_t result = 0x65736E6F70736572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  return ForeignEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = ForeignEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional protocol witness for CodingKey.init(intValue:) in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys@<W0>(Swift::Int a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional *a2@<X8>)
{
  result.int value = AnnounceVoicemailDirectAction.CodingKeys.init(intValue:)(a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

void ForeignEmergencyCallDisambiguationModel.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_11_51();
  a22 = v24;
  a23 = v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ForeignEmergencyCallDisambiguationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_15_39();
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  OUTLINED_FUNCTION_17_31();
  a13 = 0;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel);
  OUTLINED_FUNCTION_37_20();
  if (!v23)
  {
    type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
    a12 = 1;
    OUTLINED_FUNCTION_37_20();
    OUTLINED_FUNCTION_44_19();
    KeyedEncodingContainer.encode(_:forKey:)();
    OUTLINED_FUNCTION_43_19();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v26);
  OUTLINED_FUNCTION_9_58();
}

void ForeignEmergencyCallDisambiguationModel.init(from:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v3 = v2;
  uint64_t v35 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v32 - v9;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ForeignEmergencyCallDisambiguationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v36 = v10;
  __chkstk_darwin(v11);
  uint64_t v12 = OUTLINED_FUNCTION_10_47();
  uint64_t v13 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(v12);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_53();
  uint64_t v16 = (uint64_t *)(v1 + *(int *)(v15 + 28));
  *uint64_t v16 = 0xD00000000000001ELL;
  v16[1] = 0x80000000004912E0;
  unsigned int v39 = v16;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = v1;
    uint64_t v34 = v3;
    uint64_t v32 = v13;
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel);
    uint64_t v17 = v37;
    OUTLINED_FUNCTION_22_36();
    uint64_t v18 = (uint64_t)v17;
    uint64_t v19 = v33;
    outlined init with take of DisambiguationItemWithDirectInvocationModel?(v18, v33);
    uint64_t v20 = (uint64_t)v8;
    OUTLINED_FUNCTION_22_36();
    uint64_t v21 = v32;
    outlined init with take of DisambiguationItemWithDirectInvocationModel?(v20, v19 + *(int *)(v32 + 20));
    OUTLINED_FUNCTION_44_19();
    uint64_t v22 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v23 = v19;
    uint64_t v24 = (uint64_t *)(v19 + *(int *)(v21 + 24));
    *uint64_t v24 = v22;
    v24[1] = v25;
    OUTLINED_FUNCTION_43_19();
    uint64_t v26 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v28 = v27;
    uint64_t v29 = OUTLINED_FUNCTION_5_57();
    v30(v29);
    uint64_t v31 = v39;
    swift_bridgeObjectRelease();
    *uint64_t v31 = v26;
    v31[1] = v28;
    outlined init with copy of DisambiguationItemWithDirectInvocationModel(v23, v35, (void (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    outlined destroy of DisambiguationItemWithDirectInvocationModel();
  }
  OUTLINED_FUNCTION_9_58();
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

void protocol witness for Decodable.init(from:) in conformance ForeignEmergencyCallDisambiguationModel()
{
}

#error "2ACFA0: call analysis failed (funcsize=6)"

uint64_t LocalEmergencyCallDisambiguationModel.id.getter()
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  OUTLINED_FUNCTION_45_17();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = OUTLINED_FUNCTION_7_0();

  return v1(v0);
}

uint64_t LocalEmergencyCallDisambiguationModel.prompt.getter()
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  OUTLINED_FUNCTION_18_30();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for LocalEmergencyCallDisambiguationModel.prompt : LocalEmergencyCallDisambiguationModel()
{
  return LocalEmergencyCallDisambiguationModel.prompt.setter();
}

uint64_t LocalEmergencyCallDisambiguationModel.prompt.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*LocalEmergencyCallDisambiguationModel.prompt.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  *uint64_t v0 = v1;
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  OUTLINED_FUNCTION_18_30();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_10_38();
  return DisambiguationItemWithDirectInvocationModel.personHandle.modify;
}

void DisambiguationItemWithDirectInvocationModel.personHandle.modify(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_49_17();
  v3(v2);

  free(v1);
}

uint64_t LocalEmergencyCallDisambiguationModel.isSmartEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 32));
}

uint64_t LocalEmergencyCallDisambiguationModel.responseViewId.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t LocalEmergencyCallDisambiguationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  OUTLINED_FUNCTION_39_20();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

Swift::Void (__swiftcall *LocalEmergencyCallDisambiguationModel.responseViewId.modify())(Swift::OpaquePointer newCallGroups)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_6();
  type metadata accessor for LocalEmergencyCallDisambiguationModel(v0);
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t LocalEmergencyCallDisambiguationModel.init(appBundleId:prompt:items:isSmartEnabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, char a4@<W5>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v11 = (void *)((char *)a5 + *(int *)(v10 + 36));
  *uint64_t v11 = 0xD00000000000001CLL;
  v11[1] = 0x8000000000491300;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  UUID.init()();
  uint64_t result = Loggable.init(wrappedValue:)();
  *((unsigned char *)a5 + *(int *)(v10 + 32)) = a4;
  return result;
}

uint64_t LocalEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 25705 && a2 == 0xE200000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x457472616D537369 && a2 == 0xEE0064656C62616ELL;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t LocalEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 0x6C646E7542707061;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x736D657469;
      break;
    case 2:
      uint64_t result = 25705;
      break;
    case 3:
      uint64_t result = 0x74706D6F7270;
      break;
    case 4:
      uint64_t result = 0x457472616D537369;
      break;
    case 5:
      uint64_t result = 0x65736E6F70736572;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  return AppResolutionSource.hashValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  return LocalEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LocalEmergencyCallDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = LocalEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LocalEmergencyCallDisambiguationModel.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LocalEmergencyCallDisambiguationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_15_39();
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  OUTLINED_FUNCTION_17_31();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A]);
    OUTLINED_FUNCTION_12_40();
    type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
    type metadata accessor for UUID();
    _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
    OUTLINED_FUNCTION_12_40();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_12_40();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  uint64_t v2 = OUTLINED_FUNCTION_33_18();
  return v3(v2);
}

void LocalEmergencyCallDisambiguationModel.init(from:)()
{
  OUTLINED_FUNCTION_11_51();
  uint64_t v2 = v1;
  uint64_t v21 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_52();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LocalEmergencyCallDisambiguationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v6);
  uint64_t v7 = OUTLINED_FUNCTION_10_47();
  type metadata accessor for LocalEmergencyCallDisambiguationModel(v7);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v22 = v9;
  uint64_t v23 = (uint64_t *)(v11 - v10);
  uint64_t v12 = (uint64_t *)(v11 - v10 + *(int *)(v9 + 36));
  *uint64_t v12 = 0xD00000000000001CLL;
  v12[1] = 0x8000000000491300;
  uint64_t v24 = v12;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    *uint64_t v23 = KeyedDecodingContainer.decode(_:forKey:)();
    v23[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A]);
    OUTLINED_FUNCTION_25_25();
    long long v23[2] = v25;
    OUTLINED_FUNCTION_44_19();
    _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
    OUTLINED_FUNCTION_25_25();
    OUTLINED_FUNCTION_15_10();
    v14();
    OUTLINED_FUNCTION_43_19();
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_25_25();
    OUTLINED_FUNCTION_15_10();
    v15();
    *((unsigned char *)v23 + *(int *)(v22 + 32)) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v18 = v17;
    uint64_t v19 = OUTLINED_FUNCTION_6_64();
    v20(v19);
    swift_bridgeObjectRelease();
    *uint64_t v24 = v16;
    v24[1] = v18;
    outlined init with copy of DisambiguationItemWithDirectInvocationModel((uint64_t)v23, v21, (void (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    outlined destroy of DisambiguationItemWithDirectInvocationModel();
  }
  OUTLINED_FUNCTION_9_58();
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Identifiable.id.getter in conformance LocalEmergencyCallDisambiguationModel@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void protocol witness for Decodable.init(from:) in conformance LocalEmergencyCallDisambiguationModel()
{
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LocalEmergencyCallDisambiguationModel()
{
  return LocalEmergencyCallDisambiguationModel.encode(to:)();
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

unint64_t _s10Foundation4UUIDVACSHAAWlTm_2(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type String? and conformance <A> A?(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    unint64_t result = OUTLINED_FUNCTION_16_42();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType();
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType();
    unint64_t result = OUTLINED_FUNCTION_16_42();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String?>);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    unint64_t result = OUTLINED_FUNCTION_16_42();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t outlined init with copy of DisambiguationItemWithDirectInvocationModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for ForeignEmergencyCallDisambiguationModel);
}

uint64_t outlined init with take of DisambiguationItemWithDirectInvocationModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t outlined destroy of DisambiguationItemWithDirectInvocationModel?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = OUTLINED_FUNCTION_7_0();
  v5(v4);
  return a2;
}

uint64_t outlined destroy of DisambiguationItemWithDirectInvocationModel()
{
  uint64_t v1 = OUTLINED_FUNCTION_37_6();
  v2(v1);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v3();
  return v0;
}

uint64_t type metadata accessor for LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for LocalEmergencyCallDisambiguationModel);
}

unint64_t lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A](uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    _s10Foundation4UUIDVACSHAAWlTm_2(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t base witness table accessor for Decodable in DisambiguationItemWithDirectInvocationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel);
}

unint64_t base witness table accessor for Encodable in DisambiguationItemWithDirectInvocationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel);
}

unint64_t associated type witness table accessor for Identifiable.ID : Hashable in DisambiguationItemWithDirectInvocationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
}

unint64_t base witness table accessor for Equatable in DisambiguationItemWithDirectInvocationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel);
}

unint64_t instantiation function for generic protocol witness table for ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  unint64_t result = _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t base witness table accessor for Decodable in ForeignEmergencyCallDisambiguationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel);
}

unint64_t base witness table accessor for Encodable in ForeignEmergencyCallDisambiguationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel);
}

unint64_t instantiation function for generic protocol witness table for LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  unint64_t result = _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t base witness table accessor for Decodable in LocalEmergencyCallDisambiguationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel);
}

unint64_t base witness table accessor for Encodable in LocalEmergencyCallDisambiguationModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2((uint64_t)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel);
}

uint64_t sub_2AE974()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = DisambiguationItemWithDirectInvocationModel.personHandle.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2AE99C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))DisambiguationItemWithDirectInvocationModel.personHandle.setter);
}

uint64_t sub_2AE9C8()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = DisambiguationItemWithDirectInvocationModel.spokenHandle.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2AE9F4()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.getter();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_2AEA20()
{
  return DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.setter();
}

uint64_t sub_2AEA48()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = DisambiguationItemWithDirectInvocationModel.label.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2AEA70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))DisambiguationItemWithDirectInvocationModel.label.setter);
}

uint64_t sub_2AEA9C()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = DisambiguationItemWithDirectInvocationModel.rskeCommand.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_2AEAC8()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = DisambiguationItemWithDirectInvocationModel.type.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2AEAF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))DisambiguationItemWithDirectInvocationModel.type.setter);
}

uint64_t sub_2AEB1C()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = LocalEmergencyCallDisambiguationModel.prompt.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

char *initializeBufferWithCopyOfBuffer for DisambiguationItemWithDirectInvocationModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    v12(&a1[a3[8]], (char *)a2 + a3[8], v11);
    uint64_t v21 = a3[9];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[10];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t destroy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  v7(a1 + a2[8], v6);
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = a1 + a2[10];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);

  return v16(v14, v15);
}

uint64_t initializeWithCopy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

uint64_t assignWithCopy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

uint64_t initializeWithTake for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

uint64_t assignWithTake for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2AF820);
}

uint64_t sub_2AF820(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_1_6();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_1_6();
        if (*(_DWORD *)(v16 + 84) == a2)
        {
          uint64_t v8 = v15;
          uint64_t v12 = a3[7];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          OUTLINED_FUNCTION_1_6();
          if (*(_DWORD *)(v18 + 84) == a2)
          {
            uint64_t v8 = v17;
            uint64_t v12 = a3[9];
          }
          else
          {
            uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
            uint64_t v12 = a3[10];
          }
        }
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2AF954);
}

uint64_t sub_2AF954()
{
  OUTLINED_FUNCTION_85();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      OUTLINED_FUNCTION_1_6();
      if (*(_DWORD *)(v12 + 84) == v3)
      {
        uint64_t v6 = v11;
        uint64_t v10 = v2[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_1_6();
        if (*(_DWORD *)(v14 + 84) == v3)
        {
          uint64_t v6 = v13;
          uint64_t v10 = v2[7];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          OUTLINED_FUNCTION_1_6();
          if (*(_DWORD *)(v16 + 84) == v3)
          {
            uint64_t v6 = v15;
            uint64_t v10 = v2[9];
          }
          else
          {
            uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
            uint64_t v10 = v2[10];
          }
        }
      }
    }
    uint64_t v7 = v1 + v10;
  }

  return __swift_storeEnumTagSinglePayload(v7, v0, v0, v6);
}

void type metadata completion function for DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<String?>(319, &lazy cache variable for type metadata for Loggable<String?>, &demangling cache variable for type metadata for String?);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Loggable<String>(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Loggable<String>(319, &lazy cache variable for type metadata for Loggable<Bool>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Loggable<String?>(319, &lazy cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for Loggable<String>(319, &lazy cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for Loggable<String?>(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = type metadata accessor for Loggable();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType()
{
  return &type metadata for DisambiguationItemWithDirectInvocationModel.ItemType;
}

uint64_t *initializeBufferWithCopyOfBuffer for ForeignEmergencyCallDisambiguationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = v7[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      uint64_t v16 = v7[6];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      uint64_t v20 = v7[7];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      v15((char *)a1 + v7[8], (char *)a2 + v7[8], v14);
      uint64_t v24 = v7[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      uint64_t v28 = v7[10];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
    uint64_t v32 = a3[5];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v32, 1, (uint64_t)v7))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v33, v34, v36);
      uint64_t v37 = v7[5];
      uint64_t v38 = &v33[v37];
      unsigned int v39 = &v34[v37];
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      v41(v38, v39, v40);
      uint64_t v42 = v7[6];
      id v43 = &v33[v42];
      uint64_t v44 = &v34[v42];
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v46 = v7[7];
      unint64_t v47 = &v33[v46];
      uint64_t v48 = &v34[v46];
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      v41(&v33[v7[8]], &v34[v7[8]], v40);
      uint64_t v50 = v7[9];
      uint64_t v51 = &v33[v50];
      uint64_t v52 = &v34[v50];
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v7[10];
      uint64_t v55 = &v33[v54];
      uint64_t v56 = &v34[v54];
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, (uint64_t)v7);
    }
    uint64_t v58 = a3[6];
    uint64_t v59 = a3[7];
    uint64_t v60 = (uint64_t *)((char *)a1 + v58);
    unint64_t v61 = (uint64_t *)((char *)a2 + v58);
    uint64_t v62 = v61[1];
    void *v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = (uint64_t *)((char *)a1 + v59);
    uint64_t v64 = (uint64_t *)((char *)a2 + v59);
    uint64_t v65 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, (uint64_t)v4))
  {
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = a1 + v4[5];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    uint64_t v9 = a1 + v4[6];
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = a1 + v4[7];
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    v8(a1 + v4[8], v7);
    uint64_t v13 = a1 + v4[9];
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = a1 + v4[10];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = a1 + *(int *)(a2 + 20);
  if (!__swift_getEnumTagSinglePayload(v17, 1, (uint64_t)v4))
  {
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v19 = v17 + v4[5];
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    v21(v19, v20);
    uint64_t v22 = v17 + v4[6];
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
    uint64_t v24 = v17 + v4[7];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
    v21(v17 + v4[8], v20);
    uint64_t v26 = v17 + v4[9];
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    uint64_t v28 = v17 + v4[10];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = v6[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    uint64_t v14 = v6[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v6[7];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    v13(&a1[v6[8]], &a2[v6[8]], v12);
    uint64_t v22 = v6[9];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = v6[10];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  uint64_t v30 = a3[5];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v30], 1, (uint64_t)v6))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v31, v32, v34);
    uint64_t v35 = v6[5];
    uint64_t v36 = &v31[v35];
    uint64_t v37 = &v32[v35];
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    unsigned int v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    v39(v36, v37, v38);
    uint64_t v40 = v6[6];
    uint64_t v41 = &v31[v40];
    uint64_t v42 = &v32[v40];
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = v6[7];
    uint64_t v45 = &v31[v44];
    uint64_t v46 = &v32[v44];
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    v39(&v31[v6[8]], &v32[v6[8]], v38);
    uint64_t v48 = v6[9];
    uint64_t v49 = &v31[v48];
    uint64_t v50 = &v32[v48];
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = v6[10];
    uint64_t v53 = &v31[v52];
    uint64_t v54 = &v32[v52];
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, (uint64_t)v6);
  }
  uint64_t v56 = a3[6];
  uint64_t v57 = a3[7];
  uint64_t v58 = &a1[v56];
  uint64_t v59 = &a2[v56];
  uint64_t v60 = *((void *)v59 + 1);
  *(void *)uint64_t v58 = *(void *)v59;
  *((void *)v58 + 1) = v60;
  unint64_t v61 = &a1[v57];
  uint64_t v62 = &a2[v57];
  uint64_t v63 = *((void *)v62 + 1);
  *(void *)unint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = v6[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      uint64_t v15 = v6[6];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = v6[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      v14(&a1[v6[8]], &a2[v6[8]], v13);
      uint64_t v23 = v6[9];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      uint64_t v27 = v6[10];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel();
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v67 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 24))(a1, a2, v67);
  uint64_t v68 = v6[5];
  uint64_t v69 = &a1[v68];
  uint64_t v70 = &a2[v68];
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 24);
  v72(v69, v70, v71);
  uint64_t v73 = v6[6];
  uint64_t v74 = &a1[v73];
  uint64_t v75 = &a2[v73];
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 24))(v74, v75, v76);
  uint64_t v77 = v6[7];
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 24))(v78, v79, v80);
  v72(&a1[v6[8]], &a2[v6[8]], v71);
  uint64_t v81 = v6[9];
  BOOL v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 24))(v82, v83, v84);
  uint64_t v85 = v6[10];
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 24))(v86, v87, v88);
LABEL_7:
  uint64_t v32 = a3[5];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  int v35 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v32], 1, (uint64_t)v6);
  int v36 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, (uint64_t)v6);
  if (!v35)
  {
    if (!v36)
    {
      uint64_t v89 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 24))(v33, v34, v89);
      uint64_t v90 = v6[5];
      Swift::Bool v91 = &v33[v90];
      uint64_t v92 = &v34[v90];
      uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 24);
      v94(v91, v92, v93);
      uint64_t v95 = v6[6];
      uint64_t v96 = &v33[v95];
      uint64_t v97 = &v34[v95];
      uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 24))(v96, v97, v98);
      uint64_t v99 = v6[7];
      uint64_t v100 = &v33[v99];
      uint64_t v101 = &v34[v99];
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 24))(v100, v101, v102);
      v94(&v33[v6[8]], &v34[v6[8]], v93);
      uint64_t v103 = v6[9];
      uint64_t v104 = &v33[v103];
      uint64_t v105 = &v34[v103];
      uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 24))(v104, v105, v106);
      uint64_t v107 = v6[10];
      uint64_t v108 = &v33[v107];
      uint64_t v109 = &v34[v107];
      uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 24))(v108, v109, v110);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel();
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v33, v34, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v37 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v33, v34, v37);
  uint64_t v38 = v6[5];
  unsigned int v39 = &v33[v38];
  uint64_t v40 = &v34[v38];
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
  v42(v39, v40, v41);
  uint64_t v43 = v6[6];
  uint64_t v44 = &v33[v43];
  uint64_t v45 = &v34[v43];
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = v6[7];
  uint64_t v48 = &v33[v47];
  uint64_t v49 = &v34[v47];
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  v42(&v33[v6[8]], &v34[v6[8]], v41);
  uint64_t v51 = v6[9];
  uint64_t v52 = &v33[v51];
  uint64_t v53 = &v34[v51];
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = v6[10];
  uint64_t v56 = &v33[v55];
  uint64_t v57 = &v34[v55];
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, (uint64_t)v6);
LABEL_13:
  uint64_t v60 = a3[6];
  unint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  *(void *)unint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = *((void *)v62 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[7];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = *((void *)v65 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = v6[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    uint64_t v14 = v6[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    uint64_t v18 = v6[7];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    v13(&a1[v6[8]], &a2[v6[8]], v12);
    uint64_t v22 = v6[9];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    uint64_t v26 = v6[10];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  uint64_t v30 = a3[5];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v30], 1, (uint64_t)v6))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
    uint64_t v35 = v6[5];
    int v36 = &v31[v35];
    uint64_t v37 = &v32[v35];
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    unsigned int v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
    v39(v36, v37, v38);
    uint64_t v40 = v6[6];
    uint64_t v41 = &v31[v40];
    uint64_t v42 = &v32[v40];
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
    uint64_t v44 = v6[7];
    uint64_t v45 = &v31[v44];
    uint64_t v46 = &v32[v44];
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    v39(&v31[v6[8]], &v32[v6[8]], v38);
    uint64_t v48 = v6[9];
    uint64_t v49 = &v31[v48];
    uint64_t v50 = &v32[v48];
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    uint64_t v52 = v6[10];
    uint64_t v53 = &v31[v52];
    uint64_t v54 = &v32[v52];
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, (uint64_t)v6);
  }
  uint64_t v56 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v56] = *(_OWORD *)&a2[v56];
  return a1;
}

char *assignWithTake for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = v6[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v14(v11, v12, v13);
      uint64_t v15 = v6[6];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = v6[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      v14(&a1[v6[8]], &a2[v6[8]], v13);
      uint64_t v23 = v6[9];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      uint64_t v27 = v6[10];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel();
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v71 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 40))(a1, a2, v71);
  uint64_t v72 = v6[5];
  uint64_t v73 = &a1[v72];
  uint64_t v74 = &a2[v72];
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 40);
  v76(v73, v74, v75);
  uint64_t v77 = v6[6];
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 40))(v78, v79, v80);
  uint64_t v81 = v6[7];
  BOOL v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 40))(v82, v83, v84);
  v76(&a1[v6[8]], &a2[v6[8]], v75);
  uint64_t v85 = v6[9];
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 40))(v86, v87, v88);
  uint64_t v89 = v6[10];
  uint64_t v90 = &a1[v89];
  Swift::Bool v91 = &a2[v89];
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 40))(v90, v91, v92);
LABEL_7:
  uint64_t v32 = a3[5];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  int v35 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v32], 1, (uint64_t)v6);
  int v36 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, (uint64_t)v6);
  if (!v35)
  {
    if (!v36)
    {
      uint64_t v93 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 40))(v33, v34, v93);
      uint64_t v94 = v6[5];
      uint64_t v95 = &v33[v94];
      uint64_t v96 = &v34[v94];
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 40);
      v98(v95, v96, v97);
      uint64_t v99 = v6[6];
      uint64_t v100 = &v33[v99];
      uint64_t v101 = &v34[v99];
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 40))(v100, v101, v102);
      uint64_t v103 = v6[7];
      uint64_t v104 = &v33[v103];
      uint64_t v105 = &v34[v103];
      uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 40))(v104, v105, v106);
      v98(&v33[v6[8]], &v34[v6[8]], v97);
      uint64_t v107 = v6[9];
      uint64_t v108 = &v33[v107];
      uint64_t v109 = &v34[v107];
      uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 40))(v108, v109, v110);
      uint64_t v111 = v6[10];
      uint64_t v112 = &v33[v111];
      uint64_t v113 = &v34[v111];
      uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 40))(v112, v113, v114);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel();
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v33, v34, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v37 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
  uint64_t v38 = v6[5];
  unsigned int v39 = &v33[v38];
  uint64_t v40 = &v34[v38];
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32);
  v42(v39, v40, v41);
  uint64_t v43 = v6[6];
  uint64_t v44 = &v33[v43];
  uint64_t v45 = &v34[v43];
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = v6[7];
  uint64_t v48 = &v33[v47];
  uint64_t v49 = &v34[v47];
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  v42(&v33[v6[8]], &v34[v6[8]], v41);
  uint64_t v51 = v6[9];
  uint64_t v52 = &v33[v51];
  uint64_t v53 = &v34[v51];
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = v6[10];
  uint64_t v56 = &v33[v55];
  uint64_t v57 = &v34[v55];
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, (uint64_t)v6);
LABEL_13:
  uint64_t v60 = a3[6];
  unint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v64 = *(void *)v62;
  uint64_t v63 = *((void *)v62 + 1);
  *(void *)unint64_t v61 = v64;
  *((void *)v61 + 1) = v63;
  swift_bridgeObjectRelease();
  uint64_t v65 = a3[7];
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  uint64_t v69 = *(void *)v67;
  uint64_t v68 = *((void *)v67 + 1);
  *(void *)uint64_t v66 = v69;
  *((void *)v66 + 1) = v68;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2B235C);
}

uint64_t sub_2B235C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return OUTLINED_FUNCTION_48_17(*(void *)(a1 + *(int *)(a3 + 24) + 8));
  }

  return __swift_getEnumTagSinglePayload(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2B23F8);
}

void sub_2B23F8()
{
  OUTLINED_FUNCTION_85();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    __swift_storeEnumTagSinglePayload(v1, v0, v0, v4);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24) + 8) = (v0 - 1);
  }
}

void type metadata completion function for ForeignEmergencyCallDisambiguationModel()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for DisambiguationItemWithDirectInvocationModel?()
{
  if (!lazy cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?)
  {
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v18 = (void *)((char *)v4 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

void *assignWithTake for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2B2C3C);
}

uint64_t sub_2B2C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_48_17(*(void *)(a1 + 8));
  }
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(int *)(a3 + 24);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v10 = *(int *)(a3 + 28);
  }

  return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
}

uint64_t storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2B2CF4);
}

uint64_t sub_2B2CF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for LocalEmergencyCallDisambiguationModel()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<String>(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2B2F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void *type metadata accessor for LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  return &unk_564150;
}

unsigned char *storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2B306CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  return &unk_5641E0;
}

unsigned char *storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2B3170);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  return &unk_564270;
}

unsigned char *storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2B3274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys()
{
  return &unk_564300;
}

unsigned char *storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2B3348);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys()
{
  return &unk_564390;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys()
{
  return &unk_5643B0;
}

uint64_t specialized ArraySlice.subscript.getter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_2_93()
{
  return *(void *)(v0 - 144);
}

uint64_t OUTLINED_FUNCTION_6_64()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_47()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_40()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_13_38(uint64_t a1)
{
  void *v1 = a1;
  return type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
}

void *OUTLINED_FUNCTION_15_39()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_16_42()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_17_31()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t OUTLINED_FUNCTION_22_36()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_26_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_24()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_33_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_20()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_41_16()
{
  return v0;
}

void OUTLINED_FUNCTION_43_19()
{
  *(unsigned char *)(v0 - 68) = 3;
}

void OUTLINED_FUNCTION_44_19()
{
  *(unsigned char *)(v0 - 67) = 2;
}

uint64_t OUTLINED_FUNCTION_46_13()
{
  return *(void *)(v0 - 152);
}

uint64_t OUTLINED_FUNCTION_47_17()
{
  return type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
}

uint64_t OUTLINED_FUNCTION_48_17@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_49_17()
{
  return v0;
}

uint64_t static OpenFaceTimeIntent.Target.enumIdentifier.getter()
{
  return 0x746567726154;
}

uint64_t OpenFaceTimeIntent.Target.description.getter(char a1)
{
  BOOL v1 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v2 = 0x6143657461657263;
  }
  else {
    uint64_t v2 = 0x73746E65636572;
  }
  if (v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  else {
    unint64_t v3 = 0xEA00000000006C6CLL;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return 46;
}

uint64_t OpenFaceTimeIntent.Target.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6143657461657263;
  }
  else {
    return 0x73746E65636572;
  }
}

PhoneCallFlowDelegatePlugin::OpenFaceTimeIntent::Target_optional __swiftcall OpenFaceTimeIntent.Target.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of OpenFaceTimeIntent.Target.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.int value = PhoneCallFlowDelegatePlugin_OpenFaceTimeIntent_Target_createCall;
  }
  else {
    v4.int value = PhoneCallFlowDelegatePlugin_OpenFaceTimeIntent_Target_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static OpenFaceTimeIntent.Target.allCases.getter()
{
  return &outlined read-only object #0 of static OpenFaceTimeIntent.Target.allCases.getter;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance OpenFaceTimeIntent.Target(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance OpenFaceTimeIntent.Target()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OpenFaceTimeIntent.Target()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance OpenFaceTimeIntent.Target()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::OpenFaceTimeIntent::Target_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OpenFaceTimeIntent.Target@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OpenFaceTimeIntent::Target_optional *a2@<X8>)
{
  result.int value = OpenFaceTimeIntent.Target.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance OpenFaceTimeIntent.Target@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OpenFaceTimeIntent.Target.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance OpenFaceTimeIntent.Target()
{
  return OpenFaceTimeIntent.Target.description.getter(*v0);
}

void protocol witness for static CaseIterable.allCases.getter in conformance OpenFaceTimeIntent.Target(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static OpenFaceTimeIntent.Target.allCases.getter;
}

uint64_t protocol witness for static IntentValueTypeIdentifiable.lnValueType.getter in conformance OpenFaceTimeIntent.Target(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();

  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t protocol witness for IntentValue.lnValue.getter in conformance OpenFaceTimeIntent.Target(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();

  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t protocol witness for static IntentValue.canConvert(_:) in conformance OpenFaceTimeIntent.Target(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t protocol witness for static IntentValue.from(_:context:) in conformance OpenFaceTimeIntent.Target(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();

  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static IntentValueSequenceElement.canConvertFrom(_:) in conformance OpenFaceTimeIntent.Target(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

void *OpenFaceTimeIntent.bundleIdentifier.unsafeMutableAddressor()
{
  return &static OpenFaceTimeIntent.bundleIdentifier;
}

unint64_t static OpenFaceTimeIntent.bundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_0_56();
}

void *OpenFaceTimeIntent.actionIdentifier.unsafeMutableAddressor()
{
  return &static OpenFaceTimeIntent.actionIdentifier;
}

unint64_t static OpenFaceTimeIntent.actionIdentifier.getter()
{
  return OUTLINED_FUNCTION_0_56();
}

uint64_t OpenFaceTimeIntent.target.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t OpenFaceTimeIntent.target.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void (*OpenFaceTimeIntent.target.modify(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = IntentParameter.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t OpenFaceTimeIntent.$target.getter()
{
  return IntentParameter.projectedValue.getter();
}

unint64_t OpenFaceTimeIntent.description.getter()
{
  IntentParameter.wrappedValue.getter();
  v0._uint64_t countAndFlagsBits = OpenFaceTimeIntent.Target.description.getter(v3);
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 41;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return 0xD00000000000001ALL;
}

uint64_t property wrapper backing initializer of OpenFaceTimeIntent.target()
{
  return IntentParameter.init(wrappedValue:)();
}

unint64_t lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target()
{
  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

void *associated type witness table accessor for RawRepresentable.RawValue : LosslessStringConvertible in OpenFaceTimeIntent.Target()
{
  return &protocol witness table for String;
}

unint64_t lazy protocol witness table accessor for type [OpenFaceTimeIntent.Target] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [OpenFaceTimeIntent.Target] and conformance [A];
  if (!lazy protocol witness table cache variable for type [OpenFaceTimeIntent.Target] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [OpenFaceTimeIntent.Target]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [OpenFaceTimeIntent.Target] and conformance [A]);
  }
  return result;
}

unint64_t protocol witness for static AppIntentRepresentation.bundleIdentifier.getter in conformance OpenFaceTimeIntent()
{
  return 0xD000000000000012;
}

unint64_t protocol witness for static AppIntentRepresentation.actionIdentifier.getter in conformance OpenFaceTimeIntent()
{
  return 0xD000000000000012;
}

uint64_t protocol witness for AppIntentRepresentation.exportToSpecification() in conformance OpenFaceTimeIntent()
{
  return AppIntentRepresentation.exportToSpecification()();
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance OpenFaceTimeIntent()
{
  return OpenFaceTimeIntent.description.getter();
}

uint64_t sub_2B443C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OpenFaceTimeIntent.target.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2B4468()
{
  return OpenFaceTimeIntent.target.setter();
}

ValueMetadata *type metadata accessor for OpenFaceTimeIntent()
{
  return &type metadata for OpenFaceTimeIntent;
}

unsigned char *storeEnumTagSinglePayload for OpenFaceTimeIntent.Target(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2B4550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenFaceTimeIntent.Target()
{
  return &type metadata for OpenFaceTimeIntent.Target;
}

unint64_t OUTLINED_FUNCTION_0_56()
{
  return 0xD000000000000012;
}

PhoneCallFlowDelegatePlugin::HangUpCallCATs::Properties_optional __swiftcall HangUpCallCATs.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of HangUpCallCATs.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::HangUpCallCATs::Properties_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::HangUpCallCATs::Properties_optional)v3;
  }
}

unint64_t HangUpCallCATs.Properties.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000018;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000026;
    }
    else {
      return 0xD000000000000020;
    }
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance HangUpCallCATs.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance HangUpCallCATs.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance HangUpCallCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance HangUpCallCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::HangUpCallCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATs.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::HangUpCallCATs::Properties_optional *a2@<X8>)
{
  result.int value = HangUpCallCATs.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance HangUpCallCATs.Properties@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = HangUpCallCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t HangUpCallCATs.errorWithCode(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t HangUpCallCATs.errorWithCode()(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  unint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *unint64_t v3 = v4;
  v3[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return v6(a1, 0xD000000000000018, 0x8000000000490720, _swiftEmptyArrayStorage);
}

uint64_t HangUpCallCATs.errorWithCode()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::String v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = HangUpCallCATs.errorWithCode();
  return v4(0xD000000000000018, 0x8000000000490720, _swiftEmptyArrayStorage);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t HangUpCallCATs.errorWithCodeNoCallToHangUp(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t HangUpCallCATs.errorWithCodeNoCallToHangUp()(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  unint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *unint64_t v3 = v4;
  v3[1] = protocol witness for CallNotificationContextProviding.update(aceServiceInvoker:refId:applicationId:) in conformance CallNotificationContextProvider;
  return v6(a1, 0xD000000000000026, 0x8000000000490740, _swiftEmptyArrayStorage);
}

uint64_t HangUpCallCATs.errorWithCodeNoCallToHangUp()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::String v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = HangUpCallCATs.errorWithCodeNoCallToHangUp();
  return v4(0xD000000000000026, 0x8000000000490740, _swiftEmptyArrayStorage);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  unint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = *v1;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v0) {
    uint64_t v4 = v3;
  }
  return v5(v4);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t HangUpCallCATs.intentHandledResponse(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t HangUpCallCATs.intentHandledResponse()(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  unint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *unint64_t v3 = v4;
  v3[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return v6(a1, 0xD000000000000020, 0x8000000000490770, _swiftEmptyArrayStorage);
}

uint64_t HangUpCallCATs.intentHandledResponse()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::String v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = HangUpCallCATs.errorWithCode();
  return v4(0xD000000000000020, 0x8000000000490770, _swiftEmptyArrayStorage);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t HangUpCallCATs.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return HangUpCallCATs.init(templateDir:options:globals:)(a1, a2);
}

uint64_t HangUpCallCATs.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CATOption();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8 - 8);
  outlined init with copy of URL?(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  outlined destroy of URL?(a1);
  return v10;
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATs.Properties and conformance HangUpCallCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATs.Properties and conformance HangUpCallCATs.Properties;
  if (!lazy protocol witness table cache variable for type HangUpCallCATs.Properties and conformance HangUpCallCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATs.Properties and conformance HangUpCallCATs.Properties);
  }
  return result;
}

uint64_t type metadata accessor for HangUpCallCATs()
{
  uint64_t result = type metadata singleton initialization cache for HangUpCallCATs;
  if (!type metadata singleton initialization cache for HangUpCallCATs) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for HangUpCallCATs()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for HangUpCallCATs()
{
  return type metadata accessor for HangUpCallCATs();
}

unsigned char *storeEnumTagSinglePayload for HangUpCallCATs.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2B5058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HangUpCallCATs.Properties()
{
  return &type metadata for HangUpCallCATs.Properties;
}

uint64_t LazyContainer._value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)*v1;
  uint64_t v4 = *((void *)*v1 + 10);
  uint64_t v5 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v19[-v12];
  uint64_t v14 = (char *)v1 + *(void *)(v3 + 112);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v7 + 16))(v13, v14, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v4) == 1)
  {
    uint64_t v15 = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v13, v5);
    v1[3](v15);
    OUTLINED_FUNCTION_9_3();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v11, a1, v4);
    OUTLINED_FUNCTION_4_70();
    swift_beginAccess();
    (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 40))(v14, v11, v5);
    return swift_endAccess();
  }
  else
  {
    OUTLINED_FUNCTION_9_3();
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v18 + 32))(a1, v13, v4);
  }
}

uint64_t LazyContainer._value.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - v8;
  OUTLINED_FUNCTION_9_3();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v9, a1, v3);
  OUTLINED_FUNCTION_4_70();
  uint64_t v11 = v1 + *(void *)(*(void *)v1 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v11, v9, v4);
  return swift_endAccess();
}

uint64_t LazyContainer.__allocating_init(load:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  LazyContainer.init(load:)(a1, a2);
  return v4;
}

void *LazyContainer.init(load:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v13 - 8);
  OUTLINED_FUNCTION_4();
  type metadata accessor for OS_dispatch_queue();
  uint64_t v14 = *(void *)(v4 + 80);
  swift_getMetatypeMetadata();
  v15._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  static DispatchQoS.unspecified.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v5);
  v3[2] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *((unsigned char *)v3 + 40) = 0;
  __swift_storeEnumTagSinglePayload((uint64_t)v3 + *(void *)(*v3 + 112), 1, 1, v14);
  v3[3] = a1;
  void v3[4] = a2;
  return v3;
}

uint64_t LazyContainer.lazyInitialize()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_52();
  static Signpost.begin(_:)();
  static DispatchWorkItemFlags.barrier.getter();
  OS_dispatch_queue.sync<A>(flags:execute:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  Signpost.OpenSignpost.end()();
  return swift_release();
}

uint64_t LazyContainer.get()@<X0>(uint64_t a1@<X8>)
{
  OS_dispatch_queue.sync<A>(execute:)();
  if (v3 == 1) {
    return LazyContainer._value.getter(a1);
  }
  else {
    return LazyContainer.lazyInitialize()();
  }
}

void partial apply for closure #1 in LazyContainer.get()(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

Swift::Void __swiftcall LazyContainer.reload()()
{
  uint64_t v2 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_52();
  static DispatchWorkItemFlags.barrier.getter();
  aBlock[4] = partial apply for closure #1 in LazyContainer.reload();
  uint64_t v15 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_6;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  swift_release();
}

uint64_t closure #1 in LazyContainer.reload()(uint64_t a1)
{
  uint64_t result = __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v5 - v3;
  if (*(unsigned char *)(result + 40) == 1)
  {
    (*(void (**)(void))(a1 + 24))();
    return LazyContainer._value.setter((uint64_t)v4);
  }
  return result;
}

uint64_t partial apply for closure #1 in LazyContainer.reload()()
{
  return closure #1 in LazyContainer.reload()(v0);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

id *LazyContainer.deinit()
{
  swift_release();
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 14);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t LazyContainer.__deallocating_deinit()
{
  LazyContainer.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata completion function for LazyContainer()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LazyContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for closure #1 in LazyContainer.lazyInitialize()@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + 40) = 1;
  return LazyContainer._value.getter(a1);
}

uint64_t OUTLINED_FUNCTION_4_70()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t *EligibleAppFinder.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  return &static EligibleAppFinder.instance;
}

uint64_t static EligibleAppFinder.instance.getter()
{
  if (one-time initialization token for instance != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t EligibleAppFinder.().init()()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  v8[0] = type metadata accessor for OS_dispatch_queue();
  static DispatchQoS.userInteractive.getter();
  v8[1] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  *(void *)(v0 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
  return v0;
}

uint64_t closure #1 in EligibleAppFinder.prefetchApps(intentTypeNames:)(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(a2 + 24);
    uint64_t v4 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      uint64_t v29 = v2;
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      uint64_t v7 = one-time initialization token for siriPhone;
      swift_bridgeObjectRetain();
      if (v7 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
      swift_bridgeObjectRetain_n();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        v31[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v11 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v6, v31);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v9, v10, "#EligibleAppFinder prefetching apps for %s", (uint8_t *)v11, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v12 = EligibleAppFinder.makeTask(intentTypeName:)(v5, v6);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v14 = (void *)*v3;
      uint64_t v30 = (void *)*v3;
      *uint64_t v3 = 0x8000000000000000;
      unint64_t v15 = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
      uint64_t v17 = v14[2];
      BOOL v18 = (v16 & 1) == 0;
      Swift::Int v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        break;
      }
      unint64_t v20 = v15;
      char v21 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Task<[App], Never>>);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v19))
      {
        unint64_t v22 = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_21;
        }
        unint64_t v20 = v22;
      }
      if (v21)
      {
        uint64_t v24 = v30[7];
        swift_release();
        *(void *)(v24 + 8 * v20) = v12;
      }
      else
      {
        v30[(v20 >> 6) + 8] |= 1 << v20;
        uint64_t v25 = (uint64_t *)(v30[6] + 16 * v20);
        *uint64_t v25 = v5;
        v25[1] = v6;
        *(void *)(v30[7] + 8 * v20) = v12;
        uint64_t v26 = v30[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_20;
        }
        v30[2] = v28;
        swift_bridgeObjectRetain();
      }
      v4 += 2;
      *uint64_t v3 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      uint64_t v2 = v29 - 1;
      if (v29 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_2B62A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_17_7();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t partial apply for closure #1 in EligibleAppFinder.prefetchApps(intentTypeNames:)()
{
  return closure #1 in EligibleAppFinder.prefetchApps(intentTypeNames:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t EligibleAppFinder.findEligibleApps(intentTypeName:)(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)EligibleAppFinder.findEligibleApps(intentTypeName:));
}

uint64_t EligibleAppFinder.findEligibleApps(intentTypeName:)()
{
  uint64_t v23 = v0;
  static Signpost.begin(_:)();
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  *(_WORD *)(v0 + 40) = v4;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v0 + 112) = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = *(void *)(v0 + 96);
  if (v8)
  {
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v9, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v6, v7, "#EligibleAppFinder finding apps for %s ..", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 88);
  unint64_t v15 = *(void **)(v12 + 16);
  char v16 = (void *)swift_task_alloc();
  v16[2] = v12;
  v16[3] = v14;
  v16[4] = v13;
  id v17 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<[App], Never>);
  OS_dispatch_queue.sync<A>(execute:)();

  swift_task_dealloc();
  uint64_t v18 = *(void *)(v0 + 48);
  *(void *)(v0 + 120) = v18;
  Swift::Int v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [App]);
  *Swift::Int v19 = v0;
  v19[1] = EligibleAppFinder.findEligibleApps(intentTypeName:);
  return Task<>.value.getter(v0 + 56, v18, v20);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(EligibleAppFinder.findEligibleApps(intentTypeName:), 0, 0);
}

void EligibleAppFinder.findEligibleApps(intentTypeName:)()
{
  uint64_t v26 = v0;
  unint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = v0[11];
    unint64_t v4 = v0[12];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v0[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v4, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    }
    if (v7)
    {
      uint64_t v25 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v7 < 0)
      {
        __break(1u);
        return;
      }
      char v21 = v0;
      os_log_type_t v22 = v3;
      uint64_t v23 = v6;
      uint64_t v8 = 0;
      unint64_t v9 = v25;
      unint64_t v10 = v1 & 0xC000000000000001;
      unint64_t v11 = v1;
      do
      {
        if (v10) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        uint64_t v12 = App.appIdentifier.getter();
        uint64_t v14 = v13;
        swift_release();
        uint64_t v25 = v9;
        unint64_t v15 = v9[2];
        if (v15 >= v9[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          unint64_t v9 = v25;
        }
        ++v8;
        void v9[2] = v15 + 1;
        char v16 = &v9[2 * v15];
        v16[4] = v12;
        v16[5] = v14;
        unint64_t v1 = v11;
      }
      while (v7 != v8);
      uint64_t v0 = v21;
      uint64_t v6 = v23;
      os_log_type_t v3 = v22;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v17 = Array.description.getter();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[9] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v2, v3, "#EligibleAppFinder found apps for %s -> %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  Signpost.OpenSignpost.end()();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_17_14();
  v20(v1);
}

uint64_t closure #1 in EligibleAppFinder.findEligibleApps(intentTypeName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 24);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v11 = EligibleAppFinder.makeTask(intentTypeName:)(a2, a3);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized Dictionary._Variant.setValue(_:forKey:)();
    swift_endAccess();
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_retain();
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v11;
  return result;
}

uint64_t EligibleAppFinder.findEligibleApps(intentTypeNames:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)EligibleAppFinder.findEligibleApps(intentTypeNames:));
}

uint64_t EligibleAppFinder.findEligibleApps(intentTypeNames:)()
{
  uint64_t v14 = v0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    specialized Set.init(_nonEmptyArrayLiteral:)((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v1 = v12;
  }
  else
  {
    uint64_t v1 = &_swiftEmptySetSingleton;
  }
  uint64_t v2 = (void *)v0[4];
  v0[2] = v1;
  uint64_t v3 = v2[2];
  v0[6] = v3;
  if (v3)
  {
    v0[7] = 0;
    uint64_t v4 = v2[5];
    v0[8] = v4;
    uint64_t v5 = v2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[9] = v6;
    *uint64_t v6 = v0;
    v6[1] = EligibleAppFinder.findEligibleApps(intentTypeNames:);
    return EligibleAppFinder.findEligibleApps(intentTypeName:)(v5, v4);
  }
  else
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    unint64_t v9 = (unint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v9 & 0x8000000000000000) != 0 || (char v10 = (void *)v9, (v9 & 0x4000000000000000) != 0))
    {
      char v10 = specialized _copyCollectionToContiguousArray<A>(_:)(v9);
      swift_release();
    }
    uint64_t v13 = v10;
    specialized MutableCollection<>.sort(by:)((uint64_t *)&v13);
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_14();
    return v11();
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  *(void *)(v4 + 80) = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(EligibleAppFinder.findEligibleApps(intentTypeNames:), 0, 0);
}

{
  void *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  void *v21;
  void *v22;

  os_log_type_t v22 = v0;
  v0[3] = _swiftEmptyArrayStorage;
  uint64_t v1 = (unint64_t)(v0 + 3);
  uint64_t v2 = v0[10];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v2 & 0xC000000000000001;
  do
  {
    if (v5) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    App.appIdentifier.getter();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
    ++v4;
  }
  while (v3 != v4);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)v0[3];
LABEL_15:
  unint64_t v9 = v0[6];
  char v10 = v0[7] + 1;
  specialized Set.formUnion<A>(_:)((unint64_t)v8);
  if (v10 == v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v1 = (unint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v1 & 0x8000000000000000) == 0)
    {
      uint64_t v12 = (void *)v1;
      if ((v1 & 0x4000000000000000) == 0)
      {
LABEL_18:
        char v21 = v12;
        specialized MutableCollection<>.sort(by:)((uint64_t *)&v21);
        swift_release();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_17_14();
        OUTLINED_FUNCTION_2_42();
        __asm { BRAA            X2, X16 }
      }
    }
LABEL_26:
    uint64_t v12 = specialized _copyCollectionToContiguousArray<A>(_:)(v1);
    swift_release();
    goto LABEL_18;
  }
  uint64_t v13 = v0[7] + 1;
  v0[7] = v13;
  v0[8] = *(void *)(v0[4] + 16 * v13 + 40);
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[9] = v14;
  *uint64_t v14 = v0;
  v14[1] = EligibleAppFinder.findEligibleApps(intentTypeNames:);
  OUTLINED_FUNCTION_2_42();
  return EligibleAppFinder.findEligibleApps(intentTypeName:)(v15, v16);
}

unint64_t specialized Set.formUnion<A>(_:)(unint64_t result)
{
  unint64_t v1 = result;
  if (result >> 62)
  {
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    if (!v2) {
      goto LABEL_9;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v4 = *(void *)(v1 + 8 * i + 32);
      swift_retain();
    }
    specialized Set._Variant.insert(_:)(&v5, v4);
    swift_release();
  }
LABEL_9:

  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in EligibleAppFinder.makeTask(intentTypeName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  return _swift_task_switch(closure #1 in EligibleAppFinder.makeTask(intentTypeName:), 0, 0);
}

uint64_t closure #1 in EligibleAppFinder.makeTask(intentTypeName:)()
{
  OUTLINED_FUNCTION_1_0();
  static Signpost.begin(_:)();
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 120) = v3;
  *(_WORD *)(v0 + 160) = v4;
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v6 = v5;
  *(void *)(v0 + 128) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467710;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v8;
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v10 = v9;
  *(void *)(v0 + 136) = v9;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v11;
  *uint64_t v11 = v0;
  v11[1] = closure #1 in EligibleAppFinder.makeTask(intentTypeName:);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 96);
  return static AppFinder.listApps(intentID:siriAuthorizationRestriction:extensionPointIdentifierRestriction:)(v13, v12, v6, v10);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  *(void *)(v4 + 152) = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(closure #1 in EligibleAppFinder.makeTask(intentTypeName:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  uint64_t v14 = v0;
  Signpost.OpenSignpost.end()();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  __int16 v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 96);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    type metadata accessor for App();
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v2, v3, "#EligibleAppFinder retrieved apps for %s -> %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  **(void **)(v0 + 80) = *(void *)(v0 + 152);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t protocol witness for PrefetchableAppFinding.prefetchApps(intentTypeNames:) in conformance EligibleAppFinder()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t protocol witness for PrefetchableAppFinding.findEligibleApps(intentTypeNames:) in conformance EligibleAppFinder(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 168) + **(int **)(**(void **)v1 + 168));
  __int16 v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = protocol witness for PrefetchableAppFinding.findEligibleApps(intentTypeNames:) in conformance EligibleAppFinder;
  return v6(a1);
}

uint64_t protocol witness for PrefetchableAppFinding.findEligibleApps(intentTypeNames:) in conformance EligibleAppFinder()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_2();
  void *v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_14();
  return v5(v2);
}

uint64_t specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_174;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  uint64_t v114 = v6;
  uint64_t v116 = result;
  uint64_t v108 = a1;
  if (v3 <= 0)
  {
LABEL_138:
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    unint64_t v51 = _swiftEmptyArrayStorage[2];
LABEL_139:
    if (v51 < 2)
    {
LABEL_150:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1) {
        goto LABEL_151;
      }
      goto LABEL_178;
    }
    uint64_t v100 = *v108;
    while (1)
    {
      unint64_t v101 = v51 - 2;
      if (v51 < 2) {
        break;
      }
      if (!v100) {
        goto LABEL_182;
      }
      uint64_t v102 = *(void *)&v8[16 * v101 + 32];
      uint64_t v103 = *(void *)&v8[16 * v51 + 24];
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v100 + 8 * v102), (char *)(v100 + 8 * *(void *)&v8[16 * v51 + 16]), v100 + 8 * v103, v114);
      if (v1) {
        goto LABEL_136;
      }
      if (v103 < v102) {
        goto LABEL_169;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v8);
        uint64_t v8 = (char *)result;
      }
      if (v101 >= *((void *)v8 + 2)) {
        goto LABEL_170;
      }
      uint64_t v104 = &v8[16 * v101 + 32];
      *(void *)uint64_t v104 = v102;
      *((void *)v104 + 1) = v103;
      unint64_t v105 = *((void *)v8 + 2);
      if (v51 > v105) {
        goto LABEL_171;
      }
      uint64_t result = (uint64_t)memmove(&v8[16 * v51 + 16], &v8[16 * v51 + 32], 16 * (v105 - v51));
      *((void *)v8 + 2) = v105 - 1;
      unint64_t v51 = v105 - 1;
      if (v105 <= 2) {
        goto LABEL_150;
      }
    }
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
    return result;
  }
  uint64_t v109 = v5;
  Swift::Int v7 = 0;
  uint64_t v107 = *a1 - 8;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v112 = v3;
  uint64_t v115 = *a1;
  while (1)
  {
    Swift::Int v9 = v7++;
    Swift::Int v111 = v9;
    if (v7 < v3)
    {
      swift_retain();
      swift_retain();
      uint64_t v10 = App.appIdentifier.getter();
      if (v11) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 0;
      }
      if (v11) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = 0xE000000000000000;
      }
      uint64_t v14 = App.appIdentifier.getter();
      if (v15)
      {
        unint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v16 = 0xE000000000000000;
      }
      if (v14 == v12 && v16 == v13) {
        int v18 = 0;
      }
      else {
        int v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = swift_release();
      Swift::Int v7 = v9 + 2;
      uint64_t v19 = v115;
      if (v9 + 2 < v112)
      {
        while (1)
        {
          swift_retain();
          swift_retain();
          uint64_t v20 = App.appIdentifier.getter();
          uint64_t v22 = v21 ? v20 : 0;
          unint64_t v23 = v21 ? v21 : 0xE000000000000000;
          uint64_t v24 = App.appIdentifier.getter();
          if (v25)
          {
            unint64_t v26 = v25;
          }
          else
          {
            uint64_t v24 = 0;
            unint64_t v26 = 0xE000000000000000;
          }
          BOOL v27 = v24 == v22 && v26 == v23;
          int v28 = v27 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t result = swift_release();
          if ((v18 ^ v28)) {
            break;
          }
          Swift::Int v29 = v9 + 3;
          ++v9;
          uint64_t v19 = v115;
          if (v29 >= v112)
          {
            Swift::Int v7 = v112;
            goto LABEL_40;
          }
        }
        Swift::Int v7 = v9 + 2;
        uint64_t v19 = v115;
      }
LABEL_40:
      if (v18)
      {
        Swift::Int v9 = v111;
        if (v7 < v111) {
          goto LABEL_175;
        }
        if (v111 >= v7)
        {
          Swift::Int v3 = v112;
        }
        else
        {
          uint64_t v30 = (uint64_t *)(v107 + 8 * v7);
          Swift::Int v31 = v7;
          Swift::Int v32 = v111;
          uint64_t v33 = (uint64_t *)(v19 + 8 * v111);
          Swift::Int v3 = v112;
          do
          {
            if (v32 != --v31)
            {
              if (!v19) {
                goto LABEL_181;
              }
              uint64_t v34 = *v33;
              *uint64_t v33 = *v30;
              *uint64_t v30 = v34;
            }
            ++v32;
            --v30;
            ++v33;
          }
          while (v32 < v31);
        }
      }
      else
      {
        Swift::Int v9 = v111;
        Swift::Int v3 = v112;
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v9)) {
        goto LABEL_173;
      }
      if (v7 - v9 < v109)
      {
        if (__OFADD__(v9, v109)) {
          goto LABEL_176;
        }
        if (v9 + v109 >= v3) {
          Swift::Int v35 = v3;
        }
        else {
          Swift::Int v35 = v9 + v109;
        }
        if (v35 < v9) {
          goto LABEL_177;
        }
        if (v7 != v35)
        {
          uint64_t v106 = v8;
          int v36 = (void *)(v107 + 8 * v7);
          Swift::Int v110 = v35;
          do
          {
            Swift::Int v37 = v9;
            uint64_t v113 = v36;
            uint64_t v38 = v36;
            while (1)
            {
              swift_retain();
              swift_retain();
              uint64_t v39 = App.appIdentifier.getter();
              uint64_t v41 = v40 ? v39 : 0;
              unint64_t v42 = v40 ? v40 : 0xE000000000000000;
              uint64_t v43 = App.appIdentifier.getter();
              if (v44)
              {
                unint64_t v45 = v44;
              }
              else
              {
                uint64_t v43 = 0;
                unint64_t v45 = 0xE000000000000000;
              }
              if (v43 == v41 && v45 == v42) {
                break;
              }
              char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if ((v47 & 1) == 0) {
                goto LABEL_80;
              }
              if (!v115) {
                goto LABEL_179;
              }
              uint64_t v48 = *v38;
              *uint64_t v38 = v38[1];
              v38[1] = v48;
              --v38;
              if (v7 == ++v37) {
                goto LABEL_80;
              }
            }
            swift_release();
            swift_release();
            uint64_t result = swift_bridgeObjectRelease_n();
LABEL_80:
            ++v7;
            int v36 = v113 + 1;
            Swift::Int v9 = v111;
          }
          while (v7 != v110);
          Swift::Int v7 = v110;
          uint64_t v8 = v106;
        }
      }
    }
    if (v7 < v9) {
      goto LABEL_172;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v8 + 2) + 1, 1, v8);
      uint64_t v8 = (char *)result;
    }
    unint64_t v50 = *((void *)v8 + 2);
    unint64_t v49 = *((void *)v8 + 3);
    unint64_t v51 = v50 + 1;
    uint64_t v52 = v115;
    if (v50 >= v49 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v49 > 1), v50 + 1, 1, v8);
      uint64_t v52 = v115;
      uint64_t v8 = (char *)result;
    }
    *((void *)v8 + 2) = v51;
    uint64_t v53 = v8 + 32;
    uint64_t v54 = &v8[16 * v50 + 32];
    *(void *)uint64_t v54 = v9;
    *((void *)v54 + 1) = v7;
    if (v50) {
      break;
    }
    unint64_t v51 = 1;
LABEL_130:
    Swift::Int v3 = v112;
    if (v7 >= v112) {
      goto LABEL_139;
    }
  }
  while (1)
  {
    unint64_t v55 = v51 - 1;
    if (v51 >= 4)
    {
      uint64_t v60 = &v53[2 * v51];
      uint64_t v61 = *(v60 - 8);
      uint64_t v62 = *(v60 - 7);
      BOOL v66 = __OFSUB__(v62, v61);
      uint64_t v63 = v62 - v61;
      if (v66) {
        goto LABEL_157;
      }
      uint64_t v65 = *(v60 - 6);
      uint64_t v64 = *(v60 - 5);
      BOOL v66 = __OFSUB__(v64, v65);
      uint64_t v58 = v64 - v65;
      char v59 = v66;
      if (v66) {
        goto LABEL_158;
      }
      unint64_t v67 = v51 - 2;
      uint64_t v68 = &v53[2 * v51 - 4];
      uint64_t v70 = *v68;
      uint64_t v69 = v68[1];
      BOOL v66 = __OFSUB__(v69, v70);
      uint64_t v71 = v69 - v70;
      if (v66) {
        goto LABEL_159;
      }
      BOOL v66 = __OFADD__(v58, v71);
      uint64_t v72 = v58 + v71;
      if (v66) {
        goto LABEL_161;
      }
      if (v72 >= v63)
      {
        uint64_t v90 = &v53[2 * v55];
        uint64_t v92 = *v90;
        uint64_t v91 = v90[1];
        BOOL v66 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v66) {
          goto LABEL_167;
        }
        BOOL v83 = v58 < v93;
        goto LABEL_119;
      }
    }
    else
    {
      if (v51 != 3)
      {
        uint64_t v84 = *((void *)v8 + 4);
        uint64_t v85 = *((void *)v8 + 5);
        BOOL v66 = __OFSUB__(v85, v84);
        uint64_t v77 = v85 - v84;
        char v78 = v66;
        goto LABEL_113;
      }
      uint64_t v57 = *((void *)v8 + 4);
      uint64_t v56 = *((void *)v8 + 5);
      BOOL v66 = __OFSUB__(v56, v57);
      uint64_t v58 = v56 - v57;
      char v59 = v66;
    }
    if (v59) {
      goto LABEL_160;
    }
    unint64_t v67 = v51 - 2;
    uint64_t v73 = &v53[2 * v51 - 4];
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    BOOL v76 = __OFSUB__(v74, v75);
    uint64_t v77 = v74 - v75;
    char v78 = v76;
    if (v76) {
      goto LABEL_162;
    }
    uint64_t v79 = &v53[2 * v55];
    uint64_t v81 = *v79;
    uint64_t v80 = v79[1];
    BOOL v66 = __OFSUB__(v80, v81);
    uint64_t v82 = v80 - v81;
    if (v66) {
      goto LABEL_164;
    }
    if (__OFADD__(v77, v82)) {
      goto LABEL_166;
    }
    if (v77 + v82 >= v58)
    {
      BOOL v83 = v58 < v82;
LABEL_119:
      if (v83) {
        unint64_t v55 = v67;
      }
      goto LABEL_121;
    }
LABEL_113:
    if (v78) {
      goto LABEL_163;
    }
    uint64_t v86 = &v53[2 * v55];
    uint64_t v88 = *v86;
    uint64_t v87 = v86[1];
    BOOL v66 = __OFSUB__(v87, v88);
    uint64_t v89 = v87 - v88;
    if (v66) {
      goto LABEL_165;
    }
    if (v89 < v77) {
      goto LABEL_130;
    }
LABEL_121:
    unint64_t v94 = v55 - 1;
    if (v55 - 1 >= v51)
    {
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
      goto LABEL_168;
    }
    if (!v52) {
      goto LABEL_180;
    }
    uint64_t v95 = &v53[2 * v94];
    uint64_t v96 = *v95;
    uint64_t v97 = &v53[2 * v55];
    uint64_t v98 = v97[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v52 + 8 * *v95), (char *)(v52 + 8 * *v97), v52 + 8 * v98, v114);
    if (v1) {
      break;
    }
    if (v98 < v96) {
      goto LABEL_154;
    }
    if (v55 > *((void *)v8 + 2)) {
      goto LABEL_155;
    }
    *uint64_t v95 = v96;
    v53[2 * v94 + 1] = v98;
    unint64_t v99 = *((void *)v8 + 2);
    if (v55 >= v99) {
      goto LABEL_156;
    }
    unint64_t v51 = v99 - 1;
    uint64_t result = (uint64_t)memmove(&v53[2 * v55], v97 + 2, 16 * (v99 - 1 - v55));
    *((void *)v8 + 2) = v99 - 1;
    uint64_t v52 = v115;
    if (v99 <= 2) {
      goto LABEL_130;
    }
  }
  Swift::Int v3 = v112;
LABEL_136:
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 < -1)
  {
    __break(1u);
    goto LABEL_138;
  }
LABEL_151:
  *(void *)((char *)&dword_10 + (v116 & 0xFFFFFFFFFFFFFF8)) = 0;
  specialized Array._endMutation()();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t *v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  Swift::Int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_156;
    }
    if (v3) {
      return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
    }
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  uint64_t v98 = result;
  uint64_t v89 = a1;
  if (v3 <= 0) {
    goto LABEL_120;
  }
  uint64_t v90 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v88 = *a1 - 8;
  Swift::Int v9 = (char *)_swiftEmptyArrayStorage;
  while (2)
  {
    uint64_t v10 = v7 + 1;
    unint64_t v94 = v7;
    if (v7 + 1 >= v3) {
      goto LABEL_40;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v92 = 0;
    }
    else
    {
      self;
      unint64_t v11 = swift_dynamicCastObjCClass();
      uint64_t v12 = 1;
      if (!v11) {
        uint64_t v12 = 2;
      }
      uint64_t v92 = v12;
    }
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result)
    {
      uint64_t v91 = 0;
    }
    else
    {
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      unint64_t v13 = 1;
      if (!result) {
        unint64_t v13 = 2;
      }
      uint64_t v91 = v13;
    }
    uint64_t v10 = v7 + 2;
    if (v7 + 2 >= v3) {
      goto LABEL_32;
    }
    while (1)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t v14 = 0;
      }
      else
      {
        self;
        if (swift_dynamicCastObjCClass()) {
          uint64_t v14 = 1;
        }
        else {
          uint64_t v14 = 2;
        }
      }
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result)
      {
        if (v92 < v91)
        {
          uint64_t v10 = v7 + 2;
          Swift::Int v7 = v94;
          Swift::Int v3 = v96;
          goto LABEL_33;
        }
        goto LABEL_28;
      }
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        break;
      }
      if (v92 < v91 == v14 > 1) {
        goto LABEL_30;
      }
LABEL_28:
      ++v10;
      unint64_t v15 = v7 + 3;
      ++v7;
      if (v15 >= v96)
      {
        Swift::Int v3 = v96;
        uint64_t v10 = v96;
        goto LABEL_31;
      }
    }
    if (v92 < v91 != (v14 != 0)) {
      goto LABEL_28;
    }
    uint64_t v10 = v7 + 2;
LABEL_30:
    Swift::Int v3 = v96;
LABEL_31:
    Swift::Int v7 = v94;
LABEL_32:
    if (v92 < v91)
    {
LABEL_33:
      if (v10 < v7) {
        goto LABEL_157;
      }
      if (v7 < v10)
      {
        unint64_t v16 = (uint64_t *)(v88 + 8 * v10);
        uint64_t v17 = v10;
        int v18 = v7;
        uint64_t v19 = (uint64_t *)(v8 + 8 * v7);
        do
        {
          if (v18 != --v17)
          {
            if (!v8) {
              goto LABEL_163;
            }
            uint64_t v20 = *v19;
            *uint64_t v19 = *v16;
            *unint64_t v16 = v20;
          }
          ++v18;
          --v16;
          ++v19;
        }
        while (v18 < v17);
      }
    }
LABEL_40:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v7)) {
        goto LABEL_155;
      }
      if (v10 - v7 < v90)
      {
        if (__OFADD__(v7, v90)) {
          goto LABEL_158;
        }
        if (v7 + v90 >= v3) {
          unint64_t v21 = v3;
        }
        else {
          unint64_t v21 = v7 + v90;
        }
        if (v21 < v7)
        {
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (v10 != v21)
        {
          uint64_t v93 = v21;
          uint64_t v22 = (uint64_t *)(v88 + 8 * v10);
          do
          {
            unint64_t v23 = v22;
            do
            {
              self;
              if (swift_dynamicCastObjCClass())
              {
                uint64_t v24 = 0;
              }
              else
              {
                self;
                if (swift_dynamicCastObjCClass()) {
                  uint64_t v24 = 1;
                }
                else {
                  uint64_t v24 = 2;
                }
              }
              self;
              uint64_t result = swift_dynamicCastObjCClass();
              if (result) {
                break;
              }
              self;
              uint64_t result = swift_dynamicCastObjCClass();
              if (result)
              {
                if (v24) {
                  break;
                }
              }
              else if (v24 > 1)
              {
                break;
              }
              if (!v8) {
                goto LABEL_161;
              }
              unint64_t v25 = *v23;
              *unint64_t v23 = v23[1];
              v23[1] = v25;
              --v23;
              ++v7;
            }
            while (v10 != v7);
            ++v10;
            ++v22;
            Swift::Int v7 = v94;
          }
          while (v10 != v93);
          uint64_t v10 = v93;
        }
      }
    }
    if (v10 < v7) {
      goto LABEL_154;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v10;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v9 + 2) + 1, 1, v9);
      Swift::Int v9 = (char *)result;
    }
    BOOL v27 = *((void *)v9 + 2);
    unint64_t v26 = *((void *)v9 + 3);
    int v28 = v27 + 1;
    if (v27 >= v26 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v26 > 1), v27 + 1, 1, v9);
      Swift::Int v9 = (char *)result;
    }
    *((void *)v9 + 2) = v28;
    Swift::Int v29 = v9 + 32;
    uint64_t v30 = &v9[16 * v27 + 32];
    *(void *)uint64_t v30 = v7;
    *((void *)v30 + 1) = v95;
    if (!v27)
    {
      int v28 = 1;
LABEL_113:
      Swift::Int v7 = v95;
      Swift::Int v3 = v96;
      if (v95 >= v96) {
        goto LABEL_121;
      }
      continue;
    }
    break;
  }
  while (2)
  {
    Swift::Int v31 = v28 - 1;
    if (v28 >= 4)
    {
      int v36 = &v29[2 * v28];
      Swift::Int v37 = *(v36 - 8);
      uint64_t v38 = *(v36 - 7);
      unint64_t v42 = __OFSUB__(v38, v37);
      uint64_t v39 = v38 - v37;
      if (v42) {
        goto LABEL_139;
      }
      uint64_t v41 = *(v36 - 6);
      unint64_t v40 = *(v36 - 5);
      unint64_t v42 = __OFSUB__(v40, v41);
      uint64_t v34 = v40 - v41;
      Swift::Int v35 = v42;
      if (v42) {
        goto LABEL_140;
      }
      uint64_t v43 = v28 - 2;
      unint64_t v44 = &v29[2 * v28 - 4];
      uint64_t v46 = *v44;
      unint64_t v45 = v44[1];
      unint64_t v42 = __OFSUB__(v45, v46);
      char v47 = v45 - v46;
      if (v42) {
        goto LABEL_141;
      }
      unint64_t v42 = __OFADD__(v34, v47);
      uint64_t v48 = v34 + v47;
      if (v42) {
        goto LABEL_143;
      }
      if (v48 >= v39)
      {
        BOOL v66 = &v29[2 * v31];
        uint64_t v68 = *v66;
        unint64_t v67 = v66[1];
        unint64_t v42 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v42) {
          goto LABEL_149;
        }
        char v59 = v34 < v69;
      }
      else
      {
LABEL_84:
        if (v35) {
          goto LABEL_142;
        }
        uint64_t v43 = v28 - 2;
        unint64_t v49 = &v29[2 * v28 - 4];
        unint64_t v51 = *v49;
        unint64_t v50 = v49[1];
        uint64_t v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        uint64_t v54 = v52;
        if (v52) {
          goto LABEL_144;
        }
        unint64_t v55 = &v29[2 * v31];
        uint64_t v57 = *v55;
        uint64_t v56 = v55[1];
        unint64_t v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_146;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_148;
        }
        if (v53 + v58 < v34) {
          goto LABEL_96;
        }
        char v59 = v34 < v58;
      }
      if (v59) {
        Swift::Int v31 = v43;
      }
    }
    else
    {
      if (v28 == 3)
      {
        uint64_t v33 = *((void *)v9 + 4);
        Swift::Int v32 = *((void *)v9 + 5);
        unint64_t v42 = __OFSUB__(v32, v33);
        uint64_t v34 = v32 - v33;
        Swift::Int v35 = v42;
        goto LABEL_84;
      }
      uint64_t v60 = *((void *)v9 + 4);
      uint64_t v61 = *((void *)v9 + 5);
      unint64_t v42 = __OFSUB__(v61, v60);
      uint64_t v53 = v61 - v60;
      uint64_t v54 = v42;
LABEL_96:
      if (v54) {
        goto LABEL_145;
      }
      uint64_t v62 = &v29[2 * v31];
      uint64_t v64 = *v62;
      uint64_t v63 = v62[1];
      unint64_t v42 = __OFSUB__(v63, v64);
      uint64_t v65 = v63 - v64;
      if (v42) {
        goto LABEL_147;
      }
      if (v65 < v53) {
        goto LABEL_113;
      }
    }
    uint64_t v70 = v31 - 1;
    if (v31 - 1 >= v28)
    {
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
      goto LABEL_150;
    }
    if (!v8) {
      goto LABEL_162;
    }
    uint64_t v71 = v9;
    uint64_t v72 = v8;
    uint64_t v73 = &v29[2 * v70];
    uint64_t v74 = *v73;
    uint64_t v75 = v29;
    BOOL v76 = v31;
    uint64_t v77 = &v29[2 * v31];
    char v78 = v77[1];
    uint64_t v79 = v72;
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((void *)(v72 + 8 * *v73), v72 + 8 * *v77, v72 + 8 * v78, v97);
    if (!v1)
    {
      if (v78 < v74) {
        goto LABEL_136;
      }
      if (v76 > *((void *)v71 + 2)) {
        goto LABEL_137;
      }
      *uint64_t v73 = v74;
      v75[2 * v70 + 1] = v78;
      uint64_t v80 = *((void *)v71 + 2);
      if (v76 >= v80) {
        goto LABEL_138;
      }
      Swift::Int v9 = v71;
      int v28 = v80 - 1;
      uint64_t result = (uint64_t)memmove(v77, v77 + 2, 16 * (v80 - 1 - v76));
      Swift::Int v29 = v75;
      *((void *)v71 + 2) = v80 - 1;
      uint64_t v8 = v79;
      if (v80 <= 2) {
        goto LABEL_113;
      }
      continue;
    }
    break;
  }
LABEL_118:
  swift_bridgeObjectRelease();
  if (v96 >= -1) {
    goto LABEL_133;
  }
  __break(1u);
LABEL_120:
  Swift::Int v9 = (char *)_swiftEmptyArrayStorage;
  int v28 = _swiftEmptyArrayStorage[2];
LABEL_121:
  uint64_t result = (uint64_t)v9;
  if (v28 >= 2)
  {
    uint64_t v81 = *v89;
    while (1)
    {
      uint64_t v82 = v28 - 2;
      if (v28 < 2) {
        break;
      }
      if (!v81) {
        goto LABEL_164;
      }
      BOOL v83 = result;
      uint64_t v84 = *(void *)(result + 32 + 16 * v82);
      uint64_t v85 = *(void *)(result + 32 + 16 * (v28 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((void *)(v81 + 8 * v84), v81 + 8 * *(void *)(result + 32 + 16 * (v28 - 1)), v81 + 8 * v85, v97);
      if (v1) {
        goto LABEL_118;
      }
      if (v85 < v84) {
        goto LABEL_151;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v83);
        BOOL v83 = result;
      }
      if (v82 >= *(void *)(v83 + 16)) {
        goto LABEL_152;
      }
      uint64_t v86 = (void *)(v83 + 32 + 16 * v82);
      uint64_t *v86 = v84;
      v86[1] = v85;
      uint64_t v87 = *(void *)(v83 + 16);
      if (v28 > v87) {
        goto LABEL_153;
      }
      memmove((void *)(v83 + 32 + 16 * (v28 - 1)), (const void *)(v83 + 32 + 16 * v28), 16 * (v87 - v28));
      uint64_t result = v83;
      *(void *)(v83 + 16) = v87 - 1;
      int v28 = v87 - 1;
      if (v87 <= 2) {
        goto LABEL_132;
      }
    }
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
LABEL_132:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 >= -1)
  {
LABEL_133:
    *(void *)((char *)&dword_10 + (v98 & 0xFFFFFFFFFFFFFF8)) = 0;
    specialized Array._endMutation()();
    return swift_bridgeObjectRelease();
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
  return result;
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v18 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v20 = *a4;
    uint64_t v5 = (void *)(*a4 + 8 * a3 - 8);
    while (2)
    {
      uint64_t v6 = v18;
      uint64_t v19 = v5;
      while (1)
      {
        swift_retain();
        swift_retain();
        uint64_t v7 = App.appIdentifier.getter();
        uint64_t v9 = v8 ? v7 : 0;
        unint64_t v10 = v8 ? v8 : 0xE000000000000000;
        uint64_t v11 = App.appIdentifier.getter();
        if (v12)
        {
          unint64_t v13 = v12;
        }
        else
        {
          uint64_t v11 = 0;
          unint64_t v13 = 0xE000000000000000;
        }
        if (v11 == v9 && v13 == v10) {
          break;
        }
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v15)
        {
          if (!v20)
          {
            __break(1u);
            return result;
          }
          uint64_t v16 = *v5;
          void *v5 = v5[1];
          v5[1] = v16;
          --v5;
          if (v4 != ++v6) {
            continue;
          }
        }
        goto LABEL_22;
      }
      swift_release();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_22:
      ++v4;
      uint64_t v5 = v19 + 1;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  unint64_t v12 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v7 = v12;
      unint64_t v8 = (uint64_t *)v6;
      do
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          uint64_t v9 = 0;
        }
        else
        {
          self;
          if (swift_dynamicCastObjCClass()) {
            uint64_t v9 = 1;
          }
          else {
            uint64_t v9 = 2;
          }
        }
        self;
        uint64_t result = swift_dynamicCastObjCClass();
        if (result) {
          break;
        }
        self;
        uint64_t result = swift_dynamicCastObjCClass();
        if (result)
        {
          if (v9) {
            break;
          }
        }
        else if (v9 > 1)
        {
          break;
        }
        if (!v5)
        {
          __break(1u);
          return result;
        }
        unint64_t v10 = *v8;
        *unint64_t v8 = v8[1];
        v8[1] = v10;
        --v8;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v6 += 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    unint64_t v12 = &v4[8 * v11];
    uint64_t v46 = a1;
    if (a1 >= a2 || v10 < 8)
    {
      uint64_t v14 = a2;
      goto LABEL_69;
    }
    Swift::Int v29 = (char *)(a3 - 8);
    uint64_t v14 = a2;
    unint64_t v45 = v4;
    while (1)
    {
      char v47 = v12 - 8;
      uint64_t v48 = v14;
      uint64_t v30 = v14 - 8;
      swift_retain();
      swift_retain();
      uint64_t v31 = App.appIdentifier.getter();
      if (v32) {
        uint64_t v33 = v31;
      }
      else {
        uint64_t v33 = 0;
      }
      if (v32) {
        unint64_t v34 = v32;
      }
      else {
        unint64_t v34 = 0xE000000000000000;
      }
      uint64_t v35 = App.appIdentifier.getter();
      if (v36)
      {
        unint64_t v37 = v36;
      }
      else
      {
        uint64_t v35 = 0;
        unint64_t v37 = 0xE000000000000000;
      }
      BOOL v38 = v35 == v33 && v37 == v34;
      unint64_t v50 = (unint64_t)v12;
      if (v38) {
        char v39 = 0;
      }
      else {
        char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      unint64_t v40 = v29 + 8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if (v39)
      {
        BOOL v41 = v40 != v48 || v29 >= v48;
        uint64_t v48 = v30;
        uint64_t v4 = v45;
        unint64_t v12 = (char *)v50;
        if (!v41) {
          goto LABEL_65;
        }
      }
      else
      {
        BOOL v42 = v40 != (char *)v50 || (unint64_t)v29 >= v50;
        unint64_t v12 = v47;
        uint64_t v30 = v47;
        uint64_t v4 = v45;
        if (!v42) {
          goto LABEL_65;
        }
      }
      *(void *)Swift::Int v29 = *(void *)v30;
LABEL_65:
      v29 -= 8;
      uint64_t v14 = v48;
      if (v48 <= v46 || v12 <= v4) {
        goto LABEL_69;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 8, a4);
  unint64_t v12 = &v4[8 * v9];
  BOOL v13 = (unint64_t)a2 >= a3 || v8 < 8;
  uint64_t v14 = a1;
  if (!v13)
  {
    char v15 = a2;
    unint64_t v49 = &v4[8 * v9];
    while (1)
    {
      swift_retain();
      swift_retain();
      uint64_t v16 = App.appIdentifier.getter();
      uint64_t v18 = v17 ? v16 : 0;
      unint64_t v19 = v17 ? v17 : 0xE000000000000000;
      uint64_t v20 = App.appIdentifier.getter();
      if (v21)
      {
        unint64_t v22 = v21;
      }
      else
      {
        uint64_t v20 = 0;
        unint64_t v22 = 0xE000000000000000;
      }
      if (v20 == v18 && v22 == v19) {
        break;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_23;
      }
      unint64_t v25 = v15;
      BOOL v26 = v14 == v15;
      v15 += 8;
LABEL_24:
      unint64_t v12 = v49;
      if (!v26) {
        *(void *)uint64_t v14 = *(void *)v25;
      }
      v14 += 8;
      if (v4 >= v49 || (unint64_t)v15 >= a3) {
        goto LABEL_69;
      }
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_23:
    unint64_t v25 = v4;
    BOOL v26 = v14 == v4;
    v4 += 8;
    goto LABEL_24;
  }
LABEL_69:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (v12 - v4) / 8, v14);
  return 1;
}

uint64_t sub_2B8578()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #1 in EligibleAppFinder.makeTask(intentTypeName:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  return closure #1 in EligibleAppFinder.makeTask(intentTypeName:)(a1, v4, v5, v7, v6);
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRSay17SiriAppResolution0E0CG_TG5(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  Swift::Int v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *Swift::Int v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRSay17SiriAppResolution0E0CG_TG5TQ0_;
  return v5(v2 + 16);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRSay17SiriAppResolution0E0CG_TG5TQ0_()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_2();
  void *v4 = v3;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_2B88E0()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_17_7();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRSay17SiriAppResolution0E0CG_TG5TA(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRSay17SiriAppResolution0E0CG_TG5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRSay17SiriAppResolution0E0CG_TG5Tu);
  return v6(a1, v4);
}

uint64_t partial apply for closure #1 in EligibleAppFinder.findEligibleApps(intentTypeName:)@<X0>(uint64_t *a1@<X8>)
{
  return closure #1 in EligibleAppFinder.findEligibleApps(intentTypeName:)(v1[2], v1[3], v1[4], a1);
}

uint64_t lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (App.isFirstParty()())
  {
    static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(a2, a3);
    type metadata accessor for App();
    a1 = App.__allocating_init(appIdentifier:)();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "#UserFacingCallingAppUtils Not a 1P app, returning original app", v9, 2u);
      OUTLINED_FUNCTION_1_78();
    }

    swift_retain();
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000043, 0x8000000000498320, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2080;
    type metadata accessor for App();
    lazy protocol witness table accessor for type App and conformance App();
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, v12, "#UserFacingCallingAppUtils %s --> %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    OUTLINED_FUNCTION_1_78();
  }
  else
  {

    swift_release_n();
  }
  return a1;
}

uint64_t static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(uint64_t a1, void *a2)
{
  uint64_t v4 = 0xD000000000000012;
  OUTLINED_FUNCTION_17_17(a2);
  char v5 = dispatch thunk of DeviceState.isPad.getter();
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v20);
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v19);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v18);
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    unint64_t v7 = 0x8000000000492070;
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_17_17(v20);
  char v6 = dispatch thunk of DeviceState.isPod.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v19);
  if (v6) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_17_17(v19);
  char v13 = dispatch thunk of DeviceState.isXRDevice.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v18);
  if (v13) {
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_17_17(v18);
  char v14 = dispatch thunk of DeviceState.isAppleTV.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  if (v14)
  {
    unint64_t v7 = 0x8000000000492070;
  }
  else
  {
    OUTLINED_FUNCTION_2_94();
    if (dispatch thunk of DeviceState.isMac.getter())
    {
      if (one-time initialization token for macFaceTimeBundleId != -1) {
        swift_once();
      }
      uint64_t v4 = static PhoneCallAppNameConstants.macFaceTimeBundleId;
      unint64_t v7 = unk_5D4E10;
      swift_bridgeObjectRetain();
    }
    else
    {
      OUTLINED_FUNCTION_2_94();
      char v15 = dispatch thunk of DeviceState.isWatch.getter();
      unint64_t v16 = 0xD000000000000015;
      if (a1 == 2) {
        unint64_t v16 = 0xD000000000000012;
      }
      unint64_t v17 = 0x80000000004932A0;
      if (a1 == 2) {
        unint64_t v17 = 0x8000000000492070;
      }
      if (v15) {
        uint64_t v4 = 0xD000000000000013;
      }
      else {
        uint64_t v4 = v16;
      }
      if (v15) {
        unint64_t v7 = 0x8000000000493280;
      }
      else {
        unint64_t v7 = v17;
      }
    }
  }
LABEL_6:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    v19[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032, 0x8000000000498370, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    v19[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v7, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v9, v10, "#UserFacingCallingAppUtils %s --> %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    OUTLINED_FUNCTION_1_78();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v4;
}

ValueMetadata *type metadata accessor for UserFacingCallingAppUtils()
{
  return &type metadata for UserFacingCallingAppUtils;
}

uint64_t OUTLINED_FUNCTION_1_78()
{
  return swift_slowDealloc();
}

uint64_t OUTLINED_FUNCTION_2_94()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t PhonePerson.Builder.__allocating_init()()
{
  return DialogPerson.Builder.init()();
}

uint64_t PhonePerson.__allocating_init(builder:)()
{
  return DialogPerson.init(builder:)();
}

uint64_t static PhonePerson.catTypeName.getter()
{
  return 0x65502E656E6F6870;
}

uint64_t PhonePerson.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000000493BF0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t result = specialized PhonePersonProperties<>.isUnnamedPhoneNumber.getter();
    *(void *)(a3 + 24) = &type metadata for Bool;
    *(unsigned char *)a3 = result & 1;
  }
  else
  {
    type metadata accessor for DialogPerson();
    unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))method lookup function for DialogPerson();
    return v7(a1, a2);
  }
  return result;
}

uint64_t PhonePerson.__allocating_init(from:)(uint64_t a1)
{
  return PhonePerson.init(from:)(a1);
}

uint64_t PhonePerson.init(from:)(uint64_t a1)
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v4);
  uint64_t v2 = DialogPerson.init(from:)();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t type metadata completion function for PhonePerson()
{
  return type metadata completion function for PhonePerson();
}

{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for PhonePerson()
{
  return type metadata accessor for PhonePerson(0);
}

uint64_t type metadata completion function for PhonePerson.Builder()
{
  return type metadata completion function for PhonePerson();
}

uint64_t ObjC metadata update function for PhonePerson.Builder()
{
  return type metadata accessor for PhonePerson.Builder(0);
}

void UpdateResponseCommand<>.submitUpdate(to:aceServiceInvoker:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a4;
  uint64_t v24 = a5;
  unint64_t v21 = a3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)SAUIUpdateVisualResponseSnippet) init];
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAceId:v12];

  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setViewId:v13];

  uint64_t v14 = v23;
  uint64_t updated = dispatch thunk of UpdateResponseCommand.serializeData()();
  if (!v14)
  {
    uint64_t v17 = updated;
    unint64_t v18 = v16;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data._Representation(v17, v18);
    [v11 setStateData:isa];

    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    AceServiceInvokerAsync.submitAndForget(_:)();
  }
}

uint64_t ParameterResolutionRecord<>.isUnsetRelationship.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ParameterIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterResolutionRecord.app.getter();
  Swift::Bool v8 = App.isFirstParty()();
  swift_release();
  if (!v8) {
    return 0;
  }
  ParameterResolutionRecord.parameter.getter();
  uint64_t v9 = ParameterIdentifier.multicardinalIndex.getter();
  char v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = (v11 & 1) != 0 ? 0 : v9;
  NSString v13 = (void *)ParameterResolutionRecord.intent.getter();
  uint64_t v14 = *(uint64_t (**)(void *))(*(void *)(a2 + 8) + 8);
  char v15 = *(void **)(a1 + 16);
  unint64_t v16 = v14(v15);

  if (!v16) {
    return 0;
  }
  if (v12 < 0) {
    goto LABEL_15;
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8));
  }
  if (v12 >= v17)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v12, (v16 & 0xC000000000000001) == 0, v16);
  if ((v16 & 0xC000000000000001) != 0) {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v18 = *(id *)(v16 + 8 * v12 + 32);
  }
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  id v20 = [v19 relationship];

  if (!v20) {
    return 0;
  }
  id v21 = (id)ParameterResolutionRecord.intent.getter();
  uint64_t v22 = (void *)ParameterResolutionRecord.result.getter();
  id v44 = v21;
  id v45 = v22;
  type metadata accessor for INIntentResolutionResult();
  id v23 = v21;
  id v24 = v22;
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (INStartCallIntent, INStartCallContactResolutionResult));
  if (OUTLINED_FUNCTION_0_57())
  {
  }
  else
  {
    BOOL v26 = v44;

    id v44 = v23;
    id v45 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (INAddCallParticipantIntent, INAddCallParticipantParticipantResolutionResult));
    if (!OUTLINED_FUNCTION_0_57())
    {

      BOOL v41 = v44;
      return 0;
    }
  }

  id v27 = v43;
  int v28 = (char *)[v43 unsupportedReason];

  Swift::Int v29 = v44;
  if (v28 != (unsigned char *)&dword_0 + 1)
  {

    return 0;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
  id v31 = v20;
  unint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    id v44 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136315650;
    id v42 = v15;
    swift_getMetatypeMetadata();
    uint64_t v35 = String.init<A>(describing:)();
    id v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000013, 0x8000000000493DD0, (uint64_t *)&v44);
    OUTLINED_FUNCTION_1_79(v37);
    *(_WORD *)(v34 + 22) = 2080;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, (uint64_t *)&v44);
    OUTLINED_FUNCTION_1_79(v40);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v32, v33, "#ParameterResolutionRecord<%s> %s Found unsetRelationship = %s", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 1;
}

unint64_t type metadata accessor for INIntentResolutionResult()
{
  unint64_t result = lazy cache variable for type metadata for INIntentResolutionResult;
  if (!lazy cache variable for type metadata for INIntentResolutionResult)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for INIntentResolutionResult);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_57()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_79(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void SCHRowCardSectionComponentsFactory.getRowCardSectionComponents(callRecords:)(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v4 = specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out VoicemailRowCardSectionComponents);
    if (!v3) {
      break;
    }
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v9 = (char *)[v6 callRecordType];

      uint64_t v4 = specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out CallHistoryRowCardSectionComponents);
      if (v9 == (unsigned char *)&dword_4 + 1)
      {
        ++v5;
        uint64_t v4 = specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out VoicemailRowCardSectionComponents);
        if (v8 != v3) {
          continue;
        }
      }
      goto LABEL_11;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_11:
  char v10 = v4;
  uint64_t v11 = swift_bridgeObjectRelease();
  __chkstk_darwin(v11);
  void v12[2] = v10;
  v12[3] = 0;
  v12[4] = v1;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo12INCallRecordCG_27PhoneCallFlowDelegatePlugin27SCHRowCardSectionComponents_ps5NeverOTg5((uint64_t)partial apply for closure #2 in SCHRowCardSectionComponentsFactory.getRowCardSectionComponents(callRecords:), (uint64_t)v12, a1);
}

uint64_t specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out VoicemailRowCardSectionComponents)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out VoicemailRowCardSectionComponents)(a1, a2, a3, (uint64_t)&type metadata for VoicemailRowCardSectionComponents, (uint64_t)&protocol witness table for VoicemailRowCardSectionComponents, a4);
}

uint64_t implicit closure #1 in SCHRowCardSectionComponentsFactory.getRowCardSectionComponents(callRecords:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  outlined init with copy of SignalProviding(a2, (uint64_t)(a4 + 2));
  *a4 = a1;
  a4[1] = a1;
  a4[7] = a3;
  id v7 = a1;

  return swift_retain();
}

uint64_t specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out CallHistoryRowCardSectionComponents)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out VoicemailRowCardSectionComponents)(a1, a2, a3, (uint64_t)&type metadata for CallHistoryRowCardSectionComponents, (uint64_t)&protocol witness table for CallHistoryRowCardSectionComponents, a4);
}

uint64_t specialized thunk for @escaping @callee_guaranteed (@guaranteed INCallRecord, @in_guaranteed DeviceState, @guaranteed PhoneCallDisplayTextCATs) -> (@out VoicemailRowCardSectionComponents)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  a6[3] = a4;
  a6[4] = a5;
  uint64_t v10 = swift_allocObject();
  *a6 = v10;
  return implicit closure #1 in SCHRowCardSectionComponentsFactory.getRowCardSectionComponents(callRecords:)(a1, a2, a3, (void *)(v10 + 16));
}

uint64_t partial apply for closure #2 in SCHRowCardSectionComponentsFactory.getRowCardSectionComponents(callRecords:)(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, *(void *)(v1 + 32), *(void *)(*(void *)(v1 + 32) + 40));
}

ValueMetadata *type metadata accessor for SCHRowCardSectionComponentsFactory()
{
  return &type metadata for SCHRowCardSectionComponentsFactory;
}

uint64_t objectdestroyTm_16()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t DialogOutputFactory.__allocating_init(dialog:dialogPhase:sharedGlobals:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v0 = swift_allocObject();
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  return v0;
}

uint64_t DialogOutputFactory.dialog.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_retain();
  return v1;
}

uint64_t DialogOutputFactory.dialogPhase.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin19DialogOutputFactory_dialogPhase;
  type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_10();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v5 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin19DialogOutputFactory_dialogPhase;
  type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v5, v2);
  outlined init with take of AppSelectionSignalComponent(v0, v1 + 16);
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 64) = v3;
  return v1;
}

uint64_t DialogOutputFactory.makeSimpleOutputFlowAsync()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 16))(v9, v1, v2);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v8[3] = v3;
  v8[4] = v4;
  __swift_allocate_boxed_opaque_existential_1(v8);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_25_2();
  v5();
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  swift_retain();
  uint64_t v6 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t closure #1 in DialogOutputFactory.makeSimpleOutputFlowAsync()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 72) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a2 + 128) + **(int **)(*(void *)a2 + 128));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v3;
  *uint64_t v3 = v2;
  v3[1] = closure #1 in DialogOutputFactory.makeSimpleOutputFlowAsync();
  return v5(v2 + 16);
}

uint64_t closure #1 in DialogOutputFactory.makeSimpleOutputFlowAsync()()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  if (*(unsigned char *)(v0 + 56))
  {
    *(void *)(v0 + 64) = *(void *)(v0 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    swift_willThrowTypedImpl();
    OUTLINED_FUNCTION_47_0();
  }
  else
  {
    outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 16), *(void *)(v0 + 72));
    OUTLINED_FUNCTION_6_0();
  }
  return v1();
}

uint64_t partial apply for closure #1 in DialogOutputFactory.makeSimpleOutputFlowAsync()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  void *v4 = v5;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in DialogOutputFactory.makeSimpleOutputFlowAsync()(v2, v0);
}

uint64_t DialogOutputFactory.makeOutput(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  void v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  void v9[6] = v2;
  swift_retain();
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v7, (uint64_t)&async function pointer to partial apply for closure #1 in DialogOutputFactory.makeOutput(_:), (uint64_t)v9);
  return swift_release();
}

uint64_t closure #1 in DialogOutputFactory.makeOutput(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a4;
  v6[9] = a5;
  uint64_t v9 = (uint64_t (*)(void *))(*(void *)(*(void *)a6 + 128) + **(int **)(*(void *)a6 + 128));
  uint64_t v7 = (void *)swift_task_alloc();
  v6[10] = v7;
  *uint64_t v7 = v6;
  v7[1] = closure #1 in DialogOutputFactory.makeOutput(_:);
  return v9(v6 + 2);
}

uint64_t closure #1 in DialogOutputFactory.makeOutput(_:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t))(v0 + 64))(v0 + 16);
  outlined destroy of Result<Output, Error>(v0 + 16);
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t sub_2BA6F4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in DialogOutputFactory.makeOutput(_:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_17_0(v8);
  *uint64_t v9 = v10;
  v9[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in DialogOutputFactory.makeOutput(_:)(v2, v3, v4, v5, v6, v7);
}

uint64_t DialogOutputFactory.makeOutput()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)DialogOutputFactory.makeOutput());
}

{
  uint64_t v1;
  uint64_t v2;

  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)DialogOutputFactory.makeOutput());
}

uint64_t DialogOutputFactory.makeOutput()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Output);
  void *v1 = v0;
  v1[1] = IncomingCallActionConfirmationStrategy.makeFlowCancelledResponse();
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  return Result<>.init(catching:)(v3, &async function pointer to partial apply for closure #1 in DialogOutputFactory.makeOutput(), v4, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(void);
  void *v4;
  uint64_t v6;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = OUTLINED_FUNCTION_3_81();
  v2(v1);
  OUTLINED_FUNCTION_10_48();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_25_2();
  v3();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  void *v4 = v0;
  v4[1] = DialogOutputFactory.makeOutput();
  OUTLINED_FUNCTION_15_40();
  return DialogOutputFactory.makeDialogOutput(responseGenerator:dialogPhase:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_8_27();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 56);
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t closure #1 in DialogOutputFactory.makeOutput()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return _swift_task_switch(closure #1 in DialogOutputFactory.makeOutput(), 0, 0);
}

uint64_t closure #1 in DialogOutputFactory.makeOutput()()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = OUTLINED_FUNCTION_3_81();
  v2(v1);
  OUTLINED_FUNCTION_10_48();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_25_2();
  v3();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  void *v4 = v0;
  v4[1] = closure #1 in DialogOutputFactory.makeOutput();
  OUTLINED_FUNCTION_15_40();
  return DialogOutputFactory.makeDialogOutput(responseGenerator:dialogPhase:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_8_27();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 56);
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

uint64_t partial apply for closure #1 in DialogOutputFactory.makeOutput()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  void *v4 = v5;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in DialogOutputFactory.makeOutput()(v2, v0);
}

uint64_t DialogOutputFactory.makeDialogOutput(responseGenerator:dialogPhase:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = type metadata accessor for DialogPhase();
  v1[6] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[7] = v6;
  v1[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OutputGenerationManifest();
  v1[9] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[10] = v8;
  v1[11] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[3];
  (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[4], v0[6]);
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v3 = v2[3];
  v0[12] = v3;
  v0[13] = v2[4];
  v0[14] = __swift_project_boxed_opaque_existential_1(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v4 = swift_allocObject();
  v0[15] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_46A030;
  uint64_t v7 = (uint64_t (*)(void))(*(void *)(v1 + 56) + **(int **)(v1 + 56));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  void *v5 = v0;
  v5[1] = DialogOutputFactory.makeDialogOutput(responseGenerator:dialogPhase:);
  return v7();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v1();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  *(void *)(v0[15] + 16) = 0;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

uint64_t DialogOutputFactory.makeDialogOutput(responseGenerator:dialogPhase:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_8_27();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 136) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 144) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t DialogOutputFactory.makeDialogOutput(responseGenerator:dialogPhase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10[15];
  *(void *)(v11 + 32) = v10[18];
  uint64_t v21 = v11;
  specialized Array._endMutation()();
  v10[19] = v21;
  char v15 = (void *)swift_task_alloc();
  v10[20] = v15;
  void *v15 = v10;
  v15[1] = DialogOutputFactory.makeDialogOutput(responseGenerator:dialogPhase:);
  uint64_t v16 = v10[13];
  uint64_t v17 = v10[11];
  uint64_t v18 = v10[12];
  uint64_t v19 = v10[2];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v19, v21, v17, v18, v16, v12, v13, v14, a9, a10);
}

uint64_t DialogOutputFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin19DialogOutputFactory_dialogPhase;
  type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t DialogOutputFactory.__deallocating_deinit()
{
  DialogOutputFactory.deinit();

  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for DialogOutputFactory()
{
  return type metadata accessor for DialogOutputFactory();
}

uint64_t type metadata accessor for DialogOutputFactory()
{
  uint64_t result = type metadata singleton initialization cache for DialogOutputFactory;
  if (!type metadata singleton initialization cache for DialogOutputFactory) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for DialogOutputFactory()
{
  uint64_t result = type metadata accessor for DialogPhase();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_81()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v2);
  return v2;
}

uint64_t *OUTLINED_FUNCTION_10_48()
{
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v2[10] = v3;
  v2[11] = *(void *)(v4 + 8);
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_15_40()
{
  return *(void *)(v0 + 96);
}

uint64_t PhoneCallFlowDelegatePlugin.__allocating_init()()
{
  v6[3] = type metadata accessor for FlowFinder();
  void v6[4] = &protocol witness table for FlowFinder;
  v6[0] = swift_allocObject();
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for PluginPrewarmProvider();
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = swift_retain();
  v5[3] = v1;
  void v5[4] = &protocol witness table for PluginPrewarmProvider;
  v5[0] = specialized PluginPrewarmProvider.init(eligibleAppsFinder:)(v3, v2);
  return (*(uint64_t (**)(void *, uint64_t (*)@<X0>(uint64_t *@<X8>), void, void *))(v0 + 112))(v6, implicit closure #1 in PhoneCallFlowDelegatePlugin.init(), 0, v5);
}

uint64_t implicit closure #1 in PhoneCallFlowDelegatePlugin.init()@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for SharedGlobals;
  a1[4] = (uint64_t)&protocol witness table for SharedGlobals;
  uint64_t v2 = swift_allocObject();
  *a1 = v2;
  return SharedGlobals.init()((uint64_t *)(v2 + 16));
}

uint64_t PhoneCallFlowDelegatePlugin.__allocating_init(flowFinder:sharedGlobalsFactory:pluginPrewarmProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  PhoneCallFlowDelegatePlugin.init(flowFinder:sharedGlobalsFactory:pluginPrewarmProvider:)(a1, a2, a3, a4);
  return v8;
}

uint64_t PhoneCallFlowDelegatePlugin.init(flowFinder:sharedGlobalsFactory:pluginPrewarmProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  outlined init with copy of SignalProviding(a1, v5 + 16);
  *(void *)(v5 + 56) = a2;
  *(void *)(v5 + 64) = a3;
  outlined init with copy of SignalProviding(a4, v5 + 72);
  type metadata accessor for CATExecutor();
  type metadata accessor for PhoneCallFlowDelegatePlugin();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v11 = self;
  swift_retain();
  id v12 = [v11 bundleForClass:ObjCClassFromMetadata];
  static CATExecutor.registerBundle(bundle:)();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t PhoneCallFlowDelegatePlugin.findFlowForX(parse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)v2;
  v63[2] = a2;
  uint64_t v5 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v63 - v13;
  (*(void (**)(void *__return_ptr, uint64_t))(v2 + 56))(v68, v12);
  uint64_t v15 = v69;
  uint64_t v16 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 72))(v15, v16);
  uint64_t v18 = *(void (**)(void))(v7 + 16);
  OUTLINED_FUNCTION_8_73();
  v18();
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v14, v5);
  if (v19 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v20 = OUTLINED_FUNCTION_4_71();
    v21(v20);
    swift_unknownObjectRelease();
  }
  else
  {
    if (v19 != enum case for Parse.uso(_:))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      BOOL v26 = OUTLINED_FUNCTION_25_0(v25, (uint64_t)static Logger.siriPhone);
      os_log_type_t v27 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v26, v27))
      {
        int v28 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)int v28 = 0;
        _os_log_impl(&dword_0, v26, v27, "#PhoneCallFlowDelegatePlugin expected pass-through as only handles .NLv4IntentOnly and .uso", v28, 2u);
        OUTLINED_FUNCTION_6();
      }

      uint64_t v29 = OUTLINED_FUNCTION_4_71();
      v30(v29);
      goto LABEL_44;
    }
    uint64_t v22 = OUTLINED_FUNCTION_4_71();
    v23(v22);
  }
  char v24 = static ExecutionPath.choosePath(for:sharedGlobals:)(a1, v68);
  if (v24 == 5)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    unint64_t v32 = OUTLINED_FUNCTION_25_0(v31, (uint64_t)static Logger.siriPhone);
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "#PhoneCallFlowDelegatePlugin - executing flow locally", v34, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v35 = v69;
    uint64_t v36 = v70;
    __swift_project_boxed_opaque_existential_1(v68, v69);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v36 + 24))(&v66, v35, v36);
    __swift_project_boxed_opaque_existential_1(&v66, v67);
    uint64_t started = dispatch thunk of AceServiceInvoker.currentStartRequestId()();
    if (v38)
    {
      uint64_t v39 = started;
      uint64_t v40 = v38;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
      uint64_t v41 = v3[12];
      uint64_t v42 = v3[13];
      __swift_project_boxed_opaque_existential_1(v3 + 9, v41);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8))(v39, v40, v41, v42);
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    }
LABEL_38:
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)v17 + 192))(&v64, a1);
    if (v65)
    {
      outlined init with take of AppSelectionSignalComponent(&v64, (uint64_t)&v66);
      type metadata accessor for SiriEnvironment();
      if (static SiriEnvironment.forCurrentTask.getter())
      {
        SiriEnvironment.currentRequest.getter();
        swift_release();
        uint64_t v57 = CurrentRequest.resultCandidateId.getter();
        uint64_t v59 = v58;
        swift_release();
        if (v59)
        {
          uint64_t v60 = v69;
          uint64_t v61 = v70;
          __swift_project_boxed_opaque_existential_1(v68, v69);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 24))(&v64, v60, v61);
          (*(void (**)(uint64_t, uint64_t, long long *, long long *))(*v3 + 136))(v57, v59, &v66, &v64);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    }
    else
    {
      outlined destroy of SubmitCommandError?((uint64_t)&v64, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }
LABEL_44:
    PhoneCallFlowDelegatePlugin.makeFlowForCommon(parse:sharedGlobals:)(a1);
    goto LABEL_45;
  }
  if (v24 != 4)
  {
    if (v24 == 3)
    {
      static FlowSearchResult.noFlow.getter();
      goto LABEL_47;
    }
    char v47 = v24;
    v63[1] = v17;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    unint64_t v49 = OUTLINED_FUNCTION_25_0(v48, (uint64_t)static Logger.siriPhone);
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v49, v50))
    {
      unint64_t v51 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)unint64_t v51 = 0;
      _os_log_impl(&dword_0, v49, v50, "#PhoneCallFlowDelegatePlugin Encountered unknown common_Person entity to call. Falling back to server for execution.", v51, 2u);
      OUTLINED_FUNCTION_6();
    }

    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.debug.getter();
    BOOL v54 = os_log_type_enabled(v52, v53);
    if (v47 != 2)
    {
      if (v54)
      {
        uint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl(&dword_0, v52, v53, "#PhoneCallFlowDelegatePlugin using RedirectToServerFlow.", v56, 2u);
        OUTLINED_FUNCTION_6();
      }

      outlined init with copy of SignalProviding((uint64_t)v68, (uint64_t)&v66);
      type metadata accessor for RedirectToServerFlow();
      swift_allocObject();
      *(void *)&long long v66 = RedirectToServerFlow.init(to:sharedGlobals:isSentinelFlow:)(v47, &v66, 1);
      lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow(&lazy protocol witness table cache variable for type RedirectToServerFlow and conformance RedirectToServerFlow, 255, (void (*)(uint64_t))type metadata accessor for RedirectToServerFlow);
      Flow.eraseToAnyFlow()();
      swift_release();
      static FlowSearchResult.flow(_:)();
      goto LABEL_46;
    }
    if (v54)
    {
      unint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)unint64_t v55 = 0;
      _os_log_impl(&dword_0, v52, v53, "#PhoneCallFlowDelegatePlugin using BusinessCompositionFlow.", v55, 2u);
      OUTLINED_FUNCTION_6();
    }

    type metadata accessor for BusinessCompositionFlow();
    OUTLINED_FUNCTION_8_73();
    v18();
    outlined init with copy of SignalProviding((uint64_t)v68, (uint64_t)&v66);
    *(void *)&long long v66 = BusinessCompositionFlow.__allocating_init(parse:sharedGlobals:)((uint64_t)v11, (uint64_t)&v66);
    lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow(&lazy protocol witness table cache variable for type BusinessCompositionFlow and conformance BusinessCompositionFlow, 255, (void (*)(uint64_t))type metadata accessor for BusinessCompositionFlow);
    Flow.eraseToAnyFlow()();
    swift_release();
LABEL_45:
    static FlowSearchResult.flow(_:)();
LABEL_46:
    swift_release();
    goto LABEL_47;
  }
  if (!PhoneCallFlowDelegatePlugin.makeFlowForEmergencyResourceCall(parse:nlTransformer:)(a1, v17)) {
    goto LABEL_38;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v43 = type metadata accessor for Logger();
  id v44 = OUTLINED_FUNCTION_25_0(v43, (uint64_t)static Logger.siriPhone);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v46 = 0;
    _os_log_impl(&dword_0, v44, v45, "#PhoneCallFlowDelegatePlugin Invoking SiriEmergency flow to handle call to emergency resource", v46, 2u);
    OUTLINED_FUNCTION_6();
  }

  static FlowSearchResult.flow(_:)();
  swift_release();
LABEL_47:
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
}

uint64_t PhoneCallFlowDelegatePlugin.makeFlowFor(parse:)(uint64_t a1)
{
  (*(void (**)(void *__return_ptr))(v1 + 56))(v5);
  uint64_t v3 = PhoneCallFlowDelegatePlugin.makeFlowForCommon(parse:sharedGlobals:)(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

void PhoneCallFlowDelegatePlugin.sendPreWarmExtensionCommand(resultCandidateId:phoneCallNLIntent:aceServiceInvoker:)(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v25 = a3;
    uint64_t v11 = a4;
    uint64_t v12 = (_DWORD *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_9_59(&dword_0, v13, v14, "#PhoneCallFlowDelegatePlugin resultCandidateId is %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    a4 = v11;
    a3 = v25;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (a1 == 48 && a2 == 0xE100000000000000)
  {
    outlined init with copy of SignalProviding(a3, (uint64_t)v26);
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SignalProviding(a3, (uint64_t)v26);
    if ((v16 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      return;
    }
  }
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  Swift::Bool v17 = PhoneCallNLIntent.isFirstPartyOrDefaultAppRequest()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  if (v17)
  {
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_0, v18, v19, "#PhoneCallFlowDelegatePlugin sending IntentSignal to pre-warm first party extension", v20, 2u);
      OUTLINED_FUNCTION_6();
    }

    id v21 = [objc_allocWithZone((Class)SAIntentGroupIntentSignal) init];
    id v22 = [objc_allocWithZone((Class)INStartCallIntent) init];
    outlined bridged method (mbgnn) of @objc INIntent.launchId.setter(0xD000000000000015, 0x80000000004932A0, v22);
    outlined bridged method (mbgnn) of @objc INIntent.extensionBundleId.setter(0xD00000000000002FLL, 0x8000000000496030, v22);
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupProtobufMessage);
    id v23 = v22;
    id v24 = SAIntentGroupProtobufMessage.init(intent:)(v23);
    [v21 setIntent:v24];

    __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)();
  }
}

uint64_t PhoneCallFlowDelegatePlugin.makeFlowForCommon(parse:sharedGlobals:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14 - v13;
  static Signpost.begin(_:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v8, v2) != enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
    goto LABEL_12;
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v8, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15, v8, v9);
  if (Parse.DirectInvocation.identifier.getter() == 0xD00000000000003CLL && v16 == 0x800000000048C7A0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
LABEL_10:
      uint64_t v24 = OUTLINED_FUNCTION_3_82();
      v25(v24);
      goto LABEL_12;
    }
  }
  uint64_t v18 = Parse.DirectInvocation.userData.getter();
  if (!v18) {
    goto LABEL_10;
  }
  PhoneCallFlowDelegatePlugin::VoiceCommandsStartCallDirectAction_optional v32 = VoiceCommandsStartCallDirectAction.init(from:)((Swift::OpaquePointer)v18);
  if (v32.value.appId._object)
  {
    Class isa = v32.value.intent.super.super.isa;
    type metadata accessor for App();
    swift_bridgeObjectRetain();
    App.__allocating_init(appIdentifier:)();
    static PhoneCallFlowFactory.makeVoiceCommandsParityFlow(app:intent:sharedGlobals:)();
    uint64_t v21 = v20;

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v22 = OUTLINED_FUNCTION_3_82();
    v23(v22);
    goto LABEL_17;
  }
  (*(void (**)(uint64_t, uint64_t, Class))(v11 + 8))(v15, v9, v32.value.intent.super.super.isa);
LABEL_12:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  os_log_type_t v27 = OUTLINED_FUNCTION_25_0(v26, (uint64_t)static Logger.siriPhone);
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&dword_0, v27, v28, "#PhoneCallFlowDelegatePlugin Pushing guarded MainFlow…", v29, 2u);
    OUTLINED_FUNCTION_6();
  }

  static PhoneCallFlowFactory.makeMainFlow(parse:sharedGlobals:)();
  uint64_t v21 = v30;
LABEL_17:
  Signpost.OpenSignpost.end()();
  swift_release();
  return v21;
}

uint64_t PhoneCallFlowDelegatePlugin.makeFlowForEmergencyResourceCall(parse:nlTransformer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11 - v10;
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 192))(&v35, a1);
  if (!v36)
  {
    outlined destroy of SubmitCommandError?((uint64_t)&v35, &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_9:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    uint64_t v21 = OUTLINED_FUNCTION_25_0(v20, (uint64_t)static Logger.siriPhone);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)id v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "#PhoneCallFlowDelegatePlugin No emergency resource found", v23, 2u);
      OUTLINED_FUNCTION_6();
    }

    return 0;
  }
  outlined init with take of AppSelectionSignalComponent(&v35, (uint64_t)v37);
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  uint64_t v13 = OUTLINED_FUNCTION_6_65();
  v14(v13);
  specialized Collection.first.getter(&v35);
  swift_bridgeObjectRelease();
  if (!v36)
  {
    outlined destroy of SubmitCommandError?((uint64_t)&v35, &demangling cache variable for type metadata for SiriPhoneContact?);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(&v35, v36);
  uint64_t v15 = OUTLINED_FUNCTION_6_65();
  uint64_t v17 = v16(v15);
  unint64_t v19 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  if (v19 < 3)
  {
    outlined consume of PhoneCallEmergencyType?(v17, v19);
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    goto LABEL_9;
  }
  if (v19 == 3) {
    goto LABEL_8;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
  outlined copy of PhoneCallEmergencyType(v17, v19);
  outlined copy of PhoneCallEmergencyType(v17, v19);
  os_log_type_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (_DWORD *)swift_slowAlloc();
    *(void *)&long long v35 = swift_slowAlloc();
    *uint64_t v29 = 136315138;
    outlined copy of PhoneCallEmergencyType(v17, v19);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, (uint64_t *)&v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    outlined consume of PhoneCallEmergencyType?(v17, v19);
    outlined consume of PhoneCallEmergencyType?(v17, v19);
    outlined consume of PhoneCallEmergencyType(v17, v19);
    OUTLINED_FUNCTION_9_59(&dword_0, v30, v31, "#PhoneCallFlowDelegatePlugin Finding flow to call emergencyResource: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    outlined consume of PhoneCallEmergencyType?(v17, v19);
    outlined consume of PhoneCallEmergencyType?(v17, v19);
  }

  static CallEmergencyResourceDirectInvocation.invocation(for:)(v17, v19);
  outlined consume of PhoneCallEmergencyType?(v17, v19);
  PhoneCallFlowDelegatePlugin::VoiceCommandsStartCallDirectAction_optional v32 = v3 + 2;
  uint64_t v34 = v3[5];
  uint64_t v33 = v3[6];
  __swift_project_boxed_opaque_existential_1(v32, v34);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 8))(v12, v34, v33);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v24;
}

uint64_t PhoneCallFlowDelegatePlugin.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return v0;
}

uint64_t PhoneCallFlowDelegatePlugin.__deallocating_deinit()
{
  PhoneCallFlowDelegatePlugin.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for FlowPluginExtended.findFlowForX(parse:) in conformance PhoneCallFlowDelegatePlugin()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t protocol witness for FlowPlugin.init() in conformance PhoneCallFlowDelegatePlugin@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 104))();
  *a1 = result;
  return result;
}

uint64_t protocol witness for FlowPlugin.makeFlowFrame(parse:) in conformance PhoneCallFlowDelegatePlugin()
{
  return FlowPlugin.makeFlowFrame(parse:)();
}

uint64_t protocol witness for FlowPlugin.makeFlowFor(parse:) in conformance PhoneCallFlowDelegatePlugin()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for FlowPlugin.findFlowFor(parse:) in conformance PhoneCallFlowDelegatePlugin()
{
  return FlowPlugin.findFlowFor(parse:)();
}

void outlined bridged method (mbgnn) of @objc INIntent.launchId.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 _setLaunchId:v4];
}

void outlined bridged method (mbgnn) of @objc INIntent.extensionBundleId.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 _setExtensionBundleId:v4];
}

void *specialized PluginPrewarmProvider.init(eligibleAppsFinder:)(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  uint64_t v14 = type metadata accessor for EligibleAppFinder();
  uint64_t v15 = &protocol witness table for EligibleAppFinder;
  *(void *)&long long v13 = a1;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.userInteractive.getter();
  uint64_t v12 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  uint64_t v10 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  a2[8] = 0;
  a2[9] = 0;
  a2[7] = v10;
  outlined init with take of AppSelectionSignalComponent(&v13, (uint64_t)(a2 + 2));
  return a2;
}

uint64_t type metadata accessor for PhoneCallFlowDelegatePlugin()
{
  return self;
}

uint64_t base witness table accessor for FlowPlugin in PhoneCallFlowDelegatePlugin(uint64_t a1, uint64_t a2)
{
  return lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow(&lazy protocol witness table cache variable for type PhoneCallFlowDelegatePlugin and conformance PhoneCallFlowDelegatePlugin, a2, (void (*)(uint64_t))type metadata accessor for PhoneCallFlowDelegatePlugin);
}

uint64_t lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A];
  if (!lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  }
  return result;
}

uint64_t sub_2BD218()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t OUTLINED_FUNCTION_3_82()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_65()
{
  return v0;
}

void OUTLINED_FUNCTION_9_59(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t key path setter for ReadCallRecordAction.nextAction : ReadCallRecordAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 136);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ReadCallRecordAction.paginatedCallRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_paginatedCallRecord;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PaginatedItem<INCallRecord>);
  OUTLINED_FUNCTION_15();
  os_log_type_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

id ReadCallRecordAction.intent.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_intent);
}

uint64_t ReadCallRecordAction.searchCallHistoryCatFamily.getter()
{
  return swift_retain();
}

uint64_t ReadCallRecordAction.aceServiceInvoker.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_aceServiceInvoker, a1);
}

uint64_t ReadCallRecordAction.__allocating_init(paginatedCallRecord:intent:aceServiceInvoker:searchCallHistoryCatFamily:)()
{
  OUTLINED_FUNCTION_11_14();
  uint64_t v0 = swift_allocObject();
  ReadCallRecordAction.init(paginatedCallRecord:intent:aceServiceInvoker:searchCallHistoryCatFamily:)();
  return v0;
}

void *ReadCallRecordAction.init(paginatedCallRecord:intent:aceServiceInvoker:searchCallHistoryCatFamily:)()
{
  OUTLINED_FUNCTION_11_14();
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0xD000000000000014;
  v1[5] = 0x800000000047FF30;
  uint64_t v5 = (char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_paginatedCallRecord;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PaginatedItem<INCallRecord>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(char *, uint64_t))(v6 + 32))(v5, v4);
  *(void *)((char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_intent) = v3;
  outlined init with take of AppSelectionSignalComponent(v2, (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_aceServiceInvoker);
  *(void *)((char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_searchCallHistoryCatFamily) = v0;
  return v1;
}

uint64_t ReadCallRecordAction.run(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  void v5[4] = v2;
  uint64_t v6 = *(void (**)(void, void *))(*(void *)v2 + 168);
  swift_retain();
  swift_retain();
  v6(partial apply for closure #1 in ReadCallRecordAction.run(_:), v5);

  return swift_release();
}

void closure #1 in ReadCallRecordAction.run(_:)(void *a1, char a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    swift_errorRetain();
    a3(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(a5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_aceServiceInvoker), *(void *)(a5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_aceServiceInvoker + 24));
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a3;
    *(void *)(v9 + 24) = a4;
    outlined copy of Result<SABaseCommand, Error>(a1, 0);
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
    swift_retain();
    dispatch thunk of AceServiceInvoker.submit<A>(_:completion:)();
    swift_release();
  }

  outlined consume of Result<SABaseCommand, Error>(a1, a2 & 1);
}

uint64_t sub_2BD6E4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in ReadCallRecordAction.run(_:)(void *a1, char a2)
{
  closure #1 in ReadCallRecordAction.run(_:)(a1, a2 & 1, *(void (**)(void *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t closure #1 in closure #1 in ReadCallRecordAction.run(_:)(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<SABaseCommand, SubmitCommandError>);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SubmitCommandError();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)v6, &demangling cache variable for type metadata for Result<SABaseCommand, SubmitCommandError>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    lazy protocol witness table accessor for type ReadCallRecordAction and conformance ReadCallRecordAction(&lazy protocol witness table cache variable for type SubmitCommandError and conformance SubmitCommandError, (void (*)(uint64_t))&type metadata accessor for SubmitCommandError);
    uint64_t v11 = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v12, v10, v7);
    a2(v11);
    swift_errorRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    outlined destroy of Result<SABaseCommand, SubmitCommandError>((uint64_t)v6);
    return ((uint64_t (*)(void))a2)(0);
  }
}

uint64_t ReadCallRecordAction.makeSummaryView(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v16 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_searchCallHistoryCatFamily);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PaginatedItem<INCallRecord>);
  PaginatedItem.item.getter();
  uint64_t v6 = (__CFString *)v20[5];
  type metadata accessor for AppInfoBuilder();
  uint64_t v7 = swift_allocObject();
  static Device.current.getter();
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  swift_retain();
  specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(v6, 0, v7, v5);
  type metadata accessor for PhoneCallRecord(0);
  swift_allocObject();
  uint64_t v8 = PhoneCallRecord.init(builder:)();

  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v16);
  swift_release_n();
  LOBYTE(v7) = PaginatedItem.isLastItemInPage.getter();
  type metadata accessor for PhoneSearchCallHistoryIntent(0);
  uint64_t v9 = PhoneSearchCallHistoryIntent.__allocating_init(intent:)(objc_retain(*(id *)(v2
                                                                                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_intent)));
  INSearchCallHistoryIntent.isSingleDateRequest.getter();
  char v11 = v10;
  LOBYTE(v5) = INSearchCallHistoryIntent.isTimeRangeRequest.getter();
  uint64_t v12 = swift_allocObject();
  long long v13 = v17;
  *(void *)(v12 + 16) = v18;
  *(void *)(v12 + 24) = v19;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for SearchCallHistoryCATs + *v13 + 544);
  swift_retain();
  v14(v8, v7 & 1, v9, v11 & 1, v5 & 1, partial apply for closure #1 in ReadCallRecordAction.makeSummaryView(_:), v12);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t closure #1 in ReadCallRecordAction.makeSummaryView(_:)(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for TemplatingResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v8);
  char v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = *v10;
    swift_errorRetain();
    a2(v11, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
    type metadata accessor for ViewFactory();
    swift_allocObject();
    ViewFactory.init(ttsEnabled:)();
    long long v13 = (void *)dispatch thunk of ViewFactory.makeSummaryView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)();
    swift_release();
    a2((uint64_t)v13, 0);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t ReadCallRecordAction.deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_paginatedCallRecord;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PaginatedItem<INCallRecord>);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v2 + 8))(v1);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20ReadCallRecordAction_aceServiceInvoker);
  return v0;
}

uint64_t ReadCallRecordAction.__deallocating_deinit()
{
  ReadCallRecordAction.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for StaticAction.nextAction.setter in conformance ReadCallRecordAction()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

void (*protocol witness for StaticAction.nextAction.modify in conformance ReadCallRecordAction(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 144))();
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

uint64_t protocol witness for Action.nextAction.getter in conformance ReadCallRecordAction()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t protocol witness for Action.run(_:) in conformance ReadCallRecordAction()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_2BDFE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in ReadCallRecordAction.makeSummaryView(_:)(uint64_t a1)
{
  return closure #1 in ReadCallRecordAction.makeSummaryView(_:)(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16));
}

uint64_t base witness table accessor for Action in ReadCallRecordAction()
{
  return lazy protocol witness table accessor for type ReadCallRecordAction and conformance ReadCallRecordAction(&lazy protocol witness table cache variable for type ReadCallRecordAction and conformance ReadCallRecordAction, (void (*)(uint64_t))type metadata accessor for ReadCallRecordAction);
}

uint64_t type metadata accessor for ReadCallRecordAction()
{
  uint64_t result = type metadata singleton initialization cache for ReadCallRecordAction;
  if (!type metadata singleton initialization cache for ReadCallRecordAction) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ReadCallRecordAction()
{
  return lazy protocol witness table accessor for type ReadCallRecordAction and conformance ReadCallRecordAction(&lazy protocol witness table cache variable for type ReadCallRecordAction and conformance ReadCallRecordAction, (void (*)(uint64_t))type metadata accessor for ReadCallRecordAction);
}

uint64_t sub_2BE0FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 128))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t ObjC metadata update function for ReadCallRecordAction()
{
  return type metadata accessor for ReadCallRecordAction();
}

void type metadata completion function for ReadCallRecordAction()
{
  type metadata accessor for PaginatedItem<INCallRecord>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t partial apply for closure #1 in closure #1 in ReadCallRecordAction.run(_:)(uint64_t a1)
{
  return closure #1 in closure #1 in ReadCallRecordAction.run(_:)(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t outlined destroy of Result<SABaseCommand, SubmitCommandError>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<SABaseCommand, SubmitCommandError>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t lazy protocol witness table accessor for type ReadCallRecordAction and conformance ReadCallRecordAction(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void PhoneCallBaseCatTemplatingService.__allocating_init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
}

void PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
  void (*v19)(long long *__return_ptr, uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void v37[7];
  long long v38[3];

  OUTLINED_FUNCTION_24_0();
  uint64_t v36 = v1;
  uint64_t v31 = v2;
  uint64_t v4 = v3;
  PhoneCallFlowDelegatePlugin::VoiceCommandsStartCallDirectAction_optional v32 = v3;
  uint64_t v34 = v5;
  long long v35 = v6;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  uint64_t v33 = v11;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_22_37((void *)((char *)v0
                                   + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                               + v13
                                               + 16)));
  OUTLINED_FUNCTION_2();
  uint64_t v15 = (char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v14 + 56);
  *((void *)v15 + 4) = 0;
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  OUTLINED_FUNCTION_2();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v8, (uint64_t)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v16 + 72));
  uint64_t v17 = v8[3];
  uint64_t v18 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v17);
  uint64_t v19 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v18 + 8);
  swift_retain();
  v19(v38, v17, v18);
  uint64_t v20 = (void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 40));
  outlined init with take of AppSelectionSignalComponent(v38, (uint64_t)v20);
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v21 + 24)) = v34;
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v22 + 32)) = v35;
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding(v4, (uint64_t)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v23 + 48));
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding(v31, (uint64_t)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v24 + 64));
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v25 + 80)) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  dispatch thunk of DeviceState.siriLocale.getter();
  *(void *)&v38[0] = Locale.identifier.getter();
  *((void *)&v38[0] + 1) = v26;
  v37[0] = 45;
  v37[1] = 0xE100000000000000;
  v37[5] = 95;
  v37[6] = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11();
  v27();
  type metadata accessor for INIntentSlotValueType(0);
  lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType(&lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType, type metadata accessor for INIntentSlotValueType);
  Dictionary.init(dictionaryLiteral:)();
  os_log_type_t v28 = v8[3];
  uint64_t v29 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v28);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v29 + 24))(v38, v28, v29);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v20, (uint64_t)v37);
  uint64_t v30 = type metadata accessor for DucTemplatingLocalContext();
  __swift_storeEnumTagSinglePayload(v33, 1, 1, v30);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v31);
  __swift_destroy_boxed_opaque_existential_1(v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneCallBaseCatTemplatingService.deinit()
{
  uint64_t v0 = DucTemplatingService.deinit();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_6();
  swift_release();
  OUTLINED_FUNCTION_26_6();
  swift_release();
  OUTLINED_FUNCTION_26_6();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v1
                                                            + 40));
  OUTLINED_FUNCTION_26_6();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v2
                                                            + 48));
  OUTLINED_FUNCTION_26_6();
  outlined destroy of UUID?(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v3 + 56), &demangling cache variable for type metadata for PhoneCallNLIntent?);
  OUTLINED_FUNCTION_26_6();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v4
                                                            + 64));
  OUTLINED_FUNCTION_26_6();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v5
                                                            + 72));
  OUTLINED_FUNCTION_26_6();
  swift_release();
  return v0;
}

void PhoneCallBaseCatTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)()
{
}

void PhoneCallBaseCatTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
}

void PhoneCallBaseCatTemplatingService.makeParameterPromptDialog(app:parameterName:intent:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_2();
  uint64_t v34 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_30_22();
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_12_25();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v30 - v15);
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_89_1();
  *uint64_t v16 = 0xD000000000000036;
  v16[1] = 0x8000000000498570;
  uint64_t v35 = v17;
  swift_storeEnumTagMultiPayload();
  PhoneError.logged()(v2);
  outlined destroy of PhoneError((uint64_t)v16);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = OUTLINED_FUNCTION_37_21();
  outlined init with copy of PhoneError(v19, v3);
  swift_retain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v33 = v8;
    uint64_t v23 = v22;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v36 = v4;
    uint64_t v37 = v31;
    *(_DWORD *)uint64_t v23 = 136315394;
    type metadata accessor for PhoneCallBaseCatTemplatingService();
    uint64_t v34 = v6;
    swift_retain();
    uint64_t v32 = v10;
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    uint64_t v26 = Error.localizedDescription.getter();
    uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of PhoneError(v3);
    _os_log_impl(&dword_0, v20, v21, "#%s: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    uint64_t v8 = v33;
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
    outlined destroy of PhoneError(v3);
  }

  lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
  uint64_t v28 = swift_allocError();
  outlined init with copy of PhoneError(v2, v29);
  uint64_t *v1 = v28;
  swift_storeEnumTagMultiPayload();
  v8(v1);
  outlined destroy of UUID?((uint64_t)v1, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  outlined destroy of PhoneError(v2);
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v41 = v2;
  uint64_t v42 = v3;
  uint64_t v40 = v4;
  uint64_t v35 = type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v38 = v6;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_3_1();
  uint64_t v36 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  uint64_t v39 = v11;
  uint64_t v12 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_2();
  uint64_t v19 = (void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v18 + 48));
  uint64_t v20 = v19[3];
  uint64_t v21 = v19[4];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  OUTLINED_FUNCTION_3_80();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v22 + 40)), *(void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v22 + 40) + 24));
  OUTLINED_FUNCTION_37_21();
  uint64_t v23 = v40;
  dispatch thunk of DeviceState.siriLocale.getter();
  uint64_t v24 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v21 + 16))(v23, v17, v20, v21);
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
  if (v26)
  {
    uint64_t v27 = type metadata accessor for TaskPriority();
    uint64_t v28 = v39;
    __swift_storeEnumTagSinglePayload(v39, 1, 1, v27);
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = v1;
    v29[5] = v24;
    v29[6] = v26;
    v29[7] = v23;
    uint64_t v30 = v42;
    v29[8] = v41;
    v29[9] = v30;
    swift_retain();
    swift_retain();
    swift_retain();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v28, (uint64_t)&async function pointer to partial apply for closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:), (uint64_t)v29);
    swift_release();
  }
  else
  {
    uint64_t v31 = (uint64_t)v38;
    *uint64_t v38 = 0xD000000000000023;
    *(void *)(v31 + 8) = 0x80000000004985B0;
    *(void *)(v31 + 16) = 0xD000000000000043;
    *(void *)(v31 + 24) = 0x80000000004985E0;
    *(void *)(v31 + 32) = 0xD000000000000019;
    *(void *)(v31 + 40) = 0x8000000000498630;
    *(void *)(v31 + 48) = 113;
    *(unsigned char *)(v31 + 56) = 0;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    uint64_t v32 = swift_allocError();
    PhoneError.logged()(v33);
    outlined destroy of PhoneError(v31);
    uint64_t v34 = (uint64_t)v36;
    *uint64_t v36 = v32;
    swift_storeEnumTagMultiPayload();
    v41(v34);
    outlined destroy of UUID?(v34, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneCallBaseCatTemplatingService.makeOpenAppFailedDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_2();
  uint64_t v7 = class metadata base offset for PhoneCallBaseCatTemplatingService + v6;
  uint64_t v8 = *(void **)(v3 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v6 + 80));
  type metadata accessor for SirikitDeviceState();
  outlined init with copy of SharedGlobalsProviding(v3 + *(void *)(v7 + 40), (uint64_t)v11);
  uint64_t v9 = SirikitDeviceState.__allocating_init(from:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v8 + 544))(v9, a2, a3);
  return swift_release();
}

uint64_t PhoneCallBaseCatTemplatingService.nlIntent.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_21(class metadata base offset for PhoneCallBaseCatTemplatingService + v3);
  swift_beginAccess();
  return _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v1, a1, &demangling cache variable for type metadata for PhoneCallNLIntent?);
}

uint64_t PhoneCallBaseCatTemplatingService.nlIntent.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_39_21(class metadata base offset for PhoneCallBaseCatTemplatingService + v3);
  swift_beginAccess();
  outlined assign with take of PhoneCallNLIntent?(a1, v1);
  return swift_endAccess();
}

uint64_t (*PhoneCallBaseCatTemplatingService.nlIntent.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

void PhoneCallBaseCatTemplatingService.faceTimeSettings(_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v0;
  uint64_t v25 = v4;
  uint64_t v26 = v5;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_37();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_30_22();
  type metadata accessor for App();
  uint64_t v24 = App.__allocating_init(appIdentifier:)();
  OUTLINED_FUNCTION_1_58();
  uint64_t v10 = (void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v9 + 72));
  uint64_t v12 = v10[3];
  uint64_t v11 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 168))(v28, v12, v11);
  uint64_t v13 = v29;
  uint64_t v14 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v15 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  uint64_t v16 = OUTLINED_FUNCTION_37_21();
  v17(v16, v15);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  OUTLINED_FUNCTION_37_21();
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16))(v24, v2, v13, v14);
  uint64_t v19 = v18;
  OUTLINED_FUNCTION_11();
  v20();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  if (v19)
  {
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v21 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_29_8(v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    uint64_t v22 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_25(v22);
  }
  OUTLINED_FUNCTION_1_58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for PhoneCallDisplayTextCATs
                                                    + **(void **)(v3
                                                                  + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                              + v23
                                                                              + 24))
                                                    + 32))(v1, v25, v26);
  swift_release();
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneCallBaseCatTemplatingService.callButtonText(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = *(void **)(v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v9 + 24));
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_25(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(class metadata base offset for PhoneCallDisplayTextCATs + *v10 + 64))(v8, a1, a2);
  return outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for SpeakableString?);
}

uint64_t PhoneCallBaseCatTemplatingService.cancelButtonText(_:)()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_28_29();
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallDisplayTextCATs + v0 + 96))();
}

uint64_t PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  type metadata accessor for DispatchTimeInterval();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v11 = 500;
  (*(void (**)(void *, void))(v12 + 104))(v11, enum case for DispatchTimeInterval.milliseconds(_:));
  static DispatchQoS.userInteractive.getter();
  type metadata accessor for TemplatingParallelizer();
  swift_allocObject();
  uint64_t v13 = TemplatingParallelizer.init(name:timeout:qos:)((uint64_t)"CallCancel", 10, 2, (uint64_t)v11, v8);
  uint64_t v14 = implicit closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)();
  uint64_t v15 = (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t)))(*(void *)v13 + 176))(v14);
  swift_release();
  swift_release();
  uint64_t v16 = implicit closure #3 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)();
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t)))(*(void *)v15 + 176))(v16);
  OUTLINED_FUNCTION_37_21();
  swift_release();
  swift_release();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  uint64_t v18 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v15 + 184);
  swift_retain();
  v18(partial apply for closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:), v17);
  swift_release();
  return swift_release();
}

uint64_t PhoneCallBaseCatTemplatingService.emergencyCallSashTitle(_:)()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_28_29();
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallDisplayTextCATs + v0 + 224))();
}

void PhoneCallBaseCatTemplatingService.snippetDisplayHandleLabelWithType(handleLabel:handleType:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v4 = v3;
  uint64_t v20 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_40_18();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_89_1();
  DucTemplatingService.locale.getter();
  static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
  swift_bridgeObjectRelease();
  if (v7 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x2BFBA0);
  }
  uint64_t v19 = v4;
  switch((int)v7)
  {
    case 0:
      uint64_t v14 = @"Unknown";
      goto LABEL_10;
    case 1:
      uint64_t v14 = @"EmailAddress";
      goto LABEL_10;
    case 2:
      uint64_t v14 = @"PhoneNumber";
      goto LABEL_10;
    case 3:
      uint64_t v14 = @"Website";
      goto LABEL_10;
    case 4:
      uint64_t v14 = @"InstantMessage";
LABEL_10:
      uint64_t v15 = v14;
      break;
    default:
      uint64_t v14 = +[NSString stringWithFormat:@"(unknown: %i)", v7];
      break;
  }
  uint64_t v16 = v14;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_2();
  uint64_t v18 = *(void **)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v17 + 24));
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_11_2();
  type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_32_20(v2);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_32_20(v1);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_32_20((uint64_t)v12);
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(class metadata base offset for PhoneCallDisplayTextCATs
                                                                     + *v18
                                                                     + 320))(v2, v1, v12, v20, v19);
  outlined destroy of UUID?((uint64_t)v12, &demangling cache variable for type metadata for SpeakableString?);
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for SpeakableString?);
  outlined destroy of UUID?(v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneCallBaseCatTemplatingService.emergencyServicesDisplayText(_:)()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_28_29();
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallDisplayTextCATs + v0 + 256))();
}

void PhoneCallBaseCatTemplatingService.formatPhoneNumber(countryCode:phoneNumber:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v36 = v4;
  uint64_t v37 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  *(void *)&long long v34 = v9;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_0_0();
  uint64_t v33 = v15;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_12_25();
  __chkstk_darwin(v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = OUTLINED_FUNCTION_11_0(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_40_18();
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_89_1();
  swift_bridgeObjectRetain();
  uint64_t v32 = v8;
  OUTLINED_FUNCTION_11_2();
  type metadata accessor for DialogPhoneNumber.Builder();
  swift_allocObject();
  DialogPhoneNumber.Builder.init(value:)();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v14);
  dispatch thunk of DialogPhoneNumber.Builder.withCountryCode(_:)();
  swift_release();
  outlined destroy of UUID?(v0, &demangling cache variable for type metadata for SpeakableString?);
  dispatch thunk of DialogPhoneNumber.Builder.build()();
  swift_release();
  dispatch thunk of DialogPhoneNumber.toString.getter();
  swift_release();
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v1, (uint64_t)v22, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v14) == 1)
  {
    outlined destroy of UUID?((uint64_t)v22, &demangling cache variable for type metadata for SpeakableString?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v24 = OUTLINED_FUNCTION_65();
    long long v34 = xmmword_467710;
    *(_OWORD *)(v24 + 16) = xmmword_467710;
    uint64_t v25 = v32;
    *(void *)(v24 + 32) = v32;
    *(void *)(v24 + 40) = v6;
    uint64_t v26 = OUTLINED_FUNCTION_65();
    *(_OWORD *)(v26 + 16) = v34;
    *(void *)(v26 + 32) = v25;
    *(void *)(v26 + 40) = v6;
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_33_19();
    TemplatingResult.init(templateIdentifier:speak:print:)();
    swift_storeEnumTagMultiPayload();
    v37(v13);
    outlined destroy of UUID?(v13, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }
  else
  {
    uint64_t v27 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v2, v22, v14);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v28 = OUTLINED_FUNCTION_65();
    long long v34 = xmmword_467710;
    *(_OWORD *)(v28 + 16) = xmmword_467710;
    *(void *)(v28 + 32) = SpeakableString.speak.getter();
    *(void *)(v28 + 40) = v29;
    uint64_t v30 = OUTLINED_FUNCTION_65();
    *(_OWORD *)(v30 + 16) = v34;
    *(void *)(v30 + 32) = SpeakableString.print.getter();
    *(void *)(v30 + 40) = v31;
    OUTLINED_FUNCTION_33_19();
    TemplatingResult.init(templateIdentifier:speak:print:)();
    swift_storeEnumTagMultiPayload();
    v37(v13);
    outlined destroy of UUID?(v13, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v2, v14);
  }
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallBaseCatTemplatingService.tryWithApp(app:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  uint64_t v23 = v5;
  uint64_t v24 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_37();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_2();
  uint64_t v14 = (void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v13 + 48));
  uint64_t v15 = v14[3];
  uint64_t v16 = v14[4];
  __swift_project_boxed_opaque_existential_1(v14, v15);
  OUTLINED_FUNCTION_1_58();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v17 + 40)), *(void *)(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v17 + 40) + 24));
  dispatch thunk of DeviceState.siriLocale.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16))(v23, v1, v15, v16);
  uint64_t v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v24);
  if (v19)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_2();
    uint64_t v20 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_29_8(v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = type metadata accessor for SpeakableString();
    OUTLINED_FUNCTION_25(v21);
  }
  OUTLINED_FUNCTION_1_58();
  (*(void (**)(char *, void, uint64_t, uint64_t))(class metadata base offset for PhoneCallDisplayTextCATs
                                                           + **(void **)(v2
                                                                         + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                                     + v22
                                                                                     + 24))
                                                           + 544))(v12, 0, v25, v26);
  outlined destroy of UUID?((uint64_t)v12, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneCallBaseCatTemplatingService.updateSettings(_:)()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_28_29();
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallDisplayTextCATs + v0 + 608))();
}

uint64_t PhoneCallBaseCatTemplatingService.updateSettings()()
{
  OUTLINED_FUNCTION_2();
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallDisplayTextCATs
                              + **(void **)(v0
                                            + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                        + v1
                                                        + 24))
                              + 632))();
}

void PhoneCallBaseCatTemplatingService.makeSpeakableDisambiguationItemListForPhone(disambiguationList:_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v78 = v2;
  uint64_t v79 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_8();
  uint64_t v76 = v8;
  __chkstk_darwin(v9);
  uint64_t v75 = (char *)&v70 - v10;
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_5_8();
  uint64_t v74 = v15;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v73 = (char *)&v70 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v70 - v19;
  uint64_t v77 = v5;
  uint64_t v21 = SiriKitDisambiguationList.rawItems.getter();
  unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
  v85[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(v21 + 16);
  uint64_t v80 = v1;
  if (v23)
  {
    uint64_t v24 = v21 + 32;
    do
    {
      outlined init with copy of Any(v24, (uint64_t)v84);
      outlined init with copy of Any((uint64_t)v84, (uint64_t)&v81);
      type metadata accessor for INPerson();
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v83 = 0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
      if (v83)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v85[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                          + (v85[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v24 += 32;
      --v23;
    }
    while (v23);
    unint64_t v22 = v85[0];
    uint64_t v1 = v80;
  }
  swift_bridgeObjectRelease();
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = &metadata instantiation cache for protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory;
  if (v25)
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v22 & 0xC000000000000001) == 0);
    if ((v22 & 0xC000000000000001) != 0) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(v22 + 32);
    }
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
    }
    if (v29 == 1 && INPerson.hasHandleLabel.getter())
    {
      OUTLINED_FUNCTION_3_80();
      __swift_project_boxed_opaque_existential_1((void *)(v1 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v30 + 40)), *(void *)(v1 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v30 + 40) + 24));
      char v31 = DeviceState.isAuthenticatedForPhone.getter();
      SiriKitDisambiguationList.makeSpeakableHandleLabels(deviceIsLocked:)((v31 & 1) == 0);
      uint64_t v33 = v32;

      v85[0] = v33;
      goto LABEL_28;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v34 = swift_bridgeObjectRetain();
  char v35 = PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v34);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_80();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v36 + 40)), *(void *)(v1 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v36 + 40) + 24));
  char v37 = (DeviceState.isAuthenticatedForPhone.getter() ^ 1) & 1;
  if (v35) {
    SiriKitDisambiguationList.makeSpeakableHandleLabels(deviceIsLocked:)(v37);
  }
  else {
    uint64_t v38 = dispatch thunk of SiriKitDisambiguationList.makeSpeakableListItems(deviceIsLocked:)();
  }
  v85[0] = v38;
  uint64_t v26 = &metadata instantiation cache for protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory;
LABEL_28:
  OUTLINED_FUNCTION_3_80();
  char v39 = static PicsUtils.shouldUsePicsDisambiguationFormat(persons:sharedGlobals:)(v22);
  uint64_t v81 = 0;
  unint64_t v82 = 0;
  if (v39)
  {
    uint64_t v40 = static PicsUtils.splitPicsPerson(persons:speakableStrings:)(v22, v85);
    uint64_t v42 = v41;
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v85[0] = v40;
    uint64_t v77 = v42;
    uint64_t v81 = v42;
    unint64_t v82 = v44;
    uint64_t v45 = one-time initialization token for siriPhone;
    swift_bridgeObjectRetain();
    if (v45 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain();
    char v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      unint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v84[0] = v72;
      uint64_t v71 = v49;
      *(_DWORD *)unint64_t v49 = 136315138;
      if (v44) {
        uint64_t v50 = (uint64_t)v77;
      }
      else {
        uint64_t v50 = 7104878;
      }
      if (v44) {
        unint64_t v51 = v44;
      }
      else {
        unint64_t v51 = 0xE300000000000000;
      }
      uint64_t v77 = v49 + 4;
      swift_bridgeObjectRetain();
      uint64_t v52 = v50;
      uint64_t v26 = (void *)&metadata instantiation cache for protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory;
      uint64_t v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v51, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v1 = v80;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v47, v48, "PLUS contact %s is detected", v71, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      uint64_t v53 = swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v53 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(v53);
  *(&v70 - 4) = (uint64_t)v85;
  *((unsigned char *)&v70 - 24) = v39 & 1;
  *(&v70 - 2) = v1;
  uint64_t v54 = swift_bridgeObjectRetain();
  unint64_t v55 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySaySSGG_SSs5NeverOTg5038_sSiS2SIgygo_Si6offset_SS7elementtSSs5F11OIegnrzr_TRSiS2SIgygo_Tf1cn_n(v54, partial apply for closure #2 in PhoneCallBaseCatTemplatingService.makeSpeakableDisambiguationItemListForPhone(disambiguationList:_:));
  swift_bridgeObjectRelease();
  uint64_t v56 = v55[2];
  if (v56)
  {
    v84[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v57 = (void *)v84[0];
    uint64_t v77 = (uint8_t *)v55;
    uint64_t v58 = v55 + 5;
    do
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_11_2();
      v84[0] = (uint64_t)v57;
      unint64_t v59 = v57[2];
      if (v59 >= v57[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v57 = (void *)v84[0];
      }
      v58 += 2;
      v57[2] = v59 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))((unint64_t)v57+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v59, v20, v11);
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease();
    uint64_t v1 = v80;
    uint64_t v26 = (void *)&metadata instantiation cache for protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = _swiftEmptyArrayStorage;
  }
  swift_beginAccess();
  if (v82)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = v1;
    uint64_t v61 = v73;
    SpeakableString.init(print:speak:)();
    uint64_t v62 = v74;
    SpeakableString.init(print:speak:)();
    OUTLINED_FUNCTION_1_58();
    long long v64 = *(void **)(v60 + *(void *)(v26[434] + v63 + 32));
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v66 = (uint64_t)v75;
    v65(v75, v61, v11);
    __swift_storeEnumTagSinglePayload(v66, 0, 1, v11);
    uint64_t v67 = v76;
    v65((char *)v76, v62, v11);
    __swift_storeEnumTagSinglePayload(v67, 0, 1, v11);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for PhoneCallCommonCATs
                                                                         + *v64
                                                                         + 32))(v57, v66, v67, v78, v79);
    swift_bridgeObjectRelease();
    outlined destroy of UUID?(v67, &demangling cache variable for type metadata for SpeakableString?);
    outlined destroy of UUID?(v66, &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v68((uint64_t)v62, v11);
    v68((uint64_t)v61, v11);
  }
  else
  {
    OUTLINED_FUNCTION_3_80();
    OUTLINED_FUNCTION_2();
    (*(void (**)(void *, uint64_t, uint64_t))(v69 + class metadata base offset for PhoneCallCommonCATs))(v57, v78, v79);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t (*PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:)(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v7 = (void *)OUTLINED_FUNCTION_65();
  void v7[2] = a1;
  v7[3] = v3;
  v7[4] = a2;
  v7[5] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  return partial apply for closure #1 in PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:);
}

uint64_t PhoneCallBaseCatTemplatingService.displayTextCatFamily.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t PhoneCallBaseCatTemplatingService.phoneCallCommonCats.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t PhoneCallBaseCatTemplatingService.deviceState.getter()
{
  OUTLINED_FUNCTION_2();
  return outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v1 + 40), v2);
}

uint64_t PhoneCallBaseCatTemplatingService.appInfoBuilder.getter()
{
  OUTLINED_FUNCTION_2();
  return outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v1 + 48), v2);
}

uint64_t key path getter for PhoneCallBaseCatTemplatingService.nlIntent : <A, B>PhoneCallBaseCatTemplatingService<A, B>(void **a1)
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **a1 + 88))();
}

uint64_t key path setter for PhoneCallBaseCatTemplatingService.nlIntent : <A, B>PhoneCallBaseCatTemplatingService<A, B>(uint64_t a1, void **a2)
{
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)v4, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  return (*(uint64_t (**)(unsigned char *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                            + **a2
                                            + 96))(v4);
}

uint64_t PhoneCallBaseCatTemplatingService.labelTemplating.getter()
{
  OUTLINED_FUNCTION_2();
  return outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v1 + 64), v2);
}

uint64_t PhoneCallBaseCatTemplatingService.sharedGlobals.getter()
{
  OUTLINED_FUNCTION_2();
  return outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v1 + 72), v2);
}

uint64_t PhoneCallBaseCatTemplatingService.startCallCats.getter()
{
  return OUTLINED_FUNCTION_32_12();
}

uint64_t (*implicit closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)())(uint64_t a1, uint64_t a2)
{
  return partial apply for implicit closure #2 in implicit closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:);
}

uint64_t implicit closure #2 in implicit closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + *a3 + 128))();
}

uint64_t (*implicit closure #3 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)())(uint64_t a1, uint64_t a2)
{
  return partial apply for implicit closure #4 in implicit closure #3 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:);
}

uint64_t implicit closure #4 in implicit closure #3 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + *a3 + 136))();
}

uint64_t closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = type metadata accessor for PhoneError();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    goto LABEL_4;
  }
  uint64_t v12 = _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (v11 == 1)
  {
    outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
LABEL_4:
    *(void *)uint64_t v6 = 0xD000000000000053;
    *((void *)v6 + 1) = 0x8000000000498800;
    *((void *)v6 + 2) = 0xD000000000000043;
    *((void *)v6 + 3) = 0x80000000004985E0;
    *((void *)v6 + 4) = 0xD00000000000001ELL;
    *((void *)v6 + 5) = 0x8000000000498860;
    *((void *)v6 + 6) = 74;
    v6[56] = 0;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    uint64_t v13 = swift_allocError();
    PhoneError.logged()(v14);
    outlined destroy of PhoneError((uint64_t)v6);
    v18[0] = v13;
    memset(&v18[1], 0, 24);
    char v19 = 1;
    a2(v18);
    return swift_errorRelease();
  }
  __chkstk_darwin(v12);
  *(&v17 - 2) = v16;
  _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSS4call_SS6canceltTg5((void (*)(_OWORD *__return_ptr, char *))partial apply for closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:), (uint64_t)v18);
  a2(v18);
  outlined release of Result<(call: String, cancel: String), Error>((uint64_t)v18);
  return outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
}

uint64_t closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TemplatingResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)v10, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t result = swift_getEnumCaseMultiPayload();
  int v12 = result;
  if (result == 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = *v10;
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
    uint64_t v16 = closure #1 in closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)();
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    uint64_t v15 = v19;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v12 == 1;
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)()
{
  uint64_t result = TemplatingResult.print.getter();
  if (*(void *)(result + 16))
  {
    uint64_t v1 = *(void *)(result + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = TemplatingResult.print.getter();
    if (*(void *)(result + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v12;
  v8[4] = a6;
  uint64_t v8[5] = a7;
  void v8[2] = a4;
  v8[3] = a5;
  v8[8] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  v8[9] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for TemplatingResult();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  v8[13] = swift_task_alloc();
  return _swift_task_switch(closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:), 0, 0);
}

uint64_t closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:)()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = (void *)(v0[2]
                + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *(void *)v0[2] + 64));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  swift_bridgeObjectRetain();
  App.isFirstParty()();
  AppDisplayInfo.init(displayName:isFirstParty:)();
  uint64_t v5 = type metadata accessor for AppDisplayInfo();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v5);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  *uint64_t v6 = v0;
  v6[1] = closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:);
  uint64_t v7 = v0[13];
  return v9(v7, v3, v4);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v6 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v7 = (void (*)(uint64_t))v0[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v8 = OUTLINED_FUNCTION_65();
  *(_OWORD *)(v8 + 16) = xmmword_467710;
  *(void *)(v8 + 32) = v1;
  *(void *)(v8 + 40) = v2;
  TemplatingResult.init(templateIdentifier:speak:print:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v3, v5);
  swift_storeEnumTagMultiPayload();
  v7(v6);
  outlined destroy of UUID?(v6, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

{
  void *v0;
  void *v1;
  void (*v2)(void *);
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (void (*)(void *))v0[6];
  uint64_t *v1 = v0[15];
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  v2(v1);
  swift_errorRelease();
  outlined destroy of UUID?((uint64_t)v1, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[15] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[13];
  if (v2)
  {
    outlined destroy of UUID?(v7, &demangling cache variable for type metadata for AppDisplayInfo?);
    uint64_t v8 = closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:);
  }
  else
  {
    v6[16] = a2;
    v6[17] = a1;
    outlined destroy of UUID?(v7, &demangling cache variable for type metadata for AppDisplayInfo?);
    uint64_t v8 = closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:);
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t closure #2 in PhoneCallBaseCatTemplatingService.makeSpeakableDisambiguationItemListForPhone(disambiguationList:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a2;
    if (result + 1 == *(void *)(*(void *)a4 + 16) && (a5 & 1) == 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = (void *)((char *)a6
                    + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a6 + 16));
      uint64_t v8 = *v7;
      uint64_t v9 = (void *)v7[1];
      swift_bridgeObjectRetain();
      v10._uint64_t countAndFlagsBits = v8;
      v10._object = v9;
      String.append(_:)(v10);
      return a2;
    }
    return v6;
  }
  return result;
}

void *_sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySaySSGG_SSs5NeverOTg5038_sSiS2SIgygo_Si6offset_SS7elementtSSs5F11OIegnrzr_TRSiS2SIgygo_Tf1cn_n(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      uint64_t v8 = a2(v4, v7, v6);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v4;
      v5 += 2;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v8;
      v12[5] = v10;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t closure #1 in PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v41 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = type metadata accessor for TemplatingResult();
  uint64_t v36 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  uint64_t v17 = *(void *)(v36 + 64);
  uint64_t v18 = __chkstk_darwin(v16);
  char v39 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v40 = (char *)&v32 - v19;
  uint64_t v38 = a2;
  if (SiriKitDisambiguationList.shouldReadItemsInVox.getter())
  {
    uint64_t v20 = (void *)((char *)a3
                   + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a3 + 40));
    uint64_t v35 = v12;
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    uint64_t v21 = v35;
    if (DeviceState.isVox.getter())
    {
      _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)v15, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        unint64_t v34 = a3;
        uint64_t v23 = v36;
        uint64_t v24 = *(void (**)(unint64_t, char *, uint64_t))(v36 + 32);
        uint64_t v32 = a5;
        uint64_t v33 = v24;
        uint64_t v25 = v40;
        uint64_t v26 = v37;
        v24((unint64_t)v40, v15, v37);
        _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, v41, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v39, v25, v26);
        unint64_t v27 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        uint64_t v28 = a4;
        unint64_t v29 = (v21 + *(unsigned __int8 *)(v23 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
        uint64_t v30 = swift_allocObject();
        uint64_t v31 = v32;
        *(void *)(v30 + 16) = v28;
        *(void *)(v30 + 24) = v31;
        outlined init with take of Result<TemplatingResult, Error>(v41, v30 + v27);
        v33(v30 + v29, v39, v26);
        swift_retain();
        PhoneCallBaseCatTemplatingService.makeSpeakableDisambiguationItemListForPhone(disambiguationList:_:)();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v40, v26);
      }
      outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    }
  }
  return a4(a1);
}

void *closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (void *)((char *)v36 - v10);
  uint64_t v12 = type metadata accessor for TemplatingResult();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v36 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v36 - v20;
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)v11, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  v36[1] = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = *v11;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    swift_willThrowTypedImpl();
    swift_errorRelease();
    return (void *)v40(v37);
  }
  uint64_t v23 = *(void (**)(char *, uint64_t *, uint64_t))(v13 + 32);
  v23(v19, v11, v12);
  v23(v21, (uint64_t *)v19, v12);
  uint64_t v24 = TemplatingResult.templateIdentifier.getter();
  uint64_t v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_467710;
  uint64_t result = (void *)TemplatingResult.speak.getter();
  if (!result[2])
  {
    __break(1u);
    goto LABEL_8;
  }
  v36[0] = v26;
  uint64_t v37 = v24;
  uint64_t v28 = result[4];
  uint64_t v29 = result[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v28;
  uint64_t v42 = v29;
  v30._uint64_t countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  uint64_t result = (void *)TemplatingResult.speak.getter();
  if (!result[2])
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v32 = result[4];
  uint64_t v31 = (void *)result[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = v32;
  v33._object = v31;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = v42;
  *(void *)(v27 + 32) = v41;
  *(void *)(v27 + 40) = v34;
  TemplatingResult.print.getter();
  TemplatingResult.init(templateIdentifier:speak:print:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v16, v12);
  swift_storeEnumTagMultiPayload();
  v40((uint64_t)v9);
  outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v13 + 8);
  v35(v16, v12);
  return (void *)((uint64_t (*)(char *, uint64_t))v35)(v21, v12);
}

void PhoneCallBaseCatTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)()
{
}

void PhoneCallBaseCatTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
}

uint64_t outlined init with copy of PhoneError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhoneCallBaseCatTemplatingService.__ivar_destroyer()
{
  OUTLINED_FUNCTION_2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  swift_release();
  OUTLINED_FUNCTION_2();
  swift_release();
  OUTLINED_FUNCTION_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v1
                                                            + 40));
  OUTLINED_FUNCTION_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v2
                                                            + 48));
  OUTLINED_FUNCTION_2();
  outlined destroy of UUID?(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v3 + 56), &demangling cache variable for type metadata for PhoneCallNLIntent?);
  OUTLINED_FUNCTION_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v4
                                                            + 64));
  OUTLINED_FUNCTION_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                            + v5
                                                            + 72));
  OUTLINED_FUNCTION_2();

  return swift_release();
}

uint64_t PhoneCallBaseCatTemplatingService.__deallocating_deinit()
{
  PhoneCallBaseCatTemplatingService.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.faceTimeSettings(_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 120))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.callButtonText(_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 128))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.cancelButtonText(_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 136))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.getCallAndCancelButtonText(_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 144))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.emergencyCallSashTitle(_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 152))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.snippetDisplayHandleLabelWithType(handleLabel:handleType:_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 160))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.emergencyServicesDisplayText(_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 168))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.formatPhoneNumber(countryCode:phoneNumber:_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 176))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.makeOpenAppDialog(app:_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return dispatch thunk of DucTemplatingService.makeOpenAppDialog(app:_:)();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.tryWithApp(app:_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 184))();
}

uint64_t protocol witness for PhoneCallCommonDisplayTemplating.updateSettings(_:) in conformance PhoneCallBaseCatTemplatingService<A, B>()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PhoneCallBaseCatTemplatingService + **v0 + 192))();
}

uint64_t type metadata accessor for PhoneCallBaseCatTemplatingService()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2C2AE8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return closure #1 in PhoneCallBaseCatTemplatingService.makeOpenAppDialog(app:_:)(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t outlined assign with take of PhoneCallNLIntent?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLIntent?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2C2C94()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(uint64_t a1)
{
  return closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_2C2CD4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #1 in PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:)(uint64_t a1)
{
  return closure #1 in PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:)(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_2C2D30()
{
  return 16;
}

__n128 sub_2C2D3C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata completion function for PhoneCallBaseCatTemplatingService()
{
  return swift_initClassMetadata2();
}

uint64_t partial apply for closure #2 in PhoneCallBaseCatTemplatingService.makeSpeakableDisambiguationItemListForPhone(disambiguationList:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return closure #2 in PhoneCallBaseCatTemplatingService.makeSpeakableDisambiguationItemListForPhone(disambiguationList:_:)(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(void **)(v3 + 32));
}

void specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v25 = v24;
  OUTLINED_FUNCTION_21_33(v26, v27, v28, v29, v30);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  uint64_t v32 = OUTLINED_FUNCTION_11_0(v31);
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_23_33(v33, v58);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_53();
  v64[3] = a22;
  v64[4] = a23;
  __swift_allocate_boxed_opaque_existential_1(v64);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_70();
  v36(v35);
  void v63[3] = type metadata accessor for AppInfoBuilder();
  v63[4] = &protocol witness table for AppInfoBuilder;
  v63[0] = v25;
  OUTLINED_FUNCTION_1_45();
  uint64_t v38 = (void *)((char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v37 + 16));
  *uint64_t v38 = 0x3D65737561705C1BLL;
  v38[1] = 0xEC0000005C303532;
  OUTLINED_FUNCTION_1_45();
  uint64_t v40 = (char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v39 + 56);
  *(_OWORD *)uint64_t v40 = 0u;
  *((_OWORD *)v40 + 1) = 0u;
  *((void *)v40 + 4) = 0;
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v23, (uint64_t)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v41 + 72));
  uint64_t v42 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  unint64_t v43 = *(void (**)(uint64_t))(v42 + 8);
  swift_retain();
  uint64_t v44 = OUTLINED_FUNCTION_36_22();
  v43(v44);
  uint64_t v45 = (void *)((char *)a21
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a21 + 40));
  outlined init with take of AppSelectionSignalComponent(&v62, (uint64_t)v45);
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v46 + 24)) = v59;
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v47 + 32)) = v60;
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v63, (uint64_t)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v48 + 48));
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v64, (uint64_t)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v49 + 64));
  OUTLINED_FUNCTION_1_45();
  OUTLINED_FUNCTION_47_18(class metadata base offset for PhoneCallBaseCatTemplatingService + v50);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_20_34(v45);
  uint64_t v51 = Locale.identifier.getter();
  OUTLINED_FUNCTION_12_41(v51, v52);
  OUTLINED_FUNCTION_10_49();
  OUTLINED_FUNCTION_26_27();
  uint64_t v53 = OUTLINED_FUNCTION_31_24();
  v54(v53);
  type metadata accessor for INIntentSlotValueType(0);
  lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType(&lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType, type metadata accessor for INIntentSlotValueType);
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v55 = OUTLINED_FUNCTION_8_74();
  v56(v55);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v45, (uint64_t)v61);
  uint64_t v57 = type metadata accessor for DucTemplatingLocalContext();
  OUTLINED_FUNCTION_13_39(v57);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

void specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v60 = v30;
  uint64_t v62 = v31;
  uint64_t v33 = v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  uint64_t v35 = OUTLINED_FUNCTION_11_0(v34);
  __chkstk_darwin(v35);
  OUTLINED_FUNCTION_3_1();
  uint64_t v61 = v36;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v37);
  OUTLINED_FUNCTION_53();
  v66[3] = a25;
  v66[4] = a26;
  __swift_allocate_boxed_opaque_existential_1(v66);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_70();
  v38();
  uint64_t v65[3] = &type metadata for LabelTemplatesProvider;
  v65[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v39 = (void *)OUTLINED_FUNCTION_65();
  v65[0] = v39;
  void v39[2] = v29;
  v39[3] = v27;
  v39[4] = a21;
  v39[5] = a22;
  OUTLINED_FUNCTION_1_45();
  uint64_t v41 = (void *)((char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v40 + 16));
  *uint64_t v41 = 0x3D65737561705C1BLL;
  v41[1] = 0xEC0000005C303532;
  OUTLINED_FUNCTION_1_45();
  unint64_t v43 = (char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v42 + 56);
  *((void *)v43 + 4) = 0;
  *(_OWORD *)unint64_t v43 = 0u;
  *((_OWORD *)v43 + 1) = 0u;
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v33, (uint64_t)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v44 + 72));
  uint64_t v45 = v33[4];
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  uint64_t v46 = *(void (**)(uint64_t))(v45 + 8);
  swift_retain();
  uint64_t v47 = OUTLINED_FUNCTION_36_22();
  v46(v47);
  uint64_t v48 = (void *)((char *)a24
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a24 + 40));
  outlined init with take of AppSelectionSignalComponent(&v64, (uint64_t)v48);
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v49 + 24)) = v62;
  OUTLINED_FUNCTION_1_45();
  *(void *)((char *)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v50 + 32)) = v60;
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v66, (uint64_t)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v51 + 48));
  OUTLINED_FUNCTION_1_45();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v65, (uint64_t)a24 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v52 + 64));
  OUTLINED_FUNCTION_1_45();
  OUTLINED_FUNCTION_47_18(class metadata base offset for PhoneCallBaseCatTemplatingService + v53);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_20_34(v48);
  uint64_t v54 = Locale.identifier.getter();
  OUTLINED_FUNCTION_12_41(v54, v55);
  OUTLINED_FUNCTION_10_49();
  OUTLINED_FUNCTION_26_27();
  OUTLINED_FUNCTION_11();
  v56();
  type metadata accessor for INIntentSlotValueType(0);
  lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType(&lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType, type metadata accessor for INIntentSlotValueType);
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v57 = OUTLINED_FUNCTION_8_74();
  v58(v57);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v48, (uint64_t)&v63);
  uint64_t v59 = type metadata accessor for DucTemplatingLocalContext();
  __swift_storeEnumTagSinglePayload(v61, 1, 1, v59);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

void specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  void (*v46)(long long *__return_ptr, uint64_t, uint64_t);
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void v64[7];
  long long v65[2];
  uint64_t v66[5];
  uint64_t v67[6];

  OUTLINED_FUNCTION_24_0();
  uint64_t v63 = v26;
  OUTLINED_FUNCTION_21_33(v27, v28, v29, v30, v31);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  uint64_t v33 = OUTLINED_FUNCTION_11_0(v32);
  __chkstk_darwin(v33);
  OUTLINED_FUNCTION_23_33(v34, v60);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v35);
  OUTLINED_FUNCTION_53();
  v67[3] = a22;
  v67[4] = a24;
  __swift_allocate_boxed_opaque_existential_1(v67);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_70();
  v37(v36);
  v66[3] = a23;
  v66[4] = a25;
  __swift_allocate_boxed_opaque_existential_1(v66);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_70();
  v39(v38);
  OUTLINED_FUNCTION_35_4();
  OUTLINED_FUNCTION_22_37((void *)((char *)a21
                                   + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService
                                               + v40
                                               + 16)));
  OUTLINED_FUNCTION_35_4();
  uint64_t v42 = (char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v41 + 56);
  *(_OWORD *)uint64_t v42 = 0u;
  *((_OWORD *)v42 + 1) = 0u;
  *((void *)v42 + 4) = 0;
  OUTLINED_FUNCTION_35_4();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v25, (uint64_t)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v43 + 72));
  uint64_t v44 = v25[3];
  uint64_t v45 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v44);
  uint64_t v46 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v45 + 8);
  swift_retain();
  v46(v65, v44, v45);
  uint64_t v47 = (void *)((char *)a21
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a21 + 40));
  outlined init with take of AppSelectionSignalComponent(v65, (uint64_t)v47);
  OUTLINED_FUNCTION_35_4();
  *(void *)((char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v48 + 24)) = v61;
  OUTLINED_FUNCTION_35_4();
  *(void *)((char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v49 + 32)) = v62;
  OUTLINED_FUNCTION_35_4();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v67, (uint64_t)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v50 + 48));
  OUTLINED_FUNCTION_35_4();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v66, (uint64_t)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v51 + 64));
  OUTLINED_FUNCTION_35_4();
  *(void *)((char *)a21 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v52 + 80)) = v63;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_20_34(v47);
  uint64_t v53 = Locale.identifier.getter();
  OUTLINED_FUNCTION_12_41(v53, v54);
  OUTLINED_FUNCTION_10_49();
  OUTLINED_FUNCTION_26_27();
  uint64_t v55 = OUTLINED_FUNCTION_31_24();
  v56(v55);
  type metadata accessor for INIntentSlotValueType(0);
  lazy protocol witness table accessor for type INIntentSlotValueType and conformance INIntentSlotValueType(&lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType, type metadata accessor for INIntentSlotValueType);
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v57 = OUTLINED_FUNCTION_8_74();
  v58(v57);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v47, (uint64_t)v64);
  uint64_t v59 = type metadata accessor for DucTemplatingLocalContext();
  OUTLINED_FUNCTION_13_39(v59);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_2C3924()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_2C3964()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>)
                 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v0 + v3, v4);
  }
  uint64_t v10 = (v3 + v14 + v7) & ~v7;
  uint64_t v11 = v10 + v13;
  v9(v0 + v10, v4);

  return _swift_deallocObject(v0, v11, v2 | v7 | 7);
}

void *partial apply for closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>)
                 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for TemplatingResult() - 8);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.appendVoxContactsReadout(disambiguationList:_:)(a1, v7, v8, v1 + v4, v9);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(*(void *)(v1 + 16), a1);
}

uint64_t outlined release of Result<(call: String, cancel: String), Error>(uint64_t a1)
{
  return a1;
}

uint64_t outlined consume of Result<(call: String, cancel: String), Error>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(uint64_t a1, uint64_t a2)
{
  return implicit closure #4 in implicit closure #3 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(a1, a2, v2);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(uint64_t a1, uint64_t a2)
{
  return implicit closure #2 in implicit closure #1 in PhoneCallBaseCatTemplatingService.getCallAndCancelButtonText(_:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_8_74()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_10_49()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

unint64_t OUTLINED_FUNCTION_12_41(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 208) = a1;
  *(void *)(v2 - 200) = a2;
  *(void *)(v2 - 264) = 45;
  *(void *)(v2 - 256) = 0xE100000000000000;
  *(void *)(v2 - 224) = 95;
  *(void *)(v2 - 216) = 0xE100000000000000;
  return lazy protocol witness table accessor for type String and conformance String();
}

uint64_t OUTLINED_FUNCTION_13_39(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(*(void *)(v1 - 312), 1, 1, a1);
  return *(void *)(v1 - 304);
}

uint64_t OUTLINED_FUNCTION_20_34(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return dispatch thunk of DeviceState.siriLocale.getter();
}

void OUTLINED_FUNCTION_22_37(void *a1@<X8>)
{
  *a1 = 0x3D65737561705C1BLL;
  a1[1] = 0xEC0000005C303532;
}

uint64_t OUTLINED_FUNCTION_23_33@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 312) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for Locale();
}

uint64_t OUTLINED_FUNCTION_26_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_22()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_31_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_20(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

unint64_t OUTLINED_FUNCTION_33_19()
{
  return 0xD000000000000012;
}

uint64_t OUTLINED_FUNCTION_36_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_21@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(void *)(a1 + 56);
}

void OUTLINED_FUNCTION_47_18(uint64_t a1@<X8>)
{
  *(void *)(v1 + *(void *)(a1 + 80)) = *(void *)(v2 - 272);
}

uint64_t OngoingCallErrorFlowFactory.currentCall.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t OngoingCallErrorFlowFactory.selfAdd()()
{
  uint64_t v1 = type metadata accessor for DialogPhase();
  __chkstk_darwin(v1 - 8);
  OUTLINED_FUNCTION_4();
  outlined init with copy of OngoingCallErrorFlowFactory(v0, (uint64_t)v8);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = v8[1];
  v2[1] = v8[0];
  v2[2] = v3;
  long long v4 = v8[3];
  v2[3] = v8[2];
  void v2[4] = v4;
  swift_retain();
  static DialogPhase.error.getter();
  outlined init with copy of SignalProviding(v0 + 16, (uint64_t)v8);
  type metadata accessor for DialogOutputFactory();
  swift_allocObject();
  uint64_t v5 = DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 112))(v5);
  swift_release();
  swift_release();
  return v6;
}

uint64_t closure #1 in OngoingCallErrorFlowFactory.selfAdd()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(closure #1 in OngoingCallErrorFlowFactory.selfAdd(), 0, 0);
}

uint64_t closure #1 in OngoingCallErrorFlowFactory.selfAdd()()
{
  OUTLINED_FUNCTION_4_72();
  uint64_t v2 = SPHCall.toPhoneCallRecord()();
  *(void *)(v1 + 24) = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                   + *v0
                                                   + 112)
                                       + **(int **)(class metadata base offset for AddCallParticipantCATsSimple
                                                  + *v0
                                                  + 112));
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v3;
  *long long v3 = v1;
  v3[1] = closure #1 in OngoingCallErrorFlowFactory.selfAdd();
  return v5(v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_0_1();
  long long v3 = v2;
  long long v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  uint64_t *v5 = v4;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(closure #1 in OngoingCallErrorFlowFactory.selfAdd(), 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v6 = OUTLINED_FUNCTION_18_2();
    return v7(v6);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t outlined init with copy of OngoingCallErrorFlowFactory(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2C4330()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in OngoingCallErrorFlowFactory.selfAdd()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = partial apply for closure #1 in OngoingCallErrorFlowFactory.selfAdd();
  return closure #1 in OngoingCallErrorFlowFactory.selfAdd()(v0 + 16);
}

uint64_t OngoingCallErrorFlowFactory.participantAlreadyActive(person:)(void *a1)
{
  uint64_t v3 = type metadata accessor for DialogPhase();
  __chkstk_darwin(v3 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  type metadata accessor for PhonePerson(0);
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v9);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v10 + 8))(&v18, v9, v10);
  __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
  dispatch thunk of DeviceState.siriLocale.getter();
  uint64_t v11 = static PhonePerson.make(phonePerson:options:locale:)(a1, 0, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  outlined init with copy of OngoingCallErrorFlowFactory((uint64_t)v1, (uint64_t)&v18);
  uint64_t v12 = swift_allocObject();
  long long v13 = v19;
  *(_OWORD *)(v12 + 16) = v18;
  *(_OWORD *)(v12 + 32) = v13;
  long long v14 = v21;
  *(_OWORD *)(v12 + 48) = v20;
  *(_OWORD *)(v12 + 64) = v14;
  *(void *)(v12 + 80) = v11;
  swift_retain();
  swift_retain();
  static DialogPhase.error.getter();
  outlined init with copy of SignalProviding((uint64_t)(v1 + 2), (uint64_t)&v18);
  type metadata accessor for DialogOutputFactory();
  swift_allocObject();
  uint64_t v15 = DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 112))(v15);
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

uint64_t closure #1 in OngoingCallErrorFlowFactory.participantAlreadyActive(person:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(closure #1 in OngoingCallErrorFlowFactory.participantAlreadyActive(person:), 0, 0);
}

uint64_t closure #1 in OngoingCallErrorFlowFactory.participantAlreadyActive(person:)()
{
  OUTLINED_FUNCTION_4_72();
  uint64_t v2 = SPHCall.toPhoneCallRecord()();
  v1[4] = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, void, uint64_t))(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                                    + *v0
                                                                    + 64)
                                                        + **(int **)(class metadata base offset for AddCallParticipantCATsSimple
                                                                   + *v0
                                                                   + 64));
  uint64_t v3 = (void *)swift_task_alloc();
  v1[5] = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #1 in OngoingCallErrorFlowFactory.participantAlreadyActive(person:);
  uint64_t v4 = v1[3];
  return v6(v4, 0, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  uint64_t *v5 = v4;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(closure #1 in OngoingCallErrorFlowFactory.participantAlreadyActive(person:), 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v6 = OUTLINED_FUNCTION_18_2();
    return v7(v6);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t OngoingCallErrorFlowFactory.init(currentCall:sharedGlobals:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for CATOption();
  __chkstk_darwin(v8 - 8);
  OUTLINED_FUNCTION_4();
  *a4 = a1;
  a4[1] = a2;
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)(a4 + 2));
  type metadata accessor for AddCallParticipantCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t result = CATWrapperSimple.__allocating_init(options:globals:)();
  a4[7] = result;
  return result;
}

uint64_t sub_2C4A14()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t partial apply for closure #1 in OngoingCallErrorFlowFactory.participantAlreadyActive(person:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v0 + 16;
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = partial apply for closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:);
  return closure #1 in OngoingCallErrorFlowFactory.participantAlreadyActive(person:)(v2, v3);
}

uint64_t destroy for OngoingCallErrorFlowFactory(uint64_t a1)
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);

  return swift_release();
}

uint64_t initializeWithCopy for OngoingCallErrorFlowFactory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_unknownObjectRetain();
  v8(v4, v5, v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  return a1;
}

void *assignWithCopy for OngoingCallErrorFlowFactory(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OngoingCallErrorFlowFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OngoingCallErrorFlowFactory()
{
  return &type metadata for OngoingCallErrorFlowFactory;
}

uint64_t OUTLINED_FUNCTION_4_72()
{
  return swift_getObjectType();
}

const char *PhoneSnippetDataModels.bundleName.unsafeMutableAddressor()
{
  return "PhoneUIPlugin";
}

uint64_t static PhoneSnippetDataModels.bundleName.getter()
{
  return 0x504955656E6F6850;
}

uint64_t PhoneSnippetDataModels.snippetHidden(for:idiom:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DeviceIdiom();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  type metadata accessor for PhoneSnippetDataModels();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14 - v13;
  outlined init with copy of PhoneSnippetDataModels(v3, v14 - v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload == 6)
    {
      char v17 = StackedButtonsModel.shouldHideSnippet(on:)(a2, *(void *)v15, *(unsigned __int8 *)(v15 + 8));
      swift_bridgeObjectRelease();
      return v17 & 1;
    }
    if (EnumCaseMultiPayload)
    {
      _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWOhTm_0(v15, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
      char v17 = 0;
      return v17 & 1;
    }
  }
  _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWOhTm_0(v15, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for DeviceIdiom.car(_:), v5);
  char v17 = static DeviceIdiom.== infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  return v17 & 1;
}

uint64_t type metadata accessor for PhoneSnippetDataModels()
{
  uint64_t result = type metadata singleton initialization cache for PhoneSnippetDataModels;
  if (!type metadata singleton initialization cache for PhoneSnippetDataModels) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined init with copy of PhoneSnippetDataModels(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneSnippetDataModels();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PhoneSnippetDataModels.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69666E6F43707061 && a2 == 0xEF6E6F6974616D72;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000004988B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000004988D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000004988F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000000498910 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000000498940 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    BOOL v6 = a1 == 0x4264656B63617473 && a2 == 0xEE00736E6F747475;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000000498970 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      BOOL v7 = a1 == 0x747369486C6C6163 && a2 == 0xEF7473694C79726FLL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000000498990 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 9;
      }
      else
      {
        BOOL v8 = a1 == 0x6F56656C676E6973 && a2 == 0xEF6C69616D656369;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 10;
        }
        else if (a1 == 0xD000000000000017 && a2 == 0x80000000004989B0)
        {
          swift_bridgeObjectRelease();
          return 11;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            return 11;
          }
          else {
            return 12;
          }
        }
      }
    }
  }
}

unint64_t PhoneSnippetDataModels.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0x69666E6F43707061;
  switch(a1)
  {
    case 1:
    case 7:
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0x4264656B63617473;
      break;
    case 8:
      unint64_t result = 0x747369486C6C6163;
      break;
    case 10:
      unint64_t result = 0x6F56656C676E6973;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return SharedNeedsValueContext.NeedsValueCase.hashValue.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.CallHistoryListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.CallHistoryListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneSnippetDataModels.CodingKeys()
{
  return PhoneSnippetDataModels.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneSnippetDataModels.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = PhoneSnippetDataModels.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneSnippetDataModels.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v142[0] = v3;
  v142[1] = v2;
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_3_1();
  uint64_t v141 = v4;
  v139[1] = type metadata accessor for SingleResultCallHistoryModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_22_38(v6, v136[0]);
  v139[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.SingleVoicemailCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v139[0] = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_20_35(v9, v136[0]);
  v137[1] = type metadata accessor for SingleResultVoicemailModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_19_32(v11, v136[0]);
  v137[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.PlayVoicemailListCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v137[0] = v12;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_21_34(v14, v136[0]);
  v136[35] = type metadata accessor for PlayVoicemailModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v16);
  v136[36] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.CallHistoryListCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[0] = v17;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_20_15(v19);
  v136[31] = type metadata accessor for SearchCallHistoryModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v21);
  v136[32] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.YesNoConfirmationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[30] = v22;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v24);
  v136[28] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.StackedButtonsCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[27] = v25;
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v27);
  v136[26] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[24] = v28;
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_3_1();
  uint64_t v31 = OUTLINED_FUNCTION_20_15(v30);
  v136[20] = type metadata accessor for LocalEmergencyCallDisambiguationModel(v31);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v33);
  v136[21] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[19] = v34;
  __chkstk_darwin(v35);
  OUTLINED_FUNCTION_3_1();
  uint64_t v37 = OUTLINED_FUNCTION_20_15(v36);
  v136[15] = type metadata accessor for ForeignEmergencyCallDisambiguationModel(v37);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v38);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v39);
  v136[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.EmergencyCountdownCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[14] = v40;
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_20_15(v42);
  v136[10] = type metadata accessor for EmergencyCountdownModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v43);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v44);
  v136[11] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.ContactConfirmationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[9] = v45;
  __chkstk_darwin(v46);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_20_15(v47);
  v136[6] = type metadata accessor for ContactConfirmationModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v48);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v49);
  v136[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.AppDisambiguationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[4] = v50;
  __chkstk_darwin(v51);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v52);
  v136[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.AppConfirmationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v136[1] = v53;
  __chkstk_darwin(v54);
  OUTLINED_FUNCTION_48_0();
  v142[2] = type metadata accessor for YesNoConfirmationModel();
  OUTLINED_FUNCTION_15();
  uint64_t v56 = __chkstk_darwin(v55);
  uint64_t v58 = (char *)v136 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v60 = (char *)v136 - v59;
  uint64_t v61 = type metadata accessor for PhoneSnippetDataModels();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v62);
  OUTLINED_FUNCTION_4();
  uint64_t v65 = (void *)(v64 - v63);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v143 = v66;
  __chkstk_darwin(v67);
  OUTLINED_FUNCTION_4();
  uint64_t v70 = v69 - v68;
  uint64_t v71 = a1[3];
  uint64_t v72 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v71);
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  uint64_t v144 = v70;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  outlined init with copy of PhoneSnippetDataModels(v149, (uint64_t)v65);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v79 = *v65;
      uint64_t v80 = v65[1];
      uint64_t v81 = v65[2];
      LOBYTE(v146) = 1;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v146 = v79;
      uint64_t v147 = v80;
      uint64_t v148 = v81;
      lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      OUTLINED_FUNCTION_11();
      v85(v82, v83, v84);
      OUTLINED_FUNCTION_11();
      v89(v86, v87, v88);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 2u:
      OUTLINED_FUNCTION_24_30((uint64_t)v65, (void (*)(void))type metadata accessor for ContactConfirmationModel, (uint64_t)v137);
      LOBYTE(v146) = 2;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
      OUTLINED_FUNCTION_16_43();
      OUTLINED_FUNCTION_25_26();
      OUTLINED_FUNCTION_11_52();
      OUTLINED_FUNCTION_11();
      v93(v90, v91, v92);
      unint64_t v94 = type metadata accessor for ContactConfirmationModel;
      goto LABEL_15;
    case 3u:
      OUTLINED_FUNCTION_24_30((uint64_t)v65, (void (*)(void))type metadata accessor for EmergencyCountdownModel, (uint64_t)v139);
      LOBYTE(v146) = 3;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownModel);
      OUTLINED_FUNCTION_16_43();
      OUTLINED_FUNCTION_25_26();
      OUTLINED_FUNCTION_11_52();
      OUTLINED_FUNCTION_11();
      v98(v95, v96, v97);
      unint64_t v94 = type metadata accessor for EmergencyCountdownModel;
      goto LABEL_15;
    case 4u:
      OUTLINED_FUNCTION_24_30((uint64_t)v65, (void (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)v142);
      LOBYTE(v146) = 4;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
      OUTLINED_FUNCTION_16_43();
      OUTLINED_FUNCTION_25_26();
      OUTLINED_FUNCTION_11_52();
      OUTLINED_FUNCTION_11();
      v102(v99, v100, v101);
      unint64_t v94 = (uint64_t (*)())type metadata accessor for ForeignEmergencyCallDisambiguationModel;
      goto LABEL_15;
    case 5u:
      OUTLINED_FUNCTION_24_30((uint64_t)v65, (void (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationModel, (uint64_t)&v145);
      LOBYTE(v146) = 5;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for LocalEmergencyCallDisambiguationModel);
      OUTLINED_FUNCTION_16_43();
      OUTLINED_FUNCTION_25_26();
      OUTLINED_FUNCTION_11_52();
      OUTLINED_FUNCTION_11();
      v106(v103, v104, v105);
      unint64_t v94 = (uint64_t (*)())type metadata accessor for LocalEmergencyCallDisambiguationModel;
      goto LABEL_15;
    case 6u:
      uint64_t v107 = *v65;
      char v108 = *((unsigned char *)v65 + 8);
      LOBYTE(v146) = 6;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
      uint64_t v110 = v144;
      uint64_t v109 = v145;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v146 = v107;
      LOBYTE(v147) = v108;
      lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      OUTLINED_FUNCTION_11();
      v114(v111, v112, v113);
      (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v110, v109);
      return swift_bridgeObjectRelease();
    case 7u:
      outlined init with take of SingleResultCallHistoryModel((uint64_t)v65, (uint64_t)v58, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
      LOBYTE(v146) = 7;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      OUTLINED_FUNCTION_11();
      v119(v116, v117, v118);
      uint64_t v77 = type metadata accessor for YesNoConfirmationModel;
      uint64_t v78 = (uint64_t)v58;
      break;
    case 8u:
      OUTLINED_FUNCTION_24_30((uint64_t)v65, (void (*)(void))type metadata accessor for SearchCallHistoryModel, (uint64_t)&v150);
      LOBYTE(v146) = 8;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryModel);
      OUTLINED_FUNCTION_16_43();
      OUTLINED_FUNCTION_25_26();
      OUTLINED_FUNCTION_11_52();
      OUTLINED_FUNCTION_11();
      v123(v120, v121, v122);
      unint64_t v94 = type metadata accessor for SearchCallHistoryModel;
      goto LABEL_15;
    case 9u:
      OUTLINED_FUNCTION_24_30((uint64_t)v65, (void (*)(void))type metadata accessor for PlayVoicemailModel, (uint64_t)&v151);
      LOBYTE(v146) = 9;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (void (*)(uint64_t))type metadata accessor for PlayVoicemailModel);
      OUTLINED_FUNCTION_16_43();
      OUTLINED_FUNCTION_11_52();
      OUTLINED_FUNCTION_11();
      v127(v124, v125, v126);
      unint64_t v94 = type metadata accessor for PlayVoicemailModel;
      goto LABEL_15;
    case 0xAu:
      uint64_t v72 = v138;
      outlined init with take of SingleResultCallHistoryModel((uint64_t)v65, v138, (void (*)(void))type metadata accessor for SingleResultVoicemailModel);
      LOBYTE(v146) = 10;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (void (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel);
      OUTLINED_FUNCTION_16_43();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      OUTLINED_FUNCTION_11();
      v131(v128, v129, v130);
      unint64_t v94 = type metadata accessor for SingleResultVoicemailModel;
      goto LABEL_15;
    case 0xBu:
      uint64_t v72 = v140;
      outlined init with take of SingleResultCallHistoryModel((uint64_t)v65, v140, (void (*)(void))type metadata accessor for SingleResultCallHistoryModel);
      LOBYTE(v146) = 11;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
      OUTLINED_FUNCTION_6_66();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel);
      OUTLINED_FUNCTION_16_43();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      OUTLINED_FUNCTION_11();
      v135(v132, v133, v134);
      unint64_t v94 = type metadata accessor for SingleResultCallHistoryModel;
LABEL_15:
      uint64_t v77 = v94;
      uint64_t v78 = v72;
      break;
    default:
      outlined init with take of SingleResultCallHistoryModel((uint64_t)v65, (uint64_t)v60, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
      LOBYTE(v146) = 0;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
      uint64_t v61 = v144;
      uint64_t v71 = v145;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      OUTLINED_FUNCTION_11();
      v76(v73, v74, v75);
      uint64_t v77 = type metadata accessor for YesNoConfirmationModel;
      uint64_t v78 = (uint64_t)v60;
      break;
  }
  _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWOhTm_0(v78, (void (*)(void))v77);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v61, v71);
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

uint64_t PhoneSnippetDataModels.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v176 = a2;
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v165 = v4;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_22_38(v6, v136);
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.SingleVoicemailCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v163 = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v175 = v9;
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.PlayVoicemailListCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v161 = v10;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_3_1();
  uint64_t v174 = v12;
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.CallHistoryListCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v159 = v13;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_3_1();
  uint64_t v173 = v15;
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.YesNoConfirmationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v157 = v16;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_20_35(v18, v136);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.StackedButtonsCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v155 = v19;
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_19_32(v21, v136);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v153 = v22;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_3_1();
  uint64_t v172 = v24;
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v152 = v25;
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_3_1();
  uint64_t v181 = v27;
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.EmergencyCountdownCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v150 = v28;
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_3_1();
  uint64_t v180 = v30;
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.ContactConfirmationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v147 = v31;
  __chkstk_darwin(v32);
  OUTLINED_FUNCTION_3_1();
  uint64_t v171 = v33;
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.AppDisambiguationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v145 = v34;
  __chkstk_darwin(v35);
  OUTLINED_FUNCTION_3_1();
  uint64_t v170 = v36;
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.AppConfirmationCodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v143 = v37;
  __chkstk_darwin(v38);
  OUTLINED_FUNCTION_21_34(v39, v136);
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v177 = v40;
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_48_0();
  uint64_t v178 = type metadata accessor for PhoneSnippetDataModels();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v42);
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v43);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v44);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v45);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v46);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v47);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v48);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v49);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v136 - v52;
  uint64_t v54 = __chkstk_darwin(v51);
  uint64_t v56 = (char *)&v136 - v55;
  uint64_t v57 = __chkstk_darwin(v54);
  uint64_t v59 = (char *)&v136 - v58;
  uint64_t v60 = __chkstk_darwin(v57);
  uint64_t v62 = (char *)&v136 - v61;
  __chkstk_darwin(v60);
  uint64_t v64 = (char *)&v136 - v63;
  uint64_t v65 = a1[3];
  uint64_t v183 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v65);
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  uint64_t v179 = v2;
  uint64_t v66 = (uint64_t)v186;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v66) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v183);
  }
  uint64_t v138 = v59;
  uint64_t v139 = v62;
  uint64_t v140 = v56;
  uint64_t v141 = v53;
  uint64_t v68 = v178;
  uint64_t v67 = v179;
  uint64_t v186 = v64;
  uint64_t v69 = v182;
  uint64_t v70 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v71 = *(void *)(v70 + 16);
  if (!v71)
  {
LABEL_7:
    uint64_t v86 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v88 = v87;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *uint64_t v88 = v68;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v86 - 8) + 104))(v88, enum case for DecodingError.typeMismatch(_:), v86);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v67, v69);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v183);
  }
  uint64_t v72 = v67;
  uint64_t v137 = 0;
  uint64_t v73 = *(unsigned __int8 *)(v70 + 32);
  specialized ArraySlice.subscript.getter(1, v71, v70, v70 + 32, 0, (2 * v71) | 1);
  uint64_t v75 = v74;
  unint64_t v77 = v76;
  swift_bridgeObjectRelease();
  if (v75 != v77 >> 1)
  {
    uint64_t v67 = v72;
    uint64_t v69 = v182;
    goto LABEL_7;
  }
  uint64_t v78 = v137;
  uint64_t v79 = v73;
  uint64_t v80 = v72;
  switch(v79)
  {
    case 1:
      LOBYTE(v184) = 1;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
      OUTLINED_FUNCTION_3_83();
      lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
      OUTLINED_FUNCTION_27_27();
      uint64_t v89 = OUTLINED_FUNCTION_2_95();
      v90(v89);
      swift_unknownObjectRelease();
      uint64_t v91 = OUTLINED_FUNCTION_13_40();
      v92(v91);
      uint64_t v81 = (uint64_t)v138;
      *uint64_t v138 = v184;
      *(_OWORD *)(v81 + 8) = v185;
      goto LABEL_22;
    case 2:
      LOBYTE(v184) = 2;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for ContactConfirmationModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v93 = OUTLINED_FUNCTION_2_95();
      v94(v93);
      swift_unknownObjectRelease();
      uint64_t v95 = OUTLINED_FUNCTION_4_73();
      v96(v95);
      OUTLINED_FUNCTION_9_60((uint64_t)v168);
      goto LABEL_22;
    case 3:
      LOBYTE(v184) = 3;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for EmergencyCountdownModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_26_28();
      OUTLINED_FUNCTION_11();
      v97();
      swift_unknownObjectRelease();
      uint64_t v98 = OUTLINED_FUNCTION_4_73();
      v99(v98);
      OUTLINED_FUNCTION_9_60((uint64_t)v169);
      goto LABEL_22;
    case 4:
      LOBYTE(v184) = 4;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
      uint64_t v100 = v182;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v78)
      {
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v80, v100);
      }
      else
      {
        uint64_t v81 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
        OUTLINED_FUNCTION_12_42();
        OUTLINED_FUNCTION_26_28();
        OUTLINED_FUNCTION_11();
        v122();
        swift_unknownObjectRelease();
        uint64_t v123 = OUTLINED_FUNCTION_4_73();
        v124(v123);
        OUTLINED_FUNCTION_9_60((uint64_t)&v187);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        uint64_t v134 = v81;
        uint64_t v135 = (uint64_t)v186;
        outlined init with take of SingleResultCallHistoryModel(v134, (uint64_t)v186, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
        outlined init with take of SingleResultCallHistoryModel(v135, v176, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
      }
      break;
    case 5:
      LOBYTE(v184) = 5;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for LocalEmergencyCallDisambiguationModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v101 = OUTLINED_FUNCTION_2_95();
      v102(v101);
      swift_unknownObjectRelease();
      uint64_t v103 = OUTLINED_FUNCTION_4_73();
      v104(v103);
      OUTLINED_FUNCTION_9_60((uint64_t)&v188);
      goto LABEL_22;
    case 6:
      LOBYTE(v184) = 6;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
      OUTLINED_FUNCTION_3_83();
      lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
      OUTLINED_FUNCTION_27_27();
      uint64_t v125 = OUTLINED_FUNCTION_2_95();
      v126(v125);
      swift_unknownObjectRelease();
      uint64_t v127 = OUTLINED_FUNCTION_13_40();
      v128(v127);
      char v129 = v185;
      uint64_t v81 = (uint64_t)v142;
      *unint64_t v142 = v184;
      *(unsigned char *)(v81 + 8) = v129;
      goto LABEL_22;
    case 7:
      LOBYTE(v184) = 7;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for YesNoConfirmationModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v105 = OUTLINED_FUNCTION_2_95();
      v106(v105);
      swift_unknownObjectRelease();
      uint64_t v107 = OUTLINED_FUNCTION_4_73();
      v108(v107);
      OUTLINED_FUNCTION_9_60((uint64_t)&v189);
      goto LABEL_22;
    case 8:
      LOBYTE(v184) = 8;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for SearchCallHistoryModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v109 = OUTLINED_FUNCTION_2_95();
      v110(v109);
      swift_unknownObjectRelease();
      uint64_t v111 = OUTLINED_FUNCTION_4_73();
      v112(v111);
      OUTLINED_FUNCTION_9_60((uint64_t)&v190);
      goto LABEL_22;
    case 9:
      LOBYTE(v184) = 9;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for PlayVoicemailModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (void (*)(uint64_t))type metadata accessor for PlayVoicemailModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v113 = OUTLINED_FUNCTION_2_95();
      v114(v113);
      swift_unknownObjectRelease();
      uint64_t v115 = OUTLINED_FUNCTION_4_73();
      v116(v115);
      OUTLINED_FUNCTION_9_60((uint64_t)&v191);
      goto LABEL_22;
    case 10:
      LOBYTE(v184) = 10;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for SingleResultVoicemailModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (void (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v117 = OUTLINED_FUNCTION_2_95();
      v118(v117);
      swift_unknownObjectRelease();
      uint64_t v119 = OUTLINED_FUNCTION_4_73();
      v120(v119);
      OUTLINED_FUNCTION_9_60((uint64_t)&v192);
      goto LABEL_22;
    case 11:
      LOBYTE(v184) = 11;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for SingleResultCallHistoryModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v130 = OUTLINED_FUNCTION_2_95();
      v131(v130);
      swift_unknownObjectRelease();
      uint64_t v132 = OUTLINED_FUNCTION_4_73();
      v133(v132);
      OUTLINED_FUNCTION_9_60((uint64_t)&v193);
      goto LABEL_22;
    default:
      LOBYTE(v184) = 0;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
      OUTLINED_FUNCTION_3_83();
      uint64_t v81 = type metadata accessor for YesNoConfirmationModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      OUTLINED_FUNCTION_12_42();
      OUTLINED_FUNCTION_7_64();
      uint64_t v82 = OUTLINED_FUNCTION_2_95();
      v83(v82);
      swift_unknownObjectRelease();
      uint64_t v84 = OUTLINED_FUNCTION_4_73();
      v85(v84);
      OUTLINED_FUNCTION_9_60((uint64_t)v167);
      goto LABEL_22;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v183);
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneSnippetDataModels@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PhoneSnippetDataModels.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneSnippetDataModels(void *a1)
{
  return PhoneSnippetDataModels.encode(to:)(a1);
}

uint64_t outlined init with take of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t base witness table accessor for Decodable in PhoneSnippetDataModels()
{
  return lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
}

uint64_t base witness table accessor for Encodable in PhoneSnippetDataModels()
{
  return lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
}

uint64_t lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneSnippetDataModels(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        uint64_t v20 = a2[3];
        a1[2] = a2[2];
        a1[3] = v20;
        uint64_t v236 = (int *)type metadata accessor for ContactConfirmationModel();
        uint64_t v21 = v236[6];
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        v230(v22, v23, v24);
        uint64_t v25 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v26 = v25[5];
        v229 = &v22[v26];
        uint64_t v27 = &v23[v26];
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        v29(v229, v27, v28);
        v230(&v22[v25[6]], &v23[v25[6]], v24);
        v29(&v22[v25[7]], &v23[v25[7]], v28);
        uint64_t v30 = v25[8];
        uint64_t v31 = &v22[v30];
        uint64_t v32 = &v23[v30];
        uint64_t v33 = *((void *)v32 + 1);
        *(void *)uint64_t v31 = *(void *)v32;
        *((void *)v31 + 1) = v33;
        uint64_t v34 = v236[7];
        uint64_t v35 = (uint64_t *)((char *)a1 + v34);
        uint64_t v36 = (uint64_t *)((char *)a2 + v34);
        uint64_t v37 = *(uint64_t *)((char *)a2 + v34 + 8);
        swift_bridgeObjectRetain();
        if (v37)
        {
          *uint64_t v35 = *v36;
          v35[1] = v37;
          uint64_t v38 = v36[3];
          void v35[2] = v36[2];
          v35[3] = v38;
          uint64_t v39 = v36[5];
          v35[4] = v36[4];
          v35[5] = v39;
          uint64_t v40 = v36[7];
          v35[6] = v36[6];
          v35[7] = v40;
          *((unsigned char *)v35 + 64) = *((unsigned char *)v36 + 64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v35, v36, 0x41uLL);
        }
        uint64_t v158 = v236[8];
        uint64_t v159 = (uint64_t *)((char *)a1 + v158);
        uint64_t v160 = (uint64_t *)((char *)a2 + v158);
        uint64_t v161 = v160[1];
        void *v159 = *v160;
        v159[1] = v161;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v42 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v41 - 8) + 16);
        v42(a1, a2, v41);
        uint64_t v43 = (int *)type metadata accessor for EmergencyCountdownModel();
        v42((uint64_t *)((char *)a1 + v43[5]), (uint64_t *)((char *)a2 + v43[5]), v41);
        v42((uint64_t *)((char *)a1 + v43[6]), (uint64_t *)((char *)a2 + v43[6]), v41);
        v42((uint64_t *)((char *)a1 + v43[7]), (uint64_t *)((char *)a2 + v43[7]), v41);
        v42((uint64_t *)((char *)a1 + v43[8]), (uint64_t *)((char *)a2 + v43[8]), v41);
        v42((uint64_t *)((char *)a1 + v43[9]), (uint64_t *)((char *)a2 + v43[9]), v41);
        v42((uint64_t *)((char *)a1 + v43[10]), (uint64_t *)((char *)a2 + v43[10]), v41);
        v42((uint64_t *)((char *)a1 + v43[11]), (uint64_t *)((char *)a2 + v43[11]), v41);
        v42((uint64_t *)((char *)a1 + v43[12]), (uint64_t *)((char *)a2 + v43[12]), v41);
        uint64_t v44 = v43[13];
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        uint64_t v48 = v43[14];
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
        uint64_t v52 = v43[15];
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        uint64_t v56 = v43[16];
        uint64_t v57 = (uint64_t *)((char *)a1 + v56);
        uint64_t v58 = (uint64_t *)((char *)a2 + v56);
        uint64_t v59 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v59;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v60 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v60))
        {
          uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(a1, a2, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          uint64_t v162 = type metadata accessor for UUID();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v162 - 8) + 16))(a1, a2, v162);
          uint64_t v163 = v60[5];
          uint64_t v164 = (char *)a1 + v163;
          uint64_t v165 = (char *)a2 + v163;
          uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16);
          v167(v164, v165, v166);
          uint64_t v168 = v60[6];
          uint64_t v169 = (char *)a1 + v168;
          uint64_t v170 = (char *)a2 + v168;
          uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
          uint64_t v172 = v60[7];
          uint64_t v173 = (char *)a1 + v172;
          uint64_t v174 = (char *)a2 + v172;
          uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
          v167((char *)a1 + v60[8], (char *)a2 + v60[8], v166);
          uint64_t v176 = v60[9];
          uint64_t v177 = (char *)a1 + v176;
          uint64_t v178 = (char *)a2 + v176;
          uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
          uint64_t v180 = v60[10];
          uint64_t v181 = (char *)a1 + v180;
          uint64_t v182 = (char *)a2 + v180;
          uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v181, v182, v183);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v60);
        }
        uint64_t v184 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        uint64_t v185 = v184[5];
        uint64_t v186 = (char *)a1 + v185;
        uint64_t v187 = (char *)a2 + v185;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v185, 1, (uint64_t)v60))
        {
          uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
        }
        else
        {
          uint64_t v199 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v186, v187, v199);
          uint64_t v200 = v60[5];
          uint64_t v201 = &v186[v200];
          uint64_t v202 = &v187[v200];
          uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16);
          v203(v201, v202, v239);
          uint64_t v204 = v60[6];
          v205 = &v186[v204];
          uint64_t v206 = &v187[v204];
          uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 16))(v205, v206, v207);
          uint64_t v208 = v60[7];
          uint64_t v209 = &v186[v208];
          uint64_t v210 = &v187[v208];
          uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16))(v209, v210, v211);
          v203(&v186[v60[8]], &v187[v60[8]], v239);
          uint64_t v212 = v60[9];
          unint64_t v213 = &v186[v212];
          uint64_t v214 = &v187[v212];
          uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v213, v214, v215);
          uint64_t v216 = v60[10];
          uint64_t v217 = &v186[v216];
          uint64_t v218 = &v187[v216];
          uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v217, v218, v219);
          __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, (uint64_t)v60);
        }
        uint64_t v220 = v184[6];
        v221 = (uint64_t *)((char *)a1 + v220);
        uint64_t v222 = (uint64_t *)((char *)a2 + v220);
        uint64_t v223 = v222[1];
        void *v221 = *v222;
        v221[1] = v223;
        uint64_t v224 = v184[7];
        uint64_t v225 = (uint64_t *)((char *)a1 + v224);
        uint64_t v226 = (uint64_t *)((char *)a2 + v224);
        uint64_t v227 = v226[1];
        *uint64_t v225 = *v226;
        v225[1] = v227;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v62 = a2[1];
        *a1 = *a2;
        a1[1] = v62;
        a1[2] = a2[2];
        uint64_t v63 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
        uint64_t v64 = v63[6];
        uint64_t v65 = (char *)a1 + v64;
        uint64_t v66 = (char *)a2 + v64;
        uint64_t v67 = type metadata accessor for UUID();
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v68(v65, v66, v67);
        uint64_t v69 = v63[7];
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
        *((unsigned char *)a1 + v63[8]) = *((unsigned char *)a2 + v63[8]);
        uint64_t v73 = v63[9];
        uint64_t v74 = (uint64_t *)((char *)a1 + v73);
        uint64_t v75 = (uint64_t *)((char *)a2 + v73);
        uint64_t v76 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v76;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        swift_bridgeObjectRetain();
        break;
      case 7u:
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v237 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v77 - 8) + 16);
        v237(a1, a2, v77);
        uint64_t v78 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v79 = v78[5];
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
        v83(v80, v81, v82);
        v237((uint64_t *)((char *)a1 + v78[6]), (uint64_t *)((char *)a2 + v78[6]), v77);
        v83((char *)a1 + v78[7], (char *)a2 + v78[7], v82);
        uint64_t v84 = v78[8];
        uint64_t v85 = (uint64_t *)((char *)a1 + v84);
        uint64_t v86 = (uint64_t *)((char *)a2 + v84);
        uint64_t v87 = v86[1];
        *uint64_t v85 = *v86;
        v85[1] = v87;
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v88 = a2[1];
        *a1 = *a2;
        a1[1] = v88;
        uint64_t v89 = (int *)type metadata accessor for SearchCallHistoryModel();
        uint64_t v90 = v89[5];
        uint64_t v91 = (char *)a1 + v90;
        uint64_t v92 = (char *)a2 + v90;
        swift_bridgeObjectRetain();
        uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        unint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
        v94(v91, v92, v93);
        uint64_t v95 = v89[6];
        uint64_t v96 = (char *)a1 + v95;
        uint64_t v97 = (char *)a2 + v95;
        uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
        v94((char *)a1 + v89[7], (char *)a2 + v89[7], v93);
        v94((char *)a1 + v89[8], (char *)a2 + v89[8], v93);
        uint64_t v99 = v89[9];
        uint64_t v100 = (char *)a1 + v99;
        uint64_t v101 = (char *)a2 + v99;
        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
        v103(v100, v101, v102);
        v103((char *)a1 + v89[10], (char *)a2 + v89[10], v102);
        uint64_t v104 = v89[11];
        uint64_t v105 = (char *)a1 + v104;
        uint64_t v106 = (char *)a2 + v104;
        uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
        break;
      case 9u:
        uint64_t v108 = a2[1];
        *a1 = *a2;
        a1[1] = v108;
        uint64_t v109 = (int *)type metadata accessor for PlayVoicemailModel();
        uint64_t v110 = v109[5];
        uint64_t v111 = (char *)a1 + v110;
        uint64_t v112 = (char *)a2 + v110;
        swift_bridgeObjectRetain();
        uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
        uint64_t v114 = v109[6];
        uint64_t v115 = (char *)a1 + v114;
        uint64_t v116 = (char *)a2 + v114;
        uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
        v118(v115, v116, v117);
        v118((char *)a1 + v109[7], (char *)a2 + v109[7], v117);
        uint64_t v119 = v109[8];
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (char *)a2 + v119;
        uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
        break;
      case 0xAu:
        uint64_t v123 = a2[1];
        *a1 = *a2;
        a1[1] = v123;
        uint64_t v124 = a2[3];
        a1[2] = a2[2];
        a1[3] = v124;
        uint64_t v125 = a2[5];
        a1[4] = a2[4];
        a1[5] = v125;
        uint64_t v126 = a2[7];
        a1[6] = a2[6];
        a1[7] = v126;
        uint64_t v127 = a2[9];
        a1[8] = a2[8];
        a1[9] = v127;
        uint64_t v128 = a2[11];
        a1[10] = a2[10];
        a1[11] = v128;
        uint64_t v129 = a2[13];
        a1[12] = a2[12];
        a1[13] = v129;
        uint64_t v130 = a2[15];
        a1[14] = a2[14];
        a1[15] = v130;
        uint64_t v131 = type metadata accessor for SingleResultVoicemailModel();
        uint64_t v132 = *(int *)(v131 + 52);
        uint64_t v232 = (char *)a1 + v132;
        uint64_t v238 = v131;
        v231 = (char *)a2 + v132;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
        v134(v232, v231, v133);
        v134((char *)a1 + *(int *)(v238 + 56), (char *)a2 + *(int *)(v238 + 56), v133);
        uint64_t v135 = *(int *)(v238 + 60);
        uint64_t v136 = (char *)a1 + v135;
        uint64_t v137 = (char *)a2 + v135;
        uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v233 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
        v233(v136, v137, v138);
        uint64_t v139 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v140 = v139[5];
        uint64_t v141 = &v136[v140];
        unint64_t v142 = &v137[v140];
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16);
        v144(v141, v142, v143);
        v233(&v136[v139[6]], &v137[v139[6]], v138);
        v144(&v136[v139[7]], &v137[v139[7]], v143);
        uint64_t v145 = v139[8];
        uint64_t v146 = &v136[v145];
        uint64_t v147 = &v137[v145];
        uint64_t v148 = *((void *)v147 + 1);
        *(void *)uint64_t v146 = *(void *)v147;
        *((void *)v146 + 1) = v148;
        swift_bridgeObjectRetain();
        break;
      case 0xBu:
        uint64_t v149 = a2[1];
        *a1 = *a2;
        a1[1] = v149;
        uint64_t v150 = a2[3];
        a1[2] = a2[2];
        a1[3] = v150;
        uint64_t v151 = a2[5];
        a1[4] = a2[4];
        a1[5] = v151;
        uint64_t v152 = a2[7];
        a1[6] = a2[6];
        a1[7] = v152;
        a1[8] = a2[8];
        uint64_t v153 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
        uint64_t v154 = (char *)a1 + v153;
        uint64_t v155 = (char *)a2 + v153;
        uint64_t v156 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v155, 1, (uint64_t)v156))
        {
          uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
          memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          unint64_t v234 = *(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16);
          v234(v154, v155, v189);
          uint64_t v190 = v156[5];
          uint64_t v191 = &v154[v190];
          uint64_t v192 = &v155[v190];
          uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
          uint64_t v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16);
          v194(v191, v192, v193);
          v234(&v154[v156[6]], &v155[v156[6]], v189);
          v194(&v154[v156[7]], &v155[v156[7]], v193);
          uint64_t v195 = v156[8];
          uint64_t v196 = &v154[v195];
          char v197 = &v155[v195];
          uint64_t v198 = *((void *)v197 + 1);
          *(void *)uint64_t v196 = *(void *)v197;
          *((void *)v196 + 1) = v198;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v154, 0, 1, (uint64_t)v156);
        }
        break;
      default:
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v235 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
        v235(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        v12(v9, v10, v11);
        v235((uint64_t *)((char *)a1 + v7[6]), (uint64_t *)((char *)a2 + v7[6]), v6);
        v12((char *)a1 + v7[7], (char *)a2 + v7[7], v11);
        uint64_t v13 = v7[8];
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        uint64_t v15 = (uint64_t *)((char *)a2 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PhoneSnippetDataModels(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 7:
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      int v5 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v6 = a1 + v5[5];
      uint64_t v7 = &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>;
      goto LABEL_18;
    case 1:
      goto LABEL_10;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v87 = type metadata accessor for ContactConfirmationModel();
      uint64_t v8 = a1 + *(int *)(v87 + 24);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v8, v9);
      uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v12 = v8 + v11[5];
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
      v14(v12, v13);
      v10(v8 + v11[6], v9);
      v14(v8 + v11[7], v13);
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + *(int *)(v87 + 28) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_21;
    case 3:
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      v16(a1, v15);
      uint64_t v17 = (int *)type metadata accessor for EmergencyCountdownModel();
      v16(a1 + v17[5], v15);
      v16(a1 + v17[6], v15);
      v16(a1 + v17[7], v15);
      v16(a1 + v17[8], v15);
      v16(a1 + v17[9], v15);
      v16(a1 + v17[10], v15);
      v16(a1 + v17[11], v15);
      v16(a1 + v17[12], v15);
      uint64_t v18 = a1 + v17[13];
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      uint64_t v20 = a1 + v17[14];
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      uint64_t v22 = a1 + v17[15];
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      goto LABEL_21;
    case 4:
      uint64_t v24 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, (uint64_t)v24))
      {
        uint64_t v25 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
        uint64_t v26 = a1 + v24[5];
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
        v28(v26, v27);
        uint64_t v29 = a1 + v24[6];
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
        uint64_t v31 = a1 + v24[7];
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
        v28(a1 + v24[8], v27);
        uint64_t v33 = a1 + v24[9];
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
        uint64_t v35 = a1 + v24[10];
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
      }
      uint64_t v37 = a1 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
      if (!__swift_getEnumTagSinglePayload(v37, 1, (uint64_t)v24))
      {
        uint64_t v38 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
        uint64_t v39 = v37 + v24[5];
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8);
        v41(v39, v40);
        uint64_t v42 = v37 + v24[6];
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
        uint64_t v44 = v37 + v24[7];
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
        v41(v37 + v24[8], v40);
        uint64_t v46 = v37 + v24[9];
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
        uint64_t v48 = v37 + v24[10];
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
      }
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v51 = a1 + *(int *)(v50 + 24);
      uint64_t v52 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
      uint64_t v53 = a1 + *(int *)(v50 + 28);
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
      goto LABEL_21;
    case 6:
      goto LABEL_21;
    case 8:
      swift_bridgeObjectRelease();
      uint64_t v55 = (int *)type metadata accessor for SearchCallHistoryModel();
      uint64_t v56 = a1 + v55[5];
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v58 = *(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8);
      v58(v56, v57);
      uint64_t v59 = a1 + v55[6];
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
      v58(a1 + v55[7], v57);
      v58(a1 + v55[8], v57);
      uint64_t v61 = a1 + v55[9];
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      uint64_t v63 = *(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8);
      v63(v61, v62);
      v63(a1 + v55[10], v62);
      uint64_t v64 = v55[11];
      goto LABEL_14;
    case 9:
      swift_bridgeObjectRelease();
      uint64_t v65 = (int *)type metadata accessor for PlayVoicemailModel();
      uint64_t v66 = a1 + v65[5];
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v66, v67);
      uint64_t v68 = a1 + v65[6];
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8);
      v70(v68, v69);
      v70(a1 + v65[7], v69);
      uint64_t v64 = v65[8];
LABEL_14:
      uint64_t v71 = a1 + v64;
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8);
      return v73(v71, v72);
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v74 = (int *)type metadata accessor for SingleResultVoicemailModel();
      uint64_t v75 = a1 + v74[13];
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v77 = *(void (**)(uint64_t, uint64_t))(*(void *)(v76 - 8) + 8);
      v77(v75, v76);
      v77(a1 + v74[14], v76);
      a1 += v74[15];
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      int v5 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v6 = a1 + v5[5];
      uint64_t v7 = &demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>;
LABEL_18:
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(v7);
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8);
      v79(v6, v78);
      v4(a1 + v5[6], v3);
      v79(a1 + v5[7], v78);
      goto LABEL_21;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v80 = a1 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      uint64_t v81 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t result = __swift_getEnumTagSinglePayload(v80, 1, (uint64_t)v81);
      if (result) {
        return result;
      }
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v83 = *(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8);
      v83(v80, v82);
      uint64_t v84 = v80 + v81[5];
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v86 = *(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8);
      v86(v84, v85);
      v83(v80 + v81[6], v82);
      v86(v80 + v81[7], v85);
LABEL_21:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

void *initializeWithCopy for PhoneSnippetDataModels(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      uint64_t v17 = a2[3];
      a1[2] = a2[2];
      a1[3] = v17;
      uint64_t v233 = (int *)type metadata accessor for ContactConfirmationModel();
      uint64_t v18 = v233[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v227(v19, v20, v21);
      uint64_t v22 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v23 = v22[5];
      uint64_t v226 = &v19[v23];
      uint64_t v24 = &v20[v23];
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      v26(v226, v24, v25);
      v227(&v19[v22[6]], &v20[v22[6]], v21);
      v26(&v19[v22[7]], &v20[v22[7]], v25);
      uint64_t v27 = v22[8];
      uint64_t v28 = &v19[v27];
      uint64_t v29 = &v20[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = v233[7];
      uint64_t v32 = (void *)((char *)a1 + v31);
      uint64_t v33 = (void *)((char *)a2 + v31);
      uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
      swift_bridgeObjectRetain();
      if (v34)
      {
        void *v32 = *v33;
        v32[1] = v34;
        uint64_t v35 = v33[3];
        v32[2] = v33[2];
        v32[3] = v35;
        uint64_t v36 = v33[5];
        v32[4] = v33[4];
        uint64_t v32[5] = v36;
        uint64_t v37 = v33[7];
        v32[6] = v33[6];
        v32[7] = v37;
        *((unsigned char *)v32 + 64) = *((unsigned char *)v33 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v32, v33, 0x41uLL);
      }
      uint64_t v155 = v233[8];
      uint64_t v156 = (void *)((char *)a1 + v155);
      uint64_t v157 = (void *)((char *)a2 + v155);
      uint64_t v158 = v157[1];
      *uint64_t v156 = *v157;
      v156[1] = v158;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v39 = *(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16);
      v39(a1, a2, v38);
      uint64_t v40 = (int *)type metadata accessor for EmergencyCountdownModel();
      v39((void *)((char *)a1 + v40[5]), (void *)((char *)a2 + v40[5]), v38);
      v39((void *)((char *)a1 + v40[6]), (void *)((char *)a2 + v40[6]), v38);
      v39((void *)((char *)a1 + v40[7]), (void *)((char *)a2 + v40[7]), v38);
      v39((void *)((char *)a1 + v40[8]), (void *)((char *)a2 + v40[8]), v38);
      v39((void *)((char *)a1 + v40[9]), (void *)((char *)a2 + v40[9]), v38);
      v39((void *)((char *)a1 + v40[10]), (void *)((char *)a2 + v40[10]), v38);
      v39((void *)((char *)a1 + v40[11]), (void *)((char *)a2 + v40[11]), v38);
      v39((void *)((char *)a1 + v40[12]), (void *)((char *)a2 + v40[12]), v38);
      uint64_t v41 = v40[13];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      uint64_t v45 = v40[14];
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      uint64_t v49 = v40[15];
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      uint64_t v53 = v40[16];
      uint64_t v54 = (void *)((char *)a1 + v53);
      uint64_t v55 = (void *)((char *)a2 + v53);
      uint64_t v56 = v55[1];
      *uint64_t v54 = *v55;
      v54[1] = v56;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v57 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v57))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(a1, a2, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        uint64_t v159 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v159 - 8) + 16))(a1, a2, v159);
        uint64_t v160 = v57[5];
        uint64_t v161 = (char *)a1 + v160;
        uint64_t v162 = (char *)a2 + v160;
        uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
        v164(v161, v162, v163);
        uint64_t v165 = v57[6];
        uint64_t v166 = (char *)a1 + v165;
        uint64_t v167 = (char *)a2 + v165;
        uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
        uint64_t v169 = v57[7];
        uint64_t v170 = (char *)a1 + v169;
        uint64_t v171 = (char *)a2 + v169;
        uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
        v164((char *)a1 + v57[8], (char *)a2 + v57[8], v163);
        uint64_t v173 = v57[9];
        uint64_t v174 = (char *)a1 + v173;
        uint64_t v175 = (char *)a2 + v173;
        uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
        uint64_t v177 = v57[10];
        uint64_t v178 = (char *)a1 + v177;
        uint64_t v179 = (char *)a2 + v177;
        uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v178, v179, v180);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v57);
      }
      uint64_t v181 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      uint64_t v182 = v181[5];
      uint64_t v183 = (char *)a1 + v182;
      uint64_t v184 = (char *)a2 + v182;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v182, 1, (uint64_t)v57))
      {
        uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(v183, v184, *(void *)(*(void *)(v185 - 8) + 64));
      }
      else
      {
        uint64_t v196 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v183, v184, v196);
        uint64_t v197 = v57[5];
        uint64_t v198 = &v183[v197];
        uint64_t v199 = &v184[v197];
        uint64_t v236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16);
        v200(v198, v199, v236);
        uint64_t v201 = v57[6];
        uint64_t v202 = &v183[v201];
        uint64_t v203 = &v184[v201];
        uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v202, v203, v204);
        uint64_t v205 = v57[7];
        uint64_t v206 = &v183[v205];
        uint64_t v207 = &v184[v205];
        uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 16))(v206, v207, v208);
        v200(&v183[v57[8]], &v184[v57[8]], v236);
        uint64_t v209 = v57[9];
        uint64_t v210 = &v183[v209];
        uint64_t v211 = &v184[v209];
        uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16))(v210, v211, v212);
        uint64_t v213 = v57[10];
        uint64_t v214 = &v183[v213];
        uint64_t v215 = &v184[v213];
        uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v214, v215, v216);
        __swift_storeEnumTagSinglePayload((uint64_t)v183, 0, 1, (uint64_t)v57);
      }
      uint64_t v217 = v181[6];
      uint64_t v218 = (void *)((char *)a1 + v217);
      uint64_t v219 = (void *)((char *)a2 + v217);
      uint64_t v220 = v219[1];
      *uint64_t v218 = *v219;
      v218[1] = v220;
      uint64_t v221 = v181[7];
      uint64_t v222 = (void *)((char *)a1 + v221);
      uint64_t v223 = (void *)((char *)a2 + v221);
      uint64_t v224 = v223[1];
      *uint64_t v222 = *v223;
      v222[1] = v224;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v59 = a2[1];
      *a1 = *a2;
      a1[1] = v59;
      a1[2] = a2[2];
      uint64_t v60 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v61 = v60[6];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      uint64_t v64 = type metadata accessor for UUID();
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v65(v62, v63, v64);
      uint64_t v66 = v60[7];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      *((unsigned char *)a1 + v60[8]) = *((unsigned char *)a2 + v60[8]);
      uint64_t v70 = v60[9];
      uint64_t v71 = (void *)((char *)a1 + v70);
      uint64_t v72 = (void *)((char *)a2 + v70);
      uint64_t v73 = v72[1];
      void *v71 = *v72;
      v71[1] = v73;
      swift_bridgeObjectRetain();
      break;
    case 6u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      swift_bridgeObjectRetain();
      break;
    case 7u:
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      unint64_t v234 = *(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16);
      v234(a1, a2, v74);
      uint64_t v75 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v76 = v75[5];
      uint64_t v77 = (char *)a1 + v76;
      uint64_t v78 = (char *)a2 + v76;
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
      v80(v77, v78, v79);
      v234((void *)((char *)a1 + v75[6]), (void *)((char *)a2 + v75[6]), v74);
      v80((char *)a1 + v75[7], (char *)a2 + v75[7], v79);
      uint64_t v81 = v75[8];
      uint64_t v82 = (void *)((char *)a1 + v81);
      uint64_t v83 = (void *)((char *)a2 + v81);
      uint64_t v84 = v83[1];
      *uint64_t v82 = *v83;
      v82[1] = v84;
      swift_bridgeObjectRetain();
      break;
    case 8u:
      uint64_t v85 = a2[1];
      *a1 = *a2;
      a1[1] = v85;
      uint64_t v86 = (int *)type metadata accessor for SearchCallHistoryModel();
      uint64_t v87 = v86[5];
      uint64_t v88 = (char *)a1 + v87;
      uint64_t v89 = (char *)a2 + v87;
      swift_bridgeObjectRetain();
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
      v91(v88, v89, v90);
      uint64_t v92 = v86[6];
      uint64_t v93 = (char *)a1 + v92;
      unint64_t v94 = (char *)a2 + v92;
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
      v91((char *)a1 + v86[7], (char *)a2 + v86[7], v90);
      v91((char *)a1 + v86[8], (char *)a2 + v86[8], v90);
      uint64_t v96 = v86[9];
      uint64_t v97 = (char *)a1 + v96;
      uint64_t v98 = (char *)a2 + v96;
      uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
      v100(v97, v98, v99);
      v100((char *)a1 + v86[10], (char *)a2 + v86[10], v99);
      uint64_t v101 = v86[11];
      uint64_t v102 = (char *)a1 + v101;
      uint64_t v103 = (char *)a2 + v101;
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
      break;
    case 9u:
      uint64_t v105 = a2[1];
      *a1 = *a2;
      a1[1] = v105;
      uint64_t v106 = (int *)type metadata accessor for PlayVoicemailModel();
      uint64_t v107 = v106[5];
      uint64_t v108 = (char *)a1 + v107;
      uint64_t v109 = (char *)a2 + v107;
      swift_bridgeObjectRetain();
      uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
      uint64_t v111 = v106[6];
      uint64_t v112 = (char *)a1 + v111;
      uint64_t v113 = (char *)a2 + v111;
      uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
      v115(v112, v113, v114);
      v115((char *)a1 + v106[7], (char *)a2 + v106[7], v114);
      uint64_t v116 = v106[8];
      uint64_t v117 = (char *)a1 + v116;
      uint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
      break;
    case 0xAu:
      uint64_t v120 = a2[1];
      *a1 = *a2;
      a1[1] = v120;
      uint64_t v121 = a2[3];
      a1[2] = a2[2];
      a1[3] = v121;
      uint64_t v122 = a2[5];
      a1[4] = a2[4];
      a1[5] = v122;
      uint64_t v123 = a2[7];
      a1[6] = a2[6];
      a1[7] = v123;
      uint64_t v124 = a2[9];
      a1[8] = a2[8];
      a1[9] = v124;
      uint64_t v125 = a2[11];
      a1[10] = a2[10];
      a1[11] = v125;
      uint64_t v126 = a2[13];
      a1[12] = a2[12];
      a1[13] = v126;
      uint64_t v127 = a2[15];
      a1[14] = a2[14];
      a1[15] = v127;
      uint64_t v128 = type metadata accessor for SingleResultVoicemailModel();
      uint64_t v129 = *(int *)(v128 + 52);
      v229 = (char *)a1 + v129;
      uint64_t v235 = v128;
      v228 = (char *)a2 + v129;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16);
      v131(v229, v228, v130);
      v131((char *)a1 + *(int *)(v235 + 56), (char *)a2 + *(int *)(v235 + 56), v130);
      uint64_t v132 = *(int *)(v235 + 60);
      uint64_t v133 = (char *)a1 + v132;
      uint64_t v134 = (char *)a2 + v132;
      uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
      v230(v133, v134, v135);
      uint64_t v136 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v137 = v136[5];
      uint64_t v138 = &v133[v137];
      uint64_t v139 = &v134[v137];
      uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
      v141(v138, v139, v140);
      v230(&v133[v136[6]], &v134[v136[6]], v135);
      v141(&v133[v136[7]], &v134[v136[7]], v140);
      uint64_t v142 = v136[8];
      uint64_t v143 = &v133[v142];
      uint64_t v144 = &v134[v142];
      uint64_t v145 = *((void *)v144 + 1);
      *(void *)uint64_t v143 = *(void *)v144;
      *((void *)v143 + 1) = v145;
      swift_bridgeObjectRetain();
      break;
    case 0xBu:
      uint64_t v146 = a2[1];
      *a1 = *a2;
      a1[1] = v146;
      uint64_t v147 = a2[3];
      a1[2] = a2[2];
      a1[3] = v147;
      uint64_t v148 = a2[5];
      a1[4] = a2[4];
      a1[5] = v148;
      uint64_t v149 = a2[7];
      a1[6] = a2[6];
      a1[7] = v149;
      a1[8] = a2[8];
      uint64_t v150 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      uint64_t v151 = (char *)a1 + v150;
      uint64_t v152 = (char *)a2 + v150;
      uint64_t v153 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v152, 1, (uint64_t)v153))
      {
        uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
        memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
      }
      else
      {
        uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v231 = *(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16);
        v231(v151, v152, v186);
        uint64_t v187 = v153[5];
        uint64_t v188 = &v151[v187];
        uint64_t v189 = &v152[v187];
        uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v191 = *(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16);
        v191(v188, v189, v190);
        v231(&v151[v153[6]], &v152[v153[6]], v186);
        v191(&v151[v153[7]], &v152[v153[7]], v190);
        uint64_t v192 = v153[8];
        uint64_t v193 = &v151[v192];
        uint64_t v194 = &v152[v192];
        uint64_t v195 = *((void *)v194 + 1);
        *(void *)uint64_t v193 = *(void *)v194;
        *((void *)v193 + 1) = v195;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, (uint64_t)v153);
      }
      break;
    default:
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v232 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
      v232(a1, a2, v4);
      int v5 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v6 = v5[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      v232((void *)((char *)a1 + v5[6]), (void *)((char *)a2 + v5[6]), v4);
      v10((char *)a1 + v5[7], (char *)a2 + v5[7], v9);
      uint64_t v11 = v5[8];
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PhoneSnippetDataModels(void *a1, void *a2)
{
  if (a1 != a2)
  {
    _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWOhTm_0((uint64_t)a1, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v193 = (int *)type metadata accessor for ContactConfirmationModel();
        uint64_t v14 = v193[6];
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v187 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        v187(v15, v16, v17);
        uint64_t v18 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v19 = v18[5];
        uint64_t v186 = &v15[v19];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        v22(v186, v20, v21);
        v187(&v15[v18[6]], &v16[v18[6]], v17);
        v22(&v15[v18[7]], &v16[v18[7]], v21);
        uint64_t v23 = v18[8];
        uint64_t v24 = &v15[v23];
        uint64_t v25 = &v16[v23];
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v26 = v193[7];
        uint64_t v27 = (void *)((char *)a1 + v26);
        uint64_t v28 = (void *)((char *)a2 + v26);
        uint64_t v29 = *(void *)((char *)a2 + v26 + 8);
        swift_bridgeObjectRetain();
        if (v29)
        {
          *uint64_t v27 = *v28;
          v27[1] = v28[1];
          v27[2] = v28[2];
          void v27[3] = v28[3];
          void v27[4] = v28[4];
          void v27[5] = v28[5];
          v27[6] = v28[6];
          v27[7] = v28[7];
          *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v27, v28, 0x41uLL);
        }
        uint64_t v118 = v193[8];
        uint64_t v119 = (void *)((char *)a1 + v118);
        uint64_t v120 = (void *)((char *)a2 + v118);
        void *v119 = *v120;
        v119[1] = v120[1];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v31 = *(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16);
        v31(a1, a2, v30);
        uint64_t v32 = (int *)type metadata accessor for EmergencyCountdownModel();
        v31((void *)((char *)a1 + v32[5]), (void *)((char *)a2 + v32[5]), v30);
        v31((void *)((char *)a1 + v32[6]), (void *)((char *)a2 + v32[6]), v30);
        v31((void *)((char *)a1 + v32[7]), (void *)((char *)a2 + v32[7]), v30);
        v31((void *)((char *)a1 + v32[8]), (void *)((char *)a2 + v32[8]), v30);
        v31((void *)((char *)a1 + v32[9]), (void *)((char *)a2 + v32[9]), v30);
        v31((void *)((char *)a1 + v32[10]), (void *)((char *)a2 + v32[10]), v30);
        v31((void *)((char *)a1 + v32[11]), (void *)((char *)a2 + v32[11]), v30);
        v31((void *)((char *)a1 + v32[12]), (void *)((char *)a2 + v32[12]), v30);
        uint64_t v33 = v32[13];
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        uint64_t v37 = v32[14];
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        uint64_t v41 = v32[15];
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        uint64_t v45 = v32[16];
        uint64_t v46 = (void *)((char *)a1 + v45);
        uint64_t v47 = (void *)((char *)a2 + v45);
        *uint64_t v46 = *v47;
        v46[1] = v47[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v48 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v48))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          uint64_t v121 = type metadata accessor for UUID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 16))(a1, a2, v121);
          uint64_t v122 = v48[5];
          uint64_t v123 = (char *)a1 + v122;
          uint64_t v124 = (char *)a2 + v122;
          uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
          v126(v123, v124, v125);
          uint64_t v127 = v48[6];
          uint64_t v128 = (char *)a1 + v127;
          uint64_t v129 = (char *)a2 + v127;
          uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
          uint64_t v131 = v48[7];
          uint64_t v132 = (char *)a1 + v131;
          uint64_t v133 = (char *)a2 + v131;
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
          v126((char *)a1 + v48[8], (char *)a2 + v48[8], v125);
          uint64_t v135 = v48[9];
          uint64_t v136 = (char *)a1 + v135;
          uint64_t v137 = (char *)a2 + v135;
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
          uint64_t v139 = v48[10];
          uint64_t v140 = (char *)a1 + v139;
          uint64_t v141 = (char *)a2 + v139;
          uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v48);
        }
        uint64_t v143 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        uint64_t v144 = v143[5];
        uint64_t v145 = (char *)a1 + v144;
        uint64_t v146 = (char *)a2 + v144;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v144, 1, (uint64_t)v48))
        {
          uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
        }
        else
        {
          uint64_t v157 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v145, v146, v157);
          uint64_t v158 = v48[5];
          uint64_t v159 = &v145[v158];
          uint64_t v160 = &v146[v158];
          uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16);
          v162(v159, v160, v161);
          uint64_t v163 = v48[6];
          uint64_t v164 = &v145[v163];
          uint64_t v165 = &v146[v163];
          uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
          uint64_t v167 = v48[7];
          uint64_t v168 = &v145[v167];
          uint64_t v169 = &v146[v167];
          uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v168, v169, v170);
          v162(&v145[v48[8]], &v146[v48[8]], v161);
          uint64_t v171 = v48[9];
          uint64_t v172 = &v145[v171];
          uint64_t v173 = &v146[v171];
          uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
          uint64_t v175 = v48[10];
          uint64_t v176 = &v145[v175];
          uint64_t v177 = &v146[v175];
          uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
          __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, (uint64_t)v48);
        }
        uint64_t v179 = v143[6];
        uint64_t v180 = (void *)((char *)a1 + v179);
        uint64_t v181 = (void *)((char *)a2 + v179);
        *uint64_t v180 = *v181;
        v180[1] = v181[1];
        uint64_t v182 = v143[7];
        uint64_t v183 = (void *)((char *)a1 + v182);
        uint64_t v184 = (void *)((char *)a2 + v182);
        void *v183 = *v184;
        v183[1] = v184[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v50 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
        uint64_t v51 = v50[6];
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        uint64_t v54 = type metadata accessor for UUID();
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v52, v53, v54);
        uint64_t v56 = v50[7];
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
        *((unsigned char *)a1 + v50[8]) = *((unsigned char *)a2 + v50[8]);
        uint64_t v60 = v50[9];
        uint64_t v61 = (void *)((char *)a1 + v60);
        uint64_t v62 = (void *)((char *)a2 + v60);
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        swift_bridgeObjectRetain();
        break;
      case 6u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        swift_bridgeObjectRetain();
        break;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v63 = (int *)type metadata accessor for SearchCallHistoryModel();
        uint64_t v64 = v63[5];
        uint64_t v65 = (char *)a1 + v64;
        uint64_t v66 = (char *)a2 + v64;
        swift_bridgeObjectRetain();
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
        v68(v65, v66, v67);
        uint64_t v69 = v63[6];
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
        v68((char *)a1 + v63[7], (char *)a2 + v63[7], v67);
        v68((char *)a1 + v63[8], (char *)a2 + v63[8], v67);
        uint64_t v73 = v63[9];
        uint64_t v74 = (char *)a1 + v73;
        uint64_t v75 = (char *)a2 + v73;
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
        v77(v74, v75, v76);
        v77((char *)a1 + v63[10], (char *)a2 + v63[10], v76);
        uint64_t v78 = v63[11];
        uint64_t v79 = (char *)a1 + v78;
        uint64_t v80 = (char *)a2 + v78;
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
        break;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v82 = (int *)type metadata accessor for PlayVoicemailModel();
        uint64_t v83 = v82[5];
        uint64_t v84 = (char *)a1 + v83;
        uint64_t v85 = (char *)a2 + v83;
        swift_bridgeObjectRetain();
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
        uint64_t v87 = v82[6];
        uint64_t v88 = (char *)a1 + v87;
        uint64_t v89 = (char *)a2 + v87;
        uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
        v91(v88, v89, v90);
        v91((char *)a1 + v82[7], (char *)a2 + v82[7], v90);
        uint64_t v92 = v82[8];
        uint64_t v93 = (char *)a1 + v92;
        unint64_t v94 = (char *)a2 + v92;
        uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
        break;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        uint64_t v96 = type metadata accessor for SingleResultVoicemailModel();
        uint64_t v97 = *(int *)(v96 + 52);
        uint64_t v189 = (char *)a1 + v97;
        uint64_t v194 = v96;
        uint64_t v188 = (char *)a2 + v97;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
        v99(v189, v188, v98);
        v99((char *)a1 + *(int *)(v194 + 56), (char *)a2 + *(int *)(v194 + 56), v98);
        uint64_t v100 = *(int *)(v194 + 60);
        uint64_t v101 = (char *)a1 + v100;
        uint64_t v102 = (char *)a2 + v100;
        uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v190 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
        v190(v101, v102, v103);
        uint64_t v104 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v105 = v104[5];
        uint64_t v106 = &v101[v105];
        uint64_t v107 = &v102[v105];
        uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
        v109(v106, v107, v108);
        v190(&v101[v104[6]], &v102[v104[6]], v103);
        v109(&v101[v104[7]], &v102[v104[7]], v108);
        uint64_t v110 = v104[8];
        uint64_t v111 = &v101[v110];
        uint64_t v112 = &v102[v110];
        *(void *)uint64_t v111 = *(void *)v112;
        *((void *)v111 + 1) = *((void *)v112 + 1);
        swift_bridgeObjectRetain();
        break;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v113 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        uint64_t v116 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, (uint64_t)v116))
        {
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
          memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
        }
        else
        {
          uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          uint64_t v191 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
          v191(v114, v115, v148);
          uint64_t v149 = v116[5];
          uint64_t v150 = &v114[v149];
          uint64_t v151 = &v115[v149];
          uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
          uint64_t v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
          v153(v150, v151, v152);
          v191(&v114[v116[6]], &v115[v116[6]], v148);
          v153(&v114[v116[7]], &v115[v116[7]], v152);
          uint64_t v154 = v116[8];
          uint64_t v155 = &v114[v154];
          uint64_t v156 = &v115[v154];
          *(void *)uint64_t v155 = *(void *)v156;
          *((void *)v155 + 1) = *((void *)v156 + 1);
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, (uint64_t)v116);
        }
        break;
      default:
        uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v192 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
        v192(a1, a2, v4);
        int v5 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v6 = v5[5];
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        v10(v7, v8, v9);
        v192((void *)((char *)a1 + v5[6]), (void *)((char *)a2 + v5[6]), v4);
        v10((char *)a1 + v5[7], (char *)a2 + v5[7], v9);
        uint64_t v11 = v5[8];
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = (void *)((char *)a2 + v11);
        *uint64_t v12 = *v13;
        v12[1] = v13[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for PhoneSnippetDataModels(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v176(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(v9, v10, v11);
      v176(&a1[v7[6]], &a2[v7[6]], v6);
      v12(&a1[v7[7]], &a2[v7[7]], v11);
      *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
      goto LABEL_22;
    case 2u:
      long long v13 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v13;
      uint64_t v177 = (int *)type metadata accessor for ContactConfirmationModel();
      uint64_t v14 = v177[6];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
      v173(v15, v16, v17);
      uint64_t v18 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v19 = v18[5];
      uint64_t v172 = &v15[v19];
      uint64_t v20 = &v16[v19];
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v22(v172, v20, v21);
      v173(&v15[v18[6]], &v16[v18[6]], v17);
      v22(&v15[v18[7]], &v16[v18[7]], v21);
      *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
      memcpy(&a1[v177[7]], &a2[v177[7]], 0x41uLL);
      *(_OWORD *)&a1[v177[8]] = *(_OWORD *)&a2[v177[8]];
      goto LABEL_22;
    case 3u:
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
      v24(a1, a2, v23);
      uint64_t v25 = (int *)type metadata accessor for EmergencyCountdownModel();
      v24(&a1[v25[5]], &a2[v25[5]], v23);
      v24(&a1[v25[6]], &a2[v25[6]], v23);
      v24(&a1[v25[7]], &a2[v25[7]], v23);
      v24(&a1[v25[8]], &a2[v25[8]], v23);
      v24(&a1[v25[9]], &a2[v25[9]], v23);
      v24(&a1[v25[10]], &a2[v25[10]], v23);
      v24(&a1[v25[11]], &a2[v25[11]], v23);
      v24(&a1[v25[12]], &a2[v25[12]], v23);
      uint64_t v26 = v25[13];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      uint64_t v30 = v25[14];
      uint64_t v31 = &a1[v30];
      uint64_t v32 = &a2[v30];
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      uint64_t v34 = v25[15];
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      *(_OWORD *)&a1[v25[16]] = *(_OWORD *)&a2[v25[16]];
      goto LABEL_22;
    case 4u:
      uint64_t v38 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v38))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v116 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(a1, a2, v116);
        uint64_t v117 = v38[5];
        uint64_t v118 = &a1[v117];
        uint64_t v119 = &a2[v117];
        uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32);
        v121(v118, v119, v120);
        uint64_t v122 = v38[6];
        uint64_t v123 = &a1[v122];
        uint64_t v124 = &a2[v122];
        uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
        uint64_t v126 = v38[7];
        uint64_t v127 = &a1[v126];
        uint64_t v128 = &a2[v126];
        uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
        v121(&a1[v38[8]], &a2[v38[8]], v120);
        uint64_t v130 = v38[9];
        uint64_t v131 = &a1[v130];
        uint64_t v132 = &a2[v130];
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
        uint64_t v134 = v38[10];
        uint64_t v135 = &a1[v134];
        uint64_t v136 = &a2[v134];
        uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v38);
      }
      uint64_t v138 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      uint64_t v139 = v138[5];
      uint64_t v140 = &a1[v139];
      uint64_t v141 = &a2[v139];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v139], 1, (uint64_t)v38))
      {
        uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
      }
      else
      {
        uint64_t v149 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v140, v141, v149);
        uint64_t v150 = v38[5];
        uint64_t v151 = &v140[v150];
        uint64_t v152 = &v141[v150];
        uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32);
        v154(v151, v152, v153);
        uint64_t v155 = v38[6];
        uint64_t v156 = &v140[v155];
        uint64_t v157 = &v141[v155];
        uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
        uint64_t v159 = v38[7];
        uint64_t v160 = &v140[v159];
        uint64_t v161 = &v141[v159];
        uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
        v154(&v140[v38[8]], &v141[v38[8]], v153);
        uint64_t v163 = v38[9];
        uint64_t v164 = &v140[v163];
        uint64_t v165 = &v141[v163];
        uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
        uint64_t v167 = v38[10];
        uint64_t v168 = &v140[v167];
        uint64_t v169 = &v141[v167];
        uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
        __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, (uint64_t)v38);
      }
      *(_OWORD *)&a1[v138[6]] = *(_OWORD *)&a2[v138[6]];
      *(_OWORD *)&a1[v138[7]] = *(_OWORD *)&a2[v138[7]];
      goto LABEL_22;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v40 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v41 = v40[6];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      uint64_t v44 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      uint64_t v45 = v40[7];
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      a1[v40[8]] = a2[v40[8]];
      *(_OWORD *)&a1[v40[9]] = *(_OWORD *)&a2[v40[9]];
      goto LABEL_22;
    case 7u:
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32);
      v178(a1, a2, v49);
      uint64_t v50 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v51 = v50[5];
      uint64_t v52 = &a1[v51];
      uint64_t v53 = &a2[v51];
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32);
      v55(v52, v53, v54);
      v178(&a1[v50[6]], &a2[v50[6]], v49);
      v55(&a1[v50[7]], &a2[v50[7]], v54);
      *(_OWORD *)&a1[v50[8]] = *(_OWORD *)&a2[v50[8]];
      goto LABEL_22;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v56 = (int *)type metadata accessor for SearchCallHistoryModel();
      uint64_t v57 = v56[5];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32);
      v61(v58, v59, v60);
      uint64_t v62 = v56[6];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
      v61(&a1[v56[7]], &a2[v56[7]], v60);
      v61(&a1[v56[8]], &a2[v56[8]], v60);
      uint64_t v66 = v56[9];
      uint64_t v67 = &a1[v66];
      uint64_t v68 = &a2[v66];
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32);
      v70(v67, v68, v69);
      v70(&a1[v56[10]], &a2[v56[10]], v69);
      uint64_t v71 = v56[11];
      uint64_t v72 = &a1[v71];
      uint64_t v73 = &a2[v71];
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      goto LABEL_22;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v75 = (int *)type metadata accessor for PlayVoicemailModel();
      uint64_t v76 = v75[5];
      uint64_t v77 = &a1[v76];
      uint64_t v78 = &a2[v76];
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
      uint64_t v80 = v75[6];
      uint64_t v81 = &a1[v80];
      uint64_t v82 = &a2[v80];
      uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
      v84(v81, v82, v83);
      v84(&a1[v75[7]], &a2[v75[7]], v83);
      uint64_t v85 = v75[8];
      uint64_t v86 = &a1[v85];
      uint64_t v87 = &a2[v85];
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
      goto LABEL_22;
    case 0xAu:
      long long v89 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v89;
      long long v90 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v90;
      long long v91 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v91;
      long long v92 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v92;
      uint64_t v93 = (int *)type metadata accessor for SingleResultVoicemailModel();
      uint64_t v94 = v93[13];
      uint64_t v95 = &a1[v94];
      uint64_t v96 = &a2[v94];
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32);
      v98(v95, v96, v97);
      v98(&a1[v93[14]], &a2[v93[14]], v97);
      uint64_t v99 = v93[15];
      uint64_t v100 = &a1[v99];
      uint64_t v101 = &a2[v99];
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32);
      v174(v100, v101, v102);
      uint64_t v103 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v104 = v103[5];
      uint64_t v105 = &v100[v104];
      uint64_t v106 = &v101[v104];
      uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32);
      v108(v105, v106, v107);
      v174(&v100[v103[6]], &v101[v103[6]], v102);
      v108(&v100[v103[7]], &v101[v103[7]], v107);
      *(_OWORD *)&v100[v103[8]] = *(_OWORD *)&v101[v103[8]];
      goto LABEL_22;
    case 0xBu:
      long long v109 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v109;
      long long v110 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v110;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v111 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      uint64_t v112 = &a1[v111];
      uint64_t v113 = &a2[v111];
      uint64_t v114 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, (uint64_t)v114))
      {
        uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
        memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
      }
      else
      {
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v175 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32);
        v175(v112, v113, v143);
        uint64_t v144 = v114[5];
        uint64_t v145 = &v112[v144];
        uint64_t v146 = &v113[v144];
        uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32);
        v148(v145, v146, v147);
        v175(&v112[v114[6]], &v113[v114[6]], v143);
        v148(&v112[v114[7]], &v113[v114[7]], v147);
        *(_OWORD *)&v112[v114[8]] = *(_OWORD *)&v113[v114[8]];
        __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, (uint64_t)v114);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for PhoneSnippetDataModels(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    _s27PhoneCallFlowDelegatePlugin0A17SnippetDataModelsOWOhTm_0((uint64_t)a1, (void (*)(void))type metadata accessor for PhoneSnippetDataModels);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
        v176(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
        v12(v9, v10, v11);
        v176(&a1[v7[6]], &a2[v7[6]], v6);
        v12(&a1[v7[7]], &a2[v7[7]], v11);
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        goto LABEL_23;
      case 2u:
        long long v13 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v13;
        uint64_t v177 = (int *)type metadata accessor for ContactConfirmationModel();
        uint64_t v14 = v177[6];
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
        v173(v15, v16, v17);
        uint64_t v18 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v19 = v18[5];
        uint64_t v172 = &v15[v19];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
        v22(v172, v20, v21);
        v173(&v15[v18[6]], &v16[v18[6]], v17);
        v22(&v15[v18[7]], &v16[v18[7]], v21);
        *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
        memcpy(&a1[v177[7]], &a2[v177[7]], 0x41uLL);
        *(_OWORD *)&a1[v177[8]] = *(_OWORD *)&a2[v177[8]];
        goto LABEL_23;
      case 3u:
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
        v24(a1, a2, v23);
        uint64_t v25 = (int *)type metadata accessor for EmergencyCountdownModel();
        v24(&a1[v25[5]], &a2[v25[5]], v23);
        v24(&a1[v25[6]], &a2[v25[6]], v23);
        v24(&a1[v25[7]], &a2[v25[7]], v23);
        v24(&a1[v25[8]], &a2[v25[8]], v23);
        v24(&a1[v25[9]], &a2[v25[9]], v23);
        v24(&a1[v25[10]], &a2[v25[10]], v23);
        v24(&a1[v25[11]], &a2[v25[11]], v23);
        v24(&a1[v25[12]], &a2[v25[12]], v23);
        uint64_t v26 = v25[13];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
        uint64_t v30 = v25[14];
        uint64_t v31 = &a1[v30];
        uint64_t v32 = &a2[v30];
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        uint64_t v34 = v25[15];
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        *(_OWORD *)&a1[v25[16]] = *(_OWORD *)&a2[v25[16]];
        goto LABEL_23;
      case 4u:
        uint64_t v38 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v38))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v116 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(a1, a2, v116);
          uint64_t v117 = v38[5];
          uint64_t v118 = &a1[v117];
          uint64_t v119 = &a2[v117];
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32);
          v121(v118, v119, v120);
          uint64_t v122 = v38[6];
          uint64_t v123 = &a1[v122];
          uint64_t v124 = &a2[v122];
          uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
          uint64_t v126 = v38[7];
          uint64_t v127 = &a1[v126];
          uint64_t v128 = &a2[v126];
          uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
          v121(&a1[v38[8]], &a2[v38[8]], v120);
          uint64_t v130 = v38[9];
          uint64_t v131 = &a1[v130];
          uint64_t v132 = &a2[v130];
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
          uint64_t v134 = v38[10];
          uint64_t v135 = &a1[v134];
          uint64_t v136 = &a2[v134];
          uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v38);
        }
        uint64_t v138 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        uint64_t v139 = v138[5];
        uint64_t v140 = &a1[v139];
        uint64_t v141 = &a2[v139];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v139], 1, (uint64_t)v38))
        {
          uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          uint64_t v149 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v140, v141, v149);
          uint64_t v150 = v38[5];
          uint64_t v151 = &v140[v150];
          uint64_t v152 = &v141[v150];
          uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32);
          v154(v151, v152, v153);
          uint64_t v155 = v38[6];
          uint64_t v156 = &v140[v155];
          uint64_t v157 = &v141[v155];
          uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
          uint64_t v159 = v38[7];
          uint64_t v160 = &v140[v159];
          uint64_t v161 = &v141[v159];
          uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
          v154(&v140[v38[8]], &v141[v38[8]], v153);
          uint64_t v163 = v38[9];
          uint64_t v164 = &v140[v163];
          uint64_t v165 = &v141[v163];
          uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
          uint64_t v167 = v38[10];
          uint64_t v168 = &v140[v167];
          uint64_t v169 = &v141[v167];
          uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
          __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, (uint64_t)v38);
        }
        *(_OWORD *)&a1[v138[6]] = *(_OWORD *)&a2[v138[6]];
        *(_OWORD *)&a1[v138[7]] = *(_OWORD *)&a2[v138[7]];
        goto LABEL_23;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v40 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
        uint64_t v41 = v40[6];
        uint64_t v42 = &a1[v41];
        uint64_t v43 = &a2[v41];
        uint64_t v44 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        uint64_t v45 = v40[7];
        uint64_t v46 = &a1[v45];
        uint64_t v47 = &a2[v45];
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        a1[v40[8]] = a2[v40[8]];
        *(_OWORD *)&a1[v40[9]] = *(_OWORD *)&a2[v40[9]];
        goto LABEL_23;
      case 7u:
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32);
        v178(a1, a2, v49);
        uint64_t v50 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v51 = v50[5];
        uint64_t v52 = &a1[v51];
        uint64_t v53 = &a2[v51];
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32);
        v55(v52, v53, v54);
        v178(&a1[v50[6]], &a2[v50[6]], v49);
        v55(&a1[v50[7]], &a2[v50[7]], v54);
        *(_OWORD *)&a1[v50[8]] = *(_OWORD *)&a2[v50[8]];
        goto LABEL_23;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v56 = (int *)type metadata accessor for SearchCallHistoryModel();
        uint64_t v57 = v56[5];
        uint64_t v58 = &a1[v57];
        uint64_t v59 = &a2[v57];
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32);
        v61(v58, v59, v60);
        uint64_t v62 = v56[6];
        uint64_t v63 = &a1[v62];
        uint64_t v64 = &a2[v62];
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
        v61(&a1[v56[7]], &a2[v56[7]], v60);
        v61(&a1[v56[8]], &a2[v56[8]], v60);
        uint64_t v66 = v56[9];
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32);
        v70(v67, v68, v69);
        v70(&a1[v56[10]], &a2[v56[10]], v69);
        uint64_t v71 = v56[11];
        uint64_t v72 = &a1[v71];
        uint64_t v73 = &a2[v71];
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        goto LABEL_23;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v75 = (int *)type metadata accessor for PlayVoicemailModel();
        uint64_t v76 = v75[5];
        uint64_t v77 = &a1[v76];
        uint64_t v78 = &a2[v76];
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        uint64_t v80 = v75[6];
        uint64_t v81 = &a1[v80];
        uint64_t v82 = &a2[v80];
        uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
        v84(v81, v82, v83);
        v84(&a1[v75[7]], &a2[v75[7]], v83);
        uint64_t v85 = v75[8];
        uint64_t v86 = &a1[v85];
        uint64_t v87 = &a2[v85];
        uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
        goto LABEL_23;
      case 0xAu:
        long long v89 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v89;
        long long v90 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v90;
        long long v91 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v91;
        long long v92 = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 7) = v92;
        uint64_t v93 = (int *)type metadata accessor for SingleResultVoicemailModel();
        uint64_t v94 = v93[13];
        uint64_t v95 = &a1[v94];
        uint64_t v96 = &a2[v94];
        uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32);
        v98(v95, v96, v97);
        v98(&a1[v93[14]], &a2[v93[14]], v97);
        uint64_t v99 = v93[15];
        uint64_t v100 = &a1[v99];
        uint64_t v101 = &a2[v99];
        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32);
        v174(v100, v101, v102);
        uint64_t v103 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v104 = v103[5];
        uint64_t v105 = &v100[v104];
        uint64_t v106 = &v101[v104];
        uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32);
        v108(v105, v106, v107);
        v174(&v100[v103[6]], &v101[v103[6]], v102);
        v108(&v100[v103[7]], &v101[v103[7]], v107);
        *(_OWORD *)&v100[v103[8]] = *(_OWORD *)&v101[v103[8]];
        goto LABEL_23;
      case 0xBu:
        long long v109 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v109;
        long long v110 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v110;
        *((void *)a1 + 8) = *((void *)a2 + 8);
        uint64_t v111 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
        uint64_t v112 = &a1[v111];
        uint64_t v113 = &a2[v111];
        uint64_t v114 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, (uint64_t)v114))
        {
          uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
          memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          uint64_t v175 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32);
          v175(v112, v113, v143);
          uint64_t v144 = v114[5];
          uint64_t v145 = &v112[v144];
          uint64_t v146 = &v113[v144];
          uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
          uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32);
          v148(v145, v146, v147);
          v175(&v112[v114[6]], &v113[v114[6]], v143);
          v148(&v112[v114[7]], &v113[v114[7]], v147);
          *(_OWORD *)&v112[v114[8]] = *(_OWORD *)&v113[v114[8]];
          __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, (uint64_t)v114);
        }
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata completion function for PhoneSnippetDataModels()
{
  uint64_t result = type metadata accessor for YesNoConfirmationModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ContactConfirmationModel();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for EmergencyCountdownModel();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ForeignEmergencyCallDisambiguationModel(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for LocalEmergencyCallDisambiguationModel(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for SearchCallHistoryModel();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for PlayVoicemailModel();
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for SingleResultVoicemailModel();
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for SingleResultCallHistoryModel();
                  if (v9 <= 0x3F)
                  {
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PhoneSnippetDataModels.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2CF718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void *type metadata accessor for PhoneSnippetDataModels.CodingKeys()
{
  return &unk_564C98;
}

void *type metadata accessor for PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return &unk_564D28;
}

void *type metadata accessor for PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  return &unk_564DB8;
}

void *type metadata accessor for PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  return &unk_564E48;
}

void *type metadata accessor for PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  return &unk_564ED8;
}

void *type metadata accessor for PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  return &unk_564F68;
}

void *type metadata accessor for PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  return &unk_564FF8;
}

void *type metadata accessor for PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  return &unk_565088;
}

void *type metadata accessor for PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  return &unk_565118;
}

void *type metadata accessor for PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  return &unk_5651A8;
}

void *type metadata accessor for PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  return &unk_565238;
}

void *type metadata accessor for PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  return &unk_5652C8;
}

unsigned char *storeEnumTagSinglePayload for PhoneSnippetDataModels.AppConfirmationCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2CF8A0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  return &unk_565358;
}

uint64_t OUTLINED_FUNCTION_2_95()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_83()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t OUTLINED_FUNCTION_4_73()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_66()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t OUTLINED_FUNCTION_7_64()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_9_60@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_11_52()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_12_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_43()
{
  return v0;
}

void OUTLINED_FUNCTION_19_32(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_20_35(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_22_38(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_24_30@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return outlined init with take of SingleResultCallHistoryModel(a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_26_28()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t one-time initialization function for domainAffinityScoresSignalUseCases()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<DomainUseCase>);
  uint64_t v0 = type metadata accessor for DomainUseCase();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_472F90;
  unint64_t v5 = v4 + v3;
  unsigned int v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for DomainUseCase.phoneCall(_:), v0);
  v6(v5 + v2, enum case for DomainUseCase.phoneCallSiri(_:), v0);
  v6(v5 + 2 * v2, enum case for DomainUseCase.phoneCallReceived(_:), v0);
  v6(v5 + 3 * v2, enum case for DomainUseCase.messageSend(_:), v0);
  v6(v5 + 4 * v2, enum case for DomainUseCase.messageSendSiri(_:), v0);
  uint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v6)(v5 + 5 * v2, enum case for DomainUseCase.messageReceived(_:), v0);
  static PhoneAppSelectionSignalsGatherer.domainAffinityScoresSignalUseCases = v4;
  return result;
}

uint64_t one-time initialization function for domainToContactAffinityScoresSignalUseCases()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<DomainUseCase>);
  uint64_t v0 = type metadata accessor for DomainUseCase();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_472F90;
  unint64_t v5 = v4 + v3;
  unsigned int v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for DomainUseCase.phoneCallToContact(_:), v0);
  v6(v5 + v2, enum case for DomainUseCase.phoneCallToContactSiri(_:), v0);
  v6(v5 + 2 * v2, enum case for DomainUseCase.phoneCallReceivedFromContact(_:), v0);
  v6(v5 + 3 * v2, enum case for DomainUseCase.messageSendToContact(_:), v0);
  v6(v5 + 4 * v2, enum case for DomainUseCase.messageSendToContactSiri(_:), v0);
  uint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v6)(v5 + 5 * v2, enum case for DomainUseCase.messageReceivedFromContact(_:), v0);
  static PhoneAppSelectionSignalsGatherer.domainToContactAffinityScoresSignalUseCases = v4;
  return result;
}

uint64_t PhoneAppSelectionSignalsGatherer.__allocating_init(messageStream:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PhoneAppSelectionSignalsGatherer.init(messageStream:)(a1);
  return v2;
}

uint64_t PhoneAppSelectionSignalsGatherer.init(messageStream:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_inputINIntent);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_timeout) = 0x4024000000000000;
  UUID.init()();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_uuid, v9, v3);
  *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_messageStream) = a1;
  return v1;
}

uint64_t PhoneAppSelectionSignalsGatherer.execute(person:phoneCallNLIntent:candidateAppBundleIds:selectedAppId:phoneAppSelectionSignalsGathererType:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v7 = v6;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_93_1();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v29 = a1;
    *(void *)&v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    char v28 = a6;
    uint64_t v18 = Array.description.getter();
    unint64_t v19 = a5;
    uint64_t v20 = v7;
    uint64_t v21 = a4;
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v23, (uint64_t *)v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a4 = v21;
    uint64_t v7 = v20;
    a5 = v19;
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a4, v19, (uint64_t *)v30);
    a6 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v15, v16, "PhoneAppSelectionSignalsGatherer execute with candidateApps:%s selectedAppId:%s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    a1 = v29;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v24 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v7 + 152))(a1, a3, a2);
  specialized _arrayForceCast<A, B>(_:)(v24);
  swift_bridgeObjectRelease();
  type metadata accessor for SignalGatherer();
  swift_allocObject();
  OUTLINED_FUNCTION_93_1();
  swift_bridgeObjectRetain();
  SignalGatherer.init(signals:candidateAppBundleIds:)();
  outlined init with copy of SignalProviding(a2, (uint64_t)v30);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v7;
  *(void *)(v25 + 24) = a1;
  outlined init with take of AppSelectionSignalComponent(v30, v25 + 32);
  *(void *)(v25 + 72) = a3;
  *(void *)(v25 + 80) = a4;
  *(void *)(v25 + 88) = a5;
  *(unsigned char *)(v25 + 96) = a6 & 1;
  id v26 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  dispatch thunk of SignalGatherer.gatherValuesAndTimings(timeoutSeconds:completion:)();
  swift_release();
  return swift_release();
}

uint64_t closure #1 in PhoneAppSelectionSignalsGatherer.execute(person:phoneCallNLIntent:candidateAppBundleIds:selectedAppId:phoneAppSelectionSignalsGathererType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v58 = a6;
  uint64_t v59 = a7;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v55 = a3;
  uint64_t v11 = type metadata accessor for SignalGatherer.ValuesWithTimings();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v49 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<SignalGatherer.ValuesWithTimings, SignalGathererError>);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)v20, &demangling cache variable for type metadata for Result<SignalGatherer.ValuesWithTimings, SignalGathererError>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "PhoneAppSelectionSignalsGatherer gathering failed", v24, 2u);
      swift_slowDealloc();
    }

    return outlined destroy of UsoBuilderOptions?((uint64_t)v20, &demangling cache variable for type metadata for Result<SignalGatherer.ValuesWithTimings, SignalGathererError>);
  }
  else
  {
    int v54 = a8 & 1;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v20, v11);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    uint64_t v53 = v27;
    char v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v50 = v11;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v52 = a2;
      uint64_t v31 = (uint8_t *)v30;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v61 = v51;
      *(_DWORD *)uint64_t v31 = 136315138;
      v49[1] = v31 + 4;
      SignalGatherer.ValuesWithTimings.values.getter();
      type metadata accessor for SignalValue();
      uint64_t v32 = v12;
      uint64_t v33 = Dictionary.Keys.description.getter();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void (**)(char *))(v32 + 8);
      uint64_t v37 = v15;
      uint64_t v38 = v50;
      v36(v37);
      _os_log_impl(&dword_0, v28, v29, "PhoneAppSelectionSignalsGatherer gathered values: %s", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v52;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v36 = *(void (**)(char *))(v12 + 8);
      uint64_t v39 = v15;
      uint64_t v38 = v11;
      ((void (*)(char *, uint64_t))v36)(v39, v11);
    }

    SignalGatherer.ValuesWithTimings.values.getter();
    PhoneAppSelectionSignalsGatherer.buildMetrics(person:phoneCallNLIntent:candidateAppBundleIds:selectedAppId:signalMap:phoneAppSelectionSignalsGathererType:)();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    if (v41)
    {
      uint64_t v42 = *(void **)(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_messageStream);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v42 emitMessage:v41 isolatedStreamUUID:isa];

      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_0, v44, v45, "PhoneAppSelectionSignalsGatherer emitMessage is done.", v46, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v44, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl(&dword_0, v44, v47, "PhoneAppSelectionSignalsGatherer failed on build metrics object", v48, 2u);
        swift_slowDealloc();
      }
    }

    return ((uint64_t (*)(char *, uint64_t))v36)(v17, v38);
  }
}

uint64_t PhoneAppSelectionSignalsGatherer.getSignals(person:candidateAppBundleIds:phoneCallNLIntent:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v136 = a3;
  uint64_t v128 = a2;
  id v117 = a1;
  uint64_t v137 = type metadata accessor for SignalDefinitionParametersProvider();
  OUTLINED_FUNCTION_1();
  uint64_t v131 = v5;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_15_1();
  __chkstk_darwin(v11);
  uint64_t v130 = (char *)&v98 - v12;
  uint64_t v129 = type metadata accessor for SignalComputationContext();
  OUTLINED_FUNCTION_1();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_4();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for CommunicationTypeSignal.CommunicationType();
  uint64_t v20 = OUTLINED_FUNCTION_11_0(v19);
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_4();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = static ClientLocaleSignal.instances()();
  static ClientLanguageSignal.instances()();
  uint64_t v139 = v24;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v25 = v139;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SignalProviding>);
  uint64_t inited = swift_initStackObject();
  long long v125 = xmmword_467710;
  *(_OWORD *)(inited + 16) = xmmword_467710;
  uint64_t v27 = v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_inputINIntent;
  uint64_t v132 = (void **)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_inputINIntent);
  uint64_t v28 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_inputINIntent);
  uint64_t v29 = *(void *)(v27 + 8);
  id v30 = *(id *)v27;
  static AppSelectionSignalsGatheringHelper.getCommunicationType(phoneCallNLIntent:skIntent:)(v136, v28, v29, v23);

  *(void *)(inited + 56) = type metadata accessor for CommunicationTypeSignal();
  *(void *)(inited + 64) = &protocol witness table for CommunicationTypeSignal;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  CommunicationTypeSignal.init(communicationType:)();
  uint64_t v139 = v25;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v31 = v139;
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<DomainUseCase>);
  uint64_t v114 = type metadata accessor for DomainUseCase();
  OUTLINED_FUNCTION_1();
  uint64_t v33 = *(void *)(v32 + 72);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = v34;
  uint64_t v37 = (v35 + 32) & ~v35;
  id v135 = (id)(v35 | 7);
  uint64_t v112 = v37 + v33;
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v125;
  int v127 = enum case for DomainUseCase.phoneCall(_:);
  uint64_t v39 = *(void (**)(void))(v36 + 104);
  uint64_t v115 = v36 + 104;
  uint64_t v116 = v39;
  ((void (*)(uint64_t))v39)(v38 + v37);
  OUTLINED_FUNCTION_24_31();
  SignalComputationContext.init(bundleIds:entityId:sharedUserId:domainUseCases:)();
  static DomainUserPersonaSignal.instances(context:)();
  uint64_t v40 = v14 + 8;
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  uint64_t v42 = v129;
  v41(v18, v129);
  uint64_t v139 = v31;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v144 = v139;
  uint64_t v43 = static TimeSpentInAppAffinityScore.instances()();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24_31();
  SignalComputationContext.init(bundleIds:entityId:sharedUserId:domainUseCases:)();
  static ForegroundAppBiomeSignal.instances(context:)();
  uint64_t v110 = v18;
  uint64_t v111 = v40;
  long long v109 = (void (*)(uint64_t))v41;
  v41(v18, v42);
  uint64_t v139 = v43;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v44 = v139;
  static TimeSinceAppLastLaunchedSignal.instances()();
  uint64_t v139 = v44;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v45 = v139;
  static TotalTimeSpentInApp.instances()();
  uint64_t v139 = v45;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v119 = type metadata accessor for SignalDefinitionParametersProvider.Builder();
  swift_allocObject();
  SignalDefinitionParametersProvider.Builder.init()();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_469650;
  uint64_t v133 = v37;
  uint64_t v46 = v116;
  OUTLINED_FUNCTION_3_84();
  v46();
  OUTLINED_FUNCTION_3_84();
  v46();
  int v107 = enum case for DomainUseCase.messageSend(_:);
  OUTLINED_FUNCTION_3_84();
  v46();
  uint64_t v134 = v33;
  uint64_t v118 = 3 * v33;
  OUTLINED_FUNCTION_3_84();
  v46();
  dispatch thunk of SignalDefinitionParametersProvider.Builder.with(domainUseCases:)();
  swift_release();
  swift_bridgeObjectRelease();
  os_log_type_t v47 = v130;
  dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
  uint64_t v48 = v137;
  swift_release();
  v140[0] = v48;
  v140[1] = &protocol witness table for SignalDefinitionParametersProvider;
  uint64_t v49 = __swift_allocate_boxed_opaque_existential_1(&v139);
  uint64_t v50 = *(void ***)(v131 + 16);
  uint64_t v51 = v131 + 16;
  ((void (*)(uint64_t *, char *, uint64_t))v50)(v49, v47, v48);
  static DomainTotalFrequencySignal.instances(with:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v139);
  specialized Array.append<A>(contentsOf:)();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v52 = *v132;
  if (*v132)
  {
    uint64_t v113 = 4 * v134;
    uint64_t v124 = 2 * v134;
    uint64_t v132 = v50;
    OUTLINED_FUNCTION_22_39();
    id v53 = v52;
    SignalDefinitionParametersProvider.Builder.init()();
    int v54 = (__n128 *)swift_allocObject();
    OUTLINED_FUNCTION_40_19(v54, (uint64_t)&v145);
    LODWORD(v125) = enum case for DomainUseCase.phoneCallToContact(_:);
    OUTLINED_FUNCTION_3_84();
    v46();
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(domainUseCases:)();
    swift_release();
    swift_bridgeObjectRelease();
    id v55 = v53;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(intent:)();
    swift_release();

    uint64_t v56 = v120;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
    swift_release();
    v140[0] = v137;
    uint64_t v57 = OUTLINED_FUNCTION_43_20((uint64_t)&protocol witness table for SignalDefinitionParametersProvider);
    uint64_t v123 = v51;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v132)(v57, v56, v137);
    static DomainToContactTimeSinceLastUsedSignal.instances(with:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v139);
    specialized Array.append<A>(contentsOf:)();
    OUTLINED_FUNCTION_22_39();
    SignalDefinitionParametersProvider.Builder.init()();
    uint64_t v106 = v133 + v124;
    uint64_t v58 = swift_allocObject();
    long long v105 = xmmword_467720;
    *(_OWORD *)(v58 + 16) = xmmword_467720;
    LODWORD(v112) = enum case for DomainUseCase.messageSendToContact(_:);
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_3_84();
    v46();
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(domainUseCases:)();
    swift_release();
    swift_bridgeObjectRelease();
    id v59 = v55;
    id v99 = v59;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(intent:)();
    swift_release();

    uint64_t v60 = v121;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
    swift_release();
    v140[0] = v137;
    uint64_t v61 = OUTLINED_FUNCTION_43_20((uint64_t)&protocol witness table for SignalDefinitionParametersProvider);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v132)(v61, v60, v137);
    static DomainToContactFrequencyByIntentSignal.instances(with:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v139);
    specialized Array.append<A>(contentsOf:)();
    OUTLINED_FUNCTION_22_39();
    SignalDefinitionParametersProvider.Builder.init()();
    uint64_t v62 = v134;
    uint64_t v104 = v133 + 6 * v134;
    uint64_t v63 = swift_allocObject();
    long long v103 = xmmword_472F90;
    *(_OWORD *)(v63 + 16) = xmmword_472F90;
    OUTLINED_FUNCTION_3_84();
    v46();
    int v102 = enum case for DomainUseCase.phoneCallToContactSiri(_:);
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_45_18((uint64_t)&v144);
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_45_18((uint64_t)v140);
    int v101 = enum case for DomainUseCase.messageSendToContactSiri(_:);
    OUTLINED_FUNCTION_3_84();
    v46();
    uint64_t v100 = 5 * v62;
    OUTLINED_FUNCTION_3_84();
    v46();
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(domainUseCases:)();
    swift_release();
    uint64_t v48 = v137;
    swift_bridgeObjectRelease();
    id v64 = v99;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(intent:)();
    swift_release();

    uint64_t v65 = v122;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
    swift_release();
    v140[0] = v48;
    uint64_t v66 = OUTLINED_FUNCTION_43_20((uint64_t)&protocol witness table for SignalDefinitionParametersProvider);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v132)(v66, v65, v48);
    static DomainToContactTotalFrequencyByIntentSignal.instances(with:)();
    OUTLINED_FUNCTION_28_30();
    OUTLINED_FUNCTION_22_39();
    SignalDefinitionParametersProvider.Builder.init()();
    uint64_t v67 = (__n128 *)swift_allocObject();
    OUTLINED_FUNCTION_40_19(v67, (uint64_t)&v128);
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_45_18((uint64_t)&v144);
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_45_18((uint64_t)v140);
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_45_18((uint64_t)v126);
    OUTLINED_FUNCTION_3_84();
    v46();
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(domainUseCases:)();
    swift_release();
    swift_bridgeObjectRelease();
    id v68 = v64;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(intent:)();
    swift_release();

    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(bundleIds:)();
    swift_release();
    dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
    swift_release();
    v140[0] = v48;
    OUTLINED_FUNCTION_43_20((uint64_t)&protocol witness table for SignalDefinitionParametersProvider);
    OUTLINED_FUNCTION_30_23();
    v69();
    static DomainToContactAffinityScoreByIntentSignal.instances(with:)();
    OUTLINED_FUNCTION_28_30();
    OUTLINED_FUNCTION_22_39();
    SignalDefinitionParametersProvider.Builder.init()();
    uint64_t v70 = (__n128 *)swift_allocObject();
    OUTLINED_FUNCTION_40_19(v70, (uint64_t)&v132);
    OUTLINED_FUNCTION_3_84();
    v46();
    OUTLINED_FUNCTION_3_84();
    v46();
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(domainUseCases:)();
    swift_release();
    swift_bridgeObjectRelease();
    id v71 = v68;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.with(intent:)();
    OUTLINED_FUNCTION_93_1();
    swift_release();

    uint64_t v72 = v108;
    dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
    swift_release();
    v140[0] = v48;
    OUTLINED_FUNCTION_43_20((uint64_t)&protocol witness table for SignalDefinitionParametersProvider);
    OUTLINED_FUNCTION_30_23();
    v73();
    static DomainTotalFrequencyByCountryCodeSignal.instances(with:)();
    OUTLINED_FUNCTION_28_30();

    uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
    v74(v72, v48);
    uint64_t v75 = OUTLINED_FUNCTION_50_12((uint64_t)v143);
    ((void (*)(uint64_t))v74)(v75);
    uint64_t v76 = OUTLINED_FUNCTION_50_12((uint64_t)v142);
    ((void (*)(uint64_t))v74)(v76);
    uint64_t v77 = OUTLINED_FUNCTION_50_12((uint64_t)v141);
    ((void (*)(uint64_t))v74)(v77);
    v74(v120, v48);
  }
  uint64_t v78 = v131;
  if (v117)
  {
    id v79 = v117;
    unint64_t v80 = outlined bridged method (pb) of @objc INPerson.siriMatches.getter(v79);
    id v135 = v79;
    if (v80)
    {
      unint64_t v81 = v80;
      if (v80 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_7;
        }
      }
      else if (*(void *)((char *)&dword_10 + (v80 & 0xFFFFFFFFFFFFFF8)))
      {
LABEL_7:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v81 & 0xC000000000000001) == 0);
        if ((v81 & 0xC000000000000001) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v82 = *(id *)(v81 + 32);
        }
        OUTLINED_FUNCTION_93_1();
        swift_bridgeObjectRelease();
        INPerson.siriRemembersContactName.getter();
        uint64_t v136 = v83;
        unint64_t v85 = v84;

        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    INPerson.siriRemembersContactName.getter();
    uint64_t v136 = v86;
    unint64_t v85 = v87;
LABEL_13:
    uint64_t v88 = v48;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v89 = type metadata accessor for Logger();
    __swift_project_value_buffer(v89, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    long long v90 = Logger.logObject.getter();
    os_log_type_t v91 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = v78;
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      *(_DWORD *)uint64_t v93 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v136, v85, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v90, v91, "PhoneAppSelectionSignalsGatherer gathering contactName:%s", v93, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v78 = v92;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v48 = v88;
    uint64_t v94 = v109;
    if (one-time initialization token for domainAffinityScoresSignalUseCases != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_24_31();
    SignalComputationContext.init(bundleIds:entityId:sharedUserId:domainUseCases:)();
    static DomainAffinityScoreSignal.instances(context:)();
    uint64_t v95 = OUTLINED_FUNCTION_44_20();
    v94(v95);
    specialized Array.append<A>(contentsOf:)();
    if (one-time initialization token for domainToContactAffinityScoresSignalUseCases != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    SignalComputationContext.init(bundleIds:entityId:sharedUserId:domainUseCases:)();
    static DomainToContactAffinityScoreByNameSignal.instances(context:)();
    uint64_t v96 = OUTLINED_FUNCTION_44_20();
    v94(v96);
    swift_bridgeObjectRetain();
    specialized Array.append<A>(contentsOf:)();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v78 + 8))(v130, v48);
  return v144;
}

double PhoneAppSelectionSignalsGatherer.parseValue(val:appBundleId:isIndependentKey:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SignalValue?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (double *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - v7;
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(a1, (uint64_t)&v40 - v7, &demangling cache variable for type metadata for SignalValue?);
  uint64_t v9 = type metadata accessor for SignalValue();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1) {
    goto LABEL_2;
  }
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for SignalValue?);
  uint64_t v11 = *(void *)(v9 - 8);
  int v12 = (*(uint64_t (**)(double *, uint64_t))(v11 + 88))(v6, v9);
  if (v12 == enum case for SignalValue.independent(_:))
  {
    uint64_t v13 = OUTLINED_FUNCTION_14_39();
    v14(v13);
    outlined destroy of UsoBuilderOptions?((uint64_t)v8, &demangling cache variable for type metadata for SignalValue?);
    return -1.0;
  }
  if (v12 != enum case for SignalValue.dependent(_:))
  {
    if (v12 == enum case for SignalValue.independentDouble(_:))
    {
      uint64_t v21 = OUTLINED_FUNCTION_14_39();
      v22(v21);
      double v10 = *v6;
    }
    else
    {
      if (v12 != enum case for SignalValue.dependentDouble(_:))
      {
        (*(void (**)(double *, uint64_t))(v11 + 8))(v6, v9);
        goto LABEL_2;
      }
      uint64_t v23 = OUTLINED_FUNCTION_14_39();
      v24(v23);
      OUTLINED_FUNCTION_36_23();
      if (!v25)
      {
        swift_bridgeObjectRelease();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v37 = type metadata accessor for Logger();
        uint64_t v31 = (void *)OUTLINED_FUNCTION_25_0(v37, (uint64_t)static Logger.siriPhone);
        os_log_type_t v38 = static os_log_type_t.error.getter();
        if (!OUTLINED_FUNCTION_14_2(v38)) {
          goto LABEL_29;
        }
        uint64_t v39 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_28_14(v39);
        uint64_t v36 = "PhoneAppSelectionSignalsGatherer dependentDouble bundleId shouldn't be empty";
        goto LABEL_28;
      }
      PhoneAppSelectionSignalsGatherer.getKeyValueCaseInsensitiveDouble(appId:map:)();
      double v27 = v26;
      char v29 = v28;
      swift_bridgeObjectRelease();
      if (v29) {
        double v10 = -1.0;
      }
      else {
        double v10 = v27;
      }
    }
    outlined destroy of UsoBuilderOptions?((uint64_t)v8, &demangling cache variable for type metadata for SignalValue?);
    return v10;
  }
  uint64_t v16 = OUTLINED_FUNCTION_14_39();
  v17(v16);
  OUTLINED_FUNCTION_36_23();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    uint64_t v31 = (void *)OUTLINED_FUNCTION_25_0(v30, (uint64_t)static Logger.siriPhone);
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (!OUTLINED_FUNCTION_14_2(v32)) {
      goto LABEL_29;
    }
    uint64_t v33 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_28_14(v33);
    uint64_t v36 = "PhoneAppSelectionSignalsGatherer dependent bundleId shouldn't be empty";
LABEL_28:
    OUTLINED_FUNCTION_24_1(&dword_0, v34, v35, v36);
    OUTLINED_FUNCTION_6();
LABEL_29:

    goto LABEL_2;
  }
  PhoneAppSelectionSignalsGatherer.getKeyValueCaseInsensitiveDouble(appId:map:)();
  char v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
    outlined destroy of UsoBuilderOptions?((uint64_t)v8, &demangling cache variable for type metadata for SignalValue?);
    return -1.0;
  }
LABEL_2:
  outlined destroy of UsoBuilderOptions?((uint64_t)v8, &demangling cache variable for type metadata for SignalValue?);
  return -1.0;
}

void *SignalValueObject.unsetValueDouble.unsafeMutableAddressor()
{
  return &static SignalValueObject.unsetValueDouble;
}

PhoneCallFlowDelegatePlugin::SignalValueObject __swiftcall SignalValueObject.init()()
{
  double v0 = -1.0;
  Swift::Int v1 = -1;
  result.doubleValue = v0;
  result.intValue = v1;
  return result;
}

void *PhoneAppSelectionSignalsGatherer.getInputINIntent()()
{
  Swift::Int v1 = *(void **)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_inputINIntent);
  id v2 = v1;
  return v1;
}

void PhoneAppSelectionSignalsGatherer.setInputINIntent(intent:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  id v7 = a1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v16 = a2;
    double v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)double v10 = 138412290;
    if (a1) {
      id v12 = v7;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = a1;

    _os_log_impl(&dword_0, v8, v9, "PhoneAppSelectionSignalsGatherer update input intent: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();

    a2 = v16;
  }
  else
  {
  }
  uint64_t v13 = (void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_inputINIntent);
  uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_inputINIntent);
  *uint64_t v13 = a1;
  v13[1] = a2;
  id v15 = v7;
}

void PhoneAppSelectionSignalsGatherer.getKeyValueCaseInsensitiveDouble(appId:map:)()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_11_53();
  uint64_t v3 = 0;
  while (v2)
  {
    OUTLINED_FUNCTION_39_22();
LABEL_18:
    OUTLINED_FUNCTION_37_22();
    char v6 = OUTLINED_FUNCTION_51_13();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_19:
      swift_release();
      OUTLINED_FUNCTION_26_1();
      return;
    }
  }
  uint64_t v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v4 >= v1) {
    goto LABEL_19;
  }
  ++v3;
  if (*(void *)(v0 + 8 * v4)) {
    goto LABEL_17;
  }
  uint64_t v3 = v4 + 1;
  if (v4 + 1 >= v1) {
    goto LABEL_19;
  }
  if (*(void *)(v0 + 8 * v3)) {
    goto LABEL_17;
  }
  uint64_t v3 = v4 + 2;
  if (v4 + 2 >= v1) {
    goto LABEL_19;
  }
  if (*(void *)(v0 + 8 * v3))
  {
LABEL_17:
    OUTLINED_FUNCTION_38_19();
    goto LABEL_18;
  }
  uint64_t v5 = v4 + 3;
  if (v5 >= v1) {
    goto LABEL_19;
  }
  if (*(void *)(v0 + 8 * v5))
  {
    uint64_t v3 = v5;
    goto LABEL_17;
  }
  while (1)
  {
    uint64_t v3 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v3 >= v1) {
      goto LABEL_19;
    }
    ++v5;
    if (*(void *)(v0 + 8 * v3)) {
      goto LABEL_17;
    }
  }
LABEL_21:
  __break(1u);
}

uint64_t PhoneAppSelectionSignalsGatherer.areKeysEqual(appId:mappingKey:)(uint64_t a1, uint64_t a2)
{
  Swift::String v4 = String.lowercased()();
  Swift::String v5 = String.lowercased()();
  if (v4._countAndFlagsBits == v5._countAndFlagsBits && v4._object == v5._object)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  a2 = 0x8000000000493240;
  a1 = 0xD000000000000017;
LABEL_9:
  Swift::String v8 = String.lowercased()();
  Swift::String v9 = String.lowercased()();
  if (v8._countAndFlagsBits == v9._countAndFlagsBits && v8._object == v9._object) {
    int v11 = 1;
  }
  else {
    int v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v12 = static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(a1, a2);
  swift_bridgeObjectRelease();
  if (v12)
  {
    Swift::String v13 = String.lowercased()();
    Swift::String v14 = String.lowercased()();
    if (v13._countAndFlagsBits == v14._countAndFlagsBits && v13._object == v14._object)
    {
      int v16 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_7_14();
      int v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v16 = 0;
  }
  return (v11 | v16) & 1;
}

void *PhoneAppSelectionSignalsGatherer.buildCommsAppSelectionGroundTruthGenerated(person:phoneCallNLIntent:candidateAppBundleIds:selectedAppId:signalMap:phoneAppSelectionSignalsGathererType:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  PhoneAppSelectionSignalsGatherer.buildIndependentSignals(person:phoneCallNLIntent:signalMap:resolutionType:)();
  int v11 = v10;
  uint64_t v39 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v33 = v10;
    swift_bridgeObjectRetain();
    Swift::String v13 = (unint64_t *)(a3 + 40);
    uint64_t v34 = a5;
    uint64_t v35 = a6;
    uint64_t v36 = a4;
    do
    {
      uint64_t v15 = *(v13 - 1);
      unint64_t v14 = *v13;
      uint64_t v16 = swift_bridgeObjectRetain();
      PhoneAppSelectionSignalsGatherer.buildCommsAppSelectionAppDependentSignals(person:phoneCallNLIntent:signalMap:appBundleId:selectedAppId:)(v16, a2, a6, v15, v14, a4, a5);
      if (v17)
      {
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        id v19 = v18;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v39 & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v20 = type metadata accessor for Logger();
        __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
        swift_bridgeObjectRetain();
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          uint64_t v38 = swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v23 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v14, &v38);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v21, v22, "PhoneAppSelectionSignalsGatherer dependentSignal is nil appBundleId:%s", (uint8_t *)v23, 0xCu);
          swift_arrayDestroy();
          a6 = v35;
          OUTLINED_FUNCTION_6();
          a5 = v34;
          OUTLINED_FUNCTION_6();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        a4 = v36;
      }
      v13 += 2;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    int v11 = v33;
  }
  id v24 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionGroundTruthGenerated) init];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 setInferenceCommsAppSelectionTrainingAppIndependentSignals:v11];
    outlined bridged method (mbnn) of @objc INFERENCESchemaINFERENCECommsAppSelectionGroundTruthGenerated.inferenceCommsAppSelectionTrainingAppDependentSignals.setter(v39, v25);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    double v27 = (void *)OUTLINED_FUNCTION_25_0(v26, (uint64_t)static Logger.siriPhone);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_8_2(v28))
    {
      char v29 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v29);
      OUTLINED_FUNCTION_1_3(&dword_0, v30, v31, "PhoneAppSelectionSignalsGatherer CommsAppSelectionGroundTruthGenerated can't be constructed");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v25 = 0;
  }

  return v25;
}

void PhoneAppSelectionSignalsGatherer.buildIndependentSignals(person:phoneCallNLIntent:signalMap:resolutionType:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SignalValue?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  id v10 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionTrainingAppIndependentSignals) init];
  if (v10)
  {
    int v11 = v10;
    specialized Dictionary.subscript.getter(0x61636F6C2E776172, 0xEA0000000000656CLL, v4, v9);
    uint64_t v12 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 160);
    uint64_t v13 = OUTLINED_FUNCTION_12_43();
    uint64_t v14 = v12(v13);
    outlined destroy of UsoBuilderOptions?(v9, &demangling cache variable for type metadata for SignalValue?);
    [v11 setRequestOriginLocale:v14];
    specialized Dictionary.subscript.getter(0x676E616C2E776172, 0xEC00000065676175, v4, v9);
    uint64_t v15 = OUTLINED_FUNCTION_12_43();
    uint64_t v16 = v12(v15);
    outlined destroy of UsoBuilderOptions?(v9, &demangling cache variable for type metadata for SignalValue?);
    [v11 setRequestOriginLanguage:v16];
    [v11 setAppResolutionType:v2];
    specialized Dictionary.subscript.getter(0xD000000000000015, 0x8000000000493670, v4, v9);
    uint64_t v17 = OUTLINED_FUNCTION_12_43();
    uint64_t v18 = v12(v17);
    outlined destroy of UsoBuilderOptions?(v9, &demangling cache variable for type metadata for SignalValue?);
    [v11 setCommunicationType:v18];
    if (one-time initialization token for userPersonaKey != -1) {
      swift_once();
    }
    long long v19 = static CommsAppSelectionAppIndependentSignalsKeys.userPersonaKey;
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.getter(v19, *((uint64_t *)&v19 + 1), v4, v9);
    swift_bridgeObjectRelease();
    uint64_t v20 = OUTLINED_FUNCTION_12_43();
    uint64_t v21 = v12(v20);
    outlined destroy of UsoBuilderOptions?(v9, &demangling cache variable for type metadata for SignalValue?);
    OUTLINED_FUNCTION_6_67();
    if (v22 != v23)
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_5_59();
      if (v22 ^ v23 | v24)
      {
        [v11 setUserPersona:v21];
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
  if (one-time initialization token for siriPhone != -1) {
LABEL_15:
  }
    swift_once();
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v26 = (void *)OUTLINED_FUNCTION_25_0(v25, (uint64_t)static Logger.siriPhone);
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v27))
  {
    os_log_type_t v28 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v28);
    OUTLINED_FUNCTION_1_3(&dword_0, v29, v30, "PhoneAppSelectionSignalsGatherer CommsAppSelectionAppIndependentSignals can't be constructed");
    OUTLINED_FUNCTION_6();
  }

LABEL_12:
  OUTLINED_FUNCTION_26_1();
}

uint64_t SignalValueObject.int32Value.getter(uint64_t result)
{
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result > 0x7FFFFFFF) {
LABEL_5:
  }
    __break(1u);
  return result;
}

void PhoneAppSelectionSignalsGatherer.buildCommsAppSelectionAppDependentSignals(person:phoneCallNLIntent:signalMap:appBundleId:selectedAppId:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SignalValue?);
  uint64_t v15 = OUTLINED_FUNCTION_11_0(v14);
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_4();
  uint64_t v18 = v17 - v16;
  id v161 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionTrainingAppDependentSignals) init];
  if (v161)
  {
    BOOL v19 = a6 == a4 && a7 == a5;
    uint64_t v162 = a3;
    if (v19) {
      char v20 = 1;
    }
    else {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    [v161 setIsResolvedApp:v20 & 1];
    type metadata accessor for App();
    swift_bridgeObjectRetain();
    App.__allocating_init(appIdentifier:)();
    Swift::Bool v27 = App.isFirstParty()();
    swift_release();
    [v161 setIsFirstPartyApp:v27];
    [v161 setIsResolvedContactInApp:PhoneAppSelectionSignalsGatherer.getIsResolvedContactInApp(phoneCallNLIntent:appBundleId:)(a2) & 1];
    OUTLINED_FUNCTION_34_18();
    specialized Dictionary.subscript.getter(v28, v29, a3, v30);
    uint64_t v31 = *(double (**)(void))(*(void *)v7 + 160);
    OUTLINED_FUNCTION_2_96();
    double v32 = v31();
    uint64_t v33 = &demangling cache variable for type metadata for SignalValue?;
    OUTLINED_FUNCTION_15_41();
    *(float *)&double v34 = v32;
    [v161 setAppTimeSpentAffinityScore:v34];
    OUTLINED_FUNCTION_19_33();
    OUTLINED_FUNCTION_34_18();
    specialized Dictionary.subscript.getter(v35, v36, v162, v37);
    OUTLINED_FUNCTION_2_96();
    uint64_t v38 = ((uint64_t (*)(void))v31)();
    OUTLINED_FUNCTION_15_41();
    [v161 setIsForegroundApp:(unint64_t)(v38 - 1) < 0xFFFFFFFFFFFFFFFELL];
    OUTLINED_FUNCTION_19_33();
    OUTLINED_FUNCTION_34_18();
    specialized Dictionary.subscript.getter(v39, v40, v41, v42);
    OUTLINED_FUNCTION_2_96();
    v31();
    OUTLINED_FUNCTION_15_41();
    OUTLINED_FUNCTION_6_67();
    if (v43 != v44)
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_5_59();
      if (v43 ^ v44 | v19)
      {
        OUTLINED_FUNCTION_8_75(v45, "setTimeSinceAppLastLaunchedInSec:");
        OUTLINED_FUNCTION_9_61(0xD000000000000020, (uint64_t)"common.timeTotalSpentByUserInApp");
        uint64_t v46 = OUTLINED_FUNCTION_0_58();
        uint64_t v47 = ((uint64_t (*)(uint64_t))v31)(v46);
        OUTLINED_FUNCTION_15_41();
        [v161 setAppTimeSpentInSec:v47];
        OUTLINED_FUNCTION_1_80(0xD00000000000003ALL, (uint64_t)"phone.makingPhoneCallToContact.appContactTimeSinceLastUsed");
        uint64_t v48 = OUTLINED_FUNCTION_0_58();
        ((void (*)(uint64_t))v31)(v48);
        OUTLINED_FUNCTION_15_41();
        OUTLINED_FUNCTION_6_67();
        if (v43 == v44)
        {
          OUTLINED_FUNCTION_5_59();
          if (v43 ^ v44 | v19)
          {
            OUTLINED_FUNCTION_8_75(v49, "setTimeSinceAppContactLastLaunchedInSec:");
            uint64_t v50 = (uint64_t *)[objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionTrainingAppDependentMessageSignals) init];
            if (!v50) {
              goto LABEL_34;
            }
            uint64_t v33 = v50;
            if (one-time initialization token for messageSendKey == -1)
            {
LABEL_20:
              OUTLINED_FUNCTION_31_25();
              OUTLINED_FUNCTION_10_50();
              swift_bridgeObjectRelease();
              uint64_t v51 = OUTLINED_FUNCTION_0_58();
              double v52 = ((double (*)(uint64_t))v31)(v51);
              outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
              *(float *)&double v53 = v52;
              [v33 setAppAffinityScoreForMessages:v53];
              if (one-time initialization token for messageUsingSiriKey != -1) {
                swift_once();
              }
              OUTLINED_FUNCTION_31_25();
              OUTLINED_FUNCTION_10_50();
              swift_bridgeObjectRelease();
              uint64_t v54 = OUTLINED_FUNCTION_0_58();
              double v55 = ((double (*)(uint64_t))v31)(v54);
              outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
              *(float *)&double v56 = v55;
              [v33 setAppAffinityScoreForMessagesUsingSiri:v56];
              if (one-time initialization token for messageReceivedKey != -1) {
                swift_once();
              }
              OUTLINED_FUNCTION_31_25();
              OUTLINED_FUNCTION_10_50();
              swift_bridgeObjectRelease();
              uint64_t v57 = OUTLINED_FUNCTION_0_58();
              double v58 = ((double (*)(uint64_t))v31)(v57);
              OUTLINED_FUNCTION_54_14();
              *(float *)&double v59 = v58;
              [v33 setAppAffinityScoreForMessagesReceived:v59];
              OUTLINED_FUNCTION_19_33();
              OUTLINED_FUNCTION_1_80(v60 - 13, (uint64_t)"messages.sendingMessage.appTotalFrequency");
              OUTLINED_FUNCTION_2_96();
              v31();
              OUTLINED_FUNCTION_54_14();
              OUTLINED_FUNCTION_6_67();
              if (v43 != v44)
              {
                __break(1u);
LABEL_129:
                __break(1u);
                goto LABEL_130;
              }
              OUTLINED_FUNCTION_5_59();
              if (!(v43 ^ v44 | v19)) {
                goto LABEL_129;
              }
              OUTLINED_FUNCTION_33_20(v61, "setAppFreqForMessages:");
              OUTLINED_FUNCTION_19_33();
              OUTLINED_FUNCTION_1_80(v62 - 4, (uint64_t)"messages.sendingMessageUsingSiri.appTotalFrequency");
              uint64_t v63 = OUTLINED_FUNCTION_0_58();
              ((void (*)(uint64_t))v31)(v63);
              outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
              OUTLINED_FUNCTION_6_67();
              if (v43 != v44)
              {
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
                goto LABEL_132;
              }
              OUTLINED_FUNCTION_5_59();
              if (!(v43 ^ v44 | v19)) {
                goto LABEL_131;
              }
              OUTLINED_FUNCTION_33_20(v64, "setAppFreqForMessagesUsingSiri:");
              OUTLINED_FUNCTION_7_65((uint64_t)"messages.sendingMessage.appTotalFrequencyByCountryCode");
              uint64_t v65 = OUTLINED_FUNCTION_0_58();
              ((void (*)(uint64_t))v31)(v65);
              outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
              OUTLINED_FUNCTION_6_67();
              if (v43 != v44)
              {
LABEL_132:
                __break(1u);
LABEL_133:
                __break(1u);
                goto LABEL_134;
              }
              OUTLINED_FUNCTION_5_59();
              if (!(v43 ^ v44 | v19)) {
                goto LABEL_133;
              }
              OUTLINED_FUNCTION_33_20(v66, "setAppFreqForMessagesForCountryCode:");
              [v161 setMessageSignals:v33];

LABEL_34:
              uint64_t v67 = (uint64_t *)[objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionTrainingAppDependentPhoneCallSignals) init];
              if (!v67) {
                goto LABEL_50;
              }
              uint64_t v33 = v67;
              if (one-time initialization token for phoneCallKey == -1)
              {
LABEL_36:
                OUTLINED_FUNCTION_31_25();
                OUTLINED_FUNCTION_10_50();
                swift_bridgeObjectRelease();
                uint64_t v68 = OUTLINED_FUNCTION_0_58();
                double v69 = ((double (*)(uint64_t))v31)(v68);
                outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                *(float *)&double v70 = v69;
                [v33 setAppAffinityScoreForPhoneCall:v70];
                if (one-time initialization token for phoneCallSiriKey != -1) {
                  swift_once();
                }
                OUTLINED_FUNCTION_31_25();
                OUTLINED_FUNCTION_10_50();
                swift_bridgeObjectRelease();
                uint64_t v71 = OUTLINED_FUNCTION_0_58();
                double v72 = ((double (*)(uint64_t))v31)(v71);
                outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                *(float *)&double v73 = v72;
                [v33 setAppAffinityScoreForPhoneCallUsingSiri:v73];
                if (one-time initialization token for phoneCallReceivedKey != -1) {
                  swift_once();
                }
                OUTLINED_FUNCTION_31_25();
                OUTLINED_FUNCTION_10_50();
                swift_bridgeObjectRelease();
                uint64_t v74 = OUTLINED_FUNCTION_0_58();
                double v75 = ((double (*)(uint64_t))v31)(v74);
                OUTLINED_FUNCTION_54_14();
                *(float *)&double v76 = v75;
                [v33 setAppAffinityScoreForPhoneCallReceived:v76];
                OUTLINED_FUNCTION_19_33();
                OUTLINED_FUNCTION_1_80(v77 - 15, (uint64_t)"phone.makingPhoneCall.appTotalFrequency");
                OUTLINED_FUNCTION_2_96();
                v31();
                OUTLINED_FUNCTION_54_14();
                OUTLINED_FUNCTION_6_67();
                if (v43 != v44)
                {
                  __break(1u);
LABEL_136:
                  __break(1u);
                  goto LABEL_137;
                }
                OUTLINED_FUNCTION_5_59();
                if (!(v43 ^ v44 | v19)) {
                  goto LABEL_136;
                }
                OUTLINED_FUNCTION_33_20(v78, "setAppFreqForPhoneCall:");
                OUTLINED_FUNCTION_19_33();
                OUTLINED_FUNCTION_1_80(v79 - 6, (uint64_t)"phone.makingPhoneCallUsingSiri.appTotalFrequency");
                uint64_t v80 = OUTLINED_FUNCTION_0_58();
                ((void (*)(uint64_t))v31)(v80);
                outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                OUTLINED_FUNCTION_6_67();
                if (v43 != v44)
                {
LABEL_137:
                  __break(1u);
LABEL_138:
                  __break(1u);
                  goto LABEL_139;
                }
                OUTLINED_FUNCTION_5_59();
                if (!(v43 ^ v44 | v19)) {
                  goto LABEL_138;
                }
                OUTLINED_FUNCTION_33_20(v81, "setAppFreqForPhoneCallUsingSiri:");
                OUTLINED_FUNCTION_19_33();
                OUTLINED_FUNCTION_1_80(v82 - 2, (uint64_t)"phone.makingPhoneCall.appTotalFrequencyByCountryCode");
                uint64_t v83 = OUTLINED_FUNCTION_0_58();
                ((void (*)(uint64_t))v31)(v83);
                outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                OUTLINED_FUNCTION_6_67();
                if (v43 != v44)
                {
LABEL_139:
                  __break(1u);
LABEL_140:
                  __break(1u);
                  goto LABEL_141;
                }
                OUTLINED_FUNCTION_5_59();
                if (!(v43 ^ v44 | v19)) {
                  goto LABEL_140;
                }
                OUTLINED_FUNCTION_33_20(v84, "setAppFreqForPhoneCallForCountryCode:");
                [v161 setPhoneCallSignals:v33];

LABEL_50:
                id v85 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionTrainingContactDependentSignals) init];
                if (!v85) {
                  return;
                }
                uint64_t v86 = v85;
                id v87 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionTrainingContactDependentMessageSignals) init];
                if (v87)
                {
                  uint64_t v88 = v87;
                  OUTLINED_FUNCTION_9_61(0xD000000000000040, (uint64_t)"messages.sendingMessageToContact.appContactAffinityScoreByIntent");
                  uint64_t v89 = OUTLINED_FUNCTION_0_58();
                  double v90 = ((double (*)(uint64_t))v31)(v89);
                  OUTLINED_FUNCTION_15_41();
                  *(float *)&double v91 = v90;
                  [v88 setAppContactAffinityScoreForMessages:v91];
                  OUTLINED_FUNCTION_9_61(0xD000000000000049, (uint64_t)"messages.sendingMessageToContactUsingSiri.appContactAffinityScoreByIntent");
                  OUTLINED_FUNCTION_2_96();
                  double v92 = v31();
                  OUTLINED_FUNCTION_15_41();
                  *(float *)&double v93 = v92;
                  [v88 setAppContactAffinityScoreForMessagesUsingSiri:v93];
                  OUTLINED_FUNCTION_9_61(0xD000000000000043, (uint64_t)"messages.messageReceivedFromContact.appContactAffinityScoreByIntent");
                  OUTLINED_FUNCTION_2_96();
                  double v94 = v31();
                  OUTLINED_FUNCTION_15_41();
                  *(float *)&double v95 = v94;
                  [v88 setAppContactAffinityScoreForMessagesReceived:v95];
                  OUTLINED_FUNCTION_1_80(0xD000000000000038, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.f2m");
                  OUTLINED_FUNCTION_2_96();
                  v31();
                  OUTLINED_FUNCTION_15_41();
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
                    __break(1u);
LABEL_143:
                    __break(1u);
                    goto LABEL_144;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_143;
                  }
                  OUTLINED_FUNCTION_8_75(v96, "setAppContactFreqForMessages2Min:");
                  unint64_t v97 = OUTLINED_FUNCTION_25_27();
                  OUTLINED_FUNCTION_1_80(v97, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.f10m");
                  uint64_t v98 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v98);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_144:
                    __break(1u);
LABEL_145:
                    __break(1u);
                    goto LABEL_146;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_145;
                  }
                  OUTLINED_FUNCTION_8_75(v99, "setAppContactFreqForMessages10Min:");
                  unint64_t v100 = OUTLINED_FUNCTION_27_28();
                  OUTLINED_FUNCTION_1_80(v100, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.f1h");
                  uint64_t v101 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v101);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
                    goto LABEL_148;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_147;
                  }
                  OUTLINED_FUNCTION_8_75(v102, "setAppContactFreqForMessages1Hr:");
                  unint64_t v103 = OUTLINED_FUNCTION_27_28();
                  OUTLINED_FUNCTION_1_80(v103, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.f6h");
                  uint64_t v104 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v104);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
                    goto LABEL_150;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_149;
                  }
                  OUTLINED_FUNCTION_8_75(v105, "setAppContactFreqForMessages6Hr:");
                  unint64_t v106 = OUTLINED_FUNCTION_27_28();
                  OUTLINED_FUNCTION_1_80(v106, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.f1d");
                  uint64_t v107 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v107);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
                    goto LABEL_152;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_151;
                  }
                  OUTLINED_FUNCTION_8_75(v108, "setAppContactFreqForMessages1Day:");
                  unint64_t v109 = OUTLINED_FUNCTION_27_28();
                  OUTLINED_FUNCTION_1_80(v109, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.f7d");
                  uint64_t v110 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v110);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
                    goto LABEL_154;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_153;
                  }
                  OUTLINED_FUNCTION_8_75(v111, "setAppContactFreqForMessages7Day:");
                  unint64_t v112 = OUTLINED_FUNCTION_25_27();
                  OUTLINED_FUNCTION_1_80(v112, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.f28d");
                  uint64_t v113 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v113);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
                    goto LABEL_156;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_155;
                  }
                  OUTLINED_FUNCTION_8_75(v114, "setAppContactFreqForMessages28Day:");
                  unint64_t v115 = OUTLINED_FUNCTION_25_27();
                  OUTLINED_FUNCTION_1_80(v115, (uint64_t)"messages.sendingMessageToContact.appContactFrequency.finf");
                  uint64_t v116 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v116);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    goto LABEL_158;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_157;
                  }
                  OUTLINED_FUNCTION_8_75(v117, "setAppContactFreqForMessagesInf:");
                  unint64_t v118 = OUTLINED_FUNCTION_25_27();
                  OUTLINED_FUNCTION_1_80(v118, (uint64_t)"messages.sendingMessageToContact.appContactTotalFrequency");
                  uint64_t v119 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v119);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    goto LABEL_160;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_159;
                  }
                  OUTLINED_FUNCTION_8_75(v120, "setAppContactFreqForMessages:");
                  OUTLINED_FUNCTION_1_80(0xD000000000000042, (uint64_t)"messages.sendingMessageToContactUsingSiri.appContactTotalFrequency");
                  uint64_t v121 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v121);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_160:
                    __break(1u);
LABEL_161:
                    __break(1u);
                    goto LABEL_162;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_161;
                  }
                  OUTLINED_FUNCTION_8_75(v122, "setAppContactFreqForMessagesUsingSiri:");
                  OUTLINED_FUNCTION_19_33();
                  OUTLINED_FUNCTION_1_80(v123 + 14, (uint64_t)"messages.sendingMessageToContactUsingHaptic.appContactTotalFrequency");
                  uint64_t v124 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v124);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_162:
                    __break(1u);
LABEL_163:
                    __break(1u);
                    goto LABEL_164;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_163;
                  }
                  OUTLINED_FUNCTION_8_75(v125, "setAppContactFreqForMessagesHaptic:");
                  [v86 setContactDependentMessageSignals:v88];
                }
                id v126 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCECommsAppSelectionTrainingContactDependentPhoneCallSignals) init];
                if (v126)
                {
                  int v127 = v126;
                  OUTLINED_FUNCTION_9_61(0xD00000000000003ELL, (uint64_t)"phone.makingPhoneCallToContact.appContactAffinityScoreByIntent");
                  uint64_t v128 = OUTLINED_FUNCTION_0_58();
                  double v129 = ((double (*)(uint64_t))v31)(v128);
                  OUTLINED_FUNCTION_15_41();
                  *(float *)&double v130 = v129;
                  [v127 setAppContactAffinityScoreForPhoneCall:v130];
                  OUTLINED_FUNCTION_9_61(0xD000000000000047, (uint64_t)"phone.makingPhoneCallToContactUsingSiri.appContactAffinityScoreByIntent");
                  OUTLINED_FUNCTION_2_96();
                  double v131 = v31();
                  OUTLINED_FUNCTION_15_41();
                  *(float *)&double v132 = v131;
                  [v127 setAppContactAffinityScoreForPhoneCallUsingSiri:v132];
                  OUTLINED_FUNCTION_1_80(0xD000000000000042, (uint64_t)"phone.phoneCallReceivedFromContact.appContactAffinityScoreByIntent");
                  OUTLINED_FUNCTION_2_96();
                  double v133 = v31();
                  OUTLINED_FUNCTION_15_41();
                  *(float *)&double v134 = v133;
                  [v127 setAppContactAffinityScoreForPhoneCallReceived:v134];
                  OUTLINED_FUNCTION_7_65((uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.f2m");
                  OUTLINED_FUNCTION_2_96();
                  v31();
                  OUTLINED_FUNCTION_15_41();
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
                    goto LABEL_166;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_165;
                  }
                  OUTLINED_FUNCTION_8_75(v135, "setAppContactFreqForPhoneCall2Min:");
                  unint64_t v136 = OUTLINED_FUNCTION_26_29();
                  OUTLINED_FUNCTION_1_80(v136, (uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.f10m");
                  uint64_t v137 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v137);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
                    goto LABEL_168;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_167;
                  }
                  OUTLINED_FUNCTION_8_75(v138, "setAppContactFreqForPhoneCall10Min:");
                  OUTLINED_FUNCTION_7_65((uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.f1h");
                  uint64_t v139 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v139);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
                    goto LABEL_170;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_169;
                  }
                  OUTLINED_FUNCTION_8_75(v140, "setAppContactFreqForPhoneCall1Hr:");
                  OUTLINED_FUNCTION_7_65((uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.f6h");
                  uint64_t v141 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v141);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
                    goto LABEL_172;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_171;
                  }
                  OUTLINED_FUNCTION_8_75(v142, "setAppContactFreqForPhoneCall6Hr:");
                  OUTLINED_FUNCTION_7_65((uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.f1d");
                  uint64_t v143 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v143);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
                    goto LABEL_174;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_173;
                  }
                  OUTLINED_FUNCTION_8_75(v144, "setAppContactFreqForPhoneCall1Day:");
                  OUTLINED_FUNCTION_7_65((uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.f7d");
                  uint64_t v145 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v145);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
                    goto LABEL_176;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_175;
                  }
                  OUTLINED_FUNCTION_8_75(v146, "setAppContactFreqForPhoneCall7Day:");
                  unint64_t v147 = OUTLINED_FUNCTION_26_29();
                  OUTLINED_FUNCTION_1_80(v147, (uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.f28d");
                  uint64_t v148 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v148);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
                    goto LABEL_178;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_177;
                  }
                  OUTLINED_FUNCTION_8_75(v149, "setAppContactFreqForPhoneCall28Day:");
                  unint64_t v150 = OUTLINED_FUNCTION_26_29();
                  OUTLINED_FUNCTION_1_80(v150, (uint64_t)"phone.makingPhoneCallToContact.appContactFrequency.finf");
                  uint64_t v151 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v151);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_178:
                    __break(1u);
LABEL_179:
                    __break(1u);
                    goto LABEL_180;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_179;
                  }
                  OUTLINED_FUNCTION_8_75(v152, "setAppContactFreqForPhoneCallInf:");
                  unint64_t v153 = OUTLINED_FUNCTION_26_29();
                  OUTLINED_FUNCTION_1_80(v153, (uint64_t)"phone.makingPhoneCallToContact.appContactTotalFrequency");
                  uint64_t v154 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v154);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_180:
                    __break(1u);
LABEL_181:
                    __break(1u);
                    goto LABEL_182;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_181;
                  }
                  OUTLINED_FUNCTION_8_75(v155, "setAppContactFreqForPhoneCall:");
                  OUTLINED_FUNCTION_19_33();
                  OUTLINED_FUNCTION_1_80(v156 + 10, (uint64_t)"phone.makingPhoneCallToContactUsingSiri.appContactTotalFrequency");
                  uint64_t v157 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v157);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_182:
                    __break(1u);
LABEL_183:
                    __break(1u);
                    goto LABEL_184;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_183;
                  }
                  OUTLINED_FUNCTION_8_75(v158, "setAppContactFreqForPhoneCallUsingSiri:");
                  OUTLINED_FUNCTION_1_80(0xD000000000000042, (uint64_t)"phone.makingPhoneCallToContactUsingHaptic.appContactTotalFrequency");
                  uint64_t v159 = OUTLINED_FUNCTION_0_58();
                  ((void (*)(uint64_t))v31)(v159);
                  outlined destroy of UsoBuilderOptions?(v18, &demangling cache variable for type metadata for SignalValue?);
                  OUTLINED_FUNCTION_6_67();
                  if (v43 != v44)
                  {
LABEL_184:
                    __break(1u);
LABEL_185:
                    __break(1u);
                    return;
                  }
                  OUTLINED_FUNCTION_5_59();
                  if (!(v43 ^ v44 | v19)) {
                    goto LABEL_185;
                  }
                  OUTLINED_FUNCTION_8_75(v160, "setAppContactFreqForPhoneCallHaptic:");
                  [v86 setContactDependentPhoneCallSignals:v127];
                }
                [v161 setContactDependentSignals:v86];

                return;
              }
LABEL_134:
              swift_once();
              goto LABEL_36;
            }
LABEL_127:
            swift_once();
            goto LABEL_20;
          }
LABEL_126:
          __break(1u);
          goto LABEL_127;
        }
LABEL_125:
        __break(1u);
        goto LABEL_126;
      }
    }
    __break(1u);
    goto LABEL_125;
  }
  if (one-time initialization token for siriPhone != -1) {
LABEL_141:
  }
    swift_once();
  uint64_t v21 = type metadata accessor for Logger();
  char v22 = (void *)OUTLINED_FUNCTION_25_0(v21, (uint64_t)static Logger.siriPhone);
  os_log_type_t v23 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v23))
  {
    char v24 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v24);
    OUTLINED_FUNCTION_1_3(&dword_0, v25, v26, "PhoneAppSelectionSignalsGatherer CommsAppSelectionAppDependentSignals can't be constructed");
    OUTLINED_FUNCTION_6();
  }
}