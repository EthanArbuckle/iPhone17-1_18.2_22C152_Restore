id sub_5808(void *a1, int a2, int a3, void *a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  unsigned char v18[128];

  v7 = a4;
  v8 = sub_5940(a1, a2, a3);
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v9 = v7;
  v10 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v10)
  {
    v11 = *(void *)v15;
    while (2)
    {
      for (i = 0; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v15 != v11) {
          objc_enumerationMutation(v9);
        }
        if (objc_msgSend(v8, "isEqualToString:", *(void *)(*((void *)&v14 + 1) + 8 * i), (void)v14))
        {
          v10 = &dword_0 + 1;
          goto LABEL_11;
        }
      }
      v10 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v10) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v10;
}

id sub_5940(void *a1, int a2, int a3)
{
  uint64_t v4 = a2 & ~(a2 >> 31);
  id v5 = a1;
  unsigned __int16 v6 = (unsigned __int16)[v5 length];
  if ((int)v4 + a3 <= v6) {
    LOWORD(v7) = a3;
  }
  else {
    int v7 = (__int16)(v6 - v4) & ~((__int16)(v6 - v4) >> 31);
  }
  v8 = objc_msgSend(v5, "substringWithRange:", v4, (__int16)v7);

  return v8;
}

id sub_59C0(void *a1, unsigned int a2)
{
  id v3 = a1;
  if ((unint64_t)[v3 length] >= a2) {
    id v4 = [v3 characterAtIndex:a2];
  }
  else {
    id v4 = &stru_20;
  }

  return v4;
}

BOOL sub_5A14(void *a1)
{
  id v1 = a1;
  BOOL v2 = [v1 rangeOfString:@"W"] != (id)0x7FFFFFFFFFFFFFFFLL
    || [v1 rangeOfString:@"K"] != (id)0x7FFFFFFFFFFFFFFFLL
    || [v1 rangeOfString:@"CZ"] != (id)0x7FFFFFFFFFFFFFFFLL
    || [v1 rangeOfString:@"WITZ"] != (id)0x7FFFFFFFFFFFFFFFLL;

  return v2;
}

id sub_5B88(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) _translateWord:a2];
  [v3 appendString:v4];

  id v5 = *(void **)(a1 + 32);

  return [v5 appendString:@" "];
}

void sub_5C38(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v4 = sub_5EF8(a1);
  if (v4)
  {
    id v5 = v4;
    id v6 = *(id *)sub_7F9D0();
    sub_7FE20();
    sub_6A60(&qword_ABED0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_80D90;
    id v8 = v5;
    id v9 = [v8 description];
    uint64_t v10 = sub_7FC50();
    uint64_t v12 = v11;

    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_6C34();
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v12;
    sub_7FAD0();

    swift_bridgeObjectRelease();
    id v21 = v8;
    ((void (*)(void *, void))a3)(v5, 0);
  }
  else
  {
    type metadata accessor for HealthFlowError();
    swift_initStackObject();
    sub_E934(0);
    sub_7FE30();
    v13 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_80D90;
    id v15 = v13;
    uint64_t v16 = sub_E854();
    uint64_t v18 = v17;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_6C34();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    swift_allocObject();
    uint64_t v19 = sub_E934(1);
    sub_68FC((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    swift_allocError();
    uint64_t *v20 = v19;
    a3();
    swift_errorRelease();
    swift_release();
  }
}

id sub_5EF8(uint64_t a1)
{
  sub_6A60(&qword_ABEB8);
  uint64_t v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v38 = (char *)&v37 - v4;
  uint64_t v5 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_7F6B0();
  sub_6D54();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_7ED20();
  sub_6D54();
  uint64_t v15 = v14;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v21 = (char *)&v37 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22((char *)&v37 - v20, a1, v13);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v21, v13);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v24 = sub_6D70();
    v25(v24);
    uint64_t v26 = v40;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v21, v40);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v12, v26);
    sub_6B94();
    id v27 = sub_689D0((uint64_t)v7);
    sub_6BD4((uint64_t)v7, type metadata accessor for HealthNLIntent);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v26);
  }
  else
  {
    uint64_t v28 = a1;
    uint64_t v30 = (uint64_t)v38;
    uint64_t v29 = (uint64_t)v39;
    if (v23 == enum case for Parse.directInvocation(_:))
    {
      v22(v19, v28, v13);
      sub_7819C((uint64_t)v19, v30);
      sub_6AA4(v30, v29);
      uint64_t v31 = type metadata accessor for DirectInvocationData();
      if (sub_6B0C(v29, 1, v31) == 1)
      {
        sub_6B34(v30);
        sub_6B34(v29);
        id v27 = 0;
      }
      else
      {
        sub_7890C(v42);
        sub_6B34(v30);
        sub_6BD4(v29, (uint64_t (*)(void))type metadata accessor for DirectInvocationData);
        sub_6A60(&qword_ABEC0);
        sub_6B94();
        if (swift_dynamicCast()) {
          id v27 = v41;
        }
        else {
          id v27 = 0;
        }
      }
      uint64_t v34 = sub_6D70();
      v35(v34);
    }
    else
    {
      uint64_t v32 = sub_6D70();
      v33(v32);
      return 0;
    }
  }
  return v27;
}

uint64_t sub_62C0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(v2 + 16);
  if (v3)
  {
    sub_7E2E0();
    id v4 = v3;
    uint64_t v5 = sub_7E2C0();

    return v5;
  }
  else
  {
    return sub_50ACC(a1, a2);
  }
}

uint64_t sub_6324()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for ResumeWorkoutStrategy()
{
  return self;
}

void type metadata accessor for INFERENCESchemaINFERENCEAppResolutionType(uint64_t a1)
{
}

void type metadata accessor for INStartWorkoutIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for INCancelWorkoutIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for INEndWorkoutIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for INResumeWorkoutIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for INPauseWorkoutIntentResponseCode(uint64_t a1)
{
}

uint64_t sub_63F8()
{
  return sub_5C34();
}

uint64_t sub_6410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for ResumeWorkoutStrategy();

  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, v11, a6);
}

void sub_647C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
}

uint64_t sub_64A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ResumeWorkoutStrategy();

  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_64F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for ResumeWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_655C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for ResumeWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_65C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for ResumeWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_6634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ResumeWorkoutStrategy();

  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_66B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ResumeWorkoutStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_66FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ResumeWorkoutStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_6760(uint64_t a1, void *a2)
{
  return sub_62C0(a1, a2);
}

uint64_t sub_6784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for ResumeWorkoutStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_67F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ResumeWorkoutStrategy();

  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_686C(uint64_t a1, uint64_t a2)
{
  return sub_68FC(&qword_ABDD8, a2, (void (*)(uint64_t))type metadata accessor for ResumeWorkoutStrategy);
}

uint64_t sub_68B4(uint64_t a1, uint64_t a2)
{
  return sub_68FC(&qword_ABDE0, a2, (void (*)(uint64_t))type metadata accessor for ResumeWorkoutStrategy);
}

uint64_t sub_68FC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6944(uint64_t a1, uint64_t a2)
{
  return sub_68FC(&qword_ABDE8, a2, (void (*)(uint64_t))type metadata accessor for ResumeWorkoutStrategy);
}

uint64_t sub_698C(uint64_t a1, uint64_t a2)
{
  return sub_68FC(&qword_ABDF0, a2, (void (*)(uint64_t))type metadata accessor for ResumeWorkoutStrategy);
}

Swift::Int sub_69DC()
{
  return sub_E0C8(*v0);
}

void sub_69E4(uint64_t a1)
{
  sub_E108(a1, *v1);
}

Swift::Int sub_69EC(uint64_t a1)
{
  return sub_E6D8(a1, *v1);
}

void sub_69F4(uint64_t a1@<X8>)
{
  sub_69D4();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_6A28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

BOOL sub_6A54(uint64_t *a1, uint64_t *a2)
{
  return sub_65378(*a1, *a2);
}

uint64_t sub_6A60(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_6AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_ABEB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_6B34(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_ABEB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_6B94()
{
  unint64_t result = qword_ABEC8;
  if (!qword_ABEC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_ABEC8);
  }
  return result;
}

uint64_t sub_6BD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_6C34()
{
  unint64_t result = qword_ABED8;
  if (!qword_ABED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ABED8);
  }
  return result;
}

void type metadata accessor for INWorkoutLocationType(uint64_t a1)
{
}

void type metadata accessor for INSiriAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for INWorkoutGoalUnitType(uint64_t a1)
{
}

void sub_6CBC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_6D04()
{
  return sub_68FC((unint64_t *)&unk_ABF00, 255, type metadata accessor for INSiriAuthorizationStatus);
}

uint64_t sub_6D70()
{
  return v0;
}

uint64_t type metadata accessor for HealthWorkoutResumeCATs()
{
  uint64_t result = qword_AC270;
  if (!qword_AC270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_6DC8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_6E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  sub_6A60(&qword_AC2D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_811A0;
  uint64_t v11 = (uint64_t *)(v10 + 48);
  *(void *)(v10 + 32) = 1953459315;
  *(void *)(v10 + 40) = 0xE400000000000000;
  sub_7434(a1, (uint64_t)v9, &qword_AC2C8);
  uint64_t v12 = sub_7F830();
  sub_756C((uint64_t)v9);
  if (v13)
  {
    sub_7494((uint64_t)v9, &qword_AC2C8);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
  }
  else
  {
    *(void *)(v10 + 72) = v12;
    sub_74EC(v11);
    sub_7550();
    (*(void (**)(void))(v14 + 32))();
  }
  *(void *)(v10 + 80) = 0x4E74756F6B726F77;
  *(void *)(v10 + 88) = 0xEB00000000656D61;
  sub_7434(a2, (uint64_t)v7, &qword_AC2C8);
  sub_756C((uint64_t)v7);
  if (v13)
  {
    sub_7494((uint64_t)v7, &qword_AC2C8);
    *(_OWORD *)(v10 + 96) = 0u;
    *(_OWORD *)(v10 + 112) = 0u;
  }
  else
  {
    *(void *)(v10 + 120) = v12;
    sub_74EC((uint64_t *)(v10 + 96));
    sub_7550();
    (*(void (**)(void))(v15 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_703C()
{
  return sub_7F780();
}

uint64_t sub_7060(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v2 - 8);
  sub_755C();
  uint64_t v5 = v4 - v3;
  sub_6A60(&qword_AC2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_80D90;
  uint64_t v7 = (uint64_t *)(v6 + 48);
  *(void *)(v6 + 32) = 0x656D614E707061;
  *(void *)(v6 + 40) = 0xE700000000000000;
  sub_7434(a1, v5, &qword_AC2C8);
  uint64_t v8 = sub_7F830();
  sub_756C(v5);
  if (v9)
  {
    sub_7494(v5, &qword_AC2C8);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }
  else
  {
    *(void *)(v6 + 72) = v8;
    sub_74EC(v7);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_71D0(uint64_t a1, uint64_t a2)
{
  return sub_7224(a1, a2);
}

uint64_t sub_7224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v9 - 8);
  sub_755C();
  sub_7434(a1, v11 - v10, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v12 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v12;
}

uint64_t sub_7390()
{
  uint64_t v0 = sub_7F7A0();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_73C0()
{
  return type metadata accessor for HealthWorkoutResumeCATs();
}

uint64_t sub_73C8(uint64_t a1, uint64_t a2)
{
  return sub_6E08(a1, a2);
}

uint64_t sub_73EC()
{
  return sub_703C();
}

uint64_t sub_7410(uint64_t a1)
{
  return sub_7060(a1);
}

uint64_t sub_7434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_6A60(a3);
  sub_7550();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_7494(uint64_t a1, uint64_t *a2)
{
  sub_6A60(a2);
  sub_7550();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_74EC(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_756C(uint64_t a1)
{
  return sub_6B0C(a1, 1, v1);
}

uint64_t sub_758C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_9FD38;
  v6._object = a2;
  unint64_t v4 = sub_801E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

uint64_t sub_75D8(char a1)
{
  return *(void *)&aStart_2[8 * a1];
}

uint64_t sub_75F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_65498(*a1, *a2);
}

Swift::Int sub_7604()
{
  return sub_DE98(*v0);
}

uint64_t sub_760C(uint64_t a1)
{
  return sub_E26C(a1, *v1);
}

Swift::Int sub_7614(uint64_t a1)
{
  return sub_E4E4(a1, *v1);
}

uint64_t sub_761C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_758C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_764C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_75D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for HealthVerb(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HealthVerb(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthVerb(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x77DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_7804(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_7810(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HealthVerb()
{
  return &type metadata for HealthVerb;
}

unint64_t sub_782C()
{
  unint64_t result = qword_AC2D8;
  if (!qword_AC2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC2D8);
  }
  return result;
}

uint64_t sub_7878(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_7980();
  unint64_t v5 = sub_79CC();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_78E4()
{
  unint64_t result = qword_AC2E0;
  if (!qword_AC2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC2E0);
  }
  return result;
}

unint64_t sub_7934()
{
  unint64_t result = qword_AC2E8;
  if (!qword_AC2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC2E8);
  }
  return result;
}

unint64_t sub_7980()
{
  unint64_t result = qword_AC2F0;
  if (!qword_AC2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC2F0);
  }
  return result;
}

unint64_t sub_79CC()
{
  unint64_t result = qword_AC2F8[0];
  if (!qword_AC2F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_AC2F8);
  }
  return result;
}

uint64_t sub_7A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutPatternProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GenericErrorFlow(uint64_t a1)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);

  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 240);
}

uint64_t _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t initializeWithCopy for GenericErrorFlow(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void *)(a2 + 264);
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v10;
  *(void *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  return a1;
}

uint64_t *assignWithCopy for GenericErrorFlow(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *sub_7DB0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for GenericErrorFlow(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for GenericErrorFlow(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 240);
  long long v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericErrorFlow(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 280))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenericErrorFlow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 280) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutNeedsValueStrategyAsync()
{
  return sub_9C4C();
}

uint64_t sub_81AC()
{
  uint64_t v0 = sub_7FBE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_7FBB0();
  sub_9D08();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  long long v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE20();
  if (os_log_type_enabled(v5, v6))
  {
    long long v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "WorkoutNeedsValueStrategyAsync actionForInput", v7, 2u);
    sub_9CB0();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_7E540();
}

uint64_t sub_8318()
{
  sub_9D38();
  v0[16] = v1;
  v0[17] = v2;
  v0[14] = v3;
  v0[15] = v4;
  v0[18] = *(void *)(v2 + 16);
  uint64_t v5 = sub_7EB30();
  v0[19] = v5;
  sub_9C80(v5);
  v0[20] = v6;
  v0[21] = sub_9CC8();
  uint64_t v7 = sub_7ED20();
  v0[22] = v7;
  sub_9C80(v7);
  v0[23] = v8;
  v0[24] = sub_9CC8();
  uint64_t v9 = sub_7E820();
  v0[25] = v9;
  sub_9C80(v9);
  v0[26] = v10;
  v0[27] = sub_9CC8();
  uint64_t v11 = sub_7FBE0();
  v0[28] = v11;
  sub_9C80(v11);
  v0[29] = v12;
  v0[30] = swift_task_alloc();
  v0[31] = swift_task_alloc();
  v0[32] = swift_task_alloc();
  sub_9D50();
  return _swift_task_switch(v13, v14, v15);
}

uint64_t sub_8464()
{
  v73 = v0;
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v4 = sub_7FBB0();
  sub_9D08();
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v68 = v4;
  v67(v1, v4, v2);
  uint64_t v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "WorkoutNeedsValueStrategyAsync parseValueResponse", v7, 2u);
    sub_9CB0();
  }
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[28];
  uint64_t v10 = v0[29];
  uint64_t v12 = v0[26];
  uint64_t v11 = v0[27];
  uint64_t v13 = v0[25];

  v66 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v66(v8, v9);
  sub_7EB20();
  sub_7E810();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v14(v11, v13);
  uint64_t v15 = sub_9D68();
  if (sub_50760(v15, v16))
  {
    uint64_t v17 = v0[30];
    uint64_t v18 = v0[28];
    uint64_t v20 = v0[20];
    uint64_t v19 = v0[21];
    uint64_t v21 = v0[19];
    uint64_t v22 = v0[16];
    sub_9D08();
    v67(v17, v68, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v22, v21);
    int v23 = sub_7FBD0();
    os_log_type_t v24 = sub_7FE30();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = v0[28];
    if (v25)
    {
      uint64_t v69 = v0[30];
      uint64_t v27 = v0[27];
      uint64_t v63 = v0[21];
      uint64_t v64 = v0[25];
      uint64_t v65 = v0[20];
      uint64_t v62 = v0[19];
      uint64_t v28 = swift_slowAlloc();
      *(void *)&long long v71 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      uint64_t v29 = sub_803E0();
      v0[11] = sub_1CDF0(v29, v30, (uint64_t *)&v71);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      sub_7EB20();
      uint64_t v31 = sub_7E810();
      unint64_t v33 = v32;
      v14(v27, v64);
      v0[12] = sub_1CDF0(v31, v33, (uint64_t *)&v71);
      sub_7FF60();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v62);
      _os_log_impl(&dword_0, v23, v24, "%s NeedsValueStrategy: Slot - %s is not workoutName slot", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      uint64_t v35 = v26;
      uint64_t v34 = v69;
    }
    else
    {
      sub_9CE0();
      v40();

      uint64_t v34 = sub_9D68();
    }
    v66(v34, v35);
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v41 = sub_E934(2);
    sub_9BBC();
    swift_allocError();
    uint64_t *v42 = v41;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_9D44();
  }
  else
  {
    v36 = (uint8_t *)v0[24];
    uint64_t v38 = v0[17];
    uint64_t v37 = (uint8_t *)v0[18];
    sub_7ECD0();
    uint64_t v39 = *(void *)(v38 + 32);
    v45 = (void *)sub_3E8FC(v36, (uint64_t)v37, v37, v39);
    uint64_t v46 = v0[31];
    uint64_t v47 = v0[28];
    sub_9CE0();
    v48();
    sub_9D08();
    v67(v46, v68, v47);
    v49 = v45;
    v50 = sub_7FBD0();
    os_log_type_t v51 = sub_7FE20();
    if (os_log_type_enabled(v50, v51))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v70 = (void *)swift_slowAlloc();
      *(_DWORD *)v53 = 138412290;
      v0[13] = v49;
      v54 = v49;
      sub_7FF60();
      void *v70 = v49;

      _os_log_impl(&dword_0, v50, v51, "Updated intent after prompting for value: %@", v53, 0xCu);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      v50 = v49;
    }
    uint64_t v55 = v0[31];
    uint64_t v56 = v0[28];
    uint64_t v57 = v0[18];

    v66(v55, v56);
    uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v57, v39);
    if (v58)
    {
      uint64_t v59 = v58;
      *((void *)&v72 + 1) = sub_9C0C();
      *(void *)&long long v71 = v59;
    }
    else
    {
      long long v71 = 0u;
      long long v72 = 0u;
    }
    uint64_t v60 = v0[14];
    sub_7E790();
    uint64_t v61 = sub_7E7A0();
    sub_9B2C(v60, 0, 1, v61);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v43 = (uint64_t (*)(void))v0[1];
  }
  return v43();
}

uint64_t sub_8B60()
{
  sub_9D38();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  sub_7E470();
  v1[9] = sub_9CC8();
  uint64_t v5 = sub_7EA70();
  v1[10] = v5;
  sub_9C80(v5);
  v1[11] = v6;
  v1[12] = sub_9CC8();
  uint64_t v7 = sub_7FBE0();
  v1[13] = v7;
  sub_9C80(v7);
  v1[14] = v8;
  v1[15] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_8C44()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = sub_7FBB0();
  sub_9D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "WorkoutNeedsValueStrategyAsync makePromptForValue", v7, 2u);
    sub_9CB0();
  }
  uint64_t v8 = *(void *)(v0 + 64);

  uint64_t v9 = sub_9CF0();
  v10(v9);
  sub_7EB30();
  uint64_t v11 = (void *)sub_7EB00();
  *(unsigned char *)(v0 + 160) = sub_9260();

  sub_9AE0((void *)(v8 + 200), *(void *)(v8 + 224));
  uint64_t v14 = (uint64_t (__cdecl *)())((char *)&dword_AF0B8 + dword_AF0B8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_8DF0;
  return v14();
}

uint64_t sub_8DF0()
{
  sub_9C98();
  uint64_t v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 136) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_9D44();
    return v6();
  }
  else
  {
    sub_9D50();
    return _swift_task_switch(v8, v9, v10);
  }
}

uint64_t sub_8F20()
{
  char v1 = *(unsigned char *)(v0 + 160);
  uint64_t v2 = *(void **)(v0 + 64);
  sub_7E450();
  *(unsigned char *)(swift_task_alloc() + 16) = v1;
  sub_7EA20();
  swift_task_dealloc();
  uint64_t v3 = v2[33];
  uint64_t v4 = v2[34];
  sub_9AE0(v2 + 30, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_903C;
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 40);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v8, v6, v7, v3, v4);
}

uint64_t sub_903C()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_9D5C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 152) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_911C()
{
  uint64_t v1 = sub_9CF0();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_91BC()
{
  uint64_t v1 = sub_9D68();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v3();
}

uint64_t sub_9260()
{
  uint64_t v0 = self;
  if (sub_9D20(v0)) {
    return 4;
  }
  uint64_t v2 = self;
  if (sub_9D20(v2)) {
    return 2;
  }
  uint64_t v3 = self;
  if (sub_9D20(v3)) {
    return 1;
  }
  uint64_t v4 = self;
  if (sub_9D20(v4)) {
    return 3;
  }
  uint64_t v5 = self;
  if (sub_9D20(v5)) {
    return 0;
  }
  uint64_t result = sub_801A0();
  __break(1u);
  return result;
}

uint64_t sub_935C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - v8;
  sub_75D8(a2);
  sub_7FCA0();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_7F830();
  sub_9B2C((uint64_t)v9, 0, 1, v10);
  uint64_t v11 = type metadata accessor for WorkoutPromptForSlotValueParameters(0);
  sub_9B54((uint64_t)v9, a1 + *(int *)(v11 + 20));
  sub_7FCA0();
  sub_9B2C((uint64_t)v7, 0, 1, v10);
  uint64_t v12 = sub_9D68();
  return sub_9B54(v12, v13);
}

uint64_t sub_9488(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4256C(a2, (uint64_t)v5);
  uint64_t v6 = sub_7E6E0();
  sub_9B2C((uint64_t)v5, 0, 1, v6);
  sub_7EA40();
  return sub_7EA60();
}

uint64_t sub_9538()
{
  return sub_81AC();
}

uint64_t sub_9550()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_9C7C;
  return sub_8318();
}

uint64_t sub_9608()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_9C7C;
  return sub_8B60();
}

uint64_t sub_96B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_9C7C;
  return NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_9C7C;
  return NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_9840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_991C;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_991C()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_9D5C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_9D44();
  return v3();
}

uint64_t sub_99E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_9C7C;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_9AC4()
{
  return swift_getWitnessTable();
}

void *sub_9AE0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_9B24(uint64_t a1)
{
  return sub_9488(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_9B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_9B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_9BBC()
{
  unint64_t result = qword_ABEE0;
  if (!qword_ABEE0)
  {
    type metadata accessor for HealthFlowError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ABEE0);
  }
  return result;
}

unint64_t sub_9C0C()
{
  unint64_t result = qword_AC3C8;
  if (!qword_AC3C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AC3C8);
  }
  return result;
}

uint64_t sub_9C4C()
{
  return swift_getGenericMetadata();
}

uint64_t sub_9C80(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_9CB0()
{
  return swift_slowDealloc();
}

uint64_t sub_9CC8()
{
  return swift_task_alloc();
}

uint64_t sub_9CF0()
{
  return v0;
}

uint64_t sub_9D08()
{
  return swift_beginAccess();
}

uint64_t sub_9D20(uint64_t a1)
{
  return _swift_dynamicCastObjCClass(v1, a1);
}

uint64_t sub_9D44()
{
  return v0 + 8;
}

uint64_t sub_9D68()
{
  return v0;
}

uint64_t sub_9D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

void sub_9D7C()
{
  sub_AC7C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_9E28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    long long v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    long long v9 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    long long v10 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(v4 + 144) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v4 + 120, (uint64_t)(a2 + 15));
    long long v11 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(v4 + 184) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v4 + 160, (uint64_t)(a2 + 20));
    long long v12 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(v4 + 224) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v4 + 200, (uint64_t)(a2 + 25));
    uint64_t v13 = a2[33];
    uint64_t v14 = a2[34];
    *(void *)(v4 + 264) = v13;
    *(void *)(v4 + 272) = v14;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v4 + 240, (uint64_t)(a2 + 30));
    uint64_t v15 = (void *)a2[35];
    *(void *)(v4 + 280) = v15;
    uint64_t v16 = *(int *)(a3 + 52);
    uint64_t v17 = (void *)(v4 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_7F6D0();
    id v20 = v15;
    if (sub_6B0C((uint64_t)v18, 1, v19))
    {
      uint64_t v21 = sub_6A60(qword_AC3D8);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      sub_9B2C((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v23 = *(int *)(a3 + 56);
    long long v24 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)(v4 + v23 + 24) = v24;
    (**(void (***)(void))(v24 - 8))();
  }
  return v4;
}

uint64_t sub_A1C4(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 240);

  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_7F6D0();
  if (!sub_6B0C(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 56);

  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v6);
}

uint64_t sub_A29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 80, a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 120, a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 160, a2 + 160);
  long long v11 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 200, a2 + 200);
  uint64_t v12 = *(void *)(a2 + 264);
  uint64_t v13 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v12;
  *(void *)(a1 + 272) = v13;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 240, a2 + 240);
  uint64_t v14 = *(void **)(a2 + 280);
  *(void *)(a1 + 280) = v14;
  uint64_t v15 = *(int *)(a3 + 52);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_7F6D0();
  id v19 = v14;
  if (sub_6B0C((uint64_t)v17, 1, v18))
  {
    uint64_t v20 = sub_6A60(qword_AC3D8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    sub_9B2C((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v21 = *(int *)(a3 + 56);
  long long v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  return a1;
}

uint64_t *sub_A5E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_7DB0(a1, a2);
  sub_7DB0(a1 + 5, a2 + 5);
  sub_7DB0(a1 + 10, a2 + 10);
  sub_7DB0(a1 + 15, a2 + 15);
  sub_7DB0(a1 + 20, a2 + 20);
  sub_7DB0(a1 + 25, a2 + 25);
  sub_7DB0(a1 + 30, a2 + 30);
  long long v6 = (void *)a1[35];
  long long v7 = (void *)a2[35];
  a1[35] = (uint64_t)v7;
  id v8 = v7;

  uint64_t v9 = *(int *)(a3 + 52);
  long long v10 = (char *)a1 + v9;
  long long v11 = (char *)a2 + v9;
  uint64_t v12 = sub_7F6D0();
  int v13 = sub_6B0C((uint64_t)v10, 1, v12);
  int v14 = sub_6B0C((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_6A60(qword_AC3D8);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  sub_9B2C((uint64_t)v10, 0, 1, v12);
LABEL_7:
  sub_7DB0((uint64_t *)((char *)a1 + *(int *)(a3 + 56)), (uint64_t *)((char *)a2 + *(int *)(a3 + 56)));
  return a1;
}

uint64_t sub_A7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0xF0uLL);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  uint64_t v7 = *(int *)(a3 + 52);
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_7F6D0();
  if (sub_6B0C((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_6A60(qword_AC3D8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    sub_9B2C((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 56);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_A8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 240);
  long long v9 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v9;
  uint64_t v10 = *(void **)(a1 + 280);
  uint64_t v11 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v11;

  uint64_t v12 = *(int *)(a3 + 52);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_7F6D0();
  int v16 = sub_6B0C((uint64_t)v13, 1, v15);
  int v17 = sub_6B0C((uint64_t)v14, 1, v15);
  if (!v16)
  {
    uint64_t v18 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = sub_6A60(qword_AC3D8);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  sub_9B2C((uint64_t)v13, 0, 1, v15);
LABEL_7:
  uint64_t v20 = *(int *)(a3 + 56);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + v20);
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  return a1;
}

uint64_t sub_AB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AB40);
}

uint64_t sub_AB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_6A60(qword_AC3D8);
    uint64_t v9 = a1 + *(int *)(a3 + 52);
    return sub_6B0C(v9, a2, v8);
  }
}

uint64_t sub_ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_ABE0);
}

uint64_t sub_ABE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_6A60(qword_AC3D8);
    uint64_t v8 = v5 + *(int *)(a4 + 52);
    return sub_9B2C(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutContinueInAppStrategyAsync()
{
  return sub_9C4C();
}

void sub_AC7C()
{
  if (!qword_AC460[0])
  {
    sub_7F6D0();
    unint64_t v0 = sub_7FF40();
    if (!v1) {
      atomic_store(v0, qword_AC460);
    }
  }
}

BOOL sub_ACD4()
{
  return *(void *)(v0 + 280) == 0;
}

uint64_t sub_ACE4()
{
  sub_9D38();
  v1[31] = v2;
  v1[32] = v0;
  v1[29] = v3;
  v1[30] = v4;
  uint64_t v5 = sub_7E470();
  sub_DC74(v5);
  v1[33] = sub_9CC8();
  uint64_t v6 = sub_7EA70();
  v1[34] = v6;
  sub_9C80(v6);
  v1[35] = v7;
  v1[36] = sub_9CC8();
  uint64_t v8 = sub_7E910();
  v1[37] = v8;
  sub_9C80(v8);
  v1[38] = v9;
  v1[39] = sub_DBC0();
  v1[40] = swift_task_alloc();
  uint64_t v10 = sub_7FBE0();
  v1[41] = v10;
  sub_9C80(v10);
  v1[42] = v11;
  v1[43] = sub_DBC0();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  sub_9D50();
  return _swift_task_switch(v12, v13, v14);
}

uint64_t sub_AE2C()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0[46];
  uint64_t v2 = v0[41];
  uint64_t v3 = v0[42];
  uint64_t v4 = v0[38];
  uint64_t v5 = sub_7FBB0();
  v0[47] = v5;
  sub_DBF4();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[48] = v6;
  v0[49] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  uint64_t v7 = *(void (**)(void))(v4 + 16);
  sub_DCF0();
  v7();
  sub_DCF0();
  v7();
  uint64_t v8 = sub_7FBD0();
  os_log_type_t v9 = sub_7FE20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v27 = v0[42];
    uint64_t v28 = v0[41];
    uint64_t v29 = v0[46];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    v0[26] = sub_7E8F0();
    sub_DC80();
    v11();
    sub_7F8B0();
    sub_D938(&qword_AC4A0, (void (*)(uint64_t))&type metadata accessor for App);
    uint64_t v12 = sub_802A0();
    unint64_t v14 = v13;
    swift_release();
    v0[27] = sub_1CDF0(v12, v14, &v30);
    sub_7FF60();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    uint64_t v15 = sub_7E900();
    v0[28] = v15;
    sub_7FF60();
    *uint64_t v26 = v15;
    sub_DC80();
    v16();
    _os_log_impl(&dword_0, v8, v9, "Launching app: %s with intent: %@", (uint8_t *)v10, 0x16u);
    sub_6A60(&qword_AC3D0);
    swift_arrayDestroy();
    sub_9CB0();
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    int v17 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v17(v29, v28);
  }
  else
  {
    uint64_t v18 = v0[46];
    uint64_t v19 = v0[41];
    uint64_t v20 = v0[42];
    uint64_t v21 = *(void (**)(void))(v0[38] + 8);
    sub_DC2C();
    v21();
    sub_DC2C();
    v21();

    int v17 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v17(v18, v19);
  }
  v0[50] = v17;
  sub_D838(0, &qword_AC488);
  sub_7E8F0();
  uint64_t v22 = (void *)sub_7E900();
  long long v23 = (void *)sub_7E8E0();
  v0[51] = sub_7FEC0();

  swift_release();
  long long v24 = (void *)swift_task_alloc();
  v0[52] = v24;
  *long long v24 = v0;
  v24[1] = sub_B238;
  return sub_BECC();
}

uint64_t sub_B238()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 424) = v4;
  *(void *)(v2 + 432) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_B31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_DC10();
  uint64_t v15 = v14[32];
  sub_7E430();
  sub_7EA20();
  uint64_t v16 = *(void **)(v15 + 280);
  v14[55] = v16;
  int v17 = (void (*)(uint64_t, uint64_t, uint64_t))v14[48];
  uint64_t v18 = v14[47];
  uint64_t v19 = v14[41];
  if (v16)
  {
    uint64_t v20 = v14[45];
    swift_beginAccess();
    v17(v20, v18, v19);
    id v21 = v16;
    uint64_t v22 = sub_7FBD0();
    os_log_type_t v23 = sub_7FE20();
    if (os_log_type_enabled(v22, v23))
    {
      a10 = v14 + 25;
      long long v24 = (uint8_t *)swift_slowAlloc();
      a9 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v24 = 138412290;
      v14[25] = v21;
      id v25 = v21;
      sub_7FF60();
      *a9 = v16;

      _os_log_impl(&dword_0, v22, v23, "Submitting SAIntentGroupLaunchAppWithIntent to remote device: %@", v24, 0xCu);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {
    }
    v44 = (void (*)(uint64_t, uint64_t))v14[50];
    uint64_t v45 = v14[45];
    uint64_t v46 = v14[41];
    uint64_t v47 = (void *)v14[32];
    v14[56] = (v14[42] + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v44(v45, v46);
    uint64_t v48 = v47[3];
    uint64_t v49 = v47[4];
    sub_9AE0(v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49);
    sub_9AE0(v14 + 2, v14[5]);
    sub_7FA50();
    v14[57] = v50;
    os_log_type_t v51 = (void *)swift_task_alloc();
    v14[58] = v51;
    sub_D838(0, &qword_AC498);
    *os_log_type_t v51 = v14;
    v51[1] = sub_B790;
    sub_DB3C();
    return AceServiceInvokerAsync.submitToRemote<A>(_:_:)(v52, v53, v54, v55, v56, v57, v58, v59, a9, a10, a11, a12, a13, a14);
  }
  else
  {
    uint64_t v26 = v14[43];
    swift_beginAccess();
    v17(v26, v18, v19);
    uint64_t v27 = sub_7FBD0();
    os_log_type_t v28 = sub_7FE20();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_0, v27, v28, "Submitting SAIntentGroupLaunchAppWithIntent to local device", v29, 2u);
      sub_9CB0();
    }
    uint64_t v31 = (void (*)(uint64_t, uint64_t))v14[50];
    uint64_t v30 = (void *)v14[51];
    uint64_t v32 = v14[43];
    uint64_t v33 = v14[41];

    v31(v32, v33);
    sub_6A60(&qword_AEA40);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_814D0;
    *(void *)(v34 + 32) = v30;
    sub_7FD40();
    id v35 = v30;
    sub_7EA50();
    sub_7E280();
    sub_DCAC();
    uint64_t v36 = sub_7E350();
    sub_DC8C(v36);
    swift_release();
    sub_DB90();
    uint64_t v37 = (void *)swift_task_alloc();
    v14[61] = v37;
    *uint64_t v37 = v14;
    v37[1] = sub_BAC8;
    sub_DB58();
    sub_DB3C();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v38, v39, v40, v41, v42);
  }
}

uint64_t sub_B790()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_9D5C();
  *uint64_t v5 = v4;
  *(void *)(v7 + 472) = v6;
  *(void *)(v7 + 480) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_B890()
{
  sub_DC10();
  uint64_t v1 = *(void **)(v0 + 472);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 328);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  sub_DBF4();
  v2(v4, v3, v5);
  id v6 = v1;
  uint64_t v7 = sub_7FBD0();
  os_log_type_t v8 = sub_7FE20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 472);
    id v25 = *(void **)(v0 + 440);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    long long v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    *(void *)(v0 + 192) = v9;
    uint64_t v11 = v9;
    sub_7FF60();
    *long long v24 = v9;

    os_log_type_t v12 = v8;
    unint64_t v13 = v25;
    _os_log_impl(&dword_0, v7, v12, "Result from submitting to remote device: %@", v10, 0xCu);
    sub_6A60(&qword_AC3D0);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();
    unint64_t v14 = v7;
    uint64_t v7 = v11;
  }
  else
  {
    unint64_t v14 = *(NSObject **)(v0 + 472);
    unint64_t v13 = *(void **)(v0 + 440);
  }
  (*(void (**)(void, void))(v0 + 400))(*(void *)(v0 + 352), *(void *)(v0 + 328));
  sub_7E280();
  sub_DCAC();
  uint64_t v15 = sub_7E350();
  sub_DC8C(v15);
  swift_release();
  sub_DB90();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_BAC8;
  sub_DB58();
  sub_DB3C();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v17, v18, v19, v20, v21);
}

uint64_t sub_BAC8()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_9D5C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 496) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_BBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_DC10();
  uint64_t v15 = *(void **)(v14 + 408);
  uint64_t v16 = *(void *)(v14 + 280);
  uint64_t v17 = *(void *)(v14 + 288);
  uint64_t v18 = *(void *)(v14 + 272);
  uint64_t v28 = *(void *)(v14 + 312);
  uint64_t v29 = *(void *)(v14 + 264);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DB3C();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, v28, v29, a12, a13, a14);
}

uint64_t sub_BC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();

  sub_DB18();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t sub_BD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  uint64_t v11 = *(void **)(v10 + 440);
  os_log_type_t v12 = *(void **)(v10 + 408);
  uint64_t v14 = *(void *)(v10 + 280);
  uint64_t v13 = *(void *)(v10 + 288);
  uint64_t v15 = *(void *)(v10 + 272);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v10 + 16);
  sub_DB18();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
}

uint64_t sub_BE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  uint64_t v11 = *(void **)(v10 + 408);
  uint64_t v13 = *(void *)(v10 + 280);
  uint64_t v12 = *(void *)(v10 + 288);
  uint64_t v14 = *(void *)(v10 + 272);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  sub_DB18();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t sub_BECC()
{
  sub_9D38();
  v1[46] = v2;
  v1[47] = v0;
  v1[45] = v3;
  v1[48] = *(void *)(v2 - 8);
  v1[49] = sub_9CC8();
  uint64_t v4 = sub_7F6D0();
  v1[50] = v4;
  sub_9C80(v4);
  v1[51] = v5;
  v1[52] = sub_9CC8();
  uint64_t v6 = sub_6A60(&qword_AC4A8);
  v1[53] = v6;
  sub_DC74(v6);
  v1[54] = sub_9CC8();
  uint64_t v7 = sub_6A60(qword_AC3D8);
  sub_DC74(v7);
  v1[55] = sub_DBC0();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  uint64_t v8 = sub_7FBE0();
  v1[58] = v8;
  sub_9C80(v8);
  v1[59] = v9;
  v1[60] = sub_9CC8();
  uint64_t v10 = sub_6A60(&qword_AC2C8);
  sub_DC74(v10);
  v1[61] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v11, v12, v13);
}

void sub_C05C()
{
  sub_7E910();
  v0[62] = sub_7E8F0();
  swift_retain_n();
  uint64_t v1 = (void *)sub_7E740();
  if (v1
    && (v2 = v1, id v3 = [v1 displayAppName], v2, v3))
  {
    sub_7FC50();
    swift_release_n();

    sub_7FCA0();
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
  }
  else
  {
    swift_release_n();
    uint64_t v4 = 1;
  }
  uint64_t v5 = v0[61];
  uint64_t v6 = sub_7F830();
  sub_9B2C(v5, v4, 1, v6);
  v0[63] = sub_7E900();
  uint64_t v7 = self;
  if (sub_DBDC(v7))
  {
    uint64_t v8 = v0[61];
    sub_D98C(v0[47] + 40, (uint64_t)(v0 + 22));
    sub_DC3C(v0 + 22, v0[25]);
    uint64_t v9 = sub_DD04();
    v0[64] = v9;
    *(void *)(v9 + 16) = v8;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[65] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_C95C;
    sub_DB04(v5 & 1);
    sub_DAB0();
    sub_39B00();
    return;
  }
  uint64_t v12 = self;
  if (sub_DBDC(v12))
  {
    uint64_t v13 = v0[61];
    sub_D98C(v0[47] + 80, (uint64_t)(v0 + 17));
    sub_DC3C(v0 + 17, v0[20]);
    uint64_t v14 = sub_DD04();
    v0[67] = v14;
    *(void *)(v14 + 16) = v13;
    uint64_t v15 = (void *)swift_task_alloc();
    v0[68] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_CBD4;
    sub_DB04(v5 & 1);
    sub_DAB0();
    sub_6EB68();
    return;
  }
  uint64_t v17 = self;
  if (sub_DBDC(v17))
  {
    sub_7FBB0();
    sub_DBF4();
    uint64_t v18 = sub_DCE4();
    v19(v18);
    uint64_t v20 = sub_7FBD0();
    os_log_type_t v21 = sub_7FE20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "Pause Workout Intent, Continue in app", v22, 2u);
      sub_9CB0();
    }
    uint64_t v23 = v0[60];
    uint64_t v24 = v0[61];
    uint64_t v25 = v0[47];

    sub_DC2C();
    v26();
    sub_D98C(v25 + 120, (uint64_t)(v0 + 12));
    sub_DC3C(v0 + 12, v0[15]);
    uint64_t v27 = sub_DD04();
    v0[70] = v27;
    *(void *)(v27 + 16) = v24;
    uint64_t v28 = (void *)swift_task_alloc();
    v0[71] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_CE4C;
    sub_DB04(v23 & 1);
    sub_DAB0();
    sub_77020();
    return;
  }
  uint64_t v30 = self;
  if (sub_DBDC(v30))
  {
    uint64_t v31 = v0[61];
    sub_D98C(v0[47] + 160, (uint64_t)(v0 + 7));
    sub_DC3C(v0 + 7, v0[10]);
    uint64_t v32 = sub_DD04();
    v0[73] = v32;
    *(void *)(v32 + 16) = v31;
    uint64_t v33 = (void *)swift_task_alloc();
    v0[74] = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_D0C4;
    sub_DB04(v5 & 1);
    sub_DAB0();
    sub_73C94();
    return;
  }
  uint64_t v35 = self;
  if (!sub_DBDC(v35))
  {
    sub_801A0();
    sub_DAB0();
    return;
  }
  uint64_t v36 = v0[56];
  uint64_t v37 = v0[53];
  uint64_t v38 = v0[54];
  uint64_t v39 = v0[50];
  uint64_t v40 = v0[51];
  sub_D874(v0[47] + *(int *)(v0[46] + 52), v0[57]);
  (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v36, enum case for DeviceIdiom.watch(_:), v39);
  sub_9B2C(v36, 0, 1, v39);
  uint64_t v41 = v38 + *(int *)(v37 + 48);
  uint64_t v42 = sub_DCE4();
  sub_D874(v42, v43);
  sub_D874(v36, v41);
  if (sub_6B0C(v38, 1, v39) == 1)
  {
    uint64_t v44 = v0[50];
    sub_D8DC(v0[56], qword_AC3D8);
    uint64_t v45 = sub_DCE4();
    sub_D8DC(v45, v46);
    if (sub_6B0C(v41, 1, v44) == 1)
    {
      sub_D8DC(v0[54], qword_AC3D8);
      uint64_t v47 = sub_DB74();
      v48(v47);
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  uint64_t v49 = v0[50];
  sub_D874(v0[54], v0[55]);
  int v50 = sub_6B0C(v41, 1, v49);
  uint64_t v52 = v0[56];
  uint64_t v51 = v0[57];
  uint64_t v53 = v0[55];
  if (v50 == 1)
  {
    uint64_t v54 = v0[50];
    uint64_t v55 = v0[51];
    sub_D8DC(v0[56], qword_AC3D8);
    sub_D8DC(v51, qword_AC3D8);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
LABEL_30:
    sub_D8DC(v0[54], &qword_AC4A8);
    uint64_t v56 = sub_DB74();
    v57(v56);
    goto LABEL_34;
  }
  uint64_t v58 = v0[51];
  uint64_t v59 = v0[48];
  uint64_t v73 = v0[47];
  uint64_t v74 = v0[49];
  uint64_t v71 = v0[54];
  uint64_t v72 = v0[46];
  (*(void (**)(void, uint64_t, void))(v58 + 32))(v0[52], v41, v0[50]);
  sub_D938(&qword_AC4B0, (void (*)(uint64_t))&type metadata accessor for DeviceIdiom);
  sub_DCE4();
  char v70 = sub_7FC30();
  uint64_t v60 = *(void (**)(void))(v58 + 8);
  sub_DC80();
  v60();
  sub_D8DC(v52, qword_AC3D8);
  sub_D8DC(v51, qword_AC3D8);
  sub_DC80();
  v60();
  sub_D8DC(v71, qword_AC3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v74, v73, v72);
  if (v70)
  {
LABEL_32:
    uint64_t v61 = v0[49];
    uint64_t v62 = v0[46];
    uint64_t v63 = *(void **)(v61 + 280);
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v0[48] + 8);
    id v65 = v63;
    v64(v61, v62);
    if (v63) {

    }
    goto LABEL_35;
  }
LABEL_34:
  (*(void (**)(void, void))(v0[48] + 8))(v0[49], v0[46]);
LABEL_35:
  uint64_t v66 = v0[61];
  sub_D98C(v0[47] + 200, (uint64_t)(v0 + 2));
  sub_9AE0(v0 + 2, v0[5]);
  sub_7F8A0();
  uint64_t v67 = swift_task_alloc();
  v0[76] = v67;
  *(void *)(v67 + 16) = v66;
  uint64_t v68 = (void *)swift_task_alloc();
  v0[77] = v68;
  *uint64_t v68 = v0;
  v68[1] = sub_D33C;
  sub_DAB0();
  sub_70FD0();
}

uint64_t sub_C95C()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[30] = v1;
  v2[31] = v4;
  v2[32] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 528) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_CA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 176);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_DAD8();
  sub_DA80();
  return v15(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_CB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 176);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_CBD4()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[33] = v1;
  v2[34] = v4;
  v2[35] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 552) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_CCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 136);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_DAD8();
  sub_DA80();
  return v15(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_CD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 136);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_CE4C()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[36] = v1;
  v2[37] = v4;
  v2[38] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 576) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 96);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_DAD8();
  sub_DA80();
  return v15(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_D008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 96);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_D0C4()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[39] = v1;
  v2[40] = v4;
  v2[41] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 600) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_D1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 56);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_DAD8();
  sub_DA80();
  return v15(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_D280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 56);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_D33C()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[42] = v1;
  v2[43] = v4;
  v2[44] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 624) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_D43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 16);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_DAD8();
  sub_DA80();
  return v15(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_D4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_DA98();
  sub_DACC();
  sub_DAEC();

  sub_D8DC(v10, &qword_AC2C8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v12 + 16);
  sub_DA5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DA80();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_D5B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_9C7C;
  return sub_ACE4();
}

uint64_t sub_D668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_9C7C;
  return ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:)(a1, a2, a3, a4);
}

uint64_t sub_D730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_991C;
  return UnlockDeviceFlowStrategyAsync.makePromptForDeviceUnlock()(a1, a2, a3);
}

uint64_t sub_D7E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_D800()
{
  return swift_getWitnessTable();
}

uint64_t sub_D81C()
{
  return swift_getWitnessTable();
}

uint64_t sub_D838(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_D874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(qword_AC3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D8DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_6A60(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_D938(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_D980(uint64_t a1)
{
  return sub_D9F0(*(void *)(v1 + 16), a1);
}

uint64_t sub_D98C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_D9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_DA5C()
{
  return swift_task_dealloc();
}

uint64_t sub_DAD8()
{
  return v0;
}

uint64_t sub_DAEC()
{
  return swift_release();
}

uint64_t sub_DB04@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_DB18()
{
  return swift_task_dealloc();
}

uint64_t sub_DB58()
{
  return *(void *)(v0 + 232);
}

uint64_t sub_DB74()
{
  return v0;
}

void *sub_DB90()
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0);
  return sub_9AE0((void *)(v1 + *(int *)(v2 + 56)), *(void *)(v1 + *(int *)(v2 + 56) + 24));
}

uint64_t sub_DBC0()
{
  return swift_task_alloc();
}

uint64_t sub_DBDC(uint64_t a1)
{
  return _swift_dynamicCastObjCClass(v1, a1);
}

uint64_t sub_DBF4()
{
  return swift_beginAccess();
}

BOOL sub_DC3C(void *a1, uint64_t a2)
{
  sub_9AE0(a1, a2);
  return sub_7F8A0();
}

uint64_t sub_DC74(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_DC8C(uint64_t a1)
{
  return dispatch thunk of SiriKitEventSending.send(_:)(a1, v1, v2);
}

uint64_t sub_DCAC()
{
  sub_9AE0(v0, *(void *)(v1 + 80));
  return type metadata accessor for SiriKitEvent(0);
}

uint64_t sub_DCE4()
{
  return v0;
}

uint64_t sub_DD04()
{
  return swift_task_alloc();
}

uint64_t sub_DD1C@<X0>(void *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v4 = sub_7E730();
  swift_allocObject();
  uint64_t v5 = sub_7E720();
  a1[6] = v4;
  a1[7] = &protocol witness table for ResponseFactory;
  a1[3] = v5;
  uint64_t result = sub_7FC10();
  *a1 = 0xD000000000000014;
  a1[1] = 0x8000000000088740;
  a1[2] = v3;
  a1[8] = result;
  return result;
}

uint64_t type metadata accessor for PauseWorkoutContinueInAppStrategy()
{
  uint64_t result = qword_AC4E0;
  if (!qword_AC4E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_DE60()
{
  return swift_initClassMetadata2();
}

Swift::Int sub_DE98(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_75D8);
}

Swift::Int sub_DEB0(char a1)
{
  return sub_80370();
}

Swift::Int sub_DF04(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_15FD0);
}

Swift::Int sub_DF1C(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_204A0);
}

Swift::Int sub_DF34(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_37F94);
}

Swift::Int sub_DF4C()
{
  return sub_E57C();
}

Swift::Int sub_DF58(unsigned __int8 a1)
{
  return sub_80370();
}

Swift::Int sub_DF98()
{
  return sub_E3D0();
}

Swift::Int sub_DFA4(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_507AC);
}

Swift::Int sub_DFBC()
{
  return sub_80370();
}

Swift::Int sub_DFF0()
{
  return sub_80370();
}

Swift::Int sub_E030(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_5D084);
}

Swift::Int sub_E048(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_65D38);
}

Swift::Int sub_E060(uint64_t a1)
{
  return sub_E078(a1, (void (*)(uint64_t))sub_78B14);
}

Swift::Int sub_E078(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_80370();
}

Swift::Int sub_E0C8(Swift::UInt a1)
{
  return sub_80370();
}

void sub_E108(uint64_t a1, Swift::UInt a2)
{
}

uint64_t sub_E130(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_507AC);
}

void sub_E148(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_E170(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_65D38);
}

uint64_t sub_E188(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_78B14);
}

uint64_t sub_E1A0()
{
  sub_7FCC0();

  return swift_bridgeObjectRelease();
}

void sub_E208(uint64_t a1, char a2)
{
}

uint64_t sub_E23C(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_204A0);
}

uint64_t sub_E254(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_15FD0);
}

uint64_t sub_E26C(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_75D8);
}

uint64_t sub_E284(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_37F94);
}

uint64_t sub_E29C()
{
  return sub_7FCC0();
}

uint64_t sub_E2B8()
{
  sub_7FCC0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_E30C(uint64_t a1, uint64_t a2)
{
  return sub_E324(a1, a2, (void (*)(uint64_t))sub_5D084);
}

uint64_t sub_E324(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_7FCC0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_E37C()
{
  sub_7FCC0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_E3D0()
{
  return sub_80370();
}

Swift::Int sub_E438(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_5D084);
}

Swift::Int sub_E450()
{
  return sub_80370();
}

Swift::Int sub_E494()
{
  return sub_80370();
}

Swift::Int sub_E4CC(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_37F94);
}

Swift::Int sub_E4E4(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_75D8);
}

Swift::Int sub_E4FC(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_15FD0);
}

Swift::Int sub_E514(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_204A0);
}

Swift::Int sub_E52C(uint64_t a1, char a2)
{
  return sub_80370();
}

Swift::Int sub_E57C()
{
  return sub_80370();
}

Swift::Int sub_E5F8(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_78B14);
}

Swift::Int sub_E610(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_65D38);
}

Swift::Int sub_E628(uint64_t a1, unsigned __int8 a2)
{
  return sub_80370();
}

Swift::Int sub_E66C(uint64_t a1, uint64_t a2)
{
  return sub_E684(a1, a2, (void (*)(uint64_t))sub_507AC);
}

Swift::Int sub_E684(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return sub_80370();
}

Swift::Int sub_E6D8(uint64_t a1, Swift::UInt a2)
{
  return sub_80370();
}

uint64_t sub_E71C(uint64_t a1)
{
  switch(a1)
  {
    case 10:
      return 0;
    case 11:
      return 1;
    case 70:
      return 9;
    case 20:
      return 3;
    case 30:
      return 4;
    case 40:
      return 5;
    case 41:
      return 6;
    case 50:
      return 7;
    case 60:
      return 8;
    case 12:
      return 2;
  }
  return 10;
}

uint64_t sub_E7C4(char a1)
{
  return qword_81920[a1];
}

BOOL sub_E7D8(char *a1, char *a2)
{
  return sub_65444(*a1, *a2);
}

Swift::Int sub_E7E4()
{
  return sub_DEB0(*v0);
}

void sub_E7EC(uint64_t a1)
{
  sub_E208(a1, *v1);
}

Swift::Int sub_E7F4(uint64_t a1)
{
  return sub_E52C(a1, *v1);
}

uint64_t sub_E7FC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_E71C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_E828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_E7C4(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_E854()
{
  BYTE8(v4) = 0;
  sub_80020(24);
  v5._object = (void *)0x80000000000889E0;
  v5._countAndFlagsBits = 0xD000000000000011;
  sub_7FCD0(v5);
  *(void *)&long long v4 = *(unsigned __int8 *)(v0 + 16);
  sub_80110();
  v6._countAndFlagsBits = 10272;
  v6._object = (void *)0xE200000000000000;
  sub_7FCD0(v6);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v2;
  v7._object = v1;
  sub_7FCD0(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  sub_7FCD0(v8);
  return *(void *)((char *)&v4 + 1);
}

uint64_t sub_E934(char a1)
{
  unint64_t v2 = 0xD000000000000038;
  *(unsigned char *)(v1 + 16) = a1;
  unint64_t v3 = 0x80000000000889A0;
  switch(a1)
  {
    case 1:
      unint64_t v2 = 0xD000000000000029;
      long long v4 = "The parsed intent had unexpected contents";
      goto LABEL_11;
    case 2:
      unint64_t v2 = 0xD00000000000003BLL;
      long long v4 = "The parameter name did not match any of the supported slots";
      goto LABEL_11;
    case 3:
      unint64_t v2 = 0xD000000000000045;
      long long v4 = "Expecting intent to have a value for confirmation and didn't find one";
      goto LABEL_11;
    case 4:
      unint64_t v2 = 0xD000000000000036;
      long long v4 = "The intent does not support the slot that was provided";
      goto LABEL_11;
    case 5:
      long long v4 = "Did not find any disambiguated item after disambiguation";
      goto LABEL_11;
    case 6:
      unint64_t v2 = 0xD00000000000004CLL;
      long long v4 = "IntentResolutionResult did not have the correct type of disambiguation items";
      goto LABEL_11;
    case 7:
      unint64_t v2 = 0xD000000000000019;
      long long v4 = "The cat failed to execute";
      goto LABEL_11;
    case 8:
      unint64_t v2 = 0xD000000000000022;
      long long v4 = "IntentResponse had an unknown code";
      goto LABEL_11;
    case 9:
      unint64_t v2 = 0xD000000000000016;
      long long v4 = "User canceled the flow";
LABEL_11:
      unint64_t v3 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  return v1;
}

uint64_t sub_EA38()
{
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for HealthFlowError()
{
  return self;
}

uint64_t getEnumTagSinglePayload for HealthFlowErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 9) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v5 = v6 - 10;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthFlowErrorCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xEBE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthFlowErrorCode()
{
  return &type metadata for HealthFlowErrorCode;
}

unint64_t sub_EC24()
{
  unint64_t result = qword_AC658;
  if (!qword_AC658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC658);
  }
  return result;
}

uint64_t sub_EC80()
{
  return sub_E854();
}

uint64_t sub_ECA4()
{
  return sub_7FCC0();
}

uint64_t sub_ECD0()
{
  return sub_80350();
}

uint64_t sub_ECE8()
{
  return sub_7FCC0();
}

ValueMetadata *type metadata accessor for LabelTemplatesProvider()
{
  return &type metadata for LabelTemplatesProvider;
}

uint64_t sub_ED1C(uint64_t a1)
{
  uint64_t v1 = sub_6A60(&qword_AC660);
  __chkstk_darwin(v1 - 8);
  sub_F67C();
  uint64_t v48 = v2;
  sub_7EED0();
  sub_6D54();
  uint64_t v52 = v4;
  uint64_t v53 = v3;
  __chkstk_darwin(v3);
  sub_F67C();
  uint64_t v51 = v5;
  uint64_t v49 = sub_7EFA0();
  sub_6D54();
  uint64_t v47 = v6;
  __chkstk_darwin(v7);
  sub_755C();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_7ED70();
  sub_6D54();
  uint64_t v50 = v12;
  __chkstk_darwin(v13);
  sub_755C();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v17 - 8);
  sub_755C();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_7F6B0();
  sub_6D54();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_755C();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = sub_7ED20();
  sub_6D54();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_755C();
  uint64_t v34 = v33 - v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v33 - v32, a1, v28);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 88))(v34, v28);
  if (v35 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v36 = sub_F664();
    v37(v36);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v27, v34, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v20, v27, v21);
    uint64_t v38 = sub_F160();
    sub_F314(v20);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, v21);
  }
  else
  {
    uint64_t v55 = v10;
    if (v35 == enum case for Parse.uso(_:))
    {
      uint64_t v39 = sub_F664();
      v40(v39);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v16, v34, v11);
      sub_7ED60();
      uint64_t v41 = sub_7EEC0();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
      sub_6BB98(v41, v48);
      swift_bridgeObjectRelease();
      if (sub_6B0C(v48, 1, v49) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v10, v48, v49);
        uint64_t v38 = sub_F210();
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v55, v49);
        uint64_t v44 = sub_F690();
        v45(v44);
        return v38;
      }
      uint64_t v42 = sub_F690();
      v43(v42);
      sub_D8DC(v48, &qword_AC660);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v28);
    }
    return 5;
  }
  return v38;
}

uint64_t sub_F160()
{
  if (qword_ABC20 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_F524();
  sub_7F310();
  if (v1 >= 5uLL) {
    return 5;
  }
  else {
    return (0x304010200uLL >> (8 * v1));
  }
}

uint64_t sub_F210()
{
  unint64_t v0 = sub_7F0F0();
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_801C0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 5;
  }
  if (!*(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_10;
  }
LABEL_3:
  sub_140AC(0, (v1 & 0xC000000000000001) == 0, v1);
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_80040();
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  if (sub_7EF50()) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = sub_F370(v2, v3);
  swift_release();
  return v4;
}

uint64_t sub_F314(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthNLIntent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_F370(uint64_t a1, uint64_t a2)
{
  sub_7F390();
  sub_F574((uint64_t)v7, (uint64_t)v5);
  if (!v6) {
    goto LABEL_16;
  }
  sub_F5DC((uint64_t)v5, (uint64_t)v4);
  sub_7F500();
  if (!sub_F644())
  {
    sub_7F560();
    if (!sub_F644())
    {
      sub_7F440();
      if (sub_F644())
      {
        swift_release();
        _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v4);
        a2 = 1;
        goto LABEL_17;
      }
      sub_7F4B0();
      if (sub_F644())
      {
        swift_release();
        _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v4);
        a2 = 2;
        goto LABEL_17;
      }
      sub_7F520();
      if (sub_F644())
      {
        swift_release();
        _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v4);
        a2 = 4;
        goto LABEL_17;
      }
      sub_7F4F0();
      if (sub_F644())
      {
        swift_release();
        _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v4);
        a2 = 3;
        goto LABEL_17;
      }
      sub_7F510();
      if (swift_dynamicCast())
      {
        swift_release();
        _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v4);
        goto LABEL_17;
      }
      _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v4);
LABEL_16:
      a2 = 5;
      goto LABEL_17;
    }
  }
  swift_release();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v4);
  a2 = 0;
LABEL_17:
  sub_D8DC((uint64_t)v5, &qword_AC670);
  return a2;
}

unint64_t sub_F524()
{
  unint64_t result = qword_AC668;
  if (!qword_AC668)
  {
    type metadata accessor for HealthNLIntent(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC668);
  }
  return result;
}

uint64_t sub_F574(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_F5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_F644()
{
  return swift_dynamicCast();
}

uint64_t sub_F664()
{
  return v0;
}

uint64_t sub_F690()
{
  return v0;
}

uint64_t sub_F6A4()
{
  sub_D838(0, (unint64_t *)&qword_AC898);
  uint64_t v1 = sub_D838(0, &qword_AC8A0);
  sub_10DC4(v1);
  sub_6A60(&qword_AC8A8);
  sub_7FC60();
  uint64_t v2 = sub_10EF8();
  sub_110D0();
  sub_10DF8();
  *(void *)&v62[0] = v3;
  sub_10D08(&qword_AC720, (void (*)(uint64_t))type metadata accessor for WorkoutAppResolutionStrategy);
  sub_10FF8((uint64_t)v62, v2);
  sub_6A60(&qword_AC8B0);
  sub_7E170();
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();
  uint64_t v5 = swift_allocObject();
  sub_7E380();
  *(void *)&v62[0] = v5;
  uint64_t v6 = sub_10D08(&qword_AC8B8, (void (*)(uint64_t))type metadata accessor for StartWorkoutHandleIntentStrategy);
  sub_10E34(v6, v7, v8, v9, v10, v11, v12, v13, v56, v62[0]);
  sub_7DFF0();
  sub_10E18();
  sub_10DE4();
  sub_7E160();
  type metadata accessor for StartWorkoutsNeedsValueStrategy();
  sub_10FB0();
  sub_11140();
  uint64_t v14 = sub_10D08(&qword_AC8C0, (void (*)(uint64_t))type metadata accessor for StartWorkoutsNeedsValueStrategy);
  sub_10E34(v14, v15, v16, v17, v18, v19, v20, v21, v57, v62[0]);
  sub_7DFD0();
  sub_10E18();
  sub_10DE4();
  sub_7E150();
  type metadata accessor for StartWorkoutConfirmSlotStrategy();
  sub_10FB0();
  sub_11140();
  uint64_t v22 = sub_10D08(&qword_AC8C8, (void (*)(uint64_t))type metadata accessor for StartWorkoutConfirmSlotStrategy);
  sub_10E34(v22, v23, v24, v25, v26, v27, v28, v29, v58, v62[0]);
  sub_7E040();
  sub_10E18();
  sub_10DE4();
  sub_7E1A0();
  type metadata accessor for StartWorkoutDisambiguationStrategy();
  sub_10FB0();
  sub_11140();
  uint64_t v30 = sub_10D08(&qword_AC8D0, (void (*)(uint64_t))type metadata accessor for StartWorkoutDisambiguationStrategy);
  sub_10E34(v30, v31, v32, v33, v34, v35, v36, v37, v59, v62[0]);
  sub_7E060();
  sub_10E18();
  sub_10DE4();
  sub_7E1B0();
  type metadata accessor for StartWorkoutUnsupportedValueStrategy();
  sub_10FB0();
  sub_11140();
  uint64_t v38 = sub_10D08(&qword_AC8D8, (void (*)(uint64_t))type metadata accessor for StartWorkoutUnsupportedValueStrategy);
  sub_10E34(v38, v39, v40, v41, v42, v43, v44, v45, v60, v62[0]);
  sub_7E0A0();
  sub_10E18();
  sub_10DE4();
  sub_7E190();
  type metadata accessor for StartWorkoutContinueInAppStrategy();
  uint64_t v46 = sub_10E44();
  *(void *)(v46 + 16) = 0;
  *(void *)&v62[0] = v46;
  uint64_t v47 = sub_10D08(&qword_AC8E0, (void (*)(uint64_t))type metadata accessor for StartWorkoutContinueInAppStrategy);
  sub_10E34(v47, v48, v49, v50, v51, v52, v53, v54, v61, v62[0]);
  sub_7E030();
  sub_10E18();
  sub_11010(started, v0);
  sub_7ED30();
  sub_6A60(&qword_AC8E8);
  sub_10FCC();
  *(void *)&v62[0] = sub_10CC8(v62, (uint64_t)sub_58734, 0);
  sub_10D50(&qword_AC8F0, &qword_AC8E8);
  sub_7E080();
  sub_10F74();
  sub_10E60();
  return swift_release();
}

uint64_t sub_FA84(void *a1)
{
  sub_D838(0, (unint64_t *)&qword_AC798);
  uint64_t v2 = sub_D838(0, &qword_AC7A0);
  sub_10DC4(v2);
  sub_6A60(&qword_AC7A8);
  sub_7FC60();
  uint64_t v3 = sub_10EF8();
  sub_110D0();
  sub_10DF8();
  uint64_t v58 = v4;
  *(void *)&v64[0] = v4;
  sub_10D08(&qword_AC720, (void (*)(uint64_t))type metadata accessor for WorkoutAppResolutionStrategy);
  sub_10FF8((uint64_t)v64, v3);
  sub_1114C();
  sub_6A60(&qword_AC7B0);
  sub_10EB8();
  type metadata accessor for EndWorkoutHandleIntentStrategy();
  uint64_t v5 = sub_10E44();
  *(void *)(v5 + 16) = a1;
  *(void *)&v64[0] = v5;
  sub_10D08(&qword_AC7B8, (void (*)(uint64_t))type metadata accessor for EndWorkoutHandleIntentStrategy);
  id v54 = a1;
  sub_7DFF0();
  swift_release();
  sub_11058();
  sub_6A60(&qword_AC7C0);
  sub_10D50(&qword_AC7C8, &qword_AC7C0);
  sub_7DFD0();
  sub_11028();
  uint64_t v63 = 0;
  long long v61 = 0u;
  long long v62 = 0u;
  sub_FEE0((uint64_t)&v61, (unint64_t *)&qword_AC798, (void (*)(long long *__return_ptr))sub_6AAE4, (uint64_t)v64);
  sub_6A60(&qword_AC7D0);
  uint64_t v6 = sub_10D50(&qword_AC7D8, &qword_AC7D0);
  sub_11088(v6, v7, v8, v9, v10, v11, v12, v13, (uint64_t)v54, v58, v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63, v64[0]);
  uint64_t v14 = sub_7E040();
  sub_11120(v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = sub_11040();
  sub_10F44(v21, v22);
  sub_6A60(&qword_AC7E0);
  uint64_t v23 = sub_10D50(&qword_AC7E8, &qword_AC7E0);
  sub_11088(v23, v24, v25, v26, v27, v28, v29, v30, v55, v59, v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63, v64[0]);
  uint64_t v31 = sub_7E060();
  sub_11120(v31, v32, v33, v34, v35, v36, v37);
  uint64_t v38 = sub_11070();
  sub_10F44(v38, v39);
  sub_6A60(&qword_AC7F0);
  uint64_t v40 = sub_10D50(&qword_AC7F8, &qword_AC7F0);
  sub_11088(v40, v41, v42, v43, v44, v45, v46, v47, v56, v60, v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63, v64[0]);
  sub_7E0A0();
  sub_D8DC((uint64_t)v64, &qword_AC7F0);
  sub_10EDC();
  type metadata accessor for EndWorkoutContinueInAppStrategy();
  uint64_t v48 = sub_10E44();
  *(void *)(v48 + 16) = a1;
  *(void *)&v64[0] = v48;
  sub_10D08(&qword_AC800, (void (*)(uint64_t))type metadata accessor for EndWorkoutContinueInAppStrategy);
  id v49 = v57;
  uint64_t v50 = sub_7E030();
  uint64_t v52 = v51;
  swift_release();
  sub_11010(v50, v52);
  sub_7ED30();
  sub_6A60(&qword_AC808);
  swift_allocObject();
  *(void *)&v64[0] = sub_10CC8(v64, (uint64_t)sub_58734, 0);
  sub_10D50(&qword_AC810, &qword_AC808);
  sub_7E080();
  swift_release();
  sub_7E1C0();
  return swift_release();
}

uint64_t sub_FEE0@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, void (*a3)(long long *__return_ptr)@<X3>, uint64_t a4@<X8>)
{
  sub_10C60(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_D8DC(a1, &qword_AC790);
    sub_10C48(&v9, (uint64_t)v11);
  }
  else
  {
    sub_D8DC((uint64_t)&v9, &qword_AC790);
    sub_D838(0, a2);
    a3(v11);
    sub_D8DC(a1, &qword_AC790);
  }
  return sub_10C48(v11, a4);
}

#error "10270: call analysis failed (funcsize=227)"

#error "10680: call analysis failed (funcsize=227)"

#error "10A14: call analysis failed (funcsize=226)"

uint64_t sub_10BCC()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for HealthProducers()
{
  return self;
}

uint64_t sub_10C00(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10C48(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10CC8(long long *a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 72) = 0;
  sub_10C48(a1, v3 + 16);
  *(void *)(v3 + 56) = a2;
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t sub_10D08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10D50(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10C00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, char a12)
{
  void (*v12)(long long *__return_ptr);
  unint64_t *v13;
  uint64_t v14;

  a11 = 0;
  a9 = 0u;
  a10 = 0u;
  return sub_FEE0((uint64_t)&a9, v13, v12, (uint64_t)&a12);
}

uint64_t sub_10DC4(uint64_t a1)
{
  return RCHChildFlowProducers.init()(v1, a1);
}

uint64_t sub_10DE4()
{
  return v0;
}

void sub_10DF8()
{
  sub_56200();
}

uint64_t sub_10E18()
{
  return swift_release();
}

char *sub_10E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t sub_10E44()
{
  return swift_allocObject();
}

uint64_t sub_10E60()
{
  return sub_7E1C0();
}

uint64_t sub_10E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_D8DC((uint64_t)va, v5);
}

uint64_t sub_10EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_D8DC((uint64_t)va, v5);
}

uint64_t sub_10EB8()
{
  return sub_7E170();
}

uint64_t sub_10EDC()
{
  return sub_7E190();
}

uint64_t sub_10EF8()
{
  return type metadata accessor for WorkoutAppResolutionStrategy();
}

uint64_t sub_10F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, char a12)
{
  void (*v13)(long long *__return_ptr);
  uint64_t v14;

  a11 = 0;
  a9 = 0u;
  a10 = 0u;
  return sub_FEE0((uint64_t)&a9, v12, v13, (uint64_t)&a12);
}

uint64_t sub_10F44(uint64_t a1, uint64_t a2, ...)
{
  void (*v3)(long long *__return_ptr);
  uint64_t v4;
  long long v6;
  va_list va;
  long long v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  va_arg(va1, void);
  va_arg(va1, void);
  va_arg(va1, void);
  va_arg(va1, void);
  va_arg(va1, void);
  long long v9 = 0;
  uint64_t v6 = 0u;
  uint64_t v8 = 0u;
  return sub_FEE0((uint64_t)va, v2, v3, (uint64_t)va1);
}

uint64_t sub_10F74()
{
  return swift_release();
}

uint64_t sub_10F90()
{
  return sub_7E080();
}

uint64_t sub_10FB0()
{
  return swift_allocObject();
}

uint64_t sub_10FCC()
{
  return swift_allocObject();
}

double sub_10FE8()
{
  return 0.0;
}

uint64_t sub_10FF8(uint64_t a1, uint64_t a2)
{
  return static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B, C>(strategy:)(a1, a2, v3, v2);
}

uint64_t sub_11010(uint64_t a1, uint64_t a2)
{
  return RCHChildFlowProducers.continueInAppFlowCompletion.setter(a1, a2, v2);
}

uint64_t sub_11028()
{
  return sub_7E150();
}

uint64_t sub_11040()
{
  return sub_7E1A0();
}

uint64_t sub_11058()
{
  return sub_7E160();
}

uint64_t sub_11070()
{
  return sub_7E1B0();
}

char *sub_11088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  return &a16;
}

uint64_t sub_11098()
{
  return sub_7E0A0();
}

uint64_t sub_110B4()
{
  return sub_7DFF0();
}

uint64_t sub_110D0()
{
  return swift_allocObject();
}

uint64_t sub_11120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_D8DC((uint64_t)va, v7);
}

void sub_11158()
{
  sub_15258();
  uint64_t v107 = v2;
  sub_7FBE0();
  sub_6D54();
  uint64_t v101 = v4;
  uint64_t v102 = v3;
  __chkstk_darwin(v3);
  sub_F67C();
  uint64_t v100 = v5;
  sub_15378();
  sub_7ED10();
  sub_6D54();
  uint64_t v104 = v7;
  uint64_t v105 = v6;
  __chkstk_darwin(v6);
  sub_15270(v8, v94[0]);
  __chkstk_darwin(v9);
  v103 = (char *)v94 - v10;
  sub_152AC();
  __chkstk_darwin(v11);
  sub_154F0();
  uint64_t v106 = v12;
  uint64_t v13 = sub_6A60(&qword_AC660);
  uint64_t v14 = sub_DC74(v13);
  __chkstk_darwin(v14);
  sub_152E8(v15, v94[0]);
  sub_7EED0();
  sub_6D54();
  v94[4] = v17;
  v94[5] = v16;
  __chkstk_darwin(v16);
  sub_15228();
  uint64_t v99 = sub_7EFA0();
  sub_6D54();
  v94[2] = v18;
  __chkstk_darwin(v19);
  sub_F67C();
  v94[1] = v20;
  sub_7ED70();
  sub_6D54();
  uint64_t v97 = v22;
  uint64_t v98 = v21;
  __chkstk_darwin(v21);
  sub_F67C();
  uint64_t v96 = v23;
  sub_15378();
  uint64_t v24 = type metadata accessor for DisambiguateAppNLIntent();
  uint64_t v25 = sub_DC74(v24);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for HealthNLIntent(0);
  uint64_t v29 = sub_DC74(v28);
  __chkstk_darwin(v29);
  sub_153AC();
  uint64_t v30 = sub_7F6B0();
  sub_6D54();
  uint64_t v32 = v31;
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (char *)v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)v94 - v37;
  uint64_t v39 = sub_7ED20();
  sub_6D54();
  uint64_t v41 = v40;
  __chkstk_darwin(v42);
  sub_15490();
  sub_15528();
  v43();
  int v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 88))(v0, v39);
  if (v44 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v45 = sub_151F8();
    v46(v45);
    sub_15294();
    v47();
    uint64_t v48 = *(void (**)(void))(v32 + 16);
    sub_15458();
    v48();
    sub_119B0();
    uint64_t v50 = v49;
    sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent);
    sub_15458();
    v48();
    if (!v50)
    {
      sub_15458();
      v48();
      sub_11D20();
      sub_14188((uint64_t)v27, (void (*)(void))type metadata accessor for DisambiguateAppNLIntent);
    }
    uint64_t v51 = *(void (**)(char *, uint64_t))(v32 + 8);
    v51(v36, v30);
    v51(v38, v30);
    goto LABEL_19;
  }
  if (v44 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v52 = sub_151F8();
    v53(v52);
    uint64_t v55 = v104;
    uint64_t v54 = v105;
    uint64_t v56 = v106;
    sub_15294();
    v57();
    uint64_t v58 = *(void (**)(void))(v55 + 16);
    sub_15574();
    v58();
    uint64_t v59 = sub_3D184();
    if (v60)
    {
      if (v60 == 1)
      {
        sub_7FBB0();
        sub_154D0();
        uint64_t v62 = v100;
        uint64_t v61 = v101;
        sub_15528();
        v63();
        sub_15574();
        v58();
        uint64_t v64 = sub_7FBD0();
        os_log_type_t v65 = sub_7FE30();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = (uint8_t *)swift_slowAlloc();
          uint64_t v108 = swift_slowAlloc();
          *(_DWORD *)uint64_t v66 = 136315138;
          uint64_t v67 = sub_7ECF0();
          uint64_t v69 = sub_1CDF0(v67, v68, &v108);
          sub_154BC(v69);
          sub_7FF60();
          swift_bridgeObjectRelease();
          char v70 = *(void (**)(void))(v55 + 8);
          sub_151A0();
          v70();
          _os_log_impl(&dword_0, v64, v65, "Unknow DirectInvocation with identifier: %s", v66, 0xCu);
          swift_arrayDestroy();
          sub_9CB0();
          sub_9CB0();

          sub_152A0();
          v71();
          sub_151A0();
          v70();
        }
        else
        {

          v87 = *(void (**)(void))(v55 + 8);
          sub_151A0();
          v87();
          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v102);
          ((void (*)(uint64_t, uint64_t))v87)(v56, v54);
        }
        goto LABEL_19;
      }
      sub_7F8B0();
      sub_7F880();
    }
    else
    {
      sub_14098(v59, 0);
    }
    sub_151A0();
    v80();
LABEL_19:
    sub_15240();
    return;
  }
  if (v44 != enum case for Parse.uso(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v0, v39);
    goto LABEL_19;
  }
  uint64_t v72 = sub_151F8();
  v73(v72);
  sub_15294();
  v74();
  sub_7ED60();
  uint64_t v75 = sub_7EEC0();
  sub_152A0();
  v76();
  uint64_t v77 = v95;
  sub_6BB98(v75, v95);
  swift_bridgeObjectRelease();
  if (sub_6B0C(v77, 1, v99) == 1)
  {
    uint64_t v78 = sub_151E0();
    v79(v78);
    sub_140D4(v77, &qword_AC660);
    goto LABEL_19;
  }
  sub_15294();
  v81();
  unint64_t v82 = sub_7F0F0();
  unint64_t v88 = v82;
  if (!(v82 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_22;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v83 = sub_15418();
    v84(v83);
    uint64_t v85 = sub_151E0();
    v86(v85);
    goto LABEL_19;
  }
  sub_15554();
  uint64_t v93 = sub_801C0();
  swift_bridgeObjectRelease();
  if (!v93) {
    goto LABEL_27;
  }
LABEL_22:
  if ((v88 & 0xC000000000000001) != 0)
  {
    sub_80040();
    goto LABEL_25;
  }
  if (*(void *)((char *)&dword_10 + (v88 & 0xFFFFFFFFFFFFFF8)))
  {
    swift_retain();
LABEL_25:
    swift_bridgeObjectRelease();
    sub_12090();
    swift_release();
    uint64_t v89 = sub_15418();
    v90(v89);
    uint64_t v91 = sub_151E0();
    v92(v91);
    goto LABEL_19;
  }
  __break(1u);
}

void sub_119B0()
{
  sub_15258();
  uint64_t v2 = type metadata accessor for HealthNLIntent.HealthNLApp(0);
  sub_151D0();
  __chkstk_darwin(v3);
  sub_15210();
  uint64_t v4 = sub_6A60(&qword_AC978);
  uint64_t v5 = sub_DC74(v4);
  __chkstk_darwin(v5);
  sub_15228();
  if (qword_ABC60 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_14228((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_14228(&qword_AC988, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);
  sub_15384();
  if (sub_6B0C(v0, 1, v2) == 1)
  {
    sub_140D4(v0, &qword_AC978);
  }
  else
  {
    if (qword_ABCA0 != -1) {
      swift_once();
    }
    sub_14228(&qword_AC990, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);
    sub_153C8();
    sub_14124(v0, v1);
    if (v7)
    {
      sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
      sub_153F0();
    }
    else
    {
      if (qword_ABC98 != -1) {
        swift_once();
      }
      sub_154FC();
      if (!v6)
      {
        sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
        sub_153F0();
        goto LABEL_10;
      }
      sub_154A8();
      sub_141DC();
      if (sub_1531C())
      {
        sub_15154();
        sub_15534();
        sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
        sub_14188(v0, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
      }
      else
      {
        sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
        sub_153F0();
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_7F8B0();
    sub_7F880();
  }
LABEL_10:
  sub_15240();
}

void sub_11D20()
{
  sub_15258();
  uint64_t v2 = type metadata accessor for HealthNLIntent.HealthNLApp(0);
  sub_151D0();
  __chkstk_darwin(v3);
  sub_15210();
  uint64_t v4 = sub_6A60(&qword_AC978);
  uint64_t v5 = sub_DC74(v4);
  __chkstk_darwin(v5);
  sub_15228();
  if (qword_ABBF0 != -1) {
    swift_once();
  }
  type metadata accessor for DisambiguateAppNLIntent();
  sub_14228(&qword_AC980, (void (*)(uint64_t))type metadata accessor for DisambiguateAppNLIntent);
  sub_14228(&qword_AC988, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);
  sub_15384();
  if (sub_6B0C(v0, 1, v2) == 1)
  {
    sub_140D4(v0, &qword_AC978);
  }
  else
  {
    if (qword_ABCA0 != -1) {
      swift_once();
    }
    sub_14228(&qword_AC990, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);
    sub_153C8();
    sub_14124(v0, v1);
    if (v7)
    {
      sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
      sub_153F0();
    }
    else
    {
      if (qword_ABC98 != -1) {
        swift_once();
      }
      sub_154FC();
      if (!v6)
      {
        sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
        sub_153F0();
        goto LABEL_10;
      }
      sub_154A8();
      sub_141DC();
      if (sub_1531C())
      {
        sub_15154();
        sub_15534();
        sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
        sub_14188(v0, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
      }
      else
      {
        sub_14188(v1, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
        sub_153F0();
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_7F8B0();
    sub_7F880();
  }
LABEL_10:
  sub_15240();
}

uint64_t sub_12090()
{
  if (!sub_7F950()) {
    return 0;
  }
  sub_7F2F0();
  if (!v0)
  {
    swift_release();
    return 0;
  }
  sub_7F8B0();
  uint64_t v1 = sub_7F880();
  swift_release();
  return v1;
}

void sub_12110()
{
  sub_15258();
  uint64_t v121 = sub_7FBE0();
  sub_6D54();
  uint64_t v117 = v1;
  __chkstk_darwin(v2);
  sub_F67C();
  v123 = v3;
  sub_15378();
  uint64_t v104 = sub_7F010();
  sub_6D54();
  uint64_t v103 = v4;
  __chkstk_darwin(v5);
  sub_F67C();
  uint64_t v102 = v6;
  sub_15378();
  uint64_t v106 = sub_7EEB0();
  sub_6D54();
  uint64_t v105 = v7;
  __chkstk_darwin(v8);
  sub_15308();
  v100[1] = v9;
  sub_152AC();
  __chkstk_darwin(v10);
  sub_154F0();
  uint64_t v101 = v11;
  uint64_t v12 = sub_6A60(&qword_AC660);
  uint64_t v13 = sub_DC74(v12);
  __chkstk_darwin(v13);
  sub_15270(v14, v100[0]);
  __chkstk_darwin(v15);
  sub_154F0();
  uint64_t v114 = v16;
  uint64_t v119 = sub_7EED0();
  sub_6D54();
  v122 = v17;
  __chkstk_darwin(v18);
  sub_15308();
  uint64_t v107 = v19;
  sub_152AC();
  __chkstk_darwin(v20);
  sub_154F0();
  uint64_t v113 = v21;
  sub_15378();
  uint64_t v118 = sub_7EFA0();
  sub_6D54();
  uint64_t v110 = v22;
  __chkstk_darwin(v23);
  sub_152E8(v24, v100[0]);
  sub_7ED70();
  sub_6D54();
  uint64_t v115 = v26;
  uint64_t v116 = v25;
  __chkstk_darwin(v25);
  sub_F67C();
  uint64_t v120 = v27;
  uint64_t v28 = sub_15378();
  uint64_t v29 = type metadata accessor for HealthNLIntent(v28);
  uint64_t v30 = sub_DC74(v29);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_7F6B0();
  sub_6D54();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  sub_153AC();
  uint64_t v37 = sub_7ED20();
  sub_6D54();
  uint64_t v39 = v38;
  __chkstk_darwin(v40);
  sub_15308();
  uint64_t v109 = v41;
  sub_152AC();
  __chkstk_darwin(v42);
  v112 = (char *)v100 - v43;
  sub_152AC();
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)v100 - v45;
  uint64_t v47 = *(void (**)(void))(v39 + 16);
  sub_15480();
  v47();
  int v48 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v46, v37);
  if (v48 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v49 = sub_15430();
    v50(v49);
    sub_15294();
    v51();
    sub_15528();
    v52();
    sub_65640();
    sub_14188((uint64_t)v32, (void (*)(void))type metadata accessor for HealthNLIntent);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v0, v33);
LABEL_11:
    sub_15240();
    return;
  }
  if (v48 != enum case for Parse.uso(_:))
  {
    sub_7FBA0();
    sub_154D0();
    uint64_t v65 = v117;
    uint64_t v66 = v121;
    sub_15528();
    v67();
    sub_15480();
    v47();
    unint64_t v68 = sub_7FBD0();
    os_log_type_t v69 = sub_7FE30();
    int v70 = v69;
    v122 = v68;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      uint64_t v124 = v120;
      *(_DWORD *)uint64_t v71 = 136315138;
      unint64_t v68 = (v71 + 12);
      uint64_t v118 = v71 + 4;
      LODWORD(v119) = v70;
      sub_15480();
      v47();
      uint64_t v72 = sub_7FC60();
      uint64_t v74 = sub_1CDF0(v72, v73, &v124);
      sub_154BC(v74);
      sub_7FF60();
      swift_bridgeObjectRelease();
      uint64_t v75 = sub_152B8();
      ((void (*)(uint64_t))(v71 + 12))(v75);
      v76 = v122;
      _os_log_impl(&dword_0, v122, (os_log_type_t)v119, "Failed to find nlv3 or uso from %s", (uint8_t *)v71, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(void, uint64_t))(v65 + 8))(v123, v121);
    }
    else
    {
      uint64_t v82 = sub_152B8();
      ((void (*)(uint64_t))v68)(v82);

      (*(void (**)(void, uint64_t))(v65 + 8))(v123, v66);
    }
    ((void (*)(char *, uint64_t))v68)(v46, v37);
    goto LABEL_11;
  }
  uint64_t v53 = sub_15430();
  v54(v53);
  uint64_t v55 = v115;
  uint64_t v56 = v116;
  sub_15294();
  v57();
  uint64_t v58 = v113;
  sub_7ED60();
  uint64_t v59 = sub_7EEC0();
  uint64_t v60 = v122 + 1;
  isa = (void (*)(uint64_t, uint64_t))v122[1].isa;
  isa(v58, v119);
  uint64_t v62 = v114;
  sub_6BB98(v59, v114);
  swift_bridgeObjectRelease();
  uint64_t v63 = v118;
  if (sub_6B0C(v62, 1, v118) == 1)
  {
    sub_15408();
    v64();
    sub_140D4(v62, &qword_AC660);
    goto LABEL_11;
  }
  v122 = v60;
  uint64_t v77 = v110;
  sub_15294();
  v78();
  unint64_t v79 = sub_7F0F0();
  unint64_t v83 = v79;
  if (!(v79 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v79 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_14;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    sub_151A0();
    v80();
    sub_15408();
    v81();
    goto LABEL_11;
  }
  sub_15554();
  uint64_t v99 = sub_801C0();
  swift_bridgeObjectRelease();
  if (!v99) {
    goto LABEL_22;
  }
LABEL_14:
  if ((v83 & 0xC000000000000001) != 0)
  {
    sub_80040();
LABEL_17:
    swift_bridgeObjectRelease();
    sub_7F990();
    sub_7F960();
    swift_release();
    uint64_t v84 = v107;
    sub_7ED60();
    uint64_t v85 = sub_7EEC0();
    isa(v84, v119);
    uint64_t v86 = v108;
    sub_6BB98(v85, v108);
    swift_bridgeObjectRelease();
    if (sub_6B0C(v86, 1, v63) == 1)
    {
      sub_140D4(v86, &qword_AC660);
      swift_release();
      sub_151A0();
      v87();
      sub_15408();
      v88();
    }
    else
    {
      sub_7EF60();
      v123 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
      sub_151A0();
      v89();
      uint64_t v90 = v55;
      sub_7EFE0();
      sub_152A0();
      v91();
      uint64_t v92 = v105;
      uint64_t v93 = v101;
      uint64_t v94 = v106;
      sub_15294();
      v95();
      sub_12A7C();
      v122 = v96;
      uint64_t v98 = v97;
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v94);
      v123(v111, v118);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v120, v56);
      if (v98) {
        swift_bridgeObjectRelease();
      }
    }
    goto LABEL_11;
  }
  if (*(void *)((char *)&dword_10 + (v83 & 0xFFFFFFFFFFFFFF8)))
  {
    swift_retain();
    goto LABEL_17;
  }
  __break(1u);
}

void sub_12A7C()
{
  sub_15258();
  sub_7FA40();
  sub_6D54();
  __chkstk_darwin(v1);
  sub_15210();
  uint64_t v2 = sub_7F0D0();
  sub_6D54();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_15490();
  uint64_t v6 = sub_7EEA0();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v9 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    uint64_t v8 = v4 + 16;
    unint64_t v10 = v6 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v29 = *(void *)(v8 + 56);
    uint64_t v30 = v9;
    swift_bridgeObjectRetain();
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
    uint64_t v28 = v2;
    while (1)
    {
      v30(v0, v10, v2);
      sub_7F0C0();
      uint64_t v12 = sub_7FA30();
      uint64_t v14 = v13;
      sub_152A0();
      v15();
      BOOL v16 = v12 == 0x7974697669746361 && v14 == 0xEC000000656D614ELL;
      if (v16 || (sub_802B0() & 1) != 0) {
        break;
      }
      if (v12 == 0x4E74756F6B726F77 && v14 == 0xEB00000000656D61)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        uint64_t v17 = 2;
LABEL_9:
        uint64_t v18 = sub_7F0B0();
        uint64_t v20 = v19;
        sub_152A0();
        v21();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_13080(0, *((void *)v11 + 2) + 1, 1, (uint64_t)v11);
        }
        unint64_t v23 = *((void *)v11 + 2);
        unint64_t v22 = *((void *)v11 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v11 = sub_13080((char *)(v22 > 1), v23 + 1, 1, (uint64_t)v11);
        }
        *((void *)v11 + 2) = v23 + 1;
        uint64_t v24 = &v11[24 * v23];
        *((void *)v24 + 4) = v17;
        *((void *)v24 + 5) = v18;
        *((void *)v24 + 6) = v20;
        uint64_t v2 = v28;
        goto LABEL_14;
      }
      char v26 = sub_802B0();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_23;
      }
      sub_152A0();
      v27();
LABEL_14:
      v10 += v29;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = 1;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_25:
  uint64_t v31 = v11;
  swift_bridgeObjectRetain();
  sub_14270(&v31);
  swift_bridgeObjectRelease();
  if (*((void *)v31 + 2)) {
    swift_bridgeObjectRetain();
  }
  swift_release();
  sub_15240();
}

uint64_t sub_12DF0(uint64_t a1, uint64_t a2)
{
  sub_6A60(&qword_AC9C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_811A0;
  *(void *)(inited + 32) = 0x61576F54656D6974;
  *(void *)(inited + 40) = 0xEA00000000006B6CLL;
  *(void *)(inited + 48) = 0x75526F54656D6974;
  *(void *)(inited + 56) = 0xE90000000000006ELL;
  uint64_t v5 = sub_58250(inited);
  LOBYTE(a2) = sub_12EA4(a1, a2, v5);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_12EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_80350();
    sub_7FCC0();
    Swift::Int v6 = sub_80370();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_802B0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          BOOL v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_802B0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

void *sub_12FDC(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)sub_80190();
    __break(1u);
  }
  else if (a1)
  {
    sub_6A60(&qword_AC9A8);
    uint64_t result = (void *)sub_7FD70();
    result[2] = a1;
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_13080(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_6A60(&qword_AC9A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  BOOL v12 = v10 + 32;
  if (v5)
  {
    sub_138EC((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_134F4(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_13178(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_13208(a1, a2, a3, a4, &qword_AC9C0, (uint64_t (*)(void))&type metadata accessor for DisplayHint, (uint64_t (*)(void))&type metadata accessor for DisplayHint, (void (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_131C0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_13208(a1, a2, a3, a4, &qword_AC9B8, (uint64_t (*)(void))&type metadata accessor for SemanticValue, (uint64_t (*)(void))&type metadata accessor for SemanticValue, (void (*)(void))&type metadata accessor for SemanticValue);
}

uint64_t sub_13208(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_151C0();
    if (v15 != v16)
    {
      sub_1536C();
      if (v15)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_151B0();
    }
  }
  else
  {
    uint64_t v14 = a2;
  }
  uint64_t v17 = *(void *)(a4 + 16);
  if (v14 <= v17) {
    uint64_t v18 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v18 = v14;
  }
  if (!v18)
  {
    unint64_t v22 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_6A60(a5);
  uint64_t v19 = a6(0);
  sub_9C80(v19);
  uint64_t v21 = *(void *)(v20 + 72);
  unint64_t v22 = (void *)sub_15344();
  size_t v23 = j__malloc_size(v22);
  if (!v21 || (v23 - v8 == 0x8000000000000000 ? (BOOL v24 = v21 == -1) : (BOOL v24 = 0), v24))
  {
LABEL_23:
    sub_15140();
    uint64_t result = sub_80190();
    __break(1u);
    return result;
  }
  v22[2] = v17;
  v22[3] = 2 * ((uint64_t)(v23 - v8) / v21);
LABEL_18:
  uint64_t v25 = *(void *)(a6(0) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = (unint64_t)v22 + v26;
  if (a1)
  {
    sub_13A24(a4 + v26, v17, v27, a8);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_13614(0, v17, v27, a4, a7);
  }
  return (uint64_t)v22;
}

uint64_t sub_133EC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_13208(a1, a2, a3, a4, &qword_AC9D0, (uint64_t (*)(void))&type metadata accessor for TerminalIntentNode, (uint64_t (*)(void))&type metadata accessor for TerminalIntentNode, (void (*)(void))&type metadata accessor for TerminalIntentNode);
}

void sub_13434()
{
  sub_1551C();
  if (v4)
  {
    sub_151C0();
    if (v5 != v6)
    {
      sub_1536C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_151B0();
    }
  }
  sub_152D8();
  if (v3)
  {
    sub_6A60(&qword_AC9C8);
    uint64_t v7 = (char *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    sub_15468(v8);
  }
  else
  {
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v9 = v7 + 32;
  if (v1)
  {
    sub_13858((char *)(v0 + 32), v2, v9);
    *(void *)(v0 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_13760(0, v2, (unint64_t)v9, v0);
  }
}

uint64_t sub_134F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_6A60(&qword_AC9A8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_801D0();
  __break(1u);
  return result;
}

uint64_t sub_13614(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  sub_15140();
  uint64_t result = sub_801D0();
  __break(1u);
  return result;
}

uint64_t sub_13760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_801D0();
  __break(1u);
  return result;
}

char *sub_13858(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_801D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_138EC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_801D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_13988(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_801D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

void sub_13A24(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_15140();
    uint64_t v9 = sub_801D0();
    __break(1u);
_swift_arrayInitWithTakeBackToFront:
    _swift_arrayInitWithTakeBackToFront(v9);
    return;
  }
  if (a3 < a1 || (a4(0), sub_151D0(), a1 + *(void *)(v8 + 72) * a2 <= a3))
  {
    a4(0);
    uint64_t v10 = sub_15588();
    _swift_arrayInitWithTakeFrontToBack(v10);
  }
  else if (a3 != a1)
  {
    uint64_t v9 = sub_15588();
    goto _swift_arrayInitWithTakeBackToFront;
  }
}

char *sub_13B34(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_801D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_13BC4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_801D0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_13CA4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_801D0();
    __break(1u);
  }
  else
  {
    sub_6A60(&qword_AC9A8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_13DA8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_13DC0(a1, a2, a3, (void (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_13DC0(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0
    || ((a4(0), sub_151D0(), uint64_t v8 = *(void *)(v7 + 72) * a2, v9 = a3 + v8, v10 = a1 + v8, v9 > a1)
      ? (BOOL v11 = v10 > a3)
      : (BOOL v11 = 0),
        v11))
  {
    sub_15140();
    uint64_t result = sub_801D0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_13EBC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (BOOL v3 = a1 + 40 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_801D0();
    __break(1u);
  }
  else
  {
    sub_6A60(&qword_AC9E0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_13FC0(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_801D0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_14098(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_140B0(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_140D4(uint64_t a1, uint64_t *a2)
{
  sub_6A60(a2);
  sub_151D0();
  sub_152A0();
  v3();
  return a1;
}

uint64_t sub_14124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthNLIntent.HealthNLApp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_14188(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_151D0();
  sub_152A0();
  v3();
  return a1;
}

unint64_t sub_141DC()
{
  unint64_t result = qword_AC998;
  if (!qword_AC998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC998);
  }
  return result;
}

uint64_t sub_14228(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_14270(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1512C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_142E0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_142E0(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_80290(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_14928(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_125;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_12FDC(v3 / 2);
  uint64_t v90 = a1;
  uint64_t v91 = result;
  uint64_t v93 = v3;
  __dst = v6;
  if (v3 <= 0)
  {
    uint64_t v95 = (unint64_t *)&_swiftEmptyArrayStorage;
    unint64_t v29 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_91:
    if (v29 < 2)
    {
LABEL_102:
      uint64_t result = swift_bridgeObjectRelease();
      if (v93 >= -1)
      {
        *(void *)(v91 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_130;
    }
    uint64_t v83 = *v90;
    while (1)
    {
      unint64_t v84 = v29 - 2;
      if (v29 < 2) {
        break;
      }
      if (!v83) {
        goto LABEL_134;
      }
      uint64_t v85 = v95;
      int64_t v86 = v95[2 * v84 + 4];
      int64_t v87 = v95[2 * v29 + 3];
      uint64_t result = sub_149A8((char *)(v83 + 24 * v86), (char *)(v83 + 24 * v95[2 * v29 + 2]), v83 + 24 * v87, __dst);
      if (v1) {
        goto LABEL_87;
      }
      if (v87 < v86) {
        goto LABEL_120;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_14C40((uint64_t)v95);
        uint64_t v85 = (unint64_t *)result;
      }
      if (v84 >= v85[2]) {
        goto LABEL_121;
      }
      unint64_t v88 = &v85[2 * v84 + 4];
      *unint64_t v88 = v86;
      v88[1] = v87;
      unint64_t v89 = v85[2];
      if (v29 > v89) {
        goto LABEL_122;
      }
      uint64_t result = (uint64_t)memmove(&v85[2 * v29 + 2], &v85[2 * v29 + 4], 16 * (v89 - v29));
      uint64_t v95 = v85;
      v85[2] = v89 - 1;
      unint64_t v29 = v89 - 1;
      if (v89 <= 2) {
        goto LABEL_102;
      }
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return result;
  }
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v95 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v92 = v5;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 < v3)
    {
      uint64_t v10 = *(void *)(v8 + 24 * v7);
      uint64_t v11 = *(void *)(v8 + 24 * v9);
      Swift::Int v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        unint64_t v12 = (uint64_t *)(v8 + 48 + 24 * v9);
        uint64_t v13 = v10;
        while (1)
        {
          uint64_t v15 = *v12;
          v12 += 3;
          uint64_t v14 = v15;
          if (v10 < v11 == v15 >= v13) {
            break;
          }
          ++v7;
          uint64_t v13 = v14;
          if (v7 >= v3)
          {
            Swift::Int v7 = v3;
            break;
          }
        }
      }
      if (v10 < v11)
      {
        if (v7 < v9) {
          goto LABEL_127;
        }
        if (v9 < v7)
        {
          uint64_t v16 = 24 * v7;
          uint64_t v17 = 24 * v9;
          Swift::Int v18 = v7;
          Swift::Int v19 = v9;
          do
          {
            if (v19 != --v18)
            {
              if (!v8) {
                goto LABEL_133;
              }
              uint64_t v20 = v8 + v17;
              uint64_t v21 = v8 + v16;
              uint64_t v22 = *(void *)(v8 + v17 + 16);
              long long v23 = *(_OWORD *)(v8 + v17);
              uint64_t v24 = *(void *)(v8 + v16 - 8);
              *(_OWORD *)uint64_t v20 = *(_OWORD *)(v8 + v16 - 24);
              *(void *)(v20 + 16) = v24;
              *(_OWORD *)(v21 - 24) = v23;
              *(void *)(v21 - 8) = v22;
            }
            ++v19;
            v16 -= 24;
            v17 += 24;
          }
          while (v19 < v18);
        }
      }
    }
    if (v7 >= v3) {
      goto LABEL_26;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_124;
    }
    if (v7 - v9 >= v5) {
      goto LABEL_26;
    }
    Swift::Int v25 = v9 + v5;
    if (__OFADD__(v9, v5)) {
      goto LABEL_128;
    }
    if (v25 >= v3) {
      Swift::Int v25 = v3;
    }
    if (v25 < v9) {
      goto LABEL_129;
    }
    if (v7 == v25)
    {
LABEL_26:
      unint64_t v26 = (char *)v95;
    }
    else
    {
      uint64_t v77 = v8 - 24 + 24 * v7;
      unint64_t v26 = (char *)v95;
      do
      {
        uint64_t v78 = *(void *)(v8 + 24 * v7);
        Swift::Int v79 = v9;
        uint64_t v80 = v77;
        do
        {
          if (v78 >= *(void *)v80) {
            break;
          }
          if (!v8) {
            goto LABEL_131;
          }
          uint64_t v81 = *(void *)(v80 + 32);
          uint64_t v82 = *(void *)(v80 + 40);
          *(_OWORD *)(v80 + 24) = *(_OWORD *)v80;
          *(void *)(v80 + 40) = *(void *)(v80 + 16);
          *(void *)uint64_t v80 = v78;
          *(void *)(v80 + 8) = v81;
          *(void *)(v80 + 16) = v82;
          v80 -= 24;
          ++v79;
        }
        while (v7 != v79);
        ++v7;
        v77 += 24;
      }
      while (v7 != v25);
      Swift::Int v7 = v25;
    }
    if (v7 < v9) {
      goto LABEL_123;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_14B48(0, *((void *)v26 + 2) + 1, 1, v26);
      unint64_t v26 = (char *)result;
    }
    unint64_t v28 = *((void *)v26 + 2);
    unint64_t v27 = *((void *)v26 + 3);
    unint64_t v29 = v28 + 1;
    if (v28 >= v27 >> 1)
    {
      uint64_t result = (uint64_t)sub_14B48((char *)(v27 > 1), v28 + 1, 1, v26);
      unint64_t v26 = (char *)result;
    }
    *((void *)v26 + 2) = v29;
    uint64_t v30 = v26 + 32;
    uint64_t v31 = (Swift::Int *)&v26[16 * v28 + 32];
    *uint64_t v31 = v9;
    v31[1] = v7;
    uint64_t v95 = (unint64_t *)v26;
    if (v28) {
      break;
    }
    unint64_t v29 = 1;
LABEL_75:
    uint64_t v5 = v92;
    Swift::Int v3 = v93;
    if (v7 >= v93) {
      goto LABEL_91;
    }
  }
  while (1)
  {
    unint64_t v32 = v29 - 1;
    if (v29 >= 4)
    {
      uint64_t v37 = &v30[16 * v29];
      uint64_t v38 = *((void *)v37 - 8);
      uint64_t v39 = *((void *)v37 - 7);
      BOOL v43 = __OFSUB__(v39, v38);
      uint64_t v40 = v39 - v38;
      if (v43) {
        goto LABEL_108;
      }
      uint64_t v42 = *((void *)v37 - 6);
      uint64_t v41 = *((void *)v37 - 5);
      BOOL v43 = __OFSUB__(v41, v42);
      uint64_t v35 = v41 - v42;
      char v36 = v43;
      if (v43) {
        goto LABEL_109;
      }
      unint64_t v44 = v29 - 2;
      uint64_t v45 = &v30[16 * v29 - 32];
      uint64_t v47 = *(void *)v45;
      uint64_t v46 = *((void *)v45 + 1);
      BOOL v43 = __OFSUB__(v46, v47);
      uint64_t v48 = v46 - v47;
      if (v43) {
        goto LABEL_110;
      }
      BOOL v43 = __OFADD__(v35, v48);
      uint64_t v49 = v35 + v48;
      if (v43) {
        goto LABEL_112;
      }
      if (v49 >= v40)
      {
        uint64_t v67 = &v30[16 * v32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v43 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v43) {
          goto LABEL_118;
        }
        BOOL v60 = v35 < v70;
        goto LABEL_64;
      }
    }
    else
    {
      if (v29 != 3)
      {
        uint64_t v61 = *((void *)v26 + 4);
        uint64_t v62 = *((void *)v26 + 5);
        BOOL v43 = __OFSUB__(v62, v61);
        uint64_t v54 = v62 - v61;
        char v55 = v43;
        goto LABEL_58;
      }
      uint64_t v34 = *((void *)v26 + 4);
      uint64_t v33 = *((void *)v26 + 5);
      BOOL v43 = __OFSUB__(v33, v34);
      uint64_t v35 = v33 - v34;
      char v36 = v43;
    }
    if (v36) {
      goto LABEL_111;
    }
    unint64_t v44 = v29 - 2;
    uint64_t v50 = &v30[16 * v29 - 32];
    uint64_t v52 = *(void *)v50;
    uint64_t v51 = *((void *)v50 + 1);
    BOOL v53 = __OFSUB__(v51, v52);
    uint64_t v54 = v51 - v52;
    char v55 = v53;
    if (v53) {
      goto LABEL_113;
    }
    uint64_t v56 = &v30[16 * v32];
    uint64_t v58 = *(void *)v56;
    uint64_t v57 = *((void *)v56 + 1);
    BOOL v43 = __OFSUB__(v57, v58);
    uint64_t v59 = v57 - v58;
    if (v43) {
      goto LABEL_115;
    }
    if (__OFADD__(v54, v59)) {
      goto LABEL_117;
    }
    if (v54 + v59 >= v35)
    {
      BOOL v60 = v35 < v59;
LABEL_64:
      if (v60) {
        unint64_t v32 = v44;
      }
      goto LABEL_66;
    }
LABEL_58:
    if (v55) {
      goto LABEL_114;
    }
    uint64_t v63 = &v30[16 * v32];
    uint64_t v65 = *(void *)v63;
    uint64_t v64 = *((void *)v63 + 1);
    BOOL v43 = __OFSUB__(v64, v65);
    uint64_t v66 = v64 - v65;
    if (v43) {
      goto LABEL_116;
    }
    if (v66 < v54) {
      goto LABEL_75;
    }
LABEL_66:
    unint64_t v71 = v32 - 1;
    if (v32 - 1 >= v29)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v8) {
      goto LABEL_132;
    }
    uint64_t v72 = &v30[16 * v71];
    uint64_t v73 = *(void *)v72;
    uint64_t v74 = &v30[16 * v32];
    uint64_t v75 = *((void *)v74 + 1);
    uint64_t result = sub_149A8((char *)(v8 + 24 * *(void *)v72), (char *)(v8 + 24 * *(void *)v74), v8 + 24 * v75, __dst);
    if (v1) {
      break;
    }
    if (v75 < v73) {
      goto LABEL_105;
    }
    if (v32 > v95[2]) {
      goto LABEL_106;
    }
    *(void *)uint64_t v72 = v73;
    *(void *)&v30[16 * v71 + 8] = v75;
    unint64_t v76 = v95[2];
    if (v32 >= v76) {
      goto LABEL_107;
    }
    unint64_t v26 = (char *)v95;
    unint64_t v29 = v76 - 1;
    uint64_t result = (uint64_t)memmove(&v30[16 * v32], v74 + 16, 16 * (v76 - 1 - v32));
    v95[2] = v76 - 1;
    if (v76 <= 2) {
      goto LABEL_75;
    }
  }
LABEL_87:
  uint64_t result = swift_bridgeObjectRelease();
  if (v93 < -1) {
    goto LABEL_126;
  }
  *(void *)(v91 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_14928(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 24 * a3 - 24;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 24 * a3);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        if (v6 >= *(void *)v8) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = *(void *)(v8 + 32);
        uint64_t v10 = *(void *)(v8 + 40);
        *(_OWORD *)(v8 + 24) = *(_OWORD *)v8;
        *(void *)(v8 + 40) = *(void *)(v8 + 16);
        *(void *)uint64_t v8 = v6;
        *(void *)(v8 + 8) = v9;
        *(void *)(v8 + 16) = v10;
        v8 -= 24;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 24;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_149A8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  if (v9 >= v11)
  {
    sub_138EC(a2, (uint64_t)(a3 - (void)a2) / 24, __dst);
    unint64_t v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_39;
    }
    unint64_t v19 = a3 - 24;
    while (1)
    {
      uint64_t v20 = (char *)(v19 + 24);
      uint64_t v21 = v6 - 24;
      if (*((void *)v12 - 3) >= *((void *)v6 - 3))
      {
        BOOL v23 = v20 != v12 || v19 >= (unint64_t)v12;
        uint64_t v21 = v12 - 24;
        v12 -= 24;
        if (!v23) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v22 = v20 != v6 || v19 >= (unint64_t)v6;
        v6 -= 24;
        if (!v22) {
          goto LABEL_35;
        }
      }
      long long v24 = *(_OWORD *)v21;
      *(void *)(v19 + 16) = *((void *)v21 + 2);
      *(_OWORD *)unint64_t v19 = v24;
LABEL_35:
      v19 -= 24;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_138EC(__src, (a2 - __src) / 24, __dst);
  unint64_t v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (*(void *)v6 >= *(void *)v4)
    {
      uint64_t v14 = v4;
      BOOL v15 = v7 == v4;
      v4 += 24;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    uint64_t v14 = v6;
    BOOL v15 = v7 == v6;
    v6 += 24;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    long long v16 = *(_OWORD *)v14;
    *((void *)v7 + 2) = *((void *)v14 + 2);
    *(_OWORD *)uint64_t v7 = v16;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_138EC(v4, (v12 - v4) / 24, v6);
  return 1;
}

char *sub_14B48(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_6A60(&qword_AC9B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_14C40(uint64_t a1)
{
  return sub_14B48(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_14C54()
{
  sub_1551C();
  if (v3)
  {
    sub_151C0();
    if (v4 != v5)
    {
      sub_1536C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_151B0();
    }
  }
  sub_152D8();
  if (v2)
  {
    sub_6A60(&qword_AC9C8);
    unint64_t v6 = (const void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    sub_15468(v7);
  }
  uint64_t v8 = (char *)sub_15448();
  if (v1)
  {
    sub_13858(v8, v9, v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_13BC4((unint64_t)v8, v9, (unint64_t)v10);
  }
  swift_release();
}

char *sub_14D00(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_6A60(&qword_AC9A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_138EC(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_13CA4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_14DEC()
{
}

void sub_14E24()
{
}

void sub_14E5C()
{
  sub_15258();
  char v4 = v3;
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11;
  if (v13)
  {
    sub_151C0();
    if (v15 != v16)
    {
      sub_1536C();
      if (v15)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_151B0();
    }
  }
  else
  {
    uint64_t v14 = v1;
  }
  uint64_t v17 = *(void *)(v10 + 16);
  if (v14 <= v17) {
    uint64_t v18 = *(void *)(v10 + 16);
  }
  else {
    uint64_t v18 = v14;
  }
  if (!v18)
  {
    BOOL v22 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_6A60(v2);
  uint64_t v19 = v8(0);
  sub_9C80(v19);
  uint64_t v21 = *(void *)(v20 + 72);
  BOOL v22 = (void *)sub_15344();
  size_t v23 = j__malloc_size(v22);
  if (!v21)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v23 - v0 == 0x8000000000000000 && v21 == -1) {
    goto LABEL_23;
  }
  v22[2] = v17;
  v22[3] = 2 * ((uint64_t)(v23 - v0) / v21);
LABEL_18:
  uint64_t v25 = *(void *)(v8(0) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = (unint64_t)v22 + v26;
  unint64_t v28 = v10 + v26;
  if (v12)
  {
    sub_13A24(v28, v17, v27, v6);
    *(void *)(v10 + 16) = 0;
  }
  else
  {
    sub_13DC0(v28, v17, v27, v4);
  }
  swift_release();
  sub_15240();
}

void sub_14FB8()
{
  sub_1551C();
  if (v4)
  {
    sub_151C0();
    if (v5 != v6)
    {
      sub_1536C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_151B0();
    }
  }
  sub_152D8();
  if (v3)
  {
    sub_6A60(&qword_AC9D8);
    uint64_t v7 = (void *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 40);
  }
  uint64_t v9 = (char *)sub_15448();
  if (v1)
  {
    sub_13988(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_13EBC((unint64_t)v9, v10, (unint64_t)v11);
  }
  swift_release();
}

void sub_1507C()
{
  sub_1551C();
  if (v4)
  {
    sub_151C0();
    if (v5 != v6)
    {
      sub_1536C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_151B0();
    }
  }
  sub_152D8();
  if (v3)
  {
    sub_6A60(&qword_AC9E8);
    uint64_t v7 = (void *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * v8 - 64;
  }
  uint64_t v9 = (char *)sub_15448();
  if (v1)
  {
    sub_13B34(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_13FC0(v9, v10, v11);
  }
  swift_release();
}

char *sub_1512C(uint64_t a1)
{
  return sub_14D00(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_15154()
{
  *(void *)(v4 - 112) = v1;
  *(void *)(v4 - 104) = v0;
  *(void *)(v4 - 128) = v2;
  *(void *)(v4 - 120) = v3;
  *(void *)(v4 - 144) = 0;
  *(void *)(v4 - 136) = 0xE000000000000000;
  return sub_7FFA0();
}

uint64_t sub_151E0()
{
  return v0;
}

uint64_t sub_151F8()
{
  return v0;
}

void sub_15270(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 264) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_152B8()
{
  return v0;
}

uint64_t sub_152E8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1531C()
{
  return sub_7FFB0();
}

uint64_t sub_15344()
{
  return swift_allocObject();
}

uint64_t sub_15378()
{
  return 0;
}

uint64_t sub_15384()
{
  return sub_7F300();
}

uint64_t sub_153AC()
{
  return 0;
}

uint64_t sub_153C8()
{
  return sub_7F310();
}

uint64_t sub_153F0()
{
  return sub_14188(v0, v1);
}

uint64_t sub_15418()
{
  return v0;
}

uint64_t sub_15430()
{
  return v0;
}

uint64_t sub_15448()
{
  return v0 + 32;
}

uint64_t sub_15468(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / 16);
  return result;
}

void sub_154A8()
{
  *(void *)(v1 - 112) = *(void *)(v1 - 112);
  *(void *)(v1 - 104) = v0;
}

uint64_t sub_154BC(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t sub_154D0()
{
  return swift_beginAccess();
}

uint64_t sub_154FC()
{
  return sub_7F310();
}

uint64_t sub_15534()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_15554()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_15588()
{
  return v0;
}

uint64_t sub_1559C(char a1)
{
  uint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      return 7629139;
    case 2:
      return 0x7370657453;
    case 3:
      return 0x646E617453;
    case 4:
      return 1702260557;
    case 5:
      return 1802264919;
    case 6:
      return 1634168665;
    case 7:
      uint64_t v3 = 1668178244;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
    case 8:
      return 0x61727473736F7243;
    case 9:
      return 0x63697470696C6C45;
    case 10:
      uint64_t v4 = 1702326098;
      return v4 & 0xFFFF0000FFFFFFFFLL | 0x7200000000;
    case 11:
      uint64_t v3 = 1818458435;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
    case 12:
      return 0x737269617453;
    case 13:
      uint64_t v4 = 1701344335;
      return v4 & 0xFFFF0000FFFFFFFFLL | 0x7200000000;
    case 14:
      return 0x7572726F6F646E49;
    case 15:
      return 0x7963726F6F646E49;
    case 16:
      return 0x6177726F6F646E49;
    case 17:
      uint64_t v5 = 0x696372657845;
      return v5 & 0xFFFFFFFFFFFFLL | 0x6573000000000000;
    case 18:
      return 1835628371;
    case 19:
      return 1701538120;
    case 20:
      return result;
    case 21:
      return 0xD000000000000010;
    case 22:
    case 33:
    case 81:
      return 0xD000000000000012;
    case 23:
      return 0x79726568637241;
    case 24:
      return 0x6F746E696D646142;
    case 25:
      uint64_t v3 = 1920098626;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
    case 26:
      uint64_t v6 = 1702060354;
      goto LABEL_73;
    case 27:
      uint64_t v7 = 0x74656B736142;
      goto LABEL_101;
    case 28:
      unsigned int v8 = 1819766594;
      return v8 | 0x676E6900000000;
    case 29:
      return 0x676E69786F42;
    case 30:
      return 0x676E69626D696C43;
    case 31:
      unsigned int v9 = 1701998403;
      return v9 | 0x6961725400000000;
    case 32:
      return 0x74656B63697243;
    case 34:
      unsigned int v8 = 1819440451;
      return v8 | 0x676E6900000000;
    case 35:
      unsigned int v10 = 1668507972;
      return v10 | 0x726F705300000000;
    case 36:
      unint64_t v11 = 0x69686E776F44;
      return v11 & 0xFFFFFFFFFFFFLL | 0x6C6C000000000000;
    case 37:
      return 0xD000000000000010;
    case 38:
      unsigned int v8 = 1668179270;
      return v8 | 0x676E6900000000;
    case 39:
      unsigned int v8 = 1752394054;
      return v8 | 0x676E6900000000;
    case 40:
      return 0x477373656E746946;
    case 41:
      return 0x6C69626978656C46;
    case 42:
      return 0xD00000000000001ALL;
    case 43:
      return 1718382407;
    case 44:
      return 0x697473616E6D7947;
    case 45:
      uint64_t v6 = 1684955464;
      goto LABEL_73;
    case 46:
      return 0x6C637943646E6148;
    case 47:
      return 0x79656B636F48;
    case 48:
      unsigned int v8 = 1953396040;
      return v8 | 0x676E6900000000;
    case 49:
      return 0x65706F52706D754ALL;
    case 50:
      return 0x69786F626B63694BLL;
    case 51:
      uint64_t v5 = 0x736F7263614CLL;
      return v5 & 0xFFFFFFFFFFFFLL | 0x6573000000000000;
    case 52:
      return 0x416C61697472614DLL;
    case 53:
      return 0x42646E41646E694DLL;
    case 54:
      uint64_t v12 = 0x43646578694DLL;
      return v12 & 0xFFFFFFFFFFFFLL | 0x7261000000000000;
    case 55:
      return 0x7053656C64646150;
    case 56:
      return 0x736574616C6950;
    case 57:
      return 2036427856;
    case 58:
      return 0xD000000000000016;
    case 59:
      return 0x6274657571636152;
    case 60:
      return 0x7962677552;
    case 61:
      unsigned int v8 = 1818845523;
      return v8 | 0x676E6900000000;
    case 62:
      unsigned int v13 = 1952541523;
      return v13 | 0x53676E6900000000;
    case 63:
      uint64_t v12 = 0x6F62776F6E53;
      return v12 & 0xFFFFFFFFFFFFLL | 0x7261000000000000;
    case 64:
      unsigned int v10 = 2003791443;
      return v10 | 0x726F705300000000;
    case 65:
      return 0x726563636F53;
    case 66:
      uint64_t v6 = 1952870227;
LABEL_73:
      unint64_t v11 = v6 & 0xFFFF0000FFFFFFFFLL | 0x616200000000;
      return v11 & 0xFFFFFFFFFFFFLL | 0x6C6C000000000000;
    case 67:
      return 0x687361757153;
    case 68:
      return 0x6C43737269617453;
    case 69:
      unsigned int v9 = 1885697107;
      return v9 | 0x6961725400000000;
    case 70:
      unsigned int v13 = 1718777171;
      return v13 | 0x53676E6900000000;
    case 71:
      return 0x6E6554656C626154;
    case 72:
      return 0x696843696154;
    case 73:
      return 0x73696E6E6554;
    case 74:
      return 0x646E416B63617254;
    case 75:
      return 0xD00000000000001BLL;
    case 76:
      uint64_t v7 = 0x79656C6C6F56;
      goto LABEL_101;
    case 77:
      return 0x7469467265746157;
    case 78:
      return 0x6C6F507265746157;
    case 79:
      return 0x6F70537265746157;
    case 80:
      return 0x6E696C7473657257;
    case 82:
      return 0xD000000000000011;
    case 83:
      uint64_t v14 = 0x6F6964726143;
      goto LABEL_98;
    case 84:
      uint64_t v14 = 0x6C6169636F53;
LABEL_98:
      uint64_t result = v14 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 85:
      uint64_t v7 = 0x656C6B636950;
LABEL_101:
      uint64_t result = v7 & 0xFFFFFFFFFFFFLL | 0x6162000000000000;
      break;
    case 86:
      uint64_t result = 0x6E776F646C6F6F43;
      break;
    default:
      uint64_t result = 7238994;
      break;
  }
  return result;
}

unint64_t sub_15EFC(char a1)
{
  sub_80020(42);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = sub_1559C(a1);
  sub_7FCD0(v3);
  swift_bridgeObjectRelease();
  return 0xD000000000000028;
}

uint64_t sub_15F7C()
{
  unint64_t v0 = sub_802D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x57) {
    return 87;
  }
  else {
    return v0;
  }
}

uint64_t sub_15FD0(char a1)
{
  uint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      return 7629171;
    case 2:
      return 0x7370657473;
    case 3:
      return 0x646E617473;
    case 4:
      return 1702260589;
    case 5:
      return 1802264951;
    case 6:
      return 1634168697;
    case 7:
      uint64_t v3 = 1668178276;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
    case 8:
      return 0x61727473736F7263;
    case 9:
      return 0x63697470696C6C65;
    case 10:
      uint64_t v4 = 1702326130;
      return v4 & 0xFFFF0000FFFFFFFFLL | 0x7200000000;
    case 11:
      uint64_t v3 = 1818458467;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
    case 12:
      return 0x737269617473;
    case 13:
      uint64_t v4 = 1701344367;
      return v4 & 0xFFFF0000FFFFFFFFLL | 0x7200000000;
    case 14:
      return 0x7572726F6F646E69;
    case 15:
      return 0x7963726F6F646E69;
    case 16:
      return 0x6177726F6F646E69;
    case 17:
      uint64_t v5 = 0x696372657865;
      return v5 & 0xFFFFFFFFFFFFLL | 0x6573000000000000;
    case 18:
      return 1835628403;
    case 19:
      return 1701538152;
    case 20:
      return result;
    case 21:
      return 0xD000000000000010;
    case 22:
    case 33:
    case 81:
      return 0xD000000000000012;
    case 23:
      return 0x79726568637261;
    case 24:
      return 0x6F746E696D646162;
    case 25:
      uint64_t v3 = 1920098658;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
    case 26:
      uint64_t v6 = 1702060386;
      goto LABEL_73;
    case 27:
      uint64_t v7 = 0x74656B736162;
      goto LABEL_102;
    case 28:
      unsigned int v8 = 1819766626;
      return v8 | 0x676E6900000000;
    case 29:
      return 0x676E69786F62;
    case 30:
      return 0x676E69626D696C63;
    case 31:
      unsigned int v9 = 1701998435;
      return v9 | 0x6961727400000000;
    case 32:
      return 0x74656B63697263;
    case 34:
      unsigned int v8 = 1819440483;
      return v8 | 0x676E6900000000;
    case 35:
      unsigned int v10 = 1668508004;
      return v10 | 0x726F707300000000;
    case 36:
      unint64_t v11 = 0x69686E776F64;
      return v11 & 0xFFFFFFFFFFFFLL | 0x6C6C000000000000;
    case 37:
      return 0xD000000000000010;
    case 38:
      unsigned int v8 = 1668179302;
      return v8 | 0x676E6900000000;
    case 39:
      unsigned int v8 = 1752394086;
      return v8 | 0x676E6900000000;
    case 40:
      return 0x677373656E746966;
    case 41:
      return 0x6C69626978656C66;
    case 42:
      return 0xD00000000000001ALL;
    case 43:
      return 1718382439;
    case 44:
      return 0x697473616E6D7967;
    case 45:
      uint64_t v6 = 1684955496;
      goto LABEL_73;
    case 46:
      uint64_t v12 = 0x7963646E6168;
      return v12 & 0xFFFFFFFFFFFFLL | 0x6C63000000000000;
    case 47:
      return 0x79656B636F68;
    case 48:
      unsigned int v8 = 1953396072;
      return v8 | 0x676E6900000000;
    case 49:
      return 0x65706F72706D756ALL;
    case 50:
      return 0x69786F626B63696BLL;
    case 51:
      uint64_t v5 = 0x736F7263616CLL;
      return v5 & 0xFFFFFFFFFFFFLL | 0x6573000000000000;
    case 52:
      return 0x616C61697472616DLL;
    case 53:
      return 0x62646E61646E696DLL;
    case 54:
      uint64_t v13 = 0x63646578696DLL;
      return v13 & 0xFFFFFFFFFFFFLL | 0x7261000000000000;
    case 55:
      return 0x7073656C64646170;
    case 56:
      return 0x736574616C6970;
    case 57:
      return 2036427888;
    case 58:
      return 0xD000000000000016;
    case 59:
      return 0x6274657571636172;
    case 60:
      return 0x7962677572;
    case 61:
      unsigned int v8 = 1818845555;
      return v8 | 0x676E6900000000;
    case 62:
      unsigned int v14 = 1952541555;
      return v14 | 0x73676E6900000000;
    case 63:
      uint64_t v13 = 0x6F62776F6E73;
      return v13 & 0xFFFFFFFFFFFFLL | 0x7261000000000000;
    case 64:
      unsigned int v10 = 2003791475;
      return v10 | 0x726F707300000000;
    case 65:
      return 0x726563636F73;
    case 66:
      uint64_t v6 = 1952870259;
LABEL_73:
      unint64_t v11 = v6 & 0xFFFF0000FFFFFFFFLL | 0x616200000000;
      return v11 & 0xFFFFFFFFFFFFLL | 0x6C6C000000000000;
    case 67:
      return 0x687361757173;
    case 68:
      uint64_t v12 = 0x737269617473;
      return v12 & 0xFFFFFFFFFFFFLL | 0x6C63000000000000;
    case 69:
      unsigned int v9 = 1885697139;
      return v9 | 0x6961727400000000;
    case 70:
      unsigned int v14 = 1718777203;
      return v14 | 0x73676E6900000000;
    case 71:
      return 0x6E6574656C626174;
    case 72:
      return 0x696863696174;
    case 73:
      return 0x73696E6E6574;
    case 74:
      return 0x646E616B63617274;
    case 75:
      return 0xD000000000000019;
    case 76:
      uint64_t v7 = 0x79656C6C6F76;
      goto LABEL_102;
    case 77:
      return 0x7469667265746177;
    case 78:
      return 0x6C6F707265746177;
    case 79:
      return 0x6F70737265746177;
    case 80:
      return 0x6E696C7473657277;
    case 82:
      return 0xD000000000000011;
    case 83:
      uint64_t v15 = 0x6F6964726163;
      goto LABEL_99;
    case 84:
      uint64_t v15 = 0x6C6169636F73;
LABEL_99:
      uint64_t result = v15 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 85:
      uint64_t v7 = 0x656C6B636950;
LABEL_102:
      uint64_t result = v7 & 0xFFFFFFFFFFFFLL | 0x6162000000000000;
      break;
    case 86:
      uint64_t result = 0x6E776F646C6F6F43;
      break;
    default:
      uint64_t result = 7239026;
      break;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HealthActivity(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xAA)
  {
    if (a2 + 86 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 86) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 87;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x57;
  int v5 = v6 - 87;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthActivity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 86 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 86) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xAA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xA9)
  {
    unsigned int v6 = ((a2 - 170) >> 8) + 1;
    *uint64_t result = a2 + 86;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 86;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthActivity()
{
  return &type metadata for HealthActivity;
}

unint64_t sub_16ABC()
{
  unint64_t result = qword_AC9F8;
  if (!qword_AC9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AC9F8);
  }
  return result;
}

uint64_t sub_16B08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_65480(*a1, *a2);
}

Swift::Int sub_16B14()
{
  return sub_DF04(*v0);
}

uint64_t sub_16B1C(uint64_t a1)
{
  return sub_E254(a1, *v1);
}

Swift::Int sub_16B24(uint64_t a1)
{
  return sub_E4FC(a1, *v1);
}

uint64_t sub_16B2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_15F7C();
  *a1 = result;
  return result;
}

uint64_t sub_16B5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_15FD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_16B88(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_16C90();
  unint64_t v5 = sub_16CDC();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_16BF4()
{
  unint64_t result = qword_ACA00;
  if (!qword_ACA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ACA00);
  }
  return result;
}

unint64_t sub_16C44()
{
  unint64_t result = qword_ACA08;
  if (!qword_ACA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ACA08);
  }
  return result;
}

unint64_t sub_16C90()
{
  unint64_t result = qword_ACA10;
  if (!qword_ACA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ACA10);
  }
  return result;
}

unint64_t sub_16CDC()
{
  unint64_t result = qword_ACA18;
  if (!qword_ACA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ACA18);
  }
  return result;
}

uint64_t sub_16D28@<X0>(void *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v4 = sub_7E730();
  swift_allocObject();
  uint64_t v5 = sub_7E720();
  a1[6] = v4;
  a1[7] = &protocol witness table for ResponseFactory;
  a1[3] = v5;
  uint64_t result = sub_7FC10();
  *a1 = 0xD000000000000014;
  a1[1] = 0x8000000000088DA0;
  a1[2] = v3;
  a1[8] = result;
  return result;
}

uint64_t type metadata accessor for StartWorkoutContinueInAppStrategy()
{
  uint64_t result = qword_ACA48;
  if (!qword_ACA48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_16E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t type metadata accessor for WorkoutsNeedsValueStrategy()
{
  return sub_9C4C();
}

uint64_t sub_16E8C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v126 = a8;
  v127 = a7;
  uint64_t v124 = a9;
  uint64_t v118 = sub_7E7A0();
  sub_7FF40();
  sub_10C00(&qword_ACBB0);
  sub_80390();
  sub_6D54();
  uint64_t v128 = v14;
  uint64_t v129 = v13;
  __chkstk_darwin(v13);
  v125 = (uint64_t *)((char *)&v117 - v15);
  sub_7FBE0();
  sub_6D54();
  uint64_t v130 = v17;
  uint64_t v131 = v16;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  size_t v23 = (char *)&v117 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v121 = (char *)&v117 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  __chkstk_darwin(v26);
  unint64_t v28 = (uint64_t *)((char *)&v117 - v27);
  uint64_t v29 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v29 - 8);
  sub_F67C();
  uint64_t v120 = v30;
  uint64_t v31 = sub_7ED20();
  sub_6D54();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_755C();
  uint64_t v37 = v36 - v35;
  uint64_t v119 = sub_7F6B0();
  sub_6D54();
  v123 = v38;
  __chkstk_darwin(v39);
  sub_F67C();
  uint64_t v122 = v40;
  swift_bridgeObjectRetain();
  char v41 = sub_50760(a3, a4);
  if (v41 == 5)
  {
    uint64_t v45 = (void *)type metadata accessor for HealthFlowError();
    sub_18CB0();
    uint64_t v46 = sub_E934(2);
    sub_7FBA0();
    sub_18C20();
    uint64_t v47 = v130;
    uint64_t v48 = v131;
    sub_15528();
    v49();
    swift_retain_n();
    uint64_t v50 = sub_7FBD0();
    os_log_type_t v51 = sub_7FE30();
    if (!os_log_type_enabled(v50, v51))
    {

      sub_18C98();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v48);
      goto LABEL_14;
    }
    uint64_t v52 = swift_slowAlloc();
    sub_18C58();
    v123 = v45;
    v132[0] = sub_18C70();
    *(_DWORD *)uint64_t v52 = 136315394;
    uint64_t v53 = sub_803E0();
    uint64_t v133 = sub_1CDF0(v53, v54, v132);
    sub_7FF60();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2112;
    sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    sub_18BEC();
    *char v55 = v46;
    swift_retain();
    uint64_t v56 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v133 = v56;
    sub_7FF60();
    void *v45 = v56;
    sub_18C98();
    _os_log_impl(&dword_0, v50, v51, "%s NeedsValueStrategy: %@", (uint8_t *)v52, 0x16u);
    sub_6A60(&qword_AC3D0);
    sub_18C04();
    sub_9CB0();
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

LABEL_9:
    sub_152A0();
    v73();
LABEL_14:
    uint64_t v89 = v128;
    uint64_t v88 = v129;
    uint64_t v90 = v127;
    uint64_t v91 = v125;
    sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v92 = sub_18BEC();
    *uint64_t v93 = v46;
    *uint64_t v91 = v92;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v90(v91);
    swift_release();
    uint64_t v94 = *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8);
    uint64_t v95 = (uint64_t)v91;
    uint64_t v96 = v88;
    return v94(v95, v96);
  }
  if (v41)
  {
    char v57 = v41;
    uint64_t v58 = type metadata accessor for HealthFlowError();
    sub_18CB0();
    uint64_t v46 = sub_E934(2);
    sub_7FBA0();
    sub_18C20();
    uint64_t v59 = v130;
    uint64_t v60 = v131;
    sub_15528();
    v61();
    swift_retain_n();
    uint64_t v62 = sub_7FBD0();
    os_log_type_t v63 = sub_7FE30();
    if (!os_log_type_enabled(v62, v63))
    {

      sub_18C98();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v23, v60);
      goto LABEL_14;
    }
    uint64_t v64 = swift_slowAlloc();
    uint64_t v65 = sub_18C58();
    v123 = (void *)v58;
    uint64_t v66 = (void *)v65;
    uint64_t v122 = swift_slowAlloc();
    v132[0] = v122;
    *(_DWORD *)uint64_t v64 = 136315650;
    uint64_t v67 = sub_803E0();
    uint64_t v133 = sub_1CDF0(v67, v68, v132);
    sub_18C3C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2080;
    unint64_t v69 = sub_507AC(v57);
    uint64_t v133 = sub_1CDF0(v69, v70, v132);
    sub_18C3C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 22) = 2112;
    sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    sub_18BEC();
    *unint64_t v71 = v46;
    swift_retain();
    uint64_t v72 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v133 = v72;
    sub_18C3C();
    *uint64_t v66 = v72;
    sub_18C98();
    _os_log_impl(&dword_0, v62, v63, "%s NeedsValueStrategy: Slot - %s %@", (uint8_t *)v64, 0x20u);
    sub_6A60(&qword_AC3D0);
    sub_18C04();
    sub_9CB0();
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    goto LABEL_9;
  }
  sub_7ECD0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v33 + 88))(v37, v31) != enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v31);
    uint64_t v74 = type metadata accessor for HealthFlowError();
    sub_18CB0();
    uint64_t v75 = sub_E934(0);
    sub_7FBA0();
    sub_18C20();
    uint64_t v76 = v130;
    uint64_t v77 = v131;
    uint64_t v78 = v121;
    sub_15528();
    v79();
    swift_retain_n();
    uint64_t v80 = sub_7FBD0();
    os_log_type_t v81 = sub_7FE30();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = swift_slowAlloc();
      sub_18C58();
      uint64_t v83 = sub_18C70();
      v123 = (void *)v74;
      v132[0] = v83;
      *(_DWORD *)uint64_t v82 = 136315394;
      uint64_t v84 = sub_803E0();
      uint64_t v133 = sub_1CDF0(v84, v85, v132);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 12) = 2112;
      sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *int64_t v86 = v75;
      swift_retain();
      uint64_t v87 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v133 = v87;
      sub_7FF60();
      *unint64_t v28 = v87;
      swift_release_n();
      _os_log_impl(&dword_0, v80, v81, "%s NeedsValueStrategy: %@", (uint8_t *)v82, 0x16u);
      sub_6A60(&qword_AC3D0);
      sub_18C04();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(char *, uint64_t))(v76 + 8))(v121, v131);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v77);
    }
    sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v98 = sub_18BEC();
    *uint64_t v99 = v75;
    uint64_t v100 = v125;
    uint64_t *v125 = v98;
    sub_18C8C();
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v127(v100);
    swift_release();
    uint64_t v95 = sub_18C8C();
    return v94(v95, v96);
  }
  (*(void (**)(uint64_t, uint64_t))(v33 + 96))(v37, v31);
  ((void (*)(uint64_t, uint64_t, uint64_t))v123[4])(v122, v37, v119);
  uint64_t v42 = v120;
  sub_15528();
  v43();
  uint64_t v44 = v124;
  uint64_t v101 = (void *)sub_3F540(v124, v124, a11);
  uint64_t v102 = (*(uint64_t (**)(uint64_t, uint64_t))(a11 + 24))(v44, a11);
  v134[3] = sub_6A60(&qword_ACBC0);
  v134[0] = v102;
  sub_7FBA0();
  swift_beginAccess();
  uint64_t v103 = v130;
  uint64_t v104 = v131;
  sub_15528();
  v105();
  uint64_t v106 = v101;
  uint64_t v107 = sub_7FBD0();
  os_log_type_t v108 = sub_7FE20();
  if (os_log_type_enabled(v107, v108))
  {
    uint64_t v110 = (uint8_t *)swift_slowAlloc();
    uint64_t v111 = (void *)sub_18C58();
    *(_DWORD *)uint64_t v110 = 138412290;
    v132[0] = (uint64_t)v106;
    v112 = v106;
    uint64_t v42 = v120;
    sub_7FF60();
    *uint64_t v111 = v106;

    uint64_t v104 = v131;
    _os_log_impl(&dword_0, v107, v108, "Updated intent after prompting for value: %@", v110, 0xCu);
    sub_6A60(&qword_AC3D0);
    swift_arrayDestroy();
    uint64_t v103 = v130;
    sub_9CB0();
    sub_9CB0();
  }
  else
  {

    uint64_t v107 = v106;
  }

  (*(void (**)(uint64_t *, uint64_t))(v103 + 8))(v28, v104);
  sub_18B8C((uint64_t)v134, (uint64_t)v132);
  uint64_t v113 = v106;
  uint64_t v114 = (uint64_t)v125;
  sub_7E790();
  sub_9B2C(v114, 0, 1, v118);
  swift_storeEnumTagMultiPayload();
  v127((uint64_t *)v114);

  sub_152A0();
  v115();
  sub_F314(v42);
  sub_152A0();
  v116();
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v134);
}

uint64_t sub_17D68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void), uint64_t a7, void (*a8)(void))
{
  uint64_t v61 = a8;
  uint64_t v12 = sub_7FBE0();
  sub_6D54();
  *(void *)&long long v62 = v13;
  __chkstk_darwin(v14);
  sub_755C();
  sub_7E760();
  sub_6D54();
  uint64_t v56 = v16;
  uint64_t v57 = v15;
  __chkstk_darwin(v15);
  sub_F67C();
  uint64_t v55 = v17;
  sub_7F870();
  sub_6D54();
  uint64_t v58 = v18;
  __chkstk_darwin(v19);
  sub_755C();
  uint64_t v59 = sub_6A60((uint64_t *)&unk_AF440);
  uint64_t v20 = __chkstk_darwin(v59);
  uint64_t v22 = (uint64_t *)((char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  uint64_t v24 = (uint64_t *)((char *)&v54 - v23);
  swift_bridgeObjectRetain();
  char v25 = sub_50760(a3, a4);
  if (v25 == 5)
  {
    type metadata accessor for HealthFlowError();
    sub_18CB0();
    uint64_t v26 = sub_E934(2);
    sub_7FBA0();
    swift_beginAccess();
    sub_18C8C();
    uint64_t v59 = v12;
    sub_15528();
    v27();
    swift_retain_n();
    unint64_t v28 = sub_7FBD0();
    os_log_type_t v29 = sub_7FE30();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      sub_18C58();
      uint64_t v58 = sub_18C70();
      uint64_t v64 = v58;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v31 = sub_803E0();
      uint64_t v60 = a7;
      uint64_t v63 = sub_1CDF0(v31, v32, &v64);
      uint64_t v61 = a6;
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2112;
      sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *uint64_t v33 = v26;
      swift_retain();
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v63 = v34;
      a6 = v61;
      sub_7FF60();
      *uint64_t v24 = v34;
      swift_release_n();
      _os_log_impl(&dword_0, v28, v29, "%s NeedsValueStrategy: %@", (uint8_t *)v30, 0x16u);
      sub_6A60(&qword_AC3D0);
      sub_18C04();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      swift_release_n();
    }
    sub_152A0();
    v45();
    sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v46 = sub_18BEC();
    *uint64_t v47 = v26;
    uint64_t v64 = v46;
    BOOL v66 = 1;
    swift_retain();
    a6(&v64);
    swift_release();
    uint64_t v48 = (uint64_t *)&unk_AF480;
    uint64_t v49 = &v64;
  }
  else
  {
    char v35 = v25;
    uint64_t v60 = a7;
    uint64_t v61 = a6;
    sub_7FE20();
    uint64_t v36 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v37 = swift_allocObject();
    long long v62 = xmmword_80D90;
    *(_OWORD *)(v37 + 16) = xmmword_80D90;
    uint64_t v64 = 0;
    unint64_t v65 = 0xE000000000000000;
    char v67 = v35;
    id v38 = v36;
    sub_80110();
    uint64_t v40 = v64;
    unint64_t v39 = v65;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = sub_6C34();
    *(void *)(v37 + 32) = v40;
    *(void *)(v37 + 40) = v39;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_7F760();
    sub_7F750();
    sub_6A60(&qword_ACBA0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = v62;
    sub_7F860();
    uint64_t v64 = v41;
    sub_189E4((unint64_t *)&unk_AF450, (void (*)(uint64_t))&type metadata accessor for CATOption);
    sub_6A60(&qword_ACBA8);
    sub_18A2C();
    sub_7FFE0();
    type metadata accessor for HealthCATWrapper();
    swift_allocObject();
    uint64_t v42 = sub_18C8C();
    sub_5B344(v42, v43);
    sub_5B484(v35, 4);
    swift_release();
    sub_18A80((uint64_t)v24, (uint64_t)v22);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v64 = *v22;
    }
    else
    {
      uint64_t v51 = v55;
      uint64_t v50 = v56;
      uint64_t v52 = v57;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v56 + 32))(v55, v22, v57);
      sub_18454(&v64);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v52);
    }
    BOOL v66 = EnumCaseMultiPayload == 1;
    v61(&v64);
    sub_18AE8((uint64_t)&v64, (uint64_t *)&unk_AF480);
    uint64_t v48 = (uint64_t *)&unk_AF440;
    uint64_t v49 = v24;
  }
  return sub_18AE8((uint64_t)v49, v48);
}

uint64_t sub_18454@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v10, v10[3]);
  sub_7E3D0();
  uint64_t v5 = sub_7E6E0();
  sub_9B2C((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = sub_7ED80();
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = 0;
  a1[3] = v6;
  a1[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a1);
  sub_7E5D0();
  sub_18AE8((uint64_t)v8, (uint64_t *)&unk_AF490);
  sub_18AE8((uint64_t)v4, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v11);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v10);
}

uint64_t sub_185C0()
{
  return sub_5C34();
}

uint64_t sub_185E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8, uint64_t a9)
{
  return sub_16E8C(a1, a2, a3, a4, a5, a6, a7, a8, *(void *)(a9 + 16), v10, *(void *)(a9 + 32));
}

uint64_t sub_18614(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void), uint64_t a7, uint64_t a8)
{
  return sub_17D68(a1, a2, a3, a4, a5, a6, a7, *(void (**)(void))(a8 + 16));
}

uint64_t sub_18638()
{
  return NeedsValueFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:intentResolutionResult:_:)();
}

uint64_t sub_18644()
{
  return NeedsValueFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:intentResolutionResult:_:)();
}

uint64_t sub_18654()
{
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)();
}

uint64_t sub_18660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_18744;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_18744()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_18838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_18BE8;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1892C()
{
  return swift_getWitnessTable();
}

uint64_t sub_18948(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_18980(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_189A8(void (*a1)(void))
{
  a1();

  return sub_803E0();
}

uint64_t sub_189E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18A2C()
{
  unint64_t result = qword_AF460;
  if (!qword_AF460)
  {
    sub_10C00(&qword_ACBA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF460);
  }
  return result;
}

uint64_t sub_18A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60((uint64_t *)&unk_AF440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18AE8(uint64_t a1, uint64_t *a2)
{
  sub_6A60(a2);
  sub_152A0();
  v3();
  return a1;
}

unint64_t sub_18B40()
{
  unint64_t result = qword_ACBB8;
  if (!qword_ACBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ACBB8);
  }
  return result;
}

uint64_t sub_18B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_18BEC()
{
  return swift_allocError();
}

uint64_t sub_18C04()
{
  return swift_arrayDestroy();
}

uint64_t sub_18C20()
{
  return swift_beginAccess();
}

uint64_t sub_18C3C()
{
  return sub_7FF60();
}

uint64_t sub_18C58()
{
  return swift_slowAlloc();
}

uint64_t sub_18C70()
{
  return swift_slowAlloc();
}

uint64_t sub_18C8C()
{
  return v0;
}

uint64_t sub_18C98()
{
  return swift_release_n();
}

uint64_t sub_18CB0()
{
  return swift_allocObject();
}

uint64_t sub_18CC8@<X0>(void *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v4 = sub_7E730();
  swift_allocObject();
  uint64_t v5 = sub_7E720();
  a1[6] = v4;
  a1[7] = &protocol witness table for ResponseFactory;
  a1[3] = v5;
  uint64_t result = sub_7FC10();
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000000088E40;
  a1[2] = v3;
  a1[8] = result;
  return result;
}

uint64_t type metadata accessor for ResumeWorkoutContinueInAppStrategy()
{
  uint64_t result = qword_ACBF0;
  if (!qword_ACBF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_18E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_7FDC0();
  sub_9B2C((uint64_t)v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v5;
  v12[5] = a4;
  v12[6] = a5;
  swift_retain();
  swift_retain();
  sub_61330((uint64_t)v10, (uint64_t)&unk_ACDB8, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_18F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_18F24, 0, 0);
}

uint64_t sub_18F24()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = [self bundleForClass:ObjCClassFromMetadata];
  v0[5] = v2;
  sub_7E730();
  swift_allocObject();
  uint64_t v3 = sub_7E720();
  v0[6] = v3;
  uint64_t v8 = (uint64_t (*)(unint64_t, unint64_t, id, uint64_t, uint64_t, uint64_t))((char *)&dword_AEF98
                                                                                                 + dword_AEF98);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19070;
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  return v8(0xD000000000000014, 0x8000000000088DA0, v2, v3, v5, v6);
}

uint64_t sub_19070()
{
  sub_9C98();
  id v2 = *(void **)(v1 + 40);
  uint64_t v3 = *v0;
  sub_19EF0();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  swift_release();
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_1916C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_7FDC0();
  sub_9B2C((uint64_t)v12, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a3;
  v14[5] = a1;
  v14[6] = v5;
  v14[7] = a4;
  v14[8] = a5;
  id v15 = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_61330((uint64_t)v12, (uint64_t)&unk_ACDA0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_19280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[36] = a7;
  v8[37] = a8;
  v8[34] = a5;
  v8[35] = a6;
  v8[33] = a4;
  return _swift_task_switch(sub_192A8, 0, 0);
}

uint64_t sub_192A8()
{
  uint64_t v1 = (void *)v0[33];
  sub_6A60(&qword_ACDA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_811A0;
  *(void *)(inited + 32) = 0x646F43726F727265;
  *(void *)(inited + 40) = 0xE900000000000065;
  *(void *)(inited + 48) = [v1 code];
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 80) = 0x656D614E707061;
  *(void *)(inited + 88) = 0xE700000000000000;
  swift_retain();
  uint64_t v3 = (void *)sub_7E740();
  uint64_t v4 = v3;
  if (v3)
  {
    id v5 = [v3 displayAppName];

    if (v5)
    {
      uint64_t v4 = (void *)sub_7FC50();
      uint64_t v7 = v6;
      swift_release();

      goto LABEL_7;
    }
    swift_release();
    uint64_t v4 = 0;
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = 0;
LABEL_7:
  *(void *)(inited + 120) = sub_6A60(&qword_AF470);
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = v7;
  uint64_t v8 = sub_7FC10();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v11 = sub_7E730();
  swift_allocObject();
  uint64_t v12 = sub_7E720();
  v0[24] = v11;
  v0[25] = &protocol witness table for ResponseFactory;
  v0[20] = v10;
  v0[21] = v12;
  v0[18] = 0xD000000000000019;
  v0[19] = 0x8000000000088EB0;
  v0[26] = v8;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[38] = v13;
  void *v13 = v0;
  v13[1] = sub_19544;
  return sub_3708C((uint64_t)(v0 + 27), (uint64_t)(v0 + 18), (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_19544()
{
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *id v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_19614, 0, 0);
}

uint64_t sub_19614()
{
  (*(void (**)(uint64_t))(v0 + 288))(v0 + 216);
  sub_19D20(v0 + 216);
  sub_19D80(v0 + 144);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_196A0()
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);

  return _swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for StartWorkoutHandleIntentStrategy()
{
  return self;
}

uint64_t sub_19700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_1977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_197F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_19874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18E0C(a1, a2, a3, a4, a5);
}

uint64_t sub_19898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_19914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_19990(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1916C(a1, a2, a3, a4, a5);
}

uint64_t sub_199B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, started, a3);
}

uint64_t sub_19A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, started, a4);
}

uint64_t sub_19A64()
{
  return sub_1969C();
}

uint64_t sub_19A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t started = type metadata accessor for StartWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, started, a6);
}

unint64_t sub_19AEC()
{
  unint64_t result = qword_ACD88;
  if (!qword_ACD88)
  {
    type metadata accessor for StartWorkoutHandleIntentStrategy();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ACD88);
  }
  return result;
}

uint64_t sub_19B38()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_19B90()
{
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_19C58;
  uint64_t v6 = sub_19ED4();
  return sub_19280(v6, v7, v8, v9, v10, v2, v3, v4);
}

uint64_t sub_19C58()
{
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_19D20(uint64_t a1)
{
  uint64_t v2 = sub_6A60((uint64_t *)&unk_AF480);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19D80(uint64_t a1)
{
  return a1;
}

uint64_t sub_19DD4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_19E1C()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_19ED0;
  uint64_t v4 = sub_19ED4();
  return sub_18F00(v4, v5, v6, v7, v8, v2);
}

uint64_t sub_19ED4()
{
  return v0;
}

uint64_t *sub_19F00()
{
  uint64_t v2 = &qword_ACDD0;
  uint64_t v3 = sub_6A60(&qword_ACDD0);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_1AB30();
  uint64_t v6 = __chkstk_darwin(v5);
  sub_1AB08(v6, v7, v8, v9, v10, v11, v12, v13, v22);
  uint64_t v14 = sub_7F590();
  sub_1AB4C(v14);
  if (!v15)
  {
    sub_1AA20(v0, v1, &qword_ACDD0);
    sub_1AAD0();
    uint64_t v16 = sub_1AB90();
    int v18 = v17(v16);
    if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Inch(_:))
    {
      uint64_t v2 = (void *)(&dword_0 + 1);
    }
    else if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Mile(_:))
    {
      uint64_t v2 = (void *)&dword_4;
    }
    else
    {
      if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Calorie(_:)) {
        goto LABEL_7;
      }
      if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Meter(_:))
      {
        uint64_t v2 = (void *)(&dword_0 + 2);
        goto LABEL_18;
      }
      if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Yard(_:))
      {
        uint64_t v2 = (void *)(&dword_4 + 1);
        goto LABEL_18;
      }
      if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Kilocalorie(_:))
      {
LABEL_7:
        uint64_t v2 = (void *)(&dword_8 + 2);
      }
      else if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Foot(_:))
      {
        uint64_t v2 = (void *)(&dword_0 + 3);
      }
      else if (v18 == enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Kilojoule(_:))
      {
        uint64_t v2 = (void *)(&dword_8 + 1);
      }
      else
      {
        uint64_t v19 = sub_1AB78();
        v20(v19);
        uint64_t v2 = 0;
      }
    }
  }
LABEL_18:
  sub_1AA7C(v0, &qword_ACDD0);
  return v2;
}

uint64_t *sub_1A0A8()
{
  uint64_t v2 = &qword_ACDC0;
  uint64_t v3 = sub_6A60(&qword_ACDC0);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_1AB30();
  uint64_t v6 = __chkstk_darwin(v5);
  sub_1AB08(v6, v7, v8, v9, v10, v11, v12, v13, v22);
  uint64_t v14 = sub_7F3D0();
  sub_1AB4C(v14);
  if (!v15)
  {
    sub_1AA20(v0, v1, &qword_ACDC0);
    sub_1AAD0();
    uint64_t v16 = sub_1AB90();
    int v18 = v17(v16);
    if (v18 == enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Second(_:))
    {
      uint64_t v2 = (void *)(&dword_4 + 2);
    }
    else if (v18 == enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Minute(_:))
    {
      uint64_t v2 = (void *)(&dword_4 + 3);
    }
    else if (v18 == enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Hour(_:))
    {
      uint64_t v2 = (void *)&dword_8;
    }
    else
    {
      uint64_t v19 = sub_1AB78();
      v20(v19);
      uint64_t v2 = 0;
    }
  }
  sub_1AA7C(v0, &qword_ACDC0);
  return v2;
}

uint64_t sub_1A1CC()
{
  unint64_t v0 = sub_7F3A0();
  uint64_t v1 = v0;
  if (!v0) {
    return v1;
  }
  if (!(v0 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!sub_801C0()) {
    goto LABEL_10;
  }
LABEL_4:
  sub_140AC(0, (v1 & 0xC000000000000001) == 0, v1);
  if ((v1 & 0xC000000000000001) != 0) {
    sub_80040();
  }
  else {
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_7F290();
  swift_release();
  uint64_t v1 = v4;
  if (v4)
  {
    uint64_t v2 = sub_7F5B0();
    swift_release();
    if (v2)
    {
      uint64_t v1 = sub_7F360();
      swift_release();
      return v1;
    }
    return 0;
  }
  return v1;
}

uint64_t sub_1A2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_7F590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v52 = &v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_6A60(&qword_ACDC8);
  sub_151D0();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v47[-v11];
  uint64_t v13 = sub_6A60(&qword_ACDD0);
  uint64_t v14 = sub_DC74(v13);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = &v47[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = &v47[-v19];
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = &v47[-v22];
  __chkstk_darwin(v21);
  char v25 = &v47[-v24];
  if (!a1) {
    return a1;
  }
  unint64_t v26 = sub_7F470();
  a1 = v26;
  if (!v26) {
    return a1;
  }
  if (!(v26 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_5;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!sub_801C0()) {
    goto LABEL_35;
  }
LABEL_5:
  uint64_t v51 = v4;
  sub_140AC(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0) {
    sub_80040();
  }
  else {
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_7F290();
  swift_release();
  a1 = v54;
  if (!v54) {
    return a1;
  }
  uint64_t v27 = sub_7F600();
  swift_release();
  if (!v27) {
    return 0;
  }
  uint64_t v50 = v10;
  a1 = sub_7F360();
  char v29 = v28;
  swift_release();
  if ((v29 & 1) == 0)
  {
    double v30 = *(double *)&a1;
    uint64_t v49 = *(void (**)(unsigned char *, void, uint64_t))(v51 + 104);
    v49(v25, enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Calorie(_:), v3);
    sub_9B2C((uint64_t)v25, 0, 1, v3);
    uint64_t v31 = (uint64_t)&v12[*(int *)(v6 + 48)];
    sub_1AA20((uint64_t)v25, (uint64_t)v12, &qword_ACDD0);
    sub_1AA20(v53, v31, &qword_ACDD0);
    sub_1AAE8((uint64_t)v12);
    if (v33)
    {
      sub_1AA7C((uint64_t)v25, &qword_ACDD0);
      sub_1AAE8(v31);
      if (v33)
      {
        sub_1AA7C((uint64_t)v12, &qword_ACDD0);
        unint64_t v32 = v49;
LABEL_20:
        double v30 = v30 / 1000.0;
LABEL_21:
        v32(v20, enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Kilojoule(_:), v3);
LABEL_22:
        sub_9B2C((uint64_t)v20, 0, 1, v3);
        uint64_t v37 = (uint64_t)v50;
        uint64_t v38 = (uint64_t)&v50[*(int *)(v6 + 48)];
        sub_1AA20((uint64_t)v20, (uint64_t)v50, &qword_ACDD0);
        sub_1AA20(v53, v38, &qword_ACDD0);
        sub_1AAE8(v37);
        if (v33)
        {
          sub_1AA7C((uint64_t)v20, &qword_ACDD0);
          sub_1AAE8(v38);
          if (v33)
          {
            sub_1AA7C(v37, &qword_ACDD0);
LABEL_32:
            double v30 = v30 * 1000.0;
            return *(void *)&v30;
          }
        }
        else
        {
          sub_1AA20(v37, (uint64_t)v17, &qword_ACDD0);
          sub_1AAE8(v38);
          if (!v39)
          {
            uint64_t v41 = v51;
            uint64_t v40 = v52;
            uint64_t v42 = sub_1ABA8();
            v43(v42);
            sub_1A9D0();
            char v44 = sub_7FC30();
            uint64_t v45 = *(void (**)(unsigned char *, uint64_t))(v41 + 8);
            v45(v40, v3);
            sub_1AA7C((uint64_t)v20, &qword_ACDD0);
            v45(v17, v3);
            sub_1AA7C(v37, &qword_ACDD0);
            if ((v44 & 1) == 0) {
              return *(void *)&v30;
            }
            goto LABEL_32;
          }
          sub_1AA7C((uint64_t)v20, &qword_ACDD0);
          (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v17, v3);
        }
        sub_1AA7C(v37, &qword_ACDC8);
        return *(void *)&v30;
      }
    }
    else
    {
      sub_1AA20((uint64_t)v12, (uint64_t)v23, &qword_ACDD0);
      sub_1AAE8(v31);
      if (!v33)
      {
        uint64_t v34 = sub_1ABA8();
        v35(v34);
        sub_1A9D0();
        int v48 = sub_7FC30();
        uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
        v36(v52, v3);
        sub_1AA7C((uint64_t)v25, &qword_ACDD0);
        v36(v23, v3);
        sub_1AA7C((uint64_t)v12, &qword_ACDD0);
        unint64_t v32 = v49;
        if ((v48 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_20;
      }
      sub_1AA7C((uint64_t)v25, &qword_ACDD0);
      (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v23, v3);
    }
    sub_1AA7C((uint64_t)v12, &qword_ACDC8);
    v49(v20, enum case for UsoEntity_common_MeasurementUnit.DefinedValues.common_MeasurementUnit_Kilojoule(_:), v3);
    goto LABEL_22;
  }
  return a1;
}

uint64_t *sub_1A8C8()
{
  uint64_t v2 = &qword_ACDE0;
  uint64_t v3 = sub_6A60(&qword_ACDE0);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_1AB30();
  uint64_t v6 = __chkstk_darwin(v5);
  sub_1AB08(v6, v7, v8, v9, v10, v11, v12, v13, v22);
  uint64_t v14 = sub_7F4D0();
  sub_1AB4C(v14);
  if (!v15)
  {
    sub_1AA20(v0, v1, &qword_ACDE0);
    sub_1AAD0();
    uint64_t v16 = sub_1AB90();
    int v18 = v17(v16);
    if (v18 == enum case for UsoEntity_common_ListPosition.DefinedValues.common_ListPosition_Last(_:))
    {
      uint64_t v2 = (void *)(&dword_0 + 1);
    }
    else if (v18 == enum case for UsoEntity_common_ListPosition.DefinedValues.common_ListPosition_Next(_:))
    {
      uint64_t v2 = (void *)(&dword_0 + 2);
    }
    else
    {
      uint64_t v19 = sub_1AB78();
      v20(v19);
      uint64_t v2 = 0;
    }
  }
  sub_1AA7C(v0, &qword_ACDE0);
  return v2;
}

unint64_t sub_1A9D0()
{
  unint64_t result = qword_ACDD8;
  if (!qword_ACDD8)
  {
    sub_7F590();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ACDD8);
  }
  return result;
}

uint64_t sub_1AA20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_6A60(a3);
  sub_151D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1AA7C(uint64_t a1, uint64_t *a2)
{
  sub_6A60(a2);
  sub_151D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1AAE8(uint64_t a1)
{
  return sub_6B0C(a1, 1, v1);
}

uint64_t sub_1AB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1AA20(v10, (uint64_t)&a9 - v9, v11);
}

uint64_t sub_1AB4C(uint64_t a1)
{
  return sub_6B0C(v1, 1, a1);
}

uint64_t sub_1AB78()
{
  return v0;
}

uint64_t sub_1AB90()
{
  return v0;
}

uint64_t sub_1ABA8()
{
  return v0;
}

uint64_t sub_1ABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AD34(a1, a2, a3, a4, a5, (uint64_t)&unk_A0E48, (uint64_t)&unk_ACEC0);
}

uint64_t sub_1ABE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_1AC08, 0, 0);
}

uint64_t sub_1AC08()
{
  sub_1B704();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v0[5] = [self bundleForClass:ObjCClassFromMetadata];
  sub_7E730();
  swift_allocObject();
  v0[6] = sub_7E720();
  uint64_t v2 = (void *)sub_1B73C();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1B700;
  unint64_t v3 = sub_1B770(18);
  return v4(v3);
}

uint64_t sub_1AD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AD34(a1, a2, a3, a4, a5, (uint64_t)&unk_A0E20, (uint64_t)&unk_ACEB0);
}

uint64_t sub_1AD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7FDC0();
  sub_9B2C((uint64_t)v13, 1, 1, v14);
  char v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v7;
  v15[5] = a4;
  v15[6] = a5;
  swift_retain();
  swift_retain();
  sub_61330((uint64_t)v13, a7, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1AE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_1AE40, 0, 0);
}

uint64_t sub_1AE40()
{
  sub_1B704();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v0[5] = [self bundleForClass:ObjCClassFromMetadata];
  sub_7E730();
  swift_allocObject();
  v0[6] = sub_7E720();
  uint64_t v2 = (void *)sub_1B73C();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1AF4C;
  unint64_t v3 = sub_1B770(23);
  return v4(v3);
}

uint64_t sub_1AF4C()
{
  sub_9C98();
  uint64_t v2 = *(void **)(v1 + 40);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  swift_release();
  unint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t type metadata accessor for EndWorkoutHandleIntentStrategy()
{
  return self;
}

uint64_t sub_1B074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1B0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1B16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1B1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1ABC4(a1, a2, a3, a4, a5);
}

uint64_t sub_1B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1B288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1B304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AD14(a1, a2, a3, a4, a5);
}

uint64_t sub_1B328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_1B374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_1B3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for EndWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

unint64_t sub_1B448()
{
  unint64_t result = qword_ACEA0;
  if (!qword_ACEA0)
  {
    type metadata accessor for EndWorkoutHandleIntentStrategy();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_ACEA0);
  }
  return result;
}

uint64_t sub_1B498()
{
  sub_1B75C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B53C;
  uint64_t v2 = sub_1B71C();
  return sub_1AE1C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B53C()
{
  sub_9C98();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1B610()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1B658()
{
  sub_1B75C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B6FC;
  uint64_t v2 = sub_1B71C();
  return sub_1ABE4(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B71C()
{
  return v0;
}

uint64_t sub_1B73C()
{
  return swift_task_alloc();
}

unint64_t sub_1B770(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_1B784()
{
  uint64_t v0 = sub_7FBE0();
  sub_1D5BC(v0, qword_ACEC8);
  sub_1C954(v0, (uint64_t)qword_ACEC8);
  sub_D838(0, qword_AD030);
  sub_7FF20();
  return sub_7FBF0();
}

uint64_t sub_1B824(uint64_t a1, uint64_t a2)
{
  sub_7D990();
  sub_6D54();
  __chkstk_darwin(v4);
  sub_15210();
  id v5 = [objc_allocWithZone((Class)NSMetaphone) init];
  uint64_t result = sub_1D53C(a1, a2, v5);
  if (v7)
  {
    sub_7D980();
    sub_141DC();
    uint64_t v8 = sub_7FF90();

    uint64_t v9 = sub_1D620();
    v10(v9);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B920()
{
  sub_1D678();
  v0[2] = v1;
  v0[3] = v2;
  v0[4] = 0x7473696C70;
  v0[5] = 0xE500000000000000;
  v0[6] = 0;
}

uint64_t sub_1B950@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SearchBundleHelper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v7 = v1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = sub_1D4A8(v5, v6, v8, v7, v4);

  if (v9)
  {
    sub_7D9D0();

    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }
  uint64_t v11 = sub_7D9E0();

  return sub_9B2C(a1, v10, 1, v11);
}

uint64_t sub_1BA34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1BA64()
{
  sub_1BA34();

  return _swift_deallocClassInstance(v0, 56, 7);
}

void *guestNames()()
{
  uint64_t v1 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v1 - 8);
  sub_15210();
  type metadata accessor for SearchBundleHelper();
  swift_initStackObject();
  sub_1D678();
  v2[2] = v3;
  v2[3] = v4;
  v2[4] = 0x7473696C70;
  v2[5] = 0xE500000000000000;
  v2[6] = 0;
  sub_1B950(v0);
  uint64_t v5 = guestNames(dataPath:)(v0);
  swift_release();
  sub_D8DC(v0, &qword_AC2C0);
  return v5;
}

uint64_t type metadata accessor for SearchBundleHelper()
{
  return self;
}

void *guestNames(dataPath:)(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_7D9E0();
  sub_6D54();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1D638();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v27 - v13;
  sub_1BE08(a1, (uint64_t)v4);
  if (sub_6B0C((uint64_t)v4, 1, v5) == 1)
  {
    char v15 = &qword_AC2C0;
    uint64_t v16 = v4;
LABEL_3:
    sub_D8DC((uint64_t)v16, v15);
    return &_swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v4, v5);
  sub_D838(0, &qword_ACEE0);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v11, v14, v5);
  id v17 = sub_1BE70(v11);
  if (!v17)
  {
    uint64_t v22 = sub_1D620();
    v23(v22);
    return &_swiftEmptyArrayStorage;
  }
  int v18 = v17;
  *(void *)&v28[0] = 0x737473657567;
  *((void *)&v28[0] + 1) = 0xE600000000000000;
  id v19 = objc_msgSend(v17, "__swift_objectForKeyedSubscript:", sub_802E0());
  swift_unknownObjectRelease();
  if (v19)
  {
    sub_7FFD0();

    swift_unknownObjectRelease();
    uint64_t v20 = sub_1D620();
    v21(v20);
  }
  else
  {
    uint64_t v24 = sub_1D620();
    v25(v24);

    memset(v28, 0, sizeof(v28));
  }
  sub_F574((uint64_t)v28, (uint64_t)v29);
  if (!v30)
  {
    char v15 = &qword_AC670;
    uint64_t v16 = v29;
    goto LABEL_3;
  }
  sub_6A60(&qword_ACEE8);
  if (swift_dynamicCast()) {
    return (void *)v27[1];
  }
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1BE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1BE70(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_7D9C0(v3);
  uint64_t v5 = v4;
  id v6 = [v2 initWithContentsOfURL:v4];

  uint64_t v7 = sub_7D9E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

void *search(dataPath:guest:modality:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v85 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v85);
  sub_1D638();
  uint64_t v10 = v8 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v77 - v12;
  uint64_t v14 = sub_7D9E0();
  sub_6D54();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1D638();
  uint64_t v20 = (char *)(v18 - v19);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v77 - v23;
  __chkstk_darwin(v22);
  unint64_t v26 = (char *)&v77 - v25;
  sub_1BE08(a1, (uint64_t)v13);
  if (sub_6B0C((uint64_t)v13, 1, v14) == 1)
  {
    sub_D8DC((uint64_t)v13, &qword_AC2C0);
LABEL_17:
    if (qword_ABBE0 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_7FBE0();
    sub_1C954(v44, (uint64_t)qword_ACEC8);
    sub_1BE08(a1, v10);
    uint64_t v45 = sub_7FBD0();
    os_log_type_t v46 = sub_7FE30();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v48 = sub_7FF30();
      uint64_t v50 = sub_1CDF0(v48, v49, &v89);
      sub_1D698(v50);
      sub_7FF60();
      swift_bridgeObjectRelease();
      sub_D8DC(v10, &qword_AC2C0);
      _os_log_impl(&dword_0, v45, v46, "No data file present: %s", v47, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {
      sub_D8DC(v10, &qword_AC2C0);
    }

    return _swiftEmptyArrayStorage;
  }
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v26, v13, v14);
  sub_D838(0, &qword_ACEE0);
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v77(v24, v26, v14);
  id v27 = sub_1BE70((uint64_t)v24);
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v14);
    goto LABEL_17;
  }
  char v28 = v27;
  uint64_t v78 = v16;
  Swift::Int v79 = v26;
  uint64_t v80 = v14;
  *(void *)&long long v87 = sub_1B824(v81, v82);
  *((void *)&v87 + 1) = v29;
  swift_bridgeObjectRetain();
  id v30 = objc_msgSend(v28, "__swift_objectForKeyedSubscript:", sub_802E0());
  swift_unknownObjectRelease();
  uint64_t v31 = v28;
  if (v30)
  {
    sub_7FFD0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v87 = 0u;
    long long v88 = 0u;
  }
  sub_F574((uint64_t)&v87, (uint64_t)&v89);
  unint64_t v32 = (uint8_t *)v80;
  uint64_t v33 = v78;
  if (!v91)
  {
    swift_bridgeObjectRelease();

    sub_D8DC((uint64_t)&v89, &qword_AC670);
LABEL_16:
    (*(void (**)(char *, uint8_t *))(v33 + 8))(v79, v32);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  uint64_t v34 = v86;
  swift_bridgeObjectRelease();
  if (qword_ABBE0 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_7FBE0();
  uint64_t v36 = (void (*)(char *, char *, uint64_t))sub_1C954(v35, (uint64_t)qword_ACEC8);
  v77(v20, v79, (uint64_t)v32);
  uint64_t v77 = v36;
  uint64_t v37 = sub_7FBD0();
  os_log_type_t v38 = sub_7FE20();
  if (os_log_type_enabled(v37, v38))
  {
    char v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    *(_DWORD *)char v39 = 136315138;
    unint64_t v32 = v39 + 12;
    sub_1D450(&qword_ACEF8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v40 = sub_802A0();
    uint64_t v36 = (void (*)(char *, char *, uint64_t))v41;
    uint64_t v42 = sub_1CDF0(v40, v41, &v89);
    sub_1D698(v42);
    sub_1D6AC();
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_1D648();
    ((void (*)(uint64_t))v36)(v43);
    _os_log_impl(&dword_0, v37, v38, "Looking at data file found at %s", v39, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();
  }
  else
  {
    uint64_t v53 = sub_1D648();
    ((void (*)(uint64_t))v36)(v53);
  }

  unint64_t v54 = v82;
  uint64_t v85 = (uint64_t)v36;
  uint64_t v55 = v79;
  if (v84)
  {
    uint64_t v89 = sub_7FC70();
    uint64_t v90 = v56;
    sub_141DC();
    uint64_t v57 = sub_7FF80();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v84 = v57;
    *(void *)&long long v87 = v57;
    *((void *)&v87 + 1) = v59;
    swift_bridgeObjectRetain_n();
    id v60 = objc_msgSend(v34, "__swift_objectForKeyedSubscript:", sub_802E0());
    swift_unknownObjectRelease();
    if (v60)
    {
      sub_7FFD0();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v87 = 0u;
      long long v88 = 0u;
    }
    sub_F574((uint64_t)&v87, (uint64_t)&v89);
    if (v91)
    {
      sub_D838(0, &qword_ACEF0);
      char v67 = swift_dynamicCast();
      swift_bridgeObjectRelease();
      if (v67)
      {
        unint64_t v68 = v86;
        swift_bridgeObjectRelease();
        sub_1C98C(v68);
        uint64_t v51 = v69;

        uint64_t v70 = sub_1D660();
        v71(v70);

        return (void *)v51;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_D8DC((uint64_t)&v89, &qword_AC670);
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_7FBD0();
    os_log_type_t v73 = sub_7FE30();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)&long long v87 = sub_1CDF0(v81, v54, &v89);
      sub_7FF60();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v87 = sub_1CDF0(v84, v59, &v89);
      sub_7FF60();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v72, v73, "No adamIds found for %s and %s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    uint64_t v75 = sub_1D660();
    v76(v75);
  }
  else
  {
    uint64_t v61 = sub_7FBD0();
    os_log_type_t v62 = sub_7FE30();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v87 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 136315138;
      unint64_t v32 = v63 + 12;
      uint64_t v89 = v83;
      uint64_t v90 = 0;
      sub_6A60(&qword_AF470);
      uint64_t v64 = sub_7FF30();
      uint64_t v89 = sub_1CDF0(v64, v65, (uint64_t *)&v87);
      sub_1D6AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v61, v62, "Failed to normalize modality: %s", v63, 0xCu);
      swift_arrayDestroy();
      uint64_t v55 = v79;
      sub_9CB0();
      sub_9CB0();
    }

    BOOL v66 = (void (*)(char *, uint8_t *))v85;
    v66(v55, v32);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1C954(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_1C98C(void *a1)
{
  uint64_t v22 = sub_7D9B0();
  uint64_t v2 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = (unint64_t)[a1 count];
  id v27 = _swiftEmptyArrayStorage;
  sub_4B830();
  id v6 = a1;
  sub_7FED0();

  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v21 = v2;
  if (v5)
  {
    sub_1D450(&qword_AD020, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
    do
    {
      sub_7FF50();
      if (!v26) {
        goto LABEL_18;
      }
      sub_18B8C((uint64_t)&v25, (uint64_t)&v23);
      uint64_t v7 = sub_7FC60();
      uint64_t v9 = v8;
      _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)&v25);
      uint64_t v10 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_4B830();
        uint64_t v10 = v27;
      }
      unint64_t v11 = v10[2];
      if (v11 >= v10[3] >> 1)
      {
        sub_4B830();
        uint64_t v10 = v27;
      }
      v10[2] = v11 + 1;
      uint64_t v12 = &v10[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
    }
    while (--v5);
  }
  sub_1D450(&qword_AD020, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  uint64_t v13 = v22;
  sub_7FF50();
  while (v24)
  {
    sub_1D498(&v23, &v25);
    sub_18B8C((uint64_t)&v25, (uint64_t)&v23);
    uint64_t v14 = sub_7FC60();
    uint64_t v16 = v15;
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)&v25);
    uint64_t v17 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_4B830();
      uint64_t v17 = v27;
    }
    unint64_t v18 = v17[2];
    if (v18 >= v17[3] >> 1)
    {
      sub_4B830();
      uint64_t v17 = v27;
    }
    v17[2] = v18 + 1;
    uint64_t v19 = &v17[2 * v18];
    v19[4] = v14;
    v19[5] = v16;
    sub_7FF50();
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v13);
  sub_D8DC((uint64_t)&v23, &qword_AC670);
}

uint64_t sub_1CD04(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1CD14(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1CD50(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1CD78(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1CDF0(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_7FF60();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1CDF0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1CEC4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_18B8C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_18B8C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1CEC4(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1D01C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_7FF70();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_1D0F4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_80070();
    if (!v8)
    {
      uint64_t result = sub_80190();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1D01C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_801D0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_1D0F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1D18C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D368(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1D368((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_1D18C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = sub_7FCE0();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_1D300(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_80030();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  sub_801D0();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)sub_80190();
  __break(1u);
  return result;
}

void *sub_1D300(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_6A60(&qword_AD028);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_1D368(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_6A60(&qword_AD028);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_13B34(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_13FC0(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unsigned char **sub_1D440(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1D450(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_1D498(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id sub_1D4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v6 = sub_7FC40();
  swift_bridgeObjectRelease();
  NSString v7 = sub_7FC40();
  swift_bridgeObjectRelease();
  id v8 = [a5 URLForResource:v6 withExtension:v7];

  return v8;
}

uint64_t sub_1D53C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_7FC40();
  id v5 = [a3 translate:v4];

  if (!v5) {
    return 0;
  }
  uint64_t v6 = sub_7FC50();

  return v6;
}

uint64_t *sub_1D5BC(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1D620()
{
  return v0;
}

uint64_t sub_1D648()
{
  return v0;
}

uint64_t sub_1D660()
{
  return v0;
}

uint64_t sub_1D698(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_1D6AC()
{
  return sub_7FF60();
}

uint64_t initializeWithCopy for WorkoutAppSelectionTrainingLogger(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for WorkoutAppSelectionTrainingLogger(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 initializeWithTake for WorkoutAppSelectionTrainingLogger(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WorkoutAppSelectionTrainingLogger(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutAppSelectionTrainingLogger(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutAppSelectionTrainingLogger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutsDisambiguationStrategy()
{
  return sub_9C4C();
}

uint64_t sub_1D840(uint64_t (*a1)(void *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_801C0())
  {
    uint64_t v7 = 0;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)sub_80040() : *(id *)(a3 + 8 * v7 + 32);
      int64_t v9 = v8;
      uint64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        break;
      }
      v13[0] = v7;
      v13[1] = v8;
      char v11 = a1(v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v7;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D978()
{
  return 1;
}

void sub_1D980()
{
}

Swift::Int sub_1D9A8()
{
  return sub_80370();
}

Swift::Int sub_1D9F4()
{
  return sub_80370();
}

void sub_1DA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(void))
{
  uint64_t v10 = sub_7FBE0();
  sub_6D54();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_15490();
  id v14 = [a6 disambiguationItems];
  uint64_t v15 = sub_7FD20();

  uint64_t v16 = sub_49E18(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    sub_6A60(&qword_AD0E0);
    swift_allocObject();
    sub_7EC90();
    a7();
    sub_15240();
    swift_release();
  }
  else
  {
    type metadata accessor for HealthFlowError();
    sub_18CB0();
    uint64_t v18 = sub_E934(6);
    sub_7FBA0();
    swift_beginAccess();
    sub_15528();
    v19();
    swift_retain_n();
    uint64_t v20 = sub_7FBD0();
    uint64_t v21 = sub_7FE30();
    if (os_log_type_enabled(v20, (os_log_type_t)v21))
    {
      uint64_t v22 = sub_1FA14();
      char v28 = (void *)sub_18C58();
      uint64_t v30 = sub_1FA2C();
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v23 = sub_803E0();
      sub_1CDF0(v23, v24, &v30);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2112;
      sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *long long v25 = v18;
      swift_retain();
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      sub_7FF60();
      *char v28 = v29;
      swift_release_n();
      _os_log_impl(&dword_0, v20, (os_log_type_t)v21, "%s Error: %@", (uint8_t *)v22, 0x16u);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v7, v10);
    sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v26 = sub_18BEC();
    *id v27 = v18;
    swift_retain();
    ((void (*)(uint64_t, uint64_t))a7)(v26, 1);
    swift_errorRelease();
    swift_release();
    sub_15240();
  }
}

void sub_1DE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t *), uint64_t a10, uint64_t a11)
{
  uint64_t v102 = a8;
  uint64_t v109 = a10;
  uint64_t v110 = a9;
  uint64_t v113 = sub_7FBE0();
  sub_6D54();
  uint64_t v105 = v11;
  __chkstk_darwin(v12);
  sub_1D638();
  uint64_t v111 = v13 - v14;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v103 = (char *)&v98 - v17;
  __chkstk_darwin(v16);
  uint64_t v99 = (char *)&v98 - v18;
  uint64_t v112 = a11;
  uint64_t v104 = *(char **)(a11 + 16);
  uint64_t v19 = sub_7E7A0();
  sub_6D54();
  uint64_t v101 = v20;
  __chkstk_darwin(v21);
  uint64_t v100 = (char *)&v98 - v22;
  uint64_t v23 = sub_7E850();
  sub_10C00(&qword_ACBB0);
  sub_80390();
  sub_6D54();
  uint64_t v107 = v25;
  uint64_t v108 = v24;
  __chkstk_darwin(v24);
  uint64_t v106 = (uint64_t *)((char *)&v98 - v26);
  uint64_t v27 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v27 - 8);
  sub_15490();
  uint64_t v28 = sub_7ED20();
  sub_6D54();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_755C();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_7F6B0();
  sub_6D54();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  sub_1D638();
  uint64_t v41 = v39 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v98 - v43;
  sub_7ECD0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v30 + 88))(v34, v28) == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v111 = v41;
    uint64_t v98 = v19;
    (*(void (**)(uint64_t, uint64_t))(v30 + 96))(v34, v28);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v44, v34, v35);
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v23, v44, v35);
    uint64_t v45 = *(void *)(v112 + 32);
    uint64_t v46 = sub_3F540((uint64_t)v104, (uint64_t)v104, v45);
    uint64_t v111 = v35;
    char v67 = (char *)v46;
    sub_F314(v23);
    sub_6A60(&qword_AD0C8);
    unint64_t v68 = sub_7E930();
    __chkstk_darwin(v68);
    uint64_t v69 = *(void *)(v112 + 24);
    *(&v98 - 4) = (uint64_t)v104;
    *(&v98 - 3) = v69;
    *(&v98 - 2) = v45;
    *(&v98 - 1) = (uint64_t)v67;
    uint64_t v70 = sub_1D840((uint64_t (*)(void *))sub_1F80C, (uint64_t)(&v98 - 6), v68);
    uint64_t v72 = v71;
    swift_bridgeObjectRelease();
    if (v72)
    {
      uint64_t v116 = sub_6A60(&qword_AD0D8);
      uint64_t v114 = v70;
      uint64_t v115 = v72;
      id v73 = v72;
      uint64_t v74 = v67;
      sub_7E790();
      uint64_t v75 = v106;
      sub_7E840();
      sub_152A0();
      v76();
      swift_storeEnumTagMultiPayload();
      v110(v75);

      sub_152A0();
      v77();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v44, v111);
    }
    else
    {
      uint64_t v102 = v37;
      uint64_t v103 = v67;
      uint64_t v104 = v44;
      uint64_t v78 = type metadata accessor for HealthFlowError();
      sub_18CB0();
      uint64_t v79 = sub_E934(5);
      sub_7FBA0();
      sub_1F9F4();
      uint64_t v80 = v105;
      uint64_t v81 = v99;
      uint64_t v82 = v113;
      sub_15528();
      v83();
      swift_retain_n();
      uint64_t v84 = sub_7FBD0();
      os_log_type_t v85 = sub_7FE30();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = sub_1FA14();
        long long v87 = (void *)sub_18C58();
        uint64_t v88 = sub_1FA2C();
        uint64_t v101 = v78;
        v118[0] = v88;
        *(_DWORD *)uint64_t v86 = 136315394;
        uint64_t v89 = sub_803E0();
        uint64_t v117 = sub_1CDF0(v89, v90, v118);
        sub_7FF60();
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 12) = 2112;
        sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
        sub_18BEC();
        *uint64_t v91 = v79;
        swift_retain();
        uint64_t v92 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v117 = v92;
        sub_7FF60();
        *long long v87 = v92;
        sub_18C98();
        _os_log_impl(&dword_0, v84, v85, "%s Error: %@", (uint8_t *)v86, 0x16u);
        sub_6A60(&qword_AC3D0);
        swift_arrayDestroy();
        sub_9CB0();
        swift_arrayDestroy();
        sub_9CB0();
        sub_9CB0();

        (*(void (**)(char *, uint64_t))(v80 + 8))(v99, v113);
      }
      else
      {

        sub_18C98();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
      }
      sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      uint64_t v93 = sub_18BEC();
      *uint64_t v94 = v79;
      uint64_t v95 = v106;
      *uint64_t v106 = v93;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v110(v95);
      swift_release();

      sub_152A0();
      v96();
      sub_152A0();
      v97();
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v28);
    uint64_t v47 = type metadata accessor for HealthFlowError();
    sub_18CB0();
    uint64_t v48 = sub_E934(0);
    sub_7FBA0();
    sub_1F9F4();
    uint64_t v49 = v105;
    uint64_t v50 = v113;
    sub_15528();
    v51();
    swift_retain_n();
    uint64_t v52 = sub_7FBD0();
    os_log_type_t v53 = sub_7FE30();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = sub_1FA14();
      uint64_t v55 = sub_18C58();
      uint64_t v104 = (char *)v47;
      uint64_t v56 = (void *)v55;
      v118[0] = sub_1FA2C();
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v57 = sub_803E0();
      uint64_t v117 = sub_1CDF0(v57, v58, v118);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2112;
      sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *unint64_t v59 = v48;
      swift_retain();
      uint64_t v60 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v117 = v60;
      sub_7FF60();
      *uint64_t v56 = v60;
      sub_18C98();
      _os_log_impl(&dword_0, v52, v53, "%s Error: %@", (uint8_t *)v54, 0x16u);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v111, v113);
    }
    else
    {

      sub_18C98();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v111, v50);
    }
    uint64_t v61 = v110;
    uint64_t v63 = v107;
    uint64_t v62 = v108;
    uint64_t v64 = v106;
    sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v65 = sub_18BEC();
    *BOOL v66 = v48;
    *uint64_t v64 = v65;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v61(v64);
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v63 + 8))(v64, v62);
  }
  sub_15240();
}

uint64_t sub_1EB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7 = [*(id *)(a1 + 8) spokenPhrase];
  uint64_t v8 = sub_7FC50();
  uint64_t v10 = v9;

  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [v11 spokenPhrase];

    uint64_t v14 = sub_7FC50();
    uint64_t v16 = v15;

    if (v8 == v14 && v10 == v16) {
      char v18 = 1;
    }
    else {
      char v18 = sub_802B0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = 0;
  }
  swift_bridgeObjectRelease();
  return v18 & 1;
}

void sub_1EC30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10)
{
  uint64_t v77 = a1;
  uint64_t v83 = a7;
  uint64_t v81 = a10;
  uint64_t v13 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v13 - 8);
  sub_755C();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_7E6E0();
  sub_6D54();
  uint64_t v80 = v18;
  __chkstk_darwin(v19);
  sub_755C();
  uint64_t v79 = v21 - v20;
  uint64_t v84 = sub_7FBE0();
  sub_6D54();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_1D638();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v74 - v29;
  swift_bridgeObjectRetain();
  char v31 = sub_50760(a3, a4);
  if (v31 == 5)
  {
    type metadata accessor for HealthFlowError();
    sub_18CB0();
    uint64_t v32 = sub_E934(2);
    sub_7FBA0();
    swift_beginAccess();
    sub_15528();
    v33();
    swift_retain_n();
    uint64_t v34 = sub_7FBD0();
    os_log_type_t v35 = sub_7FE30();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = sub_1FA14();
      uint64_t v82 = a9;
      uint64_t v37 = v36;
      uint64_t v80 = sub_18C58();
      uint64_t v83 = sub_1FA2C();
      v86[0] = v83;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v76 = a8;
      uint64_t v38 = sub_803E0();
      uint64_t v85 = sub_1CDF0(v38, v39, v86);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2112;
      sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *uint64_t v40 = v32;
      swift_retain();
      uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v85 = v41;
      a8 = v76;
      sub_7FF60();
      *(void *)uint64_t v80 = v41;
      swift_release_n();
      _os_log_impl(&dword_0, v34, v35, "%s Error: %@", (uint8_t *)v37, 0x16u);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, v84);
    sub_1F7C4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v66 = sub_18BEC();
    *char v67 = v32;
    v86[0] = v66;
    char v87 = 1;
    swift_retain();
    a8(v86);
    swift_release();
    sub_18AE8((uint64_t)v86, (uint64_t *)&unk_AF480);
    goto LABEL_22;
  }
  char v42 = v31;
  sub_7FBA0();
  swift_beginAccess();
  sub_15528();
  v43();
  uint64_t v44 = sub_7FBD0();
  os_log_type_t v45 = sub_7FE20();
  BOOL v46 = os_log_type_enabled(v44, v45);
  uint64_t v75 = v17;
  uint64_t v76 = a8;
  uint64_t v82 = a9;
  uint64_t v74 = v16;
  if (v46)
  {
    uint64_t v47 = sub_1FA14();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136315394;
    uint64_t v48 = sub_803E0();
    uint64_t v85 = sub_1CDF0(v48, v49, v86);
    sub_7FF60();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    unint64_t v50 = sub_507AC(v42);
    uint64_t v85 = sub_1CDF0(v50, v51, v86);
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v44, v45, "%s Generating prompt to disambiguate %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    sub_9CB0();
    uint64_t v17 = v75;
    sub_9CB0();
  }

  (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v84);
  uint64_t v52 = sub_6A60(&qword_AD0C8);
  unint64_t v53 = sub_7E930();
  unint64_t v54 = v53;
  if (!(v53 >> 62))
  {
    uint64_t v55 = *(void *)((char *)&dword_10 + (v53 & 0xFFFFFFFFFFFFFF8));
    if (v55) {
      goto LABEL_8;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v57 = &_swiftEmptyArrayStorage;
LABEL_21:
    uint64_t v68 = v79;
    sub_42C04((uint64_t)v57);
    swift_bridgeObjectRelease();
    type metadata accessor for DisambiguationStrategyHelper();
    sub_7E930();
    sub_7ED30();
    uint64_t v69 = (void *)sub_3D5F8();
    swift_bridgeObjectRelease();
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v86);
    uint64_t v70 = v78[3];
    uint64_t v71 = v78[4];
    sub_9AE0(v78, v70);
    uint64_t v72 = v74;
    uint64_t v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 16))(v70, v71);
    __chkstk_darwin(v73);
    *(&v74 - 2) = (uint64_t)v69;
    *(&v74 - 1) = v68;
    sub_611D4((void (*)(uint64_t))sub_1F7BC, (uint64_t)v86);
    v76(v86);

    sub_18AE8((uint64_t)v86, (uint64_t *)&unk_AF480);
    sub_18AE8(v72, (uint64_t *)&unk_AF440);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v68, v17);
LABEL_22:
    sub_15240();
    return;
  }
  uint64_t v55 = sub_801C0();
  if (!v55) {
    goto LABEL_20;
  }
LABEL_8:
  v86[0] = (uint64_t)&_swiftEmptyArrayStorage;
  sub_4B830();
  if ((v55 & 0x8000000000000000) == 0)
  {
    uint64_t v84 = v52;
    uint64_t v56 = 0;
    uint64_t v57 = (void *)v86[0];
    do
    {
      if ((v54 & 0xC000000000000001) != 0) {
        id v58 = (id)sub_80040();
      }
      else {
        id v58 = *(id *)(v54 + 8 * v56 + 32);
      }
      unint64_t v59 = v58;
      id v60 = objc_msgSend(v58, "spokenPhrase", v74);
      uint64_t v61 = sub_7FC50();
      uint64_t v63 = v62;

      v86[0] = (uint64_t)v57;
      unint64_t v64 = v57[2];
      if (v64 >= v57[3] >> 1)
      {
        sub_4B830();
        uint64_t v57 = (void *)v86[0];
      }
      ++v56;
      v57[2] = v64 + 1;
      uint64_t v65 = (char *)&v57[2 * v64];
      *((void *)v65 + 4) = v61;
      *((void *)v65 + 5) = v63;
    }
    while (v55 != v56);
    swift_bridgeObjectRelease();
    uint64_t v17 = v75;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1F460@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v16, v16[3]);
  sub_7E3D0();
  sub_6A60(&qword_AEA40);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_814D0;
  *(void *)(v9 + 32) = a1;
  *(void *)&v14[0] = v9;
  sub_7FD40();
  uint64_t v10 = sub_7E6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, a2, v10);
  sub_9B2C((uint64_t)v8, 0, 1, v10);
  uint64_t v11 = sub_7ED80();
  memset(v14, 0, sizeof(v14));
  uint64_t v15 = 0;
  a3[3] = v11;
  a3[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a3);
  id v12 = a1;
  sub_7E5F0();
  swift_bridgeObjectRelease();
  sub_18AE8((uint64_t)v14, (uint64_t *)&unk_AF490);
  sub_18AE8((uint64_t)v8, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v17);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v16);
}

uint64_t sub_1F668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a7;
  *(void *)(v11 + 24) = a8;
  uint64_t v12 = swift_retain();
  sub_1DA34(v12, v13, v14, v15, v16, a6, (void (*)(void))sub_1F868);

  return swift_release();
}

__n128 sub_1F708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t *), uint64_t a10, uint64_t a11)
{
  sub_1DE28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return result;
}

void sub_1F738(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10)
{
}

uint64_t sub_1F744()
{
  return NeedsDisambiguationFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:)();
}

uint64_t sub_1F758()
{
  return NeedsDisambiguationFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:)();
}

uint64_t sub_1F76C()
{
  return NeedsDisambiguationFlowStrategy.makePromptForDeviceUnlock(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)();
}

uint64_t sub_1F778()
{
  return NeedsDisambiguationFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)();
}

uint64_t sub_1F784()
{
  return swift_getWitnessTable();
}

uint64_t sub_1F7A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1F7BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1F460(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1F7C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1F80C(uint64_t a1)
{
  return sub_1EB18(a1, v1[5], v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1F830()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1F868(uint64_t a1, char a2)
{
  return sub_49F34(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t getEnumTagSinglePayload for WorkoutsDisambiguationError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for WorkoutsDisambiguationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1F964);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F98C()
{
  return 0;
}

ValueMetadata *type metadata accessor for WorkoutsDisambiguationError()
{
  return &type metadata for WorkoutsDisambiguationError;
}

unint64_t sub_1F9A8()
{
  unint64_t result = qword_AD0E8;
  if (!qword_AD0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD0E8);
  }
  return result;
}

uint64_t sub_1F9F4()
{
  return swift_beginAccess();
}

uint64_t sub_1FA14()
{
  return swift_slowAlloc();
}

uint64_t sub_1FA2C()
{
  return swift_slowAlloc();
}

uint64_t sub_1FA44()
{
  return v0;
}

uint64_t sub_1FA58(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  uint64_t v2 = sub_7F6D0();
  sub_6D54();
  uint64_t v61 = v3;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = sub_7FBE0();
  sub_6D54();
  uint64_t v12 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = sub_7FBB0();
  swift_beginAccess();
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v57 = v19;
  uint64_t v60 = v10;
  v56(v18, v19, v10);
  uint64_t v20 = sub_7FBD0();
  os_log_type_t v21 = sub_7FE20();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = v16;
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "Selecting a destination for the request", v22, 2u);
    uint64_t v16 = v55;
    swift_slowDealloc();
  }

  uint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v23 = v12 + 8;
  uint64_t v24 = v25;
  v25(v18, v60);
  sub_7F940();
  uint64_t v26 = v61;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v27(v7, v9, v2);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v7, v2);
  if (v28 == enum case for DeviceIdiom.homepod(_:))
  {
    sub_6A60(&qword_AD0F0);
    uint64_t v29 = sub_20234();
    *(_OWORD *)(v29 + 16) = xmmword_80D90;
    sub_20260();
    v30();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v2);
  }
  else if (v28 == enum case for DeviceIdiom.phone(_:))
  {
    unint64_t v53 = (void (*)(unint64_t, char *, char *))v27;
    uint64_t v31 = v58;
    sub_11158();
    uint64_t v33 = v32;
    if (v32) {
      swift_release();
    }
    unint64_t v54 = v9;
    uint64_t v55 = (char *)v2;
    BOOL v34 = sub_33E44(v31);
    LODWORD(v59) = sub_1FFF8(v31);
    uint64_t v35 = v57;
    swift_beginAccess();
    v56(v16, v35, v60);
    uint64_t v36 = v16;
    BOOL v37 = v34;
    uint64_t v38 = sub_7FBD0();
    os_log_type_t v39 = sub_7FE20();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v58 = v23;
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 67109632;
      int v62 = v33 != 0;
      sub_7FF60();
      *(_WORD *)(v40 + 8) = 1024;
      int v62 = v37;
      sub_7FF60();
      *(_WORD *)(v40 + 14) = 1024;
      int v62 = v59 & 1;
      sub_7FF60();
      _os_log_impl(&dword_0, v38, v39, "isAppInParse: %{BOOL}d, isExplicitlyFitnessPlusRequest: %{BOOL}d, isAny3pFitnessAppInstalled: %{BOOL}d", (uint8_t *)v40, 0x14u);
      swift_slowDealloc();
    }

    v24(v36, v60);
    char v41 = (v33 != 0) | v37 | v59;
    sub_6A60(&qword_AD0F0);
    uint64_t v42 = *(void *)(v61 + 72);
    unint64_t v43 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_811A0;
    unint64_t v44 = v29 + v43;
    if (v41)
    {
      BOOL v46 = v54;
      os_log_type_t v45 = v55;
      v53(v44, v54, v55);
      uint64_t v47 = v61;
      sub_20260();
      v48();
      (*(void (**)(char *, char *))(v47 + 8))(v46, v45);
    }
    else
    {
      uint64_t v50 = v61;
      unint64_t v51 = v55;
      sub_20260();
      v52();
      (*(void (**)(unint64_t, char *, char *))(v50 + 32))(v44 + v42, v54, v51);
    }
  }
  else
  {
    sub_6A60(&qword_AD0F0);
    uint64_t v29 = sub_20234();
    *(_OWORD *)(v29 + 16) = xmmword_80D90;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v16[v29], v9, v2);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v2);
  }
  return v29;
}

uint64_t sub_1FFF8(uint64_t a1)
{
  char v1 = sub_ED1C(a1);
  if (v1 == 5)
  {
    char v2 = 0;
  }
  else
  {
    sub_2018C(v1);
    sub_58420((uint64_t)&off_9FEC8);
    unint64_t v3 = sub_7F8E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3 >> 62) {
      goto LABEL_22;
    }
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4)
    {
      while (1)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          sub_80040();
        }
        else {
          swift_retain();
        }
        BOOL v5 = sub_7F8A0();
        swift_release();
        if (!v5) {
          break;
        }
        if (v4 != 1)
        {
          uint64_t v6 = 5;
          while (1)
          {
            if ((v3 & 0xC000000000000001) != 0) {
              sub_80040();
            }
            else {
              swift_retain();
            }
            uint64_t v7 = v6 - 3;
            if (__OFADD__(v6 - 4, 1)) {
              break;
            }
            BOOL v8 = sub_7F8A0();
            swift_release();
            if (v8)
            {
              ++v6;
              if (v7 != v4) {
                continue;
              }
            }
            char v2 = !v8;
            goto LABEL_19;
          }
          __break(1u);
LABEL_22:
          swift_bridgeObjectRetain();
          uint64_t v4 = sub_801C0();
          if (v4) {
            continue;
          }
        }
        goto LABEL_9;
      }
      char v2 = 1;
    }
    else
    {
LABEL_9:
      char v2 = 0;
    }
LABEL_19:
    swift_bridgeObjectRelease_n();
  }
  return v2 & 1;
}

unint64_t sub_2018C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      unint64_t result = 0xD000000000000014;
      break;
  }
  return result;
}

uint64_t sub_20234()
{
  return swift_allocObject();
}

uint64_t getEnumTagSinglePayload for HealthReference(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDE)
  {
    if (a2 + 34 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 34) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 35;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x23;
  int v5 = v6 - 35;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthReference(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 34 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 34) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDD)
  {
    unsigned int v6 = ((a2 - 222) >> 8) + 1;
    *unint64_t result = a2 + 34;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x203C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 34;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthReference()
{
  return &type metadata for HealthReference;
}

unint64_t sub_20400()
{
  unint64_t result = qword_AD0F8;
  if (!qword_AD0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD0F8);
  }
  return result;
}

uint64_t sub_2044C()
{
  unint64_t v0 = sub_802D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x23) {
    return 35;
  }
  else {
    return v0;
  }
}

uint64_t sub_204A0(char a1)
{
  return *(void *)&aFirst_1[8 * a1];
}

uint64_t sub_204C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_65468(*a1, *a2);
}

Swift::Int sub_204CC()
{
  return sub_DF1C(*v0);
}

uint64_t sub_204D4(uint64_t a1)
{
  return sub_E23C(a1, *v1);
}

Swift::Int sub_204DC(uint64_t a1)
{
  return sub_E514(a1, *v1);
}

uint64_t sub_204E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2044C();
  *a1 = result;
  return result;
}

uint64_t sub_20514@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_204A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_20540(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_20648();
  unint64_t v5 = sub_20694();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_205AC()
{
  unint64_t result = qword_AD100;
  if (!qword_AD100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD100);
  }
  return result;
}

unint64_t sub_205FC()
{
  unint64_t result = qword_AD108;
  if (!qword_AD108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD108);
  }
  return result;
}

unint64_t sub_20648()
{
  unint64_t result = qword_AD110;
  if (!qword_AD110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD110);
  }
  return result;
}

unint64_t sub_20694()
{
  unint64_t result = qword_AD118;
  if (!qword_AD118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD118);
  }
  return result;
}

uint64_t sub_206E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_7E760();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_18A80(a1, (uint64_t)v12);
  uint64_t result = swift_getEnumCaseMultiPayload();
  int v14 = result;
  if (result == 1)
  {
    *(void *)a3 = *v12;
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_216E0(a2, (uint64_t *)a3);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  *(unsigned char *)(a3 + 40) = v14 == 1;
  return result;
}

uint64_t sub_20870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v98 = a8;
  uint64_t v99 = a7;
  uint64_t v101 = a5;
  uint64_t v102 = a4;
  uint64_t v103 = a3;
  uint64_t v106 = sub_6A60(&qword_AD1E8);
  __chkstk_darwin(v106);
  sub_F67C();
  uint64_t v97 = v8;
  uint64_t v9 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v9 - 8);
  sub_F67C();
  uint64_t v94 = v10;
  sub_7F6B0();
  sub_6D54();
  uint64_t v95 = v12;
  uint64_t v96 = v11;
  __chkstk_darwin(v11);
  sub_F67C();
  uint64_t v93 = v13;
  uint64_t v14 = sub_7ED20();
  sub_6D54();
  uint64_t v16 = v15;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v91 - v21;
  int v100 = sub_7FE20();
  uint64_t v104 = (void **)sub_7F9D0();
  uint64_t v23 = *v104;
  uint64_t v105 = sub_6A60(&qword_ABED0);
  uint64_t v24 = swift_allocObject();
  long long v91 = xmmword_811A0;
  *(_OWORD *)(v24 + 16) = xmmword_811A0;
  uint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  id v25 = v23;
  sub_7ECD0();
  sub_80110();
  uint64_t v92 = v16;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v22, v14);
  uint64_t v27 = v108;
  unint64_t v28 = v109;
  *(void *)(v24 + 56) = &type metadata for String;
  unint64_t v29 = sub_6C34();
  *(void *)(v24 + 64) = v29;
  *(void *)(v24 + 32) = v27;
  *(void *)(v24 + 40) = v28;
  *(void *)(v24 + 96) = sub_D838(0, &qword_AD1F0);
  *(void *)(v24 + 104) = sub_21D84();
  uint64_t v30 = v101;
  *(void *)(v24 + 72) = v101;
  id v31 = v30;
  sub_7FAE0();

  swift_bridgeObjectRelease();
  uint64_t v32 = (void *)v102;
  swift_bridgeObjectRetain();
  char v33 = sub_50760(v103, v32);
  if (v33 == 5)
  {
    type metadata accessor for HealthFlowError();
    sub_21DFC();
    uint64_t v34 = sub_E934(2);
    sub_7FE30();
    uint64_t v35 = *v104;
    uint64_t v36 = sub_21DE4();
    *(_OWORD *)(v36 + 16) = xmmword_80D90;
    id v37 = v35;
    uint64_t v38 = sub_E854();
    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = v29;
LABEL_12:
    *(void *)(v36 + 32) = v38;
    *(void *)(v36 + 40) = v39;
    sub_21E18();

    swift_bridgeObjectRelease();
    sub_21D3C((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v67 = sub_21E3C();
    *uint64_t v68 = v34;
    uint64_t v69 = (uint64_t)v97;
    *uint64_t v97 = v67;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v99(v69);
    swift_release();
    return sub_D8DC(v69, &qword_AD1E8);
  }
  char v40 = v33;
  uint64_t v103 = v29;
  sub_7ECD0();
  uint64_t v41 = v92;
  if ((*(unsigned int (**)(char *, uint64_t))(v92 + 88))(v20, v14) != enum case for Parse.NLv3IntentOnly(_:))
  {
    v26(v20, v14);
    type metadata accessor for HealthFlowError();
    sub_21DFC();
    uint64_t v34 = sub_E934(0);
    sub_7FE30();
    uint64_t v65 = *v104;
    uint64_t v36 = sub_21DE4();
    *(_OWORD *)(v36 + 16) = xmmword_80D90;
    id v37 = v65;
    uint64_t v38 = sub_E854();
    uint64_t v66 = v103;
    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = v66;
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v41 + 96))(v20, v14);
  uint64_t v43 = v95;
  uint64_t v42 = v96;
  uint64_t v44 = v93;
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v93, v20, v96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v94, v44, v42);
  uint64_t v102 = sub_D838(0, (unint64_t *)&qword_AC898);
  os_log_type_t v45 = sub_689DC();
  sub_7FE20();
  BOOL v46 = *v104;
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v91;
  id v48 = v46;
  uint64_t v49 = sub_66D18();
  uint64_t v50 = v103;
  *(void *)(v47 + 56) = &type metadata for String;
  *(void *)(v47 + 64) = v50;
  *(void *)(v47 + 32) = v49;
  *(void *)(v47 + 40) = v51;
  id v52 = [v45 description];
  uint64_t v53 = sub_7FC50();
  uint64_t v55 = v54;

  *(void *)(v47 + 96) = &type metadata for String;
  *(void *)(v47 + 104) = v50;
  *(void *)(v47 + 72) = v53;
  *(void *)(v47 + 80) = v55;
  sub_7FAE0();

  swift_bridgeObjectRelease();
  id v56 = [v45 verb];
  uint64_t v57 = sub_7FC50();
  uint64_t v59 = v58;

  if (v57 == 0x6C65636E6163 && v59 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v61 = sub_802B0();
    swift_bridgeObjectRelease();
    if ((v61 & 1) == 0)
    {
      int v62 = v104;
      switch(v40)
      {
        case 1:
          id v63 = [v45 workoutGoalUnitType];
          type metadata accessor for INWorkoutGoalUnitType(0);
          goto LABEL_19;
        case 2:
          id v63 = [v45 workoutLocationType];
          type metadata accessor for INWorkoutLocationType(0);
          goto LABEL_19;
        case 3:
          uint64_t v75 = sub_7FEB0();
          char v77 = v76;
          uint64_t v110 = sub_6A60(&qword_AD210);
          uint64_t v108 = v75;
          LOBYTE(v109) = v77 & 1;
          goto LABEL_20;
        case 4:
          char v78 = sub_7FE90();
          uint64_t v110 = sub_6A60(&qword_AD200);
          LOBYTE(v108) = v78;
          goto LABEL_20;
        default:
          id v63 = [v45 workoutName];
          uint64_t v64 = sub_6A60(&qword_ACBC0);
LABEL_19:
          uint64_t v110 = v64;
          uint64_t v108 = (uint64_t)v63;
LABEL_20:
          uint64_t v79 = (uint64_t)v97;
          uint64_t v80 = v99;
          sub_7FE20();
          uint64_t v81 = *v62;
          uint64_t v82 = sub_21DE4();
          *(_OWORD *)(v82 + 16) = xmmword_80D90;
          id v83 = v81;
          id v84 = [v45 description];
          uint64_t v85 = sub_7FC50();
          uint64_t v87 = v86;

          uint64_t v88 = v103;
          *(void *)(v82 + 56) = &type metadata for String;
          *(void *)(v82 + 64) = v88;
          *(void *)(v82 + 32) = v85;
          *(void *)(v82 + 40) = v87;
          sub_7FAE0();

          swift_bridgeObjectRelease();
          sub_18B8C((uint64_t)&v108, (uint64_t)v107);
          id v89 = v45;
          sub_7E790();
          uint64_t v90 = sub_6A60(&qword_AD208);
          sub_9B2C(v79, 0, 1, v90);
          swift_storeEnumTagMultiPayload();
          v80(v79);

          sub_D8DC(v79, &qword_AD1E8);
          _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)&v108);
          break;
      }
      goto LABEL_21;
    }
  }
  type metadata accessor for HealthFlowError();
  swift_allocObject();
  uint64_t v71 = sub_E934(9);
  sub_21D3C((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
  uint64_t v72 = swift_allocError();
  uint64_t *v73 = v71;
  uint64_t v74 = (uint64_t)v97;
  *uint64_t v97 = v72;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v99(v74);

  swift_release();
  sub_D8DC(v74, &qword_AD1E8);
LABEL_21:
  sub_F314(v94);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v93, v96);
}

uint64_t sub_21200(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void *))
{
  sub_7F870();
  sub_6D54();
  __chkstk_darwin(v9);
  sub_755C();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v13 - 8);
  sub_755C();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_7E6E0();
  sub_6D54();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_755C();
  uint64_t v23 = v22 - v21;
  swift_bridgeObjectRetain();
  char v24 = sub_50760(a3, a4);
  if (v24 == 5)
  {
    type metadata accessor for HealthFlowError();
    sub_21DFC();
    uint64_t v25 = sub_E934(2);
    sub_7FE30();
    uint64_t v26 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v27 = sub_21DE4();
    *(_OWORD *)(v27 + 16) = xmmword_80D90;
    id v28 = v26;
    uint64_t v29 = sub_E854();
    uint64_t v31 = v30;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = sub_6C34();
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v31;
    sub_21E18();

    swift_bridgeObjectRelease();
    sub_21D3C((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v32 = sub_21E3C();
    *char v33 = v25;
    v43[0] = v32;
    char v44 = 1;
    swift_retain();
    a6(v43);
    swift_release();
    return sub_D8DC((uint64_t)v43, (uint64_t *)&unk_AF480);
  }
  else
  {
    char v35 = v24;
    sub_7FE20();
    uint64_t v42 = v17;
    uint64_t v36 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v37 = sub_21DE4();
    *(_OWORD *)(v37 + 16) = xmmword_80D90;
    id v38 = v36;
    sub_80110();
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = sub_6C34();
    *(void *)(v37 + 32) = 0;
    *(void *)(v37 + 40) = 0xE000000000000000;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_42CB8();
    sub_6A60(&qword_AC9C8);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_80D90;
    v43[1] = 0xE000000000000000;
    sub_3E658(3);
    *(void *)(v39 + 32) = 0;
    *(void *)(v39 + 40) = 0xE000000000000000;
    sub_7E6B0();
    sub_7F760();
    uint64_t v40 = sub_7F750();
    sub_6A60(&qword_ACBA0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_80D90;
    sub_7F860();
    v43[0] = v41;
    sub_21D3C((unint64_t *)&unk_AF450, 255, (void (*)(uint64_t))&type metadata accessor for CATOption);
    sub_6A60(&qword_ACBA8);
    sub_18A2C();
    sub_7FFE0();
    type metadata accessor for HealthCATWrapper();
    swift_allocObject();
    sub_5B344(v40, v12);
    sub_5B484(v35, 0);
    swift_release();
    sub_206E0(v16, v23, (uint64_t)v43);
    a6(v43);
    sub_D8DC((uint64_t)v43, (uint64_t *)&unk_AF480);
    sub_D8DC(v16, (uint64_t *)&unk_AF440);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v23, v42);
  }
}

uint64_t sub_216E0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v12, v12[3]);
  sub_7E3D0();
  uint64_t v7 = sub_7E6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  sub_9B2C((uint64_t)v6, 0, 1, v7);
  uint64_t v8 = sub_7ED80();
  memset(v10, 0, sizeof(v10));
  uint64_t v11 = 0;
  a2[3] = v8;
  a2[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a2);
  sub_7E5D0();
  sub_D8DC((uint64_t)v10, (uint64_t *)&unk_AF490);
  sub_D8DC((uint64_t)v6, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v13);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v12);
}

uint64_t type metadata accessor for StartWorkoutsNeedsValueStrategy()
{
  return self;
}

uint64_t sub_218AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  return sub_20870(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_218C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void *))
{
  return sub_21200(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_218DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t started = type metadata accessor for StartWorkoutsNeedsValueStrategy();

  return NeedsValueFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, started, a9);
}

uint64_t sub_21970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t started = type metadata accessor for StartWorkoutsNeedsValueStrategy();

  return NeedsValueFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, started, a9);
}

uint64_t sub_21A04()
{
  type metadata accessor for StartWorkoutsNeedsValueStrategy();

  return sub_7EB80();
}

uint64_t sub_21A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t started = type metadata accessor for StartWorkoutsNeedsValueStrategy();

  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)(a1, a2, a3, a4, a5, a6, a7, started, a9);
}

uint64_t sub_21B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t started = type metadata accessor for StartWorkoutsNeedsValueStrategy();
  *uint64_t v14 = v7;
  v14[1] = sub_18744;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_21C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  uint64_t started = type metadata accessor for StartWorkoutsNeedsValueStrategy();
  *uint64_t v16 = v8;
  v16[1] = sub_18BE8;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, started, a8);
}

uint64_t sub_21CF4(uint64_t a1, uint64_t a2)
{
  return sub_21D3C(&qword_AD1E0, a2, (void (*)(uint64_t))type metadata accessor for StartWorkoutsNeedsValueStrategy);
}

uint64_t sub_21D3C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21D84()
{
  unint64_t result = qword_AD1F8;
  if (!qword_AD1F8)
  {
    sub_D838(255, &qword_AD1F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD1F8);
  }
  return result;
}

uint64_t sub_21DE4()
{
  return swift_allocObject();
}

uint64_t sub_21DFC()
{
  return swift_allocObject();
}

uint64_t sub_21E18()
{
  return sub_7FAE0();
}

uint64_t sub_21E3C()
{
  return swift_allocError();
}

void *sub_21E5C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v5)
  {
    while (1)
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t result = (void *)sub_800B0();
      if (v5 < 0) {
        break;
      }
      uint64_t v7 = 0;
      while (v5 != v7)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = sub_80040();
        }
        else
        {
          uint64_t v8 = *(void *)(a1 + 8 * v7 + 32);
          swift_retain();
        }
        sub_25210(a2, &v9);
        swift_release();
        if (v2)
        {
          swift_release();
          swift_release();
          return (void *)v8;
        }
        ++v7;
        sub_80080();
        sub_800C0();
        sub_800D0();
        sub_80090();
        if (v5 == v7)
        {
          uint64_t v8 = (uint64_t)v10;
          swift_release();
          return (void *)v8;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_801C0();
      swift_bridgeObjectRelease();
      if (!v5) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_21FF8(unint64_t a1, void *a2)
{
  int v3 = v2;
  uint64_t v6 = sub_7EEB0();
  __chkstk_darwin(v6 - 8);
  id v28 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_7F010();
  uint64_t v8 = *(void *)(v27 - 8);
  uint64_t v9 = __chkstk_darwin(v27);
  uint64_t v26 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v25 = sub_7EFA0();
  uint64_t v13 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v16 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v16)
  {
    while (1)
    {
      uint64_t v29 = _swiftEmptyArrayStorage;
      sub_4B8C0();
      if (v16 < 0) {
        break;
      }
      v20[1] = a2;
      v20[2] = v3;
      uint64_t v17 = v8;
      uint64_t v8 = 0;
      a2 = v29;
      uint64_t v21 = (void (**)(char *, char *, uint64_t))(v17 + 16);
      unint64_t v22 = a1 & 0xC000000000000001;
      int v3 = (void (**)(char *, uint64_t))(v17 + 8);
      v20[3] = v13 + 32;
      uint64_t v23 = v16;
      unint64_t v24 = a1;
      while (v16 != v8)
      {
        if (v22) {
          sub_80040();
        }
        else {
          swift_retain();
        }
        sub_7F000();
        sub_2548C();
        sub_7EFF0();
        sub_7EF90();
        uint64_t v18 = v27;
        (*v21)(v26, v12, v27);
        sub_7EF70();
        (*v3)(v12, v18);
        swift_release();
        uint64_t v29 = a2;
        unint64_t v19 = a2[2];
        if (v19 >= a2[3] >> 1)
        {
          sub_4B8C0();
          a2 = v29;
        }
        ++v8;
        a2[2] = v19 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))((unint64_t)a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v19, v15, v25);
        uint64_t v16 = v23;
        a1 = v24;
        if (v23 == v8) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_801C0();
      swift_bridgeObjectRelease();
      if (!v16) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_release();
  }
}

void sub_22394()
{
  sub_15258();
  unint64_t v1 = v0;
  sub_7FBE0();
  sub_6D54();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_801C0();
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_801C0();
      swift_bridgeObjectRelease();
LABEL_3:
      if (v5 == 1)
      {
        sub_140AC(0, (v1 & 0xC000000000000001) == 0, v1);
        if ((v1 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          sub_80040();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain();
        }
        sub_7FBA0();
        sub_9D08();
        sub_15528();
        v6();
        swift_retain_n();
        uint64_t v7 = sub_7FBD0();
        os_log_type_t v8 = sub_7FE20();
        if (os_log_type_enabled(v7, v8))
        {
          uint64_t v9 = (_DWORD *)sub_269F4();
          uint64_t v27 = sub_1FA2C();
          *uint64_t v9 = 136315138;
          sub_7F8B0();
          sub_26954(&qword_AC4A0, 255, (void (*)(uint64_t))&type metadata accessor for App);
          uint64_t v10 = sub_802A0();
          uint64_t v12 = sub_1CDF0(v10, v11, &v27);
          sub_26AF0(v12);
          sub_7FF60();
          swift_release_n();
          swift_bridgeObjectRelease();
          sub_26AD0(&dword_0, v13, v14, "Only found 1 app, %s so we're using that");
          swift_arrayDestroy();
          sub_9CB0();
          sub_9CB0();
        }
        else
        {

          swift_release_n();
        }
        sub_26A0C();
        v20();
        sub_7E7F0();
        sub_7E7E0();
        swift_release();
      }
      else
      {
        sub_7FBA0();
        sub_9D08();
        sub_15528();
        v15();
        uint64_t v16 = sub_7FBD0();
        os_log_type_t v17 = sub_7FE20();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)sub_26B04();
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl(&dword_0, v16, v17, "Disambiguating apps", v18, 2u);
          sub_9CB0();
        }

        sub_26A0C();
        v19();
        sub_7E7F0();
        sub_7E7D0();
      }
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    if (v5) {
      goto LABEL_3;
    }
  }
  sub_7FBA0();
  sub_9D08();
  sub_15528();
  v22();
  uint64_t v23 = sub_7FBD0();
  os_log_type_t v24 = sub_7FE20();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_0, v23, v24, "No apps found using AppFinder", v25, 2u);
    sub_9CB0();
  }

  sub_26A0C();
  v26();
  sub_7E7F0();
  sub_7E7C0();
LABEL_18:
  sub_15240();
}

void sub_22810()
{
  v0._countAndFlagsBits = sub_7F890();
  if (v0._object && (BOOL v1 = sub_7F9A0(v0), swift_bridgeObjectRelease(), v1))
  {
    sub_7E7F0();
    sub_7E7E0();
  }
  else
  {
    sub_22394();
  }
}

unint64_t sub_22898()
{
  return sub_79DF8(qword_AD218);
}

uint64_t sub_228CC()
{
  sub_9D38();
  v1[44] = v2;
  v1[45] = v0;
  uint64_t v3 = sub_7F6D0();
  v1[46] = v3;
  sub_9C80(v3);
  v1[47] = v4;
  v1[48] = sub_9CC8();
  uint64_t v5 = sub_7ED20();
  v1[49] = v5;
  sub_9C80(v5);
  v1[50] = v6;
  v1[51] = sub_9CC8();
  uint64_t v7 = sub_7FBE0();
  v1[52] = v7;
  sub_9C80(v7);
  v1[53] = v8;
  v1[54] = sub_DBC0();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  sub_9D50();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_229F4()
{
  uint64_t v59 = v0;
  uint64_t v1 = v0[59];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[53];
  uint64_t v4 = sub_7FBA0();
  v0[60] = v4;
  sub_9D08();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[61] = v5;
  v0[62] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v57 = v5;
  v5(v1, v4, v2);
  swift_retain();
  uint64_t v6 = sub_7FBD0();
  os_log_type_t v7 = sub_7FE20();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v55 = v0[53];
    uint64_t v8 = v0[45];
    uint64_t v9 = (uint8_t *)sub_269F4();
    uint64_t v58 = sub_1FA2C();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = *(void *)(v8 + 16);
    unint64_t v10 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    v0[43] = sub_1CDF0(v11, v10, &v58);
    sub_7FF60();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_0, v6, v7, "Starting to resolve apps for %s", v9, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    uint64_t v12 = *(void (**)(void))(v55 + 8);
    sub_26A1C();
    v12();
  }
  else
  {
    uint64_t v13 = v0[59];
    uint64_t v14 = v0[52];
    uint64_t v15 = v0[53];
    swift_release();

    uint64_t v12 = *(void (**)(void))(v15 + 8);
    ((void (*)(uint64_t, uint64_t))v12)(v13, v14);
  }
  v0[63] = v12;
  uint64_t v16 = v0[50];
  sub_7ECD0();
  sub_11158();
  uint64_t v18 = v17;
  unint64_t v19 = *(void (**)(void))(v16 + 8);
  sub_26A74();
  sub_26A28();
  v19();
  uint64_t v20 = v0[52];
  if (v18)
  {
    uint64_t v21 = v0[58];
    sub_9D08();
    v57(v21, v4, v20);
    swift_retain_n();
    unint64_t v22 = sub_7FBD0();
    os_log_type_t v23 = sub_7FE20();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v0[58];
    uint64_t v26 = v0[52];
    if (v24)
    {
      uint64_t v27 = (uint8_t *)sub_269F4();
      uint64_t v58 = sub_1FA2C();
      *(_DWORD *)uint64_t v27 = 136315138;
      v0[41] = v18;
      sub_7F8B0();
      sub_26954(&qword_AC4A0, 255, (void (*)(uint64_t))&type metadata accessor for App);
      uint64_t v28 = sub_802A0();
      v0[42] = sub_1CDF0(v28, v29, &v58);
      sub_7FF60();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v22, v23, "Found app in intent, using that (%s)", v27, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      sub_26A1C();
      v30();
    }
    else
    {
      swift_release_n();

      ((void (*)(uint64_t, uint64_t))v12)(v25, v26);
    }
    if (qword_ABBE8 != -1) {
      swift_once();
    }
    sub_26864((uint64_t)qword_AD218, (uint64_t)(v0 + 2));
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_26A74();
    sub_5F738(v40, v41, v18, 9);
    swift_bridgeObjectRelease();
    sub_268C0((uint64_t)(v0 + 2));
    sub_7E7F0();
    sub_7E7E0();
    swift_release();
    sub_26A34();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = sub_26AB4();
    return v43(v42);
  }
  else
  {
    uint64_t v31 = v0[57];
    sub_7ECD0();
    sub_12110();
    uint64_t v33 = v32;
    uint64_t v56 = v34;
    v0[64] = v34;
    v0[65] = v32;
    sub_26A28();
    v19();
    sub_9D08();
    v57(v31, v4, v20);
    swift_bridgeObjectRetain_n();
    char v35 = sub_7FBD0();
    os_log_type_t v36 = sub_7FE20();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)sub_269F4();
      uint64_t v58 = sub_1FA2C();
      *(_DWORD *)uint64_t v37 = 136315138;
      v0[35] = v56;
      v0[36] = v33;
      sub_6A60(&qword_AF470);
      uint64_t v38 = sub_7FF30();
      v0[38] = sub_1CDF0(v38, v39, &v58);
      sub_7FF60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v35, v36, "Got a modality: %s", v37, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_26A1C();
    v45();
    uint64_t v46 = v0[45];
    sub_D98C(v46 + 32, (uint64_t)(v0 + 7));
    uint64_t v47 = (void *)sub_26AC4();
    sub_9AE0(v47, v48);
    uint64_t v49 = sub_26A74();
    v50(v49);
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 7));
    uint64_t v52 = *(void *)(v46 + 16);
    uint64_t v51 = *(void *)(v46 + 24);
    v0[66] = v51;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_58420((uint64_t)&off_9FEC8);
    v0[67] = v53;
    uint64_t v54 = (void *)swift_task_alloc();
    v0[68] = v54;
    void *v54 = v0;
    v54[1] = sub_23194;
    return static AppFinder.listApps(intentID:siriAuthorizationRestriction:)(v52, v51, v53);
  }
}

uint64_t sub_23194()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *uint64_t v2 = v1;
  *(void *)(v4 + 552) = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_9D50();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_2329C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t *a9, uint64_t a10, void (*a11)(uint64_t, uint64_t, uint64_t), uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26)
{
  sub_26A58();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  uint64_t v29 = (uint64_t)(v26 + 12);
  uint64_t v30 = (void (*)(uint64_t, uint64_t, uint64_t))v26[61];
  uint64_t v31 = v26[60];
  uint64_t v32 = v26[56];
  uint64_t v33 = v26[52];
  sub_9D08();
  v30(v32, v31, v33);
  swift_bridgeObjectRetain_n();
  uint64_t v34 = sub_7FBD0();
  os_log_type_t v35 = sub_7FE20();
  BOOL v36 = os_log_type_enabled(v34, v35);
  unint64_t v37 = v26[69];
  if (v36)
  {
    uint64_t v38 = (uint8_t *)sub_269F4();
    *(_DWORD *)uint64_t v38 = 134217984;
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_801C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v39 = *(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    v26[37] = v39;
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v34, v35, "Found %ld apps", v38, 0xCu);
    sub_9CB0();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v40 = v26[53] + 8;
  sub_26A28();
  v41();
  sub_9AE0(v26 + 12, v26[15]);
  sub_26A74();
  if (sub_7E3F0())
  {
    a12 = v26[62];
    a13 = v40;
    uint64_t v42 = v26[60];
    a11 = (void (*)(uint64_t, uint64_t, uint64_t))v26[61];
    uint64_t v43 = v26[55];
    uint64_t v44 = v26[52];
    uint64_t v45 = v26[47];
    uint64_t v46 = v26[48];
    uint64_t v47 = v26[46];
    a14 = v26 + 12;
    sub_7F940();
    char v48 = sub_7F910();
    uint64_t v49 = defaultWorkoutApp(for:workoutName:)(v46, v48);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
    uint64_t v50 = v49;
    sub_9D08();
    a11(v43, v42, v44);
    swift_retain_n();
    uint64_t v51 = sub_7FBD0();
    os_log_type_t v52 = sub_7FE20();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v54 = (void (*)(uint64_t, uint64_t))v26[63];
    uint64_t v55 = v26[55];
    uint64_t v56 = v26[52];
    if (v53)
    {
      a11 = (void (*)(uint64_t, uint64_t, uint64_t))v26[52];
      a12 = v26[63];
      a10 = v26[55];
      uint64_t v57 = (uint8_t *)sub_269F4();
      a15 = sub_1FA2C();
      *(_DWORD *)uint64_t v57 = 136315138;
      a9 = v57 + 4;
      v26[40] = v50;
      sub_7F8B0();
      sub_26954(&qword_AC4A0, 255, (void (*)(uint64_t))&type metadata accessor for App);
      uint64_t v58 = sub_802A0();
      v26[39] = sub_1CDF0(v58, v59, &a15);
      sub_7FF60();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v51, v52, "Picked the default app for this:  %s", v57, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      sub_26A1C();
      v60();
    }
    else
    {
      swift_release_n();

      v54(v55, v56);
    }
    sub_26A74();
    sub_22810();
    swift_release();
    uint64_t v29 = (uint64_t)(v26 + 12);
  }
  else
  {
    char v61 = (void (*)(uint64_t, uint64_t, uint64_t))v26[61];
    uint64_t v62 = v26[60];
    uint64_t v63 = v26[54];
    uint64_t v64 = v26[52];
    swift_bridgeObjectRelease();
    sub_9D08();
    v61(v63, v62, v64);
    uint64_t v65 = sub_7FBD0();
    os_log_type_t v66 = sub_7FE20();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)sub_26B04();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl(&dword_0, v65, v66, "Going to full disambiguation", v67, 2u);
      sub_9CB0();
    }
    uint64_t v68 = (void (*)(void))v26[63];

    sub_26AC4();
    sub_26A28();
    v68();
    sub_22394();
  }
  swift_bridgeObjectRelease();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v29);
  sub_26A34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_26AB4();
  sub_DAB0();
  return v71(v69, v70, v71, v72, v73, v74, v75, v76, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_237B8()
{
  return sub_7E940();
}

uint64_t sub_237E4()
{
  sub_9D38();
  uint64_t v1 = sub_7FBE0();
  v0[5] = v1;
  sub_9C80(v1);
  v0[6] = v2;
  v0[7] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_2386C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_7FBA0();
  sub_9D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE30();
  if (sub_26A98(v6))
  {
    uint64_t v7 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, (os_log_type_t)v1, "We are trying to confirm, but we don't support that.", v7, 2u);
    sub_9CB0();
  }
  uint64_t v9 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v10 = v0[5];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  sub_7E570();
  sub_26A80();
  uint64_t v11 = sub_7E560();
  sub_26954(&qword_AD448, 255, (void (*)(uint64_t))&type metadata accessor for CommandFailure);
  swift_allocError();
  *uint64_t v12 = v11;
  swift_willThrow();
  swift_task_dealloc();
  sub_9D44();
  return v13();
}

void sub_23A24()
{
  sub_15258();
  uint64_t v45 = v0;
  uint64_t v2 = v1;
  uint64_t v3 = sub_7FBE0();
  sub_6D54();
  uint64_t v5 = v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_7ED20();
  sub_6D54();
  uint64_t v46 = v11;
  __chkstk_darwin(v12);
  sub_755C();
  uint64_t v15 = v14 - v13;
  uint64_t v48 = v2;
  sub_7ECD0();
  uint64_t v47 = v10;
  uint64_t v44 = sub_7FC60();
  unint64_t v17 = v16;
  uint64_t v18 = sub_7FBA0();
  sub_9D08();
  uint64_t v19 = *(void *)(v5 + 16);
  v41[3] = v5 + 16;
  uint64_t v42 = v18;
  v41[2] = v19;
  sub_15528();
  v20();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_7FBD0();
  os_log_type_t v22 = sub_7FE20();
  if (sub_26A98(v22))
  {
    os_log_type_t v23 = (uint8_t *)sub_269F4();
    uint64_t v24 = sub_1FA2C();
    uint64_t v43 = v5;
    v49[0] = v24;
    v41[1] = v9;
    *(_DWORD *)os_log_type_t v23 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1CDF0(v44, v17, v49);
    sub_26AF0(v25);
    sub_7FF60();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v21, (os_log_type_t)v18, "Got disambiguation parse %s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v43;
    sub_9CB0();
    sub_9CB0();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = *(void (**)(void))(v5 + 8);
  sub_26A1C();
  v26();
  sub_7ECD0();
  sub_11158();
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v15, v47);
  if (v28)
  {
    if (qword_ABBE8 != -1) {
      swift_once();
    }
    sub_26864((uint64_t)qword_AD218, (uint64_t)v49);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_26AC4();
    sub_5F738(v29, v30, v28, 3);
    swift_bridgeObjectRelease();
    sub_268C0((uint64_t)v49);
    sub_7EAA0();
    sub_7EA90();
    swift_release();
  }
  else
  {
    sub_7ECD0();
    uint64_t v31 = sub_7FC60();
    unint64_t v33 = v32;
    os_log_type_t v34 = v42;
    sub_9D08();
    sub_15528();
    v35();
    swift_bridgeObjectRetain();
    BOOL v36 = sub_7FBD0();
    os_log_type_t v37 = sub_7FE30();
    if (sub_26A98(v37))
    {
      uint64_t v38 = sub_269F4();
      uint64_t v48 = v3;
      uint64_t v39 = (uint8_t *)v38;
      uint64_t v40 = sub_1FA2C();
      uint64_t v43 = v5;
      uint64_t v50 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      swift_bridgeObjectRetain();
      v49[5] = sub_1CDF0(v31, v33, &v50);
      sub_7FF60();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v36, v34, "Failed to find app after successful disambiguation from %s", v39, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_26A1C();
    v26();
    sub_7EAA0();
    sub_7EA80();
  }
  sub_15240();
}

uint64_t sub_23ED0()
{
  sub_9D38();
  v1[29] = v2;
  v1[30] = v0;
  v1[28] = v3;
  uint64_t v4 = sub_6A60(&qword_AC3B8);
  sub_DC74(v4);
  v1[31] = sub_9CC8();
  uint64_t v5 = sub_7F070();
  v1[32] = v5;
  sub_9C80(v5);
  v1[33] = v6;
  v1[34] = sub_DBC0();
  v1[35] = swift_task_alloc();
  uint64_t v7 = sub_7F0A0();
  v1[36] = v7;
  sub_9C80(v7);
  v1[37] = v8;
  v1[38] = sub_DBC0();
  v1[39] = swift_task_alloc();
  uint64_t v9 = sub_6A60(&qword_AD430);
  sub_DC74(v9);
  v1[40] = sub_9CC8();
  uint64_t v10 = sub_7E520();
  v1[41] = v10;
  sub_9C80(v10);
  v1[42] = v11;
  v1[43] = sub_DBC0();
  v1[44] = swift_task_alloc();
  uint64_t v12 = sub_7E4A0();
  v1[45] = v12;
  sub_9C80(v12);
  v1[46] = v13;
  v1[47] = sub_9CC8();
  uint64_t v14 = sub_7EB60();
  v1[48] = v14;
  sub_9C80(v14);
  v1[49] = v15;
  v1[50] = sub_9CC8();
  uint64_t v16 = sub_7DA40();
  v1[51] = v16;
  sub_9C80(v16);
  v1[52] = v17;
  v1[53] = sub_9CC8();
  uint64_t v18 = sub_7E6E0();
  v1[54] = v18;
  sub_9C80(v18);
  v1[55] = v19;
  v1[56] = sub_9CC8();
  uint64_t v20 = sub_7E470();
  sub_DC74(v20);
  v1[57] = sub_9CC8();
  uint64_t v21 = sub_7EA70();
  v1[58] = v21;
  sub_9C80(v21);
  v1[59] = v22;
  v1[60] = sub_9CC8();
  uint64_t v23 = sub_7FBE0();
  v1[61] = v23;
  sub_9C80(v23);
  v1[62] = v24;
  v1[63] = sub_DBC0();
  v1[64] = swift_task_alloc();
  sub_9D50();
  return _swift_task_switch(v25, v26, v27);
}

uint64_t sub_24178()
{
  uint64_t v1 = v0[64];
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[62];
  uint64_t v4 = sub_7FBA0();
  v0[65] = v4;
  sub_9D08();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[66] = v5;
  v0[67] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_7FBD0();
  os_log_type_t v7 = sub_7FE20();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v21 = v0[62];
    uint64_t v8 = (uint8_t *)sub_269F4();
    sub_1FA2C();
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_7F8B0();
    swift_bridgeObjectRetain();
    sub_7FD30();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_26AC4();
    v0[27] = sub_1CDF0(v9, v10, v11);
    sub_7FF60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v6, v7, "Making disambiguation prompt for apps: %s", v8, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    uint64_t v12 = *(void (**)(void))(v21 + 8);
    sub_26A1C();
    v12();
  }
  else
  {
    uint64_t v13 = v0[62];
    swift_bridgeObjectRelease_n();

    uint64_t v12 = *(void (**)(void))(v13 + 8);
    uint64_t v14 = sub_26AC4();
    ((void (*)(uint64_t))v12)(v14);
  }
  v0[68] = v12;
  unint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  swift_retain();
  uint64_t v17 = sub_21E5C(v16, v15);
  v0[69] = v17;
  uint64_t v18 = *sub_9AE0((void *)(v15 + 272), *(void *)(v15 + 296));
  uint64_t v22 = (uint64_t (*)(char, char, char, char, uint64_t, uint64_t))((char *)&dword_AF0A8 + dword_AF0A8);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[70] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_24450;
  return v22(0, 1, 1, 0, (uint64_t)v17, v18);
}

uint64_t sub_24450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_26A58();
  uint64_t v20 = (void *)*v19;
  sub_19EF0();
  *uint64_t v21 = v20;
  v20[71] = v22;
  v20[72] = v18;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v36 = v20[44];
    uint64_t v37 = v20[43];
    uint64_t v38 = v20[40];
    uint64_t v39 = v20[39];
    uint64_t v40 = v20[38];
    uint64_t v41 = v20[35];
    uint64_t v42 = v20[34];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_DAB0();
    return v24(v23, v24, v25, v26, v27, v28, v29, v30, v36, v37, v38, v39, v40, v41, v42, a16, a17, a18);
  }
  else
  {
    sub_9D50();
    sub_DAB0();
    return _swift_task_switch(v32, v33, v34);
  }
}

uint64_t sub_24670()
{
  uint64_t v73 = v0;
  uint64_t v1 = v0[53];
  unint64_t v2 = v0[29];
  sub_7E450();
  sub_7EA20();
  sub_7E6D0();
  sub_7ED30();
  sub_9AE0(v0 + 7, v0[10]);
  sub_7E390();
  uint64_t v3 = sub_42DEC(v2, v1);
  sub_26A28();
  v4();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 7));
  sub_7EB40();
  uint64_t v5 = v3[2];
  uint64_t v64 = (uint64_t)v3;
  if (v5)
  {
    uint64_t v6 = v0[46];
    os_log_type_t v7 = (char *)v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v66 = v0[42];
    uint64_t v68 = *(void *)(v6 + 72);
    uint64_t v8 = (void (**)(char *, char *, uint64_t))(v66 + 32);
    swift_bridgeObjectRetain();
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    do
    {
      uint64_t v11 = v0[40];
      uint64_t v10 = v0[41];
      sub_15528();
      v12();
      sub_7E490();
      sub_26A0C();
      v13();
      if (sub_6B0C(v11, 1, v10) == 1)
      {
        sub_D8DC(v0[40], &qword_AD430);
      }
      else
      {
        uint64_t v14 = (char *)v0[43];
        uint64_t v15 = (char *)v0[44];
        uint64_t v16 = v0[41];
        uint64_t v17 = *v8;
        (*v8)(v15, (char *)v0[40], v16);
        v17(v14, v15, v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = (char *)sub_131C0(0, *((void *)v9 + 2) + 1, 1, (uint64_t)v9);
        }
        unint64_t v19 = *((void *)v9 + 2);
        unint64_t v18 = *((void *)v9 + 3);
        if (v19 >= v18 >> 1) {
          uint64_t v9 = (char *)sub_131C0(v18 > 1, v19 + 1, 1, (uint64_t)v9);
        }
        uint64_t v20 = (char *)v0[43];
        uint64_t v21 = v0[41];
        *((void *)v9 + 2) = v19 + 1;
        v17(&v9[((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v19], v20, v21);
      }
      v7 += v68;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t))v0[66];
  uint64_t v62 = v0[65];
  uint64_t v63 = v0[63];
  uint64_t v67 = v0[61];
  uint64_t v22 = v0[49];
  uint64_t v23 = v0[50];
  uint64_t v24 = v0[48];
  uint64_t v25 = v0[39];
  uint64_t v59 = v0[37];
  uint64_t v60 = v0[38];
  uint64_t v61 = v0[36];
  unint64_t v27 = v0[29];
  uint64_t v26 = (void *)v0[30];
  uint64_t v71 = sub_7EB50();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
  swift_retain();
  sub_21FF8(v27, v26);
  v72[1] = 0xE000000000000000;
  sub_3E658(0);
  sub_7E680();
  v72[0] = v64;
  sub_43DF0(v71);
  sub_7E640();
  sub_6A60(&qword_AC9C8);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_80D90;
  *(void *)(v28 + 32) = 0x656D614E707061;
  *(void *)(v28 + 40) = 0xE700000000000000;
  sub_7E6B0();
  sub_7F090();
  sub_7F080();
  sub_7F060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v60, v25, v61);
  sub_7F020();
  sub_9D08();
  v69(v63, v62, v67);
  uint64_t v29 = sub_7FBD0();
  os_log_type_t v30 = sub_7FE20();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = (void (*)(uint64_t, uint64_t))v0[68];
  uint64_t v33 = v0[63];
  uint64_t v34 = v0[61];
  if (v31)
  {
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[35];
    uint64_t v37 = v0[32];
    uint64_t v38 = v0[33];
    uint64_t v39 = (uint8_t *)sub_269F4();
    v72[0] = sub_1FA2C();
    *(_DWORD *)uint64_t v39 = 136315138;
    sub_9D08();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v35, v36, v37);
    uint64_t v40 = sub_7FC60();
    v0[26] = sub_1CDF0(v40, v41, v72);
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v29, v30, "#WorkoutAppResolutionStrategyAsync sending disambiguation system dialog acts: %s", v39, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    sub_26A1C();
    v42();
  }
  else
  {

    v32(v33, v34);
  }
  uint64_t v43 = v0[55];
  uint64_t v44 = v0[56];
  uint64_t v45 = v0[54];
  uint64_t v46 = v0[35];
  uint64_t v47 = v0[33];
  uint64_t v65 = v0[32];
  uint64_t v48 = v0[31];
  uint64_t v70 = v0[30];
  sub_6A60(&qword_AD438);
  unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_80D90;
  unint64_t v51 = v50 + v49;
  sub_9D08();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v47 + 16))(v51, v46, v65);
  sub_7E650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v48, v44, v45);
  sub_9B2C(v48, 0, 1, v45);
  sub_7EA40();
  sub_7EA60();
  sub_D98C(v70 + 312, (uint64_t)(v0 + 2));
  uint64_t v52 = v0[5];
  uint64_t v53 = v0[6];
  sub_9AE0(v0 + 2, v52);
  uint64_t v54 = (void *)swift_task_alloc();
  v0[73] = v54;
  void *v54 = v0;
  v54[1] = sub_24DA4;
  uint64_t v55 = v0[71];
  uint64_t v56 = v0[60];
  uint64_t v57 = v0[28];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v57, v55, v56, v52, v53);
}

uint64_t sub_24DA4()
{
  sub_9D38();
  sub_9C98();
  uint64_t v2 = *v1;
  sub_19EF0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 592) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_24E84()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v13 = *(void *)(v0 + 464);
  uint64_t v14 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 312);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v12 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 264);
  uint64_t v9 = *(void *)(v0 + 256);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v13);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v10();
}

uint64_t sub_25058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_26A58();
  uint64_t v19 = *(void *)(v18 + 472);
  uint64_t v20 = *(void *)(v18 + 464);
  uint64_t v22 = *(void *)(v18 + 440);
  uint64_t v21 = *(void *)(v18 + 448);
  uint64_t v23 = *(void *)(v18 + 432);
  uint64_t v42 = *(void *)(v18 + 280);
  uint64_t v24 = *(void *)(v18 + 264);
  uint64_t v38 = *(void *)(v18 + 480);
  uint64_t v40 = *(void *)(v18 + 256);

  sub_26A28();
  v25();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v38, v20);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v18 + 16);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v42, v40);
  uint64_t v44 = *(void *)(v18 + 592);
  uint64_t v35 = *(void *)(v18 + 320);
  uint64_t v36 = *(void *)(v18 + 312);
  uint64_t v37 = *(void *)(v18 + 304);
  uint64_t v39 = *(void *)(v18 + 280);
  uint64_t v41 = *(void *)(v18 + 272);
  uint64_t v43 = *(void *)(v18 + 248);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  sub_DAB0();
  return v27(v26, v27, v28, v29, v30, v31, v32, v33, v35, v36, v37, v39, v41, v43, v44, a16, a17, a18);
}

uint64_t sub_25210@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_7F890();
  uint64_t v9 = v8;
  sub_D98C(a1 + 32, (uint64_t)v25);
  uint64_t v10 = v26;
  uint64_t v11 = v27;
  sub_9AE0(v25, v26);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v24, v10, v11);
  sub_3D31C(v24, v7, v9);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v24);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v25);
  if (v13)
  {
    sub_7FCA0();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_7F830();
    uint64_t v15 = (uint64_t)v6;
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v14 = sub_7F830();
    uint64_t v15 = (uint64_t)v6;
    uint64_t v16 = 1;
  }
  sub_9B2C(v15, v16, 1, v14);
  sub_7F890();
  sub_7F7C0();
  uint64_t v17 = sub_7F7B0();
  type metadata accessor for WorkoutApp.Builder(0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  uint64_t v19 = v18 + OBJC_IVAR____TtCC24HealthFlowDelegatePlugin10WorkoutApp7Builder_aceCommand;
  sub_7F830();
  sub_9B2C(v19, 1, 1, v14);
  uint64_t v20 = sub_3FF78(v17);
  swift_release();
  uint64_t v21 = v20 + OBJC_IVAR____TtCC24HealthFlowDelegatePlugin10WorkoutApp7Builder_aceCommand;
  swift_beginAccess();
  sub_D9F0((uint64_t)v6, v21);
  swift_endAccess();
  type metadata accessor for WorkoutApp(0);
  swift_allocObject();
  uint64_t v22 = sub_40028(v20);
  swift_release();
  uint64_t result = sub_D8DC((uint64_t)v6, &qword_AC2C8);
  *a2 = v22;
  return result;
}

void sub_2548C()
{
  sub_15258();
  uint64_t v0 = sub_7DA40();
  sub_6D54();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  sub_7F550();
  sub_26A80();
  sub_7F540();
  sub_7ED30();
  sub_9AE0(v7, v7[3]);
  sub_7E390();
  sub_255D8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v7);
  sub_7F3E0();
  swift_release();
  sub_7F5E0();
  sub_26A80();
  sub_7F5D0();
  sub_7F530();
  sub_25764();
  swift_release();
  swift_release();
  sub_15240();
}

uint64_t sub_255D8()
{
  sub_7F1B0();
  sub_6D54();
  __chkstk_darwin(v0);
  sub_755C();
  sub_7F430();
  sub_26A80();
  uint64_t v1 = sub_7F420();
  sub_7E8D0();
  sub_26A80();
  swift_retain();
  sub_7E8C0();
  sub_7E8B0();
  uint64_t v3 = v2;
  swift_release();
  if (v3)
  {
    sub_7F410();
    swift_bridgeObjectRelease();
  }
  sub_7F890();
  if (v4)
  {
    if (sub_7F400())
    {
      sub_7F1A0();
      sub_7F180();
      swift_release();
      sub_26A0C();
      v5();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

void sub_25764()
{
  sub_15258();
  sub_7FBE0();
  sub_6D54();
  __chkstk_darwin(v1);
  sub_755C();
  uint64_t v2 = sub_6A60(&qword_AD428);
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  sub_6A60(&qword_AEA40);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_814D0;
  *(void *)(v7 + 32) = v0;
  sub_7FD40();
  swift_retain();
  sub_7F2B0();
  uint64_t v8 = sub_7F2C0();
  sub_9B2C(v6, 0, 1, v8);
  sub_7F280();
  swift_bridgeObjectRelease();
  sub_D8DC(v6, &qword_AD428);
  sub_7F100();
  swift_release();
  sub_15240();
}

uint64_t sub_25A74()
{
  swift_bridgeObjectRelease();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 32);
  sub_2699C(v0 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 312);
  return v0;
}

uint64_t sub_25AAC()
{
  sub_25A74();

  return _swift_deallocClassInstance(v0, 352, 7);
}

uint64_t type metadata accessor for WorkoutAppResolutionStrategyAsync()
{
  return self;
}

uint64_t sub_25B04()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B9C;
  return sub_228CC();
}

uint64_t sub_25B9C()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = sub_26AB4();
  return v4(v3);
}

uint64_t sub_25C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionSuccessfulResponse(app:)(a1, a2, a3, a4);
}

uint64_t sub_25D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:)(a1, a2, a3, a4);
}

uint64_t sub_25DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppResolutionOnDeviceFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t sub_25EAC()
{
  return sub_237B8();
}

uint64_t sub_25EC4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_269F0;
  return sub_237E4();
}

uint64_t sub_25F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:)(a1, a2, a3, a4);
}

uint64_t sub_26014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppConfirmationStrategyAsync.makeRepromptOnLowConfidence(app:)(a1, a2, a3, a4);
}

uint64_t sub_260D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppConfirmationStrategyAsync.makeConfirmationRejectedResponse(app:)(a1, a2, a3, a4);
}

uint64_t sub_2619C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppConfirmationStrategyAsync.makeConfirmationCancelledResponse(app:)(a1, a2, a3, a4);
}

uint64_t sub_26260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_2632C;
  return AppConfirmationStrategyAsync.makeConfirmationErrorResponse(error:app:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2632C()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_9D44();
  return v3();
}

void sub_263EC()
{
}

uint64_t sub_26410()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_269F0;
  return sub_23ED0();
}

uint64_t sub_264BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppDisambiguationStrategyAsync.makeRepromptOnEmptyParse(apps:)(a1, a2, a3, a4);
}

uint64_t sub_26580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppDisambiguationStrategyAsync.makeRepromptOnLowConfidence(apps:)(a1, a2, a3, a4);
}

uint64_t sub_26644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return AppDisambiguationStrategyAsync.makeDisambiguationCancelResponse(apps:)(a1, a2, a3, a4);
}

uint64_t sub_26708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_269F0;
  return AppDisambiguationStrategyAsync.makeDisambiguationErrorResponse(error:apps:)(a1, a2, a3, a4, a5);
}

uint64_t sub_267D4(uint64_t a1, uint64_t a2)
{
  return sub_26954(&qword_AD3F8, a2, (void (*)(uint64_t))type metadata accessor for WorkoutAppResolutionStrategyAsync);
}

uint64_t sub_2681C(uint64_t a1, uint64_t a2)
{
  return sub_26954(qword_AD400, a2, (void (*)(uint64_t))type metadata accessor for WorkoutAppResolutionStrategyAsync);
}

uint64_t sub_26864(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_268C0(uint64_t a1)
{
  return a1;
}

unint64_t sub_26914()
{
  unint64_t result = qword_AD440;
  if (!qword_AD440)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AD440);
  }
  return result;
}

uint64_t sub_26954(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2699C(uint64_t a1)
{
  return a1;
}

uint64_t sub_269F4()
{
  return swift_slowAlloc();
}

uint64_t sub_26A34()
{
  return swift_task_dealloc();
}

uint64_t sub_26A74()
{
  return v0;
}

uint64_t sub_26A80()
{
  return swift_allocObject();
}

BOOL sub_26A98(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_26AB4()
{
  return v0;
}

uint64_t sub_26AC4()
{
  return v0;
}

void sub_26AD0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_26AF0(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_26B04()
{
  return swift_slowAlloc();
}

void *sub_26B1C(void *a1)
{
  id v115 = a1;
  uint64_t v1 = sub_7ED10();
  uint64_t v2 = *(uint8_t **)(v1 - 8);
  uint64_t v111 = (void *)v1;
  uint64_t v112 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v109 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v110 = (char *)&v96 - v6;
  __chkstk_darwin(v5);
  os_log_t v113 = (os_log_t)((char *)&v96 - v7);
  uint64_t v8 = sub_6A60(&qword_AC660);
  __chkstk_darwin(v8 - 8);
  uint64_t v102 = (uint64_t)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_7EED0();
  uint64_t v100 = *(void *)(v10 - 8);
  uint64_t v101 = v10;
  __chkstk_darwin(v10);
  uint64_t v99 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_7EFA0();
  uint64_t v98 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_7ED70();
  uint64_t v107 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v106 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7FBE0();
  uint64_t v116 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v108 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v97 = (char *)&v96 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (uint8_t *)&v96 - v19;
  uint64_t v21 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_7F6B0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_7ED20();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, id, uint64_t))(v29 + 16))(v31, v115, v28);
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v31, v28);
  if (v32 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v31, v24);
    os_log_t v113 = (os_log_t)v25;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    id v115 = (id)v24;
    v33(v23, v27, v24);
    sub_D838(0, (unint64_t *)&qword_AC898);
    uint64_t v34 = sub_689DC();
    sub_F314((uint64_t)v23);
    uint64_t v35 = sub_7FBA0();
    swift_beginAccess();
    uint64_t v36 = v116;
    (*(void (**)(uint8_t *, uint64_t, uint64_t))(v116 + 16))(v20, v35, v14);
    uint64_t v37 = v34;
    uint64_t v38 = sub_7FBD0();
    os_log_type_t v39 = sub_7FE20();
    uint64_t v40 = v36;
    uint64_t v41 = v20;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v112 = v20;
      uint64_t v43 = (uint8_t *)v42;
      uint64_t v111 = (void *)swift_slowAlloc();
      uint64_t v110 = (char *)v14;
      *(_DWORD *)uint64_t v43 = 138412290;
      uint64_t v118 = v37;
      uint64_t v44 = v37;
      uint64_t v14 = (uint64_t)v110;
      sub_7FF60();
      *uint64_t v111 = v37;

      _os_log_impl(&dword_0, v38, v39, "Converted intent to: %@", v43, 0xCu);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      uint64_t v40 = v116;
      swift_slowDealloc();
      uint64_t v41 = v112;
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(uint8_t *, uint64_t))(v40 + 8))(v41, v14);
    ((void (*)(char *, id))v113[1].isa)(v27, v115);
    return v37;
  }
  uint64_t v37 = (void *)v116;
  if (v32 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
    uint64_t v46 = v112;
    os_log_t v45 = v113;
    uint64_t v47 = v111;
    (*((void (**)(os_log_t, char *, void *))v112 + 4))(v113, v31, v111);
    uint64_t v48 = (void (*)(char *, os_log_t, void *))*((void *)v46 + 2);
    v48(v110, v45, v47);
    uint64_t v49 = sub_383F4();
    if (v50 == (unsigned char *)&dword_0 + 1)
    {
      os_log_t v51 = v45;
      uint64_t v52 = sub_7FBB0();
      swift_beginAccess();
      uint64_t v53 = v37;
      uint64_t v54 = (void (*)(char *, uint64_t, uint64_t))v37[2];
      uint64_t v37 = v108;
      v54(v108, v52, v14);
      uint64_t v55 = v109;
      v48(v109, v51, v47);
      uint64_t v56 = sub_7FBD0();
      os_log_type_t v57 = sub_7FE30();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = (void *)swift_slowAlloc();
        uint64_t v118 = v37;
        uint64_t v110 = (char *)v14;
        *(_DWORD *)uint64_t v58 = 136315138;
        uint64_t v59 = sub_7ECF0();
        uint64_t v117 = sub_1CDF0(v59, v60, (uint64_t *)&v118);
        uint64_t v61 = v47;
        sub_7FF60();
        swift_bridgeObjectRelease();
        uint64_t v62 = (void (*)(char *, void *))*((void *)v112 + 1);
        v62(v109, v47);
        _os_log_impl(&dword_0, v56, v57, "Unknow DirectInvocation with identifier: %s", v58, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, char *))v53[1])(v108, v110);
      }
      else
      {
        uint64_t v62 = (void (*)(char *, void *))*((void *)v112 + 1);
        v62(v55, v47);

        ((void (*)(void *, uint64_t))v53[1])(v37, v14);
        uint64_t v61 = v47;
      }
      sub_2DE78();
      swift_allocError();
      unsigned char *v73 = 2;
      swift_willThrow();
      v62((char *)v113, v61);
    }
    else
    {
      uint64_t v70 = v49;
      uint64_t v71 = (uint64_t)v50;
      uint64_t v37 = (void *)sub_2D9F8(v49, v50);
      sub_14098(v70, v71);
      (*((void (**)(os_log_t, void *))v46 + 1))(v45, v47);
    }
    return v37;
  }
  if (v32 != enum case for Parse.uso(_:))
  {
    sub_2DE78();
    swift_allocError();
    *uint64_t v72 = 3;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    return v37;
  }
  (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
  uint64_t v64 = v106;
  uint64_t v63 = v107;
  uint64_t v65 = v103;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v31, v103);
  uint64_t v66 = v99;
  sub_7ED60();
  uint64_t v67 = sub_7EEC0();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v66, v101);
  uint64_t v68 = v102;
  sub_6BB98(v67, v102);
  swift_bridgeObjectRelease();
  uint64_t v69 = v105;
  if (sub_6B0C(v68, 1, v105) == 1)
  {
    sub_18AE8(v68, &qword_AC660);
LABEL_20:
    sub_2DE78();
    swift_allocError();
    *char v77 = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    return v37;
  }
  uint64_t v74 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v104, v68, v69);
  uint64_t v75 = v114;
  unint64_t v76 = sub_7F0F0();
  if (v75)
  {
    swift_errorRelease();
LABEL_19:
    (*(void (**)(char *, uint64_t))(v74 + 8))(v104, v69);
    goto LABEL_20;
  }
  unint64_t v79 = v76;
  if (v76 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v80 = sub_801C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v80 = *(void *)((char *)&dword_10 + (v76 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v81 = v37;
  if (!v80)
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = v106;
    uint64_t v63 = v107;
    uint64_t v74 = v98;
    goto LABEL_19;
  }
  sub_140AC(0, (v79 & 0xC000000000000001) == 0, v79);
  if ((v79 & 0xC000000000000001) != 0)
  {
    uint64_t v82 = sub_80040();
  }
  else
  {
    uint64_t v82 = *(void *)(v79 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  char v83 = sub_7EF50();
  id v84 = (void *)sub_2D4B0(v82, v83 & 1, (unint64_t *)&qword_AC898, (uint64_t)INStartWorkoutIntent_ptr, (uint64_t (*)(uint64_t, uint64_t))sub_69494);
  uint64_t v85 = sub_7FBA0();
  swift_beginAccess();
  uint64_t v86 = (void (*)(char *, uint64_t))v37[2];
  uint64_t v110 = (char *)v14;
  v86(v97, v85);
  id v87 = v84;
  uint64_t v88 = sub_7FBD0();
  os_log_type_t v89 = sub_7FE20();
  os_log_t v113 = v88;
  BOOL v90 = os_log_type_enabled(v88, v89);
  id v115 = v87;
  if (v90)
  {
    long long v91 = (uint8_t *)swift_slowAlloc();
    uint64_t v111 = (void *)swift_slowAlloc();
    uint64_t v112 = v91;
    *(_DWORD *)long long v91 = 138412290;
    uint64_t v118 = v87;
    id v92 = v87;
    uint64_t v114 = 0;
    id v93 = v92;
    uint64_t v81 = v37;
    uint64_t v65 = v103;
    sub_7FF60();
    *uint64_t v111 = v87;

    os_log_t v94 = v113;
    _os_log_impl(&dword_0, v113, v89, "Converted intent to: %@", v112, 0xCu);
    sub_6A60(&qword_AC3D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v95 = v104;
  }
  else
  {

    uint64_t v95 = v104;
    uint64_t v14 = (uint64_t)v110;
    os_log_t v94 = v113;
  }

  swift_release();
  ((void (*)(char *, uint64_t))v81[1])(v97, v14);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v95, v105);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v106, v65);
  return v115;
}

unint64_t *sub_27A38(uint64_t a1, unint64_t *a2, uint8_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v121 = a5;
  v139 = a4;
  v142 = a2;
  v143 = a3;
  uint64_t v144 = a1;
  sub_7ED10();
  sub_6D54();
  v136 = v6;
  uint64_t v137 = v7;
  __chkstk_darwin(v6);
  sub_15308();
  uint64_t v127 = v8;
  sub_152AC();
  __chkstk_darwin(v9);
  v135 = (char *)&v120 - v10;
  sub_152AC();
  __chkstk_darwin(v11);
  v138 = (void (**)(char *, uint64_t))((char *)&v120 - v12);
  uint64_t v13 = sub_6A60(&qword_AC660);
  __chkstk_darwin(v13 - 8);
  sub_F67C();
  uint64_t v126 = v14;
  sub_15378();
  uint64_t v125 = sub_7EED0();
  sub_6D54();
  uint64_t v124 = v15;
  __chkstk_darwin(v16);
  sub_F67C();
  uint64_t v123 = v17;
  sub_15378();
  uint64_t v131 = sub_7EFA0();
  sub_6D54();
  uint64_t v122 = v18;
  __chkstk_darwin(v19);
  sub_F67C();
  uint64_t v129 = v20;
  sub_15378();
  uint64_t v128 = sub_7ED70();
  sub_6D54();
  uint64_t v130 = v21;
  __chkstk_darwin(v22);
  sub_F67C();
  uint64_t v132 = v23;
  sub_15378();
  uint64_t v24 = sub_7FBE0();
  sub_6D54();
  uint64_t v141 = v25;
  __chkstk_darwin(v26);
  sub_15308();
  uint64_t v133 = v27;
  sub_152AC();
  __chkstk_darwin(v28);
  uint64_t v120 = (char *)&v120 - v29;
  sub_152AC();
  __chkstk_darwin(v30);
  int v32 = (uint8_t *)&v120 - v31;
  uint64_t v33 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_7F6B0();
  sub_6D54();
  uint64_t v38 = v37;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_7ED20();
  sub_6D54();
  uint64_t v44 = v43;
  __chkstk_darwin(v45);
  sub_15490();
  sub_15528();
  v46();
  int v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(v5, v42);
  if (v47 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v48 = sub_2DF28();
    v49(v48);
    sub_15294();
    v50();
    v138 = v38;
    os_log_t v51 = v38[2];
    uint64_t v144 = v36;
    ((void (*)(char *, char *, uint64_t))v51)(v35, v41, v36);
    sub_D838(0, v142);
    uint64_t v52 = (void *)v139(v35);
    sub_F314((uint64_t)v35);
    sub_7FBA0();
    sub_9D08();
    uint64_t v53 = v141;
    sub_15528();
    v54();
    uint64_t v55 = v52;
    uint64_t v56 = sub_7FBD0();
    os_log_type_t v57 = sub_7FE20();
    uint64_t v58 = v32;
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v59 = sub_269F4();
      v143 = v32;
      unint64_t v60 = (uint8_t *)v59;
      v142 = (unint64_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v60 = 138412290;
      uint64_t v146 = (uint64_t)v55;
      uint64_t v61 = v55;
      v134 = (unint64_t *)v24;
      uint64_t v62 = v61;
      uint64_t v63 = v141;
      sub_7FF60();
      unint64_t *v142 = (unint64_t)v55;

      uint64_t v24 = (uint64_t)v134;
      _os_log_impl(&dword_0, v56, v57, "Converted intent to: %@", v60, 0xCu);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      uint64_t v58 = v143;
      sub_9CB0();
    }
    else
    {
      uint64_t v63 = v53;
    }
    (*(void (**)(uint8_t *, uint64_t))(v63 + 8))(v58, v24);
    v138[1](v41, v144);
    return v55;
  }
  uint64_t v55 = v142;
  uint64_t v64 = (Class *)v143;
  v134 = (unint64_t *)v24;
  if (v47 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v65 = sub_2DF28();
    v66(v65);
    uint64_t v67 = v137;
    uint64_t v68 = v138;
    uint64_t v69 = v136;
    sub_15294();
    v70();
    uint64_t v71 = *(void (**)(void))(v67 + 16);
    sub_2DFC4();
    v71();
    uint64_t v72 = sub_383F4();
    if (v73 == 1)
    {
      sub_7FBB0();
      sub_9D08();
      uint64_t v55 = v134;
      sub_15528();
      v74();
      sub_2DFC4();
      v71();
      uint64_t v75 = sub_7FBD0();
      os_log_type_t v76 = sub_7FE30();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v55 = (unint64_t *)sub_269F4();
        uint64_t v144 = swift_slowAlloc();
        uint64_t v146 = v144;
        uint64_t v71 = v69;
        *(_DWORD *)uint64_t v55 = 136315138;
        uint64_t v77 = sub_7ECF0();
        uint64_t v145 = sub_1CDF0(v77, v78, &v146);
        sub_7FF60();
        unint64_t v79 = v69;
        swift_bridgeObjectRelease();
        uint64_t v80 = sub_2DF94();
        ((void (*)(uint64_t, void (*)(void)))v69)(v80, v69);
        _os_log_impl(&dword_0, v75, v76, "Unknow DirectInvocation with identifier: %s", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy();
        sub_9CB0();
        sub_9CB0();

        sub_2DFB8();
        v81();
      }
      else
      {
        uint64_t v95 = sub_2DF94();
        ((void (*)(uint64_t, void (*)(void)))v71)(v95, v69);

        sub_2DFB8();
        v96();
        unint64_t v79 = v69;
      }
      sub_2DE78();
      sub_18BEC();
      *uint64_t v97 = 2;
      swift_willThrow();
      ((void (*)(void, void (*)(void)))v71)(v138, v79);
    }
    else
    {
      uint64_t v92 = v72;
      uint64_t v93 = v73;
      uint64_t v55 = (unint64_t *)sub_2D6FC(v72, v73, v55, v64);
      sub_14098(v92, v93);
      (*(void (**)(void, void (*)(void)))(v67 + 8))(v68, v69);
    }
    return v55;
  }
  if (v47 != enum case for Parse.uso(_:))
  {
    sub_2DE78();
    sub_18BEC();
    *os_log_t v94 = 3;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v5, v42);
    return v55;
  }
  uint64_t v82 = sub_2DF28();
  v83(v82);
  uint64_t v84 = v130;
  uint64_t v85 = v132;
  uint64_t v86 = v128;
  sub_15294();
  v87();
  sub_7ED60();
  uint64_t v88 = sub_7EEC0();
  sub_152A0();
  v89();
  uint64_t v90 = v126;
  sub_6BB98(v88, v126);
  swift_bridgeObjectRelease();
  uint64_t v91 = v131;
  if (sub_6B0C(v90, 1, v131) == 1)
  {
    sub_18AE8(v90, &qword_AC660);
LABEL_20:
    sub_2DE78();
    sub_18BEC();
    *uint64_t v102 = 0;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v86);
    return v55;
  }
  uint64_t v98 = v122;
  sub_15294();
  v99();
  uint64_t v100 = v140;
  unint64_t v101 = sub_7F0F0();
  if (v100)
  {
    swift_errorRelease();
LABEL_19:
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v129, v91);
    goto LABEL_20;
  }
  unint64_t v104 = v101;
  if (v101 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v119 = sub_801C0();
    swift_bridgeObjectRelease();
    if (v119) {
      goto LABEL_24;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v98 = v122;
    goto LABEL_19;
  }
  if (!*(void *)((char *)&dword_10 + (v101 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_31;
  }
LABEL_24:
  sub_140AC(0, (v104 & 0xC000000000000001) == 0, v104);
  if ((v104 & 0xC000000000000001) != 0)
  {
    uint64_t v105 = sub_80040();
  }
  else
  {
    uint64_t v105 = *(void *)(v104 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  char v106 = sub_7EF50();
  uint64_t v107 = sub_2D4B0(v105, v106 & 1, v55, (uint64_t)v64, v121);
  uint64_t v108 = v134;
  unint64_t v109 = (void *)v107;
  sub_7FBA0();
  sub_9D08();
  uint64_t v110 = v141;
  sub_15528();
  v111();
  uint64_t v55 = v109;
  uint64_t v112 = sub_7FBD0();
  os_log_type_t v113 = sub_7FE20();
  if (os_log_type_enabled(v112, v113))
  {
    uint64_t v144 = (uint64_t)v112;
    uint64_t v114 = (uint8_t *)sub_269F4();
    id v115 = (unint64_t *)swift_slowAlloc();
    v142 = v115;
    v143 = v114;
    *(_DWORD *)uint64_t v114 = 138412290;
    uint64_t v146 = (uint64_t)v55;
    uint64_t v116 = v55;
    uint64_t v117 = v55;
    uint64_t v86 = v128;
    uint64_t v112 = v144;
    sub_7FF60();
    *id v115 = (unint64_t)v116;

    uint64_t v55 = v116;
    uint64_t v108 = v134;
    uint64_t v110 = v141;
    _os_log_impl(&dword_0, v112, v113, "Converted intent to: %@", v143, 0xCu);
    sub_6A60(&qword_AC3D0);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();
  }
  else
  {
  }
  swift_release();
  (*(void (**)(char *, unint64_t *))(v110 + 8))(v120, v108);
  sub_152A0();
  v118();
  (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v132, v86);
  return v55;
}

uint64_t sub_286BC(uint64_t a1)
{
  sub_7FBE0();
  sub_6D54();
  __chkstk_darwin(v2);
  sub_2DF78();
  __chkstk_darwin(v3);
  unsigned __int8 v4 = sub_ED1C(a1);
  int v5 = v4;
  sub_7FBB0();
  if (v4 == 5)
  {
    swift_beginAccess();
    sub_2DFD8();
    v6();
    uint64_t v7 = sub_7FBD0();
    os_log_type_t v8 = sub_7FE30();
    if (os_log_type_enabled(v7, v8))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_2DFEC();
      _os_log_impl(v9, v10, v11, v12, v13, v14);
      sub_9CB0();
    }

    sub_2DFB8();
    v15();
    sub_421C0(v42);
    uint64_t v16 = sub_7E730();
    swift_allocObject();
    uint64_t v17 = sub_7E720();
    v42[33] = v16;
    v42[34] = (uint64_t)&protocol witness table for ResponseFactory;
    v42[30] = v17;
    sub_29B44();
    uint64_t v18 = sub_7E1E0();
    sub_29B90((uint64_t)v42);
  }
  else
  {
    swift_beginAccess();
    sub_2DFD8();
    v19();
    uint64_t v20 = sub_7FBD0();
    os_log_type_t v21 = sub_7FE20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      int v5 = v22 + 12;
      uint64_t v23 = sub_78B14(v4);
      v41[0] = sub_1CDF0(v23, v24, v42);
      sub_7FF60();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v20, v21, "Workout request type: %s", v22, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }

    sub_2DFB8();
    v28(v25, v26, v27);
    switch(v5)
    {
      case 1:
        sub_28A78(v41);
        sub_421C0(v42);
        uint64_t v32 = sub_2DFAC();
        uint64_t v31 = sub_28E64(v32, v33);
        break;
      case 2:
        sub_28A78(v41);
        sub_421C0(v42);
        uint64_t v34 = sub_2DFAC();
        uint64_t v31 = sub_2919C(v34, v35);
        break;
      case 3:
        sub_28A78(v41);
        sub_421C0(v42);
        uint64_t v36 = sub_2DFAC();
        uint64_t v31 = sub_294D4(v36, v37);
        break;
      case 4:
        sub_28A78(v41);
        sub_421C0(v42);
        uint64_t v38 = sub_2DFAC();
        uint64_t v31 = sub_2980C(v38, v39);
        break;
      default:
        sub_28A78(v41);
        sub_421C0(v42);
        uint64_t v29 = sub_2DFAC();
        uint64_t v31 = sub_28B2C(v29, v30);
        break;
    }
    uint64_t v18 = v31;
    sub_2699C((uint64_t)v42);
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v41);
  }
  return v18;
}

uint64_t sub_28A78@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for FlowConfigModel;
  a1[4] = (uint64_t)&protocol witness table for FlowConfigModel;
  *a1 = swift_allocObject();
  return sub_7F970();
}

uint64_t sub_28B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AD458);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  os_log_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD460);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v18 = sub_7F6D0();
  sub_9B2C((uint64_t)v10, 1, 1, v18);
  sub_2B424(a1, a2, 0, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD468);
  swift_allocObject();
  sub_7E130();
  uint64_t v24 = 0;
  swift_retain();
  sub_6A60(&qword_AD470);
  sub_10D50(&qword_AD478, &qword_AD470);
  sub_7E5C0();
  uint64_t v20 = sub_7E5A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v24 = v20;
  sub_6A60(&qword_AD480);
  sub_10D50(&qword_AD488, &qword_AD480);
  uint64_t v21 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v21;
}

uint64_t sub_28E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AD4F8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  os_log_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD500);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v18 = sub_7F6D0();
  sub_9B2C((uint64_t)v10, 1, 1, v18);
  sub_2AE14(a1, a2, 0, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD508);
  swift_allocObject();
  sub_7E130();
  uint64_t v24 = 0;
  swift_retain();
  sub_6A60(&qword_AD510);
  sub_10D50(&qword_AD518, &qword_AD510);
  sub_7E5C0();
  uint64_t v20 = sub_7E5A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v24 = v20;
  sub_6A60(&qword_AD520);
  sub_10D50(&qword_AD528, &qword_AD520);
  uint64_t v21 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v21;
}

uint64_t sub_2919C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AD590);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  os_log_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD598);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v18 = sub_7F6D0();
  sub_9B2C((uint64_t)v10, 1, 1, v18);
  sub_2A804(a1, a2, 0, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD5A0);
  swift_allocObject();
  sub_7E130();
  uint64_t v24 = 0;
  swift_retain();
  sub_6A60(&qword_AD5A8);
  sub_10D50(&qword_AD5B0, &qword_AD5A8);
  sub_7E5C0();
  uint64_t v20 = sub_7E5A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v24 = v20;
  sub_6A60(&qword_AD5B8);
  sub_10D50(&qword_AD5C0, &qword_AD5B8);
  uint64_t v21 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v21;
}

uint64_t sub_294D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AD628);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  os_log_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD630);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v18 = sub_7F6D0();
  sub_9B2C((uint64_t)v10, 1, 1, v18);
  sub_2A1F4(a1, a2, 0, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD638);
  swift_allocObject();
  sub_7E130();
  uint64_t v24 = 0;
  swift_retain();
  sub_6A60(&qword_AD640);
  sub_10D50(&qword_AD648, &qword_AD640);
  sub_7E5C0();
  uint64_t v20 = sub_7E5A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v24 = v20;
  sub_6A60(&qword_AD650);
  sub_10D50(&qword_AD658, &qword_AD650);
  uint64_t v21 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v21;
}

uint64_t sub_2980C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AD6C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  os_log_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD6C8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v18 = sub_7F6D0();
  sub_9B2C((uint64_t)v10, 1, 1, v18);
  sub_29BE4(a1, a2, 0, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD6D0);
  swift_allocObject();
  sub_7E130();
  uint64_t v24 = 0;
  swift_retain();
  sub_6A60(&qword_AD6D8);
  sub_10D50(&qword_AD6E0, &qword_AD6D8);
  sub_7E5C0();
  uint64_t v20 = sub_7E5A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v24 = v20;
  sub_6A60(&qword_AD6E8);
  sub_10D50(&qword_AD6F0, &qword_AD6E8);
  uint64_t v21 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v21;
}

unint64_t sub_29B44()
{
  unint64_t result = qword_AD450;
  if (!qword_AD450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD450);
  }
  return result;
}

uint64_t sub_29B90(uint64_t a1)
{
  return a1;
}

uint64_t sub_29BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a4;
  id v37 = a3;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v35 = sub_6A60(&qword_AD6F8);
  __chkstk_darwin(v35);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D838(0, (unint64_t *)&qword_ABEC8);
  uint64_t v34 = sub_D838(0, &qword_AC710);
  sub_7E120();
  uint64_t v8 = sub_803E0();
  uint64_t v10 = v9;
  sub_D98C(a1, (uint64_t)v49);
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v11 = sub_7E730();
  swift_allocObject();
  uint64_t v12 = sub_7E720();
  type metadata accessor for WorkoutAppResolutionStrategyAsync();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v45 = &protocol witness table for ResponseFactory;
  uint64_t v44 = v11;
  *(void *)&long long v43 = v12;
  void v13[2] = v8;
  v13[3] = v10;
  sub_10C48(v49, (uint64_t)(v13 + 4));
  memcpy(v13 + 9, v41, 0xF0uLL);
  sub_10C48(&v43, (uint64_t)(v13 + 39));
  v41[0] = v13;
  sub_2DD88();
  sub_7E000();
  sub_6A60(&qword_AD6C8);
  sub_7E0D0();
  sub_2DD2C(a2, (uint64_t)v49);
  swift_allocObject();
  id v14 = v37;
  id v32 = v37;
  uint64_t v15 = sub_7E720();
  uint64_t v52 = v11;
  uint64_t v53 = &protocol witness table for ResponseFactory;
  uint64_t v51 = v15;
  id v50 = v14;
  sub_6A60(&qword_AD700);
  sub_10D50(&qword_AD708, &qword_AD700);
  sub_7DFE0();
  sub_7E0C0();
  sub_2DD2C(a2, (uint64_t)&v43);
  swift_allocObject();
  uint64_t v16 = sub_7E720();
  uint64_t v48 = &protocol witness table for ResponseFactory;
  uint64_t v47 = v11;
  uint64_t v46 = v16;
  sub_6A60(&qword_AD710);
  sub_10D50(&qword_AD718, &qword_AD710);
  sub_7DFC0();
  sub_7E0B0();
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v17 = v31;
  sub_D98C(v31, (uint64_t)v42);
  swift_allocObject();
  uint64_t v18 = sub_7E720();
  v42[9] = &protocol witness table for ResponseFactory;
  v42[8] = v11;
  void v42[5] = v18;
  sub_6A60(&qword_AD720);
  sub_10D50(&qword_AD728, &qword_AD720);
  sub_7E050();
  sub_7E100();
  sub_2DD2C(a2, (uint64_t)v40);
  swift_allocObject();
  uint64_t v19 = sub_7E720();
  v40[33] = v11;
  v40[34] = &protocol witness table for ResponseFactory;
  v40[30] = v19;
  sub_6A60(&qword_AD730);
  sub_10D50(&qword_AD738, &qword_AD730);
  sub_7E090();
  sub_7E0F0();
  uint64_t v20 = v17;
  uint64_t v21 = (void *)v17;
  uint64_t v22 = v33;
  sub_D98C(v20, v33);
  sub_2DD2C(a2, v22 + 40);
  uint64_t v23 = v35;
  sub_D874(v36, v22 + *(int *)(v35 + 52));
  swift_allocObject();
  id v24 = v32;
  uint64_t v25 = sub_7E720();
  uint64_t v26 = (uint64_t *)(v22 + *(int *)(v23 + 56));
  v26[3] = v11;
  v26[4] = (uint64_t)&protocol witness table for ResponseFactory;
  *uint64_t v26 = v25;
  *(void *)(v22 + 280) = v37;
  sub_10D50(&qword_AD740, &qword_AD6F8);
  sub_7E020();
  sub_7E0E0();
  uint64_t v27 = v21[3];
  uint64_t v28 = v21[4];
  sub_9AE0(v21, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v38, v27, v28);
  v38[8] = &type metadata for LabelTemplatesProvider;
  v38[9] = &off_A0D10;
  v39[3] = sub_7E4D0();
  v39[4] = (uint64_t)&off_A2358;
  sub_74EC(v39);
  sub_7E4C0();
  sub_6A60(&qword_AD748);
  sub_10D50(&qword_AD750, &qword_AD748);
  sub_7E070();
  sub_7E110();
  swift_release();
  sub_18AE8((uint64_t)v38, &qword_AD748);
  sub_18AE8(v22, &qword_AD6F8);
  sub_18AE8((uint64_t)v40, &qword_AD730);
  sub_18AE8((uint64_t)v41, &qword_AD720);
  sub_18AE8((uint64_t)&v43, &qword_AD710);
  return sub_18AE8((uint64_t)v49, &qword_AD700);
}

uint64_t sub_2A1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a4;
  id v37 = a3;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v35 = sub_6A60(&qword_AD660);
  __chkstk_darwin(v35);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D838(0, (unint64_t *)&qword_AC8F8);
  uint64_t v34 = sub_D838(0, &qword_AC900);
  sub_7E120();
  uint64_t v8 = sub_803E0();
  uint64_t v10 = v9;
  sub_D98C(a1, (uint64_t)v49);
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v11 = sub_7E730();
  swift_allocObject();
  uint64_t v12 = sub_7E720();
  type metadata accessor for WorkoutAppResolutionStrategyAsync();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v45 = &protocol witness table for ResponseFactory;
  uint64_t v44 = v11;
  *(void *)&long long v43 = v12;
  void v13[2] = v8;
  v13[3] = v10;
  sub_10C48(v49, (uint64_t)(v13 + 4));
  memcpy(v13 + 9, v41, 0xF0uLL);
  sub_10C48(&v43, (uint64_t)(v13 + 39));
  v41[0] = v13;
  sub_2DD88();
  sub_7E000();
  sub_6A60(&qword_AD630);
  sub_7E0D0();
  sub_2DD2C(a2, (uint64_t)v49);
  swift_allocObject();
  id v14 = v37;
  id v32 = v37;
  uint64_t v15 = sub_7E720();
  uint64_t v52 = v11;
  uint64_t v53 = &protocol witness table for ResponseFactory;
  uint64_t v51 = v15;
  id v50 = v14;
  sub_6A60(&qword_AD668);
  sub_10D50(&qword_AD670, &qword_AD668);
  sub_7DFE0();
  sub_7E0C0();
  sub_2DD2C(a2, (uint64_t)&v43);
  swift_allocObject();
  uint64_t v16 = sub_7E720();
  uint64_t v48 = &protocol witness table for ResponseFactory;
  uint64_t v47 = v11;
  uint64_t v46 = v16;
  sub_6A60(&qword_AD678);
  sub_10D50(&qword_AD680, &qword_AD678);
  sub_7DFC0();
  sub_7E0B0();
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v17 = v31;
  sub_D98C(v31, (uint64_t)v42);
  swift_allocObject();
  uint64_t v18 = sub_7E720();
  v42[9] = &protocol witness table for ResponseFactory;
  v42[8] = v11;
  void v42[5] = v18;
  sub_6A60(&qword_AD688);
  sub_10D50(&qword_AD690, &qword_AD688);
  sub_7E050();
  sub_7E100();
  sub_2DD2C(a2, (uint64_t)v40);
  swift_allocObject();
  uint64_t v19 = sub_7E720();
  v40[33] = v11;
  v40[34] = &protocol witness table for ResponseFactory;
  v40[30] = v19;
  sub_6A60(&qword_AD698);
  sub_10D50(&qword_AD6A0, &qword_AD698);
  sub_7E090();
  sub_7E0F0();
  uint64_t v20 = v17;
  uint64_t v21 = (void *)v17;
  uint64_t v22 = v33;
  sub_D98C(v20, v33);
  sub_2DD2C(a2, v22 + 40);
  uint64_t v23 = v35;
  sub_D874(v36, v22 + *(int *)(v35 + 52));
  swift_allocObject();
  id v24 = v32;
  uint64_t v25 = sub_7E720();
  uint64_t v26 = (uint64_t *)(v22 + *(int *)(v23 + 56));
  v26[3] = v11;
  v26[4] = (uint64_t)&protocol witness table for ResponseFactory;
  *uint64_t v26 = v25;
  *(void *)(v22 + 280) = v37;
  sub_10D50(&qword_AD6A8, &qword_AD660);
  sub_7E020();
  sub_7E0E0();
  uint64_t v27 = v21[3];
  uint64_t v28 = v21[4];
  sub_9AE0(v21, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v38, v27, v28);
  v38[8] = &type metadata for LabelTemplatesProvider;
  v38[9] = &off_A0D10;
  v39[3] = sub_7E4D0();
  v39[4] = (uint64_t)&off_A2358;
  sub_74EC(v39);
  sub_7E4C0();
  sub_6A60(&qword_AD6B0);
  sub_10D50(&qword_AD6B8, &qword_AD6B0);
  sub_7E070();
  sub_7E110();
  swift_release();
  sub_18AE8((uint64_t)v38, &qword_AD6B0);
  sub_18AE8(v22, &qword_AD660);
  sub_18AE8((uint64_t)v40, &qword_AD698);
  sub_18AE8((uint64_t)v41, &qword_AD688);
  sub_18AE8((uint64_t)&v43, &qword_AD678);
  return sub_18AE8((uint64_t)v49, &qword_AD668);
}

uint64_t sub_2A804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a4;
  id v37 = a3;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v35 = sub_6A60(&qword_AD5C8);
  __chkstk_darwin(v35);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D838(0, (unint64_t *)&qword_AC818);
  uint64_t v34 = sub_D838(0, &qword_AC820);
  sub_7E120();
  uint64_t v8 = sub_803E0();
  uint64_t v10 = v9;
  sub_D98C(a1, (uint64_t)v49);
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v11 = sub_7E730();
  swift_allocObject();
  uint64_t v12 = sub_7E720();
  type metadata accessor for WorkoutAppResolutionStrategyAsync();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v45 = &protocol witness table for ResponseFactory;
  uint64_t v44 = v11;
  *(void *)&long long v43 = v12;
  void v13[2] = v8;
  v13[3] = v10;
  sub_10C48(v49, (uint64_t)(v13 + 4));
  memcpy(v13 + 9, v41, 0xF0uLL);
  sub_10C48(&v43, (uint64_t)(v13 + 39));
  v41[0] = v13;
  sub_2DD88();
  sub_7E000();
  sub_6A60(&qword_AD598);
  sub_7E0D0();
  sub_2DD2C(a2, (uint64_t)v49);
  swift_allocObject();
  id v14 = v37;
  id v32 = v37;
  uint64_t v15 = sub_7E720();
  uint64_t v52 = v11;
  uint64_t v53 = &protocol witness table for ResponseFactory;
  uint64_t v51 = v15;
  id v50 = v14;
  sub_6A60(&qword_AD5D0);
  sub_10D50(&qword_AD5D8, &qword_AD5D0);
  sub_7DFE0();
  sub_7E0C0();
  sub_2DD2C(a2, (uint64_t)&v43);
  swift_allocObject();
  uint64_t v16 = sub_7E720();
  uint64_t v48 = &protocol witness table for ResponseFactory;
  uint64_t v47 = v11;
  uint64_t v46 = v16;
  sub_6A60(&qword_AD5E0);
  sub_10D50(&qword_AD5E8, &qword_AD5E0);
  sub_7DFC0();
  sub_7E0B0();
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v17 = v31;
  sub_D98C(v31, (uint64_t)v42);
  swift_allocObject();
  uint64_t v18 = sub_7E720();
  v42[9] = &protocol witness table for ResponseFactory;
  v42[8] = v11;
  void v42[5] = v18;
  sub_6A60(&qword_AD5F0);
  sub_10D50(&qword_AD5F8, &qword_AD5F0);
  sub_7E050();
  sub_7E100();
  sub_2DD2C(a2, (uint64_t)v40);
  swift_allocObject();
  uint64_t v19 = sub_7E720();
  v40[33] = v11;
  v40[34] = &protocol witness table for ResponseFactory;
  v40[30] = v19;
  sub_6A60(&qword_AD600);
  sub_10D50(&qword_AD608, &qword_AD600);
  sub_7E090();
  sub_7E0F0();
  uint64_t v20 = v17;
  uint64_t v21 = (void *)v17;
  uint64_t v22 = v33;
  sub_D98C(v20, v33);
  sub_2DD2C(a2, v22 + 40);
  uint64_t v23 = v35;
  sub_D874(v36, v22 + *(int *)(v35 + 52));
  swift_allocObject();
  id v24 = v32;
  uint64_t v25 = sub_7E720();
  uint64_t v26 = (uint64_t *)(v22 + *(int *)(v23 + 56));
  v26[3] = v11;
  v26[4] = (uint64_t)&protocol witness table for ResponseFactory;
  *uint64_t v26 = v25;
  *(void *)(v22 + 280) = v37;
  sub_10D50(&qword_AD610, &qword_AD5C8);
  sub_7E020();
  sub_7E0E0();
  uint64_t v27 = v21[3];
  uint64_t v28 = v21[4];
  sub_9AE0(v21, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v38, v27, v28);
  v38[8] = &type metadata for LabelTemplatesProvider;
  v38[9] = &off_A0D10;
  v39[3] = sub_7E4D0();
  v39[4] = (uint64_t)&off_A2358;
  sub_74EC(v39);
  sub_7E4C0();
  sub_6A60(&qword_AD618);
  sub_10D50(&qword_AD620, &qword_AD618);
  sub_7E070();
  sub_7E110();
  swift_release();
  sub_18AE8((uint64_t)v38, &qword_AD618);
  sub_18AE8(v22, &qword_AD5C8);
  sub_18AE8((uint64_t)v40, &qword_AD600);
  sub_18AE8((uint64_t)v41, &qword_AD5F0);
  sub_18AE8((uint64_t)&v43, &qword_AD5E0);
  return sub_18AE8((uint64_t)v49, &qword_AD5D0);
}

uint64_t sub_2AE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a4;
  id v37 = a3;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v35 = sub_6A60(&qword_AD530);
  __chkstk_darwin(v35);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D838(0, (unint64_t *)&qword_AC798);
  uint64_t v34 = sub_D838(0, &qword_AC7A0);
  sub_7E120();
  uint64_t v8 = sub_803E0();
  uint64_t v10 = v9;
  sub_D98C(a1, (uint64_t)v49);
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v11 = sub_7E730();
  swift_allocObject();
  uint64_t v12 = sub_7E720();
  type metadata accessor for WorkoutAppResolutionStrategyAsync();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v45 = &protocol witness table for ResponseFactory;
  uint64_t v44 = v11;
  *(void *)&long long v43 = v12;
  void v13[2] = v8;
  v13[3] = v10;
  sub_10C48(v49, (uint64_t)(v13 + 4));
  memcpy(v13 + 9, v41, 0xF0uLL);
  sub_10C48(&v43, (uint64_t)(v13 + 39));
  v41[0] = v13;
  sub_2DD88();
  sub_7E000();
  sub_6A60(&qword_AD500);
  sub_7E0D0();
  sub_2DD2C(a2, (uint64_t)v49);
  swift_allocObject();
  id v14 = v37;
  id v32 = v37;
  uint64_t v15 = sub_7E720();
  uint64_t v52 = v11;
  uint64_t v53 = &protocol witness table for ResponseFactory;
  uint64_t v51 = v15;
  id v50 = v14;
  sub_6A60(&qword_AD538);
  sub_10D50(&qword_AD540, &qword_AD538);
  sub_7DFE0();
  sub_7E0C0();
  sub_2DD2C(a2, (uint64_t)&v43);
  swift_allocObject();
  uint64_t v16 = sub_7E720();
  uint64_t v48 = &protocol witness table for ResponseFactory;
  uint64_t v47 = v11;
  uint64_t v46 = v16;
  sub_6A60(&qword_AD548);
  sub_10D50(&qword_AD550, &qword_AD548);
  sub_7DFC0();
  sub_7E0B0();
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v17 = v31;
  sub_D98C(v31, (uint64_t)v42);
  swift_allocObject();
  uint64_t v18 = sub_7E720();
  v42[9] = &protocol witness table for ResponseFactory;
  v42[8] = v11;
  void v42[5] = v18;
  sub_6A60(&qword_AD558);
  sub_10D50(&qword_AD560, &qword_AD558);
  sub_7E050();
  sub_7E100();
  sub_2DD2C(a2, (uint64_t)v40);
  swift_allocObject();
  uint64_t v19 = sub_7E720();
  v40[33] = v11;
  v40[34] = &protocol witness table for ResponseFactory;
  v40[30] = v19;
  sub_6A60(&qword_AD568);
  sub_10D50(&qword_AD570, &qword_AD568);
  sub_7E090();
  sub_7E0F0();
  uint64_t v20 = v17;
  uint64_t v21 = (void *)v17;
  uint64_t v22 = v33;
  sub_D98C(v20, v33);
  sub_2DD2C(a2, v22 + 40);
  uint64_t v23 = v35;
  sub_D874(v36, v22 + *(int *)(v35 + 52));
  swift_allocObject();
  id v24 = v32;
  uint64_t v25 = sub_7E720();
  uint64_t v26 = (uint64_t *)(v22 + *(int *)(v23 + 56));
  v26[3] = v11;
  v26[4] = (uint64_t)&protocol witness table for ResponseFactory;
  *uint64_t v26 = v25;
  *(void *)(v22 + 280) = v37;
  sub_10D50(&qword_AD578, &qword_AD530);
  sub_7E020();
  sub_7E0E0();
  uint64_t v27 = v21[3];
  uint64_t v28 = v21[4];
  sub_9AE0(v21, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v38, v27, v28);
  v38[8] = &type metadata for LabelTemplatesProvider;
  v38[9] = &off_A0D10;
  v39[3] = sub_7E4D0();
  v39[4] = (uint64_t)&off_A2358;
  sub_74EC(v39);
  sub_7E4C0();
  sub_6A60(&qword_AD580);
  sub_10D50(&qword_AD588, &qword_AD580);
  sub_7E070();
  sub_7E110();
  swift_release();
  sub_18AE8((uint64_t)v38, &qword_AD580);
  sub_18AE8(v22, &qword_AD530);
  sub_18AE8((uint64_t)v40, &qword_AD568);
  sub_18AE8((uint64_t)v41, &qword_AD558);
  sub_18AE8((uint64_t)&v43, &qword_AD548);
  return sub_18AE8((uint64_t)v49, &qword_AD538);
}

uint64_t sub_2B424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a4;
  id v37 = a3;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v35 = sub_6A60(&qword_AD490);
  __chkstk_darwin(v35);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D838(0, (unint64_t *)&qword_AC898);
  uint64_t v34 = sub_D838(0, &qword_AC8A0);
  sub_7E120();
  uint64_t v8 = sub_803E0();
  uint64_t v10 = v9;
  sub_D98C(a1, (uint64_t)v49);
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v11 = sub_7E730();
  swift_allocObject();
  uint64_t v12 = sub_7E720();
  type metadata accessor for WorkoutAppResolutionStrategyAsync();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v45 = &protocol witness table for ResponseFactory;
  uint64_t v44 = v11;
  *(void *)&long long v43 = v12;
  void v13[2] = v8;
  v13[3] = v10;
  sub_10C48(v49, (uint64_t)(v13 + 4));
  memcpy(v13 + 9, v41, 0xF0uLL);
  sub_10C48(&v43, (uint64_t)(v13 + 39));
  v41[0] = v13;
  sub_2DD88();
  sub_7E000();
  sub_6A60(&qword_AD460);
  sub_7E0D0();
  sub_2DD2C(a2, (uint64_t)v49);
  swift_allocObject();
  id v14 = v37;
  id v32 = v37;
  uint64_t v15 = sub_7E720();
  uint64_t v52 = v11;
  uint64_t v53 = &protocol witness table for ResponseFactory;
  uint64_t v51 = v15;
  id v50 = v14;
  sub_6A60(&qword_AD4A0);
  sub_10D50(&qword_AD4A8, &qword_AD4A0);
  sub_7DFE0();
  sub_7E0C0();
  sub_2DD2C(a2, (uint64_t)&v43);
  swift_allocObject();
  uint64_t v16 = sub_7E720();
  uint64_t v48 = &protocol witness table for ResponseFactory;
  uint64_t v47 = v11;
  uint64_t v46 = v16;
  sub_6A60(&qword_AD4B0);
  sub_10D50(&qword_AD4B8, &qword_AD4B0);
  sub_7DFC0();
  sub_7E0B0();
  sub_2DD2C(a2, (uint64_t)v41);
  uint64_t v17 = v31;
  sub_D98C(v31, (uint64_t)v42);
  swift_allocObject();
  uint64_t v18 = sub_7E720();
  v42[9] = &protocol witness table for ResponseFactory;
  v42[8] = v11;
  void v42[5] = v18;
  sub_6A60(&qword_AD4C0);
  sub_10D50(&qword_AD4C8, &qword_AD4C0);
  sub_7E050();
  sub_7E100();
  sub_2DD2C(a2, (uint64_t)v40);
  swift_allocObject();
  uint64_t v19 = sub_7E720();
  v40[33] = v11;
  v40[34] = &protocol witness table for ResponseFactory;
  v40[30] = v19;
  sub_6A60(&qword_AD4D0);
  sub_10D50(&qword_AD4D8, &qword_AD4D0);
  sub_7E090();
  sub_7E0F0();
  uint64_t v20 = v17;
  uint64_t v21 = (void *)v17;
  uint64_t v22 = v33;
  sub_D98C(v20, v33);
  sub_2DD2C(a2, v22 + 40);
  uint64_t v23 = v35;
  sub_D874(v36, v22 + *(int *)(v35 + 52));
  swift_allocObject();
  id v24 = v32;
  uint64_t v25 = sub_7E720();
  uint64_t v26 = (uint64_t *)(v22 + *(int *)(v23 + 56));
  v26[3] = v11;
  v26[4] = (uint64_t)&protocol witness table for ResponseFactory;
  *uint64_t v26 = v25;
  *(void *)(v22 + 280) = v37;
  sub_10D50(&qword_AD4E0, &qword_AD490);
  sub_7E020();
  sub_7E0E0();
  uint64_t v27 = v21[3];
  uint64_t v28 = v21[4];
  sub_9AE0(v21, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v38, v27, v28);
  v38[8] = &type metadata for LabelTemplatesProvider;
  v38[9] = &off_A0D10;
  v39[3] = sub_7E4D0();
  v39[4] = (uint64_t)&off_A2358;
  sub_74EC(v39);
  sub_7E4C0();
  sub_6A60(&qword_AD4E8);
  sub_10D50(&qword_AD4F0, &qword_AD4E8);
  sub_7E070();
  sub_7E110();
  swift_release();
  sub_18AE8((uint64_t)v38, &qword_AD4E8);
  sub_18AE8(v22, &qword_AD490);
  sub_18AE8((uint64_t)v40, &qword_AD4D0);
  sub_18AE8((uint64_t)v41, &qword_AD4C0);
  sub_18AE8((uint64_t)&v43, &qword_AD4B0);
  return sub_18AE8((uint64_t)v49, &qword_AD4A0);
}

uint64_t sub_2BA34(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v70 = a3;
  uint64_t v68 = a2;
  uint64_t v6 = sub_7F6D0();
  sub_6D54();
  uint64_t v69 = v7;
  __chkstk_darwin(v8);
  sub_2DF5C();
  uint64_t v72 = sub_7FBE0();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_2DF78();
  __chkstk_darwin(v12);
  uint64_t v71 = (char *)v63 - v13;
  uint64_t v14 = sub_ED1C((uint64_t)a1);
  uint64_t v15 = sub_7FBB0();
  uint64_t v73 = v10;
  uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  if (v14 == 5)
  {
    sub_9D08();
    (*v16)(v4, v15, v72);
    uint64_t v17 = sub_7FBD0();
    os_log_type_t v18 = sub_7FE30();
    if (os_log_type_enabled(v17, v18))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_2DFEC();
      _os_log_impl(v19, v20, v21, v22, v23, v24);
      sub_9CB0();
    }

    sub_152A0();
    v25();
    sub_421C0(v75);
    uint64_t v26 = sub_7E730();
    swift_allocObject();
    uint64_t v27 = sub_7E720();
    v75[33] = v26;
    v75[34] = (uint64_t)&protocol witness table for ResponseFactory;
    v75[30] = v27;
    sub_29B44();
    uint64_t v28 = sub_7E1E0();
    sub_29B90((uint64_t)v75);
  }
  else
  {
    uint64_t v64 = v14;
    uint64_t v65 = v6;
    uint64_t v66 = v3;
    uint64_t v67 = a1;
    sub_9D08();
    (*v16)((uint64_t)v71, v15, v72);
    uint64_t v29 = sub_7FBD0();
    os_log_type_t v30 = sub_7FE20();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)sub_269F4();
      v76[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315138;
      v63[1] = v31 + 4;
      char v32 = v64;
      uint64_t v33 = sub_78B14(v64);
      v76[5] = sub_1CDF0(v33, v34, v76);
      sub_7FF60();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v29, v30, "Workout request type: %s", v31, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      uint64_t v35 = sub_2DF40();
      v36(v35);
      uint64_t v37 = v74;
    }
    else
    {

      uint64_t v38 = sub_2DF40();
      v39(v38);
      uint64_t v37 = v74;
      char v32 = v64;
    }
    (*(void (**)(uint64_t, void, uint64_t))(v69 + 104))(v66, enum case for DeviceIdiom.watch(_:), v65);
    uint64_t v28 = v70;
    sub_7F6C0();
    sub_2DFB8();
    v40();
    sub_7F900();
    switch(v32)
    {
      case 1:
        sub_27A38((uint64_t)v67, (unint64_t *)&qword_AC798, (uint8_t *)INEndWorkoutIntent_ptr, (uint64_t (*)(char *))sub_69218, (uint64_t (*)(uint64_t, uint64_t))sub_6AA94);
        if (v37) {
          goto LABEL_18;
        }
        uint64_t v46 = (void *)sub_2DF10();
        uint64_t v45 = sub_2C400(v46, v47, v48, v49);
        goto LABEL_20;
      case 2:
        sub_27A38((uint64_t)v67, (unint64_t *)&qword_AC818, (uint8_t *)INPauseWorkoutIntent_ptr, (uint64_t (*)(char *))sub_69224, (uint64_t (*)(uint64_t, uint64_t))sub_6ABE8);
        if (v37) {
          goto LABEL_18;
        }
        id v50 = (void *)sub_2DF10();
        uint64_t v45 = sub_2C82C(v50, v51, v52, v53);
        goto LABEL_20;
      case 3:
        sub_27A38((uint64_t)v67, (unint64_t *)&qword_AC8F8, (uint8_t *)INCancelWorkoutIntent_ptr, (uint64_t (*)(char *))sub_6920C, (uint64_t (*)(uint64_t, uint64_t))sub_6B1D4);
        if (v37) {
          goto LABEL_18;
        }
        uint64_t v54 = (void *)sub_2DF10();
        uint64_t v45 = sub_2CC58(v54, v55, v56, v57);
        goto LABEL_20;
      case 4:
        sub_27A38((uint64_t)v67, (unint64_t *)&qword_ABEC8, (uint8_t *)INResumeWorkoutIntent_ptr, (uint64_t (*)(char *))sub_689D0, (uint64_t (*)(uint64_t, uint64_t))sub_6B074);
        if (v37) {
          goto LABEL_18;
        }
        uint64_t v58 = (void *)sub_2DF10();
        uint64_t v45 = sub_2D084(v58, v59, v60, v61);
        goto LABEL_20;
      default:
        sub_26B1C(v67);
        if (v37)
        {
LABEL_18:
          swift_release();
        }
        else
        {
          uint64_t v41 = (void *)sub_2DF10();
          uint64_t v45 = sub_2BFD4(v41, v42, v43, v44);
LABEL_20:
          uint64_t v28 = v45;
          swift_release();
        }
        break;
    }
  }
  return v28;
}

uint64_t sub_2BFD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = sub_6A60(&qword_AD458);
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD460);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - v16;
  memset(v29, 0, 40);
  uint64_t v47 = 0;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  v48[3] = &type metadata for FlowConfigModel;
  v48[4] = &protocol witness table for FlowConfigModel;
  v48[0] = swift_allocObject();
  sub_7F970();
  sub_421C0(v29);
  uint64_t v18 = sub_7F6D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v25, v18);
  sub_9B2C((uint64_t)v10, 0, 1, v18);
  sub_2B424((uint64_t)v48, (uint64_t)v29, a1, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  sub_2699C((uint64_t)v29);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v48);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD468);
  swift_allocObject();
  sub_7E130();
  v29[0] = (uint64_t)a1;
  id v20 = a1;
  swift_retain();
  sub_6A60(&qword_AD470);
  sub_10D50(&qword_AD478, &qword_AD470);
  sub_7E5C0();
  uint64_t v21 = v26;
  uint64_t v22 = sub_7E5B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v29[0] = v22;
  sub_6A60(&qword_AD480);
  sub_10D50(&qword_AD488, &qword_AD480);
  uint64_t v23 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v23;
}

uint64_t sub_2C400(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = sub_6A60(&qword_AD4F8);
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD500);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - v16;
  memset(v29, 0, 40);
  uint64_t v47 = 0;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  v48[3] = &type metadata for FlowConfigModel;
  v48[4] = &protocol witness table for FlowConfigModel;
  v48[0] = swift_allocObject();
  sub_7F970();
  sub_421C0(v29);
  uint64_t v18 = sub_7F6D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v25, v18);
  sub_9B2C((uint64_t)v10, 0, 1, v18);
  sub_2AE14((uint64_t)v48, (uint64_t)v29, a1, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  sub_2699C((uint64_t)v29);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v48);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD508);
  swift_allocObject();
  sub_7E130();
  v29[0] = (uint64_t)a1;
  id v20 = a1;
  swift_retain();
  sub_6A60(&qword_AD510);
  sub_10D50(&qword_AD518, &qword_AD510);
  sub_7E5C0();
  uint64_t v21 = v26;
  uint64_t v22 = sub_7E5B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v29[0] = v22;
  sub_6A60(&qword_AD520);
  sub_10D50(&qword_AD528, &qword_AD520);
  uint64_t v23 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v23;
}

uint64_t sub_2C82C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = sub_6A60(&qword_AD590);
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD598);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - v16;
  memset(v29, 0, 40);
  uint64_t v47 = 0;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  v48[3] = &type metadata for FlowConfigModel;
  v48[4] = &protocol witness table for FlowConfigModel;
  v48[0] = swift_allocObject();
  sub_7F970();
  sub_421C0(v29);
  uint64_t v18 = sub_7F6D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v25, v18);
  sub_9B2C((uint64_t)v10, 0, 1, v18);
  sub_2A804((uint64_t)v48, (uint64_t)v29, a1, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  sub_2699C((uint64_t)v29);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v48);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD5A0);
  swift_allocObject();
  sub_7E130();
  v29[0] = (uint64_t)a1;
  id v20 = a1;
  swift_retain();
  sub_6A60(&qword_AD5A8);
  sub_10D50(&qword_AD5B0, &qword_AD5A8);
  sub_7E5C0();
  uint64_t v21 = v26;
  uint64_t v22 = sub_7E5B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v29[0] = v22;
  sub_6A60(&qword_AD5B8);
  sub_10D50(&qword_AD5C0, &qword_AD5B8);
  uint64_t v23 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v23;
}

uint64_t sub_2CC58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = sub_6A60(&qword_AD628);
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD630);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - v16;
  memset(v29, 0, 40);
  uint64_t v47 = 0;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  v48[3] = &type metadata for FlowConfigModel;
  v48[4] = &protocol witness table for FlowConfigModel;
  v48[0] = swift_allocObject();
  sub_7F970();
  sub_421C0(v29);
  uint64_t v18 = sub_7F6D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v25, v18);
  sub_9B2C((uint64_t)v10, 0, 1, v18);
  sub_2A1F4((uint64_t)v48, (uint64_t)v29, a1, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  sub_2699C((uint64_t)v29);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v48);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD638);
  swift_allocObject();
  sub_7E130();
  v29[0] = (uint64_t)a1;
  id v20 = a1;
  swift_retain();
  sub_6A60(&qword_AD640);
  sub_10D50(&qword_AD648, &qword_AD640);
  sub_7E5C0();
  uint64_t v21 = v26;
  uint64_t v22 = sub_7E5B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v29[0] = v22;
  sub_6A60(&qword_AD650);
  sub_10D50(&qword_AD658, &qword_AD650);
  uint64_t v23 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v23;
}

uint64_t sub_2D084(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = sub_6A60(&qword_AD6C0);
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_6A60(&qword_AD6C8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - v16;
  memset(v29, 0, 40);
  uint64_t v47 = 0;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  v48[3] = &type metadata for FlowConfigModel;
  v48[4] = &protocol witness table for FlowConfigModel;
  v48[0] = swift_allocObject();
  sub_7F970();
  sub_421C0(v29);
  uint64_t v18 = sub_7F6D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v25, v18);
  sub_9B2C((uint64_t)v10, 0, 1, v18);
  sub_29BE4((uint64_t)v48, (uint64_t)v29, a1, (uint64_t)v10, (uint64_t)v17);
  sub_18AE8((uint64_t)v10, qword_AC3D8);
  sub_2699C((uint64_t)v29);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v48);
  uint64_t v19 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_6A60(&qword_AD6D0);
  swift_allocObject();
  sub_7E130();
  v29[0] = (uint64_t)a1;
  id v20 = a1;
  swift_retain();
  sub_6A60(&qword_AD6D8);
  sub_10D50(&qword_AD6E0, &qword_AD6D8);
  sub_7E5C0();
  uint64_t v21 = v26;
  uint64_t v22 = sub_7E5B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v29[0] = v22;
  sub_6A60(&qword_AD6E8);
  sub_10D50(&qword_AD6F0, &qword_AD6E8);
  uint64_t v23 = sub_7E1E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  return v23;
}

uint64_t sub_2D4B0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v11 = sub_7FBE0();
  sub_6D54();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_15490();
  sub_D838(0, a3);
  uint64_t v15 = a5(a1, a2);
  if (v5)
  {
    swift_errorRelease();
    sub_7FBC0();
    sub_9D08();
    sub_15528();
    v16();
    uint64_t v17 = sub_7FBD0();
    os_log_type_t v18 = sub_7FE30();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)sub_269F4();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v20 = sub_803E0();
      sub_1CDF0(v20, v21, &v23);
      sub_7FF60();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v17, v18, "Failed ot convert %s to base Intent", v19, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v11);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v11);
    }
    sub_2DEC4();
    sub_18BEC();
    swift_willThrow();
  }
  return v15;
}

id sub_2D6FC(uint64_t a1, uint64_t a2, unint64_t *a3, Class *a4)
{
  uint64_t v9 = sub_7FBE0();
  sub_6D54();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v13 = sub_2DF5C();
  sub_D838(v13, a3);
  sub_7FBB0();
  swift_beginAccess();
  sub_15528();
  v14();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_7FBD0();
  os_log_type_t v16 = sub_7FE20();
  uint64_t v30 = a1;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_7FC60();
    sub_1CDF0(v18, v19, &v31);
    sub_7FF60();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v20 = sub_803E0();
    sub_1CDF0(v20, v21, &v31);
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v15, v16, "Converting %s to %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v9);
  if (a2)
  {
    swift_bridgeObjectRetain_n();
    sub_7F910();
    uint64_t v22 = sub_7F9B0();
    if (v23) {
      uint64_t v24 = v22;
    }
    else {
      uint64_t v24 = 0;
    }
    if (v23) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = 0xE000000000000000;
    }
    id v26 = objc_allocWithZone((Class)INSpeakableString);
    id v27 = sub_6B370(v24, v25, v30, a2, 0, 0);
  }
  else
  {
    id v27 = 0;
  }
  id v28 = [objc_allocWithZone(*a4) initWithWorkoutName:v27];

  return v28;
}

uint64_t sub_2D9F8(uint64_t a1, id a2)
{
  uint64_t v4 = sub_7FBE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_D838(0, (unint64_t *)&qword_AC898);
  uint64_t v9 = sub_7FBB0();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_7FBD0();
  os_log_type_t v11 = sub_7FE20();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v30 = a1;
  if (v12)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v29 = v8;
    uint64_t v14 = v13;
    uint64_t v28 = swift_slowAlloc();
    id v32 = a2;
    uint64_t v33 = v28;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v31 = a1;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_7FC60();
    uint64_t v31 = sub_1CDF0(v15, v16, &v33);
    sub_7FF60();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v17 = sub_803E0();
    uint64_t v31 = sub_1CDF0(v17, v18, &v33);
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v11, "Converting %s to %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (a2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v19 = v30;
    sub_7F910();
    uint64_t v20 = sub_7F9B0();
    if (v21) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21) {
      uint64_t v23 = v21;
    }
    else {
      uint64_t v23 = 0xE000000000000000;
    }
    id v24 = objc_allocWithZone((Class)INSpeakableString);
    a2 = sub_6B370(v22, v23, v19, (uint64_t)a2, 0, 0);
  }
  uint64_t v25 = sub_69438(a2);

  return v25;
}

uint64_t sub_2DD2C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_2DD88()
{
  unint64_t result = qword_AD498;
  if (!qword_AD498)
  {
    type metadata accessor for WorkoutAppResolutionStrategyAsync();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD498);
  }
  return result;
}

uint64_t sub_2DDD8()
{
  if (v0[5]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 2));
  }
  if (v0[10]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 7));
  }
  if (v0[15]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 12));
  }
  if (v0[20]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 17));
  }
  if (v0[25]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 22));
  }
  if (v0[30]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 27));
  }
  if (v0[35]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 32));
  }

  return _swift_deallocObject(v0, 296, 7);
}

unint64_t sub_2DE78()
{
  unint64_t result = qword_AD758;
  if (!qword_AD758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AD758);
  }
  return result;
}

unint64_t sub_2DEC4()
{
  unint64_t result = qword_AD760[0];
  if (!qword_AD760[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_AD760);
  }
  return result;
}

uint64_t sub_2DF10()
{
  return v0;
}

uint64_t sub_2DF28()
{
  return v0;
}

uint64_t sub_2DF40()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_2DF5C()
{
  return 0;
}

uint64_t sub_2DF94()
{
  return v0;
}

uint64_t sub_2DFAC()
{
  return v0 + 16;
}

uint64_t type metadata accessor for WorkoutUnsupportedValueStrategy()
{
  return sub_9C4C();
}

uint64_t sub_2E018()
{
  sub_9D38();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  sub_7E470();
  v1[6] = swift_task_alloc();
  uint64_t v5 = sub_7EA70();
  v1[7] = v5;
  v1[8] = *(void *)(v5 - 8);
  v1[9] = swift_task_alloc();
  sub_6A60(&qword_AC2C8);
  v1[10] = swift_task_alloc();
  sub_9D50();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_2E130()
{
  sub_7EB30();
  sub_7EAF0();
  swift_retain();
  uint64_t v1 = (void *)sub_7E740();
  if (v1
    && (v2 = v1, id v3 = [v1 displayAppName], v2, v3))
  {
    sub_7FC50();
    swift_release_n();

    sub_7FCA0();
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
  }
  else
  {
    swift_release_n();
    uint64_t v4 = 1;
  }
  uint64_t v5 = v0[10];
  uint64_t v6 = sub_7F830();
  sub_9B2C(v5, v4, 1, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[11] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2E294;
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[4];
  return sub_2E738(v8, v9);
}

uint64_t sub_2E294()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  *id v3 = *v1;
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_2E378()
{
  uint64_t v1 = (void *)v0[5];
  sub_7E460();
  sub_7EA20();
  uint64_t v2 = v1 + 30;
  uint64_t v3 = v1[33];
  uint64_t v4 = v1[34];
  sub_9AE0(v2, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2E470;
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[2];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v8, v6, v7, v3, v4);
}

uint64_t sub_2E470()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_19EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_2E54C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_2F854(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v5();
}

uint64_t sub_2E600()
{
  sub_2F854(*(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v1();
}

uint64_t sub_2E688()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_2F854(*(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v4();
}

uint64_t sub_2E738(uint64_t a1, uint64_t a2)
{
  v3[43] = a2;
  v3[44] = v2;
  v3[42] = a1;
  return sub_2F8FC((uint64_t)sub_2E754);
}

uint64_t sub_2E754()
{
  uint64_t v1 = sub_D838(0, (unint64_t *)&qword_AC8F8);
  if (sub_2F914(v1))
  {
    uint64_t v2 = sub_D98C(v0[44], (uint64_t)(v0 + 22));
    uint64_t v3 = sub_2F8CC(v2, v0[25]);
    v0[45] = v3;
    sub_2F908(v3);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[46] = (uint64_t)v4;
    *uint64_t v4 = v0;
    v4[1] = sub_2EBC0;
    return sub_39778();
  }
  else
  {
    uint64_t v6 = sub_D838(0, (unint64_t *)&qword_AC798);
    if (sub_2F914(v6))
    {
      sub_2F92C();
      uint64_t v8 = sub_D98C(v7 + 40, (uint64_t)(v0 + 17));
      uint64_t v9 = sub_2F8CC(v8, v0[20]);
      v0[48] = v9;
      sub_2F908(v9);
      uint64_t v10 = (void *)swift_task_alloc();
      v0[49] = (uint64_t)v10;
      *uint64_t v10 = v0;
      v10[1] = sub_2ED6C;
      return sub_6E7E0();
    }
    else
    {
      uint64_t v11 = sub_D838(0, (unint64_t *)&qword_AC818);
      if (sub_2F914(v11))
      {
        sub_2F92C();
        uint64_t v13 = sub_D98C(v12 + 80, (uint64_t)(v0 + 12));
        uint64_t v14 = sub_2F8CC(v13, v0[15]);
        v0[51] = v14;
        sub_2F908(v14);
        uint64_t v15 = (void *)swift_task_alloc();
        v0[52] = (uint64_t)v15;
        *uint64_t v15 = v0;
        v15[1] = sub_2EF18;
        return sub_76A24();
      }
      else
      {
        uint64_t v16 = sub_D838(0, (unint64_t *)&qword_ABEC8);
        if (sub_2F914(v16))
        {
          sub_2F92C();
          uint64_t v18 = sub_D98C(v17 + 120, (uint64_t)(v0 + 7));
          uint64_t v19 = sub_2F8CC(v18, v0[10]);
          v0[54] = v19;
          sub_2F908(v19);
          uint64_t v20 = (void *)swift_task_alloc();
          v0[55] = (uint64_t)v20;
          void *v20 = v0;
          v20[1] = sub_2F0C4;
          return sub_7390C();
        }
        else
        {
          uint64_t v21 = sub_D838(0, (unint64_t *)&qword_AC898);
          if (sub_2F914(v21))
          {
            sub_2F92C();
            uint64_t v23 = sub_D98C(v22 + 160, (uint64_t)(v0 + 2));
            uint64_t v24 = sub_2F8CC(v23, v0[5]);
            v0[57] = v24;
            sub_2F908(v24);
            uint64_t v25 = (void *)swift_task_alloc();
            v0[58] = (uint64_t)v25;
            *uint64_t v25 = v0;
            v25[1] = sub_2F270;
            return sub_70C10();
          }
          else
          {
            return sub_801A0();
          }
        }
      }
    }
  }
}

uint64_t sub_2EBC0()
{
  sub_9D38();
  sub_9C98();
  uint64_t v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[27] = v1;
  v3[28] = v5;
  v3[29] = v0;
  sub_DC68();
  uint64_t v6 = *v1;
  sub_19EF0();
  *uint64_t v7 = v6;
  v3[47] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_2ECA8()
{
  sub_9D38();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 176);
  sub_2F8BC();
  return v1();
}

uint64_t sub_2ED04()
{
  sub_9D38();
  swift_task_dealloc();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 176);
  sub_9D44();
  return v1();
}

uint64_t sub_2ED6C()
{
  sub_9D38();
  sub_9C98();
  uint64_t v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[30] = v1;
  v3[31] = v5;
  v3[32] = v0;
  sub_DC68();
  uint64_t v6 = *v1;
  sub_19EF0();
  *uint64_t v7 = v6;
  v3[50] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_2EE54()
{
  sub_9D38();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 136);
  sub_2F8BC();
  return v1();
}

uint64_t sub_2EEB0()
{
  sub_9D38();
  swift_task_dealloc();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 136);
  sub_9D44();
  return v1();
}

uint64_t sub_2EF18()
{
  sub_9D38();
  sub_9C98();
  uint64_t v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[33] = v1;
  v3[34] = v5;
  v3[35] = v0;
  sub_DC68();
  uint64_t v6 = *v1;
  sub_19EF0();
  *uint64_t v7 = v6;
  v3[53] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_2F000()
{
  sub_9D38();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 96);
  sub_2F8BC();
  return v1();
}

uint64_t sub_2F05C()
{
  sub_9D38();
  swift_task_dealloc();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 96);
  sub_9D44();
  return v1();
}

uint64_t sub_2F0C4()
{
  sub_9D38();
  sub_9C98();
  uint64_t v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[36] = v1;
  v3[37] = v5;
  v3[38] = v0;
  sub_DC68();
  uint64_t v6 = *v1;
  sub_19EF0();
  *uint64_t v7 = v6;
  v3[56] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_2F1AC()
{
  sub_9D38();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 56);
  sub_2F8BC();
  return v1();
}

uint64_t sub_2F208()
{
  sub_9D38();
  swift_task_dealloc();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 56);
  sub_9D44();
  return v1();
}

uint64_t sub_2F270()
{
  sub_9D38();
  sub_9C98();
  uint64_t v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[39] = v1;
  v3[40] = v5;
  v3[41] = v0;
  sub_DC68();
  uint64_t v6 = *v1;
  sub_19EF0();
  *uint64_t v7 = v6;
  v3[59] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_2F358()
{
  sub_9D38();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  sub_2F8BC();
  return v1();
}

uint64_t sub_2F3B4()
{
  sub_9D38();
  swift_task_dealloc();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  sub_9D44();
  return v1();
}

uint64_t sub_2F41C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_2F8FC((uint64_t)sub_2F434);
}

uint64_t sub_2F434()
{
  sub_9D38();
  sub_7EB30();
  sub_7EB00();
  sub_2F8BC();
  return v0();
}

uint64_t sub_2F498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D9F0(a2, a1);
  sub_7FCA0();
  uint64_t v7 = sub_7F830();
  sub_9B2C((uint64_t)v6, 0, 1, v7);
  uint64_t started = type metadata accessor for WorkoutStartUnsupportedSlotValueParameters(0);
  return sub_9B54((uint64_t)v6, a1 + *(int *)(started + 24));
}

uint64_t sub_2F574()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2632C;
  return sub_2E018();
}

uint64_t sub_2F624(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2F6C0;
  return sub_2F41C(a1, a2);
}

uint64_t sub_2F6C0()
{
  sub_9D38();
  uint64_t v3 = v2;
  sub_9C98();
  uint64_t v4 = *v1;
  sub_19EF0();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_2F790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_2F854(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2F8B4(uint64_t a1)
{
  return sub_2F498(a1, *(void *)(v1 + 16));
}

uint64_t sub_2F8CC(uint64_t a1, uint64_t a2)
{
  sub_9AE0(v2, a2);
  return swift_task_alloc();
}

uint64_t sub_2F8FC(uint64_t a1)
{
  return _swift_task_switch(a1, 0, 0);
}

uint64_t sub_2F908(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_2F914(uint64_t a1)
{
  return _swift_dynamicCastMetatype(v1, a1);
}

void sub_2F938(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v4 = sub_2FBF0(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_7FE20();
    uint64_t v6 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_80D90;
    id v8 = v6;
    id v9 = [v5 description];
    uint64_t v10 = sub_7FC50();
    uint64_t v12 = v11;

    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_6C34();
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v12;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    id v21 = v5;
    ((void (*)(void *, void))a3)(v5, 0);
  }
  else
  {
    type metadata accessor for HealthFlowError();
    swift_initStackObject();
    sub_E934(0);
    sub_7FE30();
    uint64_t v13 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_80D90;
    id v15 = v13;
    uint64_t v16 = sub_E854();
    uint64_t v18 = v17;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_6C34();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    swift_allocObject();
    uint64_t v19 = sub_E934(1);
    sub_305C4((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    swift_allocError();
    uint64_t *v20 = v19;
    a3();
    swift_errorRelease();
    swift_release();
  }
}

id sub_2FBF0(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_ABEB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  long long v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v39 = (char *)&v38 - v5;
  uint64_t v6 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_7F6B0();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7ED20();
  sub_6D54();
  uint64_t v16 = v15;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v23((char *)&v38 - v21, a1, v14);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v14);
  if (v24 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v25 = sub_6D70();
    v26(v25);
    uint64_t v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v22, v41);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v13, v27);
    sub_30584();
    id v28 = sub_6920C((uint64_t)v8);
    sub_6BD4((uint64_t)v8, type metadata accessor for HealthNLIntent);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v27);
  }
  else
  {
    uint64_t v29 = a1;
    uint64_t v31 = (uint64_t)v39;
    uint64_t v30 = (uint64_t)v40;
    if (v24 == enum case for Parse.directInvocation(_:))
    {
      v23(v20, v29, v14);
      sub_7819C((uint64_t)v20, v31);
      sub_6AA4(v31, v30);
      uint64_t v32 = type metadata accessor for DirectInvocationData();
      if (sub_6B0C(v30, 1, v32) == 1)
      {
        sub_6B34(v31);
        sub_6B34(v30);
        id v28 = 0;
      }
      else
      {
        sub_7890C(v43);
        sub_6B34(v31);
        sub_6BD4(v30, (uint64_t (*)(void))type metadata accessor for DirectInvocationData);
        sub_6A60(&qword_ABEC0);
        sub_30584();
        if (swift_dynamicCast()) {
          id v28 = v42;
        }
        else {
          id v28 = 0;
        }
      }
      uint64_t v35 = sub_6D70();
      v36(v35);
    }
    else
    {
      uint64_t v33 = sub_6D70();
      v34(v33);
      return 0;
    }
  }
  return v28;
}

uint64_t type metadata accessor for CancelWorkoutStrategy()
{
  return self;
}

uint64_t sub_2FFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for CancelWorkoutStrategy();

  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, v11, a6);
}

void sub_30048(uint64_t a1, uint64_t a2, void (*a3)(void))
{
}

uint64_t sub_3006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CancelWorkoutStrategy();

  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_300B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for CancelWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_30124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for CancelWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_30190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for CancelWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_301FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CancelWorkoutStrategy();

  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_30278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CancelWorkoutStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_302C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CancelWorkoutStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_30328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CancelWorkoutStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_3037C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for CancelWorkoutStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_303E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CancelWorkoutStrategy();

  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_30464(uint64_t a1, uint64_t a2)
{
  return sub_305C4(&qword_AD8C8, a2, (void (*)(uint64_t))type metadata accessor for CancelWorkoutStrategy);
}

uint64_t sub_304AC(uint64_t a1, uint64_t a2)
{
  return sub_305C4(&qword_AD8D0, a2, (void (*)(uint64_t))type metadata accessor for CancelWorkoutStrategy);
}

uint64_t sub_304F4(uint64_t a1, uint64_t a2)
{
  return sub_305C4(&qword_AD8D8, a2, (void (*)(uint64_t))type metadata accessor for CancelWorkoutStrategy);
}

uint64_t sub_3053C(uint64_t a1, uint64_t a2)
{
  return sub_305C4(&qword_AD8E0, a2, (void (*)(uint64_t))type metadata accessor for CancelWorkoutStrategy);
}

unint64_t sub_30584()
{
  unint64_t result = qword_AC8F8;
  if (!qword_AC8F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AC8F8);
  }
  return result;
}

uint64_t sub_305C4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3060C()
{
  uint64_t v0 = sub_7ED20();
  sub_6D54();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  sub_7FE20();
  uint64_t v7 = *(void **)sub_7F9D0();
  sub_6A60(&qword_ABED0);
  uint64_t v8 = sub_21DE4();
  *(_OWORD *)(v8 + 16) = xmmword_80D90;
  id v9 = v7;
  sub_7ECD0();
  sub_80110();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_6C34();
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = 0xE000000000000000;
  sub_7FAE0();

  swift_bridgeObjectRelease();
  return sub_7E540();
}

uint64_t sub_30770(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *))
{
  uint64_t v9 = sub_6A60(&qword_AD9B0);
  __chkstk_darwin(v9 - 8);
  sub_755C();
  uint64_t v71 = v11 - v10;
  sub_6A60(&qword_AD9B8);
  sub_151D0();
  __chkstk_darwin(v12);
  sub_755C();
  uint64_t v15 = (uint64_t *)(v14 - v13);
  type metadata accessor for HealthNLIntent(0);
  sub_151D0();
  __chkstk_darwin(v16);
  sub_755C();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_7ED20();
  sub_6D54();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_755C();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_7F6B0();
  sub_6D54();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_31DF4();
  sub_7ECD0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 88))(v26, v20) == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v69 = v15;
    (*(void (**)(uint64_t, uint64_t))(v22 + 96))(v26, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v8, v26, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v19, v8, v27);
    if (qword_ABC58 != -1) {
      swift_once();
    }
    sub_31D6C((unint64_t *)&qword_AC668, 255, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
    sub_7F310();
    if (v73 == 3)
    {
      type metadata accessor for HealthFlowError();
      swift_allocObject();
      uint64_t v31 = sub_E934(3);
      sub_7FE30();
      uint64_t v32 = *(void **)sub_7F9D0();
      sub_6A60(&qword_ABED0);
      uint64_t v33 = sub_21DE4();
      *(_OWORD *)(v33 + 16) = xmmword_80D90;
      id v34 = v32;
      uint64_t v35 = sub_E854();
      uint64_t v36 = v19;
      uint64_t v38 = v37;
      *(void *)(v33 + 56) = &type metadata for String;
      *(void *)(v33 + 64) = sub_6C34();
      *(void *)(v33 + 32) = v35;
      *(void *)(v33 + 40) = v38;
      sub_31E0C();

      swift_bridgeObjectRelease();
      sub_31D6C((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      uint64_t v39 = swift_allocError();
      *long long v40 = v31;
      *uint64_t v69 = v39;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      a8(v69);
      swift_release();
      sub_1AA7C((uint64_t)v69, &qword_AD9B8);
      sub_F314(v36);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v8, v27);
    }
    else
    {
      sub_7FE20();
      uint64_t v53 = *(void **)sub_7F9D0();
      sub_6A60(&qword_ABED0);
      uint64_t v54 = sub_21DE4();
      *(_OWORD *)(v54 + 16) = xmmword_80D90;
      sub_31D6C(&qword_AD0D0, 255, (void (*)(uint64_t))&type metadata accessor for NLIntent);
      id v55 = v53;
      uint64_t v56 = sub_802A0();
      uint64_t v58 = v57;
      *(void *)(v54 + 56) = &type metadata for String;
      *(void *)(v54 + 64) = sub_6C34();
      *(void *)(v54 + 32) = v56;
      *(void *)(v54 + 40) = v58;
      sub_7FAE0();

      swift_bridgeObjectRelease();
      sub_31DB4();
      uint64_t v59 = sub_689DC();
      uint64_t v60 = sub_7E830();
      sub_151D0();
      uint64_t v62 = *(void (**)(uint64_t, void, uint64_t))(v61 + 104);
      if (v73)
      {
        v62(v71, enum case for ConfirmationResponse.rejected(_:), v60);
        sub_9B2C(v71, 0, 1, v60);
        id v63 = a2;
        sub_7EA00();
        swift_storeEnumTagMultiPayload();
        uint64_t v64 = sub_31E28();
        v65(v64);
      }
      else
      {
        v62(v71, enum case for ConfirmationResponse.confirmed(_:), v60);
        sub_9B2C(v71, 0, 1, v60);
        id v66 = v59;
        sub_7EA00();
        swift_storeEnumTagMultiPayload();
        uint64_t v67 = sub_31E28();
        v68(v67);
      }
      sub_1AA7C((uint64_t)v15, &qword_AD9B8);
      sub_F314(v19);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v8, v27);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v20);
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v42 = sub_E934(0);
    sub_7FE30();
    long long v43 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v44 = sub_21DE4();
    *(_OWORD *)(v44 + 16) = xmmword_80D90;
    id v45 = v43;
    uint64_t v46 = sub_E854();
    uint64_t v48 = v47;
    *(void *)(v44 + 56) = &type metadata for String;
    *(void *)(v44 + 64) = sub_6C34();
    *(void *)(v44 + 32) = v46;
    *(void *)(v44 + 40) = v48;
    sub_31E0C();

    swift_bridgeObjectRelease();
    sub_31D6C((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v49 = swift_allocError();
    uint64_t *v50 = v42;
    *uint64_t v15 = v49;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    uint64_t v51 = sub_31E28();
    v52(v51);
    swift_release();
    return sub_1AA7C((uint64_t)v15, &qword_AD9B8);
  }
}

uint64_t sub_30F34(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *), uint64_t a9)
{
  uint64_t v49 = a9;
  id v50 = a8;
  sub_7F870();
  sub_6D54();
  uint64_t v48 = v13;
  __chkstk_darwin(v14);
  sub_31DF4();
  uint64_t v15 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v15 - 8);
  sub_755C();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_7E6E0();
  sub_6D54();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_755C();
  uint64_t v25 = v24 - v23;
  swift_bridgeObjectRetain();
  char v26 = sub_50760(a3, a4);
  if (v26 == 5)
  {
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v27 = sub_E934(2);
    sub_7FE30();
    uint64_t v28 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v29 = sub_21DE4();
    *(_OWORD *)(v29 + 16) = xmmword_80D90;
    id v30 = v28;
    uint64_t v31 = sub_E854();
    uint64_t v33 = v32;
    *(void *)(v29 + 56) = &type metadata for String;
    *(void *)(v29 + 64) = sub_6C34();
    *(void *)(v29 + 32) = v31;
    *(void *)(v29 + 40) = v33;
    sub_31E0C();

    swift_bridgeObjectRelease();
    sub_31D6C((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v34 = swift_allocError();
    *uint64_t v35 = v27;
    v52[0] = v34;
    char v53 = 1;
    swift_retain();
    v50(v52);
    swift_release();
    return sub_1AA7C((uint64_t)v52, (uint64_t *)&unk_AF480);
  }
  else
  {
    char v37 = v26;
    sub_7FE20();
    uint64_t v47 = v21;
    uint64_t v38 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v39 = sub_21DE4();
    long long v44 = xmmword_80D90;
    *(_OWORD *)(v39 + 16) = xmmword_80D90;
    v52[1] = 0xE000000000000000;
    char v51 = v37;
    id v40 = v38;
    sub_80110();
    id v45 = a2;
    uint64_t v46 = v19;
    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = sub_6C34();
    *(void *)(v39 + 32) = 0;
    *(void *)(v39 + 40) = 0xE000000000000000;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_43260();
    sub_7F760();
    uint64_t v41 = sub_7F750();
    sub_6A60(&qword_ACBA0);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v44;
    sub_7F860();
    v52[0] = v42;
    sub_31D6C((unint64_t *)&unk_AF450, 255, (void (*)(uint64_t))&type metadata accessor for CATOption);
    sub_6A60(&qword_ACBA8);
    sub_18A2C();
    sub_7FFE0();
    type metadata accessor for HealthCATWrapper();
    swift_allocObject();
    sub_5B344(v41, v9);
    sub_5B86C(v37, v45);
    uint64_t v43 = swift_release();
    __chkstk_darwin(v43);
    *((void *)&v44 - 2) = v25;
    sub_611D4((void (*)(uint64_t))sub_31D64, (uint64_t)v52);
    v50(v52);
    sub_1AA7C((uint64_t)v52, (uint64_t *)&unk_AF480);
    sub_1AA7C(v18, (uint64_t *)&unk_AF440);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v25, v46);
  }
}

uint64_t sub_31420@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v12, v12[3]);
  sub_7E3D0();
  uint64_t v7 = sub_7E6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  sub_9B2C((uint64_t)v6, 0, 1, v7);
  uint64_t v8 = sub_7ED80();
  memset(v10, 0, sizeof(v10));
  uint64_t v11 = 0;
  a2[3] = v8;
  a2[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a2);
  sub_7E5D0();
  sub_1AA7C((uint64_t)v10, (uint64_t *)&unk_AF490);
  sub_1AA7C((uint64_t)v6, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v13);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v12);
}

uint64_t type metadata accessor for StartWorkoutConfirmSlotStrategy()
{
  return self;
}

uint64_t sub_315F0()
{
  return sub_3060C();
}

uint64_t sub_31608(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *))
{
  return sub_30770(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_31630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return NeedsConfirmationFlowStrategy.shouldRequestUnlockForConfirmation(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, started, a11);
}

uint64_t sub_316E0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *), uint64_t a9)
{
  return sub_30F34(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_31708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return NeedsConfirmationFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, started, a11);
}

uint64_t sub_317B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return NeedsConfirmationFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, started, a11);
}

uint64_t sub_31868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return NeedsConfirmationFlowStrategy.makePromptForDeviceUnlock(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, a8, started, a10);
}

uint64_t sub_31900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return NeedsConfirmationFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, a8, started, a10);
}

uint64_t sub_31998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return NeedsConfirmationFlowStrategy.makeConfirmationRejectedResponse(app:intent:parameterName:multicardinalIndex:_:)(a1, a2, a3, a4, a5, a6, a7, started, a9);
}

uint64_t sub_31A2C()
{
  type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return sub_7EB80();
}

uint64_t sub_31AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();

  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)(a1, a2, a3, a4, a5, a6, a7, started, a9);
}

uint64_t sub_31B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();
  *uint64_t v14 = v7;
  v14[1] = sub_18744;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_31C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  uint64_t started = type metadata accessor for StartWorkoutConfirmSlotStrategy();
  *uint64_t v16 = v8;
  v16[1] = sub_18BE8;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, started, a8);
}

uint64_t sub_31D1C(uint64_t a1, uint64_t a2)
{
  return sub_31D6C(&qword_AD9A8, a2, (void (*)(uint64_t))type metadata accessor for StartWorkoutConfirmSlotStrategy);
}

uint64_t sub_31D64@<X0>(uint64_t *a1@<X8>)
{
  return sub_31420(*(void *)(v1 + 16), a1);
}

uint64_t sub_31D6C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_31DB4()
{
  unint64_t result = qword_AC898;
  if (!qword_AC898)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AC898);
  }
  return result;
}

uint64_t sub_31E0C()
{
  return sub_7FAE0();
}

uint64_t sub_31E28()
{
  return v0;
}

char *sub_31E38(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_7F6D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_7ED20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    long long v13 = *(_OWORD *)&a2[v12 + 24];
    *(_OWORD *)&a1[v12 + 24] = v13;
    (**(void (***)(void))(v13 - 8))();
    uint64_t v14 = a3[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    long long v17 = *(_OWORD *)&a2[v14 + 24];
    *(_OWORD *)&a1[v14 + 24] = v17;
    (**(void (***)(char *, char *))(v17 - 8))(&a1[v14], &a2[v14]);
    long long v18 = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 4) = v18;
    (**(void (***)(uint64_t, uint64_t))(v18 - 8))((uint64_t)(v15 + 40), (uint64_t)(v16 + 40));
    long long v19 = *(_OWORD *)(v16 + 104);
    *(_OWORD *)(v15 + 104) = v19;
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))((uint64_t)(v15 + 80), (uint64_t)(v16 + 80));
    long long v20 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 9) = v20;
    (**(void (***)(uint64_t, uint64_t))(v20 - 8))((uint64_t)(v15 + 120), (uint64_t)(v16 + 120));
    long long v21 = *(_OWORD *)(v16 + 184);
    *(_OWORD *)(v15 + 184) = v21;
    (**(void (***)(uint64_t, uint64_t))(v21 - 8))((uint64_t)(v15 + 160), (uint64_t)(v16 + 160));
    long long v22 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v15 + 14) = v22;
    (**(void (***)(uint64_t, uint64_t))(v22 - 8))((uint64_t)(v15 + 200), (uint64_t)(v16 + 200));
    uint64_t v23 = a3[8];
    long long v24 = *(_OWORD *)&a2[v23 + 24];
    *(_OWORD *)&a1[v23 + 24] = v24;
    (**(void (***)(void))(v24 - 8))();
    *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  }
  swift_retain();
  return a1;
}

uint64_t sub_321E8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_7F6D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_7ED20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + a2[6]);
  uint64_t v7 = a1 + a2[7];
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v7);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v7 + 40);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v7 + 80);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v7 + 120);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v7 + 160);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v7 + 200);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + a2[8]);

  return swift_release();
}

uint64_t sub_322F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_7F6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_7ED20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  long long v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  uint64_t v13 = a3[7];
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  long long v16 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v16;
  (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + v13, a2 + v13);
  long long v17 = v15[4];
  v14[4] = v17;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))((uint64_t)v14 + 40, (uint64_t)v15 + 40);
  long long v18 = *(_OWORD *)((char *)v15 + 104);
  *(_OWORD *)((char *)v14 + 104) = v18;
  (**(void (***)(uint64_t, uint64_t))(v18 - 8))((uint64_t)(v14 + 5), (uint64_t)(v15 + 5));
  long long v19 = v15[9];
  v14[9] = v19;
  (**(void (***)(uint64_t, uint64_t))(v19 - 8))((uint64_t)v14 + 120, (uint64_t)v15 + 120);
  long long v20 = *(_OWORD *)((char *)v15 + 184);
  *(_OWORD *)((char *)v14 + 184) = v20;
  (**(void (***)(uint64_t, uint64_t))(v20 - 8))((uint64_t)(v14 + 10), (uint64_t)(v15 + 10));
  long long v21 = v15[14];
  v14[14] = v21;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))((uint64_t)v14 + 200, (uint64_t)v15 + 200);
  uint64_t v22 = a3[8];
  long long v23 = *(_OWORD *)(a2 + v22 + 24);
  *(_OWORD *)(a1 + v22 + 24) = v23;
  (**(void (***)(void))(v23 - 8))();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  return a1;
}

uint64_t sub_32658(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_7F6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_7ED20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  sub_7DB0((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  uint64_t v11 = a3[7];
  long long v12 = (uint64_t *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  sub_7DB0((uint64_t *)(a1 + v11), (uint64_t *)(a2 + v11));
  sub_7DB0(v12 + 5, v13 + 5);
  sub_7DB0(v12 + 10, v13 + 10);
  sub_7DB0(v12 + 15, v13 + 15);
  sub_7DB0(v12 + 20, v13 + 20);
  sub_7DB0(v12 + 25, v13 + 25);
  sub_7DB0((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_327A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_7F6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_7ED20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  memcpy((void *)(a1 + v12), (const void *)(a2 + v12), 0xF0uLL);
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t sub_328B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_7F6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_7ED20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + v11);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v16 + 40);
  *(_OWORD *)(v16 + 40) = *(_OWORD *)(v17 + 40);
  *(_OWORD *)(v16 + 56) = *(_OWORD *)(v17 + 56);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v16 + 80);
  long long v19 = *(_OWORD *)(v17 + 96);
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v16 + 96) = v19;
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v16 + 120);
  *(_OWORD *)(v16 + 120) = *(_OWORD *)(v17 + 120);
  *(_OWORD *)(v16 + 136) = *(_OWORD *)(v17 + 136);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v16 + 160);
  long long v20 = *(_OWORD *)(v17 + 176);
  *(_OWORD *)(v16 + 160) = *(_OWORD *)(v17 + 160);
  *(_OWORD *)(v16 + 176) = v20;
  *(void *)(v16 + 192) = *(void *)(v17 + 192);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v16 + 200);
  *(_OWORD *)(v16 + 200) = *(_OWORD *)(v17 + 200);
  *(_OWORD *)(v16 + 216) = *(_OWORD *)(v17 + 216);
  *(void *)(v16 + 232) = *(void *)(v17 + 232);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + v21);
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_32A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_32A9C);
}

uint64_t sub_32A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_7F6D0();
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return sub_6B0C(v9, a2, v8);
  }
  sub_7ED20();
  sub_33D8C();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_32B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_32B68);
}

void sub_32B68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_7F6D0();
  sub_33D8C();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_7ED20();
    sub_33D8C();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  sub_9B2C(v11, a2, a2, v10);
}

uint64_t type metadata accessor for ExecuteOnRemoteDeviceFlow()
{
  uint64_t result = qword_ADA18;
  if (!qword_ADA18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_32C64()
{
  uint64_t result = sub_7F6D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_7ED20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_32D50()
{
  return 1;
}

uint64_t sub_32D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExecuteOnRemoteDeviceFlow();
  unint64_t v5 = sub_33D3C();

  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t sub_32DE8()
{
  sub_9D38();
  v1[56] = v2;
  v1[57] = v0;
  uint64_t v3 = sub_7F6D0();
  v1[58] = v3;
  sub_9C80(v3);
  v1[59] = v4;
  v1[60] = swift_task_alloc();
  v1[61] = type metadata accessor for ExecuteOnRemoteDeviceFlow();
  v1[62] = swift_task_alloc();
  uint64_t v5 = sub_7FBE0();
  v1[63] = v5;
  sub_9C80(v5);
  v1[64] = v6;
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  return _swift_task_switch(sub_32F10, 0, 0);
}

uint64_t sub_32F10()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[68];
  uint64_t v2 = v0[63];
  uint64_t v3 = v0[64];
  uint64_t v4 = v0[62];
  uint64_t v5 = v0[57];
  uint64_t v6 = sub_7FBB0();
  v0[69] = v6;
  sub_DBF4();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[70] = v7;
  v0[71] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v6, v2);
  sub_33C7C(v5, v4);
  uint64_t v8 = sub_7FBD0();
  os_log_type_t v9 = sub_7FE20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v25 = v0[64];
    uint64_t v10 = v0[62];
    uint64_t v26 = v0[63];
    uint64_t v27 = v0[68];
    uint64_t v11 = v0[59];
    uint64_t v12 = v0[60];
    uint64_t v13 = v0[58];
    long long v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)long long v14 = 136315138;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v10, v13);
    uint64_t v15 = sub_7FC60();
    v0[55] = sub_1CDF0(v15, v16, &v28);
    sub_7FF60();
    swift_bridgeObjectRelease();
    sub_33CE0(v10);
    _os_log_impl(&dword_0, v8, v9, "Searching for remote %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_33DA4();

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v17(v27, v26);
  }
  else
  {
    uint64_t v18 = v0[68];
    uint64_t v19 = v0[63];
    uint64_t v20 = v0[64];
    sub_33CE0(v0[62]);

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v17(v18, v19);
  }
  v0[72] = v17;
  uint64_t v21 = v0[57] + *(int *)(v0[61] + 32);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[73] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_331B4;
  uint64_t v23 = v0[57];
  return findRemoteDevice(with:deviceResolutionService:)(v23, v21);
}

uint64_t sub_331B4()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 592) = v3;
  swift_task_dealloc();
  return _swift_task_switch(sub_33288, 0, 0);
}

uint64_t sub_33288()
{
  uint64_t v1 = v0[74];
  if (v1)
  {
    sub_7E370();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[75] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_33458;
    return isRemoteDeviceReachable(remoteDevice:aceService:)(v1, v0 + 37);
  }
  else
  {
    uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[70];
    uint64_t v4 = v0[69];
    uint64_t v5 = v0[65];
    uint64_t v6 = v0[63];
    swift_beginAccess();
    v3(v5, v4, v6);
    uint64_t v7 = sub_7FBD0();
    os_log_type_t v8 = sub_7FE30();
    if (os_log_type_enabled(v7, v8))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_33E24(&dword_0, v9, v10, "Unable to find any suitable remote device, falling back to local device");
      sub_33DA4();
    }
    sub_33E00();
    uint64_t v11 = sub_33DE8();
    ((void (*)(uint64_t))v3)(v11);
    sub_7E620();
    sub_33DC0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_33458()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 296;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 608) = v4;
  swift_task_dealloc();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v3);
  return _swift_task_switch(sub_33538, 0, 0);
}

uint64_t sub_33538()
{
  if (*(unsigned char *)(v0 + 608) == 1)
  {
    sub_2BA34((void *)(*(void *)(v0 + 456) + *(int *)(*(void *)(v0 + 488) + 20)), *(void *)(v0 + 592), *(void *)(v0 + 456));
    uint64_t v11 = *(void **)(v0 + 592);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 560);
    uint64_t v13 = *(void *)(v0 + 552);
    uint64_t v14 = *(void *)(v0 + 536);
    uint64_t v15 = *(void *)(v0 + 504);
    swift_beginAccess();
    v12(v14, v13, v15);
    id v16 = v11;
    uint64_t v17 = sub_7FBD0();
    os_log_type_t v18 = sub_7FE20();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(NSObject **)(v0 + 592);
    if (v19)
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      *(void *)(v0 + 432) = v20;
      uint64_t v23 = v20;
      sub_7FF60();
      *uint64_t v22 = v20;

      _os_log_impl(&dword_0, v17, v18, "Executing RCHFlow on remote device: %@", v21, 0xCu);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_33DA4();
    }
    else
    {

      uint64_t v17 = v20;
    }

    long long v24 = *(void **)(v0 + 592);
    (*(void (**)(void, void))(v0 + 576))(*(void *)(v0 + 536), *(void *)(v0 + 504));
    sub_7E620();
    swift_release();
  }
  else
  {

    uint64_t v1 = *(void (**)(uint64_t))(v0 + 568);
    uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 560);
    uint64_t v3 = *(void *)(v0 + 552);
    uint64_t v4 = *(void *)(v0 + 520);
    uint64_t v5 = *(void *)(v0 + 504);
    sub_DBF4();
    v2(v4, v3, v5);
    uint64_t v6 = sub_7FBD0();
    os_log_type_t v7 = sub_7FE30();
    if (os_log_type_enabled(v6, v7))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_33E24(&dword_0, v8, v9, "Unable to find any suitable remote device, falling back to local device");
      sub_33DA4();
    }
    sub_33E00();
    uint64_t v10 = sub_33DE8();
    v1(v10);
    sub_7E620();
  }
  sub_33DC0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_33974()
{
  return 1;
}

uint64_t sub_33990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_33A40;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_33A40()
{
  sub_9D38();
  uint64_t v2 = v1;
  sub_9C98();
  uint64_t v3 = *v0;
  sub_9D5C();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_33B14()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_33BAC;
  return sub_32DE8();
}

uint64_t sub_33BAC()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_9D5C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_33C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExecuteOnRemoteDeviceFlow();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_33CE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExecuteOnRemoteDeviceFlow();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_33D3C()
{
  unint64_t result = qword_ADA78;
  if (!qword_ADA78)
  {
    type metadata accessor for ExecuteOnRemoteDeviceFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ADA78);
  }
  return result;
}

uint64_t sub_33DA4()
{
  return swift_slowDealloc();
}

uint64_t sub_33DC0()
{
  return swift_task_dealloc();
}

uint64_t sub_33DE8()
{
  return v0;
}

void sub_33E00()
{
}

void sub_33E24(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

BOOL sub_33E44(uint64_t a1)
{
  uint64_t v2 = sub_7ED20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11158();
  if (v6 && (uint64_t v7 = sub_7F890(), v9 = v8, swift_release(), v9))
  {
    if (v7 == 0xD000000000000011 && v9 == 0x8000000000089630)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_33FF8();
      v11(v10);
LABEL_9:
      BOOL v14 = 1;
      goto LABEL_10;
    }
    char v15 = sub_802B0();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_33FF8();
    v17(v16);
    if (v15) {
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  }
  sub_6B774((uint64_t)v5);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  BOOL v14 = v13 != 0;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v14;
}

uint64_t sub_33FF8()
{
  return v0;
}

uint64_t sub_3401C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_34060()
{
  return v0;
}

uint64_t sub_34080(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_D838(0, &qword_AC488);
  uint64_t v11 = (void *)sub_7FEC0();
  uint64_t v12 = *(void **)(v5 + 16);
  if (v12)
  {
    id v19 = v12;
    sub_7E380();
    sub_9AE0(v20, v20[3]);
    sub_7FA50();
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = v5;
    v13[3] = a1;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = a4;
    v13[7] = a5;
    sub_D838(0, &qword_AC498);
    swift_retain();
    swift_retain();
    id v14 = a2;
    id v15 = a3;
    swift_retain();
    sub_7E770();
    swift_bridgeObjectRelease();
    swift_release();

    return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v20);
  }
  else
  {
    sub_6A60(&qword_AEA40);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_814D0;
    *(void *)(v17 + 32) = v11;
    v20[0] = v17;
    sub_7FD40();
    id v18 = v11;
    sub_342A0(a1, a2, a3, v20[0], a4, a5);

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_342A0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_7FDC0();
  sub_9B2C((uint64_t)v16, 1, 1, v17);
  id v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v7;
  v18[5] = a1;
  v18[6] = a2;
  v18[7] = a3;
  v18[8] = a4;
  v18[9] = a5;
  v18[10] = a6;
  swift_retain();
  swift_retain();
  id v19 = a2;
  id v20 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_61330((uint64_t)v16, (uint64_t)&unk_ADB18, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_343D8(void (*a1)(uint64_t *))
{
  uint64_t v2 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_7E6E0();
  sub_9B2C((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = sub_7ED80();
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = 0;
  v10[3] = v6;
  void v10[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(v10);
  sub_7E600();
  sub_D8DC((uint64_t)v8, (uint64_t *)&unk_AF490);
  sub_D8DC((uint64_t)v4, &qword_AC3B8);
  char v11 = 0;
  a1(v10);
  return sub_D8DC((uint64_t)v10, (uint64_t *)&unk_AF480);
}

void sub_344F4()
{
}

void sub_34550(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_6A60(&qword_ADB20);
  __chkstk_darwin(v13);
  uint64_t v15 = (id *)((char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_34E10(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_D8DC((uint64_t)v15, &qword_ADB20);
    sub_7FE30();
    id v16 = *(id *)sub_7F9D0();
    sub_7FAE0();
  }
  else
  {

    sub_342A0(a3, a4, a5, (uint64_t)_swiftEmptyArrayStorage, a6, a7);
    swift_bridgeObjectRelease();
  }
}

void *sub_346B0()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_346BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[22] = v10;
  v8[23] = v11;
  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[17] = a4;
  return _swift_task_switch(sub_346F0, 0, 0);
}

uint64_t sub_346F0()
{
  (*(void (**)(void, void, void))(**(void **)(v0 + 136) + 120))(*(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_347CC;
  uint64_t v2 = *(void *)(v0 + 168);
  return sub_3708C(v0 + 88, v0 + 16, v2);
}

uint64_t sub_347CC()
{
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_3489C, 0, 0);
}

uint64_t sub_3489C()
{
  (*(void (**)(uint64_t))(v0 + 176))(v0 + 88);
  sub_D8DC(v0 + 88, (uint64_t *)&unk_AF480);
  sub_19D80(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3492C()
{
  sub_34060();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for HealthContinueInAppStrategy()
{
  return sub_9C4C();
}

uint64_t sub_34978(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_34080(a1, a2, a3, a4, a5);
}

uint64_t sub_3499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for HealthContinueInAppStrategy();

  return ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:completion:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_34A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for HealthContinueInAppStrategy();
  *uint64_t v12 = v6;
  v12[1] = sub_19ED0;
  return ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_34B0C(void (*a1)(uint64_t *))
{
  return sub_343D8(a1);
}

uint64_t sub_34B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19C58;
  return UnlockDeviceFlowStrategy.makePromptForDeviceUnlock()(a1, a2, a3);
}

uint64_t sub_34BDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_34BF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_34C14()
{
  return swift_getWitnessTable();
}

uint64_t sub_34C30()
{
  return swift_getWitnessTable();
}

uint64_t sub_34C4C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_34CB4(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_19C58;
  return sub_346BC(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_34DA8()
{
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_34E00(uint64_t a1)
{
  sub_34550(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_34E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_ADB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_34E78(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_10C48(a3, v3 + 16);
  sub_35F40(a1, v3 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10FlowRouter_healthIntent);
  sub_35FA4(a2, v3 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10FlowRouter_directInvocationData);
  return v3;
}

uint64_t sub_34EDC(uint64_t a1)
{
  uint64_t v4 = sub_6A60(&qword_ABEB8);
  uint64_t v5 = sub_DC74(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = sub_36260();
  uint64_t v7 = sub_DC74(v6);
  __chkstk_darwin(v7);
  sub_15210();
  sub_360AC(a1, v2, (void (*)(void))type metadata accessor for HealthNLIntent);
  uint64_t v8 = type metadata accessor for DirectInvocationData();
  sub_9B2C(v1, 1, 1, v8);
  sub_7ED30();
  sub_3610C(a1, (void (*)(void))type metadata accessor for HealthNLIntent);
  type metadata accessor for FlowRouter();
  sub_26A80();
  sub_362D4();
  return a1;
}

uint64_t sub_34FD0(uint64_t a1)
{
  uint64_t v4 = sub_6A60(&qword_ABEB8);
  uint64_t v5 = sub_DC74(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = sub_36260();
  uint64_t v7 = sub_DC74(v6);
  __chkstk_darwin(v7);
  sub_15210();
  sub_78B34(v2);
  sub_360AC(a1, v1, (void (*)(void))type metadata accessor for DirectInvocationData);
  uint64_t v8 = type metadata accessor for DirectInvocationData();
  sub_9B2C(v1, 0, 1, v8);
  sub_7ED30();
  sub_3610C(a1, (void (*)(void))type metadata accessor for DirectInvocationData);
  type metadata accessor for FlowRouter();
  sub_26A80();
  sub_362D4();
  return a1;
}

uint64_t sub_350CC()
{
  uint64_t v2 = sub_7F870();
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_15210();
  type metadata accessor for HealthNLIntent(0);
  sub_151D0();
  __chkstk_darwin(v4);
  sub_15490();
  sub_9AE0((void *)(v0 + 16), *(void *)(v0 + 40));
  if (sub_7E410())
  {
    sub_360AC(v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10FlowRouter_healthIntent, v1, (void (*)(void))type metadata accessor for HealthNLIntent);
    type metadata accessor for SearchForRemoteDevicesFlow();
    sub_26A80();
    v8[0] = sub_6BE70(v1);
    sub_36164(&qword_ADC40, (void (*)(uint64_t))type metadata accessor for SearchForRemoteDevicesFlow);
    uint64_t v5 = sub_7E1E0();
    swift_release();
    return v5;
  }
  sub_362F4();
  if ((sub_7E400() & 1) == 0)
  {
    sub_362F4();
    if ((sub_7E3B0() & 1) == 0)
    {
      if (qword_ABC20 != -1) {
        swift_once();
      }
      sub_36164((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
      sub_7F310();
      switch(LOBYTE(v8[0]))
      {
        case 0:
          uint64_t v7 = sub_35AA4();
          goto LABEL_18;
        case 1:
          uint64_t v7 = sub_3575C();
          goto LABEL_18;
        case 2:
          uint64_t v7 = sub_35644();
          goto LABEL_18;
        case 3:
          uint64_t v7 = sub_35874();
          goto LABEL_18;
        case 4:
          uint64_t v7 = sub_3598C();
LABEL_18:
          uint64_t v5 = v7;
          break;
        default:
          type metadata accessor for DialogCATWrapper();
          sub_7F860();
          sub_7F790();
          sub_7ED30();
          sub_7E380();
          sub_7F920();
          sub_3600C();
          uint64_t v5 = sub_7E1E0();
          sub_36058((uint64_t)v8);
          break;
      }
      return v5;
    }
  }

  return sub_35418();
}

uint64_t sub_35418()
{
  uint64_t v0 = sub_7F870();
  uint64_t v1 = sub_DC74(v0);
  __chkstk_darwin(v1);
  sub_6A60(&qword_ADC10);
  sub_7DFB0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_80D90;
  sub_7DFA0();
  sub_7DAA0();
  swift_bridgeObjectRelease();
  type metadata accessor for DialogCATWrapper();
  sub_7F860();
  sub_7F790();
  sub_7ED30();
  sub_7E380();
  sub_7F920();
  sub_7DF90();
  sub_3600C();
  sub_7E220();
  sub_6A60(&qword_ADC20);
  sub_10D50(&qword_ADC28, &qword_ADC20);
  uint64_t v2 = sub_7E1E0();
  swift_release();
  swift_release();
  sub_36058((uint64_t)v4);
  return v2;
}

uint64_t sub_35644()
{
  sub_6A60(&qword_AC7B0);
  sub_361AC();
  __chkstk_darwin(v0);
  sub_2DF78();
  __chkstk_darwin(v1);
  sub_36208();
  uint64_t v2 = (void *)sub_36288();
  sub_FA84(v2);
  sub_6A60(&qword_ADC48);
  sub_3632C();
  type metadata accessor for EndWorkoutStrategy();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = sub_361CC(v3);
  v5(v4);
  sub_6A60(&qword_AD508);
  sub_26A80();
  sub_362BC();
  uint64_t v6 = sub_36228();
  sub_36320(v6);
  sub_10D50(&qword_ADC50, &qword_ADC48);
  sub_36244();
  sub_362A4();
  uint64_t v7 = sub_361F0();
  v8(v7);
  return sub_36298();
}

uint64_t sub_3575C()
{
  sub_6A60(&qword_AC830);
  sub_361AC();
  __chkstk_darwin(v0);
  sub_2DF78();
  __chkstk_darwin(v1);
  sub_36208();
  uint64_t v2 = sub_36288();
  sub_FFA4(v2);
  sub_6A60(&qword_ADC58);
  sub_3632C();
  type metadata accessor for PauseWorkoutStrategy();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = sub_361CC(v3);
  v5(v4);
  sub_6A60(&qword_AD5A0);
  sub_26A80();
  sub_362BC();
  uint64_t v6 = sub_36228();
  sub_36320(v6);
  sub_10D50(&qword_ADC60, &qword_ADC58);
  sub_36244();
  sub_362A4();
  uint64_t v7 = sub_361F0();
  v8(v7);
  return sub_36298();
}

uint64_t sub_35874()
{
  sub_6A60(&qword_AC728);
  sub_361AC();
  __chkstk_darwin(v0);
  sub_2DF78();
  __chkstk_darwin(v1);
  sub_36208();
  uint64_t v2 = sub_36288();
  sub_103B4(v2);
  sub_6A60(&qword_ADC68);
  sub_3632C();
  type metadata accessor for ResumeWorkoutStrategy();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = sub_361CC(v3);
  v5(v4);
  sub_6A60(&qword_AD6D0);
  sub_26A80();
  sub_362BC();
  uint64_t v6 = sub_36228();
  sub_36320(v6);
  sub_10D50(&qword_ADC70, &qword_ADC68);
  sub_36244();
  sub_362A4();
  uint64_t v7 = sub_361F0();
  v8(v7);
  return sub_36298();
}

uint64_t sub_3598C()
{
  sub_6A60(&qword_AC910);
  sub_361AC();
  __chkstk_darwin(v0);
  sub_2DF78();
  __chkstk_darwin(v1);
  sub_36208();
  sub_107C4();
  sub_6A60(&qword_ADC78);
  sub_3632C();
  type metadata accessor for CancelWorkoutStrategy();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_361CC(v2);
  v4(v3);
  sub_6A60(&qword_AD638);
  sub_26A80();
  sub_362BC();
  uint64_t v5 = sub_36228();
  sub_36320(v5);
  sub_10D50(qword_ADC80, &qword_ADC78);
  sub_36244();
  sub_362A4();
  uint64_t v6 = sub_361F0();
  v7(v6);
  return sub_36298();
}

uint64_t sub_35AA4()
{
  sub_6A60(&qword_AC8B0);
  sub_361AC();
  uint64_t v2 = v1;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 72;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v13 - v7 + 72;
  uint64_t v9 = sub_7F870();
  uint64_t v10 = sub_DC74(v9);
  __chkstk_darwin(v10);
  sub_15490();
  if (sub_65A78())
  {
    type metadata accessor for DialogCATWrapper();
    sub_7F860();
    sub_7F790();
    sub_7ED30();
    sub_7E380();
    sub_7F920();
    sub_3600C();
    sub_7E1E0();
    sub_36058((uint64_t)v13);
  }
  else
  {
    type metadata accessor for HealthProducers();
    sub_F6A4();
    sub_6A60(&qword_ADC30);
    type metadata accessor for StartWorkoutStrategy();
    v13[0] = swift_allocObject();
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v8, v0);
    sub_6A60(&qword_AD468);
    sub_26A80();
    sub_7E140();
    v13[0] = sub_7ED50();
    sub_10D50(&qword_ADC38, &qword_ADC30);
    sub_7E1E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v0);
  }
  return sub_36298();
}

uint64_t sub_35D14()
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  sub_3610C(v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10FlowRouter_healthIntent, (void (*)(void))type metadata accessor for HealthNLIntent);
  sub_6B34(v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10FlowRouter_directInvocationData);
  return v0;
}

uint64_t sub_35D68()
{
  sub_35D14();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_35DC0()
{
  return type metadata accessor for FlowRouter();
}

uint64_t type metadata accessor for FlowRouter()
{
  uint64_t result = qword_ADB60;
  if (!qword_ADB60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_35E10()
{
  sub_7F6B0();
  if (v0 <= 0x3F)
  {
    sub_35EE8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_35EE8()
{
  if (!qword_ADB70)
  {
    type metadata accessor for DirectInvocationData();
    unint64_t v0 = sub_7FF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_ADB70);
    }
  }
}

uint64_t sub_35F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthNLIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_35FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_ABEB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_3600C()
{
  unint64_t result = qword_ADC18;
  if (!qword_ADC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ADC18);
  }
  return result;
}

uint64_t sub_36058(uint64_t a1)
{
  return a1;
}

uint64_t sub_360AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_151D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_3610C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_151D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_36164(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_361CC(uint64_t a1)
{
  *(void *)(v2 - 72) = a1;
  return v1;
}

uint64_t sub_361F0()
{
  return v0;
}

uint64_t sub_36208()
{
  return type metadata accessor for HealthProducers();
}

uint64_t sub_36228()
{
  return sub_7ED50();
}

uint64_t sub_36244()
{
  return sub_7E1E0();
}

uint64_t sub_36260()
{
  return type metadata accessor for HealthNLIntent(0);
}

uint64_t sub_36288()
{
  return 0;
}

uint64_t sub_36298()
{
  return v0;
}

uint64_t sub_362A4()
{
  return swift_release();
}

uint64_t sub_362BC()
{
  return sub_7E140();
}

uint64_t sub_362D4()
{
  return sub_34E78(v1, v0, (long long *)(v2 - 72));
}

uint64_t sub_362F4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  sub_9AE0(v1, v2);
  return v2;
}

uint64_t sub_36320(uint64_t result)
{
  *(void *)(v1 - 72) = result;
  return result;
}

uint64_t sub_3632C()
{
  return 0;
}

uint64_t sub_36338(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  BOOL v4 = a1 == 0x726F6F646E69 && a2 == 0xE600000000000000;
  if (v4 || (sub_802B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  if (a1 == 0x726F6F6474756FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_802B0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

ValueMetadata *type metadata accessor for GenericErrorFlow()
{
  return &type metadata for GenericErrorFlow;
}

uint64_t sub_3642C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_29B44();

  return Flow.deferToExecuteAsync(_:)(a1, a2, &type metadata for GenericErrorFlow, v4);
}

uint64_t sub_36480()
{
  sub_9D38();
  v1[41] = v2;
  v1[42] = v0;
  uint64_t v3 = sub_7FBE0();
  v1[43] = v3;
  v1[44] = *(void *)(v3 - 8);
  v1[45] = swift_task_alloc();
  return _swift_task_switch(sub_3653C, 0, 0);
}

uint64_t sub_3653C()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v3 = v0[43];
  uint64_t v4 = sub_7FBB0();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE30();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "Executing a generic error response", v7, 2u);
    swift_slowDealloc();
  }
  uint64_t v9 = v0[44];
  uint64_t v8 = v0[45];
  uint64_t v11 = v0[42];
  uint64_t v10 = v0[43];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  sub_36F28(v11, (uint64_t)(v0 + 2));
  uint64_t v12 = swift_allocObject();
  memcpy((void *)(v12 + 16), v0 + 2, 0x118uLL);
  sub_7E920();
  sub_7DB80();
  swift_allocObject();
  v0[40] = sub_7DB70();
  sub_7E610();
  swift_release();
  swift_task_dealloc();
  sub_9D44();
  return v13();
}

uint64_t sub_36738(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_7E470();
  v2[4] = swift_task_alloc();
  uint64_t v3 = sub_7EA70();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_36824, 0, 0);
}

uint64_t sub_36824()
{
  sub_37080();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_7E460();
  sub_7EA20();
  sub_9AE0((void *)(v1 + 200), *(void *)(v1 + 224));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_368F8;
  return sub_517BC();
}

uint64_t sub_368F8()
{
  sub_9D38();
  sub_9C98();
  *(void *)(v2 + 72) = v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_36B8C;
  }
  else {
    uint64_t v3 = sub_369E4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_369E4()
{
  sub_37080();
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[33];
  uint64_t v3 = v1[34];
  sub_9AE0(v1 + 30, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_36AA8;
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[2];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v7, v5, v6, v2, v3);
}

uint64_t sub_36AA8()
{
  sub_9D38();
  sub_9C98();
  uint64_t v2 = *v1;
  sub_19EF0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_36C94;
  }
  else {
    uint64_t v5 = sub_36C00;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_36B8C()
{
  sub_37080();
  uint64_t v0 = sub_37064();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v2();
}

uint64_t sub_36C00()
{
  sub_37080();
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v4();
}

uint64_t sub_36C94()
{
  sub_37080();

  uint64_t v1 = sub_37064();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v3();
}

uint64_t sub_36D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_36DC0;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_36DC0()
{
  sub_9D38();
  uint64_t v2 = v1;
  sub_9C98();
  uint64_t v3 = *v0;
  sub_19EF0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_36E90()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2632C;
  return sub_36480();
}

uint64_t sub_36F28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_36F60()
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 56);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 96);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 136);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 176);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 216);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 256);

  return _swift_deallocObject(v0, 296, 7);
}

uint64_t sub_36FC8()
{
  sub_9D38();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_2632C;
  return sub_36738(v3, v0 + 16);
}

uint64_t sub_37064()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_3708C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  sub_7E470();
  v3[19] = swift_task_alloc();
  uint64_t v4 = sub_7EA70();
  v3[20] = v4;
  sub_9C80(v4);
  v3[21] = v5;
  v3[22] = swift_task_alloc();
  uint64_t v6 = sub_7F870();
  v3[23] = v6;
  sub_9C80(v6);
  v3[24] = v7;
  v3[25] = swift_task_alloc();
  return _swift_task_switch(sub_37190, 0, 0);
}

uint64_t sub_37190()
{
  uint64_t v1 = *(uint64_t **)(v0 + 136);
  sub_7F800();
  uint64_t v3 = v1[1];
  uint64_t v2 = v1[2];
  uint64_t v4 = *v1;
  uint64_t v5 = v1[8];
  sub_7F760();
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v6 = sub_7F750();
  *(void *)(v0 + 208) = v6;
  sub_7F860();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_372AC;
  uint64_t v8 = *(void *)(v0 + 200);
  return static CATResponse.executePattern(bundle:patternId:parameters:globals:callback:options:)(v2, v4, v3, v5, v6, v0 + 16, v8);
}

uint64_t sub_372AC()
{
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v5 = (void *)v4[26];
  uint64_t v6 = v4[25];
  uint64_t v7 = v4[24];
  uint64_t v8 = v4[23];
  uint64_t v9 = *v1;
  sub_9D5C();
  *uint64_t v10 = v9;
  uint64_t v12 = v11 + 16;
  *(void *)(v11 + 224) = v13;
  *(void *)(v11 + 232) = v0;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_37930(v12);
  if (v0) {
    uint64_t v14 = sub_376D8;
  }
  else {
    uint64_t v14 = sub_37420;
  }
  return _swift_task_switch(v14, 0, 0);
}

uint64_t sub_37420()
{
  uint64_t v1 = (void *)v0[17];
  sub_7E430();
  sub_7EA20();
  swift_bridgeObjectRetain();
  sub_7EA50();
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_9AE0(v1 + 3, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[30] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_37538;
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[22];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v0 + 7, v5, v6, v2, v3);
}

uint64_t sub_37538()
{
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_9D5C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_377F8;
  }
  else {
    uint64_t v7 = sub_37620;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_37620()
{
  uint64_t v1 = *(void *)(v0 + 128);

  uint64_t v2 = sub_9CF0();
  v3(v2);
  sub_10C48((long long *)(v0 + 56), v1);
  *(unsigned char *)(v1 + 40) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_376D8()
{
  id v1 = *(id *)sub_7F9D0();
  sub_7FE20();
  sub_6A60(&qword_ABED0);
  uint64_t v2 = (__n128 *)swift_allocObject();
  sub_37C74(v2, (__n128)xmmword_80D90);
  uint64_t v3 = sub_80300();
  unint64_t v5 = v4;
  v2[3].n128_u64[1] = (unint64_t)&type metadata for String;
  v2[4].n128_u64[0] = sub_6C34();
  v2[2].n128_u64[0] = v3;
  v2[2].n128_u64[1] = v5;
  sub_37C50();
  swift_bridgeObjectRelease();

  sub_37C28();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_377F8()
{
  uint64_t v1 = sub_9CF0();
  v2(v1);
  id v3 = *(id *)sub_7F9D0();
  sub_7FE20();
  sub_6A60(&qword_ABED0);
  unint64_t v4 = (__n128 *)swift_allocObject();
  sub_37C74(v4, (__n128)xmmword_80D90);
  uint64_t v5 = sub_80300();
  unint64_t v7 = v6;
  v4[3].n128_u64[1] = (unint64_t)&type metadata for String;
  v4[4].n128_u64[0] = sub_6C34();
  v4[2].n128_u64[0] = v5;
  v4[2].n128_u64[1] = v7;
  sub_37C50();
  swift_bridgeObjectRelease();

  sub_37C28();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_37930(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_ADCB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for PatternParams(uint64_t a1)
{
  swift_bridgeObjectRelease();

  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 24);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PatternParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2 + 24;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  id v10 = v5;
  v9(a1 + 24, v6, v8);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PatternParams(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  sub_7DB0(a1 + 3, a2 + 3);
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for PatternParams(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for PatternParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PatternParams(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PatternParams(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PatternParams()
{
  return &type metadata for PatternParams;
}

uint64_t sub_37C28()
{
  *(void *)uint64_t v1 = v0;
  *(unsigned char *)(v1 + 40) = 1;
  return swift_task_dealloc();
}

uint64_t sub_37C50()
{
  return sub_7FAD0();
}

uint64_t sub_37C74(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return swift_getErrorValue();
}

uint64_t type metadata accessor for DialogCATWrapper()
{
  uint64_t result = qword_ADCC0;
  if (!qword_ADCC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_37CDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_37D1C(uint64_t a1, uint64_t a2)
{
  return sub_37D70(a1, a2);
}

uint64_t sub_37D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v8 - 8);
  sub_1BE08(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_37EE0(a1);
  return v10;
}

uint64_t sub_37ED8()
{
  return type metadata accessor for DialogCATWrapper();
}

uint64_t sub_37EE0(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_37F40()
{
  unint64_t v0 = sub_802D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

uint64_t sub_37F94(char a1)
{
  return *(void *)&aCaloriesbodyfa[8 * a1];
}

uint64_t sub_37FB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_655A0(*a1, *a2);
}

Swift::Int sub_37FC0()
{
  return sub_DF34(*v0);
}

uint64_t sub_37FC8(uint64_t a1)
{
  return sub_E284(a1, *v1);
}

Swift::Int sub_37FD0(uint64_t a1)
{
  return sub_E4CC(a1, *v1);
}

uint64_t sub_37FD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_37F40();
  *a1 = result;
  return result;
}

uint64_t sub_38008@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_37F94(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for HealthNoun(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 19) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v5 = v6 - 20;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthNoun(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x38188);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthNoun()
{
  return &type metadata for HealthNoun;
}

unint64_t sub_381C4()
{
  unint64_t result = qword_ADD10;
  if (!qword_ADD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ADD10);
  }
  return result;
}

uint64_t sub_38210(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_38318();
  unint64_t v5 = sub_38364();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_3827C()
{
  unint64_t result = qword_ADD18;
  if (!qword_ADD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ADD18);
  }
  return result;
}

unint64_t sub_382CC()
{
  unint64_t result = qword_ADD20;
  if (!qword_ADD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ADD20);
  }
  return result;
}

unint64_t sub_38318()
{
  unint64_t result = qword_ADD28;
  if (!qword_ADD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ADD28);
  }
  return result;
}

unint64_t sub_38364()
{
  unint64_t result = qword_ADD30;
  if (!qword_ADD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_ADD30);
  }
  return result;
}

uint64_t sub_383B0(char a1)
{
  if (a1) {
    return 0x4E74756F6B726F77;
  }
  else {
    return 0xD00000000000003DLL;
  }
}

uint64_t sub_383F4()
{
  if (sub_7ECF0() == 0xD00000000000003DLL && v0 == 0x8000000000089870)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v1 = sub_802B0();
    swift_bridgeObjectRelease();
    if ((v1 & 1) == 0)
    {
      sub_7ED10();
      sub_3895C();
      uint64_t v6 = sub_38970();
      v7(v6);
      return 0;
    }
  }
  uint64_t v2 = sub_7ED00();
  if (!v2)
  {
    sub_7ED10();
    sub_3895C();
    uint64_t v8 = sub_38970();
    v9(v8);
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_13;
  }
  sub_791D4(0x4E74756F6B726F77, 0xEB00000000656D61, v2, &v11);
  swift_bridgeObjectRelease();
  sub_7ED10();
  sub_3895C();
  uint64_t v3 = sub_38970();
  v4(v3);
  if (!*((void *)&v12 + 1))
  {
LABEL_13:
    sub_38594((uint64_t)&v11);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t sub_38594(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC670);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_385F4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_387A8();
  id v6 = sub_3D4C8();
  sub_6A60(&qword_ADD40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_80D90;
  sub_80000();
  *(void *)(inited + 96) = sub_6A60(&qword_AF470);
  *(void *)(inited + 72) = a2;
  *(void *)(inited + 80) = a3;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_7FC10();
  sub_3D578(v8, v6);
  uint64_t v9 = self;
  sub_9AE0(a1, a1[3]);
  uint64_t v10 = (void *)sub_7E420();
  id v11 = [v9 runSiriKitExecutorCommandWithContext:v10 payload:v6];

  id v12 = [v9 wrapCommandInStartLocalRequest:v11];
  uint64_t v13 = sub_7FF00();

  return v13;
}

unint64_t sub_387A8()
{
  unint64_t result = qword_ADD38;
  if (!qword_ADD38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_ADD38);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for WorkoutDiambiguationDirectInvocation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for WorkoutDiambiguationDirectInvocation()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for WorkoutDiambiguationDirectInvocation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for WorkoutDiambiguationDirectInvocation(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for WorkoutDiambiguationDirectInvocation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDiambiguationDirectInvocation(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDiambiguationDirectInvocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDiambiguationDirectInvocation()
{
  return &type metadata for WorkoutDiambiguationDirectInvocation;
}

uint64_t sub_38970()
{
  return v0;
}

uint64_t type metadata accessor for WorkoutCancelCATPatternsExecutor(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_ADD48);
}

uint64_t sub_389A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_389E0()
{
  sub_6A60(&qword_AC2D0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_831F0;
  *(void *)(v1 + 32) = 0x6E69577473726966;
  *(void *)(v1 + 40) = 0xEF657A6953776F64;
  sub_3B864(v0, (uint64_t)v16);
  sub_3B864((uint64_t)v16, (uint64_t)&v17);
  if (v18)
  {
    int v2 = 0;
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
    uint64_t v3 = 0;
  }
  else
  {
    int v2 = &type metadata for Double;
    uint64_t v3 = v17;
  }
  *(void *)(v1 + 72) = v2;
  strcpy((char *)(v1 + 80), "isConclusion");
  *(unsigned char *)(v1 + 93) = 0;
  *(_WORD *)(v1 + 94) = -5120;
  *(unsigned char *)(v1 + 96) = *(unsigned char *)(v0 + 9);
  *(void *)(v1 + 120) = &type metadata for Bool;
  strcpy((char *)(v1 + 128), "isFirstWindow");
  *(_WORD *)(v1 + 142) = -4864;
  *(unsigned char *)(v1 + 144) = *(unsigned char *)(v0 + 10);
  *(void *)(v1 + 168) = &type metadata for Bool;
  strcpy((char *)(v1 + 176), "isLastWindow");
  *(unsigned char *)(v1 + 189) = 0;
  *(_WORD *)(v1 + 190) = -5120;
  *(unsigned char *)(v1 + 192) = *(unsigned char *)(v0 + 11);
  *(void *)(v1 + 216) = &type metadata for Bool;
  *(void *)(v1 + 224) = 0xD000000000000016;
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 232) = 0x80000000000899B0;
  *(unsigned char *)(v1 + 240) = *(unsigned char *)(v0 + 12);
  *(void *)(v1 + 264) = &type metadata for Bool;
  *(void *)(v1 + 272) = 0x736D657469;
  *(void *)(v1 + 280) = 0xE500000000000000;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = sub_6A60(&qword_ADF80);
  *(void *)(v1 + 288) = v4;
  *(void *)(v1 + 312) = v5;
  *(void *)(v1 + 320) = 0xD000000000000013;
  *(void *)(v1 + 328) = 0x80000000000899D0;
  sub_3B864(v0 + 24, (uint64_t)v15);
  sub_3B864((uint64_t)v15, (uint64_t)&v19);
  if (v20)
  {
    id v6 = 0;
    *(void *)(v1 + 344) = 0;
    *(void *)(v1 + 352) = 0;
    uint64_t v7 = 0;
  }
  else
  {
    id v6 = &type metadata for Double;
    uint64_t v7 = v19;
  }
  *(void *)(v1 + 336) = v7;
  *(void *)(v1 + 360) = v6;
  *(void *)(v1 + 368) = 0x6574496C61746F74;
  *(void *)(v1 + 376) = 0xEA0000000000736DLL;
  sub_3B864(v0 + 40, (uint64_t)v14);
  sub_3B864((uint64_t)v14, (uint64_t)&v21);
  if (v22)
  {
    uint64_t v8 = 0;
    *(void *)(v1 + 392) = 0;
    *(void *)(v1 + 400) = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v8 = &type metadata for Double;
    uint64_t v9 = v21;
  }
  *(void *)(v1 + 384) = v9;
  *(void *)(v1 + 408) = v8;
  *(void *)(v1 + 416) = 0x6953776F646E6977;
  *(void *)(v1 + 424) = 0xEA0000000000657ALL;
  sub_3B864(v0 + 56, (uint64_t)v13);
  sub_3B864((uint64_t)v13, (uint64_t)&v23);
  if (v24)
  {
    uint64_t v10 = 0;
    *(void *)(v1 + 440) = 0;
    *(void *)(v1 + 448) = 0;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = &type metadata for Double;
    uint64_t v11 = v23;
  }
  *(void *)(v1 + 432) = v11;
  *(void *)(v1 + 456) = v10;
  sub_3B8CC(v0);
  return v1;
}

__n128 *sub_38CA4()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x656369766564;
  v5[5].n128_u64[1] = 0xE600000000000000;
  uint64_t v8 = type metadata accessor for WorkoutCancelErrorWithCodeParameters(0);
  unint64_t v9 = *(void *)(v0 + *(int *)(v8 + 20));
  if (v9)
  {
    uint64_t v10 = sub_7F840();
    unint64_t v11 = v9;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v10 = 0;
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  v5[6].n128_u64[0] = v11;
  v5[7].n128_u64[1] = v10;
  v5[8].n128_u64[0] = 0x646F43726F727265;
  v5[8].n128_u64[1] = 0xE900000000000065;
  uint64_t v12 = v0 + *(int *)(v8 + 24);
  if (*(unsigned char *)(v12 + 8))
  {
    uint64_t v13 = 0;
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
    unint64_t v14 = 0;
  }
  else
  {
    unint64_t v14 = *(void *)v12;
    uint64_t v13 = &type metadata for Double;
  }
  v5[9].n128_u64[0] = v14;
  v5[10].n128_u64[1] = (unint64_t)v13;
  swift_retain();
  return v5;
}

uint64_t sub_38E58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  sub_6A60(&qword_AC2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_80D90;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  *(void *)(v7 + 32) = 0x656D614E707061;
  *(void *)(v7 + 40) = 0xE700000000000000;
  sub_7434(v1, v6, &qword_AC2C8);
  uint64_t v9 = sub_7F830();
  if (sub_6B0C(v6, 1, v9) == 1)
  {
    sub_7494(v6, &qword_AC2C8);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    sub_74EC(v8);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  return v7;
}

__n128 *sub_38F9C()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x5074737269467369;
  v5[5].n128_u64[1] = 0xEF70704179747261;
  uint64_t v8 = type metadata accessor for WorkoutCancelIntentHandledResponseParameters(0);
  v5[6].n128_u8[0] = *(unsigned char *)(v0 + *(int *)(v8 + 20));
  v5[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v5[8], "isPunchingOut");
  v5[8].n128_u16[7] = -4864;
  unsigned __int8 v9 = *(unsigned char *)(v0 + *(int *)(v8 + 24));
  v5[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[9].n128_u8[0] = v9;
  return v5;
}

uint64_t sub_39120(char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = a6;
  *(unsigned char *)(v6 + 84) = a4;
  *(unsigned char *)(v6 + 83) = a3;
  *(unsigned char *)(v6 + 82) = a2;
  *(unsigned char *)(v6 + 81) = a1;
  return _swift_task_switch(sub_39150, 0, 0);
}

uint64_t sub_39150()
{
  uint64_t v1 = *(void *)(v0 + 88);
  char v2 = *(unsigned char *)(v0 + 84);
  char v3 = *(unsigned char *)(v0 + 83);
  char v4 = *(unsigned char *)(v0 + 82);
  char v5 = *(unsigned char *)(v0 + 81);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(unsigned char *)(v0 + 25) = v5;
  *(unsigned char *)(v0 + 26) = v4;
  *(unsigned char *)(v0 + 27) = v3;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  *(void *)(v0 + 104) = sub_389E0();
  uint64_t v6 = (void *)sub_1B73C();
  *(void *)(v0 + 112) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_39248;
  unint64_t v7 = sub_3B974();
  return v9(v7);
}

uint64_t sub_39248()
{
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *char v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_3B964();
    return _swift_task_switch(v8, v9, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v11 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v11(v1);
  }
}

uint64_t sub_39368()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_393C8()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutCancelErrorWithCodeParameters(0);
  v1[5] = v4;
  sub_DC74(v4);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_39458, 0, 0);
}

uint64_t sub_39458()
{
  sub_3B9D0();
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_7F830();
  sub_9B2C(v1, 1, 1, v4);
  *(void *)(v1 + *(int *)(v2 + 20)) = 0;
  uint64_t v5 = v1 + *(int *)(v2 + 24);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  v3(v1);
  uint64_t v6 = sub_38CA4();
  v0[7] = v6;
  unint64_t v7 = (void *)sub_3B990();
  v0[8] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_39570;
  return v9(0xD00000000000001BLL, 0x8000000000089960, v6);
}

uint64_t sub_39570()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_39680()
{
  sub_9D38();
  sub_3A09C(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutCancelErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_396F8()
{
  sub_9D38();
  sub_3A09C(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutCancelErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_39778()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutCancelUnsupportedSlotValueParameters(0);
  sub_DC74(v4);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_39804, 0, 0);
}

uint64_t sub_39804()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void (*)(uint64_t))v0[2];
  uint64_t v3 = sub_7F830();
  sub_3B9B0(v3);
  v2(v1);
  uint64_t v4 = sub_38E58();
  v0[6] = v4;
  uint64_t v5 = (void *)sub_3B990();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_398EC;
  return v7(0xD000000000000022, 0x8000000000089930, v4);
}

uint64_t sub_398EC()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 72) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_399FC()
{
  sub_9D38();
  sub_3A09C(v0[5], (void (*)(void))type metadata accessor for WorkoutCancelUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[9];
  return v1(v2);
}

uint64_t sub_39A80()
{
  sub_9D38();
  sub_3A09C(*(void *)(v0 + 40), (void (*)(void))type metadata accessor for WorkoutCancelUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_39B00()
{
  sub_9D38();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 89) = v4;
  *(unsigned char *)(v1 + 88) = v5;
  uint64_t v6 = type metadata accessor for WorkoutCancelIntentHandledResponseParameters(0);
  *(void *)(v1 + 40) = v6;
  sub_DC74(v6);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_39B98, 0, 0);
}

uint64_t sub_39B98()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 89);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = sub_7F830();
  sub_3B9B0(v6);
  *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v5;
  *(unsigned char *)(v1 + *(int *)(v2 + 24)) = v4;
  v3(v1);
  *(void *)(v0 + 56) = sub_38F9C();
  unint64_t v7 = (void *)sub_1B73C();
  *(void *)(v0 + 64) = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_39C90;
  unint64_t v8 = sub_3B974();
  return v10(v8);
}

uint64_t sub_39C90()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *char v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_39DA0()
{
  sub_9D38();
  sub_3A09C(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutCancelIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_39E18()
{
  sub_9D38();
  sub_3A09C(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutCancelIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_39E98(uint64_t a1, uint64_t a2)
{
  return sub_39EEC(a1, a2);
}

uint64_t sub_39EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  uint64_t v10 = sub_DC74(v9);
  __chkstk_darwin(v10);
  sub_755C();
  sub_7434(a1, v12 - v11, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v13 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v13;
}

uint64_t sub_3A054()
{
  return type metadata accessor for WorkoutCancelCATPatternsExecutor(0);
}

uint64_t type metadata accessor for WorkoutCancelIntentHandledResponseParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_ADF38);
}

uint64_t type metadata accessor for WorkoutCancelUnsupportedSlotValueParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_ADEA8);
}

uint64_t sub_3A09C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_7550();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for WorkoutCancelErrorWithCodeParameters(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_ADE08);
}

uint64_t sub_3A118(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_3A14C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_7F830();
    if (sub_6B0C((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_6A60(&qword_AC2C8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_9B2C((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
  }
  swift_retain();
  return a1;
}

uint64_t sub_3A28C(uint64_t a1)
{
  uint64_t v2 = sub_7F830();
  if (!sub_6B0C(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }

  return swift_release();
}

char *sub_3A320(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  swift_retain();
  return a1;
}

char *sub_3A414(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  sub_9B2C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  swift_release();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)uint64_t v12 = v14;
  return a1;
}

char *sub_3A5A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  return a1;
}

char *sub_3A690(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  sub_9B2C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t sub_3A814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3A828);
}

uint64_t sub_3A828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_3A8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3A8D8);
}

void sub_3A8D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 20)) = v4;
  }
}

void sub_3A954()
{
}

void sub_3A968()
{
  if (!qword_ADE18)
  {
    sub_7F830();
    unint64_t v0 = sub_7FF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_ADE18);
    }
  }
}

uint64_t *sub_3A9C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_6A60(&qword_AC2C8) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_7F830();
    if (sub_6B0C((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_9B2C((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_3AACC(void *a1, const void *a2)
{
  uint64_t v4 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    sub_9B2C((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_3AB94(void *a1, const void *a2)
{
  uint64_t v4 = sub_7F830();
  int v5 = sub_6B0C((uint64_t)a1, 1, v4);
  int v6 = sub_6B0C((uint64_t)a2, 1, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  sub_9B2C((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *sub_3ACDC(void *a1, const void *a2)
{
  uint64_t v4 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    sub_9B2C((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_3ADA4(void *a1, const void *a2)
{
  uint64_t v4 = sub_7F830();
  int v5 = sub_6B0C((uint64_t)a1, 1, v4);
  int v6 = sub_6B0C((uint64_t)a2, 1, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  sub_9B2C((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t sub_3AEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3AF00);
}

uint64_t sub_3AF00()
{
  sub_3B9DC();
  uint64_t v2 = sub_6A60(&qword_AC2C8);

  return sub_6B0C(v1, v0, v2);
}

uint64_t sub_3AF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3AF5C);
}

uint64_t sub_3AF5C()
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  uint64_t v0 = sub_3B950();

  return sub_9B2C(v0, v1, v2, v3);
}

void sub_3AF9C()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_3B028(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_7F830();
    if (sub_6B0C((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_6A60(&qword_AC2C8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_9B2C((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  }
  return a1;
}

uint64_t sub_3B158(uint64_t a1)
{
  uint64_t v2 = sub_7F830();
  uint64_t result = sub_6B0C(a1, 1, v2);
  if (!result)
  {
    sub_7550();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    return v5(a1, v2);
  }
  return result;
}

void *sub_3B1DC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  return a1;
}

void *sub_3B2BC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  sub_9B2C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_3B428(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  return a1;
}

void *sub_3B508(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  sub_9B2C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t sub_3B670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3B684);
}

uint64_t sub_3B684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_3B724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3B738);
}

void sub_3B738(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 20)) = v4 + 1;
  }
}

void sub_3B7B4()
{
}

void sub_3B7C4()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_3B864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AD210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_3B8CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_3B914(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x656D614E707061;
  a1[2].n128_u64[1] = 0xE700000000000000;
  return sub_7434(v2, v3, v4);
}

uint64_t sub_3B950()
{
  return v0;
}

unint64_t sub_3B974()
{
  return 0xD000000000000023;
}

uint64_t sub_3B990()
{
  return swift_task_alloc();
}

uint64_t sub_3B9B0(uint64_t a1)
{
  return sub_9B2C(v1, 1, 1, a1);
}

uint64_t sub_3B9E8()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_3B9FC@<X0>(void *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v4 = sub_7E730();
  swift_allocObject();
  uint64_t v5 = sub_7E720();
  a1[6] = v4;
  a1[7] = &protocol witness table for ResponseFactory;
  a1[3] = v5;
  uint64_t result = sub_7FC10();
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000000088F30;
  a1[2] = v3;
  a1[8] = result;
  return result;
}

uint64_t type metadata accessor for EndWorkoutContinueInAppStrategy()
{
  uint64_t result = qword_ADFB0;
  if (!qword_ADFB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_3BB40(unint64_t a1)
{
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_801C0())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)sub_80040() : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v11 = v5;
      sub_3C138(&v11, &v10);
      if (v1)
      {
        swift_bridgeObjectRelease();

        uint64_t v8 = (void *)v12;
        swift_release();
        swift_bridgeObjectRelease();
        return v8;
      }

      if (v10)
      {
        sub_7FD00();
        if (*(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v12 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_7FD50();
        sub_7FD80();
        sub_7FD40();
      }
      ++v4;
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (void *)v12;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_release();
  return v8;
}

void *sub_3BCF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6A60(&qword_AE128);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_7FBE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v32 - v10;
  id v12 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEWorkoutsAppSelectionGroundTruthGenerated) init];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEWorkoutsAppSelectionTrainingIndependentSignals) init];
    if (v14)
    {
      uint64_t v15 = v14;
      [v13 setInferenceWorkoutsAppSelectionTrainingIndependentSignals:v14];
      v32[3] = v1;
      type metadata accessor for WorkoutsSignalValuesProcessor();
      sub_3C4AC();
      uint64_t v16 = (void *)sub_7EE10();
      [v15 setCommonIndependent:v16];

      id v17 = [v15 commonIndependent];
      if (v17)
      {
        char v18 = v17;
        [v17 setAppResolutionType:*(unsigned int *)(v1 + 16)];
      }
    }
    else
    {
      uint64_t v23 = sub_7FBA0();
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v23, v5);
      char v24 = sub_7FBD0();
      os_log_type_t v25 = sub_7FE30();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_0, v24, v25, "WorkoutMessageBuilder: No independent values", v26, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    v32[2] = v1;
    uint64_t v27 = enum case for DomainUseCase.startWorkout(_:);
    uint64_t v28 = sub_7EDA0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v4, v27, v28);
    sub_9B2C((uint64_t)v4, 0, 1, v28);
    type metadata accessor for WorkoutsSignalValuesProcessor();
    sub_3C4AC();
    unint64_t v29 = sub_7EE00();
    sub_3C4F8((uint64_t)v4);
    swift_retain();
    uint64_t v30 = sub_3BB40(v29);
    swift_bridgeObjectRelease();
    sub_3C558((uint64_t)v30, v13);
  }
  else
  {
    uint64_t v19 = sub_7FBA0();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v19, v5);
    char v20 = sub_7FBD0();
    os_log_type_t v21 = sub_7FE30();
    if (os_log_type_enabled(v20, v21))
    {
      char v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "WorkoutMessageBuilder: Could not create Message class.", v22, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  return v13;
}

id sub_3C138@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_7FBE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  id v9 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEWorkoutsAppSelectionTrainingDependentSignals) init];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_3C60C(v8);
    uint64_t v13 = v12;
    uint64_t v14 = sub_7F890();
    if (v13)
    {
      if (v15)
      {
        if (v11 == v14 && v13 == v15)
        {
          swift_bridgeObjectRelease();
          char v17 = 1;
        }
        else
        {
          char v17 = sub_802B0();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        char v17 = 0;
      }
    }
    else
    {
      if (!v15)
      {
        char v17 = 1;
        goto LABEL_17;
      }
      char v17 = 0;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    [v8 setIsResolvedApp:v17 & 1];
    uint64_t v23 = sub_3C60C(v8);
    if (v24)
    {
      v26[3] = v23;
      v26[4] = v24;
      v26[1] = 0x6C7070612E6D6F63;
      v26[2] = 0xE900000000000065;
      sub_3C670();
      sub_3C6BC();
      char v25 = sub_7FC20();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = 0;
    }
    [v8 setIsFirstPartyBundle:v25 & 1];
    id result = [v10 setCommonDependent:v8];
    goto LABEL_21;
  }
  uint64_t v18 = sub_7FBA0();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
  uint64_t v19 = sub_7FBD0();
  os_log_type_t v20 = sub_7FE30();
  if (os_log_type_enabled(v19, v20))
  {
    os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "WorkoutMessageBuilder: Could not create DependentSignals Message.", v21, 2u);
    swift_slowDealloc();
  }

  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = 0;
LABEL_21:
  *a2 = v10;
  return result;
}

uint64_t sub_3C424()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for WorkoutsSignalValuesProcessor()
{
  return self;
}

void *sub_3C480@<X0>(void *a1@<X8>)
{
  id result = sub_3BCF4();
  *a1 = result;
  return result;
}

unint64_t sub_3C4AC()
{
  unint64_t result = qword_AE130;
  if (!qword_AE130)
  {
    type metadata accessor for WorkoutsSignalValuesProcessor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE130);
  }
  return result;
}

uint64_t sub_3C4F8(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AE128);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_3C558(uint64_t a1, void *a2)
{
  sub_3C5CC();
  Class isa = sub_7FD10().super.isa;
  swift_bridgeObjectRelease();
  [a2 setInferenceWorkoutsAppSelectionTrainingDependentSignals:isa];
}

unint64_t sub_3C5CC()
{
  unint64_t result = qword_AE138;
  if (!qword_AE138)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AE138);
  }
  return result;
}

uint64_t sub_3C60C(void *a1)
{
  id v1 = [a1 appBundleId];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_7FC50();

  return v3;
}

unint64_t sub_3C670()
{
  unint64_t result = qword_AE140;
  if (!qword_AE140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE140);
  }
  return result;
}

unint64_t sub_3C6BC()
{
  unint64_t result = qword_AE148;
  if (!qword_AE148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE148);
  }
  return result;
}

uint64_t type metadata accessor for HealthLabelsCATs()
{
  uint64_t result = qword_AE150;
  if (!qword_AE150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3C750()
{
  return swift_initClassMetadata2();
}

uint64_t sub_3C790(uint64_t a1, uint64_t a2)
{
  return sub_3C7E4(a1, a2);
}

uint64_t sub_3C7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v8 - 8);
  sub_1BE08(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_37EE0(a1);
  return v10;
}

uint64_t sub_3C94C()
{
  return type metadata accessor for HealthLabelsCATs();
}

uint64_t sub_3C954()
{
  if (qword_ABC00 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_3C9B0()
{
  sub_7F140();
  swift_allocObject();
  uint64_t result = sub_7F130();
  qword_B7010 = result;
  return result;
}

uint64_t sub_3CA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_3CA6C(uint64_t a1)
{
  uint64_t v2 = sub_7F6B0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_3CAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_3CB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_3CB98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_3CBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_3CC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3CC74);
}

uint64_t sub_3CC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();

  return sub_6B0C(a1, a2, v4);
}

uint64_t sub_3CCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3CCD0);
}

uint64_t sub_3CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();

  return sub_9B2C(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DisambiguateAppNLIntent()
{
  uint64_t result = qword_AE208;
  if (!qword_AE208) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3CD64()
{
  uint64_t result = sub_7F6B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_3CDF0()
{
  sub_6A60(&qword_AE250);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_80D90;
  if (qword_ABBF0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_B7010;
  *(void *)(v0 + 56) = sub_7F140();
  *(void *)(v0 + 64) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v0 + 32) = v1;
  qword_AE1A0 = v0;

  return swift_retain();
}

uint64_t sub_3CEA0()
{
  if (qword_ABBF8 != -1) {
    swift_once();
  }
  sub_7F160();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_7F150();
  qword_AE1A8 = result;
  return result;
}

uint64_t sub_3CF40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_7F6B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_3CFA8()
{
  return sub_3C954();
}

uint64_t sub_3CFC0(uint64_t a1)
{
  uint64_t v2 = sub_3D140(&qword_AE248);

  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_3D028(uint64_t a1)
{
  uint64_t v2 = sub_3D140(&qword_AE248);

  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_3D080(uint64_t a1)
{
  uint64_t v2 = sub_3D140(&qword_AE248);

  return NLIntentWrapper.description.getter(a1, v2);
}

uint64_t sub_3D0D8()
{
  return sub_3D140(&qword_AC980);
}

uint64_t sub_3D10C()
{
  return sub_3D140(&qword_AE240);
}

uint64_t sub_3D140(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DisambiguateAppNLIntent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3D184()
{
  if (sub_7ECF0() == 0xD000000000000039 && v0 == 0x8000000000089AD0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v1 = sub_802B0();
    swift_bridgeObjectRelease();
    if ((v1 & 1) == 0)
    {
      sub_7ED10();
      sub_3895C();
      uint64_t v6 = sub_38970();
      v7(v6);
      return 0;
    }
  }
  uint64_t v2 = sub_7ED00();
  if (!v2)
  {
    sub_7ED10();
    sub_3895C();
    uint64_t v8 = sub_38970();
    v9(v8);
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_13;
  }
  sub_791D4(0x6449656C646E7562, 0xE800000000000000, v2, &v11);
  swift_bridgeObjectRelease();
  sub_7ED10();
  sub_3895C();
  uint64_t v3 = sub_38970();
  v4(v3);
  if (!*((void *)&v12 + 1))
  {
LABEL_13:
    sub_38594((uint64_t)&v11);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t sub_3D31C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_387A8();
  id v6 = sub_3D4C8();
  sub_6A60(&qword_ADD40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_80D90;
  sub_80000();
  *(void *)(inited + 96) = sub_6A60(&qword_AF470);
  *(void *)(inited + 72) = a2;
  *(void *)(inited + 80) = a3;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_7FC10();
  sub_3D578(v8, v6);
  uint64_t v9 = self;
  sub_9AE0(a1, a1[3]);
  uint64_t v10 = (void *)sub_7E420();
  id v11 = [v9 runSiriKitExecutorCommandWithContext:v10 payload:v6];

  id v12 = [v9 wrapCommandInStartLocalRequest:v11];
  uint64_t v13 = sub_7FF00();

  return v13;
}

id sub_3D4C8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_7FC40();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithIdentifier:v1];

  return v2;
}

uint64_t sub_3D53C(char a1)
{
  if (a1) {
    return 0x6449656C646E7562;
  }
  else {
    return 0xD000000000000039;
  }
}

void sub_3D578(uint64_t a1, void *a2)
{
  Class isa = sub_7FC00().super.isa;
  swift_bridgeObjectRelease();
  [a2 setUserData:isa];
}

uint64_t sub_3D5F8()
{
  sub_3DD9C();
  sub_9AE0(v3, v3[3]);
  if (sub_7E3F0())
  {
    return sub_3D6A4();
  }
  else
  {
    return sub_3D820(v2, v1, v0);
  }
}

uint64_t sub_3D6A4()
{
  sub_3DD9C();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_801C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  }
  if (!v4)
  {
LABEL_10:
    sub_7ED30();
    sub_9AE0(v10, v10[3]);
    sub_7E3D0();
    uint64_t v9 = sub_7E340();
    swift_bridgeObjectRelease();
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v10);
    return v9;
  }
  v10[0] = &_swiftEmptyArrayStorage;
  uint64_t result = sub_800B0();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_80040();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      sub_3DA68(v7, v1, v0);

      sub_80080();
      sub_800C0();
      sub_800D0();
      sub_80090();
    }
    while (v4 != v6);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_3D820(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_7ED90();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_801C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (!v10)
  {
LABEL_11:
    sub_7ED30();
    sub_9AE0(v19, v19[3]);
    sub_7E3C0();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ImageSize.default(_:), v6);
    uint64_t v15 = sub_7E330();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v19);
    return v15;
  }
  v19[0] = &_swiftEmptyArrayStorage;
  uint64_t result = sub_800B0();
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = v9;
    uint64_t v17 = v7;
    uint64_t v18 = v6;
    uint64_t v12 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)sub_80040();
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      ++v12;
      sub_3DA68(v13, a2, a3);

      sub_80080();
      sub_800C0();
      sub_800D0();
      sub_80090();
    }
    while (v10 != v12);
    uint64_t v6 = v18;
    uint64_t v9 = v16;
    uint64_t v7 = v17;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_3DA68(void *a1, uint64_t a2, char a3)
{
  sub_7FE20();
  uint64_t v5 = *(void **)sub_7F9D0();
  sub_6A60(&qword_ABED0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_80D90;
  id v7 = v5;
  id v8 = [a1 description];
  uint64_t v9 = sub_7FC50();
  uint64_t v11 = v10;

  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_6C34();
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  sub_7FAE0();

  swift_bridgeObjectRelease();
  sub_7E320();
  id v12 = [a1 spokenPhrase];
  sub_7FC50();

  sub_7E2F0();
  swift_bridgeObjectRelease();
  sub_7E300();
  swift_release();
  uint64_t v13 = sub_7E310();
  swift_release();
  sub_7E9F0();
  swift_allocObject();
  sub_7E9E0();
  sub_75D8(a3);
  sub_7E9B0();
  swift_release();
  swift_bridgeObjectRelease();
  id v14 = [a1 spokenPhrase];
  sub_7FC50();

  sub_7E9B0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_7F890();
  sub_7E9C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_7E9D0();
  swift_release();
  sub_6A60(&qword_AEA40);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_814D0;
  *(void *)(v15 + 32) = v13;
  sub_7FD40();
  sub_7E2B0();
  swift_allocObject();
  return sub_7E2A0();
}

uint64_t type metadata accessor for DisambiguationStrategyHelper()
{
  return self;
}

uint64_t type metadata accessor for HealthWorkoutEndCATs()
{
  uint64_t result = qword_AE2F0;
  if (!qword_AE2F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3DDF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_3DE38(uint64_t a1, uint64_t a2)
{
  return sub_3DEA4(a1, a2);
}

uint64_t sub_3DE5C()
{
  return sub_3E0D8();
}

uint64_t sub_3DE80(uint64_t a1)
{
  return sub_3E0FC(a1);
}

uint64_t sub_3DEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  sub_6A60(&qword_AC2D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_811A0;
  uint64_t v11 = (uint64_t *)(v10 + 48);
  *(void *)(v10 + 32) = 1953459315;
  *(void *)(v10 + 40) = 0xE400000000000000;
  sub_7434(a1, (uint64_t)v9, &qword_AC2C8);
  uint64_t v12 = sub_7F830();
  sub_756C((uint64_t)v9);
  if (v13)
  {
    sub_7494((uint64_t)v9, &qword_AC2C8);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
  }
  else
  {
    *(void *)(v10 + 72) = v12;
    sub_74EC(v11);
    sub_7550();
    (*(void (**)(void))(v14 + 32))();
  }
  *(void *)(v10 + 80) = 0x4E74756F6B726F77;
  *(void *)(v10 + 88) = 0xEB00000000656D61;
  sub_7434(a2, (uint64_t)v7, &qword_AC2C8);
  sub_756C((uint64_t)v7);
  if (v13)
  {
    sub_7494((uint64_t)v7, &qword_AC2C8);
    *(_OWORD *)(v10 + 96) = 0u;
    *(_OWORD *)(v10 + 112) = 0u;
  }
  else
  {
    *(void *)(v10 + 120) = v12;
    sub_74EC((uint64_t *)(v10 + 96));
    sub_7550();
    (*(void (**)(void))(v15 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3E0D8()
{
  return sub_7F780();
}

uint64_t sub_3E0FC(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v2 - 8);
  sub_755C();
  uint64_t v5 = v4 - v3;
  sub_6A60(&qword_AC2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_80D90;
  id v7 = (uint64_t *)(v6 + 48);
  *(void *)(v6 + 32) = 0x656D614E707061;
  *(void *)(v6 + 40) = 0xE700000000000000;
  sub_7434(a1, v5, &qword_AC2C8);
  uint64_t v8 = sub_7F830();
  sub_756C(v5);
  if (v9)
  {
    sub_7494(v5, &qword_AC2C8);
    *(_OWORD *)id v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }
  else
  {
    *(void *)(v6 + 72) = v8;
    sub_74EC(v7);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3E26C(uint64_t a1, uint64_t a2)
{
  return sub_3E2C0(a1, a2);
}

uint64_t sub_3E2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v9 - 8);
  sub_755C();
  sub_7434(a1, v11 - v10, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v12 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v12;
}

uint64_t sub_3E42C()
{
  return type metadata accessor for HealthWorkoutEndCATs();
}

unint64_t sub_3E434(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x655668746C616568;
      break;
    case 2:
      unint64_t result = 0x6F4E68746C616568;
      break;
    case 3:
      unint64_t result = 0x634168746C616568;
      break;
    case 4:
    case 7:
    case 12:
      return result;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x614D68746C616568;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 7368801;
      break;
    case 10:
      unint64_t result = 0x655268746C616568;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 13:
      unint64_t result = 0x656D614E707061;
      break;
    case 14:
      unint64_t result = 0x6972747441707061;
      break;
    case 15:
      unint64_t result = 0x746163696C707061;
      break;
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x68746C616568;
      break;
  }
  return result;
}

uint64_t sub_3E658(char a1)
{
  sub_80020(20);
  swift_bridgeObjectRelease();
  sub_3E434(a1);
  uint64_t v2 = sub_7FCB0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = v2;
  v7._object = v4;
  sub_7FCD0(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0xD000000000000012;
  v8._object = (void *)0x8000000000089D50;
  sub_7FCD0(v8);

  return swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for IntentConversionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for IntentConversionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3E874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentConversionError()
{
  return &type metadata for IntentConversionError;
}

unint64_t sub_3E8B0()
{
  unint64_t result = qword_AE340;
  if (!qword_AE340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE340);
  }
  return result;
}

uint64_t sub_3E8FC(uint8_t *a1, uint64_t a2, uint8_t *a3, uint64_t a4)
{
  uint64_t v145 = a1;
  v143 = a3;
  uint64_t v144 = a4;
  v142 = (void *)a2;
  sub_7ED10();
  sub_6D54();
  uint64_t v136 = v6;
  uint64_t v137 = v7;
  __chkstk_darwin(v6);
  sub_15308();
  uint64_t v130 = v8;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v124 - v11;
  __chkstk_darwin(v10);
  v138 = (char *)&v124 - v13;
  uint64_t v14 = sub_6A60(&qword_AC660);
  __chkstk_darwin(v14 - 8);
  sub_F67C();
  uint64_t v129 = v15;
  sub_15378();
  uint64_t v128 = sub_7EED0();
  sub_6D54();
  uint64_t v127 = v16;
  __chkstk_darwin(v17);
  sub_15490();
  uint64_t v133 = sub_7EFA0();
  sub_6D54();
  uint64_t v125 = v18;
  __chkstk_darwin(v19);
  sub_F67C();
  uint64_t v126 = v20;
  sub_15378();
  sub_7ED70();
  sub_6D54();
  uint64_t v131 = v22;
  uint64_t v132 = v21;
  __chkstk_darwin(v21);
  sub_F67C();
  uint64_t v135 = v23;
  sub_15378();
  sub_7FBE0();
  sub_6D54();
  uint64_t v140 = v24;
  uint64_t v141 = v25;
  __chkstk_darwin(v24);
  sub_15308();
  uint64_t v134 = v26;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v124 = (char *)&v124 - v29;
  __chkstk_darwin(v28);
  v139 = (char *)&v124 - v30;
  uint64_t v31 = sub_15378();
  uint64_t v32 = type metadata accessor for HealthNLIntent(v31);
  __chkstk_darwin(v32 - 8);
  sub_3FF4C();
  uint64_t v33 = sub_7F6B0();
  sub_6D54();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  sub_755C();
  uint64_t v39 = v38 - v37;
  uint64_t v40 = sub_7ED20();
  sub_6D54();
  uint64_t v42 = v41;
  __chkstk_darwin(v43);
  sub_755C();
  uint64_t v46 = v45 - v44;
  sub_15528();
  v47();
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 88))(v46, v40);
  if (v48 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v49 = sub_3FF18();
    v50(v49);
    sub_15294();
    v51();
    sub_15528();
    v52();
    char v53 = v146;
    uint64_t v54 = sub_3F540((uint64_t)v142, (uint64_t)v143, v144);
    if (v53)
    {
      sub_F314(v4);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v39, v33);
    }
    else
    {
      uint64_t v86 = (void *)v54;
      sub_F314(v4);
      sub_7FBA0();
      sub_9D08();
      sub_15528();
      v87();
      uint64_t v5 = v86;
      uint64_t v88 = (uint8_t *)sub_7FBD0();
      os_log_type_t v89 = sub_7FE20();
      int v90 = v89;
      if (os_log_type_enabled((os_log_t)v88, v89))
      {
        uint64_t v145 = v88;
        uint64_t v91 = sub_269F4();
        LODWORD(v144) = v90;
        uint64_t v92 = (uint8_t *)v91;
        uint64_t v93 = (void *)swift_slowAlloc();
        v142 = v93;
        v143 = v92;
        *(_DWORD *)uint64_t v92 = 138412290;
        uint64_t v146 = 0;
        uint64_t v148 = v5;
        id v94 = (id)v5;
        uint64_t v88 = v145;
        sub_7FF60();
        *uint64_t v93 = v5;

        _os_log_impl(&dword_0, (os_log_t)v88, (os_log_type_t)v144, "Converted intent to: %@", v143, 0xCu);
        sub_6A60(&qword_AC3D0);
        swift_arrayDestroy();
        sub_9CB0();
        sub_9CB0();
      }
      else
      {
      }
      sub_152A0();
      v98();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v39, v33);
    }
    return v5;
  }
  id v55 = v146;
  if (v48 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v56 = sub_3FF18();
    v57(v56);
    uint64_t v58 = v138;
    uint64_t v59 = v137;
    uint64_t v60 = v136;
    sub_15294();
    v61();
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    v62(v12, v58, v60);
    uint64_t v63 = sub_383F4();
    if (v64 == 1)
    {
      sub_7FBB0();
      sub_9D08();
      uint64_t v65 = v141;
      uint64_t v66 = v134;
      uint64_t v67 = v58;
      uint64_t v68 = v140;
      sub_15528();
      v69();
      v62(v130, v67, v60);
      uint64_t v70 = sub_7FBD0();
      os_log_type_t v71 = sub_7FE30();
      uint64_t v5 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)sub_269F4();
        uint64_t v148 = swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = 136315138;
        uint64_t v73 = sub_7ECF0();
        uint64_t v147 = sub_1CDF0(v73, v74, &v148);
        uint64_t v60 = v136;
        sub_7FF60();
        swift_bridgeObjectRelease();
        uint64_t v75 = *(void (**)(uint64_t))(v137 + 8);
        uint64_t v76 = sub_3FF30();
        v75(v76);
        _os_log_impl(&dword_0, v70, (os_log_type_t)v5, "Unknow DirectInvocation with identifier: %s", v72, 0xCu);
        swift_arrayDestroy();
        sub_9CB0();
        sub_9CB0();

        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v134, v140);
      }
      else
      {
        uint64_t v99 = *(void (**)(uint64_t))(v137 + 8);
        uint64_t v100 = sub_3FF30();
        v99(v100);

        uint64_t v101 = v66;
        uint64_t v75 = v99;
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v101, v68);
      }
      sub_2DE78();
      sub_18BEC();
      *uint64_t v102 = 2;
      swift_willThrow();
      ((void (*)(char *, uint64_t))v75)(v138, v60);
    }
    else
    {
      uint64_t v95 = v63;
      uint64_t v96 = v64;
      uint64_t v5 = sub_3FA64(v63, v64, (uint64_t)v142, (uint64_t)v143, v144);
      sub_14098(v95, v96);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
    }
    return v5;
  }
  if (v48 != enum case for Parse.uso(_:))
  {
    sub_2DE78();
    sub_18BEC();
    *uint64_t v97 = 3;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v46, v40);
    return v5;
  }
  uint64_t v77 = sub_3FF18();
  v78(v77);
  uint64_t v80 = v131;
  uint64_t v79 = v132;
  uint64_t v81 = v135;
  sub_15294();
  v82();
  sub_7ED60();
  uint64_t v83 = sub_7EEC0();
  sub_152A0();
  v84();
  uint64_t v85 = v129;
  sub_6BB98(v83, v129);
  swift_bridgeObjectRelease();
  uint64_t v5 = v133;
  if (sub_6B0C(v85, 1, v133) == 1)
  {
    sub_3FD94(v85);
LABEL_22:
    sub_2DE78();
    sub_18BEC();
    *uint64_t v107 = 0;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v79);
    return v5;
  }
  uint64_t v103 = v125;
  uint64_t v104 = v126;
  sub_15294();
  v105();
  unint64_t v106 = sub_7F0F0();
  if (v55)
  {
    swift_errorRelease();
LABEL_21:
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v104, v5);
    uint64_t v81 = v135;
    goto LABEL_22;
  }
  unint64_t v109 = v106;
  if (v106 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_801C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v110 = *(void *)((char *)&dword_10 + (v106 & 0xFFFFFFFFFFFFFF8));
  }
  if (!v110)
  {
    swift_bridgeObjectRelease();
    uint64_t v104 = v126;
    goto LABEL_21;
  }
  sub_140AC(0, (v109 & 0xC000000000000001) == 0, v109);
  if ((v109 & 0xC000000000000001) != 0)
  {
    uint64_t v111 = sub_80040();
  }
  else
  {
    uint64_t v111 = *(void *)(v109 + 32);
    swift_retain();
  }
  os_log_type_t v113 = v143;
  uint64_t v112 = v144;
  swift_bridgeObjectRelease();
  char v114 = sub_7EF50();
  id v115 = (void *)sub_3F814(v111, (uint64_t)v142, v114 & 1, (uint64_t)v113, v112);
  sub_7FBA0();
  sub_9D08();
  sub_15528();
  v116();
  uint64_t v5 = v115;
  uint64_t v117 = sub_7FBD0();
  os_log_type_t v118 = sub_7FE20();
  if (os_log_type_enabled(v117, v118))
  {
    uint64_t v119 = (uint8_t *)sub_269F4();
    uint64_t v120 = (void *)swift_slowAlloc();
    uint64_t v145 = v119;
    uint64_t v146 = v117;
    *(_DWORD *)uint64_t v119 = 138412290;
    uint64_t v148 = v5;
    id v121 = (id)v5;
    uint64_t v117 = v146;
    uint64_t v80 = v131;
    sub_7FF60();
    *uint64_t v120 = v5;

    uint64_t v79 = v132;
    _os_log_impl(&dword_0, v117, v118, "Converted intent to: %@", v145, 0xCu);
    sub_6A60(&qword_AC3D0);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();
  }
  else
  {
  }
  swift_release();
  sub_152A0();
  v122();
  sub_152A0();
  v123();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v135, v79);
  return v5;
}

uint64_t sub_3F540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_7FBE0();
  sub_6D54();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_15490();
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 32))(v3, a2, a3);
  uint64_t v12 = swift_dynamicCastUnknownClass();
  if (!v12)
  {

    sub_7FBC0();
    sub_9D08();
    sub_15528();
    v13();
    uint64_t v14 = sub_7FBD0();
    os_log_type_t v15 = sub_7FE30();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)sub_269F4();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v17 = sub_803E0();
      uint64_t v19 = sub_1CDF0(v17, v18, &v21);
      sub_3FF64(v19);
      sub_7FF60();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v14, v15, "Failed to convert %s to base Intent", v16, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v7);
    sub_2DEC4();
    sub_18BEC();
    swift_willThrow();
  }
  return v12;
}

BOOL sub_3F75C(char a1, char a2)
{
  return a1 == a2;
}

Swift::Int sub_3F76C(unsigned __int8 a1)
{
  return sub_80370();
}

BOOL sub_3F7B4(char *a1, char *a2)
{
  return sub_3F75C(*a1, *a2);
}

Swift::Int sub_3F7C0()
{
  return sub_3F76C(*v0);
}

void sub_3F7C8(uint64_t a1)
{
  sub_E148(a1, *v1);
}

Swift::Int sub_3F7D0()
{
  Swift::UInt v1 = *v0;
  sub_80350();
  sub_80360(v1);
  return sub_80370();
}

uint64_t sub_3F814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_7FBE0();
  sub_6D54();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_755C();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 40))(a1, a3, a4, a5);
  if (v5)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v25 = (void *)v17;
    uint64_t result = swift_dynamicCastUnknownClass();
    if (result) {
      return result;
    }
  }
  sub_7FBC0();
  sub_9D08();
  sub_15528();
  v18();
  uint64_t v19 = sub_7FBD0();
  os_log_type_t v20 = sub_7FE30();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)sub_269F4();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v22 = sub_803E0();
    uint64_t v24 = sub_1CDF0(v22, v23, &v27);
    sub_3FF64(v24);
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v19, v20, "Failed ot convert %s to base Intent", v21, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  }
  sub_2DEC4();
  sub_18BEC();
  return swift_willThrow();
}

uint64_t sub_3FA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_7FBE0();
  sub_6D54();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_3FF4C();
  sub_7FBB0();
  swift_beginAccess();
  uint64_t v30 = v10;
  sub_15528();
  v14();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_7FBD0();
  os_log_type_t v16 = sub_7FE20();
  uint64_t v29 = a1;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_7FC60();
    sub_1CDF0(v18, v19, &v31);
    sub_7FF60();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v20 = sub_803E0();
    sub_1CDF0(v20, v21, &v31);
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v15, v16, "Converting %s to %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v30);
  if (a2)
  {
    swift_bridgeObjectRetain_n();
    sub_7F910();
    uint64_t v22 = sub_7F9B0();
    if (v23) {
      uint64_t v24 = v22;
    }
    else {
      uint64_t v24 = 0;
    }
    if (v23) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = 0xE000000000000000;
    }
    id v26 = objc_allocWithZone((Class)INSpeakableString);
    id v27 = sub_6B370(v24, v25, v29, a2, 0, 0);
  }
  else
  {
    id v27 = 0;
  }
  (*(void (**)(id, uint64_t, uint64_t))(a5 + 48))(v27, a4, a5);

  return swift_dynamicCastUnknownClassUnconditional();
}

uint64_t sub_3FD94(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC660);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for HealthNLIntentConversionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3FE90);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthNLIntentConversionError()
{
  return &type metadata for HealthNLIntentConversionError;
}

unint64_t sub_3FECC()
{
  unint64_t result = qword_AE348;
  if (!qword_AE348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE348);
  }
  return result;
}

uint64_t sub_3FF18()
{
  return v0;
}

uint64_t sub_3FF30()
{
  return v0;
}

uint64_t sub_3FF64(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_3FF78(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  swift_retain();
  swift_release();

  return swift_retain();
}

uint64_t sub_3FFBC()
{
  swift_release();
  sub_2F854(v0 + OBJC_IVAR____TtCC24HealthFlowDelegatePlugin10WorkoutApp7Builder_aceCommand);
  sub_41158();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);

  return _swift_deallocClassInstance(v0, v2, v3);
}

uint64_t sub_40008()
{
  return 0x2E74756F6B726F77;
}

uint64_t sub_40028(uint64_t a1)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v4 - 8);
  sub_15210();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = *(void *)(a1 + 16);
  uint64_t v5 = a1 + OBJC_IVAR____TtCC24HealthFlowDelegatePlugin10WorkoutApp7Builder_aceCommand;
  swift_beginAccess();
  sub_40E68(v5, v2);
  swift_retain();
  swift_release();
  sub_40E00(v2, v1 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10WorkoutApp_aceCommand);
  return v1;
}

void sub_400F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v8 - 8);
  sub_15210();
  BOOL v9 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (!v9 && (sub_802B0() & 1) == 0)
  {
    BOOL v11 = a1 == 0x616D6D6F43656361 && a2 == 0xEA0000000000646ELL;
    if (v11 || (sub_802B0() & 1) != 0)
    {
      sub_40E68(v3 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10WorkoutApp_aceCommand, v4);
      uint64_t v12 = sub_7F830();
      if (sub_6B0C(v4, 1, v12) != 1)
      {
        *(void *)(a3 + 24) = v12;
        uint64_t v13 = sub_74EC((uint64_t *)a3);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v13, v4, v12);
        return;
      }
      sub_2F854(v4);
    }
LABEL_17:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  uint64_t v10 = *(void *)(v3 + 24);
  if (!v10) {
    goto LABEL_17;
  }
  *(void *)(a3 + 24) = sub_7F7C0();
  *(void *)a3 = v10;

  swift_retain();
}

uint64_t sub_402C0(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_A0460;
  v7._object = a2;
  Swift::Int v4 = sub_801E0(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_40318()
{
  return 2;
}

uint64_t sub_40320()
{
  return 0;
}

uint64_t sub_4032C(char a1)
{
  if (a1) {
    return 0x616D6D6F43656361;
  }
  else {
    return 7368801;
  }
}

uint64_t sub_40360(char *a1, char *a2)
{
  return sub_653B4(*a1, *a2);
}

Swift::Int sub_4036C()
{
  return sub_DF4C();
}

uint64_t sub_40374()
{
  return sub_E1A0();
}

Swift::Int sub_4037C()
{
  return sub_E57C();
}

uint64_t sub_40384@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_402C0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_403B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_4032C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_403E0()
{
  return sub_4032C(*v0);
}

uint64_t sub_403E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_40314();
  *a1 = result;
  return result;
}

void sub_40410(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_4041C(uint64_t a1)
{
  unint64_t v2 = sub_40DB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_40458(uint64_t a1)
{
  unint64_t v2 = sub_40DB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_40494()
{
  swift_release();
  sub_2F854(v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10WorkoutApp_aceCommand);
  return v0;
}

uint64_t sub_404CC()
{
  sub_40494();
  sub_41158();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);

  return _swift_deallocClassInstance(v0, v2, v3);
}

uint64_t sub_40504()
{
  return type metadata accessor for WorkoutApp(0);
}

uint64_t type metadata accessor for WorkoutApp(uint64_t a1)
{
  return sub_3A118(a1, qword_AE378);
}

void sub_4052C()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_405C8(void *a1)
{
  uint64_t v3 = sub_6A60(&qword_AE598);
  sub_6D54();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_755C();
  uint64_t v9 = v8 - v7;
  sub_9AE0(a1, a1[3]);
  sub_40DB4();
  sub_803B0();
  sub_7F7C0();
  sub_40D6C(&qword_AE5A0, (void (*)(uint64_t))&type metadata accessor for SirikitApp);
  sub_80260();
  if (!v1)
  {
    sub_7F830();
    sub_40D6C(&qword_AE5A8, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    sub_80260();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_4079C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_408B0(a1);
  return v2;
}

uint64_t sub_407EC()
{
  return type metadata accessor for WorkoutApp.Builder(0);
}

uint64_t type metadata accessor for WorkoutApp.Builder(uint64_t a1)
{
  return sub_3A118(a1, qword_AE480);
}

void sub_40814()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_408B0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v5 - 8);
  sub_755C();
  uint64_t v8 = v7 - v6;
  sub_6A60(&qword_AE578);
  sub_6D54();
  __chkstk_darwin(v9);
  sub_755C();
  *(void *)(v1 + 16) = 0;
  sub_9AE0(a1, a1[3]);
  sub_40DB4();
  sub_803A0();
  if (v2)
  {

    type metadata accessor for WorkoutApp(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = sub_7F7C0();
    char v16 = 0;
    sub_40D6C(&qword_AE588, (void (*)(uint64_t))&type metadata accessor for SirikitApp);
    sub_41184(v10, (uint64_t)&v16);
    *(void *)(v3 + 24) = v17;
    uint64_t v12 = sub_7F830();
    char v15 = 1;
    sub_40D6C(&qword_AE590, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    sub_41184(v12, (uint64_t)&v15);
    uint64_t v13 = sub_4116C();
    v14(v13);
    sub_40E00(v8, v3 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin10WorkoutApp_aceCommand);
  }
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_40B60()
{
  return sub_40008();
}

void *sub_40B78()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = v2;
  return v2;
}

void sub_40BC0(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = a1;
}

uint64_t (*sub_40C0C())()
{
  return j__swift_endAccess;
}

void sub_40C68(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_40C8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_4079C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_40CB8(void *a1)
{
  return sub_405C8(a1);
}

uint64_t sub_40CDC()
{
  return sub_40D6C(&qword_AE568, (void (*)(uint64_t))type metadata accessor for WorkoutApp);
}

uint64_t sub_40D24()
{
  return sub_40D6C(&qword_AE570, (void (*)(uint64_t))type metadata accessor for WorkoutApp);
}

uint64_t sub_40D6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_40DB4()
{
  unint64_t result = qword_AE580;
  if (!qword_AE580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE580);
  }
  return result;
}

uint64_t sub_40E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_40E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for WorkoutApp.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for WorkoutApp.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x41024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_4104C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutApp.CodingKeys()
{
  return &type metadata for WorkoutApp.CodingKeys;
}

unint64_t sub_4106C()
{
  unint64_t result = qword_AE5B0;
  if (!qword_AE5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE5B0);
  }
  return result;
}

unint64_t sub_410BC()
{
  unint64_t result = qword_AE5B8;
  if (!qword_AE5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE5B8);
  }
  return result;
}

unint64_t sub_4110C()
{
  unint64_t result = qword_AE5C0;
  if (!qword_AE5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AE5C0);
  }
  return result;
}

uint64_t sub_4116C()
{
  return v0;
}

uint64_t sub_41184(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(a1, a2, v3, v2);
}

uint64_t sub_411A4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(v2 + 56);
  if (v3)
  {
    sub_7E2E0();
    id v4 = v3;
    uint64_t v5 = sub_7E2C0();

    return v5;
  }
  else
  {
    return sub_50ACC(a1, a2);
  }
}

uint64_t sub_41208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_41530(a1, a2, a3, a4, a5, (uint64_t)&unk_A1678, (uint64_t)&unk_AE6B0);
}

uint64_t sub_41228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  return _swift_task_switch(sub_4124C, 0, 0);
}

uint64_t sub_4124C()
{
  sub_41D60();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v3 = sub_7E730();
  swift_allocObject();
  uint64_t v4 = sub_7E720();
  v0[8] = v3;
  v0[9] = &protocol witness table for ResponseFactory;
  v0[5] = v4;
  uint64_t v5 = sub_7FC10();
  v0[2] = 0xD000000000000014;
  v0[3] = 0x8000000000088740;
  v0[4] = v2;
  v0[10] = v5;
  unsigned int v6 = (void *)swift_task_alloc();
  v0[20] = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_413B8;
  return sub_3708C((uint64_t)(v0 + 11), (uint64_t)(v0 + 2), (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_413B8()
{
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *id v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_41488, 0, 0);
}

uint64_t sub_41488()
{
  (*(void (**)(uint64_t))(v0 + 144))(v0 + 88);
  sub_19D20(v0 + 88);
  sub_19D80(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_41510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_41530(a1, a2, a3, a4, a5, (uint64_t)&unk_A1650, (uint64_t)&unk_AE6A0);
}

uint64_t sub_41530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7FDC0();
  sub_9B2C((uint64_t)v13, 1, 1, v14);
  char v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v7;
  v15[5] = a4;
  v15[6] = a5;
  swift_retain();
  swift_retain();
  sub_61330((uint64_t)v13, a7, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_41618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_4163C, 0, 0);
}

uint64_t sub_4163C()
{
  sub_41D60();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = [self bundleForClass:ObjCClassFromMetadata];
  v0[5] = v2;
  sub_7E730();
  swift_allocObject();
  uint64_t v3 = sub_7E720();
  v0[6] = v3;
  uint64_t v8 = (uint64_t (*)(unint64_t, unint64_t, id, uint64_t, uint64_t, uint64_t))((char *)&dword_AEF98
                                                                                                 + dword_AEF98);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19070;
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  return v8(0xD000000000000019, 0x8000000000089E50, v2, v3, v5, v6);
}

uint64_t sub_41768()
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for PauseWorkoutHandleIntentStrategy()
{
  return self;
}

uint64_t sub_417CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_41848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_418C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_41940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_41208(a1, a2, a3, a4, a5);
}

uint64_t sub_41964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_419E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_41A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_41510(a1, a2, a3, a4, a5);
}

uint64_t sub_41A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_41ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_41B30(uint64_t a1, void *a2)
{
  return sub_411A4(a1, a2);
}

uint64_t sub_41B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PauseWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

unint64_t sub_41BC4()
{
  unint64_t result = qword_AE690;
  if (!qword_AE690)
  {
    type metadata accessor for PauseWorkoutHandleIntentStrategy();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_AE690);
  }
  return result;
}

uint64_t sub_41C14()
{
  sub_1B75C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19C58;
  uint64_t v2 = sub_1B71C();
  return sub_41618(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_41CBC()
{
  sub_1B75C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19ED0;
  uint64_t v2 = sub_1B71C();
  return sub_41228(v2, v3, v4, v5, v6, v7);
}

uint64_t destroy for WorkoutPatternProvider(uint64_t a1)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);

  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
}

_OWORD *initializeWithCopy for WorkoutPatternProvider(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  long long v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  long long v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  long long v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  long long v9 = a2[14];
  a1[14] = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)a1 + 200, (uint64_t)a2 + 200);
  return a1;
}

uint64_t *assignWithCopy for WorkoutPatternProvider(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *initializeWithTake for WorkoutPatternProvider(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xF0uLL);
}

uint64_t assignWithTake for WorkoutPatternProvider(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPatternProvider(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 240))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutPatternProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPatternProvider()
{
  return &type metadata for WorkoutPatternProvider;
}

uint64_t sub_421C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_7F870();
  __chkstk_darwin(v3 - 8);
  type metadata accessor for WorkoutCancelCATPatternsExecutor(0);
  sub_422F0();
  uint64_t v4 = sub_42308();
  a1[3] = v1;
  a1[4] = (uint64_t)&off_A1468;
  *a1 = v4;
  type metadata accessor for WorkoutEndCATPatternsExecutor(0);
  sub_422F0();
  uint64_t v5 = sub_42308();
  a1[8] = v1;
  a1[9] = (uint64_t)&off_A23A0;
  a1[5] = v5;
  type metadata accessor for WorkoutPauseCATPatternsExecutor(0);
  sub_422F0();
  uint64_t v6 = sub_42308();
  a1[13] = v1;
  a1[14] = (uint64_t)&off_A2500;
  a1[10] = v6;
  type metadata accessor for WorkoutResumeCATPatternsExecutor(0);
  sub_422F0();
  uint64_t v7 = sub_42308();
  a1[18] = v1;
  a1[19] = (uint64_t)&off_A23F0;
  a1[15] = v7;
  type metadata accessor for WorkoutStartCATPatternsExecutor(0);
  sub_422F0();
  uint64_t v8 = sub_42308();
  a1[23] = v1;
  a1[24] = (uint64_t)&off_A23C8;
  a1[20] = v8;
  type metadata accessor for WorkoutCATPatternsExecutor(0);
  sub_422F0();
  uint64_t result = sub_42308();
  a1[28] = v1;
  a1[29] = (uint64_t)&off_A1A60;
  a1[25] = result;
  return result;
}

uint64_t sub_422F0()
{
  return sub_7F860();
}

uint64_t sub_42308()
{
  return sub_7F790();
}

uint64_t type metadata accessor for HealthCATs()
{
  uint64_t result = qword_AE6B8;
  if (!qword_AE6B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_42368()
{
  return swift_initClassMetadata2();
}

uint64_t sub_423A8(uint64_t a1, uint64_t a2)
{
  return sub_423FC(a1, a2);
}

uint64_t sub_423FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v8 - 8);
  sub_1BE08(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_37EE0(a1);
  return v10;
}

uint64_t sub_42564()
{
  return type metadata accessor for HealthCATs();
}

uint64_t sub_4256C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v72 = sub_7FBE0();
  sub_6D54();
  uint64_t v70 = v3;
  __chkstk_darwin(v4);
  sub_1D638();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  sub_154F0();
  uint64_t v65 = v9;
  sub_15378();
  sub_7E6E0();
  sub_6D54();
  uint64_t v62 = v11;
  uint64_t v63 = v10;
  __chkstk_darwin(v10);
  sub_F67C();
  uint64_t v69 = v12;
  sub_15378();
  uint64_t v64 = sub_7F070();
  sub_6D54();
  uint64_t v61 = v13;
  __chkstk_darwin(v14);
  sub_F67C();
  uint64_t v67 = v15;
  sub_15378();
  uint64_t v68 = sub_7EFD0();
  sub_6D54();
  uint64_t v66 = v16;
  __chkstk_darwin(v17);
  sub_1D638();
  __chkstk_darwin(v18);
  sub_154F0();
  uint64_t v20 = v19;
  uint64_t v21 = sub_6A60(&qword_AE708);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_7EEB0();
  sub_6D54();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_1D638();
  uint64_t v30 = v28 - v29;
  __chkstk_darwin(v31);
  sub_154F0();
  uint64_t v33 = v32;
  uint64_t v34 = sub_43B58(a1);
  if (!v34)
  {
LABEL_4:
    sub_7FBA0();
    swift_beginAccess();
    uint64_t v36 = v70;
    uint64_t v37 = v72;
    sub_15528();
    v38();
    uint64_t v39 = sub_7FBD0();
    os_log_type_t v40 = sub_7FE30();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_0, v39, v40, "Failed to create protobuf UsoGraph from UsoTask", v41, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v7, v37);
    return sub_7E6D0();
  }
  uint64_t v35 = v34;
  sub_7F1C0();
  if (sub_6B0C((uint64_t)v23, 1, v24) == 1)
  {
    swift_release();
    sub_D8DC((uint64_t)v23, &qword_AE708);
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v33, v23, v24);
  sub_7EFC0();
  uint64_t v59 = v33;
  uint64_t v60 = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v30, v33, v24);
  sub_7EFB0();
  sub_7F060();
  uint64_t v58 = v20;
  sub_15528();
  v43();
  sub_7F050();
  sub_7E6D0();
  sub_6A60(&qword_AD438);
  uint64_t v44 = v61;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_80D90;
  uint64_t v45 = v64;
  sub_15528();
  v46();
  sub_7E650();
  sub_7FBA0();
  swift_beginAccess();
  uint64_t v47 = v70;
  uint64_t v48 = v65;
  uint64_t v49 = v72;
  sub_15528();
  v50();
  swift_retain_n();
  char v51 = sub_7FBD0();
  os_log_type_t v52 = sub_7FE20();
  if (os_log_type_enabled(v51, v52))
  {
    char v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v73 = v35;
    uint64_t v74 = v54;
    *(_DWORD *)char v53 = 136315138;
    uint64_t v57 = v53 + 4;
    sub_7F1D0();
    swift_retain();
    uint64_t v55 = sub_7FC60();
    uint64_t v73 = sub_1CDF0(v55, v56, &v74);
    sub_7FF60();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v51, v52, "Built nlContextUpdate with SystemPrompted for task: %s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v65, v72);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v67, v64);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v67, v45);
  }
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v58, v68);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v71, v69, v63);
}

uint64_t sub_42C04(uint64_t a1)
{
  sub_42CB8();
  sub_7E660();
  sub_6A60(&qword_AC9C8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_811A0;
  sub_43F94();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v5;
  sub_3E658(3);
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0xE000000000000000;
  sub_7E6B0();
  sub_4343C(a1);
  return sub_7E640();
}

uint64_t sub_42CB8()
{
  sub_7E6D0();
  sub_3E658(0);
  sub_7E680();
  sub_7E670();
  sub_6A60(&qword_AC9C8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_83200;
  sub_43F94();
  sub_43F6C();
  v2._countAndFlagsBits = sub_7FC80();
  sub_7FCD0(v2);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_43F94();
  sub_43F6C();
  v3._countAndFlagsBits = sub_7FC80();
  sub_7FCD0(v3);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  sub_43F94();
  sub_43F6C();
  v4._countAndFlagsBits = sub_7FC80();
  sub_7FCD0(v4);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0xE000000000000000;
  return sub_7E6A0();
}

void *sub_42DEC(unint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_6A60(&qword_AD430);
  __chkstk_darwin(v3 - 8);
  sub_F67C();
  uint64_t v42 = v4;
  sub_15378();
  uint64_t v41 = sub_7E4A0();
  sub_6D54();
  uint64_t v43 = v5;
  __chkstk_darwin(v6);
  sub_F67C();
  uint64_t v48 = v7;
  sub_15378();
  uint64_t v8 = sub_7E520();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1D638();
  uint64_t v47 = v12 - v13;
  uint64_t v15 = __chkstk_darwin(v14);
  os_log_type_t v40 = (char *)&v35 - v16;
  __chkstk_darwin(v15);
  sub_154F0();
  uint64_t v46 = v17;
  if (!(a1 >> 62))
  {
    uint64_t v18 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)sub_801C0();
  uint64_t v18 = (uint64_t)result;
  if (!result) {
    goto LABEL_21;
  }
LABEL_3:
  if (v18 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v49 = a1 & 0xC000000000000001;
    uint64_t v37 = v43 + 32;
    uint64_t v38 = v10 + 16;
    uint64_t v36 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    id v50 = _swiftEmptyArrayStorage;
    uint64_t v39 = v18;
    unint64_t v44 = a1;
    uint64_t v21 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    do
    {
      if (v49) {
        sub_80040();
      }
      else {
        swift_retain();
      }
      sub_7E8D0();
      swift_allocObject();
      swift_retain();
      sub_7E8C0();
      sub_7F890();
      if (v22)
      {
        sub_7E8B0();
        if (v23)
        {
          uint64_t v24 = v8;
          uint64_t v25 = v46;
          sub_7E510();
          uint64_t v26 = v47;
          sub_7E510();
          uint64_t v27 = *v21;
          uint64_t v28 = v42;
          uint64_t v29 = v25;
          uint64_t v8 = v24;
          (*v21)(v42, v29, v24);
          sub_9B2C(v28, 0, 1, v24);
          v27((uint64_t)v40, v26, v24);
          sub_7E480();
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v30 = v50;
          }
          else {
            uint64_t v30 = (void *)sub_13178(0, v50[2] + 1, 1, (uint64_t)v50);
          }
          unint64_t v32 = v30[2];
          unint64_t v31 = v30[3];
          uint64_t v18 = v39;
          if (v32 >= v31 >> 1) {
            uint64_t v30 = (void *)sub_13178(v31 > 1, v32 + 1, 1, (uint64_t)v30);
          }
          v30[2] = v32 + 1;
          unint64_t v33 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
          id v50 = v30;
          (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))((char *)v30 + v33 + *(void *)(v43 + 72) * v32, v48, v41);
          swift_release();
          swift_release();
          uint64_t v34 = *v36;
          (*v36)(v47, v8);
          v34(v46, v8);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
      }
      ++v20;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    return v50;
  }
  return result;
}

uint64_t sub_43260()
{
  sub_42CB8();
  sub_6A60(&qword_AC9C8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_80D90;
  sub_3E658(8);
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  return sub_7E6B0();
}

void sub_432E4()
{
  id v0 = [objc_allocWithZone((Class)SAAceConfirmationContext) init];
  uint64_t v1 = sub_7FC50();
  sub_43F08(v1, v2, v0);
  sub_43260();
  sub_6A60(&qword_AEA40);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_814D0;
  *(void *)(v3 + 32) = v0;
  sub_7FD40();
  id v4 = v0;
  sub_7E690();
  sub_7E9F0();
  swift_allocObject();
  sub_7E9E0();
  sub_7F890();
  sub_7E9C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_7E9D0();
  swift_release();
  sub_7E6C0();
}

void *sub_4343C(uint64_t a1)
{
  uint64_t v2 = sub_7EB60();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  __chkstk_darwin(v2);
  os_log_type_t v52 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_6A60(&qword_AD430);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v49 - v8;
  uint64_t v68 = sub_7E4A0();
  uint64_t v9 = *(void (***)(char *, uint64_t))(v68 - 8);
  uint64_t v10 = __chkstk_darwin(v68);
  uint64_t v64 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v49 - v12;
  uint64_t v13 = sub_7E520();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v63 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  char v53 = (char *)&v49 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v61 = (char *)&v49 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v60 = (char *)&v49 - v22;
  __chkstk_darwin(v21);
  uint64_t v59 = (char *)&v49 - v23;
  uint64_t v24 = *(char **)(a1 + 16);
  uint64_t v25 = &_swiftEmptyArrayStorage;
  uint64_t v54 = v14;
  uint64_t v55 = v7;
  if (v24)
  {
    uint64_t v69 = &_swiftEmptyArrayStorage;
    uint64_t v65 = v9;
    sub_4B8A0();
    uint64_t v57 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    unint64_t v56 = (void (**)(void, void))(v65 + 4);
    uint64_t v26 = a1 + 40;
    uint64_t v28 = v59;
    uint64_t v27 = v60;
    do
    {
      uint64_t v67 = v24;
      swift_bridgeObjectRetain_n();
      sub_7E510();
      swift_bridgeObjectRetain();
      sub_7E510();
      uint64_t v29 = *v58;
      uint64_t v30 = (uint64_t)v62;
      (*v58)(v62, v27, v13);
      sub_9B2C(v30, 0, 1, v13);
      v29(v61, v28, v13);
      sub_7E480();
      unint64_t v31 = *v57;
      (*v57)(v28, v13);
      v31(v27, v13);
      swift_bridgeObjectRelease();
      uint64_t v25 = v69;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_4B8A0();
        uint64_t v25 = v69;
      }
      unint64_t v32 = v25[2];
      uint64_t v9 = v65;
      unint64_t v33 = v67;
      if (v32 >= v25[3] >> 1)
      {
        sub_4B8A0();
        uint64_t v9 = v65;
        uint64_t v25 = v69;
      }
      v26 += 16;
      v25[2] = v32 + 1;
      ((void (*)(unint64_t, char *, uint64_t))v9[4])((unint64_t)v25+ ((*((unsigned __int8 *)v9 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v9 + 80))+ (void)v9[9] * v32, v66, v68);
      uint64_t v69 = v25;
      uint64_t v24 = v33 - 1;
    }
    while (v24);
    uint64_t v14 = v54;
    uint64_t v7 = v55;
  }
  sub_7EB40();
  uint64_t v34 = v25[2];
  if (v34)
  {
    uint64_t v36 = v9[2];
    uint64_t v35 = (unsigned __int8 *)(v9 + 2);
    uint64_t v37 = (char *)v25 + ((v35[64] + 32) & ~(unint64_t)v35[64]);
    uint64_t v66 = (char *)*((void *)v35 + 7);
    uint64_t v67 = (char *)v36;
    uint64_t v65 = (void (**)(char *, uint64_t))(v35 - 8);
    uint64_t v62 = (char *)(v14 + 32);
    swift_bridgeObjectRetain();
    uint64_t v38 = (char *)&_swiftEmptyArrayStorage;
    do
    {
      uint64_t v39 = v64;
      uint64_t v40 = v68;
      uint64_t v41 = v35;
      ((void (*)(char *, char *, uint64_t))v67)(v64, v37, v68);
      sub_7E490();
      (*v65)(v39, v40);
      if (sub_6B0C((uint64_t)v7, 1, v13) == 1)
      {
        sub_D8DC((uint64_t)v7, &qword_AD430);
      }
      else
      {
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))v62;
        uint64_t v43 = v53;
        (*(void (**)(char *, char *, uint64_t))v62)(v53, v7, v13);
        v42(v63, v43, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v38 = (char *)sub_131C0(0, *((void *)v38 + 2) + 1, 1, (uint64_t)v38);
        }
        unint64_t v45 = *((void *)v38 + 2);
        unint64_t v44 = *((void *)v38 + 3);
        if (v45 >= v44 >> 1) {
          uint64_t v38 = (char *)sub_131C0(v44 > 1, v45 + 1, 1, (uint64_t)v38);
        }
        *((void *)v38 + 2) = v45 + 1;
        v42(&v38[((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v45], v63, v13);
        uint64_t v7 = v55;
      }
      uint64_t v37 = &v66[(void)v37];
      --v34;
      uint64_t v35 = v41;
    }
    while (v34);
    swift_bridgeObjectRelease();
  }
  uint64_t v46 = v52;
  uint64_t v47 = sub_7EB50();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v51);
  uint64_t v69 = v25;
  sub_43DF0(v47);
  return v69;
}

uint64_t sub_43B58(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = sub_6A60(&qword_ACDE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_6A60(&qword_ACDD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AE710);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(v1)
  {
    case 0:
      sub_7F690();
      uint64_t v11 = sub_7F4A0();
      sub_9B2C((uint64_t)v10, 1, 1, v11);
      uint64_t v12 = sub_7F590();
      sub_9B2C((uint64_t)v7, 1, 1, v12);
      uint64_t v13 = sub_7F4D0();
      sub_9B2C((uint64_t)v4, 1, 1, v13);
      uint64_t v14 = sub_7F660();
      sub_D8DC((uint64_t)v4, &qword_ACDE0);
      sub_D8DC((uint64_t)v7, &qword_ACDD0);
      sub_D8DC((uint64_t)v10, &qword_AE710);
      return v14;
    case 1:
      sub_7F690();
      uint64_t v15 = sub_7F650();
      goto LABEL_8;
    case 2:
      sub_7F690();
      uint64_t v15 = sub_7F640();
      goto LABEL_8;
    case 3:
      sub_7F690();
      uint64_t v15 = sub_7F680();
      goto LABEL_8;
    case 4:
      sub_7F690();
      uint64_t v15 = sub_7F670();
LABEL_8:
      uint64_t v14 = v15;
      break;
    default:
      uint64_t v14 = 0;
      break;
  }
  return v14;
}

uint64_t sub_43DF0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v5 > *(void *)(v3 + 24) >> 1)
  {
    if (v4 <= v5) {
      uint64_t v7 = v4 + v2;
    }
    else {
      uint64_t v7 = v4;
    }
    uint64_t result = sub_13178(result, v7, 1, v3);
    uint64_t v3 = result;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = sub_7E4A0();
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t result = v10 - 8;
  uint64_t v11 = v12;
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t result = sub_13DA8(v6 + v13, v2, v3 + v13 + *(void *)(v11 + 72) * v8);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *int v1 = v3;
    return result;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFADD__(v14, v2);
  uint64_t v16 = v14 + v2;
  if (!v15)
  {
    *(void *)(v3 + 16) = v16;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_43F08(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_7FC40();
  swift_bridgeObjectRelease();
  [a3 setReason:v4];
}

void sub_43F6C()
{
  v1._countAndFlagsBits = 0x2E65756C61562ELL;
  v1._object = (void *)0xE700000000000000;
  sub_7FCD0(v1);
}

uint64_t sub_43F94()
{
  return sub_3E658(8);
}

void sub_43FB0(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  id v4 = sub_4426C(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = *(id *)sub_7F9D0();
    sub_7FE20();
    sub_6A60(&qword_ABED0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_80D90;
    id v8 = v5;
    id v9 = [v8 description];
    uint64_t v10 = sub_7FC50();
    uint64_t v12 = v11;

    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_6C34();
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v12;
    sub_7FAD0();

    swift_bridgeObjectRelease();
    id v22 = v8;
    a3(v5, 0);
  }
  else
  {
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v13 = sub_E934(0);
    sub_7FE30();
    uint64_t v14 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_80D90;
    id v16 = v14;
    uint64_t v17 = sub_E854();
    uint64_t v19 = v18;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_6C34();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_44BEC((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v20 = swift_allocError();
    *uint64_t v21 = v13;
    swift_retain();
    a3((void *)v20, 1);
    swift_errorRelease();
    swift_release();
  }
}

id sub_4426C(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_ABEB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v39 = (char *)&v38 - v5;
  uint64_t v6 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_7F6B0();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7ED20();
  sub_6D54();
  uint64_t v16 = v15;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v23((char *)&v38 - v21, a1, v14);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v14);
  if (v24 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v25 = sub_6D70();
    v26(v25);
    uint64_t v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v22, v41);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v13, v27);
    sub_44BAC();
    id v28 = sub_69218((uint64_t)v8);
    sub_6BD4((uint64_t)v8, type metadata accessor for HealthNLIntent);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v27);
  }
  else
  {
    uint64_t v29 = a1;
    uint64_t v31 = (uint64_t)v39;
    uint64_t v30 = (uint64_t)v40;
    if (v24 == enum case for Parse.directInvocation(_:))
    {
      v23(v20, v29, v14);
      sub_7819C((uint64_t)v20, v31);
      sub_6AA4(v31, v30);
      uint64_t v32 = type metadata accessor for DirectInvocationData();
      if (sub_6B0C(v30, 1, v32) == 1)
      {
        sub_6B34(v31);
        sub_6B34(v30);
        id v28 = 0;
      }
      else
      {
        sub_7890C(v43);
        sub_6B34(v31);
        sub_6BD4(v30, (uint64_t (*)(void))type metadata accessor for DirectInvocationData);
        sub_6A60(&qword_ABEC0);
        sub_44BAC();
        if (swift_dynamicCast()) {
          id v28 = v42;
        }
        else {
          id v28 = 0;
        }
      }
      uint64_t v35 = sub_6D70();
      v36(v35);
    }
    else
    {
      uint64_t v33 = sub_6D70();
      v34(v33);
      return 0;
    }
  }
  return v28;
}

uint64_t type metadata accessor for EndWorkoutStrategy()
{
  return self;
}

uint64_t sub_44658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for EndWorkoutStrategy();

  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, v11, a6);
}

void sub_446C4(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
}

uint64_t sub_446E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for EndWorkoutStrategy();

  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_44734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for EndWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_447A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for EndWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_4480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for EndWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_44878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for EndWorkoutStrategy();

  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_448F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for EndWorkoutStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_44940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for EndWorkoutStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_449A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for EndWorkoutStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_44A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for EndWorkoutStrategy();

  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_44A8C(uint64_t a1, uint64_t a2)
{
  return sub_44BEC(&qword_AE7D8, a2, (void (*)(uint64_t))type metadata accessor for EndWorkoutStrategy);
}

uint64_t sub_44AD4(uint64_t a1, uint64_t a2)
{
  return sub_44BEC(&qword_AE7E0, a2, (void (*)(uint64_t))type metadata accessor for EndWorkoutStrategy);
}

uint64_t sub_44B1C(uint64_t a1, uint64_t a2)
{
  return sub_44BEC(&qword_AE7E8, a2, (void (*)(uint64_t))type metadata accessor for EndWorkoutStrategy);
}

uint64_t sub_44B64(uint64_t a1, uint64_t a2)
{
  return sub_44BEC(&qword_AE7F0, a2, (void (*)(uint64_t))type metadata accessor for EndWorkoutStrategy);
}

unint64_t sub_44BAC()
{
  unint64_t result = qword_AC798;
  if (!qword_AC798)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AC798);
  }
  return result;
}

uint64_t sub_44BEC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_44C34(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v47 = a8;
  uint64_t v48 = a7;
  uint64_t v46 = a1;
  sub_7E760();
  sub_6D54();
  uint64_t v44 = v11;
  uint64_t v45 = v10;
  __chkstk_darwin(v10);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_7F870();
  sub_6D54();
  __chkstk_darwin(v14);
  uint64_t v16 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_6A60((uint64_t *)&unk_AF440);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)&v42[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  id v22 = (uint64_t *)&v42[-v21];
  swift_bridgeObjectRetain();
  char v23 = sub_50760(a3, a4);
  if (v23 == 5)
  {
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v25 = sub_E934(2);
    sub_7FE30();
    uint64_t v26 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_80D90;
    id v28 = v26;
    uint64_t v29 = sub_E854();
    uint64_t v31 = v30;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = sub_6C34();
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v31;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_189E4((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v32 = swift_allocError();
    *uint64_t v33 = v25;
    v49[0] = v32;
    BOOL v50 = 1;
    swift_retain();
    v48(v49);
    swift_release();
    uint64_t v34 = (uint64_t *)&unk_AF480;
    uint64_t v35 = v49;
  }
  else
  {
    char v24 = v23;
    if (v23 == 4)
    {
      LOBYTE(v43) = sub_7FE90() & 1;
      int v43 = v43;
    }
    else
    {
      int v43 = 0;
    }
    sub_7F760();
    uint64_t v36 = sub_7F750();
    sub_6A60(&qword_ACBA0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_80D90;
    sub_7F860();
    v49[0] = v37;
    sub_189E4((unint64_t *)&unk_AF450, (void (*)(uint64_t))&type metadata accessor for CATOption);
    sub_6A60(&qword_ACBA8);
    sub_18A2C();
    sub_7FFE0();
    type metadata accessor for HealthCATWrapper();
    swift_allocObject();
    sub_5B344(v36, (uint64_t)v16);
    sub_5B6CC(v46, v24, v43);
    swift_release();
    sub_18A80((uint64_t)v22, (uint64_t)v20);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v49[0] = *v20;
    }
    else
    {
      uint64_t v40 = v44;
      uint64_t v39 = v45;
      (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v44 + 32))(v13, v20, v45);
      sub_450E0(v49);
      (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v13, v39);
    }
    BOOL v50 = EnumCaseMultiPayload == 1;
    v48(v49);
    sub_D8DC((uint64_t)v49, (uint64_t *)&unk_AF480);
    uint64_t v34 = (uint64_t *)&unk_AF440;
    uint64_t v35 = v22;
  }
  return sub_D8DC((uint64_t)v35, v34);
}

uint64_t sub_450E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v10, v10[3]);
  sub_7E3D0();
  uint64_t v5 = sub_7E6E0();
  sub_9B2C((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = sub_7ED80();
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = 0;
  a1[3] = v6;
  a1[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a1);
  sub_7E5D0();
  sub_D8DC((uint64_t)v8, (uint64_t *)&unk_AF490);
  sub_D8DC((uint64_t)v4, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v11);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v10);
}

uint64_t type metadata accessor for StartWorkoutUnsupportedValueStrategy()
{
  return self;
}

uint64_t sub_45270(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  return sub_44C34(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_45288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t started = type metadata accessor for StartWorkoutUnsupportedValueStrategy();

  return UnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, a8, started, a10);
}

uint64_t sub_45320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t started = type metadata accessor for StartWorkoutUnsupportedValueStrategy();

  return UnsupportedValueFlowStrategy.makeLaunchAppWithIntentOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, a8, started, a10);
}

uint64_t type metadata accessor for HealthWorkoutCancelCATs()
{
  uint64_t result = qword_AE898;
  if (!qword_AE898) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_45400()
{
  return swift_initClassMetadata2();
}

uint64_t sub_45440(uint64_t a1, uint64_t a2)
{
  return sub_454AC(a1, a2);
}

uint64_t sub_45464()
{
  return sub_456E0();
}

uint64_t sub_45488(uint64_t a1)
{
  return sub_45704(a1);
}

uint64_t sub_454AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  sub_6A60(&qword_AC2D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_811A0;
  uint64_t v11 = (uint64_t *)(v10 + 48);
  *(void *)(v10 + 32) = 1953459315;
  *(void *)(v10 + 40) = 0xE400000000000000;
  sub_7434(a1, (uint64_t)v9, &qword_AC2C8);
  uint64_t v12 = sub_7F830();
  sub_756C((uint64_t)v9);
  if (v13)
  {
    sub_7494((uint64_t)v9, &qword_AC2C8);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
  }
  else
  {
    *(void *)(v10 + 72) = v12;
    sub_74EC(v11);
    sub_7550();
    (*(void (**)(void))(v14 + 32))();
  }
  *(void *)(v10 + 80) = 0x4E74756F6B726F77;
  *(void *)(v10 + 88) = 0xEB00000000656D61;
  sub_7434(a2, (uint64_t)v7, &qword_AC2C8);
  sub_756C((uint64_t)v7);
  if (v13)
  {
    sub_7494((uint64_t)v7, &qword_AC2C8);
    *(_OWORD *)(v10 + 96) = 0u;
    *(_OWORD *)(v10 + 112) = 0u;
  }
  else
  {
    *(void *)(v10 + 120) = v12;
    sub_74EC((uint64_t *)(v10 + 96));
    sub_7550();
    (*(void (**)(void))(v15 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_456E0()
{
  return sub_7F780();
}

uint64_t sub_45704(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v2 - 8);
  sub_755C();
  uint64_t v5 = v4 - v3;
  sub_6A60(&qword_AC2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_80D90;
  uint64_t v7 = (uint64_t *)(v6 + 48);
  *(void *)(v6 + 32) = 0x656D614E707061;
  *(void *)(v6 + 40) = 0xE700000000000000;
  sub_7434(a1, v5, &qword_AC2C8);
  uint64_t v8 = sub_7F830();
  sub_756C(v5);
  if (v9)
  {
    sub_7494(v5, &qword_AC2C8);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }
  else
  {
    *(void *)(v6 + 72) = v8;
    sub_74EC(v7);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_45874(uint64_t a1, uint64_t a2)
{
  return sub_458C8(a1, a2);
}

uint64_t sub_458C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v9 - 8);
  sub_755C();
  sub_7434(a1, v11 - v10, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v12 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v12;
}

uint64_t sub_45A34()
{
  return type metadata accessor for HealthWorkoutCancelCATs();
}

uint64_t type metadata accessor for WorkoutsUnsupportedValueStrategy()
{
  return sub_9C4C();
}

uint64_t sub_45A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *))
{
  uint64_t v9 = sub_7E760();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v31 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_6A60((uint64_t *)&unk_AF440);
  uint64_t v11 = __chkstk_darwin(v33);
  char v13 = (uint64_t *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v19 = (void *)sub_7E740();
  if (v19
    && (v20 = v19, id v21 = [v19 displayAppName], v20, v21))
  {
    sub_7FC50();
    uint64_t v30 = v9;

    swift_release();
    sub_7FCA0();
    uint64_t v9 = v30;
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_7F830();
    uint64_t v23 = 0;
  }
  else
  {
    swift_release();
    uint64_t v22 = sub_7F830();
    uint64_t v23 = 1;
  }
  sub_9B2C((uint64_t)v18, v23, 1, v22);
  uint64_t v24 = v7[3];
  uint64_t v25 = v7[4];
  sub_9AE0(v7, v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 24))(v18, v24, v25);
  sub_18A80((uint64_t)v15, (uint64_t)v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v34[0] = *v13;
  }
  else
  {
    id v28 = v31;
    uint64_t v27 = v32;
    (*(void (**)(char *, uint64_t *, uint64_t))(v32 + 32))(v31, v13, v9);
    sub_45D8C(v34);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v9);
  }
  BOOL v35 = EnumCaseMultiPayload == 1;
  a7(v34);
  sub_D8DC((uint64_t)v34, (uint64_t *)&unk_AF480);
  sub_D8DC((uint64_t)v15, (uint64_t *)&unk_AF440);
  return sub_D8DC((uint64_t)v18, &qword_AC2C8);
}

uint64_t sub_45D8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v10, v10[3]);
  sub_7E3D0();
  uint64_t v5 = sub_7E6E0();
  sub_9B2C((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = sub_7ED80();
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = 0;
  a1[3] = v6;
  a1[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a1);
  sub_7E5D0();
  sub_D8DC((uint64_t)v8, (uint64_t *)&unk_AF490);
  sub_D8DC((uint64_t)v4, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v11);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v10);
}

uint64_t sub_45EFC()
{
  return UnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)();
}

uint64_t sub_45F08()
{
  return UnsupportedValueFlowStrategy.makeLaunchAppWithIntentOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)();
}

void **sub_45F14(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void sub_45F44(id *a1)
{
}

void **sub_45F4C(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void *sub_45F84(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **sub_45F90(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_45FC4(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_46018(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutRCHFlowStrategyAsync()
{
  return sub_9C4C();
}

uint64_t sub_46080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a4;
  v6[4] = a6;
  v6[2] = a1;
  return sub_2F8FC((uint64_t)sub_4609C);
}

uint64_t sub_4609C()
{
  uint64_t v1 = sub_3E8FC(*(uint8_t **)(v0 + 16), *(void *)(v0 + 24), *(uint8_t **)(v0 + 24), *(void *)(v0 + 32));
  int v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_46120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return sub_2F8FC((uint64_t)sub_4613C);
}

uint64_t sub_4613C()
{
  sub_9D38();
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    sub_7E2E0();
    id v2 = v1;
    uint64_t v3 = sub_7E2C0();
  }
  else
  {
    uint64_t v3 = sub_50ACC(*(void *)(v0 + 16), *(void **)(v0 + 24));
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_461D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(a3 + 32);
  *uint64_t v6 = v3;
  v6[1] = sub_2F6C0;
  return sub_46080(a1, v7, v8, v10, v9, v11);
}

uint64_t sub_46274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_4691C;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t sub_46338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_4691C;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_46404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_4691C;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_464D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_4691C;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_4659C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_46678;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_46678()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *id v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_4673C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_4691C;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_46818(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_36DC0;
  return sub_46120(a1, a2, v6);
}

uint64_t sub_468C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_468E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_468FC()
{
  return swift_getWitnessTable();
}

id sub_46920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7DA30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)SAStartRequest) init];
  uint64_t v9 = sub_7FC50();
  sub_47048(v9, v10, v8, (SEL *)&selRef_setOrigin_);
  sub_46F78(a1, a2, v8);
  id v11 = [objc_allocWithZone((Class)SASendCommands) init];
  sub_6A60(&qword_AEA40);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_814D0;
  *(void *)(v12 + 32) = v8;
  uint64_t v21 = v12;
  sub_7FD40();
  uint64_t v13 = v21;
  id v14 = v8;
  sub_46FD0(v13, v11);
  id v15 = v11;
  sub_7DA20();
  uint64_t v16 = sub_7DA00();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_47048(v16, v18, v15, (SEL *)&selRef_setAceId_);

  return v15;
}

uint64_t sub_46AE8()
{
  sub_7E9C0();

  return swift_release();
}

uint64_t sub_46B1C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_47238(a1, v20);
  uint64_t v3 = v20[0];
  uint64_t v21 = v20[1];
  int64_t v4 = v20[3];
  unint64_t v5 = v20[4];
  int64_t v6 = (unint64_t)(v20[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v4 << 6);
  while (1)
  {
    id v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v9);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v15, v16, v18, v19);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v10 >= v6) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v21 + 8 * v10);
    int64_t v12 = v4 + 1;
    if (!v11)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v6) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v21 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v6) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v21 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v6) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v21 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 5;
            if (v4 + 5 >= v6) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v21 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v4 + 6;
              while (v13 < v6)
              {
                unint64_t v11 = *(void *)(v21 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v4 = v12;
  }
  __break(1u);
  return result;
}

id sub_46CD0(uint64_t a1)
{
  sub_7E9F0();
  swift_allocObject();
  sub_7E9E0();
  sub_46B1C(a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_47230);
  uint64_t v2 = sub_7E9D0();
  uint64_t v4 = v3;
  swift_release();
  id v5 = sub_46920(v2, v4);
  swift_bridgeObjectRelease();
  return v5;
}

id sub_46D74(void *a1, void *a2, void *a3)
{
  id v7 = [objc_allocWithZone((Class)SAUIConfirmationView) init];
  uint64_t v8 = sub_470B4(a1);
  if (v9)
  {
    sub_7FC40();
    uint64_t v8 = sub_47270();
  }
  else
  {
    uint64_t v3 = 0;
  }
  sub_47288(v8, "setConfirmText:");

  uint64_t v10 = sub_47118(a1);
  if (v10)
  {
    sub_6A60(&qword_AEA48);
    sub_7FD10();
    uint64_t v10 = sub_47270();
  }
  else
  {
    uint64_t v3 = 0;
  }
  sub_47288(v10, "setConfirmCommands:");

  uint64_t v11 = sub_470B4(a2);
  if (v12)
  {
    sub_7FC40();
    uint64_t v11 = sub_47270();
  }
  else
  {
    uint64_t v3 = 0;
  }
  sub_47288(v11, "setDenyText:");

  uint64_t v13 = sub_47118(a2);
  if (v13)
  {
    sub_6A60(&qword_AEA48);
    sub_7FD10();
    uint64_t v13 = sub_47270();
  }
  else
  {
    uint64_t v3 = 0;
  }
  sub_47288(v13, "setDenyCommands:");

  sub_6A60(&qword_AEA40);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_84070;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  uint64_t v22 = v14;
  sub_7FD40();
  uint64_t v15 = v22;
  if (a3)
  {
    id v16 = a1;
    id v17 = a2;
    id v18 = a3;
    sub_7FD00();
    if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                   + (v22 & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_7FD50();
    sub_7FD80();
    sub_7FD40();
    uint64_t v15 = v22;
  }
  else
  {
    id v19 = a1;
    id v20 = a2;
  }
  sub_4717C(v15, v7);
  return v7;
}

void sub_46F78(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_7FC40();
  [a3 setUtterance:v4];
}

void sub_46FD0(uint64_t a1, void *a2)
{
  sub_6A60(&qword_AEA58);
  Class isa = sub_7FD10().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCommands:isa];
}

void sub_47048(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v6 = sub_7FC40();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

uint64_t sub_470B4(void *a1)
{
  id v1 = [a1 label];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_7FC50();

  return v3;
}

uint64_t sub_47118(void *a1)
{
  id v1 = [a1 commands];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_6A60(&qword_AEA48);
  uint64_t v3 = sub_7FD20();

  return v3;
}

void sub_4717C(uint64_t a1, void *a2)
{
  sub_471F0();
  Class isa = sub_7FD10().super.isa;
  swift_bridgeObjectRelease();
  [a2 setAllConfirmationOptions:isa];
}

unint64_t sub_471F0()
{
  unint64_t result = qword_AEA50;
  if (!qword_AEA50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AEA50);
  }
  return result;
}

uint64_t sub_47230()
{
  return sub_46AE8();
}

uint64_t sub_47238@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_47270()
{
  return swift_bridgeObjectRelease();
}

id sub_47288(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

unsigned char *storeEnumTagSinglePayload for GenericWorkoutIntentResponseCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4736CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericWorkoutIntentResponseCode()
{
  return &type metadata for GenericWorkoutIntentResponseCode;
}

unint64_t sub_473A4(unint64_t result)
{
  if (result >= 9) {
    return 9;
  }
  return result;
}

uint64_t sub_473B4(uint64_t result)
{
  return result;
}

Swift::Int sub_473BC()
{
  return sub_DF58(*v0);
}

Swift::Int sub_473C4(uint64_t a1)
{
  return sub_E628(a1, *v1);
}

unint64_t sub_473CC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_473A4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_473F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_473B4(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_47428()
{
  unint64_t result = qword_AEA60;
  if (!qword_AEA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AEA60);
  }
  return result;
}

uint64_t sub_47474(unint64_t a1)
{
  if (a1 < 0xB) {
    return *(void *)&aUnknown[8 * a1];
  }
  sub_7FE30();
  uint64_t v2 = *(void **)sub_7F9D0();
  sub_6A60(&qword_ABED0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_80D90;
  type metadata accessor for INWorkoutGoalUnitType(0);
  id v4 = v2;
  sub_80110();
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_6C34();
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0xE000000000000000;
  sub_7FAE0();

  swift_bridgeObjectRelease();
  return 0x6E776F6E6B6E75;
}

unint64_t sub_475AC()
{
  sub_7FBE0();
  sub_6D54();
  __chkstk_darwin(v0);
  sub_15210();
  sub_7ED30();
  id v1 = (uint8_t *)v9[4];
  sub_9AE0(v9, v9[3]);
  char v2 = sub_7E400();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v9);
  if (v2) {
    return 0x8000000000000002;
  }
  sub_7FBB0();
  sub_9D08();
  sub_15528();
  v4();
  uint64_t v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE20();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (_WORD *)sub_26B04();
    sub_49BB4(v7);
    _os_log_impl(&dword_0, v5, v6, "No Mindfulness override on this platform", v1, 2u);
    sub_9CB0();
  }

  sub_49B40();
  v8();
  return 0x8000000000000001;
}

uint64_t sub_47700(uint64_t a1, uint64_t a2)
{
  sub_7FBE0();
  sub_6D54();
  __chkstk_darwin(v4);
  if (sub_475AC() == 0x8000000000000002)
  {
    sub_7FBB0();
    sub_9D08();
    sub_15528();
    v5();
    os_log_type_t v6 = sub_7FBD0();
    os_log_type_t v7 = sub_7FE20();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (_WORD *)sub_26B04();
      sub_49BB4(v8);
      _os_log_impl(&dword_0, v6, v7, "This is an unsupported device.", v2, 2u);
      sub_9CB0();
    }

    sub_49B40();
    v9();
    return sub_35418();
  }
  else
  {
    swift_retain();
  }
  return a2;
}

uint64_t sub_47848()
{
  uint64_t v0 = swift_allocObject();
  sub_47880();
  return v0;
}

uint64_t sub_47880()
{
  uint64_t v2 = sub_7FBE0();
  sub_6D54();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_15210();
  uint64_t v6 = sub_7FBB0();
  sub_9D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v2);
  sub_7FB20();
  return v0;
}

uint64_t sub_4793C()
{
  uint64_t v0 = (uint8_t *)sub_7FB50();
  sub_6D54();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_F67C();
  uint64_t v30 = v4;
  uint64_t v5 = sub_7FB10();
  sub_6D54();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_15308();
  uint64_t v31 = v9;
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - v12;
  sub_7FB30();
  sub_7FAF0();
  uint64_t v14 = sub_7FB30();
  os_signpost_type_t v15 = sub_7FE70();
  if (sub_7FF10())
  {
    id v16 = (_WORD *)sub_26B04();
    uint64_t v29 = v5;
    sub_49BB4(v16);
    os_signpost_id_t v17 = sub_7FB00();
    _os_signpost_emit_with_name_impl(&dword_0, v14, v15, v17, "pluginWarmUp", "", v0, 2u);
    uint64_t v5 = v29;
    sub_9CB0();
  }

  sub_15528();
  v18();
  sub_7FB80();
  swift_allocObject();
  sub_7FB70();
  id v19 = sub_7FB30();
  uint64_t v20 = v31;
  sub_7FB60();
  os_signpost_type_t v21 = sub_7FE60();
  if (sub_7FF10())
  {
    swift_retain();
    uint64_t v22 = v30;
    sub_7FB90();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint8_t *))(v2 + 88))(v22, v0) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v23 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint8_t *))(v2 + 8))(v22, v0);
      uint64_t v23 = "";
    }
    uint64_t v24 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v24 = 0;
    os_signpost_id_t v25 = sub_7FB00();
    _os_signpost_emit_with_name_impl(&dword_0, v19, v21, v25, "pluginWarmUp", v23, v24, 2u);
    sub_9CB0();
  }

  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v26(v20, v5);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v26)(v13, v5);
}

uint64_t sub_47C58(uint64_t a1)
{
  uint64_t v186 = a1;
  uint64_t v2 = sub_6A60(&qword_ABEB8);
  __chkstk_darwin(v2 - 8);
  sub_F67C();
  sub_49A9C(v3);
  uint64_t v157 = type metadata accessor for DirectInvocationData();
  sub_151D0();
  __chkstk_darwin(v4);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v5);
  sub_154F0();
  sub_49A9C(v6);
  uint64_t v167 = sub_7ED10();
  sub_6D54();
  uint64_t v166 = v7;
  __chkstk_darwin(v8);
  sub_F67C();
  sub_49A9C(v9);
  uint64_t v10 = type metadata accessor for FlowRouterX();
  __chkstk_darwin(v10 - 8);
  sub_F67C();
  sub_49A9C(v11);
  uint64_t v170 = sub_7FB50();
  sub_6D54();
  uint64_t v172 = v12;
  __chkstk_darwin(v13);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v14);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v15);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v16);
  sub_154F0();
  uint64_t v18 = sub_49A9C(v17);
  uint64_t v19 = type metadata accessor for HealthNLIntent(v18);
  __chkstk_darwin(v19 - 8);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v20);
  sub_154F0();
  sub_49A9C(v21);
  sub_7F6B0();
  sub_6D54();
  uint64_t v176 = v23;
  uint64_t v177 = v22;
  __chkstk_darwin(v22);
  sub_F67C();
  sub_49A9C(v24);
  *(void *)&long long v188 = sub_7ED20();
  sub_6D54();
  uint64_t v184 = v25;
  __chkstk_darwin(v26);
  sub_15308();
  uint64_t v185 = v27;
  __chkstk_darwin(v28);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v29);
  sub_154F0();
  sub_49A9C(v30);
  uint64_t v31 = sub_7FBE0();
  sub_6D54();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v35);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v155 - v37;
  uint64_t v39 = sub_7FB10();
  sub_6D54();
  uint64_t v41 = v40;
  __chkstk_darwin(v42);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v43);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v44);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v45);
  sub_49AF0();
  sub_49A8C();
  uint64_t v47 = __chkstk_darwin(v46);
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v155 - v48;
  uint64_t v50 = v1 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin24HealthFlowDelegatePlugin_signposter;
  sub_7FB30();
  sub_7FAF0();
  uint64_t v178 = v50;
  uint64_t v51 = sub_7FB30();
  os_signpost_type_t v52 = sub_7FE70();
  char v53 = sub_7FF10();
  uint64_t v187 = v39;
  if (v53)
  {
    uint64_t v54 = v31;
    uint64_t v55 = v33;
    unint64_t v56 = v38;
    uint64_t v57 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v57 = 0;
    os_signpost_id_t v58 = sub_7FB00();
    _os_signpost_emit_with_name_impl(&dword_0, v51, v52, v58, "makeFlow", "", v57, 2u);
    uint64_t v38 = v56;
    uint64_t v33 = v55;
    uint64_t v31 = v54;
    sub_9CB0();
  }
  v173 = v38;
  uint64_t v182 = v31;
  uint64_t v183 = v33;

  v180 = v49;
  uint64_t v181 = v41;
  sub_15528();
  v59();
  sub_7FB80();
  swift_allocObject();
  uint64_t v179 = sub_7FB70();
  uint64_t v60 = sub_7FBA0();
  sub_9D08();
  uint64_t v61 = *(void (**)(void, void, void))(v33 + 16);
  uint64_t v162 = v33 + 16;
  v161 = v61;
  v61(v38, v60, v31);
  uint64_t v62 = v184;
  uint64_t v63 = *(void (**)(void))(v184 + 16);
  uint64_t v64 = v174;
  uint64_t v65 = v186;
  uint64_t v66 = v188;
  sub_49BEC();
  v63();
  uint64_t v67 = sub_7FBD0();
  os_log_type_t v68 = sub_7FE20();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    uint64_t v156 = swift_slowAlloc();
    uint64_t v190 = v156;
    *(_DWORD *)uint64_t v69 = 136315138;
    sub_49BEC();
    v63();
    uint64_t v70 = sub_7FC60();
    uint64_t v189 = sub_1CDF0(v70, v71, &v190);
    uint64_t v65 = v186;
    sub_7FF60();
    swift_bridgeObjectRelease();
    uint64_t v72 = *(void (**)(void))(v62 + 8);
    sub_26A1C();
    v72();
    _os_log_impl(&dword_0, v67, v68, "Workout plugin activate with %s", v69, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    uint64_t v66 = v188;
    sub_9CB0();
  }
  else
  {
    uint64_t v72 = *(void (**)(void))(v62 + 8);
    ((void (*)(uint64_t, uint64_t))v72)(v64, v66);
  }

  uint64_t v73 = *(void (**)(void))(v183 + 8);
  sub_26A1C();
  v73();
  uint64_t v74 = v185;
  sub_49BEC();
  v63();
  int v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 88))(v74, v66);
  if (v75 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v76 = sub_49B84();
    v77(v76);
    uint64_t v78 = v176;
    uint64_t v79 = v177;
    uint64_t v80 = v175;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 32))(v175, v74, v177);
    LODWORD(v186) = sub_7FE20();
    uint64_t v81 = (void **)sub_7F9D0();
    uint64_t v82 = *v81;
    sub_6A60(&qword_ABED0);
    uint64_t v83 = swift_allocObject();
    long long v188 = xmmword_80D90;
    *(_OWORD *)(v83 + 16) = xmmword_80D90;
    sub_499A4(&qword_AD0D0, (void (*)(uint64_t))&type metadata accessor for NLIntent);
    id v84 = v82;
    uint64_t v85 = sub_802A0();
    uint64_t v87 = v86;
    *(void *)(v83 + 56) = &type metadata for String;
    unint64_t v88 = sub_6C34();
    *(void *)(v83 + 64) = v88;
    *(void *)(v83 + 32) = v85;
    *(void *)(v83 + 40) = v87;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    uint64_t v89 = v169;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v169, v80, v79);
    sub_7FE20();
    int v90 = *v81;
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = v188;
    uint64_t v63 = v90;
    uint64_t v92 = sub_66D18();
    *(void *)(v91 + 56) = &type metadata for String;
    *(void *)(v91 + 64) = v88;
    *(void *)(v91 + 32) = v92;
    *(void *)(v91 + 40) = v93;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    id v94 = sub_7FB30();
    sub_7FE80();
    char v95 = sub_49B9C();
    uint64_t v96 = v180;
    if (v95)
    {
      uint64_t v97 = (uint8_t *)sub_26B04();
      *(_WORD *)uint64_t v97 = 0;
      os_signpost_id_t v98 = sub_7FB00();
      _os_signpost_emit_with_name_impl(&dword_0, v94, (os_signpost_type_t)v63, v98, "nlv3IntentConverted", "", v97, 2u);
      sub_9CB0();
    }

    type metadata accessor for FlowRouter();
    uint64_t v99 = v168;
    sub_497EC(v89, v168, (void (*)(void))type metadata accessor for HealthNLIntent);
    sub_34EDC(v99);
    uint64_t v100 = sub_350CC();
    uint64_t v101 = swift_release();
    uint64_t v102 = sub_47700(v101, v100);
    swift_release();
    sub_4984C(v89, (void (*)(void))type metadata accessor for HealthNLIntent);
    (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v175, v177);
    uint64_t v103 = (void *)sub_7FB30();
    sub_49B20();
    sub_7FE60();
    char v104 = sub_49B9C();
    uint64_t v105 = v181;
    if ((v104 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
  if (v75 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v106 = sub_49B84();
    v107(v106);
    id v84 = v165;
    (*(void (**)(void *, uint64_t, uint64_t))(v166 + 32))(v165, v74, v167);
    uint64_t v108 = sub_48D44((uint64_t)v84);
    if (v108)
    {
      uint64_t v102 = v108;
      sub_49B40();
      v109();
      uint64_t v103 = (void *)sub_7FB30();
      sub_49B20();
      sub_7FE60();
      char v110 = sub_49B9C();
      uint64_t v96 = v180;
      uint64_t v105 = v181;
      if (v110) {
        goto LABEL_25;
      }
      goto LABEL_28;
    }
    uint64_t v129 = v171;
    sub_49BEC();
    v63();
    uint64_t v130 = v159;
    sub_7819C(v129, v159);
    if (sub_6B0C(v130, 1, v157) != 1)
    {
      uint64_t v63 = v160;
      sub_49788(v130, (uint64_t)v160);
      type metadata accessor for FlowRouter();
      uint64_t v131 = v158;
      sub_497EC((uint64_t)v63, v158, (void (*)(void))type metadata accessor for DirectInvocationData);
      sub_34FD0(v131);
      uint64_t v102 = sub_350CC();
      swift_release();
      sub_4984C((uint64_t)v63, (void (*)(void))type metadata accessor for DirectInvocationData);
      sub_49B40();
      v132();
      uint64_t v103 = (void *)sub_7FB30();
      sub_49B20();
      sub_7FE60();
      char v133 = sub_49B9C();
      uint64_t v96 = v180;
      uint64_t v105 = v181;
      if (v133)
      {
LABEL_25:
        swift_retain();
        sub_7FB90();
        swift_release();
        uint64_t v134 = sub_49AFC();
        if (v135(v134) != enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v136 = sub_49B6C();
          v137(v136);
        }
        v138 = (_WORD *)sub_26B04();
        sub_49BB4(v138);
        os_signpost_id_t v139 = sub_7FB00();
        sub_49BCC(&dword_0, v140, (os_signpost_type_t)v63, v139, "makeFlow");
        sub_9CB0();
      }
LABEL_28:

      uint64_t v141 = *(void (**)(id, uint64_t))(v105 + 8);
      uint64_t v142 = v187;
      v141(v84, v187);
LABEL_32:
      swift_release();
      v141(v96, v142);
      return v102;
    }
    sub_6B34(v130);
    sub_7FBB0();
    sub_9D08();
    sub_9D68();
    sub_15528();
    v149();
    v150 = (void *)sub_7FBD0();
    os_log_type_t v151 = sub_7FE30();
    if (sub_49B50(v151))
    {
      v152 = (_WORD *)sub_26B04();
      sub_49BC0(v152);
      sub_49AD0(&dword_0, v153, v154, "Workout plugin had no flows that can handle the invocation");
      sub_9CB0();
    }

    sub_26A1C();
    v73();
  }
  else if (v75 == enum case for Parse.uso(_:))
  {
    uint64_t v111 = v65;
    sub_7FBB0();
    sub_9D08();
    sub_9D68();
    sub_15528();
    v112();
    os_log_type_t v113 = sub_7FBD0();
    os_log_type_t v114 = sub_7FE20();
    BOOL v115 = os_log_type_enabled(v113, v114);
    uint64_t v96 = v180;
    uint64_t v116 = v181;
    if (v115)
    {
      uint64_t v117 = (uint8_t *)sub_26B04();
      *(_WORD *)uint64_t v117 = 0;
      _os_log_impl(&dword_0, v113, v114, "Workout domain received NLv4", v117, 2u);
      sub_9CB0();
    }

    sub_26A1C();
    v73();
    os_log_type_t v118 = v164;
    sub_5D5C8(v164);
    uint64_t v119 = sub_5D730(v111);
    sub_4984C((uint64_t)v118, (void (*)(void))type metadata accessor for FlowRouterX);
    uint64_t v120 = sub_7FB30();
    os_signpost_type_t v121 = sub_7FE80();
    if (sub_7FF10())
    {
      uint64_t v122 = (uint8_t *)sub_26B04();
      *(_WORD *)uint64_t v122 = 0;
      os_signpost_id_t v123 = sub_7FB00();
      _os_signpost_emit_with_name_impl(&dword_0, v120, v121, v123, "nlv4FlowBuilt", "", v122, 2u);
      sub_9CB0();
    }

    uint64_t v186 = sub_47700(v124, v119);
    swift_release();
    sub_26A1C();
    v72();
    uint64_t v125 = (void *)sub_7FB30();
    uint64_t v126 = v163;
    sub_7FB60();
    sub_7FE60();
    if (sub_49B9C())
    {
      swift_retain();
      sub_7FB90();
      swift_release();
      uint64_t v127 = sub_49AFC();
      if (v128(v127) != enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v143 = sub_49B6C();
        v144(v143);
      }
      uint64_t v145 = (_WORD *)sub_26B04();
      sub_49BB4(v145);
      os_signpost_id_t v146 = sub_7FB00();
      sub_49BCC(&dword_0, v147, (os_signpost_type_t)v119, v146, "makeFlow");
      sub_9CB0();
    }

    uint64_t v141 = *(void (**)(id, uint64_t))(v116 + 8);
    uint64_t v142 = v187;
    v141(v126, v187);
    uint64_t v102 = v186;
    goto LABEL_32;
  }
  uint64_t result = sub_801A0();
  __break(1u);
  return result;
}

uint64_t sub_48D44(uint64_t a1)
{
  uint64_t v2 = sub_7ED10();
  sub_6D54();
  uint64_t v4 = v3;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v73 - v9;
  uint64_t v11 = sub_7FBE0();
  sub_6D54();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v15);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v16);
  sub_49AF0();
  sub_49A8C();
  __chkstk_darwin(v17);
  uint64_t v18 = sub_7FBB0();
  sub_9D08();
  uint64_t v83 = v13;
  uint64_t v84 = v11;
  uint64_t v19 = sub_9D68();
  uint64_t v80 = v13 + 16;
  uint64_t v79 = v20;
  v20(v19);
  uint64_t v21 = v2;
  uint64_t v82 = *(void (**)(void))(v4 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v82)(v10, a1, v2);
  uint64_t v22 = sub_7FBD0();
  os_log_type_t v23 = sub_7FE20();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v81 = v18;
  uint64_t v78 = v8;
  uint64_t v77 = v4 + 16;
  if (v24)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    v90[0] = v75;
    uint64_t v76 = a1;
    uint64_t v74 = v25;
    *(_DWORD *)uint64_t v25 = 136315138;
    v73[1] = v25 + 4;
    uint64_t v26 = v21;
    uint64_t v27 = v21;
    uint64_t v28 = v82;
    ((void (*)(char *, char *, uint64_t))v82)(v8, v10, v27);
    uint64_t v29 = sub_7FC60();
    uint64_t v85 = sub_1CDF0(v29, v30, v90);
    sub_7FF60();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v26);
    _os_log_impl(&dword_0, v22, v23, "Parse had DirectInvocation: %s", v74, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    uint64_t v31 = *(void (**)(void))(v83 + 8);
    sub_26A1C();
    v31();
    uint64_t v32 = v28;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v21);

    uint64_t v31 = *(void (**)(void))(v83 + 8);
    sub_26A1C();
    v31();
    uint64_t v32 = v82;
  }
  uint64_t v33 = sub_7ECF0();
  uint64_t v35 = v34;
  uint64_t v36 = (void *)sub_7FA10();
  if (v33 == *v36 && v35 == v36[1])
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_9D68();
  char v38 = sub_802B0();
  swift_bridgeObjectRelease();
  if (v38)
  {
LABEL_17:
    sub_9D08();
    sub_49AAC();
    v49();
    uint64_t v50 = (void *)sub_7FBD0();
    os_log_type_t v51 = sub_7FE20();
    if (sub_49B50(v51))
    {
      os_signpost_type_t v52 = (_WORD *)sub_26B04();
      sub_49BC0(v52);
      sub_49AD0(&dword_0, v53, v54, "WorkoutReminderAnnouncementFlow can handle the direct invocation");
      sub_9CB0();
    }

    sub_26A1C();
    v31();
    sub_49640(v90);
    uint64_t v55 = sub_7FAA0();
    uint64_t v56 = sub_7FA80();
    uint64_t v88 = v55;
    uint64_t v89 = &protocol witness table for DeviceResolutionService;
    uint64_t v85 = v56;
    sub_7F9F0();
    swift_allocObject();
    v90[0] = sub_7F9E0();
    sub_499A4(&qword_AEB40, (void (*)(uint64_t))&type metadata accessor for WorkoutReminderAnnouncementFlow);
    uint64_t v48 = sub_7E1E0();
    swift_release();
    return v48;
  }
  sub_15528();
  v32();
  uint64_t v39 = sub_7FA00();
  if (v41 == 1)
  {
    uint64_t v42 = sub_7ECF0();
    uint64_t v44 = v43;
    if (v42 == sub_7FC50() && v44 == v45)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v47 = sub_802B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0) {
        return 0;
      }
    }
    sub_9D08();
    sub_49AAC();
    v67();
    os_log_type_t v68 = (void *)sub_7FBD0();
    os_log_type_t v69 = sub_7FE20();
    if (sub_49B50(v69))
    {
      uint64_t v70 = (_WORD *)sub_26B04();
      sub_49BC0(v70);
      sub_49AD0(&dword_0, v71, v72, "VoiceFeedbackAnnouncementFlow can handle the direct invocation");
      sub_9CB0();
    }

    sub_26A1C();
    v31();
    sub_7ED00();
    sub_7FA20();
    sub_498A4();
    uint64_t v48 = sub_7E1E0();
    sub_498F0((uint64_t)v90);
  }
  else
  {
    uint64_t v58 = v39;
    uint64_t v59 = v40;
    uint64_t v60 = v41;
    sub_9D08();
    sub_49AAC();
    v61();
    uint64_t v62 = (void *)sub_7FBD0();
    os_log_type_t v63 = sub_7FE20();
    if (sub_49B50(v63))
    {
      uint64_t v64 = (_WORD *)sub_26B04();
      sub_49BC0(v64);
      sub_49AD0(&dword_0, v65, v66, "WorkoutReminderControlsFlow can handle the direct invocation");
      sub_9CB0();
    }

    sub_26A1C();
    v31();
    LOBYTE(v85) = v58;
    uint64_t v86 = v59;
    uint64_t v87 = v60;
    sub_49944();
    uint64_t v48 = sub_7E1E0();
    sub_49990(v58, v59, v60);
  }
  return v48;
}

uint64_t sub_4944C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin24HealthFlowDelegatePlugin_signposter;
  sub_7FB40();
  sub_151D0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_494E4()
{
  return type metadata accessor for HealthFlowDelegatePlugin();
}

uint64_t type metadata accessor for HealthFlowDelegatePlugin()
{
  uint64_t result = qword_AEA98;
  if (!qword_AEA98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_49534()
{
  uint64_t result = sub_7FB40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_495C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_47848();
  *a1 = result;
  return result;
}

uint64_t sub_495F0()
{
  return sub_4793C();
}

uint64_t sub_49618(uint64_t a1)
{
  return sub_47C58(a1);
}

uint64_t sub_49640@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for FlowConfigModel;
  a1[4] = (uint64_t)&protocol witness table for FlowConfigModel;
  *a1 = swift_allocObject();
  return sub_7F970();
}

uint64_t sub_496F4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_49704(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13 = sub_7FB00();
  _os_signpost_emit_with_name_impl(&dword_0, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_49788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DirectInvocationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_497EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_151D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_4984C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_151D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_498A4()
{
  unint64_t result = qword_AEB30;
  if (!qword_AEB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AEB30);
  }
  return result;
}

uint64_t sub_498F0(uint64_t a1)
{
  return a1;
}

unint64_t sub_49944()
{
  unint64_t result = qword_AEB38;
  if (!qword_AEB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AEB38);
  }
  return result;
}

uint64_t sub_49990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_499A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_499EC()
{
  if (v0[5]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 2));
  }
  if (v0[10]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 7));
  }
  if (v0[15]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 12));
  }
  if (v0[20]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 17));
  }
  if (v0[25]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 22));
  }
  if (v0[30]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 27));
  }
  if (v0[35]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 32));
  }

  return _swift_deallocObject(v0, 296, 7);
}

void sub_49A8C()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_49A9C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

void sub_49AD0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_49AFC()
{
  return v0;
}

uint64_t sub_49B20()
{
  return sub_7FB60();
}

BOOL sub_49B50(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_49B6C()
{
  return v0;
}

uint64_t sub_49B84()
{
  return v0;
}

uint64_t sub_49B9C()
{
  return sub_7FF10();
}

_WORD *sub_49BB4(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_WORD *sub_49BC0(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

void sub_49BCC(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

uint64_t sub_49BF8(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_801C0())
  {
    uint64_t v4 = 0;
    unint64_t v21 = v2;
    unint64_t v22 = v2 & 0xC000000000000001;
    while (1)
    {
      id v5 = v22 ? (id)sub_80040() : *(id *)(v2 + 8 * v4 + 32);
      uint64_t v6 = v5;
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      id v8 = [v5 spokenPhrase];
      uint64_t v24 = sub_7FC50();
      uint64_t v10 = v9;

      id v11 = [a2 workoutName];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = v3;
        id v14 = [v11 spokenPhrase];

        uint64_t v15 = sub_7FC50();
        uint64_t v17 = v16;

        if (v24 == v15 && v10 == v17)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          return v4;
        }
        char v19 = sub_802B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19)
        {

          goto LABEL_20;
        }
        uint64_t v3 = v13;

        unint64_t v2 = v21;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v4;
      if (v7 == v3) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
  }
LABEL_17:

  swift_bridgeObjectRelease();
  return 0;
}

void *sub_49E18(uint64_t a1)
{
  uint64_t v6 = &_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_800B0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_18B8C(i, (uint64_t)v5);
    sub_D838(0, (unint64_t *)&qword_AC3C8);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_80080();
    sub_800C0();
    sub_800D0();
    sub_80090();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_49F34(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_49F74(int a1, int a2, int a3, int a4, int a5, id a6, int a7, void (*a8)(uint64_t *), uint64_t a9)
{
  id v10 = [a6 disambiguationItems];
  uint64_t v11 = sub_7FD20();

  uint64_t v12 = sub_49E18(v11);
  swift_bridgeObjectRelease();
  if (v12)
  {
    sub_6A60(&qword_AD0E0);
    swift_allocObject();
    uint64_t v23 = sub_7EC90();
    char v24 = 0;
    a8(&v23);
  }
  else
  {
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v13 = sub_E934(6);
    sub_7FE30();
    id v14 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_80D90;
    id v16 = v14;
    uint64_t v17 = sub_E854();
    uint64_t v19 = v18;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_6C34();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_4B850((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v20 = swift_allocError();
    *unint64_t v21 = v13;
    uint64_t v23 = v20;
    char v24 = 1;
    swift_retain();
    a8(&v23);
    swift_errorRelease();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_4A1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t *))
{
  sub_6A60(&qword_AD208);
  sub_6D54();
  uint64_t v59 = v12;
  uint64_t v60 = v11;
  __chkstk_darwin(v11);
  sub_755C();
  uint64_t v15 = v14 - v13;
  uint64_t v61 = sub_6A60(&qword_AEC20);
  __chkstk_darwin(v61);
  sub_755C();
  uint64_t v18 = (uint64_t *)(v17 - v16);
  uint64_t v19 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v19 - 8);
  sub_755C();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_7ED20();
  sub_6D54();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  sub_15490();
  uint64_t v27 = sub_7F6B0();
  sub_6D54();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_4B920();
  sub_7ECD0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v25 + 88))(v9, v23) == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v58 = v18;
    (*(void (**)(uint64_t, uint64_t))(v25 + 96))(v9, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v10, v9, v27);
    sub_D838(0, (unint64_t *)&qword_AC898);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v22, v10, v27);
    uint64_t v31 = sub_689DC();
    sub_F314(v22);
    sub_6A60(&qword_AD0C8);
    unint64_t v32 = sub_7E930();
    id v33 = v31;
    sub_49BF8(v32, v33);
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    if (v35)
    {
      sub_6A60(&qword_AD0D8);
      id v36 = v33;
      id v37 = v35;
      sub_7E790();
      uint64_t v38 = (uint64_t)v18;
      sub_7E840();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v15, v60);
      swift_storeEnumTagMultiPayload();
      a9(v18);
    }
    else
    {
      type metadata accessor for HealthFlowError();
      swift_allocObject();
      uint64_t v49 = sub_E934(5);
      sub_7FE30();
      uint64_t v50 = *(void **)sub_7F9D0();
      sub_6A60(&qword_ABED0);
      uint64_t v51 = sub_21DE4();
      *(_OWORD *)(v51 + 16) = xmmword_80D90;
      id v52 = v50;
      uint64_t v53 = sub_E854();
      uint64_t v55 = v54;
      *(void *)(v51 + 56) = &type metadata for String;
      *(void *)(v51 + 64) = sub_6C34();
      *(void *)(v51 + 32) = v53;
      *(void *)(v51 + 40) = v55;
      sub_7FAE0();

      swift_bridgeObjectRelease();
      sub_4B850((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      uint64_t v56 = swift_allocError();
      *uint64_t v57 = v49;
      uint64_t v38 = (uint64_t)v58;
      *uint64_t v58 = v56;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      a9(v58);
      swift_release();
    }
    sub_D8DC(v38, &qword_AEC20);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v10, v27);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v9, v23);
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v39 = sub_E934(0);
    sub_7FE30();
    uint64_t v40 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v41 = sub_21DE4();
    *(_OWORD *)(v41 + 16) = xmmword_80D90;
    id v42 = v40;
    uint64_t v43 = sub_E854();
    uint64_t v45 = v44;
    *(void *)(v41 + 56) = &type metadata for String;
    *(void *)(v41 + 64) = sub_6C34();
    *(void *)(v41 + 32) = v43;
    *(void *)(v41 + 40) = v45;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_4B850((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v46 = swift_allocError();
    *char v47 = v39;
    *uint64_t v18 = v46;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    a9(v18);
    swift_release();
    return sub_D8DC((uint64_t)v18, &qword_AEC20);
  }
}

void sub_4A7D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v74 = a8;
  uint64_t v72 = a1;
  uint64_t v14 = sub_7F870();
  sub_6D54();
  uint64_t v73 = v15;
  __chkstk_darwin(v16);
  sub_4B920();
  uint64_t v17 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v17 - 8);
  sub_755C();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_7E6E0();
  sub_6D54();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_15490();
  swift_bridgeObjectRetain();
  char v25 = sub_50760(a3, a4);
  if (v25 == 5)
  {
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v26 = sub_E934(2);
    sub_7FE30();
    uint64_t v27 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v28 = sub_21DE4();
    *(_OWORD *)(v28 + 16) = xmmword_80D90;
    id v29 = v27;
    uint64_t v30 = sub_E854();
    uint64_t v32 = v31;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_6C34();
    *(void *)(v28 + 32) = v30;
    *(void *)(v28 + 40) = v32;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_4B850((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v33 = swift_allocError();
    *uint64_t v34 = v26;
    v76[0] = v33;
    char v77 = 1;
    swift_retain();
    uint64_t v35 = sub_4B938();
    v36(v35);
    swift_release();
    sub_D8DC((uint64_t)v76, (uint64_t *)&unk_AF480);
    return;
  }
  char v37 = v25;
  uint64_t v70 = v20;
  uint64_t v71 = a9;
  uint64_t v66 = v14;
  uint64_t v67 = v10;
  uint64_t v68 = v9;
  uint64_t v69 = v23;
  sub_7FE20();
  uint64_t v38 = *(void **)sub_7F9D0();
  sub_6A60(&qword_ABED0);
  uint64_t v39 = sub_21DE4();
  long long v65 = xmmword_80D90;
  *(_OWORD *)(v39 + 16) = xmmword_80D90;
  v76[0] = 0;
  v76[1] = 0xE000000000000000;
  char v75 = v37;
  id v40 = v38;
  sub_80110();
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = sub_6C34();
  *(void *)(v39 + 32) = 0;
  *(void *)(v39 + 40) = 0xE000000000000000;
  sub_7FAE0();

  swift_bridgeObjectRelease();
  uint64_t v41 = sub_6A60(&qword_AD0C8);
  unint64_t v42 = sub_7E930();
  unint64_t v43 = v42;
  if (v42 >> 62) {
    uint64_t v44 = sub_801C0();
  }
  else {
    uint64_t v44 = *(void *)((char *)&dword_10 + (v42 & 0xFFFFFFFFFFFFFF8));
  }
  if (!v44)
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = _swiftEmptyArrayStorage;
LABEL_16:
    uint64_t v55 = v68;
    sub_42C04((uint64_t)v46);
    swift_bridgeObjectRelease();
    type metadata accessor for DisambiguationStrategyHelper();
    sub_7E930();
    sub_7ED30();
    uint64_t v56 = (void *)sub_3D5F8();
    swift_bridgeObjectRelease();
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v76);
    sub_7F760();
    uint64_t v57 = sub_7F750();
    sub_6A60(&qword_ACBA0);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = v65;
    sub_7F860();
    v76[0] = v58;
    sub_4B850((unint64_t *)&unk_AF450, 255, (void (*)(uint64_t))&type metadata accessor for CATOption);
    sub_6A60(&qword_ACBA8);
    sub_10D50((unint64_t *)&qword_AF460, &qword_ACBA8);
    sub_7FFE0();
    type metadata accessor for HealthCATWrapper();
    swift_allocObject();
    sub_5B344(v57, v67);
    uint64_t v59 = v70;
    sub_5B628();
    uint64_t v60 = swift_release();
    __chkstk_darwin(v60);
    v63[-2] = v56;
    v63[-1] = v55;
    sub_611D4((void (*)(uint64_t))sub_4B898, (uint64_t)v76);
    uint64_t v61 = sub_4B938();
    v62(v61);

    sub_D8DC((uint64_t)v76, (uint64_t *)&unk_AF480);
    sub_D8DC(v59, (uint64_t *)&unk_AF440);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v55, v21);
    return;
  }
  v76[0] = _swiftEmptyArrayStorage;
  sub_4B830();
  if ((v44 & 0x8000000000000000) == 0)
  {
    v63[1] = v41;
    void v63[2] = a7;
    uint64_t v64 = v21;
    uint64_t v45 = 0;
    uint64_t v46 = (void *)v76[0];
    do
    {
      if ((v43 & 0xC000000000000001) != 0) {
        id v47 = (id)sub_80040();
      }
      else {
        id v47 = *(id *)(v43 + 8 * v45 + 32);
      }
      uint64_t v48 = v47;
      id v49 = [v47 spokenPhrase];
      uint64_t v50 = sub_7FC50();
      uint64_t v52 = v51;

      v76[0] = v46;
      unint64_t v53 = v46[2];
      if (v53 >= v46[3] >> 1)
      {
        sub_4B830();
        uint64_t v46 = (void *)v76[0];
      }
      ++v45;
      v46[2] = v53 + 1;
      uint64_t v54 = &v46[2 * v53];
      v54[4] = v50;
      v54[5] = v52;
    }
    while (v44 != v45);
    swift_bridgeObjectRelease();
    uint64_t v21 = v64;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_4AE9C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v16, v16[3]);
  sub_7E3D0();
  sub_6A60(&qword_AEA40);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_814D0;
  *(void *)(v9 + 32) = a1;
  *(void *)&v14[0] = v9;
  sub_7FD40();
  uint64_t v10 = sub_7E6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, a2, v10);
  sub_9B2C((uint64_t)v8, 0, 1, v10);
  uint64_t v11 = sub_7ED80();
  memset(v14, 0, sizeof(v14));
  uint64_t v15 = 0;
  a3[3] = v11;
  a3[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a3);
  id v12 = a1;
  sub_7E5F0();
  swift_bridgeObjectRelease();
  sub_D8DC((uint64_t)v14, (uint64_t *)&unk_AF490);
  sub_D8DC((uint64_t)v8, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v17);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v16);
}

uint64_t type metadata accessor for StartWorkoutDisambiguationStrategy()
{
  return self;
}

uint64_t sub_4B0BC()
{
  type metadata accessor for StartWorkoutDisambiguationStrategy();

  return sub_7DD80();
}

uint64_t sub_4B140(int a1, int a2, int a3, int a4, int a5, void *a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v17 = *v8;
  swift_retain();

  return sub_49F74(a1, a2, a3, a4, a5, a6, v17, a7, a8);
}

uint64_t sub_4B1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t *))
{
  return sub_4A1AC(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_4B204(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_4B22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t started = type metadata accessor for StartWorkoutDisambiguationStrategy();

  return NeedsDisambiguationFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, started, a11);
}

uint64_t sub_4B2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t started = type metadata accessor for StartWorkoutDisambiguationStrategy();

  return NeedsDisambiguationFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, started, a11);
}

uint64_t sub_4B38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t started = type metadata accessor for StartWorkoutDisambiguationStrategy();

  return NeedsDisambiguationFlowStrategy.makePromptForDeviceUnlock(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, a8, started, a10);
}

uint64_t sub_4B424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t started = type metadata accessor for StartWorkoutDisambiguationStrategy();

  return NeedsDisambiguationFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)(a1, a2, a3, a4, a5, a6, a7, a8, started, a10);
}

uint64_t sub_4B4BC()
{
  type metadata accessor for StartWorkoutDisambiguationStrategy();

  return sub_7EB80();
}

uint64_t sub_4B540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t started = type metadata accessor for StartWorkoutDisambiguationStrategy();

  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)(a1, a2, a3, a4, a5, a6, a7, started, a9);
}

uint64_t sub_4B5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t started = type metadata accessor for StartWorkoutDisambiguationStrategy();
  *uint64_t v14 = v7;
  v14[1] = sub_18744;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_4B6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  uint64_t started = type metadata accessor for StartWorkoutDisambiguationStrategy();
  *uint64_t v16 = v8;
  v16[1] = sub_18BE8;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, started, a8);
}

uint64_t sub_4B7AC(uint64_t a1, uint64_t a2)
{
  return sub_4B850(&qword_AEC10, a2, (void (*)(uint64_t))type metadata accessor for StartWorkoutDisambiguationStrategy);
}

uint64_t sub_4B7F4()
{
  return sub_10D50(&qword_AEC18, &qword_AD0E0);
}

void sub_4B830()
{
  sub_14C54();
  *uint64_t v0 = v1;
}

uint64_t sub_4B850(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4B898@<X0>(uint64_t *a1@<X8>)
{
  return sub_4AE9C(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_4B8A0()
{
  sub_14DEC();
  *uint64_t v0 = v1;
}

void sub_4B8C0()
{
  sub_14E24();
  *uint64_t v0 = v1;
}

void sub_4B8E0()
{
  sub_14FB8();
  *uint64_t v0 = v1;
}

void sub_4B900()
{
  sub_1507C();
  *uint64_t v0 = v1;
}

uint64_t sub_4B938()
{
  return v0 - 136;
}

uint64_t defaultWorkoutApp(for:workoutName:)(uint64_t a1, char a2)
{
  uint64_t v3 = sub_7F6D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DeviceIdiom.watch(_:), v3);
  char v7 = sub_7F6C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0 && a2 != 84) {
    return defaultWatchApp(for:)(a2);
  }
  else {
    return sub_7F900();
  }
}

uint64_t defaultWatchApp(for:)(char a1)
{
  if (a1 == 79) {
    AFDeviceIsVictory();
  }

  return sub_7F900();
}

uint64_t type metadata accessor for CancelWorkoutContinueInAppStrategy()
{
  uint64_t result = qword_AEC50;
  if (!qword_AEC50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FitnessCATs()
{
  uint64_t result = qword_AED18;
  if (!qword_AED18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4BB58()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4BB98(uint64_t a1, uint64_t a2)
{
  return sub_4BBEC(a1, a2);
}

uint64_t sub_4BBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v8 - 8);
  sub_1BE08(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_37EE0(a1);
  return v10;
}

uint64_t sub_4BD54()
{
  return type metadata accessor for FitnessCATs();
}

uint64_t sub_4BD5C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_A04B0;
  v6._object = a2;
  unint64_t v4 = sub_801E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_4BDA8(char a1)
{
  return qword_845A0[a1];
}

uint64_t getEnumTagSinglePayload for HealthConfirmation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthConfirmation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4BF1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthConfirmation()
{
  return &type metadata for HealthConfirmation;
}

unint64_t sub_4BF58()
{
  unint64_t result = qword_AED68;
  if (!qword_AED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AED68);
  }
  return result;
}

uint64_t sub_4BFA4()
{
  return sub_65534();
}

Swift::Int sub_4BFB0()
{
  return sub_DF98();
}

uint64_t sub_4BFB8()
{
  return sub_E37C();
}

Swift::Int sub_4BFC0()
{
  return sub_E3D0();
}

uint64_t sub_4BFC8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_4BD5C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_4BFF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_4BDA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_4C024(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_4C12C();
  unint64_t v5 = sub_4C178();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_4C090()
{
  unint64_t result = qword_AED70;
  if (!qword_AED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AED70);
  }
  return result;
}

unint64_t sub_4C0E0()
{
  unint64_t result = qword_AED78;
  if (!qword_AED78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AED78);
  }
  return result;
}

unint64_t sub_4C12C()
{
  unint64_t result = qword_AED80;
  if (!qword_AED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AED80);
  }
  return result;
}

unint64_t sub_4C178()
{
  unint64_t result = qword_AED88[0];
  if (!qword_AED88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_AED88);
  }
  return result;
}

uint64_t sub_4C1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_4C1CC(uint64_t a1)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);

  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 248);
}

uint64_t sub_4C234(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void **)(a2 + 240);
  *(void *)(a1 + 240) = v10;
  uint64_t v11 = a2 + 248;
  long long v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 272) = v12;
  uint64_t v13 = v12;
  uint64_t v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  id v15 = v10;
  v14(a1 + 248, v11, v13);
  return a1;
}

uint64_t *sub_4C498(uint64_t *a1, uint64_t *a2)
{
  sub_7DB0(a1, a2);
  sub_7DB0(a1 + 5, a2 + 5);
  sub_7DB0(a1 + 10, a2 + 10);
  sub_7DB0(a1 + 15, a2 + 15);
  sub_7DB0(a1 + 20, a2 + 20);
  sub_7DB0(a1 + 25, a2 + 25);
  long long v4 = (void *)a1[30];
  long long v5 = (void *)a2[30];
  a1[30] = (uint64_t)v5;
  id v6 = v5;

  sub_7DB0(a1 + 31, a2 + 31);
  return a1;
}

void *sub_4C528(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t sub_4C530(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  long long v7 = *(void **)(a1 + 240);
  uint64_t v8 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v8;

  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 248);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  return a1;
}

uint64_t sub_4C634(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 288))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_4C674(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutHandleIntentStrategyAsync()
{
  return sub_9C4C();
}

uint64_t sub_4C718(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_9D50();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_4C740()
{
  sub_9D38();
  uint64_t v1 = *(void **)(*(void *)(v0 + 32) + 240);
  if (v1)
  {
    sub_7E2E0();
    id v2 = v1;
    uint64_t v3 = sub_7E2C0();
  }
  else
  {
    uint64_t v3 = sub_50ACC(*(void *)(v0 + 16), *(void **)(v0 + 24));
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_4C7D4()
{
  sub_37080();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_269F0;
  sub_4F76C();
  return sub_4C874();
}

uint64_t sub_4C874()
{
  sub_9D38();
  v1[16] = v2;
  v1[17] = v0;
  v1[14] = v3;
  v1[15] = v4;
  v1[18] = *(void *)(v2 + 16);
  uint64_t v5 = sub_7E910();
  v1[19] = v5;
  sub_9C80(v5);
  v1[20] = v6;
  v1[21] = sub_9CC8();
  uint64_t v7 = sub_7FBE0();
  v1[22] = v7;
  sub_9C80(v7);
  v1[23] = v8;
  v1[24] = sub_9CC8();
  sub_7E470();
  v1[25] = sub_9CC8();
  uint64_t v9 = sub_7EA70();
  v1[26] = v9;
  sub_9C80(v9);
  v1[27] = v10;
  v1[28] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_4C994()
{
  uint64_t v41 = v0;
  uint64_t v1 = (void *)sub_7E8E0();
  id v2 = [v1 _code];

  int v3 = sub_473A4((unint64_t)v2);
  if ((v3 - 3) >= 3)
  {
    if (v3 == 9)
    {
      uint64_t v8 = v0[23];
      uint64_t v7 = v0[24];
      uint64_t v10 = v0[21];
      uint64_t v9 = v0[22];
      uint64_t v11 = v0[19];
      uint64_t v12 = v0[20];
      uint64_t v13 = v0[15];
      uint64_t v14 = sub_7FBA0();
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v14, v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v13, v11);
      uint64_t v15 = sub_7FBD0();
      os_log_type_t v16 = sub_7FE30();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v19 = v0[23];
      uint64_t v18 = v0[24];
      uint64_t v20 = v0[22];
      if (v17)
      {
        uint64_t v39 = v0[22];
        os_log_type_t type = v16;
        uint64_t v21 = swift_slowAlloc();
        v40[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315650;
        uint64_t v22 = sub_803E0();
        v0[11] = sub_1CDF0(v22, v23, v40);
        sub_7FF60();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        uint64_t v24 = sub_803E0();
        v0[12] = sub_1CDF0(v24, v25, v40);
        sub_7FF60();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 22) = 2048;
        uint64_t v26 = (void *)sub_7E8E0();
        id v27 = [v26 _code];

        uint64_t v28 = sub_4F720();
        v29(v28);
        v0[13] = v27;
        sub_7FF60();
        _os_log_impl(&dword_0, v15, type, "%s received %s unknown code: %ld", (uint8_t *)v21, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v39);
      }
      else
      {
        uint64_t v32 = sub_4F720();
        v33(v32);

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      }
      type metadata accessor for HealthFlowError();
      swift_allocObject();
      uint64_t v34 = sub_E934(8);
      sub_9BBC();
      swift_allocError();
      *uint64_t v35 = v34;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_9D44();
      sub_4F704();
      __asm { BRAA            X1, X16 }
    }
    v0[29] = sub_7E8F0();
    uint64_t v30 = (void *)swift_task_alloc();
    v0[30] = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_4CE18;
    sub_4F704();
    return sub_4DFF4();
  }
  else
  {
    v0[32] = sub_7E8F0();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[33] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_4CF00;
    sub_4F704();
    return sub_4D584();
  }
}

uint64_t sub_4CE18()
{
  sub_9D38();
  sub_9C98();
  int v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[5] = v1;
  v3[6] = v5;
  v3[7] = v0;
  sub_DC68();
  uint64_t v6 = *v1;
  sub_19EF0();
  *uint64_t v7 = v6;
  v3[31] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4CF00()
{
  sub_9D38();
  sub_9C98();
  int v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[8] = v1;
  v3[9] = v5;
  v3[10] = v0;
  sub_DC68();
  uint64_t v6 = *v1;
  sub_19EF0();
  *uint64_t v7 = v6;
  v3[34] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4CFE8()
{
  sub_37080();
  sub_7E460();
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[17];
  sub_7EA20();
  v0[35] = v1;
  sub_9AE0((void *)(v2 + 248), *(void *)(v2 + 272));
  int v3 = (void *)swift_task_alloc();
  v0[36] = v3;
  *int v3 = v0;
  v3[1] = sub_4D1B0;
  uint64_t v4 = sub_4F690();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v4, v5, v6, v7, v8);
}

uint64_t sub_4D0CC()
{
  sub_37080();
  sub_7E430();
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[17];
  sub_7EA20();
  v0[35] = v1;
  sub_9AE0((void *)(v2 + 248), *(void *)(v2 + 272));
  int v3 = (void *)swift_task_alloc();
  v0[36] = v3;
  *int v3 = v0;
  v3[1] = sub_4D1B0;
  uint64_t v4 = sub_4F690();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v4, v5, v6, v7, v8);
}

uint64_t sub_4D1B0()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *int v3 = v2;
  uint64_t v4 = *v1;
  sub_19EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 296) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_4D28C()
{
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v4();
}

uint64_t sub_4D344()
{
  sub_37080();
  swift_release();
  sub_4F750();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v0();
}

uint64_t sub_4D3C4()
{
  sub_37080();
  swift_release();
  sub_4F750();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v0();
}

uint64_t sub_4D444()
{
  sub_37080();
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_4F750();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v4();
}

uint64_t sub_4D4E4()
{
  sub_37080();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2632C;
  sub_4F76C();
  return sub_4C874();
}

uint64_t sub_4D584()
{
  sub_9D38();
  *(void *)(v1 + 344) = v2;
  *(void *)(v1 + 352) = v0;
  *(unsigned char *)(v1 + 488) = v3;
  *(void *)(v1 + 336) = v4;
  sub_6A60(&qword_AC2C8);
  *(void *)(v1 + 360) = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v5, v6, v7);
}

void sub_4D610()
{
  swift_retain();
  uint64_t v1 = (void *)sub_7E740();
  if (v1
    && (v2 = v1, id v3 = [v1 displayAppName], v2, v3))
  {
    sub_7FC50();
    swift_release();

    sub_7FCA0();
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
  }
  else
  {
    swift_release();
    uint64_t v4 = 1;
  }
  uint64_t v5 = v0[45];
  uint64_t v6 = sub_7F830();
  sub_9B2C(v5, v4, 1, v6);
  uint64_t v7 = sub_D838(0, (unint64_t *)&qword_AC8F8);
  if (sub_2F914(v7))
  {
    uint64_t v8 = sub_D98C(v0[44], (uint64_t)(v0 + 22));
    uint64_t v9 = sub_2F8CC(v8, v0[25]);
    v0[46] = v9;
    sub_4F680(v9);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[47] = (uint64_t)v10;
    *uint64_t v10 = v0;
    v10[1] = sub_4DB08;
    sub_4F66C();
    sub_393C8();
  }
  else
  {
    uint64_t v12 = sub_D838(0, (unint64_t *)&qword_AC798);
    if (sub_2F914(v12))
    {
      sub_4F78C();
      uint64_t v14 = sub_D98C(v13 + 40, (uint64_t)(v0 + 17));
      uint64_t v15 = sub_2F8CC(v14, v0[20]);
      v0[49] = v15;
      sub_4F680(v15);
      os_log_type_t v16 = (void *)swift_task_alloc();
      v0[50] = (uint64_t)v16;
      *os_log_type_t v16 = v0;
      v16[1] = sub_4DC04;
      sub_4F66C();
      sub_6E430();
    }
    else
    {
      uint64_t v18 = sub_D838(0, (unint64_t *)&qword_AC818);
      if (sub_2F914(v18))
      {
        sub_4F78C();
        uint64_t v20 = sub_D98C(v19 + 80, (uint64_t)(v0 + 12));
        uint64_t v21 = sub_2F8CC(v20, v0[15]);
        v0[52] = v21;
        sub_4F680(v21);
        uint64_t v22 = (void *)swift_task_alloc();
        v0[53] = (uint64_t)v22;
        *uint64_t v22 = v0;
        v22[1] = sub_4DD00;
        sub_4F66C();
        sub_76690();
      }
      else
      {
        uint64_t v24 = sub_D838(0, (unint64_t *)&qword_ABEC8);
        if (sub_2F914(v24))
        {
          sub_4F78C();
          uint64_t v26 = sub_D98C(v25 + 120, (uint64_t)(v0 + 7));
          uint64_t v27 = sub_2F8CC(v26, v0[10]);
          v0[55] = v27;
          sub_4F680(v27);
          uint64_t v28 = (void *)swift_task_alloc();
          v0[56] = (uint64_t)v28;
          *uint64_t v28 = v0;
          v28[1] = sub_4DDFC;
          sub_4F66C();
          sub_7355C();
        }
        else
        {
          uint64_t v30 = sub_D838(0, (unint64_t *)&qword_AC898);
          if (sub_2F914(v30))
          {
            sub_4F78C();
            uint64_t v32 = sub_D98C(v31 + 160, (uint64_t)(v0 + 2));
            uint64_t v33 = sub_2F8CC(v32, v0[5]);
            v0[58] = v33;
            sub_4F680(v33);
            uint64_t v34 = (void *)swift_task_alloc();
            v0[59] = (uint64_t)v34;
            *uint64_t v34 = v0;
            v34[1] = sub_4DEF8;
            sub_4F66C();
            sub_70868();
          }
          else
          {
            sub_4F6DC();
            sub_4F66C();
          }
        }
      }
    }
  }
}

uint64_t sub_4DB08()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[27] = v1;
  v2[28] = v4;
  v2[29] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 384) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4DC04()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[30] = v1;
  v2[31] = v4;
  v2[32] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 408) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4DD00()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[33] = v1;
  v2[34] = v4;
  v2[35] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 432) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4DDFC()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[36] = v1;
  v2[37] = v4;
  v2[38] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 456) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4DEF8()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *id v3 = v2;
  v2[39] = v1;
  v2[40] = v4;
  v2[41] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 480) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4DFF4()
{
  sub_9D38();
  v1[43] = v2;
  v1[44] = v0;
  v1[42] = v3;
  sub_6A60(&qword_AC2C8);
  v1[45] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v4, v5, v6);
}

void sub_4E07C()
{
  swift_retain();
  uint64_t v2 = (void *)sub_7E740();
  if (v2
    && (v3 = v2, id v4 = [v2 displayAppName], v3, v4))
  {
    char v1 = sub_7FC50();
    swift_release();

    sub_7FCA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
  }
  else
  {
    swift_release();
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[45];
  uint64_t v7 = sub_7F830();
  sub_9B2C(v6, v5, 1, v7);
  uint64_t v8 = sub_D838(0, (unint64_t *)&qword_AC8F8);
  if (sub_2F914(v8))
  {
    uint64_t v9 = sub_D98C(v0[44], (uint64_t)(v0 + 22));
    sub_4F6B0(v9, v0[25]);
    uint64_t v10 = sub_DD04();
    v0[46] = v10;
    sub_4F738(v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[47] = (uint64_t)v11;
    *uint64_t v11 = v0;
    v11[1] = sub_4E598;
    sub_4F658(v1 & 1);
    sub_4F66C();
    sub_39B00();
  }
  else
  {
    uint64_t v13 = sub_D838(0, (unint64_t *)&qword_AC798);
    if (sub_2F914(v13))
    {
      sub_4F780();
      uint64_t v15 = sub_D98C(v14 + 40, (uint64_t)(v0 + 17));
      sub_4F6B0(v15, v0[20]);
      uint64_t v16 = sub_DD04();
      v0[49] = v16;
      sub_4F738(v16);
      uint64_t v17 = (void *)swift_task_alloc();
      v0[50] = (uint64_t)v17;
      *uint64_t v17 = v0;
      v17[1] = sub_4E774;
      sub_4F658(v1 & 1);
      sub_4F66C();
      sub_6EB68();
    }
    else
    {
      uint64_t v19 = sub_D838(0, (unint64_t *)&qword_AC818);
      if (sub_2F914(v19))
      {
        sub_4F780();
        uint64_t v21 = sub_D98C(v20 + 80, (uint64_t)(v0 + 12));
        sub_4F6B0(v21, v0[15]);
        uint64_t v22 = sub_DD04();
        v0[52] = v22;
        sub_4F738(v22);
        uint64_t v23 = (void *)swift_task_alloc();
        v0[53] = (uint64_t)v23;
        *uint64_t v23 = v0;
        v23[1] = sub_4E950;
        sub_4F658(v1 & 1);
        sub_4F66C();
        sub_76DB4();
      }
      else
      {
        uint64_t v25 = sub_D838(0, (unint64_t *)&qword_ABEC8);
        if (sub_2F914(v25))
        {
          sub_4F780();
          uint64_t v27 = sub_D98C(v26 + 120, (uint64_t)(v0 + 7));
          sub_4F6B0(v27, v0[10]);
          uint64_t v28 = sub_DD04();
          v0[55] = v28;
          sub_4F738(v28);
          uint64_t v29 = (void *)swift_task_alloc();
          v0[56] = (uint64_t)v29;
          *uint64_t v29 = v0;
          v29[1] = sub_4EB2C;
          sub_4F658(v1 & 1);
          sub_4F66C();
          sub_73C94();
        }
        else
        {
          uint64_t v31 = sub_D838(0, (unint64_t *)&qword_AC898);
          if (sub_2F914(v31))
          {
            sub_4F780();
            uint64_t v33 = sub_D98C(v32 + 160, (uint64_t)(v0 + 2));
            sub_4F6B0(v33, v0[5]);
            uint64_t v34 = sub_DD04();
            v0[58] = v34;
            sub_4F738(v34);
            uint64_t v35 = (void *)swift_task_alloc();
            v0[59] = (uint64_t)v35;
            *uint64_t v35 = v0;
            v35[1] = sub_4ED08;
            sub_4F66C();
            sub_70FD0();
          }
          else
          {
            sub_4F6DC();
            sub_4F66C();
          }
        }
      }
    }
  }
}

uint64_t sub_4E598()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[27] = v1;
  v2[28] = v4;
  v2[29] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 384) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4E694()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 176);
  swift_task_dealloc();
  uint64_t v1 = sub_DAD8();
  return v2(v1);
}

uint64_t sub_4E704()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 176);
  swift_task_dealloc();
  sub_9D44();
  return v1();
}

uint64_t sub_4E774()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[30] = v1;
  v2[31] = v4;
  v2[32] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 408) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4E870()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 136);
  swift_task_dealloc();
  uint64_t v1 = sub_DAD8();
  return v2(v1);
}

uint64_t sub_4E8E0()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 136);
  swift_task_dealloc();
  sub_9D44();
  return v1();
}

uint64_t sub_4E950()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[33] = v1;
  v2[34] = v4;
  v2[35] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 432) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4EA4C()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 96);
  swift_task_dealloc();
  uint64_t v1 = sub_DAD8();
  return v2(v1);
}

uint64_t sub_4EABC()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 96);
  swift_task_dealloc();
  sub_9D44();
  return v1();
}

uint64_t sub_4EB2C()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[36] = v1;
  v2[37] = v4;
  v2[38] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 456) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4EC28()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 56);
  swift_task_dealloc();
  uint64_t v1 = sub_DAD8();
  return v2(v1);
}

uint64_t sub_4EC98()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 56);
  swift_task_dealloc();
  sub_9D44();
  return v1();
}

uint64_t sub_4ED08()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[39] = v1;
  v2[40] = v4;
  v2[41] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_19EF0();
  *uint64_t v6 = v5;
  *(void *)(v7 + 480) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_4EE04()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = sub_DAD8();
  return v2(v1);
}

uint64_t sub_4EE74()
{
  sub_9D38();
  sub_2F854(*(void *)(v0 + 360));
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  swift_task_dealloc();
  sub_9D44();
  return v1();
}

uint64_t sub_4EEE4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t (*a4)(void))
{
  unsigned int v6 = a3;
  sub_D9F0(a2, a1);
  uint64_t result = a4(0);
  uint64_t v8 = a1 + *(int *)(result + 24);
  *(double *)uint64_t v8 = (double)v6;
  *(unsigned char *)(v8 + 8) = 0;
  return result;
}

uint64_t sub_4EF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_4F010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_4F0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_4F198()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_269F0;
  return sub_4C7D4();
}

uint64_t sub_4F248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_4F30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_269F0;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_4F3D0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_269F0;
  return sub_4D4E4();
}

uint64_t sub_4F480(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_36DC0;
  return sub_4C718(a1, a2);
}

uint64_t sub_4F524()
{
  return swift_getWitnessTable();
}

uint64_t sub_4F540()
{
  sub_4F744();
  return sub_4EEE4(v0, v1, v2, type metadata accessor for WorkoutStartErrorWithCodeParameters);
}

uint64_t sub_4F570()
{
  sub_4F744();
  return sub_4EEE4(v0, v1, v2, type metadata accessor for WorkoutResumeErrorWithCodeParameters);
}

uint64_t sub_4F5A0()
{
  sub_4F744();
  return sub_4EEE4(v0, v1, v2, type metadata accessor for WorkoutPauseErrorWithCodeParameters);
}

uint64_t sub_4F5D0()
{
  sub_4F744();
  return sub_4EEE4(v0, v1, v2, type metadata accessor for WorkoutEndErrorWithCodeParameters);
}

uint64_t sub_4F600()
{
  sub_4F744();
  return sub_4EEE4(v0, v1, v2, type metadata accessor for WorkoutCancelErrorWithCodeParameters);
}

uint64_t sub_4F658@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_4F680(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(unsigned char *)(result + 24) = v2;
  return result;
}

uint64_t sub_4F690()
{
  return *(void *)(v0 + 112);
}

BOOL sub_4F6B0(uint64_t a1, uint64_t a2)
{
  sub_9AE0(v2, a2);
  return sub_7F8A0();
}

uint64_t sub_4F6DC()
{
  return sub_801A0();
}

uint64_t sub_4F720()
{
  return v0;
}

uint64_t sub_4F738(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_4F750()
{
  return swift_task_dealloc();
}

uint64_t sub_4F76C()
{
  return v0;
}

uint64_t type metadata accessor for HealthWorkoutStartCATs()
{
  uint64_t result = qword_AEE80;
  if (!qword_AEE80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4F7E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4F820(uint64_t a1, uint64_t a2)
{
  return sub_4F874(a1, a2);
}

uint64_t sub_4F874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v8 - 8);
  sub_1BE08(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_37EE0(a1);
  return v10;
}

uint64_t sub_4F9DC()
{
  return type metadata accessor for HealthWorkoutStartCATs();
}

uint64_t sub_4F9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_4FB54(a1, a2, a3, a4, a5, (uint64_t)&unk_A19B8, (uint64_t)&unk_AEFA8);
}

uint64_t sub_4FA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_4FA28, 0, 0);
}

uint64_t sub_4FA28()
{
  sub_1B704();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v0[5] = [self bundleForClass:ObjCClassFromMetadata];
  sub_7E730();
  swift_allocObject();
  v0[6] = sub_7E720();
  char v2 = (void *)sub_1B73C();
  v0[7] = v2;
  *char v2 = v0;
  v2[1] = sub_5075C;
  unint64_t v3 = sub_1B770(18);
  return v4(v3);
}

uint64_t sub_4FB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_4FB54(a1, a2, a3, a4, a5, (uint64_t)&unk_A1990, (uint64_t)&unk_AEF90);
}

uint64_t sub_4FB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7FDC0();
  sub_9B2C((uint64_t)v13, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v7;
  v15[5] = a4;
  v15[6] = a5;
  swift_retain();
  swift_retain();
  sub_61330((uint64_t)v13, a7, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_4FC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_4FC60, 0, 0);
}

uint64_t sub_4FC60()
{
  sub_1B704();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v0[5] = [self bundleForClass:ObjCClassFromMetadata];
  sub_7E730();
  swift_allocObject();
  v0[6] = sub_7E720();
  char v2 = (void *)sub_1B73C();
  v0[7] = v2;
  *char v2 = v0;
  v2[1] = sub_4FD6C;
  unint64_t v3 = sub_1B770(23);
  return v4(v3);
}

uint64_t sub_4FD6C()
{
  sub_9D38();
  sub_9C98();
  char v2 = *(void **)(v1 + 40);
  uint64_t v3 = *v0;
  sub_19EF0();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  swift_release();
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t type metadata accessor for CancelWorkoutHandleIntentStrategy()
{
  return self;
}

uint64_t sub_4FE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_4FF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_4FF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_4FFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_4F9E4(a1, a2, a3, a4, a5);
}

uint64_t sub_50020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_5009C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_50118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_4FB34(a1, a2, a3, a4, a5);
}

uint64_t sub_5013C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_50188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_501EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_50240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for CancelWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

unint64_t sub_502B0()
{
  unint64_t result = qword_AEF80;
  if (!qword_AEF80)
  {
    type metadata accessor for CancelWorkoutHandleIntentStrategy();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_AEF80);
  }
  return result;
}

uint64_t sub_50300()
{
  sub_1B75C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_46678;
  uint64_t v2 = sub_1B71C();
  return sub_4FC3C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_503A4()
{
  sub_9D38();
  uint64_t v2 = v1;
  v0[25] = v3;
  v0[26] = v4;
  v0[23] = v5;
  v0[24] = v6;
  v0[22] = v7;
  v0[20] = sub_7E730();
  v0[21] = &protocol witness table for ResponseFactory;
  v0[17] = v2;
  swift_retain();
  return _swift_task_switch(sub_50434, 0, 0);
}

uint64_t sub_50434()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void *)v0[24];
  uint64_t v3 = v0[22];
  swift_bridgeObjectRetain();
  id v4 = v2;
  uint64_t v5 = sub_7FC10();
  v0[2] = v3;
  v0[3] = v1;
  v0[4] = v4;
  sub_D98C((uint64_t)(v0 + 17), (uint64_t)(v0 + 5));
  v0[10] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[27] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_50554;
  return sub_3708C((uint64_t)(v0 + 11), (uint64_t)(v0 + 2), (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_50554()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_50620, 0, 0);
}

uint64_t sub_50620()
{
  (*(void (**)(uint64_t))(v0 + 200))(v0 + 88);
  sub_19D20(v0 + 88);
  sub_19D80(v0 + 16);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_506B8()
{
  sub_1B75C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_4691C;
  uint64_t v2 = sub_1B71C();
  return sub_4FA04(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_50760(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_9FE30;
  v6._object = a2;
  unint64_t v4 = sub_801E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

unint64_t sub_507AC(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
    case 2:
      return result;
    case 3:
      unint64_t result = 0x756C61566C616F67;
      break;
    case 4:
      unint64_t result = 0x6E456E65704F7369;
      break;
    default:
      unint64_t result = 0x4E74756F6B726F77;
      break;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutVerb(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SlotNames(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x509C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotNames()
{
  return &type metadata for SlotNames;
}

uint64_t sub_509FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_65384(*a1, *a2);
}

Swift::Int sub_50A08()
{
  return sub_DFA4(*v0);
}

uint64_t sub_50A10(uint64_t a1)
{
  return sub_E130(a1, *v1);
}

Swift::Int sub_50A18(uint64_t a1)
{
  return sub_E66C(a1, *v1);
}

uint64_t sub_50A20@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_50760(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_50A50@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_507AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_50A80()
{
  unint64_t result = qword_AEFB0;
  if (!qword_AEFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AEFB0);
  }
  return result;
}

uint64_t sub_50ACC(uint64_t a1, void *a2)
{
  os_log_type_t v3 = sub_7FE10();
  unint64_t v4 = *(NSObject **)sub_7F9D0();
  if (os_log_type_enabled(v4, v3))
  {
    id v5 = a2;
    unsigned int v6 = v4;
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)BOOL v7 = 136315138;
    id v8 = [v5 typeName];
    uint64_t v9 = sub_7FC50();
    unint64_t v11 = v10;

    sub_1CDF0(v9, v11, &v13);
    sub_7FF60();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v6, v3, "Returning standard execution behavior for %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  sub_7E2E0();
  return sub_7E2D0();
}

uint64_t type metadata accessor for StrategyHelper()
{
  return self;
}

uint64_t type metadata accessor for WorkoutCATPatternsExecutor(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_AF050);
}

uint64_t sub_50CA4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_50CE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  BOOL v7 = (char *)&v15 - v6;
  sub_6A60(&qword_AC2D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_811A0;
  uint64_t v9 = (uint64_t *)(v8 + 48);
  *(void *)(v8 + 32) = 1953459315;
  *(void *)(v8 + 40) = 0xE400000000000000;
  sub_7434(v1, (uint64_t)v7, &qword_AC2C8);
  uint64_t v10 = sub_7F830();
  if (sub_6B0C((uint64_t)v7, 1, v10) == 1)
  {
    sub_7494((uint64_t)v7, &qword_AC2C8);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }
  else
  {
    *(void *)(v8 + 72) = v10;
    sub_74EC(v9);
    sub_7550();
    (*(void (**)(void))(v11 + 32))();
  }
  *(void *)(v8 + 80) = 1651664246;
  *(void *)(v8 + 88) = 0xE400000000000000;
  uint64_t v12 = type metadata accessor for WorkoutPromptForSlotValueParameters(0);
  sub_7434(v1 + *(int *)(v12 + 20), (uint64_t)v5, &qword_AC2C8);
  if (sub_6B0C((uint64_t)v5, 1, v10) == 1)
  {
    sub_7494((uint64_t)v5, &qword_AC2C8);
    *(_OWORD *)(v8 + 96) = 0u;
    *(_OWORD *)(v8 + 112) = 0u;
  }
  else
  {
    *(void *)(v8 + 120) = v10;
    sub_74EC((uint64_t *)(v8 + 96));
    sub_7550();
    (*(void (**)(void))(v13 + 32))();
  }
  return v8;
}

uint64_t sub_50EEC()
{
  sub_6A60(&qword_AC2D0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_831F0;
  *(void *)(v1 + 32) = 0x6E69577473726966;
  *(void *)(v1 + 40) = 0xEF657A6953776F64;
  sub_3B864(v0, (uint64_t)v16);
  sub_3B864((uint64_t)v16, (uint64_t)&v17);
  if (v18)
  {
    uint64_t v2 = 0;
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v2 = &type metadata for Double;
    uint64_t v3 = v17;
  }
  *(void *)(v1 + 72) = v2;
  strcpy((char *)(v1 + 80), "isConclusion");
  *(unsigned char *)(v1 + 93) = 0;
  *(_WORD *)(v1 + 94) = -5120;
  *(unsigned char *)(v1 + 96) = *(unsigned char *)(v0 + 9);
  *(void *)(v1 + 120) = &type metadata for Bool;
  strcpy((char *)(v1 + 128), "isFirstWindow");
  *(_WORD *)(v1 + 142) = -4864;
  *(unsigned char *)(v1 + 144) = *(unsigned char *)(v0 + 10);
  *(void *)(v1 + 168) = &type metadata for Bool;
  strcpy((char *)(v1 + 176), "isLastWindow");
  *(unsigned char *)(v1 + 189) = 0;
  *(_WORD *)(v1 + 190) = -5120;
  *(unsigned char *)(v1 + 192) = *(unsigned char *)(v0 + 11);
  *(void *)(v1 + 216) = &type metadata for Bool;
  *(void *)(v1 + 224) = 0xD000000000000016;
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 232) = 0x80000000000899B0;
  *(unsigned char *)(v1 + 240) = *(unsigned char *)(v0 + 12);
  *(void *)(v1 + 264) = &type metadata for Bool;
  *(void *)(v1 + 272) = 0x736D657469;
  *(void *)(v1 + 280) = 0xE500000000000000;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = sub_6A60(&qword_AF0B0);
  *(void *)(v1 + 288) = v4;
  *(void *)(v1 + 312) = v5;
  *(void *)(v1 + 320) = 0xD000000000000013;
  *(void *)(v1 + 328) = 0x80000000000899D0;
  sub_3B864(v0 + 24, (uint64_t)v15);
  sub_3B864((uint64_t)v15, (uint64_t)&v19);
  if (v20)
  {
    uint64_t v6 = 0;
    *(void *)(v1 + 344) = 0;
    *(void *)(v1 + 352) = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v6 = &type metadata for Double;
    uint64_t v7 = v19;
  }
  *(void *)(v1 + 336) = v7;
  *(void *)(v1 + 360) = v6;
  *(void *)(v1 + 368) = 0x6574496C61746F74;
  *(void *)(v1 + 376) = 0xEA0000000000736DLL;
  sub_3B864(v0 + 40, (uint64_t)v14);
  sub_3B864((uint64_t)v14, (uint64_t)&v21);
  if (v22)
  {
    uint64_t v8 = 0;
    *(void *)(v1 + 392) = 0;
    *(void *)(v1 + 400) = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v8 = &type metadata for Double;
    uint64_t v9 = v21;
  }
  *(void *)(v1 + 384) = v9;
  *(void *)(v1 + 408) = v8;
  *(void *)(v1 + 416) = 0x6953776F646E6977;
  *(void *)(v1 + 424) = 0xEA0000000000657ALL;
  sub_3B864(v0 + 56, (uint64_t)v13);
  sub_3B864((uint64_t)v13, (uint64_t)&v23);
  if (v24)
  {
    uint64_t v10 = 0;
    *(void *)(v1 + 440) = 0;
    *(void *)(v1 + 448) = 0;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = &type metadata for Double;
    uint64_t v11 = v23;
  }
  *(void *)(v1 + 432) = v11;
  *(void *)(v1 + 456) = v10;
  sub_3B8CC(v0);
  return v1;
}

uint64_t sub_511B0()
{
  sub_9D38();
  *(unsigned char *)(v0 + 72) = v1;
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = type metadata accessor for WorkoutPromptForSlotValueParameters(0);
  *(void *)(v0 + 32) = swift_task_alloc();
  return _swift_task_switch(sub_51244, 0, 0);
}

uint64_t sub_51244()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 72);
  uint64_t v4 = sub_7F830();
  sub_9B2C(v1, 1, 1, v4);
  sub_9B2C(v1 + *(int *)(v2 + 20), 1, 1, v4);
  sub_935C(v1, v3);
  uint64_t v5 = sub_50CE4();
  *(void *)(v0 + 40) = v5;
  uint64_t v6 = (void *)sub_1B73C();
  *(void *)(v0 + 48) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_51358;
  return v8(0xD00000000000001ALL, 0x800000000008A500, v5);
}

uint64_t sub_51358(uint64_t a1)
{
  sub_9C98();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_19EF0();
  *uint64_t v7 = v6;
  *(void *)(v5 + 56) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v8 = sub_514E8;
  }
  else
  {
    *(void *)(v5 + 64) = a1;
    uint64_t v8 = sub_51478;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_51478()
{
  sub_9D38();
  sub_51A70(v0[4]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[8];
  return v1(v2);
}

uint64_t sub_514E8()
{
  sub_9D38();
  sub_51A70(*(void *)(v0 + 32));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_51554(char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = a6;
  *(unsigned char *)(v6 + 84) = a4;
  *(unsigned char *)(v6 + 83) = a3;
  *(unsigned char *)(v6 + 82) = a2;
  *(unsigned char *)(v6 + 81) = a1;
  return _swift_task_switch(sub_51584, 0, 0);
}

uint64_t sub_51584()
{
  uint64_t v1 = *(void *)(v0 + 88);
  char v2 = *(unsigned char *)(v0 + 84);
  char v3 = *(unsigned char *)(v0 + 83);
  char v4 = *(unsigned char *)(v0 + 82);
  char v5 = *(unsigned char *)(v0 + 81);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(unsigned char *)(v0 + 25) = v5;
  *(unsigned char *)(v0 + 26) = v4;
  *(unsigned char *)(v0 + 27) = v3;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  uint64_t v6 = sub_50EEC();
  *(void *)(v0 + 104) = v6;
  uint64_t v7 = (void *)sub_1B73C();
  *(void *)(v0 + 112) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_51690;
  return v9(0xD000000000000019, 0x800000000008A4E0, v6);
}

uint64_t sub_51690(uint64_t a1)
{
  sub_9C98();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_19EF0();
  *uint64_t v7 = v6;
  *(void *)(v5 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_39368, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v8(a1);
  }
}

uint64_t sub_517BC()
{
  sub_9D38();
  char v3 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
     + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2F6C0;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v3)(0xD000000000000014, 0x800000000008A4C0, _swiftEmptyArrayStorage);
}

uint64_t sub_51878(uint64_t a1, uint64_t a2)
{
  return sub_518CC(a1, a2);
}

uint64_t sub_518CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v8 - 8);
  sub_7434(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_AC2C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v10;
}

uint64_t sub_51A48()
{
  return type metadata accessor for WorkoutCATPatternsExecutor(0);
}

uint64_t type metadata accessor for WorkoutPromptForSlotValueParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_AF118);
}

uint64_t sub_51A70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutPromptForSlotValueParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_51ACC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_7F830();
    if (sub_6B0C((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_6A60(&qword_AC2C8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_9B2C((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (sub_6B0C((uint64_t)v12, 1, v7))
    {
      uint64_t v13 = sub_6A60(&qword_AC2C8);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      sub_9B2C((uint64_t)v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_51C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F830();
  if (!sub_6B0C(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = sub_6B0C(v5, 1, v4);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v7(v5, v4);
  }
  return result;
}

char *sub_51D64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_6B0C((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_6A60(&qword_AC2C8);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    sub_9B2C((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_51EC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_9B2C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = sub_6B0C((uint64_t)&a1[v11], 1, v6);
  int v15 = sub_6B0C((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_6A60(&qword_AC2C8);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
  sub_9B2C((uint64_t)v12, 0, 1, v6);
  return a1;
}

char *sub_52134(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_6B0C((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_6A60(&qword_AC2C8);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    sub_9B2C((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_52298(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_9B2C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = sub_6B0C((uint64_t)&a1[v11], 1, v6);
  int v15 = sub_6B0C((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_6A60(&qword_AC2C8);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
  sub_9B2C((uint64_t)v12, 0, 1, v6);
  return a1;
}

uint64_t sub_52504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_52518);
}

uint64_t sub_52518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);

  return sub_6B0C(a1, a2, v4);
}

uint64_t sub_52564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_52578);
}

uint64_t sub_52578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);

  return sub_9B2C(a1, a2, a2, v4);
}

void sub_525C8()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_52654(uint64_t a1)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);

  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
}

_OWORD *sub_52694(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  long long v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

uint64_t *sub_52790(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *sub_527D4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t sub_527DC(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t sub_52850(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_52890(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutTCCAcceptanceFlowStrategyAsync()
{
  return sub_9C4C();
}

uint64_t sub_52904@<X0>(uint64_t a1@<X8>)
{
  sub_7EFA0();
  sub_6D54();
  __chkstk_darwin(v2);
  sub_755C();
  char v3 = sub_7EF50();
  sub_15528();
  v4();
  if (v3)
  {
    uint64_t v5 = sub_55AF4();
    v6(v5);
LABEL_4:
    uint64_t v10 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
    goto LABEL_5;
  }
  char v7 = sub_7EF40();
  uint64_t v8 = sub_55AF4();
  v9(v8);
  if (v7) {
    goto LABEL_4;
  }
  if ((sub_7EF30() & 1) == 0)
  {
    uint64_t v15 = sub_7E830();
    uint64_t v13 = a1;
    uint64_t v14 = 1;
    return sub_9B2C(v13, v14, 1, v15);
  }
  uint64_t v10 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
LABEL_5:
  uint64_t v11 = *v10;
  uint64_t v12 = sub_7E830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a1, v11, v12);
  uint64_t v13 = a1;
  uint64_t v14 = 0;
  uint64_t v15 = v12;
  return sub_9B2C(v13, v14, 1, v15);
}

uint64_t sub_52A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v109 = a1;
  uint64_t v106 = a2;
  uint64_t v2 = sub_6A60(&qword_AD9B0);
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_6A60(&qword_AC660);
  uint64_t v8 = sub_DC74(v7);
  __chkstk_darwin(v8);
  sub_F67C();
  sub_49A9C(v9);
  uint64_t v94 = sub_7EED0();
  sub_6D54();
  uint64_t v93 = v10;
  __chkstk_darwin(v11);
  sub_F67C();
  sub_49A9C(v12);
  uint64_t v97 = sub_7EFA0();
  sub_6D54();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_F67C();
  sub_49A9C(v16);
  uint64_t v17 = sub_7ED70();
  sub_6D54();
  uint64_t v98 = v18;
  __chkstk_darwin(v19);
  sub_F67C();
  sub_49A9C(v20);
  sub_7ED10();
  sub_6D54();
  uint64_t v104 = v22;
  uint64_t v105 = v21;
  __chkstk_darwin(v21);
  sub_15308();
  uint64_t v101 = v23;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v103 = (char *)v87 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v87 - v27;
  sub_7ED20();
  sub_6D54();
  uint64_t v107 = v30;
  uint64_t v108 = v29;
  __chkstk_darwin(v29);
  sub_755C();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = sub_7FBE0();
  sub_6D54();
  uint64_t v36 = v35;
  __chkstk_darwin(v37);
  sub_15308();
  uint64_t v100 = v38;
  __chkstk_darwin(v39);
  uint64_t v40 = sub_7FBB0();
  swift_beginAccess();
  uint64_t v41 = *(void *)(v36 + 16);
  uint64_t v91 = v40;
  uint64_t v90 = v36 + 16;
  uint64_t v89 = v41;
  sub_15528();
  v42();
  unint64_t v43 = sub_7FBD0();
  os_log_type_t v44 = sub_7FE20();
  BOOL v45 = os_log_type_enabled(v43, v44);
  uint64_t v88 = v6;
  uint64_t v99 = v17;
  if (v45)
  {
    v87[1] = v14;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v102 = v28;
    id v47 = (uint8_t *)v46;
    v112[0] = swift_slowAlloc();
    *(_DWORD *)id v47 = 136315138;
    uint64_t v111 = sub_1CDF0(0xD000000000000016, 0x800000000008A520, v112);
    sub_7FF60();
    _os_log_impl(&dword_0, v43, v44, "%s", v47, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    uint64_t v28 = v102;
    sub_9CB0();
  }

  uint64_t v48 = *(void (**)(void))(v36 + 8);
  sub_26A1C();
  v48();
  uint64_t v49 = v108;
  uint64_t v50 = v107;
  sub_7ECD0();
  int v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 88))(v33, v49);
  if (v51 != enum case for Parse.directInvocation(_:))
  {
    if (v51 != enum case for Parse.uso(_:))
    {
      sub_7E550();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v33, v49);
    }
    uint64_t v68 = sub_55B0C();
    v69(v68);
    uint64_t v71 = v98;
    uint64_t v70 = v99;
    uint64_t v72 = v96;
    sub_15294();
    v73();
    uint64_t v74 = v92;
    sub_7ED60();
    uint64_t v75 = sub_7EEC0();
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v74, v94);
    uint64_t v76 = v95;
    sub_6BB98(v75, v95);
    swift_bridgeObjectRelease();
    if (sub_6B0C(v76, 1, v97) == 1)
    {
      sub_D8DC(v76, &qword_AC660);
    }
    else
    {
      sub_15294();
      v79();
      uint64_t v80 = v88;
      sub_52904(v88);
      uint64_t v81 = sub_7E830();
      int v82 = sub_6B0C(v80, 1, v81);
      sub_D8DC(v80, &qword_AD9B0);
      if (v82 != 1)
      {
        sub_7E540();
        uint64_t v85 = sub_55B68();
        v86(v85);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v72, v70);
      }
      uint64_t v83 = sub_55B68();
      v84(v83);
    }
    sub_7E550();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v72, v70);
  }
  uint64_t v52 = sub_55B0C();
  v53(v52);
  uint64_t v54 = v104;
  uint64_t v55 = v105;
  sub_15294();
  v56();
  uint64_t v57 = *(void (**)(void))(v54 + 16);
  uint64_t v58 = (uint64_t)v103;
  sub_55B54();
  v57();
  if (sub_60DD8(v58) == 3)
  {
    uint64_t v109 = v36;
    swift_beginAccess();
    sub_15528();
    v59();
    uint64_t v60 = v101;
    uint64_t v102 = v28;
    sub_55B54();
    v57();
    uint64_t v61 = sub_7FBD0();
    os_log_type_t v62 = sub_7FE30();
    if (os_log_type_enabled(v61, v62))
    {
      os_log_type_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v108 = v34;
      uint64_t v111 = v64;
      *(_DWORD *)os_log_type_t v63 = 136315138;
      uint64_t v65 = sub_7ECF0();
      uint64_t v110 = sub_1CDF0(v65, v66, &v111);
      sub_7FF60();
      swift_bridgeObjectRelease();
      uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v67(v101, v55);
      _os_log_impl(&dword_0, v61, v62, "Unsupported DirectInvocation with identifier: %s", v63, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {
      uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v67(v60, v55);
    }

    sub_26A1C();
    v48();
    uint64_t v78 = v102;
    sub_7E550();
    return ((uint64_t (*)(char *, uint64_t))v67)(v78, v55);
  }
  else
  {
    sub_7E540();
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v28, v55);
  }
}

uint64_t sub_532C8()
{
  sub_9D38();
  v0[6] = v1;
  v0[7] = v2;
  uint64_t v3 = sub_6A60(&qword_AC660);
  sub_DC74(v3);
  v0[8] = sub_9CC8();
  uint64_t v4 = sub_7EED0();
  v0[9] = v4;
  sub_9C80(v4);
  v0[10] = v5;
  v0[11] = sub_9CC8();
  uint64_t v6 = sub_7EFA0();
  v0[12] = v6;
  sub_9C80(v6);
  v0[13] = v7;
  v0[14] = sub_9CC8();
  uint64_t v8 = sub_7ED70();
  v0[15] = v8;
  sub_9C80(v8);
  v0[16] = v9;
  v0[17] = sub_9CC8();
  uint64_t v10 = sub_7FBE0();
  v0[18] = v10;
  sub_9C80(v10);
  v0[19] = v11;
  v0[20] = sub_9CC8();
  uint64_t v12 = sub_6A60(&qword_AD9B0);
  sub_DC74(v12);
  v0[21] = sub_DBC0();
  v0[22] = swift_task_alloc();
  v0[23] = swift_task_alloc();
  uint64_t v13 = sub_7E830();
  v0[24] = v13;
  sub_9C80(v13);
  v0[25] = v14;
  v0[26] = sub_DBC0();
  v0[27] = swift_task_alloc();
  uint64_t v15 = sub_7ED10();
  v0[28] = v15;
  sub_9C80(v15);
  v0[29] = v16;
  v0[30] = sub_DBC0();
  v0[31] = swift_task_alloc();
  v0[32] = swift_task_alloc();
  uint64_t v17 = sub_7ED20();
  v0[33] = v17;
  sub_9C80(v17);
  v0[34] = v18;
  v0[35] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v19, v20, v21);
}

uint64_t sub_534F8()
{
  uint64_t v85 = v0;
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  uint64_t v3 = v0[33];
  sub_7ECD0();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v6 = v0 + 29;
    uint64_t v5 = v0[29];
    uint64_t v7 = v0[32];
    uint64_t v8 = v0[31];
    uint64_t v9 = v0[28];
    uint64_t v83 = v0 + 28;
    (*(void (**)(void, void))(v0[34] + 96))(v0[35], v0[33]);
    sub_15294();
    v10();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v11(v8, v7, v9);
    char v12 = sub_60DD8(v8);
    if (v12 == 2)
    {
      uint64_t v32 = v0[23];
      sub_9B2C(v32, 1, 1, v0[24]);
      sub_D8DC(v32, &qword_AD9B0);
    }
    else if (v12 != 3)
    {
      uint64_t v13 = v0[27];
      uint64_t v14 = v0[25];
      uint64_t v15 = v0[24];
      uint64_t v17 = v0[22];
      uint64_t v16 = v0[23];
      uint64_t v18 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
      if (v12) {
        uint64_t v18 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
      }
      (*(void (**)(void, void, void))(v14 + 104))(v0[23], *v18, v0[24]);
      sub_55AD8(v16);
      sub_15294();
      v19();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, v13, v15);
      sub_55AD8(v17);
      sub_7ECC0();
      uint64_t v20 = v0 + 32;
      goto LABEL_21;
    }
    uint64_t v82 = v0[32];
    uint64_t v33 = v0[30];
    uint64_t v34 = v0[28];
    uint64_t v36 = v0[19];
    uint64_t v35 = v0[20];
    uint64_t v37 = v11;
    uint64_t v38 = (void (*)(uint64_t))v0[18];
    uint64_t v39 = sub_7FBB0();
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, void (*)(uint64_t)))(v36 + 16))(v35, v39, v38);
    v37(v33, v82, v34);
    uint64_t v40 = sub_7FBD0();
    os_log_type_t v41 = sub_7FE30();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v44 = v0[19];
    uint64_t v43 = v0[20];
    uint64_t v45 = v0[18];
    if (v42)
    {
      uint64_t v78 = v0[28];
      uint64_t v80 = v0[20];
      uint64_t v46 = swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315138;
      uint64_t v38 = (void (*)(uint64_t))(v46 + 12);
      uint64_t v47 = sub_7ECF0();
      v0[5] = sub_1CDF0(v47, v48, &v84);
      sub_7FF60();
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_55B40();
      ((void (*)(uint64_t, uint64_t))(v46 + 12))(v49, v78);
      _os_log_impl(&dword_0, v40, v41, "Unsupported DirectInvocation with identifier: %s", (uint8_t *)v46, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v80, v45);
    }
    else
    {
      uint64_t v50 = sub_55B40();
      v38(v50);

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    }
    uint64_t v51 = v0[32];
    uint64_t v52 = *v83;
    sub_2DE78();
    uint64_t v53 = swift_allocError();
    sub_55AB8(v53, v54);
    ((void (*)(uint64_t, uint64_t))v38)(v51, v52);
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_9D44();
    goto LABEL_22;
  }
  uint64_t v22 = v0[34];
  uint64_t v21 = v0[35];
  uint64_t v23 = v0[33];
  if (v4 != enum case for Parse.uso(_:))
  {
    sub_2DE78();
    uint64_t v30 = swift_allocError();
    sub_55AB8(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    goto LABEL_19;
  }
  uint64_t v24 = v0[17];
  uint64_t v6 = v0 + 16;
  uint64_t v25 = v0[16];
  uint64_t v26 = v0[15];
  uint64_t v83 = v0 + 15;
  uint64_t v28 = v0[10];
  uint64_t v27 = v0[11];
  uint64_t v77 = v0[9];
  uint64_t v79 = v0[8];
  uint64_t v81 = v0[12];
  (*(void (**)(uint64_t, uint64_t))(v22 + 96))(v21, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v21, v26);
  sub_7ED60();
  uint64_t v29 = sub_7EEC0();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v77);
  sub_6BB98(v29, v79);
  swift_bridgeObjectRelease();
  if (sub_6B0C(v79, 1, v81) == 1)
  {
    sub_D8DC(v0[8], &qword_AC660);
    uint64_t v20 = v0 + 17;
LABEL_18:
    uint64_t v60 = *v20;
    uint64_t v61 = *v6;
    uint64_t v62 = *v83;
    sub_2DE78();
    uint64_t v63 = swift_allocError();
    sub_55AB8(v63, v64);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    goto LABEL_19;
  }
  uint64_t v55 = v0[24];
  uint64_t v56 = v0[21];
  sub_15294();
  v57();
  sub_52904(v56);
  uint64_t v20 = v0 + 17;
  if (sub_6B0C(v56, 1, v55) == 1)
  {
    uint64_t v58 = v0[21];
    sub_26A1C();
    v59();
    sub_D8DC(v58, &qword_AD9B0);
    goto LABEL_18;
  }
  uint64_t v67 = v0[25];
  uint64_t v66 = v0[26];
  uint64_t v68 = v0[24];
  uint64_t v69 = v0[22];
  sub_15294();
  v70();
  sub_15528();
  v71();
  sub_55AD8(v69);
  sub_7ECC0();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
LABEL_21:
  uint64_t v72 = *v20;
  uint64_t v73 = *v83;
  uint64_t v74 = *v6;
  sub_26A1C();
  v75();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v73);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v65 = (uint64_t (*)(void))v0[1];
LABEL_22:
  return v65();
}

uint64_t sub_53D34()
{
  sub_9D38();
  v1[18] = v2;
  v1[19] = v0;
  v1[16] = v3;
  v1[17] = v4;
  uint64_t v5 = sub_7E470();
  sub_DC74(v5);
  v1[20] = sub_9CC8();
  uint64_t v6 = sub_7EA70();
  v1[21] = v6;
  sub_9C80(v6);
  v1[22] = v7;
  v1[23] = sub_9CC8();
  uint64_t v8 = sub_7DA40();
  v1[24] = v8;
  sub_9C80(v8);
  v1[25] = v9;
  v1[26] = sub_9CC8();
  uint64_t v10 = sub_6A60((uint64_t *)&unk_AF430);
  sub_DC74(v10);
  v1[27] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_53E38()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = (void *)v0[19];
  sub_7E8D0();
  swift_allocObject();
  swift_retain();
  sub_7E8C0();
  sub_9AE0(v4, v4[3]);
  sub_7E390();
  sub_7E8B0();
  uint64_t v6 = v5;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v6)
  {
    sub_7F8A0();
    sub_7F8C0();
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = v0[27];
  uint64_t v9 = v0[19];
  uint64_t v10 = sub_7F8D0();
  sub_9B2C(v8, v7, 1, v10);
  sub_9AE0((void *)(v9 + 80), *(void *)(v9 + 104));
  sub_D98C(v9, (uint64_t)(v0 + 2));
  uint64_t v11 = sub_7FC10();
  v0[28] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[29] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_5402C;
  uint64_t v13 = v0[27];
  return TCCResponses.promptToEnableApp(appDisplayInfo:deviceState:catOverrides:)(v13, v0 + 2, v11);
}

uint64_t sub_5402C()
{
  sub_37080();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_19EF0();
  *uint64_t v5 = v4;
  uint64_t v7 = v6 + 16;
  *(void *)(v6 + 240) = v8;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_D8DC(v7, &qword_AF228);
  swift_bridgeObjectRelease();
  sub_9D50();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_54144()
{
  sub_37080();
  id v1 = sub_60F3C(*(void **)(v0 + 152), 0);
  uint64_t v2 = sub_54AD0();
  uint64_t v4 = v3;

  *(void *)(v0 + 256) = v2;
  *(void *)(v0 + 264) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_541FC;
  return static LabelTemplates.yes()();
}

uint64_t sub_541FC()
{
  sub_9D38();
  sub_9C98();
  uint64_t v3 = v2;
  sub_9D5C();
  *uint64_t v4 = v3;
  v3[12] = v1;
  v3[13] = v5;
  v3[14] = v6;
  v3[15] = v0;
  uint64_t v7 = *v1;
  sub_19EF0();
  void *v8 = v7;
  v3[35] = v9;
  v3[36] = v0;
  swift_task_dealloc();
  if (v0) {
    sub_55960(v3[32], v3[33]);
  }
  sub_9D50();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_542E8()
{
  sub_37080();
  id v1 = sub_60F3C(*(void **)(v0 + 152), 1u);
  uint64_t v2 = sub_54AD0();
  uint64_t v4 = v3;

  *(void *)(v0 + 296) = v2;
  *(void *)(v0 + 304) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_543A0;
  return static LabelTemplates.no()();
}

uint64_t sub_543A0()
{
  sub_37080();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_9C98();
  uint64_t v7 = v6;
  sub_9D5C();
  void *v8 = v7;
  uint64_t v9 = *v1;
  sub_19EF0();
  *uint64_t v10 = v9;
  v7[40] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = v7[37];
    unint64_t v12 = v7[38];
    sub_55960(v7[32], v7[33]);
    sub_55960(v11, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v7[13];
    v7[41] = v3;
    v7[42] = v5;
    v7[43] = v13;
  }
  sub_9D50();
  return _swift_task_switch(v14, v15, v16);
}

uint64_t sub_544BC()
{
  sub_37080();
  uint64_t v1 = *(void *)(v0 + 216);

  sub_D8DC(v1, (uint64_t *)&unk_AF430);
  sub_55B24();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v2();
}

uint64_t sub_54550()
{
  sub_37080();
  sub_D8DC(*(void *)(v0 + 216), (uint64_t *)&unk_AF430);
  sub_55B24();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v1();
}

uint64_t sub_545D8()
{
  uint64_t v16 = v0[43];
  uint64_t v17 = v0[41];
  uint64_t v1 = v0[37];
  unint64_t v15 = v0[38];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[32];
  unint64_t v4 = v0[33];
  uint64_t v18 = v0[42];
  uint64_t v20 = (void *)v0[30];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[18];
  sub_7E440();
  uint64_t v7 = (void *)swift_task_alloc();
  v7[2] = *(void *)(v6 + 16);
  v7[3] = *(void *)(v6 + 24);
  v7[4] = v5;
  sub_7EA20();
  swift_task_dealloc();
  sub_7E730();
  swift_allocObject();
  v0[44] = sub_7E720();
  v0[10] = &type metadata for HealthUIPluginModel;
  v0[11] = sub_559C4();
  uint64_t v8 = (void *)swift_allocObject();
  v0[7] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v16;
  v8[5] = v2;
  v8[6] = v1;
  v8[7] = v15;
  v8[8] = v18;
  v8[9] = v17;
  sub_6A60(&qword_AEA40);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_814D0;
  *(void *)(v9 + 32) = v20;
  uint64_t v21 = v9;
  sub_7FD40();
  v0[45] = v21;
  sub_55A60(v3, v4);
  swift_bridgeObjectRetain();
  sub_55A60(v1, v15);
  uint64_t v19 = (char *)&async function pointer to dispatch thunk of ResponseFactory.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)
      + async function pointer to dispatch thunk of ResponseFactory.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:);
  swift_bridgeObjectRetain();
  id v10 = v20;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[46] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_54814;
  uint64_t v12 = v0[23];
  uint64_t v13 = v0[16];
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))v19)(v13, v0 + 7, v21, v12);
}

uint64_t sub_54814()
{
  sub_37080();
  sub_9C98();
  sub_9D5C();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = *v0;
  sub_19EF0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v3);
  sub_9D50();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_54924()
{
  uint64_t v2 = *(void *)(v0 + 296);
  unint64_t v1 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 256);
  unint64_t v3 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 168);

  sub_55960(v4, v3);
  swift_bridgeObjectRelease();
  sub_55960(v2, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  sub_D8DC(v5, (uint64_t *)&unk_AF430);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_54A3C()
{
  sub_37080();
  uint64_t v1 = *(void *)(v0 + 216);

  sub_D8DC(v1, (uint64_t *)&unk_AF430);
  sub_55B24();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v2();
}

uint64_t sub_54AD0()
{
  id v1 = [v0 dictionary];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v8 = 0;
  id v3 = [self dataWithPropertyList:v1 format:200 options:0 error:&v8];
  id v4 = v8;
  if (!v3)
  {
    uint64_t v6 = v4;
    sub_7D9A0();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  uint64_t v5 = sub_7D9F0();

  return v5;
}

uint64_t sub_54BDC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_54CD0((uint64_t)v5);
  uint64_t v6 = sub_7E6E0();
  sub_9B2C((uint64_t)v5, 0, 1, v6);
  sub_7EA40();
  sub_9AE0(a2, a2[3]);
  sub_7E3D0();
  sub_7EA30();
  return sub_7EA60();
}

uint64_t sub_54CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v1 = sub_7DA30();
  uint64_t v41 = *(void *)(v1 - 8);
  uint64_t v42 = v1;
  __chkstk_darwin(v1);
  uint64_t v39 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_6A60(&qword_AF238);
  __chkstk_darwin(v3 - 8);
  uint64_t v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_7EE90();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_7F070();
  uint64_t v7 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_7EF20();
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_7EEF0();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_7EFA0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v35 - v22;
  sub_7E6D0();
  sub_7EF90();
  sub_7EEE0();
  sub_7EF80();
  sub_7EF10();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v38 = v17;
  v24(v21, v23, v17);
  sub_7EF00();
  sub_7F060();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v43 = v10;
  uint64_t v26 = v10;
  uint64_t v27 = v36;
  v25(v13, v15, v26);
  sub_7F040();
  uint64_t v28 = (uint64_t)v37;
  uint64_t v29 = v39;
  sub_7DA20();
  sub_7F0E0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v42);
  if (sub_6B0C(v28, 1, v27) == 1)
  {
    sub_7EE80();
    sub_D8DC(v28, &qword_AF238);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v40, v28, v27);
  }
  sub_7F030();
  sub_6A60(&qword_AD438);
  unint64_t v30 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_80D90;
  unint64_t v32 = v31 + v30;
  uint64_t v33 = v44;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 16))(v32, v9, v44);
  sub_7E650();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v33);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v38);
}

uint64_t sub_5522C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_52A64(a1, a2);
}

uint64_t sub_55244()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_269F0;
  return sub_532C8();
}

uint64_t sub_552E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_269F0;
  return ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeTCCConfirmationRejectedResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_553B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_269F0;
  return ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeTCCCancelledResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_5547C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_2632C;
  return ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_55558()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_269F0;
  return sub_53D34();
}

uint64_t sub_55608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_269F0;
  return RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnEmptyParse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_556D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_269F0;
  return RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnLowConfidence(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_557A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_269F0;
  return RequestTCCAcceptanceFlowStrategyAsync.makePromptForDeviceUnlock(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_5586C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_269F0;
  return RequestTCCAcceptanceFlowStrategyAsync.makeHandoffForAuthenticationResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_55938()
{
  return swift_getWitnessTable();
}

void *sub_55954()
{
  return &protocol witness table for SimpleConfirmationResponseProvider;
}

uint64_t sub_55960(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_559B8(uint64_t a1)
{
  return sub_54BDC(a1, *(void **)(v1 + 32));
}

unint64_t sub_559C4()
{
  unint64_t result = qword_AF230;
  if (!qword_AF230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF230);
  }
  return result;
}

uint64_t sub_55A10()
{
  sub_55960(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  sub_55960(*(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_55A60(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_55AB8(uint64_t a1, unsigned char *a2)
{
  *a2 = 3;
  return swift_willThrow();
}

uint64_t sub_55AD8(uint64_t a1)
{
  return sub_9B2C(a1, 0, 1, v1);
}

uint64_t sub_55AF4()
{
  return v0;
}

uint64_t sub_55B0C()
{
  return v0;
}

uint64_t sub_55B24()
{
  return swift_task_dealloc();
}

uint64_t sub_55B40()
{
  return v0;
}

uint64_t sub_55B68()
{
  return v0;
}

uint64_t type metadata accessor for HealthWorkoutPauseCATs()
{
  uint64_t result = qword_AF240;
  if (!qword_AF240) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_55BC4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_55C04(uint64_t a1, uint64_t a2)
{
  return sub_55C70(a1, a2);
}

uint64_t sub_55C28()
{
  return sub_55EA4();
}

uint64_t sub_55C4C(uint64_t a1)
{
  return sub_55EC8(a1);
}

uint64_t sub_55C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AC2C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  sub_6A60(&qword_AC2D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_811A0;
  uint64_t v11 = (uint64_t *)(v10 + 48);
  *(void *)(v10 + 32) = 1953459315;
  *(void *)(v10 + 40) = 0xE400000000000000;
  sub_7434(a1, (uint64_t)v9, &qword_AC2C8);
  uint64_t v12 = sub_7F830();
  sub_756C((uint64_t)v9);
  if (v13)
  {
    sub_7494((uint64_t)v9, &qword_AC2C8);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
  }
  else
  {
    *(void *)(v10 + 72) = v12;
    sub_74EC(v11);
    sub_7550();
    (*(void (**)(void))(v14 + 32))();
  }
  *(void *)(v10 + 80) = 0x4E74756F6B726F77;
  *(void *)(v10 + 88) = 0xEB00000000656D61;
  sub_7434(a2, (uint64_t)v7, &qword_AC2C8);
  sub_756C((uint64_t)v7);
  if (v13)
  {
    sub_7494((uint64_t)v7, &qword_AC2C8);
    *(_OWORD *)(v10 + 96) = 0u;
    *(_OWORD *)(v10 + 112) = 0u;
  }
  else
  {
    *(void *)(v10 + 120) = v12;
    sub_74EC((uint64_t *)(v10 + 96));
    sub_7550();
    (*(void (**)(void))(v15 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_55EA4()
{
  return sub_7F780();
}

uint64_t sub_55EC8(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  __chkstk_darwin(v2 - 8);
  sub_755C();
  uint64_t v5 = v4 - v3;
  sub_6A60(&qword_AC2D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_80D90;
  uint64_t v7 = (uint64_t *)(v6 + 48);
  *(void *)(v6 + 32) = 0x656D614E707061;
  *(void *)(v6 + 40) = 0xE700000000000000;
  sub_7434(a1, v5, &qword_AC2C8);
  uint64_t v8 = sub_7F830();
  sub_756C(v5);
  if (v9)
  {
    sub_7494(v5, &qword_AC2C8);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }
  else
  {
    *(void *)(v6 + 72) = v8;
    sub_74EC(v7);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  sub_7F780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_56038(uint64_t a1, uint64_t a2)
{
  return sub_5608C(a1, a2);
}

uint64_t sub_5608C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v9 - 8);
  sub_755C();
  sub_7434(a1, v11 - v10, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v12 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v12;
}

uint64_t sub_561F8()
{
  return type metadata accessor for HealthWorkoutPauseCATs();
}

void sub_56200()
{
  sub_15258();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_7FBE0();
  sub_6D54();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_755C();
  uint64_t v12 = v11 - v10;
  if (!v3)
  {
    v23[1] = sub_31DB4();
    sub_6A60(&qword_AC8A8);
    uint64_t v5 = sub_7FC60();
    uint64_t v3 = v13;
  }
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v3;
  sub_7FBA0();
  sub_9D08();
  sub_15528();
  v14();
  swift_retain();
  uint64_t v15 = sub_7FBD0();
  os_log_type_t v16 = sub_7FE20();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (_DWORD *)sub_269F4();
    v23[0] = sub_1FA2C();
    *uint64_t v17 = 136315138;
    uint64_t v19 = *(void *)(v1 + 16);
    unint64_t v18 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    sub_1CDF0(v19, v18, v23);
    sub_7FF60();
    swift_release();
    swift_bridgeObjectRelease();
    sub_5868C(&dword_0, v20, v21, "Starting to resolve apps for %s synchronously");
    sub_58658();
    sub_9CB0();
    sub_9CB0();

    sub_152A0();
    v22();
  }
  else
  {

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  }
  sub_15240();
}

void sub_56400()
{
  sub_15258();
  uint64_t v80 = v0;
  uint64_t v83 = v1;
  v79[3] = sub_7F6D0();
  sub_6D54();
  v79[2] = v2;
  __chkstk_darwin(v3);
  sub_F67C();
  sub_49A9C(v4);
  sub_7ED20();
  sub_6D54();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_755C();
  uint64_t v8 = sub_7FBE0();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v12);
  sub_49A8C();
  __chkstk_darwin(v13);
  sub_49A8C();
  __chkstk_darwin(v14);
  sub_49A8C();
  uint64_t v16 = __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)v79 - v17;
  uint64_t v19 = sub_7FBA0();
  sub_9D08();
  uint64_t v20 = v10;
  uint64_t v21 = *(void (**)(void, void, void))(v10 + 16);
  uint64_t v86 = v8;
  uint64_t v87 = v21;
  uint64_t v88 = v10 + 16;
  v21(v18, v19, v8);
  uint64_t v22 = sub_7FBD0();
  os_log_type_t v23 = sub_7FE20();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "Begin app disambiguation resolveApp", v24, 2u);
    sub_9CB0();
  }

  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  uint64_t v26 = v86;
  uint64_t v84 = v20 + 8;
  uint64_t v85 = v25;
  v25((uint64_t)v18, v86);
  sub_7ECD0();
  sub_11158();
  uint64_t v28 = v27;
  uint64_t v29 = *(void (**)(uint64_t))(v6 + 8);
  uint64_t v30 = sub_586C4();
  v29(v30);
  if (v28)
  {
    sub_9D08();
    sub_585CC();
    v31();
    swift_retain_n();
    unint64_t v32 = sub_7FBD0();
    os_log_type_t v33 = sub_7FE20();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (_DWORD *)sub_269F4();
      uint64_t v93 = sub_1FA2C();
      *uint64_t v34 = 136315138;
      uint64_t v92 = v28;
      sub_7F8B0();
      sub_58584(&qword_AC4A0, 255, (void (*)(uint64_t))&type metadata accessor for App);
      uint64_t v35 = sub_802A0();
      uint64_t v92 = sub_1CDF0(v35, v36, &v93);
      sub_7FF60();
      swift_release_n();
      swift_bridgeObjectRelease();
      sub_586AC(&dword_0, v32, v33, "Found app in intent, using that (%s)");
      sub_58658();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      swift_release_n();
    }
    sub_5862C();
    v51();
    sub_7E7F0();
    sub_7E7E0();
    swift_release();
  }
  else
  {
    sub_7ECD0();
    sub_12110();
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v41 = sub_586C4();
    v29(v41);
    sub_9D08();
    uint64_t v42 = v82;
    sub_585CC();
    v43();
    swift_bridgeObjectRetain_n();
    uint64_t v44 = sub_7FBD0();
    os_log_type_t v45 = sub_7FE20();
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v83 = v38;
    if (v46)
    {
      uint64_t v47 = (_DWORD *)sub_269F4();
      uint64_t v92 = sub_1FA2C();
      *uint64_t v47 = 136315138;
      v91[0] = v38;
      v91[1] = v40;
      sub_6A60(&qword_AF470);
      uint64_t v48 = sub_7FF30();
      v91[0] = sub_1CDF0(v48, v49, &v92);
      uint64_t v26 = v86;
      sub_7FF60();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_586AC(&dword_0, v44, v45, "Got a modality: %s");
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      uint64_t v50 = v82;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v50 = v42;
    }
    uint64_t v52 = v85;
    v85(v50, v26);
    swift_bridgeObjectRetain();
    sub_58420((uint64_t)&off_9FEC8);
    unint64_t v53 = sub_7F8E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_9D08();
    uint64_t v54 = v81;
    sub_585CC();
    v55();
    swift_bridgeObjectRetain_n();
    uint64_t v56 = sub_7FBD0();
    os_log_type_t v57 = sub_7FE20();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v82 = v40;
      *(_DWORD *)sub_269F4() = 134217984;
      if (v53 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = v81;
        uint64_t v58 = sub_801C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v58 = *(void *)((char *)&dword_10 + (v53 & 0xFFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease();
      v91[0] = v58;
      sub_7FF60();
      swift_bridgeObjectRelease();
      sub_586AC(&dword_0, v56, v57, "Found %ld apps");
      sub_9CB0();

      uint64_t v52 = v85;
      v85(v54, v26);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v52(v54, v26);
    }
    sub_7ED30();
    sub_9AE0(v91, v91[3]);
    sub_5861C();
    if (sub_7E3F0())
    {
      uint64_t v59 = v79[1];
      sub_7F940();
      char v60 = sub_7F910();
      uint64_t v61 = defaultWorkoutApp(for:workoutName:)(v59, v60);
      sub_152A0();
      v62();
      sub_9D08();
      uint64_t v63 = v79[4];
      sub_585CC();
      v64();
      swift_retain_n();
      uint64_t v65 = sub_7FBD0();
      os_log_type_t v66 = sub_7FE20();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (_DWORD *)sub_269F4();
        uint64_t v68 = sub_1FA2C();
        uint64_t v89 = v61;
        uint64_t v90 = v68;
        *uint64_t v67 = 136315138;
        sub_7F8B0();
        sub_58584(&qword_AC4A0, 255, (void (*)(uint64_t))&type metadata accessor for App);
        uint64_t v69 = sub_802A0();
        uint64_t v89 = sub_1CDF0(v69, v70, &v90);
        sub_7FF60();
        swift_release_n();
        swift_bridgeObjectRelease();
        sub_5868C(&dword_0, v71, v72, "Picked the default app for this:  %s");
        sub_58658();
        sub_9CB0();
        sub_9CB0();

        sub_5862C();
        v73();
      }
      else
      {

        swift_release_n();
        v52(v63, v26);
      }
      sub_22810();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_9D08();
      uint64_t v74 = v79[0];
      sub_585CC();
      v75();
      uint64_t v76 = sub_7FBD0();
      os_log_type_t v77 = sub_7FE20();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)sub_26B04();
        *(_WORD *)uint64_t v78 = 0;
        _os_log_impl(&dword_0, v76, v77, "Going to full disambiguation", v78, 2u);
        sub_9CB0();
      }

      v52(v74, v26);
      sub_22394();
      swift_bridgeObjectRelease();
    }
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v91);
  }
  sub_15240();
}

uint64_t sub_56E60(uint64_t a1, void (*a2)(void *))
{
  sub_7E570();
  swift_allocObject();
  uint64_t v3 = sub_585E4();
  sub_58584(&qword_AD448, 255, (void (*)(uint64_t))&type metadata accessor for CommandFailure);
  uint64_t v4 = swift_allocError();
  *uint64_t v5 = v3;
  v7[0] = v4;
  char v8 = 1;
  a2(v7);
  return sub_18AE8((uint64_t)v7, (uint64_t *)&unk_AF480);
}

void sub_56F30()
{
  sub_15258();
  uint64_t v2 = v1;
  uint64_t v3 = sub_7FBE0();
  sub_6D54();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_5863C();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v35 - v8;
  uint64_t v10 = sub_7ED20();
  sub_6D54();
  uint64_t v41 = v11;
  __chkstk_darwin(v12);
  sub_755C();
  sub_7ECD0();
  uint64_t v42 = v10;
  uint64_t v40 = sub_7FC60();
  unint64_t v14 = v13;
  uint64_t v15 = sub_7FBA0();
  sub_9D08();
  uint64_t v43 = v5;
  uint64_t v16 = *(void (**)(void, void, void))(v5 + 16);
  uint64_t v38 = v5 + 16;
  uint64_t v39 = v15;
  uint64_t v37 = v16;
  v16(v9, v15, v3);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_7FBD0();
  os_log_type_t v18 = sub_7FE20();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v36 = v0;
    uint64_t v19 = (_DWORD *)sub_269F4();
    uint64_t v20 = sub_1FA2C();
    v35[1] = v2;
    uint64_t v46 = v20;
    *uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1CDF0(v40, v14, &v46);
    uint64_t v0 = v36;
    sub_7FF60();
    swift_bridgeObjectRelease_n();
    sub_586AC(&dword_0, v17, v18, "Got disambiguation parse %s");
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = *(void (**)(char *, uint64_t))(v43 + 8);
  v21(v9, v3);
  sub_7ECD0();
  sub_11158();
  uint64_t v23 = v22;
  sub_152A0();
  v24();
  if (v23)
  {
    sub_7EAA0();
    sub_7EA90();
    swift_release();
  }
  else
  {
    sub_7ECD0();
    uint64_t v25 = sub_7FC60();
    unint64_t v27 = v26;
    sub_9D08();
    sub_15528();
    v28();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_7FBD0();
    uint64_t v30 = sub_7FE30();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      uint64_t v31 = sub_269F4();
      uint64_t v42 = v3;
      unint64_t v32 = (uint8_t *)v31;
      uint64_t v45 = sub_1FA2C();
      *(_DWORD *)unint64_t v32 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1CDF0(v25, v27, &v45);
      sub_7FF60();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v29, (os_log_type_t)v30, "Failed to find app after successful disambiguation from %s", v32, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      uint64_t v33 = v42;
      uint64_t v34 = v0;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v34 = v0;
      uint64_t v33 = v3;
    }
    v21(v34, v33);
    sub_7EAA0();
    sub_7EA80();
  }
  sub_15240();
}

void sub_57384()
{
  sub_15258();
  uint64_t v94 = v0;
  uint64_t v96 = v1;
  uint64_t v2 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v2 - 8);
  sub_F67C();
  sub_49A9C(v3);
  uint64_t v82 = sub_7E760();
  sub_6D54();
  uint64_t v81 = v4;
  __chkstk_darwin(v5);
  sub_F67C();
  sub_49A9C(v6);
  uint64_t v77 = sub_7ED80();
  sub_6D54();
  uint64_t v83 = v7;
  __chkstk_darwin(v8);
  sub_F67C();
  sub_49A9C(v9);
  uint64_t v87 = sub_7F870();
  sub_6D54();
  uint64_t v86 = v10;
  __chkstk_darwin(v11);
  sub_F67C();
  uint64_t v89 = v12;
  uint64_t v13 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v13);
  sub_15308();
  sub_49A8C();
  __chkstk_darwin(v14);
  uint64_t v16 = (void *)((char *)v75 - v15);
  uint64_t v85 = sub_7DA40();
  sub_6D54();
  uint64_t v84 = v17;
  __chkstk_darwin(v18);
  sub_F67C();
  sub_49A9C(v19);
  uint64_t v20 = sub_7FBE0();
  sub_6D54();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_5863C();
  uint64_t v25 = __chkstk_darwin(v24);
  unint64_t v27 = (char *)v75 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)v75 - v28;
  uint64_t v30 = sub_7FBA0();
  sub_9D08();
  uint64_t v31 = *(void *)(v22 + 16);
  uint64_t v93 = v30;
  uint64_t v92 = v22 + 16;
  uint64_t v91 = v31;
  sub_15528();
  v32();
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_7FBD0();
  os_log_type_t v34 = sub_7FE20();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v97 = v22;
  uint64_t v78 = v27;
  if (v35)
  {
    uint64_t v36 = sub_269F4();
    uint64_t v76 = v20;
    uint64_t v37 = (uint8_t *)v36;
    uint64_t v88 = (void (*)(char *, uint64_t))sub_1FA2C();
    v100[0] = (uint64_t)v88;
    *(_DWORD *)uint64_t v37 = 136315138;
    v75[1] = v37 + 4;
    sub_7F8B0();
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_7FD30();
    unint64_t v40 = v39;
    swift_bridgeObjectRelease();
    v104[0] = sub_1CDF0(v38, v40, v100);
    sub_7FF60();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v33, v34, "Making disambiguation prompt for apps: %s", v37, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    uint64_t v88 = *(void (**)(char *, uint64_t))(v97 + 8);
    v88(v29, v76);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v88 = *(void (**)(char *, uint64_t))(v22 + 8);
    v88(v29, v20);
  }
  sub_7ED30();
  sub_9AE0(v100, v101);
  sub_5861C();
  sub_7E390();
  uint64_t v41 = sub_7E880();
  sub_152A0();
  v42();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v100);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v104, v105);
  sub_5861C();
  sub_7E3E0();
  sub_7E890();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v100);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v104);
  sub_7F760();
  uint64_t v43 = sub_7F750();
  sub_6A60(&qword_ACBA0);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_80D90;
  sub_7F860();
  v100[0] = v44;
  sub_58584((unint64_t *)&unk_AF450, 255, (void (*)(uint64_t))&type metadata accessor for CATOption);
  sub_6A60(&qword_ACBA8);
  sub_18A2C();
  uint64_t v45 = v89;
  sub_7FFE0();
  type metadata accessor for HealthCATWrapper();
  swift_allocObject();
  sub_5B344(v43, v45);
  sub_5B5A4();
  swift_release();
  uint64_t v46 = v90;
  sub_18A80((uint64_t)v16, (uint64_t)v90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v100[0] = *v46;
    sub_6A60(&qword_ACBB0);
    swift_willThrowTypedImpl();
    swift_bridgeObjectRelease();
    sub_9D08();
    sub_15528();
    v47();
    uint64_t v48 = sub_7FBD0();
    os_log_type_t v49 = sub_7FE30();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)sub_26B04();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_0, v48, v49, "Something failed with the clarification views", v50, 2u);
      sub_9CB0();
    }

    sub_5862C();
    v51();
    sub_7E570();
    swift_allocObject();
    uint64_t v52 = sub_585E4();
    sub_58584(&qword_AD448, 255, (void (*)(uint64_t))&type metadata accessor for CommandFailure);
    uint64_t v53 = swift_allocError();
    uint64_t *v54 = v52;
    v100[0] = v53;
    char v103 = 1;
    uint64_t v55 = sub_58674();
    v56(v55);
    swift_release();
    swift_errorRelease();
    sub_18AE8((uint64_t)v100, (uint64_t *)&unk_AF480);
    os_log_type_t v57 = (uint64_t *)&unk_AF440;
    uint64_t v58 = v16;
  }
  else
  {
    uint64_t v89 = v41;
    uint64_t v59 = v81;
    uint64_t v60 = v79;
    uint64_t v61 = v82;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v81 + 32))(v79, v46, v82);
    sub_7ED30();
    sub_7ED30();
    sub_9AE0(v104, v105);
    sub_5861C();
    sub_7E3D0();
    uint64_t v62 = sub_7E6E0();
    uint64_t v63 = v80;
    sub_9B2C(v80, 1, 1, v62);
    uint64_t v99 = 0;
    memset(v98, 0, sizeof(v98));
    sub_7E5F0();
    swift_bridgeObjectRelease();
    sub_18AE8((uint64_t)v98, (uint64_t *)&unk_AF490);
    sub_18AE8(v63, &qword_AC3B8);
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v100);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v61);
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v104);
    sub_9D08();
    sub_15528();
    v64();
    uint64_t v65 = sub_7FBD0();
    os_log_type_t v66 = sub_7FE20();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)sub_26B04();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl(&dword_0, v65, v66, "Building dialog and sending success", v67, 2u);
      sub_9CB0();
    }

    sub_5862C();
    v68();
    uint64_t v69 = v77;
    uint64_t v101 = v77;
    uint64_t v102 = &protocol witness table for AceOutput;
    sub_74EC(v100);
    uint64_t v70 = v83;
    uint64_t v71 = v95;
    sub_15528();
    v72();
    char v103 = 0;
    uint64_t v73 = sub_58674();
    v74(v73);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v69);
    sub_18AE8((uint64_t)v16, (uint64_t *)&unk_AF440);
    os_log_type_t v57 = (uint64_t *)&unk_AF480;
    uint64_t v58 = v100;
  }
  sub_18AE8((uint64_t)v58, v57);
  sub_15240();
}

uint64_t sub_57E24()
{
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for WorkoutAppResolutionStrategy()
{
  return self;
}

void sub_57E80()
{
}

uint64_t sub_57EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_18744;
  return AppResolutionOnDeviceFlowStrategy.makeAppResolutionSuccessfulResponse(app:)(a1, a2, a3, a4);
}

uint64_t sub_57F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_18BE8;
  return AppResolutionOnDeviceFlowStrategy.makeAppResolutionUnsuccessfulResponse(reason:)(a1, a2, a3, a4);
}

uint64_t sub_58038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_18BE8;
  return AppResolutionOnDeviceFlowStrategy.makeErrorOutput(error:)(a1, a2, a3, a4);
}

uint64_t sub_580FC(uint64_t a1, void (*a2)(void *))
{
  return sub_56E60(a1, a2);
}

void sub_58128()
{
}

void sub_58140()
{
}

uint64_t sub_58168(uint64_t a1, uint64_t a2)
{
  return sub_58584(&qword_AF370, a2, (void (*)(uint64_t))type metadata accessor for WorkoutAppResolutionStrategy);
}

uint64_t sub_581B0(uint64_t a1, uint64_t a2)
{
  return sub_58584(qword_AF378, a2, (void (*)(uint64_t))type metadata accessor for WorkoutAppResolutionStrategy);
}

uint64_t sub_581F8()
{
  return sub_7FF60();
}

uint64_t sub_58220@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_58250(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_25;
  }
  sub_6A60(qword_AF3A0);
  uint64_t result = sub_80010();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    sub_80350();
    swift_bridgeObjectRetain();
    sub_7FCC0();
    uint64_t result = sub_80370();
    uint64_t v9 = -1 << v3[32];
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *((void *)v3 + 6);
      uint64_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = sub_802B0(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = sub_802B0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*((void *)v3 + 6) + 16 * v10);
    void *v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *((void *)v3 + 2);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *((void *)v3 + 2) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_58420(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_6A60(&qword_AF398);
  uint64_t result = sub_80010();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  while (v5 < *(void *)(a1 + 16))
  {
    Swift::UInt v7 = *(void *)(a1 + 32 + 8 * v5);
    sub_80350();
    sub_80360(v7);
    uint64_t result = sub_80370();
    uint64_t v8 = -1 << v3[32];
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
    uint64_t v12 = 1 << v9;
    uint64_t v13 = *((void *)v3 + 6);
    if (((1 << v9) & v11) != 0)
    {
      if (*(void *)(v13 + 8 * v9) == v7) {
        goto LABEL_13;
      }
      uint64_t v14 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v14;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          break;
        }
        if (*(void *)(v13 + 8 * v9) == v7) {
          goto LABEL_13;
        }
      }
    }
    *(void *)(v6 + 8 * v10) = v12 | v11;
    *(void *)(v13 + 8 * v9) = v7;
    uint64_t v15 = *((void *)v3 + 2);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_18;
    }
    *((void *)v3 + 2) = v17;
LABEL_13:
    if (++v5 == v4) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_58584(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_585E4()
{
  return sub_7E560();
}

uint64_t sub_5861C()
{
  return v0;
}

uint64_t sub_58658()
{
  return swift_arrayDestroy();
}

uint64_t sub_58674()
{
  return v0 - 200;
}

void sub_5868C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_586AC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_586C4()
{
  return v0;
}

uint64_t sub_586D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_58738(uint64_t a1)
{
  type metadata accessor for HealthNLIntent(0);
  sub_151D0();
  __chkstk_darwin(v2);
  sub_F67C();
  uint64_t v37 = v3;
  uint64_t v4 = sub_7F6B0();
  sub_6D54();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_F67C();
  uint64_t v38 = v8;
  uint64_t v40 = sub_7ED20();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_755C();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_7ECE0();
  sub_6D54();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_755C();
  uint64_t v21 = v20 - v19;
  os_log_type_t v22 = sub_7FE20();
  unint64_t v39 = (id *)sub_7F9D0();
  uint64_t v23 = *v39;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, a1, v15);
  if (os_log_type_enabled(v23, v22))
  {
    os_log_type_t v34 = v23;
    uint64_t v35 = v6;
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    sub_5B280((unint64_t *)&unk_AF4B0, (void (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v25 = sub_802A0();
    sub_1CDF0(v25, v26, &v41);
    sub_7FF60();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_5B330();
    v28(v27);
    _os_log_impl(&dword_0, v34, v22, "HealthTCC# received input: %s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v35;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v29 = sub_5B330();
    v30(v29);
  }
  sub_7ECD0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v14, v40) == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 96))(v14, v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v38, v14, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v37, v38, v4);
    if (qword_ABC58 != -1) {
      swift_once();
    }
    sub_5B280((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
    sub_7F310();
    switch((char)v41)
    {
      case 1:
        *(unsigned char *)(v36 + 72) = 0;
        goto LABEL_11;
      case 2:
        sub_7E530();
        break;
      case 3:
        sub_7FE20();
        id v33 = *v39;
        sub_7FAE0();

        sub_7E550();
        break;
      default:
        *(unsigned char *)(v36 + 72) = 1;
LABEL_11:
        sub_7E540();
        break;
    }
    sub_F314(v37);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v38, v4);
  }
  else
  {
    sub_7FE20();
    id v31 = *v39;
    sub_7FAE0();

    sub_7E550();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v14, v40);
  }
}

uint64_t sub_58C90(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_6A60(&qword_AD9B0);
  __chkstk_darwin(v4 - 8);
  sub_755C();
  uint64_t v7 = v6 - v5;
  sub_6A60((uint64_t *)&unk_AF4A0);
  sub_151D0();
  __chkstk_darwin(v8);
  sub_755C();
  uint64_t v11 = v10 - v9;
  int v12 = *(unsigned __int8 *)(v2 + 72);
  uint64_t v13 = sub_7E830();
  sub_151D0();
  uint64_t v15 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
  if (!v12) {
    uint64_t v15 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v7, *v15, v13);
  sub_7E830();
  sub_9B2C(v7, 0, 1, v13);
  sub_7ECC0();
  swift_storeEnumTagMultiPayload();
  a2(v11);
  return sub_1AA7C(v11, (uint64_t *)&unk_AF4A0);
}

uint64_t sub_58DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_58ECC(a3, a4);
}

uint64_t sub_58E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_7E6E0();
  sub_6D54();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_755C();
  uint64_t v13 = v12 - v11;
  sub_432E4();
  sub_592E0(a1, v13, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
}

uint64_t sub_58ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = a1;
  v5[3] = a2;
  v5[4] = v2;
  swift_retain();
  swift_retain();
  sub_7E780();

  return swift_release();
}

uint64_t sub_58F58(uint64_t a1, void (*a2)(long long *), uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v6 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_7ED80();
  uint64_t v25 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_7E760();
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AA20(a1, (uint64_t)v17, (uint64_t *)&unk_AF440);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)&long long v28 = *v17;
    char v31 = 1;
    swift_errorRetain();
    v27(&v28);
    swift_errorRelease();
  }
  else
  {
    uint64_t v18 = v17;
    uint64_t v19 = v24;
    (*(void (**)(char *, void *, uint64_t))(v12 + 32))(v14, v18, v24);
    sub_9AE0((void *)(a4 + 16), *(void *)(a4 + 40));
    sub_7E3D0();
    uint64_t v20 = sub_7E6E0();
    sub_9B2C((uint64_t)v8, 1, 1, v20);
    uint64_t v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
    sub_7E5D0();
    sub_1AA7C((uint64_t)&v28, (uint64_t *)&unk_AF490);
    sub_1AA7C((uint64_t)v8, &qword_AC3B8);
    *((void *)&v29 + 1) = v9;
    uint64_t v30 = &protocol witness table for AceOutput;
    uint64_t v21 = sub_74EC((uint64_t *)&v28);
    uint64_t v22 = v25;
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(v21, v11, v9);
    char v31 = 0;
    v27(&v28);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v19);
  }
  return sub_1AA7C((uint64_t)&v28, (uint64_t *)&unk_AF480);
}

uint64_t sub_592E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v44 = a2;
  uint64_t v46 = *v4;
  uint64_t v47 = sub_7E6E0();
  sub_6D54();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v43 = v10;
  uint64_t v45 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6A60((uint64_t *)&unk_AF430);
  sub_151D0();
  __chkstk_darwin(v11);
  sub_F67C();
  uint64_t v41 = v12;
  uint64_t v40 = sub_7DA40();
  sub_6D54();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_755C();
  uint64_t v18 = v17 - v16;
  uint64_t v48 = swift_allocBox();
  uint64_t v20 = v19;
  uint64_t v39 = sub_7F8D0();
  sub_9B2C(v20, 1, 1, v39);
  sub_7E8D0();
  swift_allocObject();
  swift_retain();
  sub_7E8C0();
  uint64_t v21 = v4[5];
  uint64_t v42 = v4 + 2;
  sub_9AE0(v4 + 2, v21);
  sub_7E390();
  sub_7E8B0();
  uint64_t v23 = v22;
  swift_release();
  uint64_t v24 = v18;
  uint64_t v25 = v20;
  uint64_t v26 = v41;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v24, v40);
  uint64_t v27 = a1;
  if (v23)
  {
    sub_7F8A0();
    sub_7F8C0();
    sub_9B2C(v26, 0, 1, v39);
    sub_5AD5C(v26, v25);
  }
  long long v28 = v45;
  uint64_t v29 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v45, v44, v47);
  unint64_t v30 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v31 = (v43 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = *(void *)(v46 + 80);
  *(void *)(v32 + 24) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v32 + v30, v28, v29);
  id v33 = (void *)(v32 + v31);
  uint64_t v35 = v49;
  uint64_t v34 = v50;
  *id v33 = v49;
  v33[1] = v34;
  sub_1AA20(v25, v26, (uint64_t *)&unk_AF430);
  sub_D98C((uint64_t)v42, (uint64_t)v51);
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = v35;
  v36[3] = v34;
  v36[4] = v27;
  v36[5] = v5;
  v36[6] = sub_5AC3C;
  v36[7] = v32;
  v36[8] = v48;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_7E4E0();
  swift_release();
  swift_release();
  sub_1AA7C((uint64_t)v51, &qword_AF228);
  sub_1AA7C(v26, (uint64_t *)&unk_AF430);
  return swift_release();
}

uint64_t sub_596B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(long long *), uint64_t a6)
{
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v22 = a1;
  uint64_t v23 = a4;
  uint64_t v8 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_7ED80();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_9AE0((void *)(a3 + 16), *(void *)(a3 + 40));
  v21[3] = sub_7E3D0();
  sub_6A60(&qword_AEA40);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_814D0;
  *(void *)(v15 + 32) = a2;
  *(void *)&long long v26 = v15;
  sub_7FD40();
  sub_9AE0((void *)(a3 + 16), *(void *)(a3 + 40));
  id v16 = a2;
  char v17 = sub_7E400();
  sub_7E750((v17 & 1) == 0);
  uint64_t v18 = sub_7E6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v23, v18);
  sub_9B2C((uint64_t)v10, 0, 1, v18);
  long long v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  sub_7E5E0();
  swift_bridgeObjectRelease();
  sub_1AA7C((uint64_t)&v26, (uint64_t *)&unk_AF490);
  sub_1AA7C((uint64_t)v10, &qword_AC3B8);
  *((void *)&v27 + 1) = v11;
  long long v28 = &protocol witness table for AceOutput;
  uint64_t v19 = sub_74EC((uint64_t *)&v26);
  (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v19, v14, v11);
  char v29 = 0;
  v25(&v26);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return sub_1AA7C((uint64_t)&v26, (uint64_t *)&unk_AF480);
}

uint64_t sub_59994(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, void *a5, void (*a6)(char *, id), uint64_t a7, uint64_t a8)
{
  uint64_t v102 = a7;
  uint64_t v101 = a6;
  uint64_t v100 = a5;
  uint64_t v104 = a4;
  uint64_t v103 = a3;
  uint64_t v105 = a2;
  uint64_t v10 = sub_6A60((uint64_t *)&unk_AF430);
  __chkstk_darwin(v10 - 8);
  uint64_t v96 = (uint64_t)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_7F870();
  id v97 = *(id *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v98 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7E760();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v93 = (char *)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v83 - v18;
  uint64_t v20 = sub_6A60((uint64_t *)&unk_AF440);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v99 = (char *)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v83 - v24;
  __chkstk_darwin(v23);
  long long v27 = (void *)((char *)v83 - v26);
  uint64_t v95 = a8;
  uint64_t v28 = swift_projectBox();
  sub_1AA20(a1, (uint64_t)v27, (uint64_t *)&unk_AF440);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v106[0] = *v27;
    char v107 = 1;
    swift_errorRetain();
    v105(v106);
    swift_errorRelease();
    return sub_1AA7C((uint64_t)v106, (uint64_t *)&unk_AF480);
  }
  else
  {
    uint64_t v89 = v28;
    uint64_t v90 = v15;
    unint64_t v30 = *(void (**)(char *, void *, uint64_t))(v15 + 32);
    uint64_t v94 = v19;
    uint64_t v91 = v14;
    v83[1] = v15 + 32;
    v83[0] = v30;
    v30(v19, v27, v14);
    sub_7F760();
    uint64_t v31 = sub_7F750();
    sub_6A60(&qword_ACBA0);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_80D90;
    sub_7F860();
    v106[0] = v32;
    sub_5B280((unint64_t *)&unk_AF450, (void (*)(uint64_t))&type metadata accessor for CATOption);
    sub_6A60(&qword_ACBA8);
    sub_18A2C();
    uint64_t v33 = (uint64_t)v98;
    sub_7FFE0();
    type metadata accessor for HealthCATWrapper();
    swift_allocObject();
    uint64_t v34 = sub_5B344(v31, v33);
    uint64_t v88 = sub_6A60(&qword_AF468);
    uint64_t inited = swift_initStackObject();
    long long v87 = xmmword_811A0;
    *(_OWORD *)(inited + 16) = xmmword_811A0;
    unint64_t v86 = (unint64_t)"healthFocusObject";
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x8000000000089CD0;
    *(_OWORD *)(inited + 48) = xmmword_84CE0;
    *(_OWORD *)(inited + 64) = xmmword_84CF0;
    long long v85 = xmmword_84CF0;
    *(void *)(inited + 80) = sub_7F890();
    *(void *)(inited + 88) = v36;
    sub_6A60(&qword_AF470);
    sub_5ADC4();
    uint64_t v37 = sub_7FC10();
    id v38 = sub_46CD0(v37);
    swift_bridgeObjectRelease();
    sub_5B574();
    uint64_t v98 = (char *)v20;
    uint64_t v39 = sub_80380();
    uint64_t v41 = v40;
    sub_1AA7C((uint64_t)v25, (uint64_t *)&unk_AF440);
    if (v41) {
      uint64_t v42 = v39;
    }
    else {
      uint64_t v42 = 0;
    }
    if (v41) {
      uint64_t v43 = v41;
    }
    else {
      uint64_t v43 = 0xE000000000000000;
    }
    sub_6A60(&qword_AEA40);
    uint64_t v44 = swift_allocObject();
    long long v84 = xmmword_814D0;
    *(_OWORD *)(v44 + 16) = xmmword_814D0;
    *(void *)(v44 + 32) = v38;
    v106[0] = v44;
    sub_7FD40();
    unint64_t v45 = v106[0];
    id v46 = objc_allocWithZone((Class)SAUIConfirmationOption);
    id v97 = v38;
    id v47 = [v46 init];
    uint64_t v48 = v42;
    uint64_t v49 = v47;
    sub_5AE30(v48, v43, v47);
    swift_bridgeObjectRetain();
    if (v45 >> 62)
    {
      sub_6A60(&qword_AEA48);
      uint64_t v50 = sub_801B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_802C0();
      uint64_t v50 = v45;
    }
    sub_5AE88(v50, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = swift_initStackObject();
    *(_OWORD *)(v51 + 16) = v87;
    unint64_t v52 = v86 | 0x8000000000000000;
    *(void *)(v51 + 32) = 0xD000000000000012;
    *(void *)(v51 + 40) = v52;
    long long v53 = v85;
    *(_OWORD *)(v51 + 48) = xmmword_84D00;
    *(_OWORD *)(v51 + 64) = v53;
    *(void *)(v51 + 80) = sub_7F890();
    *(void *)(v51 + 88) = v54;
    uint64_t v55 = sub_7FC10();
    id v56 = sub_46CD0(v55);
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v99;
    uint64_t v104 = v34;
    sub_5B58C();
    uint64_t v58 = sub_80380();
    uint64_t v60 = v59;
    sub_1AA7C(v57, (uint64_t *)&unk_AF440);
    if (v60) {
      uint64_t v61 = v58;
    }
    else {
      uint64_t v61 = 0;
    }
    if (!v60) {
      uint64_t v60 = 0xE000000000000000;
    }
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v84;
    *(void *)(v62 + 32) = v56;
    v106[0] = v62;
    sub_7FD40();
    unint64_t v63 = v106[0];
    id v64 = objc_allocWithZone((Class)SAUIConfirmationOption);
    uint64_t v65 = v56;
    id v66 = [v64 init];
    sub_5AE30(v61, v60, v66);
    swift_bridgeObjectRetain();
    if (v63 >> 62)
    {
      sub_6A60(&qword_AEA48);
      uint64_t v67 = sub_801B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_802C0();
      uint64_t v67 = v63;
    }
    uint64_t v68 = v90;
    uint64_t v69 = (void (*)(void))v105;
    uint64_t v70 = v89;
    sub_5AE88(v67, v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v71 = sub_46D74(v49, v66, 0);
    sub_9AE0(v100 + 2, v100[5]);
    if (sub_7E400())
    {
      swift_beginAccess();
      uint64_t v105 = (void (*)(void *))v49;
      uint64_t v72 = v96;
      sub_1AA20(v70, v96, (uint64_t *)&unk_AF430);
      uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
      uint64_t v100 = v65;
      uint64_t v74 = v93;
      uint64_t v75 = v91;
      v73(v93, v94, v91);
      unint64_t v76 = (*(unsigned __int8 *)(v68 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      uint64_t v77 = (void *)swift_allocObject();
      uint64_t v78 = v103;
      v77[2] = v69;
      v77[3] = v78;
      v77[4] = v95;
      v77[5] = v71;
      uint64_t v79 = (char *)v77 + v76;
      uint64_t v80 = v102;
      v77[6] = v101;
      v77[7] = v80;
      ((void (*)(char *, char *, uint64_t))v83[0])(v79, v74, v75);
      swift_retain();
      swift_retain();
      id v81 = v71;
      swift_retain();
      sub_7E500();

      swift_release();
      swift_release();
      sub_1AA7C(v72, (uint64_t *)&unk_AF430);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v94, v75);
    }
    else
    {
      uint64_t v82 = v94;
      v101(v94, v71);

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v82, v91);
    }
  }
}

uint64_t sub_5A430(uint64_t a1, uint64_t a2, char a3, void (*a4)(void *), void (*a5)(void *), uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = a8;
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v14 = sub_7E760();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_6A60((uint64_t *)&unk_AF430);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v37[0] = a1;
    char v38 = 1;
    swift_errorRetain();
    v36(v37);
    uint64_t v31 = (uint64_t *)&unk_AF480;
    unint64_t v30 = v37;
  }
  else
  {
    uint64_t v21 = a7;
    uint64_t v33 = a9;
    uint64_t v22 = swift_projectBox();
    swift_beginAccess();
    sub_1AA20(v22, (uint64_t)v20, (uint64_t *)&unk_AF430);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a10, v14);
    unint64_t v23 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v24 = (char *)swift_allocObject();
    uint64_t v25 = v35;
    *((void *)v24 + 2) = v36;
    *((void *)v24 + 3) = a5;
    uint64_t v36 = a5;
    uint64_t v26 = v21;
    *((void *)v24 + 4) = v21;
    *((void *)v24 + 5) = a1;
    uint64_t v28 = v33;
    uint64_t v27 = v34;
    *((void *)v24 + 6) = v25;
    *((void *)v24 + 7) = v27;
    *((void *)v24 + 8) = v28;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v24[v23], v17, v14);
    sub_5B110(a1, v25, 0);
    swift_retain();
    id v29 = v26;
    swift_retain();
    sub_7E4F0();
    swift_release();
    unint64_t v30 = v20;
    uint64_t v31 = (uint64_t *)&unk_AF430;
  }
  return sub_1AA7C((uint64_t)v30, v31);
}

uint64_t sub_5A6A0(uint64_t a1, uint64_t a2, char a3, void (*a4)(void *), uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, void *), uint64_t a10, uint64_t a11)
{
  if (a3)
  {
    v20[0] = a1;
    char v21 = 1;
    swift_errorRetain();
    a4(v20);
    return sub_1AA7C((uint64_t)v20, (uint64_t *)&unk_AF480);
  }
  else
  {
    uint64_t v16 = sub_7FC50();
    sub_5B120(v16, v17, a6);
    sub_5B184(a1, a2, a6);
    sub_5B1DC(a7, a8, a6);
    return a9(a11, a6);
  }
}

uint64_t sub_5A784()
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_5A7AC()
{
  sub_5A784();

  return _swift_deallocClassInstance(v0, 73, 7);
}

uint64_t type metadata accessor for HealthTCCAcceptanceFlowStrategy()
{
  return sub_9C4C();
}

uint64_t sub_5A7F8(uint64_t a1)
{
  return sub_58738(a1);
}

uint64_t sub_5A81C(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_58C90(a1, a2);
}

uint64_t sub_5A840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_58DFC(a1, a2, a3, a4);
}

uint64_t sub_5A864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_58E08(a1, a2, a3, a4);
}

uint64_t sub_5A888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for HealthTCCAcceptanceFlowStrategy();

  return RequestTCCAcceptanceFlowStrategy.makeRepromptOnEmptyParse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_5A8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for HealthTCCAcceptanceFlowStrategy();

  return RequestTCCAcceptanceFlowStrategy.makeRepromptOnLowConfidence(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_5A970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for HealthTCCAcceptanceFlowStrategy();

  return RequestTCCAcceptanceFlowStrategy.makePromptForDeviceUnlock(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_5A9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for HealthTCCAcceptanceFlowStrategy();

  return RequestTCCAcceptanceFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_5AA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for HealthTCCAcceptanceFlowStrategy();

  return RequestTCCAcceptanceFlowStrategy.makeHandoffResponseForAuthenticationResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_5AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for HealthTCCAcceptanceFlowStrategy();

  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_5AB50()
{
  return swift_getWitnessTable();
}

uint64_t sub_5AB6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_5AB88()
{
  sub_7E6E0();
  sub_6D54();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 32) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  uint64_t v8 = sub_5B2E4();
  v9(v8);
  swift_release();

  return _swift_deallocObject(v0, v7, v6);
}

uint64_t sub_5AC3C(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_7E6E0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(long long *))v9;
  uint64_t v11 = *(void *)(v9 + 8);

  return sub_596B0(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_5ACF0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_5AD48(uint64_t a1)
{
  return sub_59994(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void (**)(char *, id))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_5AD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60((uint64_t *)&unk_AF430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_5ADC4()
{
  unint64_t result = qword_AF478;
  if (!qword_AF478)
  {
    sub_10C00(&qword_AF470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF478);
  }
  return result;
}

void sub_5AE30(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_7FC40();
  [a3 setLabel:v4];
}

void sub_5AE88(uint64_t a1, void *a2)
{
  sub_6A60(&qword_AEA48);
  Class isa = sub_7FD10().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCommands:isa];
}

uint64_t sub_5AF00()
{
  sub_7E760();
  sub_6D54();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 64) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  swift_release();

  swift_release();
  uint64_t v8 = sub_5B2E4();
  v9(v8);

  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_5AFAC()
{
  uint64_t v4 = sub_5B310();
  sub_5B2D0(v4);
  sub_5B2FC();
  return sub_5A430(v2, v0, v3, v6, v7, v8, v9, v10, v11, v1 + v5);
}

uint64_t sub_5B004()
{
  sub_7E760();
  sub_6D54();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 72) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = sub_5B2E4();
  v9(v8);

  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_5B0B0()
{
  uint64_t v4 = sub_5B310();
  sub_5B2D0(v4);
  sub_5B2FC();
  return sub_5A6A0(v2, v0, v3, v6, v7, v8, v9, v10, v11, *(void *)(v1 + 64), v1 + v5);
}

uint64_t sub_5B110(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void sub_5B120(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_7FC40();
  swift_bridgeObjectRelease();
  [a3 setStyle:v4];
}

void sub_5B184(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_7FC40();
  [a3 setTitle:v4];
}

void sub_5B1DC(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_7FC40();
  [a3 setSubtitle:v4];
}

uint64_t sub_5B234()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_5B274(uint64_t a1)
{
  return sub_58F58(a1, *(void (**)(long long *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_5B280(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5B2D0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_5B2E4()
{
  return v0 + v1;
}

uint64_t sub_5B310()
{
  return sub_7E760();
}

uint64_t sub_5B330()
{
  return v0;
}

uint64_t sub_5B344(uint64_t a1, uint64_t a2)
{
  type metadata accessor for HealthCATWrapper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(void *)(v2 + 16) = [self bundleForClass:ObjCClassFromMetadata];
  *(void *)(v2 + 24) = a1;
  uint64_t v6 = v2 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin16HealthCATWrapper_options;
  sub_7F870();
  sub_151D0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, a2);
  return v2;
}

uint64_t sub_5B3EC()
{
  sub_7F7E0();
  uint64_t v2 = 0;
  memset(v1, 0, sizeof(v1));
  sub_7F7D0();
  return sub_1AA7C((uint64_t)v1, &qword_ADCB8);
}

uint64_t sub_5B484(char a1, char a2)
{
  sub_6A60(&qword_ACDA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_811A0;
  *(void *)(inited + 32) = 1953459315;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = sub_507AC(a1);
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 1651664246;
  *(void *)(inited + 88) = 0xE400000000000000;
  uint64_t v6 = sub_75D8(a2);
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 104) = v7;
  sub_7FC10();
  sub_5C67C();
  sub_5B3EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_5B574()
{
  return sub_5C65C();
}

uint64_t sub_5B58C()
{
  return sub_5C65C();
}

uint64_t sub_5B5A4()
{
  sub_7FC10();
  sub_5C67C();
  sub_5B3EC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_5B628()
{
  return sub_5C65C();
}

uint64_t sub_5B640()
{
  sub_7FC10();
  sub_5B3EC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_5B6CC(uint64_t a1, char a2, char a3)
{
  sub_6A60(&qword_AC2D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_83200;
  sub_5C6A0();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = 0xE700000000000000;
  swift_retain();
  uint64_t v8 = (void *)sub_7E740();
  if (v8
    && (uint64_t v9 = v8, v10 = [v8 displayAppName], v9, v10))
  {
    uint64_t v11 = sub_7FC50();
    uint64_t v13 = v12;

    swift_release();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v11;
    *(void *)(inited + 56) = v13;
  }
  else
  {
    swift_release();
    *(_OWORD *)(inited + 48) = 0u;
    *(_OWORD *)(inited + 64) = 0u;
  }
  *(void *)(inited + 80) = 1953459315;
  *(void *)(inited + 88) = 0xE400000000000000;
  *(void *)(inited + 96) = sub_507AC(a2);
  *(void *)(inited + 104) = v14;
  sub_5C68C();
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = v15;
  *(void *)(inited + 136) = 0xEB00000000646564;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = a3 & 1;
  sub_6A60(&qword_AC670);
  uint64_t v16 = sub_7FC10();
  sub_5C0C0(v16);
  swift_bridgeObjectRelease();
  sub_5C67C();
  sub_5B3EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_5B86C(char a1, void *a2)
{
  uint64_t v4 = sub_7FEB0();
  if (v5) {
    goto LABEL_6;
  }
  uint64_t v6 = v4;
  double v7 = *(double *)&v4;
  uint64_t v8 = (int *)[a2 workoutGoalUnitType];
  if (v8 == &dword_8)
  {
    sub_6A60(&qword_AC2D0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    uint64_t v13 = sub_5C664(inited, (__n128)xmmword_80D90);
    double v14 = 3600.0;
LABEL_9:
    v13[4].n128_u64[1] = (unint64_t)&type metadata for Double;
    v13[3].n128_f64[0] = v7 * v14;
    goto LABEL_10;
  }
  if (v8 == (int *)((char *)&dword_4 + 3))
  {
    sub_6A60(&qword_AC2D0);
    uint64_t v15 = (__n128 *)swift_initStackObject();
    uint64_t v13 = sub_5C664(v15, (__n128)xmmword_80D90);
    double v14 = 60.0;
    goto LABEL_9;
  }
  if (v8 != (int *)((char *)&dword_4 + 2))
  {
LABEL_6:
    uint64_t v11 = 0;
    goto LABEL_11;
  }
  sub_6A60(&qword_AC2D0);
  uint64_t v9 = (__n128 *)swift_initStackObject();
  id v10 = sub_5C664(v9, (__n128)xmmword_80D90);
  v10[4].n128_u64[1] = (unint64_t)&type metadata for Double;
  v10[3].n128_u64[0] = v6;
LABEL_10:
  sub_6A60(&qword_AC670);
  uint64_t v11 = sub_7FC10();
LABEL_11:
  sub_6A60(&qword_AC2D0);
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_84EC0;
  *(void *)(v16 + 32) = 1953459315;
  *(void *)(v16 + 40) = 0xE400000000000000;
  *(void *)(v16 + 48) = sub_507AC(a1);
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 72) = &type metadata for String;
  *(void *)(v16 + 80) = 0x6E6F697461727564;
  *(void *)(v16 + 88) = 0xE800000000000000;
  if (v11)
  {
    uint64_t v18 = sub_6A60(&qword_AF6F0);
  }
  else
  {
    uint64_t v18 = 0;
    *(void *)(v16 + 104) = 0;
    *(void *)(v16 + 112) = 0;
  }
  *(void *)(v16 + 96) = v11;
  *(void *)(v16 + 120) = v18;
  *(void *)(v16 + 128) = 0x4E74756F6B726F77;
  *(void *)(v16 + 136) = 0xEB00000000656D61;
  id v19 = [a2 workoutName];
  uint64_t v20 = v19;
  if (v19)
  {
    id v21 = [v19 spokenPhrase];

    uint64_t v20 = (void *)sub_7FC50();
    uint64_t v23 = v22;

    uint64_t v24 = &type metadata for String;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    *(void *)(v16 + 160) = 0;
  }
  *(void *)(v16 + 144) = v20;
  *(void *)(v16 + 152) = v23;
  *(void *)(v16 + 168) = v24;
  *(void *)(v16 + 176) = 0x657079546C616F67;
  *(void *)(v16 + 184) = 0xE800000000000000;
  *(void *)(v16 + 192) = sub_47474((unint64_t)[a2 workoutGoalUnitType]);
  *(void *)(v16 + 200) = v25;
  *(void *)(v16 + 216) = &type metadata for String;
  *(void *)(v16 + 224) = 0x756C61566C616F67;
  *(void *)(v16 + 232) = 0xE900000000000065;
  uint64_t v26 = sub_7FEB0();
  if (v27)
  {
    *(void *)(v16 + 264) = &type metadata for Int;
    *(void *)(v16 + 240) = 0;
  }
  else
  {
    char v38 = &type metadata for Double;
    *(void *)&long long v37 = v26;
    sub_1D498(&v37, (_OWORD *)(v16 + 240));
  }
  *(void *)(v16 + 272) = 0x6E6F697461636F6CLL;
  *(void *)(v16 + 280) = 0xE800000000000000;
  uint64_t v28 = (char *)[a2 workoutLocationType];
  if (v28 == (unsigned char *)&dword_0 + 2)
  {
    unint64_t v29 = 0xE600000000000000;
    uint64_t v30 = 0x726F6F646E69;
    goto LABEL_24;
  }
  if (v28 == (unsigned char *)&dword_0 + 1)
  {
    unint64_t v29 = 0xE700000000000000;
    uint64_t v30 = 0x726F6F6474756FLL;
LABEL_24:
    *(void *)(v16 + 312) = &type metadata for String;
    *(void *)(v16 + 288) = v30;
    *(void *)(v16 + 296) = v29;
    goto LABEL_26;
  }
  *(_OWORD *)(v16 + 288) = 0u;
  *(_OWORD *)(v16 + 304) = 0u;
LABEL_26:
  uint64_t v31 = (void *)(v16 + 336);
  sub_5C68C();
  *(void *)(v16 + 320) = v32;
  *(void *)(v16 + 328) = 0xEB00000000646564;
  char v33 = sub_7FE90();
  if (v33 == 2)
  {
    uint64_t v34 = 0;
    *uint64_t v31 = 0;
    *(void *)(v16 + 344) = 0;
    *(void *)(v16 + 352) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v31 = v33 & 1;
    uint64_t v34 = &type metadata for Bool;
  }
  *(void *)(v16 + 360) = v34;
  sub_6A60(&qword_AC670);
  uint64_t v35 = sub_7FC10();
  sub_5C0C0(v35);
  swift_bridgeObjectRelease();
  sub_5B3EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_5BC9C(uint64_t a1, char a2)
{
  sub_6A60(&qword_AC2D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_83200;
  strcpy((char *)(inited + 32), "isPunchingOut");
  *(_WORD *)(inited + 46) = -4864;
  *(unsigned char *)(inited + 48) = a2;
  char v5 = (_OWORD *)(inited + 96);
  sub_5C6A0();
  v6[9] = &type metadata for Bool;
  v6[10] = v7;
  v6[11] = 0xE700000000000000;
  if (a1)
  {
    swift_retain();
    uint64_t v8 = (void *)sub_7E740();
    if (v8
      && (uint64_t v9 = v8, v10 = [v8 displayAppName], v9, v10))
    {
      uint64_t v11 = sub_7FC50();
      uint64_t v13 = v12;

      swift_release();
      *(void *)(inited + 120) = &type metadata for String;
      *(void *)(inited + 96) = v11;
      *(void *)(inited + 104) = v13;
    }
    else
    {
      swift_release();
      *char v5 = 0u;
      *(_OWORD *)(inited + 112) = 0u;
    }
    *(void *)(inited + 128) = 0x5074737269467369;
    *(void *)(inited + 136) = 0xEF70704179747261;
    BOOL v14 = sub_7F8A0();
  }
  else
  {
    BOOL v14 = 0;
    *char v5 = 0u;
    *(_OWORD *)(inited + 112) = 0u;
    *(void *)(inited + 128) = 0x5074737269467369;
    *(void *)(inited + 136) = 0xEF70704179747261;
  }
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = v14;
  sub_6A60(&qword_AC670);
  uint64_t v15 = sub_7FC10();
  sub_5C0C0(v15);
  swift_bridgeObjectRelease();
  sub_5B3EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_5BE84(uint64_t a1, uint64_t a2, char a3)
{
  sub_6A60(&qword_AC2D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_83200;
  *(void *)(inited + 32) = 0x646F43726F727265;
  *(void *)(inited + 40) = 0xE900000000000065;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 80) = 0x656D614E707061;
  *(void *)(inited + 88) = 0xE700000000000000;
  if (!a1) {
    goto LABEL_6;
  }
  swift_retain();
  uint64_t v7 = (void *)sub_7E740();
  if (!v7
    || (uint64_t v8 = v7, v9 = [v7 displayAppName], v8, !v9))
  {
    swift_release();
LABEL_6:
    *(_OWORD *)(inited + 96) = 0u;
    *(_OWORD *)(inited + 112) = 0u;
    goto LABEL_7;
  }
  uint64_t v10 = sub_7FC50();
  uint64_t v12 = v11;

  swift_release();
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 104) = v12;
LABEL_7:
  *(void *)(inited + 128) = 0x656369766564;
  *(void *)(inited + 136) = 0xE600000000000000;
  sub_6A60(&qword_AF6E0);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_80D90;
  *(void *)(v13 + 32) = 0x616C507261437369;
  *(void *)(v13 + 40) = 0xE900000000000079;
  *(unsigned char *)(v13 + 48) = a3 & 1;
  uint64_t v14 = sub_7FC10();
  *(void *)(inited + 168) = sub_6A60(&qword_AF6E8);
  *(void *)(inited + 144) = v14;
  sub_6A60(&qword_AC670);
  uint64_t v15 = sub_7FC10();
  sub_5C0C0(v15);
  swift_bridgeObjectRelease();
  sub_5C67C();
  sub_5B3EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_5C0A4(uint64_t a1, uint64_t a2, char a3)
{
  if ((unint64_t)(a2 - 3) >= 3) {
    return sub_5BC9C(a1, 0);
  }
  else {
    return sub_5BE84(a1, a2, a3 & 1);
  }
}

void *sub_5C0C0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v37 = (unint64_t)(v3 + 63) >> 6;
  int64_t v6 = 0;
  uint64_t v33 = swift_bridgeObjectRetain() + 104;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v6 << 6);
      goto LABEL_6;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v12 >= v37)
    {
      int64_t v14 = v6;
LABEL_12:
      unint64_t v5 = 0;
      memset(v41, 0, sizeof(v41));
      int64_t v6 = v14;
      long long v40 = 0u;
      goto LABEL_13;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    if (!v13)
    {
      int64_t v14 = v6 + 1;
      if (v6 + 2 >= v37) {
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(v2 + 8 * (v6 + 2));
      if (v13)
      {
        int64_t v12 = v6 + 2;
      }
      else
      {
        int64_t v14 = v6 + 2;
        if (v6 + 3 >= v37) {
          goto LABEL_12;
        }
        unint64_t v13 = *(void *)(v2 + 8 * (v6 + 3));
        if (v13)
        {
          int64_t v12 = v6 + 3;
        }
        else
        {
          int64_t v12 = v6 + 4;
          int64_t v14 = v6 + 3;
          if (v6 + 4 >= v37) {
            goto LABEL_12;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v12);
          if (!v13)
          {
            while (v6 + 5 < v37)
            {
              unint64_t v13 = *(void *)(v33 + 8 * v6++);
              if (v13)
              {
                int64_t v12 = v6 + 4;
                goto LABEL_10;
              }
            }
            int64_t v14 = v37 - 1;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_10:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v8 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v6 = v12;
LABEL_6:
    uint64_t v9 = *(void *)(a1 + 56);
    uint64_t v10 = (void *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v11 = v10[1];
    *(void *)&long long v40 = *v10;
    *((void *)&v40 + 1) = v11;
    sub_F5DC(v9 + 32 * v8, (uint64_t)v41);
    swift_bridgeObjectRetain();
LABEL_13:
    sub_5C600((uint64_t)&v40, (uint64_t)&v42, &qword_AF6D0);
    uint64_t v15 = v43;
    if (!v43)
    {
      swift_release();
      return _swiftEmptyDictionarySingleton;
    }
    uint64_t v16 = v42;
    sub_5C600((uint64_t)&v44, (uint64_t)&v38, &qword_AC670);
    if (v39)
    {
      uint64_t v35 = v2;
      sub_1D498(&v38, &v40);
      sub_18B8C((uint64_t)&v40, (uint64_t)&v38);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v17 = sub_79684(v16, v15);
      uint64_t v19 = _swiftEmptyDictionarySingleton[2];
      BOOL v20 = (v18 & 1) == 0;
      Swift::Int v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_39;
      }
      char v22 = v18;
      unint64_t v34 = v17;
      sub_6A60(&qword_AF6D8);
      BOOL v23 = sub_80120(isUniquelyReferenced_nonNull_native, v21);
      unint64_t v24 = v34;
      if (v23)
      {
        unint64_t v25 = sub_79684(v16, v15);
        if ((v22 & 1) != (v26 & 1)) {
          goto LABEL_41;
        }
        unint64_t v24 = v25;
      }
      if (v22)
      {
        char v27 = (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v24);
        _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v27);
        sub_1D498(&v38, v27);
      }
      else
      {
        _swiftEmptyDictionarySingleton[(v24 >> 6) + 8] |= 1 << v24;
        uint64_t v28 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v24);
        *uint64_t v28 = v16;
        v28[1] = v15;
        sub_1D498(&v38, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v24));
        uint64_t v29 = _swiftEmptyDictionarySingleton[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_40;
        }
        _swiftEmptyDictionarySingleton[2] = v31;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)&v40);
      uint64_t v2 = v35;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1AA7C((uint64_t)&v38, &qword_AC670);
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = (void *)sub_802F0();
  __break(1u);
  return result;
}

uint64_t sub_5C44C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin16HealthCATWrapper_options;
  sub_7F870();
  sub_151D0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_5C4B8()
{
  sub_5C44C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_5C510()
{
  return type metadata accessor for HealthCATWrapper();
}

uint64_t type metadata accessor for HealthCATWrapper()
{
  uint64_t result = qword_AF4F0;
  if (!qword_AF4F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_5C560()
{
  uint64_t result = sub_7F870();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_5C600(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_6A60(a3);
  sub_151D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_5C65C()
{
  return sub_5B640();
}

__n128 *sub_5C664(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1935893875;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

unsigned char *storeEnumTagSinglePayload for HealthActivityUserMode(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x5C750);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthActivityUserMode()
{
  return &type metadata for HealthActivityUserMode;
}

unint64_t sub_5C78C()
{
  unint64_t result = qword_AF6F8;
  if (!qword_AF6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF6F8);
  }
  return result;
}

BOOL sub_5C7D8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_A0568;
  v6._object = a2;
  Swift::Int v4 = sub_801E0(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_5C820()
{
  return 0x6168636C65656877;
}

BOOL sub_5C84C@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_5C7D8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_5C884@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_5C820();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_5C8AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_5C9B4();
  unint64_t v5 = sub_5CA00();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_5C918()
{
  unint64_t result = qword_AF700;
  if (!qword_AF700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF700);
  }
  return result;
}

unint64_t sub_5C968()
{
  unint64_t result = qword_AF708;
  if (!qword_AF708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF708);
  }
  return result;
}

unint64_t sub_5C9B4()
{
  unint64_t result = qword_AF710;
  if (!qword_AF710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF710);
  }
  return result;
}

unint64_t sub_5CA00()
{
  unint64_t result = qword_AF718;
  if (!qword_AF718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF718);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HealthActivityLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5CB18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthActivityLocation()
{
  return &type metadata for HealthActivityLocation;
}

unint64_t sub_5CB54()
{
  unint64_t result = qword_AF720;
  if (!qword_AF720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF720);
  }
  return result;
}

uint64_t sub_5CBA0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_A05A0;
  v6._object = a2;
  unint64_t v4 = sub_801E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_5CBEC(char a1)
{
  return *(void *)&aIndoor_2[8 * a1];
}

uint64_t sub_5CC0C()
{
  return sub_654B0();
}

Swift::Int sub_5CC18()
{
  return sub_DFF0();
}

uint64_t sub_5CC20()
{
  return sub_E2B8();
}

Swift::Int sub_5CC28()
{
  return sub_E450();
}

uint64_t sub_5CC30@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_5CBA0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_5CC60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_5CBEC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_5CC8C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_5CD94();
  unint64_t v5 = sub_5CDE0();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_5CCF8()
{
  unint64_t result = qword_AF728;
  if (!qword_AF728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF728);
  }
  return result;
}

unint64_t sub_5CD48()
{
  unint64_t result = qword_AF730;
  if (!qword_AF730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF730);
  }
  return result;
}

unint64_t sub_5CD94()
{
  unint64_t result = qword_AF738;
  if (!qword_AF738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF738);
  }
  return result;
}

unint64_t sub_5CDE0()
{
  unint64_t result = qword_AF740;
  if (!qword_AF740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF740);
  }
  return result;
}

uint64_t sub_5CE2C(unsigned __int8 a1)
{
  if (a1 > 8u) {
    return 0;
  }
  else {
    return qword_85310[(char)a1];
  }
}

uint64_t getEnumTagSinglePayload for HealthMagnitudeUnit(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEB)
  {
    if (a2 + 21 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 21) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 22;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v5 = v6 - 22;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthMagnitudeUnit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5CFA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthMagnitudeUnit()
{
  return &type metadata for HealthMagnitudeUnit;
}

unint64_t sub_5CFE4()
{
  unint64_t result = qword_AF748;
  if (!qword_AF748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF748);
  }
  return result;
}

uint64_t sub_5D030()
{
  unint64_t v0 = sub_802D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16) {
    return 22;
  }
  else {
    return v0;
  }
}

unint64_t sub_5D084(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 1701603693;
      goto LABEL_8;
    case 2:
      unint64_t result = 0x6574656D6F6C696BLL;
      break;
    case 3:
      unint64_t result = 0x73726574656DLL;
      break;
    case 4:
      unint64_t result = 1952802150;
      break;
    case 5:
      uint64_t v3 = 1685217657;
LABEL_8:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
      break;
    case 6:
      unint64_t result = 0x6E6F68746172616DLL;
      break;
    case 7:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 8:
      unint64_t result = 0x656C756F6ALL;
      break;
    case 9:
      unint64_t result = 0x6C756F6A6F6C696BLL;
      break;
    case 10:
      return result;
    case 11:
      unint64_t result = 0x7265702074656566;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0x65702073656C696DLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000014;
      break;
    case 15:
      unint64_t result = 0x70206574756E696DLL;
      break;
    case 16:
      unint64_t result = 0x6D6172676F6C696BLL;
      break;
    case 17:
      unint64_t result = 1835102823;
      break;
    case 18:
      unint64_t result = 0x646E756F70;
      break;
    case 19:
      unint64_t result = 7172194;
      break;
    case 20:
      unint64_t result = 1885697139;
      break;
    case 21:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      unint64_t result = 1751346793;
      break;
  }
  return result;
}

uint64_t sub_5D2F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_6551C(*a1, *a2);
}

Swift::Int sub_5D300()
{
  return sub_E030(*v0);
}

uint64_t sub_5D308(uint64_t a1)
{
  return sub_E30C(a1, *v1);
}

Swift::Int sub_5D310(uint64_t a1)
{
  return sub_E438(a1, *v1);
}

uint64_t sub_5D318@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_5D030();
  *a1 = result;
  return result;
}

unint64_t sub_5D348@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_5D084(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_5D374(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_5D47C();
  unint64_t v5 = sub_5D4C8();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

unint64_t sub_5D3E0()
{
  unint64_t result = qword_AF750;
  if (!qword_AF750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF750);
  }
  return result;
}

unint64_t sub_5D430()
{
  unint64_t result = qword_AF758;
  if (!qword_AF758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF758);
  }
  return result;
}

unint64_t sub_5D47C()
{
  unint64_t result = qword_AF760;
  if (!qword_AF760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF760);
  }
  return result;
}

unint64_t sub_5D4C8()
{
  unint64_t result = qword_AF768;
  if (!qword_AF768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF768);
  }
  return result;
}

uint64_t sub_5D514@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for FlowConfigModel;
  a1[4] = (uint64_t)&protocol witness table for FlowConfigModel;
  *a1 = swift_allocObject();
  return sub_7F970();
}

uint64_t sub_5D5C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_7FBE0();
  sub_6D54();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  BOOL v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v17 = 0;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v14 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  a1[3] = (uint64_t)&type metadata for FlowConfigModel;
  a1[4] = (uint64_t)&protocol witness table for FlowConfigModel;
  *a1 = swift_allocObject();
  sub_7F970();
  type metadata accessor for FlowRouterX();
  uint64_t v8 = sub_7FBB0();
  sub_9D08();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v2);
  return sub_7FB20();
}

uint64_t sub_5D730(uint64_t a1)
{
  uint64_t v242 = a1;
  sub_7FB50();
  sub_6D54();
  uint64_t v233 = v3;
  uint64_t v234 = v2;
  __chkstk_darwin(v2);
  sub_15308();
  uint64_t v228 = v4;
  sub_152AC();
  __chkstk_darwin(v5);
  sub_49AF0();
  uint64_t v222 = v6;
  sub_152AC();
  __chkstk_darwin(v7);
  sub_154F0();
  uint64_t v214 = v8;
  sub_15378();
  uint64_t v224 = sub_7ED20();
  sub_6D54();
  uint64_t v219 = v9;
  __chkstk_darwin(v10);
  sub_F67C();
  uint64_t v218 = v11;
  sub_15378();
  uint64_t v221 = type metadata accessor for ExecuteOnRemoteDeviceFlow();
  __chkstk_darwin(v221);
  sub_F67C();
  uint64_t v220 = v12;
  uint64_t v13 = sub_6A60(qword_AC3D8);
  __chkstk_darwin(v13 - 8);
  sub_F67C();
  uint64_t v231 = v14;
  sub_15378();
  uint64_t v15 = sub_7F6D0();
  sub_6D54();
  uint64_t v241 = v16;
  __chkstk_darwin(v17);
  sub_15308();
  uint64_t v215 = v18;
  sub_152AC();
  __chkstk_darwin(v19);
  sub_49AF0();
  uint64_t v237 = v20;
  sub_152AC();
  __chkstk_darwin(v21);
  sub_49AF0();
  v255 = v22;
  sub_152AC();
  __chkstk_darwin(v23);
  sub_154F0();
  uint64_t v256 = v24;
  sub_15378();
  uint64_t v232 = sub_7F6E0();
  sub_6D54();
  v254 = v25;
  __chkstk_darwin(v26);
  sub_15308();
  uint64_t v236 = v27;
  sub_152AC();
  __chkstk_darwin(v28);
  sub_154F0();
  uint64_t v226 = v29;
  sub_15378();
  uint64_t v30 = type metadata accessor for FlowRouterX();
  uint64_t v31 = v30 - 8;
  __chkstk_darwin(v30);
  sub_F67C();
  v235 = (void *)v32;
  sub_15378();
  sub_7FBE0();
  sub_6D54();
  uint64_t v248 = v33;
  uint64_t v249 = v34;
  __chkstk_darwin(v33);
  sub_15308();
  uint64_t v227 = v35;
  sub_152AC();
  __chkstk_darwin(v36);
  sub_49AF0();
  uint64_t v223 = v37;
  sub_152AC();
  __chkstk_darwin(v38);
  sub_49AF0();
  uint64_t v238 = v39;
  sub_152AC();
  __chkstk_darwin(v40);
  sub_154F0();
  id v253 = v41;
  sub_15378();
  uint64_t v42 = sub_7FB40();
  sub_6D54();
  uint64_t v44 = v43;
  __chkstk_darwin(v45);
  sub_15308();
  uint64_t v240 = v46;
  sub_152AC();
  __chkstk_darwin(v47);
  sub_49AF0();
  uint64_t v230 = v48;
  sub_152AC();
  __chkstk_darwin(v49);
  sub_49AF0();
  uint64_t v217 = v50;
  sub_152AC();
  __chkstk_darwin(v51);
  long long v53 = (char *)v209 - v52;
  sub_7FB10();
  sub_6D54();
  uint64_t v250 = v55;
  uint64_t v251 = v54;
  __chkstk_darwin(v54);
  sub_15308();
  uint64_t v239 = v56;
  sub_152AC();
  __chkstk_darwin(v57);
  sub_49AF0();
  v229 = v58;
  sub_152AC();
  __chkstk_darwin(v59);
  sub_49AF0();
  v216 = v60;
  sub_152AC();
  uint64_t v62 = __chkstk_darwin(v61);
  __chkstk_darwin(v62);
  id v64 = (char *)v209 - v63;
  uint64_t v65 = *(int *)(v31 + 28);
  v252 = v1;
  id v66 = (char *)v1 + v65;
  sub_7FB30();
  sub_7FAF0();
  uint64_t v67 = *(void (**)(uint64_t, char *, uint64_t))(v44 + 16);
  uint64_t v244 = v44 + 16;
  v245 = v66;
  v243 = v67;
  sub_15528();
  v68();
  uint64_t v69 = sub_7FB30();
  os_signpost_type_t v70 = sub_7FE70();
  char v71 = sub_7FF10();
  uint64_t v257 = v15;
  if (v71)
  {
    uint64_t v72 = v44;
    uint64_t v73 = v42;
    uint64_t v74 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v74 = 0;
    os_signpost_id_t v75 = sub_7FB00();
    _os_signpost_emit_with_name_impl(&dword_0, v69, v70, v75, "makeFlow", "", v74, 2u);
    uint64_t v42 = v73;
    uint64_t v44 = v72;
    uint64_t v15 = v257;
    sub_9CB0();
  }

  sub_15528();
  v76();
  sub_7FB80();
  swift_allocObject();
  uint64_t v77 = sub_7FB70();
  uint64_t v79 = *(void (**)(char *, uint64_t))(v44 + 8);
  uint64_t v78 = v44 + 8;
  v79(v53, v42);
  uint64_t v80 = v252;
  char v81 = sub_5EC28();
  v246 = (void (*)(uint64_t, uint64_t))v79;
  v247 = v64;
  if (v81)
  {
    uint64_t v82 = sub_7FBB0();
    sub_9D08();
    uint64_t v83 = *(void *)(v249 + 16);
    uint64_t v239 = v249 + 16;
    uint64_t v240 = v82;
    uint64_t v228 = v83;
    sub_15528();
    v84();
    uint64_t v85 = (uint64_t)v80;
    unint64_t v86 = v235;
    sub_5ED50(v85, (uint64_t)v235);
    long long v87 = sub_7FBD0();
    os_log_type_t v88 = sub_7FE20();
    int v89 = v88;
    BOOL v90 = os_log_type_enabled(v87, v88);
    uint64_t v212 = v42;
    uint64_t v213 = v78;
    uint64_t v225 = v77;
    if (v90)
    {
      LODWORD(v211) = v89;
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      uint64_t v210 = swift_slowAlloc();
      v261[0] = v210;
      *(_DWORD *)uint64_t v91 = 136315138;
      v209[1] = v91 + 4;
      uint64_t v92 = v86[4];
      sub_9AE0(v86, v86[3]);
      uint64_t v93 = sub_5F560();
      v94(v93, v92);
      sub_9AE0(v259, v260);
      sub_7E3A0();
      uint64_t v95 = sub_7FC60();
      unint64_t v97 = v96;
      _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v259);
      v259[0] = sub_1CDF0(v95, v97, v261);
      sub_7FF60();
      swift_bridgeObjectRelease();
      sub_5EE5C((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FlowRouterX);
      _os_log_impl(&dword_0, v87, (os_log_type_t)v211, "Input origin is: %s", v91, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {
      sub_5EE5C((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FlowRouterX);
    }

    v235 = *(void **)(v249 + 8);
    sub_26A1C();
    v98();
    sub_6A60(&qword_AF770);
    uint64_t v108 = v254;
    uint64_t v109 = v254[9];
    unint64_t v110 = (*((unsigned __int8 *)v254 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v254 + 80);
    uint64_t v111 = swift_allocObject();
    *(_OWORD *)(v111 + 16) = xmmword_83200;
    unint64_t v112 = v111 + v110;
    os_log_type_t v113 = (void (*)(void))v108[13];
    sub_5F550();
    v113();
    sub_5F550();
    v113();
    id v253 = (id)(v112 + 2 * v109);
    sub_5F550();
    v113();
    uint64_t v114 = v252[4];
    sub_9AE0(v252, v252[3]);
    uint64_t v115 = sub_5F560();
    v116(v115, v114);
    sub_9AE0(v259, v260);
    sub_7E3A0();
    sub_5EE14(&qword_AF778, (void (*)(uint64_t))&type metadata accessor for InputOrigin);
    if (sub_5F508() & 1) != 0 || (sub_5F508() & 1) != 0 || (sub_5F508())
    {
      uint64_t v117 = sub_5F528();
      v118(v117);
      swift_bridgeObjectRelease();
      _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v259);
      sub_9AE0(v252, v252[3]);
      uint64_t v119 = sub_5F4E4();
      v120(v119);
      uint64_t v121 = sub_1FA58(v242, (uint64_t)v259);
      _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v259);
      sub_9D08();
      sub_15528();
      v122();
      swift_bridgeObjectRetain_n();
      os_signpost_id_t v123 = sub_7FBD0();
      int v124 = sub_7FE20();
      if (os_log_type_enabled(v123, (os_log_type_t)v124))
      {
        LODWORD(v226) = v124;
        uint64_t v125 = (_DWORD *)swift_slowAlloc();
        uint64_t v211 = swift_slowAlloc();
        v259[0] = v211;
        uint64_t v232 = (uint64_t)v125;
        _DWORD *v125 = 136315138;
        uint64_t v126 = *(void *)(v121 + 16);
        uint64_t v236 = v121;
        if (v126)
        {
          uint64_t v210 = (uint64_t)v123;
          v261[0] = (uint64_t)_swiftEmptyArrayStorage;
          sub_4B830();
          uint64_t v127 = *(void **)(v241 + 16);
          unint64_t v128 = v121 + ((*(unsigned __int8 *)(v241 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v241 + 80));
          id v253 = *(id *)(v241 + 72);
          v254 = v127;
          uint64_t v129 = (void (**)(uint64_t, uint64_t))(v241 + 8);
          do
          {
            uint64_t v130 = v256;
            uint64_t v131 = (void (*)(void (*)(void), uint64_t, uint64_t))v254;
            ((void (*)(uint64_t, unint64_t, uint64_t))v254)(v256, v128, v15);
            v131(v255, v130, v15);
            uint64_t v132 = sub_7FC60();
            uint64_t v134 = v133;
            (*v129)(v130, v15);
            uint64_t v135 = v261[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_4B830();
              uint64_t v135 = v261[0];
            }
            unint64_t v136 = *(void *)(v135 + 16);
            if (v136 >= *(void *)(v135 + 24) >> 1)
            {
              sub_4B830();
              uint64_t v135 = v261[0];
            }
            *(void *)(v135 + 16) = v136 + 1;
            uint64_t v137 = v135 + 16 * v136;
            *(void *)(v137 + 32) = v132;
            *(void *)(v137 + 40) = v134;
            v128 += (unint64_t)v253;
            --v126;
            uint64_t v15 = v257;
          }
          while (v126);
          os_signpost_id_t v123 = v210;
        }
        v138 = (uint8_t *)v232;
        uint64_t v139 = sub_7FD30();
        unint64_t v141 = v140;
        swift_bridgeObjectRelease();
        uint64_t v142 = sub_1CDF0(v139, v141, v259);
        sub_5F594(v142);
        sub_7FF60();
        uint64_t v121 = v236;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v123, (os_log_type_t)v226, "Destinations in priority order for request: %s", v138, 0xCu);
        swift_arrayDestroy();
        sub_9CB0();
        sub_9CB0();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_26A1C();
      v143();
      uint64_t v144 = v237;
      uint64_t v145 = v241;
      uint64_t v146 = v231;
      sub_6BBB0(v121, v231);
      swift_bridgeObjectRelease();
      int v147 = sub_6B0C(v146, 1, v15);
      uint64_t v148 = v252;
      if (v147 == 1)
      {
        sub_5EDB4(v146);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32))(v144, v146, v15);
        sub_9AE0(v148, v148[3]);
        uint64_t v149 = sub_5F4E4();
        v150(v149);
        uint64_t v151 = v256;
        sub_7F940();
        _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v259);
        sub_5EE14(&qword_AC4B0, (void (*)(uint64_t))&type metadata accessor for DeviceIdiom);
        char v152 = sub_7FC30();
        uint64_t v154 = (void *)(v145 + 8);
        uint64_t v153 = *(void (**)(void))(v145 + 8);
        sub_5F544();
        v153();
        if ((v152 & 1) == 0)
        {
          v255 = v153;
          sub_9D08();
          sub_15528();
          v171();
          v173 = *(void **)(v145 + 16);
          uint64_t v172 = v145 + 16;
          uint64_t v174 = v215;
          v254 = v173;
          ((void (*)(uint64_t, uint64_t, uint64_t))v173)(v215, v144, v15);
          uint64_t v175 = sub_7FBD0();
          os_log_type_t v176 = sub_7FE20();
          id v253 = v175;
          LODWORD(v240) = v176;
          BOOL v177 = os_log_type_enabled(v175, v176);
          v252 = v154;
          if (v177)
          {
            uint64_t v178 = (uint8_t *)swift_slowAlloc();
            uint64_t v239 = swift_slowAlloc();
            v259[0] = v239;
            *(_DWORD *)uint64_t v178 = 136315138;
            ((void (*)(uint64_t, uint64_t, uint64_t))v254)(v256, v174, v257);
            uint64_t v179 = sub_7FC60();
            uint64_t v181 = sub_1CDF0(v179, v180, v259);
            sub_5F594(v181);
            uint64_t v182 = v242;
            sub_7FF60();
            uint64_t v15 = v257;
            swift_bridgeObjectRelease();
            sub_5F544();
            v183();
            id v184 = v253;
            _os_log_impl(&dword_0, (os_log_t)v253, (os_log_type_t)v240, "Executing request on remote %s", v178, 0xCu);
            swift_arrayDestroy();
            sub_9CB0();
            uint64_t v151 = v256;
            sub_9CB0();

            uint64_t v185 = v182;
            sub_26A1C();
            v186();
          }
          else
          {
            sub_5F544();
            v189();

            sub_26A1C();
            v190();
            uint64_t v185 = v242;
          }
          uint64_t v241 = v172;
          v191 = (void (*)(void))v254;
          ((void (*)(uint64_t, uint64_t, uint64_t))v254)(v151, v144, v15);
          uint64_t v192 = v218;
          uint64_t v193 = v219;
          v194 = *(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16);
          v194(v218, v185, v224);
          sub_5D514(v261);
          sub_421C0(v259);
          uint64_t v195 = sub_7FAA0();
          uint64_t v196 = sub_7FA80();
          v258[3] = v195;
          v258[4] = &protocol witness table for DeviceResolutionService;
          v258[0] = v196;
          uint64_t v197 = v220;
          sub_15528();
          v191();
          v198 = (int *)v221;
          uint64_t v199 = v224;
          v194(v197 + *(int *)(v221 + 20), v192, v224);
          sub_D98C((uint64_t)v261, v197 + v198[6]);
          sub_2DD2C((uint64_t)v259, v197 + v198[7]);
          sub_D98C((uint64_t)v258, v197 + v198[8]);
          uint64_t v200 = sub_286BC(v192);
          _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v258);
          sub_2699C((uint64_t)v259);
          _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v261);
          (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v192, v199);
          v201 = v255;
          sub_5F544();
          v201();
          *(void *)(v197 + v198[9]) = v200;
          sub_5EE14((unint64_t *)&qword_ADA78, (void (*)(uint64_t))type metadata accessor for ExecuteOnRemoteDeviceFlow);
          uint64_t v257 = sub_7E1E0();
          sub_5EE5C(v197, (uint64_t (*)(void))type metadata accessor for ExecuteOnRemoteDeviceFlow);
          sub_5F544();
          v201();
          sub_15528();
          v202();
          uint64_t v167 = (void (*)(void))sub_7FB30();
          v164 = v216;
          sub_7FB60();
          uint64_t v103 = sub_7FE60();
          uint64_t v104 = v167;
          if (sub_7FF10())
          {
            swift_retain();
            uint64_t v168 = v214;
            goto LABEL_42;
          }
LABEL_45:

          sub_5F5A8();
          sub_26A1C();
          v104();
          sub_26A1C();
          v207();
          uint64_t v99 = v257;
          goto LABEL_46;
        }
        sub_5F544();
        v153();
      }
      sub_9D08();
      sub_15528();
      v155();
      uint64_t v156 = sub_7FBD0();
      os_log_type_t v157 = sub_7FE20();
      BOOL v158 = os_log_type_enabled(v156, v157);
      uint64_t v159 = v243;
      uint64_t v160 = v230;
      if (v158)
      {
        v161 = (uint8_t *)sub_26B04();
        *(_WORD *)v161 = 0;
        _os_log_impl(&dword_0, v156, v157, "Executing request locally", v161, 2u);
        sub_9CB0();
      }

      sub_26A1C();
      v162();
      v163 = v245;
      v164 = v229;
      uint64_t v165 = v242;
      uint64_t v166 = v212;
    }
    else
    {
      uint64_t v187 = sub_5F528();
      v188(v187);
      swift_bridgeObjectRelease();
      _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v259);
      uint64_t v166 = v212;
      v163 = v245;
      uint64_t v165 = v242;
      uint64_t v159 = v243;
      v164 = v229;
      uint64_t v160 = v230;
    }
    uint64_t v257 = sub_286BC(v165);
    v159(v160, v163, v166);
    uint64_t v167 = (void (*)(void))sub_7FB30();
    sub_7FB60();
    uint64_t v103 = sub_7FE60();
    uint64_t v104 = v167;
    if (sub_7FF10())
    {
      swift_retain();
      uint64_t v168 = v222;
LABEL_42:
      sub_7FB90();
      swift_release();
      uint64_t v203 = v233;
      uint64_t v204 = v234;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v233 + 88))(v168, v234) != enum case for OSSignpostError.doubleEnd(_:)) {
        (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v168, v204);
      }
      *(_WORD *)sub_26B04() = 0;
      uint64_t v104 = v164;
      os_signpost_id_t v205 = sub_7FB00();
      sub_5F574(&dword_0, v206, (os_signpost_type_t)v103, v205, "makeFlow");
      sub_9CB0();
      goto LABEL_45;
    }
    goto LABEL_45;
  }
  uint64_t v99 = sub_35418();
  uint64_t v100 = v240;
  sub_15528();
  v101();
  uint64_t v102 = (void (*)(void))sub_7FB30();
  sub_7FB60();
  uint64_t v103 = sub_7FE60();
  uint64_t v104 = v102;
  if (sub_7FF10())
  {
    uint64_t v257 = v99;
    swift_retain();
    uint64_t v105 = v228;
    sub_7FB90();
    swift_release();
    uint64_t v106 = v233;
    uint64_t v107 = v234;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v233 + 88))(v105, v234) != enum case for OSSignpostError.doubleEnd(_:)) {
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v105, v107);
    }
    *(_WORD *)sub_26B04() = 0;
    uint64_t v104 = (void (*)(void))v239;
    os_signpost_id_t v169 = sub_7FB00();
    sub_5F574(&dword_0, v170, (os_signpost_type_t)v103, v169, "makeFlow");
    sub_9CB0();
    uint64_t v99 = v257;
    uint64_t v100 = v240;
  }

  sub_5F5A8();
  sub_26A1C();
  v104();
  v246(v100, v42);
LABEL_46:
  swift_release();
  ((void (*)(char *, uint64_t))v104)(v247, v103);
  return v99;
}

uint64_t sub_5EC28()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_9AE0(v0, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v7, v1, v2);
  sub_9AE0(v7, v7[3]);
  LOBYTE(v1) = sub_7E400();
  sub_D98C((uint64_t)v7, (uint64_t)v6);
  if (v1)
  {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v6);
    char v3 = 0;
  }
  else
  {
    sub_9AE0(v6, v6[3]);
    char v4 = sub_7E3B0();
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v6);
    char v3 = v4 ^ 1;
  }
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v7);
  return v3 & 1;
}

uint64_t type metadata accessor for FlowRouterX()
{
  uint64_t result = qword_AF7D8;
  if (!qword_AF7D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_5ED50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowRouterX();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5EDB4(uint64_t a1)
{
  uint64_t v2 = sub_6A60(qword_AC3D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5EE14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5EE5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_5EEBC()
{
  if (v0[5]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 2));
  }
  if (v0[10]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 7));
  }
  if (v0[15]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 12));
  }
  if (v0[20]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 17));
  }
  if (v0[25]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 22));
  }
  if (v0[30]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 27));
  }
  if (v0[35]) {
    _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)(v0 + 32));
  }

  return _swift_deallocObject(v0, 296, 7);
}

void *sub_5EF5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_7FB40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_5F064(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_7FB40();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_5F0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_7FB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *sub_5F188(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_7DB0(a1, a2);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_7FB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_5F208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_7FB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_5F28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_7FB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_5F31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5F330);
}

uint64_t sub_5F330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_7FB40();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_6B0C(v9, a2, v8);
  }
}

uint64_t sub_5F3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5F3CC);
}

uint64_t sub_5F3CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_7FB40();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_9B2C(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_5F44C()
{
  uint64_t result = sub_7FB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_5F4E4()
{
  return v0;
}

uint64_t sub_5F508()
{
  return sub_7FC30();
}

uint64_t sub_5F528()
{
  return v0;
}

uint64_t sub_5F560()
{
  return v0;
}

void sub_5F574(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

uint64_t sub_5F594(uint64_t a1)
{
  *(void *)(v1 - 200) = a1;
  return v1 - 200;
}

void *sub_5F5BC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_801C0())
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    uint64_t v14 = v2;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        sub_80040();
      }
      else {
        swift_retain();
      }
      uint64_t v5 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v6 = sub_7F890();
      uint64_t v8 = v7;
      swift_release();
      if (v8)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_13434();
          uint64_t v3 = v11;
        }
        unint64_t v9 = v3[2];
        if (v9 >= v3[3] >> 1)
        {
          sub_13434();
          uint64_t v3 = v12;
        }
        v3[2] = v9 + 1;
        uint64_t v10 = &v3[2 * v9];
        void v10[4] = v6;
        uint64_t v10[5] = v8;
        uint64_t v2 = v14;
      }
      ++v4;
      if (v5 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_5F738(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7FDA0();
  uint64_t v13 = sub_7FDC0();
  sub_9B2C((uint64_t)v12, 0, 1, v13);
  sub_26864(v5, (uint64_t)v18);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  long long v15 = v18[1];
  *(_OWORD *)(v14 + 32) = v18[0];
  *(_OWORD *)(v14 + 48) = v15;
  *(void *)(v14 + 64) = v19;
  *(void *)(v14 + 72) = a1;
  *(void *)(v14 + 80) = a2;
  *(_DWORD *)(v14 + 88) = a4;
  *(void *)(v14 + 96) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_61330((uint64_t)v12, (uint64_t)&unk_AF818, v14);
  return swift_release();
}

uint64_t sub_5F868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  *(_DWORD *)(v8 + 728) = a7;
  *(void *)(v8 + 472) = a6;
  *(void *)(v8 + 480) = a8;
  *(void *)(v8 + 456) = a4;
  *(void *)(v8 + 464) = a5;
  uint64_t v9 = sub_7DA30();
  *(void *)(v8 + 488) = v9;
  *(void *)(v8 + 496) = *(void *)(v9 - 8);
  *(void *)(v8 + 504) = swift_task_alloc();
  *(void *)(v8 + 512) = swift_task_alloc();
  uint64_t v10 = sub_7EDA0();
  *(void *)(v8 + 520) = v10;
  *(void *)(v8 + 528) = *(void *)(v10 - 8);
  *(void *)(v8 + 536) = swift_task_alloc();
  uint64_t v11 = sub_7EE70();
  *(void *)(v8 + 544) = v11;
  *(void *)(v8 + 552) = *(void *)(v11 - 8);
  *(void *)(v8 + 560) = swift_task_alloc();
  uint64_t v12 = sub_7FBE0();
  *(void *)(v8 + 568) = v12;
  *(void *)(v8 + 576) = *(void *)(v12 - 8);
  *(void *)(v8 + 584) = swift_task_alloc();
  *(void *)(v8 + 592) = swift_task_alloc();
  *(void *)(v8 + 600) = swift_task_alloc();
  *(void *)(v8 + 608) = swift_task_alloc();
  *(void *)(v8 + 616) = swift_task_alloc();
  *(void *)(v8 + 624) = swift_task_alloc();
  *(void *)(v8 + 632) = swift_task_alloc();
  *(void *)(v8 + 640) = swift_task_alloc();
  *(void *)(v8 + 648) = swift_task_alloc();
  *(void *)(v8 + 656) = swift_task_alloc();
  return _swift_task_switch(sub_5FAC4, 0, 0);
}

uint64_t sub_5FAC4()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = (void *)v0[57];
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_9AE0(v2, v3);
  LOBYTE(v4) = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 8))(0xD00000000000001ALL, 0x800000000008A8C0, v3, v4);
  uint64_t v5 = sub_7FBA0();
  v0[83] = v5;
  unint64_t v6 = v1 + 16;
  if (v4)
  {
    sub_60D80();
    uint64_t v7 = sub_60D34();
    v8(v7);
    uint64_t v9 = (void *)sub_7FBD0();
    os_log_type_t v10 = sub_7FE20();
    if (sub_26A98(v10))
    {
      uint64_t v11 = (_WORD *)sub_26B04();
      sub_49BC0(v11);
      sub_33E24(&dword_0, v12, v13, "[AppSelection] not enabled");
      sub_9CB0();
    }

    uint64_t v14 = sub_26AC4();
    v15(v14);
    goto LABEL_25;
  }
  sub_60D80();
  uint64_t v16 = *(void (**)(uint64_t))v6;
  v0[84] = *(void *)v6;
  v0[85] = v6 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v17 = sub_60D34();
  v16(v17);
  uint64_t v18 = sub_7FBD0();
  os_log_type_t v19 = sub_7FE20();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "[AppSelection] is enabled", v20, 2u);
    sub_9CB0();
  }
  uint64_t v21 = v0[82];
  uint64_t v22 = v0[72];
  uint64_t v23 = v0[71];

  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v0[86] = v24;
  v0[87] = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v24(v21, v23);
  long long v25 = self;
  id v26 = [v25 sharedConnection];
  if (!v26)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v29 = v26;
  unsigned int v30 = [v26 isDiagnosticSubmissionAllowed];

  uint64_t v31 = v0[71];
  if (!v30)
  {
    sub_60D80();
    uint64_t v50 = sub_60D34();
    v16(v50);
    uint64_t v51 = (void *)sub_7FBD0();
    os_log_type_t v52 = sub_7FE20();
    if (sub_26A98(v52))
    {
      long long v53 = (_WORD *)sub_26B04();
      sub_49BC0(v53);
      sub_33E24(&dword_0, v54, v55, "[AppSelection] Diagnostics & Usage is not enabled");
      sub_9CB0();
    }
    uint64_t v56 = v0[74];
    goto LABEL_24;
  }
  uint64_t v32 = v0[81];
  sub_60D80();
  ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v32, v5, v31);
  uint64_t v33 = sub_7FBD0();
  os_log_type_t v34 = sub_7FE20();
  if (sub_60D9C(v34))
  {
    uint64_t v35 = (uint8_t *)sub_26B04();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_0, v33, (os_log_type_t)v32, "[AppSelection] Diagnostics & Usage is enabled", v35, 2u);
    sub_9CB0();
  }
  uint64_t v36 = v0[81];
  uint64_t v37 = v0[71];

  v24(v36, v37);
  id v26 = [v25 sharedConnection];
  if (!v26)
  {
LABEL_29:
    __break(1u);
    return static AppFinder.listApps(intentID:siriAuthorizationRestriction:)(v26, v27, v28);
  }
  uint64_t v38 = v26;
  unsigned int v39 = [v26 isHealthDataSubmissionAllowed];

  if (v39)
  {
    sub_60D80();
    uint64_t v40 = sub_60D34();
    v16(v40);
    uint64_t v41 = (void *)sub_7FBD0();
    os_log_type_t v42 = sub_7FE20();
    if (sub_26A98(v42))
    {
      uint64_t v43 = (_WORD *)sub_26B04();
      sub_49BC0(v43);
      sub_33E24(&dword_0, v44, v45, "[AppSelection] Improve Health & Activity is enabled");
      sub_9CB0();
    }
    uint64_t v46 = v0[80];
    uint64_t v47 = v0[71];

    v24(v46, v47);
    uint64_t v48 = sub_58420((uint64_t)&off_9FEC8);
    v0[88] = v48;
    uint64_t v49 = (void *)swift_task_alloc();
    v0[89] = v49;
    void *v49 = v0;
    v49[1] = sub_6004C;
    uint64_t v27 = v0[59];
    id v26 = (id)v0[58];
    uint64_t v28 = v48;
    return static AppFinder.listApps(intentID:siriAuthorizationRestriction:)(v26, v27, v28);
  }
  sub_60D80();
  uint64_t v57 = sub_60D34();
  v16(v57);
  uint64_t v51 = (void *)sub_7FBD0();
  os_log_type_t v58 = sub_7FE20();
  if (sub_26A98(v58))
  {
    uint64_t v59 = (_WORD *)sub_26B04();
    sub_49BC0(v59);
    sub_33E24(&dword_0, v60, v61, "[AppSelection] Improve Health & Activity is not enabled");
    sub_9CB0();
  }
  uint64_t v56 = v0[75];
LABEL_24:
  uint64_t v62 = v0[71];

  v24(v56, v62);
LABEL_25:
  sub_60D4C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v63 = (uint64_t (*)(void))v0[1];
  return v63();
}

uint64_t sub_6004C()
{
  sub_9C98();
  *(void *)(v1 + 720) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_60148, 0, 0);
}

uint64_t sub_60148()
{
  uint64_t v78 = v0;
  char v71 = (void *)(v0 + 96);
  uint64_t v72 = (void *)(v0 + 16);
  unint64_t v76 = (void *)(v0 + 136);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 632);
  uint64_t v4 = *(void *)(v0 + 568);
  sub_5F5BC(*(void *)(v0 + 720));
  swift_bridgeObjectRelease();
  sub_9D08();
  v1(v3, v2, v4);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE40();
  if (sub_60D9C(v6))
  {
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 688);
    uint64_t v66 = *(void *)(v0 + 568);
    uint64_t v67 = *(void *)(v0 + 632);
    uint64_t v8 = *(void *)(v0 + 464);
    unint64_t v7 = *(void *)(v0 + 472);
    uint64_t v9 = swift_slowAlloc();
    v77[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 432) = sub_1CDF0(v8, v7, v77);
    sub_7FF60();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_7FD30();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 440) = sub_1CDF0(v10, v12, v77);
    sub_7FF60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v5, (os_log_type_t)v2, "[StartWorkout HandleIntentStrategy] Candidate %s apps: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    v68(v67, v66);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 688);
    uint64_t v14 = *(void *)(v0 + 632);
    uint64_t v15 = *(void *)(v0 + 568);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v13(v14, v15);
  }
  uint64_t v16 = *(void *)(v0 + 560);
  uint64_t v17 = *(void *)(v0 + 552);
  uint64_t v18 = *(void *)(v0 + 544);
  uint64_t v19 = *(void *)(v0 + 536);
  uint64_t v20 = *(void *)(v0 + 528);
  uint64_t v21 = *(void *)(v0 + 520);
  uint64_t v70 = *(void *)(v0 + 480);
  int v69 = *(_DWORD *)(v0 + 728);
  sub_7EE60();
  swift_allocObject();
  sub_7EE50();
  sub_7EE30();
  swift_bridgeObjectRelease();
  swift_release();
  sub_7EE40();
  swift_release();
  *(void *)(v0 + 80) = v18;
  *(void *)(v0 + 88) = &protocol witness table for SignalDefinitionParametersProvider;
  uint64_t v22 = sub_74EC((uint64_t *)(v0 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16))(v22, v16, v18);
  sub_7EDD0();
  swift_allocObject();
  sub_7EDC0();
  uint64_t v23 = (uint8_t *)(v0 + 96);
  sub_7EDB0();
  swift_release();
  sub_9AE0(v71, *(void *)(v0 + 120));
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v19, enum case for DomainUseCase.startWorkout(_:), v21);
  sub_26AC4();
  sub_7EDE0();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  sub_9AE0(v72, *(void *)(v0 + 40));
  sub_26AC4();
  sub_7EDF0();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v71);
  sub_9AE0(v76, *(void *)(v0 + 160));
  uint64_t v24 = type metadata accessor for WorkoutsSignalValuesProcessor();
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = v69;
  *(void *)(v25 + 24) = v70;
  *(void *)(v0 + 416) = v25;
  sub_3C4AC();
  swift_retain();
  sub_7EE20();
  swift_release();
  id v26 = *(void **)(v0 + 448);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v28 = *(void *)(v0 + 664);
  uint64_t v29 = *(void *)(v0 + 568);
  if (v26)
  {
    uint64_t v30 = *(void *)(v0 + 616);
    sub_9D08();
    v27(v30, v28, v29);
    id v31 = v26;
    uint64_t v32 = sub_7FBD0();
    os_log_type_t v33 = sub_7FE20();
    if (sub_60D9C(v33))
    {
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v34 = 138412290;
      uint64_t v23 = v34 + 4;
      *(void *)(v0 + 424) = v31;
      id v35 = v31;
      sub_7FF60();
      void *v73 = v26;

      _os_log_impl(&dword_0, v32, (os_log_type_t)v30, "[AppSelection] Need to emit SELF message [%@]", v34, 0xCu);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {
    }
    (*(void (**)(void, void))(v0 + 688))(*(void *)(v0 + 616), *(void *)(v0 + 568));
    id v42 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEvent) init];
    if (v42)
    {
      uint64_t v43 = v42;
      id v44 = [objc_allocWithZone((Class)INFERENCESchemaINFERENCEClientEventMetadata) init];
      if (v44)
      {
        uint64_t v45 = v44;
        uint64_t v46 = v31;
        uint64_t v47 = *(void *)(v0 + 552);
        uint64_t v74 = *(void *)(v0 + 544);
        uint64_t v75 = *(void *)(v0 + 560);
        uint64_t v49 = *(void *)(v0 + 504);
        uint64_t v48 = *(void *)(v0 + 512);
        uint64_t v51 = *(void *)(v0 + 488);
        uint64_t v50 = *(void *)(v0 + 496);
        sub_7DA20();
        sub_60CE4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
        id v52 = sub_60B90(v49);
        [v45 setInferenceId:v52];

        [v43 setEventMetadata:v45];
        [v43 setWorkoutsAppSelectionGroundTruthGenerated:v46];
        id v53 = [self sharedAnalytics];
        id v54 = [v53 defaultMessageStream];

        Class isa = sub_7DA10().super.isa;
        [v54 emitMessage:v43 isolatedStreamUUID:isa];

        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v51);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v75, v74);
        goto LABEL_19;
      }
    }
    uint64_t v24 = *(void *)(v0 + 680);
    id v26 = *(void **)(v0 + 672);
    uint64_t v56 = *(void *)(v0 + 664);
    uint64_t v57 = *(void *)(v0 + 608);
    uint64_t v58 = *(void *)(v0 + 568);
    sub_9D08();
    ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v57, v56, v58);
    sub_7FBD0();
    os_log_type_t v59 = sub_7FE30();
    if (sub_26A98(v59))
    {
      uint64_t v60 = (_WORD *)sub_26B04();
      sub_49BC0(v60);
      sub_33E24(&dword_0, v61, v62, "Could not create top SELF message");
      sub_9CB0();
    }
    uint64_t v41 = *(void (**)(uint64_t))(v0 + 688);
    sub_60DB8();
  }
  else
  {
    uint64_t v36 = *(void *)(v0 + 624);
    sub_9D08();
    v27(v36, v28, v29);
    sub_7FBD0();
    os_log_type_t v37 = sub_7FE40();
    if (sub_26A98(v37))
    {
      uint64_t v38 = (_WORD *)sub_26B04();
      sub_49BC0(v38);
      sub_33E24(&dword_0, v39, v40, "No SELF message generated");
      sub_9CB0();
    }
    uint64_t v41 = *(void (**)(uint64_t))(v0 + 688);
    sub_60DB8();
  }
  uint64_t v63 = sub_26AC4();
  v41(v63);
  (*((void (**)(uint64_t, void *))v23 + 1))(v24, v26);
LABEL_19:
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v76);
  sub_60D4C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v64 = *(uint64_t (**)(void))(v0 + 8);
  return v64();
}

uint64_t sub_60A60()
{
  swift_unknownObjectRelease();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_60AB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + 32;
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  int v9 = *(_DWORD *)(v1 + 88);
  uint64_t v10 = *(void *)(v1 + 96);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_1B53C;
  return sub_5F868(a1, v4, v5, v6, v7, v8, v9, v10);
}

id sub_60B90(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = sub_7DA10().super.isa;
  id v4 = [v2 initWithNSUUID:isa];

  uint64_t v5 = sub_7DA30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

void sub_60C2C(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_7FF60();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

unint64_t sub_60CE4()
{
  unint64_t result = qword_AF820;
  if (!qword_AF820)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AF820);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutAppSelectionTrainingLogger()
{
  return &type metadata for WorkoutAppSelectionTrainingLogger;
}

uint64_t sub_60D34()
{
  return v0;
}

uint64_t sub_60D4C()
{
  return *(void *)(v0 + 656);
}

uint64_t sub_60D80()
{
  return swift_beginAccess();
}

BOOL sub_60D9C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_60DB8()
{
}

uint64_t sub_60DD8(uint64_t a1)
{
  if (sub_7ECF0() == 0xD000000000000034 && v2 == 0x800000000008A8E0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = sub_802B0();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
    {
      uint64_t v5 = 3;
      goto LABEL_13;
    }
  }
  uint64_t v4 = sub_7ED00();
  if (!v4)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_10;
  }
  sub_791D4(0xD000000000000014, 0x800000000008A920, v4, &v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_10:
    sub_38594((uint64_t)&v10);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    uint64_t v5 = 2;
    goto LABEL_13;
  }
  uint64_t v5 = sub_61108(v8, v9);
LABEL_13:
  uint64_t v6 = sub_7ED10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

id sub_60F3C(void *a1, unsigned __int8 a2)
{
  int v3 = a2;
  sub_387A8();
  id v4 = sub_3D4C8();
  sub_6A60(&qword_ADD40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_80D90;
  uint64_t v6 = (int8x16_t *)(inited + 72);
  sub_80000();
  *(void *)(inited + 96) = sub_6A60(&qword_AF470);
  if (v3 == 2)
  {
    v6->i64[0] = 0;
    *(void *)(inited + 80) = 0;
  }
  else
  {
    int32x2_t v7 = vdup_n_s32((v3 & 1) == 0);
    v8.i64[0] = v7.u32[0];
    v8.i64[1] = v7.u32[1];
    *uint64_t v6 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v8, 0x3FuLL)), (int8x16_t)xmmword_85400, (int8x16_t)xmmword_853F0);
  }
  uint64_t v9 = sub_7FC10();
  sub_3D578(v9, v4);
  long long v10 = self;
  sub_9AE0(a1, a1[3]);
  long long v11 = (void *)sub_7E420();
  id v12 = [v10 runSiriKitExecutorCommandWithContext:v11 payload:v4];

  id v13 = [v10 wrapCommandInStartLocalRequest:v12];
  return v13;
}

uint64_t sub_61108(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_A0518;
  v7._object = a2;
  Swift::Int v4 = sub_801E0(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_6115C(char a1)
{
  if (a1) {
    return 0x64657463656A6572;
  }
  else {
    return 0x656D7269666E6F63;
  }
}

unint64_t sub_61198(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000034;
  }
}

uint64_t sub_611D4@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_7E760();
  sub_6D54();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_755C();
  uint64_t v11 = v10 - v9;
  sub_6A60((uint64_t *)&unk_AF440);
  sub_151D0();
  __chkstk_darwin(v12);
  sub_755C();
  uint64_t v15 = (void *)(v14 - v13);
  sub_18A80(v2, v14 - v13);
  uint64_t result = swift_getEnumCaseMultiPayload();
  int v17 = result;
  if (result == 1)
  {
    *(void *)a2 = *v15;
  }
  else
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v11, v15, v5);
    a1(v11);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  }
  *(unsigned char *)(a2 + 40) = v17 == 1;
  return result;
}

uint64_t sub_61330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_7FDC0();
  if (sub_6B0C(a1, 1, v6) == 1)
  {
    sub_1AA7C(a1, &qword_ACD90);
  }
  else
  {
    sub_7FDB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_7FD90();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_614A0(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v33 = a5;
  os_log_type_t v34 = a4;
  id v31 = a3;
  uint64_t v32 = a1;
  sub_7E760();
  sub_6D54();
  uint64_t v29 = v6;
  uint64_t v30 = v5;
  __chkstk_darwin(v5);
  sub_755C();
  uint64_t v28 = v8 - v7;
  uint64_t v9 = sub_7F870();
  __chkstk_darwin(v9);
  sub_755C();
  uint64_t v12 = v11 - v10;
  sub_6A60((uint64_t *)&unk_AF440);
  sub_151D0();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v27 - v17;
  sub_7F760();
  uint64_t v19 = sub_7F750();
  sub_6A60(&qword_ACBA0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_80D90;
  sub_7F860();
  v35[0] = v20;
  sub_62520((unint64_t *)&unk_AF450, 255, (void (*)(uint64_t))&type metadata accessor for CATOption);
  sub_6A60(&qword_ACBA8);
  sub_18A2C();
  sub_7FFE0();
  type metadata accessor for HealthCATWrapper();
  swift_allocObject();
  sub_5B344(v19, v12);
  id v21 = [v31 code];
  sub_5C0A4(v32, (uint64_t)v21, 0);
  swift_release();
  sub_18A80((uint64_t)v18, (uint64_t)v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v35[0] = *v16;
  }
  else
  {
    uint64_t v24 = v28;
    uint64_t v23 = v29;
    uint64_t v25 = v30;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v29 + 32))(v28, v16, v30);
    sub_617F0(v35);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
  }
  BOOL v36 = EnumCaseMultiPayload == 1;
  v34(v35);
  sub_1AA7C((uint64_t)v35, (uint64_t *)&unk_AF480);
  return sub_1AA7C((uint64_t)v18, (uint64_t *)&unk_AF440);
}

uint64_t sub_617F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v2 - 8);
  Swift::Int v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v10, v10[3]);
  sub_7E3D0();
  uint64_t v5 = sub_7E6E0();
  sub_9B2C((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = sub_7ED80();
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = 0;
  a1[3] = v6;
  a1[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a1);
  sub_7E5D0();
  sub_1AA7C((uint64_t)v8, (uint64_t *)&unk_AF490);
  sub_1AA7C((uint64_t)v4, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v11);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v10);
}

uint64_t sub_6195C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_6A60(&qword_ACD90);
  __chkstk_darwin(v8 - 8);
  sub_755C();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_7FDC0();
  sub_9B2C(v11, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = 0;
  v13[3] = 0;
  v13[4] = v5;
  v13[5] = a4;
  v13[6] = a5;
  swift_retain();
  swift_retain();
  sub_61330(v11, (uint64_t)&unk_AF900, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_61A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  return _swift_task_switch(sub_61A6C, 0, 0);
}

uint64_t sub_61A6C()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v3 = sub_7E730();
  swift_allocObject();
  uint64_t v4 = sub_7E720();
  v0[8] = v3;
  v0[9] = &protocol witness table for ResponseFactory;
  v0[5] = v4;
  uint64_t v5 = sub_7FC10();
  v0[2] = 0xD00000000000001ALL;
  v0[3] = 0x800000000008A990;
  v0[4] = v2;
  v0[10] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[20] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_61BF8;
  return sub_3708C((uint64_t)(v0 + 11), (uint64_t)(v0 + 2), (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_61BF8()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *id v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_61CC4, 0, 0);
}

uint64_t sub_61CC4()
{
  (*(void (**)(uint64_t))(v0 + 144))(v0 + 88);
  sub_1AA7C(v0 + 88, (uint64_t *)&unk_AF480);
  sub_19D80(v0 + 16);
  sub_9D44();
  return v1();
}

uint64_t type metadata accessor for ResumeWorkoutHandleIntentStrategy()
{
  return self;
}

uint64_t sub_61D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_61DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_61E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_61EE8(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  return sub_614A0(a1, a2, a3, a4, a5);
}

uint64_t sub_61F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_61F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_61FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_6195C(a1, a2, a3, a4, a5);
}

uint64_t sub_6201C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_62068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_620CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for ResumeWorkoutHandleIntentStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_62138(uint64_t a1, uint64_t a2)
{
  return sub_62520(&qword_AF8F0, a2, (void (*)(uint64_t))type metadata accessor for ResumeWorkoutHandleIntentStrategy);
}

uint64_t sub_62180()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_621C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2632C;
  return sub_61A48(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_62290(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_6236C;
  return v6(a1);
}

uint64_t sub_6236C()
{
  sub_9D38();
  sub_9C98();
  uint64_t v1 = *v0;
  sub_19EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_9D44();
  return v3();
}

uint64_t sub_62430()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_62468(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2632C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_AF908 + dword_AF908);
  return v6(a1, v4);
}

uint64_t sub_62520(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_62568(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  id v4 = sub_62824(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = *(id *)sub_7F9D0();
    sub_7FE20();
    sub_6A60(&qword_ABED0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_80D90;
    id v8 = v5;
    id v9 = [v8 description];
    uint64_t v10 = sub_7FC50();
    uint64_t v12 = v11;

    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_6C34();
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v12;
    sub_7FAD0();

    swift_bridgeObjectRelease();
    id v22 = v8;
    a3(v5, 0);
  }
  else
  {
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v13 = sub_E934(0);
    sub_7FE30();
    uint64_t v14 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_80D90;
    id v16 = v14;
    uint64_t v17 = sub_E854();
    uint64_t v19 = v18;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_6C34();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_631A4((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v20 = swift_allocError();
    *id v21 = v13;
    swift_retain();
    a3((void *)v20, 1);
    swift_errorRelease();
    swift_release();
  }
}

id sub_62824(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_ABEB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v39 = (char *)&v38 - v5;
  uint64_t v6 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_7F6B0();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7ED20();
  sub_6D54();
  uint64_t v16 = v15;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v23((char *)&v38 - v21, a1, v14);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v14);
  if (v24 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v25 = sub_6D70();
    v26(v25);
    uint64_t v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v22, v41);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v13, v27);
    sub_63164();
    id v28 = sub_69224((uint64_t)v8);
    sub_6BD4((uint64_t)v8, type metadata accessor for HealthNLIntent);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v27);
  }
  else
  {
    uint64_t v29 = a1;
    uint64_t v31 = (uint64_t)v39;
    uint64_t v30 = (uint64_t)v40;
    if (v24 == enum case for Parse.directInvocation(_:))
    {
      v23(v20, v29, v14);
      sub_7819C((uint64_t)v20, v31);
      sub_6AA4(v31, v30);
      uint64_t v32 = type metadata accessor for DirectInvocationData();
      if (sub_6B0C(v30, 1, v32) == 1)
      {
        sub_6B34(v31);
        sub_6B34(v30);
        id v28 = 0;
      }
      else
      {
        sub_7890C(v43);
        sub_6B34(v31);
        sub_6BD4(v30, (uint64_t (*)(void))type metadata accessor for DirectInvocationData);
        sub_6A60(&qword_ABEC0);
        sub_63164();
        if (swift_dynamicCast()) {
          id v28 = v42;
        }
        else {
          id v28 = 0;
        }
      }
      uint64_t v35 = sub_6D70();
      v36(v35);
    }
    else
    {
      uint64_t v33 = sub_6D70();
      v34(v33);
      return 0;
    }
  }
  return v28;
}

uint64_t type metadata accessor for PauseWorkoutStrategy()
{
  return self;
}

uint64_t sub_62C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PauseWorkoutStrategy();

  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, v11, a6);
}

void sub_62C7C(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
}

uint64_t sub_62CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PauseWorkoutStrategy();

  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_62CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PauseWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_62D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PauseWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_62DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PauseWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_62E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PauseWorkoutStrategy();

  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_62EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PauseWorkoutStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_62EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for PauseWorkoutStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_62F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PauseWorkoutStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_62FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PauseWorkoutStrategy();

  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_63044(uint64_t a1, uint64_t a2)
{
  return sub_631A4(&qword_AF9D8, a2, (void (*)(uint64_t))type metadata accessor for PauseWorkoutStrategy);
}

uint64_t sub_6308C(uint64_t a1, uint64_t a2)
{
  return sub_631A4(&qword_AF9E0, a2, (void (*)(uint64_t))type metadata accessor for PauseWorkoutStrategy);
}

uint64_t sub_630D4(uint64_t a1, uint64_t a2)
{
  return sub_631A4(&qword_AF9E8, a2, (void (*)(uint64_t))type metadata accessor for PauseWorkoutStrategy);
}

uint64_t sub_6311C(uint64_t a1, uint64_t a2)
{
  return sub_631A4(&qword_AF9F0, a2, (void (*)(uint64_t))type metadata accessor for PauseWorkoutStrategy);
}

unint64_t sub_63164()
{
  unint64_t result = qword_AC818;
  if (!qword_AC818)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_AC818);
  }
  return result;
}

uint64_t sub_631A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_631EC(char a1)
{
  unint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000020;
      break;
    case 5:
      unint64_t result = 0x6F2368746C616568;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000023;
      break;
    case 11:
    case 13:
    case 25:
    case 27:
    case 29:
    case 36:
      unint64_t result = 0xD000000000000028;
      break;
    case 12:
      unint64_t result = 0xD000000000000020;
      break;
    case 14:
      unint64_t result = 0xD000000000000027;
      break;
    case 15:
      unint64_t result = 0xD000000000000027;
      break;
    case 16:
      unint64_t result = 0xD000000000000021;
      break;
    case 17:
      unint64_t result = 0xD000000000000026;
      break;
    case 18:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 19:
      unint64_t result = 0xD000000000000026;
      break;
    case 20:
      unint64_t result = 0xD000000000000025;
      break;
    case 21:
      unint64_t result = 0xD000000000000024;
      break;
    case 22:
      unint64_t result = 0xD000000000000029;
      break;
    case 23:
      unint64_t result = 0xD000000000000021;
      break;
    case 24:
      unint64_t result = 0xD000000000000029;
      break;
    case 26:
      unint64_t result = 0xD000000000000023;
      break;
    case 28:
      unint64_t result = 0xD000000000000020;
      break;
    case 30:
      unint64_t result = 0xD000000000000027;
      break;
    case 31:
      unint64_t result = 0xD000000000000020;
      break;
    case 32:
      unint64_t result = 0xD000000000000024;
      break;
    case 33:
      unint64_t result = 0xD000000000000029;
      break;
    case 34:
      unint64_t result = 0xD000000000000021;
      break;
    case 35:
      unint64_t result = 0xD000000000000029;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for BinaryConfirmationSnippetModel(uint64_t a1)
{
  sub_55960(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  sub_55960(*(void *)(a1 + 32), *(void *)(a1 + 40));

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for BinaryConfirmationSnippetModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_55A60(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  swift_bridgeObjectRetain();
  sub_55A60(v7, v8);
  a1[4] = v7;
  a1[5] = v8;
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for BinaryConfirmationSnippetModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_55A60(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_55960(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_55A60(v8, v9);
  uint64_t v10 = a1[4];
  unint64_t v11 = a1[5];
  a1[4] = v8;
  a1[5] = v9;
  sub_55960(v10, v11);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BinaryConfirmationSnippetModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for BinaryConfirmationSnippetModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_55960(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[4];
  unint64_t v8 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_55960(v7, v8);
  uint64_t v9 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BinaryConfirmationSnippetModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryConfirmationSnippetModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthUIPluginModel()
{
  return &type metadata for HealthUIPluginModel;
}

void sub_637A0()
{
  unk_B70A7 = -18;
}

uint64_t *sub_637D0()
{
  if (qword_ABC08 != -1) {
    swift_once();
  }
  return &qword_B7098;
}

uint64_t sub_6381C(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_802B0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_6388C()
{
  return 12383;
}

uint64_t sub_63898(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000000008ACD0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_802B0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_63920()
{
  return 0xD000000000000012;
}

uint64_t *sub_6393C(void *a1)
{
  char v2 = v1;
  sub_64258(v2, &v12);
  long long v4 = v12;
  uint64_t v6 = v13;
  unint64_t v5 = v14;
  sub_6A60(&qword_AFA38);
  sub_6D54();
  __chkstk_darwin(v7);
  sub_755C();
  sub_6A60(&qword_AFA40);
  sub_6D54();
  __chkstk_darwin(v8);
  sub_755C();
  sub_9AE0(a1, a1[3]);
  sub_64270();
  sub_803B0();
  sub_55A60(v4, *((unint64_t *)&v4 + 1));
  swift_bridgeObjectRetain();
  sub_55A60(v6, v5);
  sub_64338();
  swift_bridgeObjectRetain();
  sub_80250();
  sub_643D0();
  sub_80280();
  sub_152A0();
  v9();
  sub_152A0();
  v10();
  return sub_6441C(v15);
}

uint64_t sub_63B98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_6A60(&qword_AFA08);
  sub_6D54();
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v5 = sub_6A60(&qword_AFA10);
  sub_6D54();
  uint64_t v25 = v6;
  __chkstk_darwin(v7);
  sub_755C();
  uint64_t v10 = v9 - v8;
  sub_9AE0(a1, a1[3]);
  sub_64270();
  uint64_t v11 = (uint64_t)a1;
  sub_803A0();
  if (!v2)
  {
    uint64_t v12 = sub_80240();
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      sub_642BC(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
      uint64_t v15 = v14;
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == v17 >> 1)
      {
        sub_64338();
        sub_801F0();
        sub_64384();
        sub_80230();
        sub_152A0();
        v21();
        swift_unknownObjectRelease();
        uint64_t v22 = sub_64758();
        v23(v22);
        uint64_t result = _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)a1);
        *(_OWORD *)a2 = v26;
        *(_OWORD *)(a2 + 16) = v27;
        *(_OWORD *)(a2 + 32) = v28;
        *(void *)(a2 + 48) = v29;
        *(void *)(a2 + 56) = v30;
        return result;
      }
    }
    uint64_t v18 = sub_80060();
    swift_allocError();
    uint64_t v20 = v19;
    sub_6A60(&qword_AFA20);
    void *v20 = &type metadata for HealthUIPluginModel;
    sub_80200();
    sub_80050();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, enum case for DecodingError.typeMismatch(_:), v18);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v10, v5);
    uint64_t v11 = (uint64_t)a1;
  }
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v11);
}

Swift::Int sub_63F2C()
{
  return sub_1D9A8();
}

uint64_t sub_63F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_6381C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_63F78(uint64_t a1)
{
  unint64_t v2 = sub_64338();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_63FB4(uint64_t a1)
{
  unint64_t v2 = sub_64338();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_63FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_63898(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_64020()
{
  return sub_40320();
}

uint64_t sub_6403C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D978();
  *a1 = result & 1;
  return result;
}

uint64_t sub_64068(uint64_t a1)
{
  unint64_t v2 = sub_64270();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_640A4(uint64_t a1)
{
  unint64_t v2 = sub_64270();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_640E0()
{
  sub_637D0();
  uint64_t v0 = qword_B7098;
  swift_bridgeObjectRetain();
  return v0;
}

_OWORD *sub_64120@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = (_OWORD *)sub_63B98(a1, (uint64_t)v5);
  if (!v2) {
    return sub_64258(v5, a2);
  }
  return result;
}

uint64_t *sub_64168(void *a1)
{
  sub_64258(v1, v4);
  return sub_6393C(a1);
}

unint64_t sub_641BC()
{
  unint64_t result = qword_AF9F8;
  if (!qword_AF9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AF9F8);
  }
  return result;
}

unint64_t sub_6420C()
{
  unint64_t result = qword_AFA00;
  if (!qword_AFA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA00);
  }
  return result;
}

_OWORD *sub_64258(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

unint64_t sub_64270()
{
  unint64_t result = qword_AFA18;
  if (!qword_AFA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA18);
  }
  return result;
}

uint64_t sub_642BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_64338()
{
  unint64_t result = qword_AFA28;
  if (!qword_AFA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA28);
  }
  return result;
}

unint64_t sub_64384()
{
  unint64_t result = qword_AFA30;
  if (!qword_AFA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA30);
  }
  return result;
}

unint64_t sub_643D0()
{
  unint64_t result = qword_AFA48;
  if (!qword_AFA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA48);
  }
  return result;
}

uint64_t *sub_6441C(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  sub_55960(*a1, a1[1]);
  swift_bridgeObjectRelease();
  sub_55960(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HealthUIPluginModel.CodingKeys()
{
  return &type metadata for HealthUIPluginModel.CodingKeys;
}

unsigned char *_s24HealthFlowDelegatePlugin19HealthUIPluginModelO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x64538);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthUIPluginModel.BinaryConfirmationCodingKeys()
{
  return &type metadata for HealthUIPluginModel.BinaryConfirmationCodingKeys;
}

unint64_t sub_64574()
{
  unint64_t result = qword_AFA50;
  if (!qword_AFA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA50);
  }
  return result;
}

unint64_t sub_645C4()
{
  unint64_t result = qword_AFA58;
  if (!qword_AFA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA58);
  }
  return result;
}

unint64_t sub_64614()
{
  unint64_t result = qword_AFA60;
  if (!qword_AFA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA60);
  }
  return result;
}

unint64_t sub_64664()
{
  unint64_t result = qword_AFA68;
  if (!qword_AFA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA68);
  }
  return result;
}

unint64_t sub_646B4()
{
  unint64_t result = qword_AFA70;
  if (!qword_AFA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA70);
  }
  return result;
}

unint64_t sub_64704()
{
  unint64_t result = qword_AFA78;
  if (!qword_AFA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA78);
  }
  return result;
}

uint64_t sub_64758()
{
  return v0;
}

ValueMetadata *type metadata accessor for BinaryConfirmationSnippetModel()
{
  return &type metadata for BinaryConfirmationSnippetModel;
}

uint64_t sub_64784(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001DLL && a2 == 0x800000000008ACF0 || (sub_802B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000000008AD10 || (sub_802B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000000008AD30 || (sub_802B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000008AD50)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_802B0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_64920()
{
  return 4;
}

unint64_t sub_64928(char a1)
{
  unint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_649C0(void *a1)
{
  int v3 = v1;
  uint64_t v5 = sub_6A60(&qword_AFA98);
  sub_6D54();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_9AE0(a1, a1[3]);
  sub_64F78();
  sub_803B0();
  long long v14 = *v3;
  char v13 = 0;
  sub_65010();
  sub_65264();
  if (!v2)
  {
    sub_652A8(*((void *)v3 + 2), *((void *)v3 + 3), 1);
    long long v14 = v3[2];
    char v13 = 2;
    sub_65264();
    sub_652A8(*((void *)v3 + 6), *((void *)v3 + 7), 3);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_64B20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_6A60(&qword_AFA80);
  sub_6D54();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_9AE0(a1, a1[3]);
  sub_64F78();
  sub_803A0();
  if (v2) {
    return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)a1);
  }
  sub_64FC4();
  sub_6528C();
  sub_80230();
  uint64_t v22 = a2;
  uint64_t v8 = v23;
  LOBYTE(v23) = 1;
  sub_55A60(v8, v24);
  uint64_t v20 = sub_652F8();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  sub_6528C();
  sub_80230();
  sub_55A60(v23, v24);
  uint64_t v11 = sub_652F8();
  uint64_t v13 = v12;
  uint64_t v14 = v6 + 8;
  uint64_t v21 = v11;
  uint64_t v15 = sub_65250();
  v16(v15);
  uint64_t v17 = sub_652CC();
  sub_55A60(v17, v18);
  swift_bridgeObjectRetain();
  sub_55A60(v14, v24);
  swift_bridgeObjectRetain();
  sub_55960(v14, v24);
  swift_bridgeObjectRelease();
  sub_652E0();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)a1);
  sub_652E0();
  swift_bridgeObjectRelease();
  sub_55960(v14, v24);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v22 = v8;
  v22[1] = v23;
  v22[2] = v20;
  v22[3] = v10;
  v22[4] = v14;
  v22[5] = v24;
  v22[6] = v21;
  v22[7] = v13;
  return result;
}

unint64_t sub_64E2C()
{
  return sub_64928(*v0);
}

uint64_t sub_64E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_64784(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_64E5C()
{
  return sub_40320();
}

uint64_t sub_64E7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_64920();
  *a1 = result;
  return result;
}

uint64_t sub_64EA4(uint64_t a1)
{
  unint64_t v2 = sub_64F78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_64EE0(uint64_t a1)
{
  unint64_t v2 = sub_64F78();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_64F1C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_64B20(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_64F60(void *a1)
{
  return sub_649C0(a1);
}

unint64_t sub_64F78()
{
  unint64_t result = qword_AFA88;
  if (!qword_AFA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA88);
  }
  return result;
}

unint64_t sub_64FC4()
{
  unint64_t result = qword_AFA90;
  if (!qword_AFA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFA90);
  }
  return result;
}

unint64_t sub_65010()
{
  unint64_t result = qword_AFAA0;
  if (!qword_AFAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFAA0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BinaryConfirmationSnippetModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x65128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryConfirmationSnippetModel.CodingKeys()
{
  return &type metadata for BinaryConfirmationSnippetModel.CodingKeys;
}

unint64_t sub_65164()
{
  unint64_t result = qword_AFAA8;
  if (!qword_AFAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFAA8);
  }
  return result;
}

unint64_t sub_651B4()
{
  unint64_t result = qword_AFAB0;
  if (!qword_AFAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFAB0);
  }
  return result;
}

unint64_t sub_65204()
{
  unint64_t result = qword_AFAB8;
  if (!qword_AFAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFAB8);
  }
  return result;
}

uint64_t sub_65250()
{
  return v0;
}

uint64_t sub_65264()
{
  return sub_80280();
}

uint64_t sub_652A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(unsigned char *)(v4 - 80) = a3;
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, v4 - 80, v3);
}

uint64_t sub_652CC()
{
  return v0;
}

uint64_t sub_652E0()
{
  return sub_55960(v1, v0);
}

uint64_t sub_652F8()
{
  return KeyedDecodingContainer.decode(_:forKey:)(v1 - 96, v0);
}

uint64_t type metadata accessor for HealthNLIntent.HealthAppOntologyNode(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_AFB40);
}

uint64_t sub_65338()
{
  return swift_initClassMetadata2();
}

BOOL sub_65378(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_65384(uint64_t a1, uint64_t a2)
{
  return sub_655B8(a1, a2, (uint64_t (*)(void))sub_507AC);
}

uint64_t sub_6539C(uint64_t a1, uint64_t a2)
{
  return sub_655B8(a1, a2, (uint64_t (*)(void))sub_78B14);
}

uint64_t sub_653B4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x616D6D6F43656361;
  }
  else {
    uint64_t v3 = 7368801;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xEA0000000000646ELL;
  }
  if (a2) {
    uint64_t v5 = 0x616D6D6F43656361;
  }
  else {
    uint64_t v5 = 7368801;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000646ELL;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_688F4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_65444(char a1, char a2)
{
  return qword_85E68[a1] == qword_85E68[a2];
}

uint64_t sub_65468(uint64_t a1, uint64_t a2)
{
  return sub_655B8(a1, a2, (uint64_t (*)(void))sub_204A0);
}

uint64_t sub_65480(uint64_t a1, uint64_t a2)
{
  return sub_655B8(a1, a2, (uint64_t (*)(void))sub_15FD0);
}

uint64_t sub_65498(uint64_t a1, uint64_t a2)
{
  return sub_655B8(a1, a2, (uint64_t (*)(void))sub_75D8);
}

uint64_t sub_654B0()
{
  sub_68934();
  BOOL v2 = v2 && v0 == v1;
  if (v2) {
    char v3 = 1;
  }
  else {
    char v3 = sub_688F4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_6551C(uint64_t a1, uint64_t a2)
{
  return sub_655B8(a1, a2, (uint64_t (*)(void))sub_5D084);
}

uint64_t sub_65534()
{
  sub_68934();
  BOOL v2 = v2 && v0 == v1;
  if (v2) {
    char v3 = 1;
  }
  else {
    char v3 = sub_688F4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_655A0(uint64_t a1, uint64_t a2)
{
  return sub_655B8(a1, a2, (uint64_t (*)(void))sub_37F94);
}

uint64_t sub_655B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    char v10 = 1;
  }
  else {
    char v10 = sub_688F4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_65640()
{
  type metadata accessor for HealthNLIntent(0);
  sub_151D0();
  __chkstk_darwin();
  sub_755C();
  uint64_t v3 = v2 - v1;
  if (qword_ABC30 != -1) {
    swift_once();
  }
  sub_678FC((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_68970();
  if (v13) {
    return v12;
  }
  if (qword_ABC28 != -1) {
    swift_once();
  }
  sub_68970();
  if (v12 == 20)
  {
    sub_68768(v0, v3, (void (*)(void))type metadata accessor for HealthNLIntent);
LABEL_20:
    sub_687C8(v3, (void (*)(void))type metadata accessor for HealthNLIntent);
LABEL_21:
    if (qword_ABC88 != -1) {
      swift_once();
    }
    sub_68970();
    return v12;
  }
  if (sub_37F94(v12) == 0x6573696372657865 && v6 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    sub_68768(v0, v3, (void (*)(void))type metadata accessor for HealthNLIntent);
  }
  else
  {
    char v8 = sub_802B0();
    swift_bridgeObjectRelease();
    sub_68768(v0, v3, (void (*)(void))type metadata accessor for HealthNLIntent);
    if ((v8 & 1) == 0) {
      goto LABEL_20;
    }
  }
  if (qword_ABC80 != -1) {
    swift_once();
  }
  sub_7F310();
  if (v12 == 7) {
    goto LABEL_20;
  }
  uint64_t v4 = 0x6961727465726F63;
  if (sub_65D38(v12) == 1701998435 && v9 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    sub_687C8(v3, (void (*)(void))type metadata accessor for HealthNLIntent);
    return v4;
  }
  char v11 = sub_802B0();
  swift_bridgeObjectRelease();
  sub_687C8(v3, (void (*)(void))type metadata accessor for HealthNLIntent);
  if ((v11 & 1) == 0) {
    goto LABEL_21;
  }
  return v4;
}

BOOL sub_65A78()
{
  uint64_t v1 = sub_6A60(&qword_AFCD0);
  __chkstk_darwin(v1 - 8);
  sub_15228();
  BOOL v9 = sub_668F4();
  if (qword_ABC40 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_678FC((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_7F310();
  uint64_t v2 = sub_7F220();
  int v3 = sub_6B0C(v0, 1, v2);
  sub_1AA7C(v0, &qword_AFCD0);
  BOOL v4 = sub_66B04();
  if (v9)
  {
    sub_4B900();
    unint64_t v5 = _swiftEmptyArrayStorage[2];
    if (v5 >= _swiftEmptyArrayStorage[3] >> 1) {
      sub_4B900();
    }
    _swiftEmptyArrayStorage[2] = v5 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + v5) = 1;
  }
  if (v3 == 1)
  {
    if (!v4)
    {
LABEL_9:
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      goto LABEL_20;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_6894C();
    }
    if (_swiftEmptyArrayStorage[2] >= _swiftEmptyArrayStorage[3] >> 1) {
      sub_4B900();
    }
    sub_689B0();
    if (!v4) {
      goto LABEL_9;
    }
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_6894C();
  }
  unint64_t v7 = _swiftEmptyArrayStorage[2];
  unint64_t v6 = v7 + 1;
  if (v7 >= _swiftEmptyArrayStorage[3] >> 1) {
    sub_4B900();
  }
  sub_689B0();
LABEL_20:
  swift_release();
  return v6 > 1;
}

uint64_t sub_65CEC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_A0850;
  v6._object = a2;
  unint64_t v4 = sub_801E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t sub_65D38(char a1)
{
  return *(void *)&aCore_1[8 * a1];
}

uint64_t sub_65D58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_655B8(*a1, *a2, (uint64_t (*)(void))sub_65D38) & 1;
}

Swift::Int sub_65D90()
{
  return sub_E048(*v0);
}

uint64_t sub_65D98(uint64_t a1)
{
  return sub_E170(a1, *v1);
}

Swift::Int sub_65DA0(uint64_t a1)
{
  return sub_E610(a1, *v1);
}

uint64_t sub_65DA8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_65CEC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_65DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_65D38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_65E04(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_68820();
  unint64_t v5 = sub_6886C();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5);
}

uint64_t sub_65E6C()
{
  if (qword_ABC18 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_65EC8()
{
  sub_6A60(&qword_AE250);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_85BA0;
  if (qword_ABC20 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_AFAD0;
  *(void *)(v0 + 56) = sub_6A60(&qword_AFC28);
  *(void *)(v0 + 64) = sub_67944(&qword_AFC30, &qword_AFC28);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = qword_ABC28;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_AFAD8;
  *(void *)(v0 + 96) = sub_6A60(&qword_AFC38);
  *(void *)(v0 + 104) = sub_67944(&qword_AFC40, &qword_AFC38);
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = qword_ABC80;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_AFB30;
  *(void *)(v0 + 136) = sub_6A60(&qword_AFC48);
  *(void *)(v0 + 144) = sub_67944(&qword_AFC50, &qword_AFC48);
  *(void *)(v0 + 112) = v5;
  uint64_t v6 = qword_ABC88;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_AFB38;
  uint64_t v8 = sub_6A60(&qword_AFC58);
  *(void *)(v0 + 176) = v8;
  uint64_t v9 = sub_67944(&qword_AFC60, &qword_AFC58);
  *(void *)(v0 + 184) = v9;
  *(void *)(v0 + 152) = v7;
  uint64_t v10 = qword_ABC30;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_AFAE0;
  *(void *)(v0 + 216) = v8;
  *(void *)(v0 + 224) = v9;
  *(void *)(v0 + 192) = v11;
  uint64_t v12 = qword_ABC38;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_AFAE8;
  *(void *)(v0 + 256) = sub_6A60(&qword_AFC68);
  *(void *)(v0 + 264) = sub_67944(&qword_AFC70, &qword_AFC68);
  *(void *)(v0 + 232) = v13;
  uint64_t v14 = qword_ABC40;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_AFAF0;
  *(void *)(v0 + 296) = sub_6A60(&qword_AFC78);
  *(void *)(v0 + 304) = sub_67944(&qword_AFC80, &qword_AFC78);
  *(void *)(v0 + 272) = v15;
  uint64_t v16 = qword_ABC48;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_AFAF8;
  *(void *)(v0 + 336) = sub_6A60(&qword_AFC88);
  *(void *)(v0 + 344) = sub_67944(&qword_AFC90, &qword_AFC88);
  *(void *)(v0 + 312) = v17;
  uint64_t v18 = qword_ABC50;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_AFB00;
  *(void *)(v0 + 376) = sub_6A60(&qword_AFC98);
  *(void *)(v0 + 384) = sub_67944(&qword_AFCA0, &qword_AFC98);
  *(void *)(v0 + 352) = v19;
  uint64_t v20 = qword_ABC60;
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_AFB10;
  *(void *)(v0 + 416) = type metadata accessor for HealthNLIntent.HealthAppOntologyNode(0);
  *(void *)(v0 + 424) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v0 + 392) = v21;
  uint64_t v22 = qword_ABC58;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_AFB08;
  *(void *)(v0 + 456) = sub_6A60(&qword_AFCA8);
  *(void *)(v0 + 464) = sub_67944(&qword_AFCB0, &qword_AFCA8);
  *(void *)(v0 + 432) = v23;
  uint64_t v24 = qword_ABC68;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_AFB18;
  *(void *)(v0 + 496) = sub_6A60(&qword_AFCB8);
  *(void *)(v0 + 504) = sub_67944(&qword_AFCC0, &qword_AFCB8);
  *(void *)(v0 + 472) = v25;
  uint64_t v26 = qword_ABC70;
  swift_retain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_AFB20;
  *(void *)(v0 + 536) = v8;
  *(void *)(v0 + 544) = v9;
  *(void *)(v0 + 512) = v27;
  uint64_t v28 = qword_ABC78;
  swift_retain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_AFB28;
  *(void *)(v0 + 576) = v8;
  *(void *)(v0 + 584) = v9;
  *(void *)(v0 + 552) = v29;
  qword_AFAC0 = v0;

  return swift_retain();
}

uint64_t sub_6649C()
{
  if (qword_ABC10 != -1) {
    swift_once();
  }
  sub_7F160();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_7F150();
  qword_AFAC8 = result;
  return result;
}

uint64_t sub_66534(uint64_t a1)
{
  return sub_6892C(a1, &qword_AFC28, 0x655668746C616568, 25202, &qword_AFAD0);
}

uint64_t sub_6655C(uint64_t a1)
{
  return sub_6892C(a1, &qword_AFC38, 0x6F4E68746C616568, 28277, &qword_AFAD8);
}

uint64_t sub_66584(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC58, 0x634168746C616568, 0xEE00797469766974, &qword_AFAE0);
}

uint64_t sub_665B8(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC68, 0xD000000000000016, 0x8000000000089D30, &qword_AFAE8);
}

uint64_t sub_665E4(uint64_t a1)
{
  return sub_688D4(a1, &qword_AFC78, 21, 0x8000000000089D10, &qword_AFAF0);
}

uint64_t sub_6660C(uint64_t a1)
{
  return sub_68924(a1, &qword_AFC88, 0x614D68746C616568, 0x647574696E67, &qword_AFAF8);
}

uint64_t sub_6663C(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC98, 0xD000000000000016, 0x8000000000089CF0, &qword_AFB00);
}

uint64_t sub_66668(uint64_t a1)
{
  return sub_688D4(a1, &qword_AFCA8, 18, 0x8000000000089CD0, &qword_AFB08);
}

uint64_t sub_66690()
{
  type metadata accessor for HealthNLIntent.HealthAppOntologyNode(0);
  swift_allocObject();
  uint64_t result = sub_675C0();
  qword_AFB10 = result;
  return result;
}

uint64_t sub_666D0(uint64_t a1)
{
  return sub_68924(a1, &qword_AFCB8, 0x655268746C616568, 0x636E65726566, &qword_AFB18);
}

uint64_t sub_66700(uint64_t a1)
{
  return sub_688D4(a1, &qword_AFC58, 17, 0x8000000000089CB0, &qword_AFB20);
}

uint64_t sub_66728(uint64_t a1)
{
  return sub_688D4(a1, &qword_AFC58, 22, 0x8000000000089C90, &qword_AFB28);
}

uint64_t sub_66750(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC48, 0xD000000000000010, 0x8000000000089C70, &qword_AFB30);
}

uint64_t sub_6677C(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC58, 0xD000000000000012, 0x8000000000089C50, &qword_AFB38);
}

uint64_t sub_667A8()
{
  if (qword_ABC38 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_678FC((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_7F310();
  uint64_t result = v4;
  if (v4 && v4 != 1)
  {
    sub_65640();
    unsigned __int8 v1 = sub_15F7C() - 14;
    sub_65640();
    unsigned __int8 v2 = sub_15F7C();
    if (v2 == 87)
    {
      if (v1 >= 3u) {
        return 2;
      }
      return 0;
    }
    if (v1 < 3u) {
      return 0;
    }
    unsigned __int8 v3 = v2;
    if (v2 > 0xBu) {
      return 2;
    }
    uint64_t result = 1;
    if (((1 << v3) & 0x821) == 0) {
      return 2;
    }
  }
  return result;
}

BOOL sub_668F4()
{
  uint64_t v0 = sub_6A60(&qword_AFCC8);
  __chkstk_darwin(v0 - 8);
  unsigned __int8 v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_6A60(&qword_AFD10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_ABC48 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_678FC((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_7F310();
  if (sub_6B0C((uint64_t)v2, 1, v3) == 1)
  {
    sub_1AA7C((uint64_t)v2, &qword_AFCC8);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_7F610();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    return v8[15] < 7u;
  }
}

BOOL sub_66B04()
{
  uint64_t v0 = sub_6A60(&qword_AFCC8);
  __chkstk_darwin(v0 - 8);
  unsigned __int8 v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_6A60(&qword_AFD10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_ABC48 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_678FC((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_7F310();
  if (sub_6B0C((uint64_t)v2, 1, v3) == 1)
  {
    sub_1AA7C((uint64_t)v2, &qword_AFCC8);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_7F610();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    return v8[15] - 7 < 2;
  }
}

uint64_t sub_66D18()
{
  sub_6A60(&qword_AC978);
  sub_151D0();
  __chkstk_darwin(v1);
  sub_15228();
  sub_6A60(&qword_AFCC8);
  sub_151D0();
  __chkstk_darwin(v2);
  sub_755C();
  uint64_t v5 = v4 - v3;
  sub_6A60(&qword_AFCD0);
  sub_151D0();
  __chkstk_darwin(v6);
  sub_755C();
  uint64_t v9 = v8 - v7;
  sub_80020(150);
  v11._object = (void *)0x800000000008ADC0;
  v11._countAndFlagsBits = 0xD000000000000017;
  sub_7FCD0(v11);
  if (qword_ABC20 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_678FC((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_688B8();
  sub_6A60(&qword_AFCD8);
  v12._countAndFlagsBits = sub_7FF30();
  sub_688DC(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x3A6E756F4E2D200ALL;
  v13._object = (void *)0xE900000000000020;
  sub_7FCD0(v13);
  if (qword_ABC28 != -1) {
    swift_once();
  }
  sub_688B8();
  sub_6A60(&qword_AFCE0);
  v14._countAndFlagsBits = sub_7FF30();
  sub_688DC(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x4679646F422D200ALL;
  v15._object = (void *)0xEE00203A7375636FLL;
  sub_7FCD0(v15);
  if (qword_ABC80 != -1) {
    swift_once();
  }
  sub_688B8();
  sub_6A60(&qword_AFCE8);
  v16._countAndFlagsBits = sub_7FF30();
  sub_688DC(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x76697463412D200ALL;
  v17._object = (void *)0xED0000203A797469;
  sub_7FCD0(v17);
  sub_65640();
  sub_6A60(&qword_AF470);
  v18._countAndFlagsBits = sub_7FF30();
  sub_7FCD0(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_6898C(0x636F4C2D200ALL);
  if (qword_ABC38 != -1) {
    swift_once();
  }
  sub_688B8();
  sub_6A60(&qword_AFCF0);
  v19._countAndFlagsBits = sub_7FF30();
  sub_688DC(v19);
  swift_bridgeObjectRelease();
  sub_6898C(0x7275442D200ALL);
  if (qword_ABC40 != -1) {
    swift_once();
  }
  sub_688B8();
  v20._countAndFlagsBits = sub_7FF30();
  sub_688DC(v20);
  swift_bridgeObjectRelease();
  sub_1AA7C(v9, &qword_AFCD0);
  v21._countAndFlagsBits = 0x696E67614D2D200ALL;
  v21._object = (void *)0xEE00203A65647574;
  sub_7FCD0(v21);
  if (qword_ABC48 != -1) {
    swift_once();
  }
  sub_688B8();
  v22._countAndFlagsBits = sub_7FF30();
  sub_688DC(v22);
  swift_bridgeObjectRelease();
  sub_1AA7C(v5, &qword_AFCC8);
  v23._countAndFlagsBits = 0x72656665522D200ALL;
  v23._object = (void *)0xEE00203A65636E65;
  sub_7FCD0(v23);
  if (qword_ABC68 != -1) {
    swift_once();
  }
  sub_688B8();
  sub_6A60(&qword_AFCF8);
  v24._countAndFlagsBits = sub_7FF30();
  sub_688DC(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 0x3A65646F4D2D200ALL;
  v25._object = (void *)0xE900000000000020;
  sub_7FCD0(v25);
  if (qword_ABC50 != -1) {
    swift_once();
  }
  sub_688B8();
  sub_6A60(&qword_AFD00);
  v26._countAndFlagsBits = sub_7FF30();
  sub_688DC(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0x203A7070412D200ALL;
  v27._object = (void *)0xE800000000000000;
  sub_7FCD0(v27);
  if (qword_ABC60 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent.HealthNLApp(0);
  sub_678FC(&qword_AC988, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);
  sub_7F300();
  v28._countAndFlagsBits = sub_7FF30();
  sub_7FCD0(v28);
  swift_bridgeObjectRelease();
  sub_1AA7C(v0, &qword_AC978);
  return 0;
}

uint64_t sub_673B4@<X0>(uint64_t a1@<X8>)
{
  return sub_67E30((void (*)(void))&type metadata accessor for NLIntent, a1);
}

uint64_t sub_673CC()
{
  return sub_65E6C();
}

uint64_t sub_673E8(uint64_t a1)
{
  uint64_t v2 = sub_678FC(&qword_AFD08, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);

  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_67464(uint64_t a1)
{
  uint64_t v2 = sub_678FC(&qword_AFD08, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);

  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_674D0(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC58, 0x6972747441707061, 0xED00007365747562, &qword_B70A8);
}

uint64_t sub_67504(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC58, 0x656D614E707061, 0xE700000000000000, &qword_B70B0);
}

uint64_t sub_6752C(uint64_t a1)
{
  return sub_67560(a1, &qword_AFC58, 0x746163696C707061, 0xED000064496E6F69, &qword_B70B8);
}

uint64_t sub_67560(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_6A60(a2);
  swift_allocObject();
  uint64_t result = sub_7F170();
  *a5 = result;
  return result;
}

uint64_t sub_675C0()
{
  sub_6A60(&qword_AE250);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_83200;
  if (qword_ABC90 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_B70A8;
  uint64_t v2 = sub_6A60(&qword_AFC58);
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = sub_67944(&qword_AFC60, &qword_AFC58);
  *(void *)(v0 + 64) = v3;
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = qword_ABC98;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_B70B0;
  *(void *)(v0 + 96) = v2;
  *(void *)(v0 + 104) = v3;
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = qword_ABCA0;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_B70B8;
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 112) = v7;
  swift_retain();

  return NonTerminalOntologyNode.init(name:multicardinal:childNodes:)(7368801, 0xE300000000000000, 0, v0);
}

void sub_67734()
{
}

uint64_t sub_67764()
{
  uint64_t v0 = sub_7F120();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_67794()
{
  return type metadata accessor for HealthNLIntent.HealthAppOntologyNode(0);
}

uint64_t sub_6779C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_677B0);
}

uint64_t sub_677B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F6B0();

  return sub_6B0C(a1, a2, v4);
}

uint64_t sub_677F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6780C);
}

uint64_t sub_6780C()
{
  sub_7F6B0();
  uint64_t v0 = sub_3B950();

  return sub_9B2C(v0, v1, v2, v3);
}

uint64_t type metadata accessor for HealthNLIntent(uint64_t a1)
{
  return sub_3A118(a1, qword_AFBE8);
}

uint64_t sub_6786C()
{
  return sub_678FC((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
}

uint64_t sub_678B4()
{
  return sub_678FC(&qword_AFC20, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
}

uint64_t sub_678FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_67944(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10C00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HealthNLIntent.HealthNLApp(uint64_t a1)
{
  return sub_3A118(a1, qword_AFD70);
}

uint64_t sub_679B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_7F340();
  sub_151D0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a3, a1);
  *(void *)(a3 + *(int *)(type metadata accessor for HealthNLIntent.HealthNLApp(0) + 20)) = a2;

  return swift_retain();
}

uint64_t sub_67A3C()
{
  uint64_t v2 = v1;
  type metadata accessor for HealthNLIntent.HealthNLApp(0);
  sub_151D0();
  __chkstk_darwin(v3);
  sub_15228();
  sub_80020(29);
  swift_bridgeObjectRelease();
  if (qword_ABC98 != -1) {
    swift_once();
  }
  sub_678FC(&qword_AC990, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);
  sub_7F310();
  uint64_t v4 = v15;
  if (v15)
  {
    unint64_t v14 = 0x8000000000088A30;
    sub_141DC();
    if (sub_7FFB0())
    {
      unint64_t v14 = 0x8000000000088A30;
      sub_68910();
      sub_7FFA0();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      uint64_t v4 = v6;
    }
  }
  sub_6A60(&qword_AF470);
  uint64_t v7 = sub_7FF30();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = v7;
  v16._object = v9;
  sub_7FCD0(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0xD000000000000011;
  v17._object = (void *)0x800000000008AE40;
  sub_7FCD0(v17);
  if (qword_ABCA0 != -1) {
    swift_once();
  }
  sub_7F310();
  sub_68768(v2, v0, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
  if (!v4)
  {
    sub_7F310();
    if (v14)
    {
      sub_141DC();
      if (sub_7FFB0())
      {
        sub_68910();
        sub_7FFA0();
        swift_bridgeObjectRelease();
      }
    }
  }
  sub_687C8(v0, (void (*)(void))type metadata accessor for HealthNLIntent.HealthNLApp);
  uint64_t v10 = sub_7FF30();
  Swift::String v12 = v11;
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = v10;
  v18._object = v12;
  sub_7FCD0(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 93;
  v19._object = (void *)0xE100000000000000;
  sub_7FCD0(v19);
  return 0x203A656D616E5BLL;
}

uint64_t sub_67E18@<X0>(uint64_t a1@<X8>)
{
  return sub_67E30((void (*)(void))&type metadata accessor for NonTerminalIntentNode, a1);
}

uint64_t sub_67E30@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  a1(0);
  sub_151D0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a2, v2, v4);
}

uint64_t sub_67E94()
{
  return swift_retain();
}

uint64_t sub_67EA8(uint64_t a1)
{
  uint64_t v2 = sub_678FC(&qword_AC988, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);

  return NonTerminalIntentNodeWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_67F24(uint64_t a1)
{
  uint64_t v2 = sub_678FC(&qword_AC988, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);

  return NonTerminalIntentNodeWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t *sub_67F90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_7F340();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_6805C(uint64_t a1)
{
  uint64_t v2 = sub_7F340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_680D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_7F340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_68150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_7F340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_681DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_7F340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_68258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_7F340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_682DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_682F0);
}

uint64_t sub_682F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_7F340();
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_6837C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_68390);
}

void sub_68390(uint64_t a1, int a2, int a3, uint64_t a4)
{
  sub_7F340();
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_6840C()
{
  uint64_t result = sub_7F340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutBodyFocus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for WorkoutBodyFocus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x685F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutBodyFocus()
{
  return &type metadata for WorkoutBodyFocus;
}

unint64_t sub_68634()
{
  unint64_t result = qword_AFDA8;
  if (!qword_AFDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFDA8);
  }
  return result;
}

unint64_t sub_68684()
{
  unint64_t result = qword_AFDB0;
  if (!qword_AFDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFDB0);
  }
  return result;
}

unint64_t sub_686D4()
{
  unint64_t result = qword_AFDB8;
  if (!qword_AFDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFDB8);
  }
  return result;
}

uint64_t sub_68720()
{
  return sub_678FC(&qword_AC990, (void (*)(uint64_t))type metadata accessor for HealthNLIntent.HealthNLApp);
}

uint64_t sub_68768(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_151D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_687C8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_151D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_68820()
{
  unint64_t result = qword_AFDC0;
  if (!qword_AFDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFDC0);
  }
  return result;
}

unint64_t sub_6886C()
{
  unint64_t result = qword_AFDC8;
  if (!qword_AFDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_AFDC8);
  }
  return result;
}

uint64_t sub_688B8()
{
  return sub_7F310();
}

uint64_t sub_688D4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_67560(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4, a5);
}

void sub_688DC(Swift::String a1)
{
  sub_7FCD0(a1);
}

uint64_t sub_688F4()
{
  return sub_802B0();
}

uint64_t sub_68924(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_67560(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xEF65000000000000, a5);
}

uint64_t sub_6892C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_67560(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000, a5);
}

void sub_6894C()
{
  sub_4B900();
}

uint64_t sub_68970()
{
  return sub_7F310();
}

void sub_6898C(uint64_t a1)
{
  v2._countAndFlagsBits = a1 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
  v2._object = (void *)0xED0000203A6E6F69;
  sub_7FCD0(v2);
}

void sub_689B0()
{
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + v2 + 32) = 1;
}

_UNKNOWN **sub_689C4()
{
  return &off_AFDD0;
}

id sub_689D0(uint64_t a1)
{
  return sub_69230(a1, (Class *)INResumeWorkoutIntent_ptr);
}

void *sub_689DC()
{
  uint64_t v0 = sub_6A60(&qword_AFF10);
  uint64_t v1 = sub_DC74(v0);
  __chkstk_darwin(v1);
  sub_F67C();
  char v71 = v2;
  uint64_t v70 = sub_7F240();
  sub_6D54();
  uint64_t v68 = v3;
  __chkstk_darwin(v4);
  sub_F67C();
  uint64_t v67 = v5;
  uint64_t v6 = sub_6A60(&qword_AFCD0);
  uint64_t v7 = sub_DC74(v6);
  __chkstk_darwin(v7);
  sub_15308();
  uint64_t v72 = v8;
  sub_152AC();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = sub_6A60(&qword_AFF18);
  uint64_t v13 = sub_DC74(v12);
  __chkstk_darwin(v13);
  sub_15308();
  uint64_t v69 = v14;
  sub_152AC();
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)&v65 - v16;
  uint64_t v18 = sub_6A60(&qword_AFCC8);
  uint64_t v19 = sub_DC74(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  Swift::String v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  Swift::String v24 = (char *)&v65 - v23;
  uint64_t v74 = sub_65640();
  uint64_t v76 = v25;
  sub_65640();
  unint64_t v26 = 0xE000000000000000;
  char v27 = sub_15F7C();
  if (v27 == 87)
  {
    unint64_t v73 = 0;
  }
  else
  {
    unint64_t v73 = sub_15EFC(v27);
    unint64_t v26 = v28;
  }
  unint64_t v75 = v26;
  uint64_t v77 = sub_69304();
  if (qword_ABC48 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_6B5C0((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_6B608();
  uint64_t v29 = sub_6A60(&qword_AFD10);
  sub_6B624((uint64_t)v24);
  if (v30)
  {
    sub_7494((uint64_t)v24, &qword_AFCC8);
LABEL_10:
    uint64_t v78 = 0;
    goto LABEL_12;
  }
  sub_7F610();
  int v31 = v79;
  sub_7550();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v29);
  if (v31 == 22) {
    goto LABEL_10;
  }
  uint64_t v78 = sub_5CE2C(v31);
LABEL_12:
  sub_6B608();
  sub_6B624((uint64_t)v22);
  if (v30)
  {
    sub_7494((uint64_t)v22, &qword_AFCC8);
    uint64_t v81 = 0;
    char v82 = 1;
  }
  else
  {
    sub_7F620();
    sub_7550();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v29);
  }
  if (qword_ABC40 != -1) {
    swift_once();
  }
  sub_6B608();
  uint64_t v34 = sub_7F220();
  if (sub_6B0C((uint64_t)v11, 1, v34) == 1)
  {
    uint64_t v35 = &qword_AFCD0;
    uint64_t v36 = (uint64_t)v11;
LABEL_31:
    sub_7494(v36, v35);
    goto LABEL_32;
  }
  sub_7F210();
  sub_7550();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v37 + 8);
  v38(v11, v34);
  uint64_t v39 = sub_7F270();
  sub_6B624((uint64_t)v17);
  if (v30)
  {
    uint64_t v35 = &qword_AFF18;
LABEL_30:
    uint64_t v36 = (uint64_t)v17;
    goto LABEL_31;
  }
  uint64_t v65 = sub_7F260();
  char v41 = v40;
  sub_7550();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v42 + 8);
  v66(v17, v39);
  if ((v41 & 1) == 0)
  {
    uint64_t v43 = v72;
    sub_6B608();
    if (sub_6B0C(v43, 1, v34) == 1)
    {
      sub_7494(v43, &qword_AFCD0);
      Swift::String v17 = v71;
LABEL_28:
      sub_9B2C((uint64_t)v17, 1, 1, v70);
LABEL_29:
      uint64_t v35 = &qword_AFF10;
      goto LABEL_30;
    }
    sub_7F210();
    v38((char *)v43, v34);
    uint64_t v44 = v69;
    sub_6B624(v69);
    Swift::String v17 = v71;
    if (v30)
    {
      sub_7494(v44, &qword_AFF18);
      goto LABEL_28;
    }
    sub_7F250();
    v66((char *)v44, v39);
    uint64_t v61 = v70;
    int v62 = sub_6B0C((uint64_t)v17, 1, v70);
    if (v62 == 1) {
      goto LABEL_29;
    }
    uint64_t v63 = v67;
    uint64_t v64 = v68;
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v67, v17, v61);
    uint64_t v78 = sub_72BBC();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v61);
    uint64_t v81 = v65;
    char v82 = 0;
  }
LABEL_32:
  if (qword_ABC70 != -1) {
    swift_once();
  }
  sub_6B608();
  uint64_t v45 = v79;
  uint64_t v46 = v80;
  if (qword_ABC78 != -1) {
    swift_once();
  }
  sub_6B608();
  uint64_t v47 = v79;
  uint64_t v48 = v80;
  id v49 = objc_allocWithZone((Class)INWorkoutCustomization);
  id v50 = sub_6B434(v45, v46, v47, v48);
  if (qword_ABC68 != -1) {
    swift_once();
  }
  sub_6B608();
  int v51 = v79;
  uint64_t v52 = v76;
  if (v76)
  {
    id v53 = objc_allocWithZone((Class)INSpeakableString);
    id v54 = sub_6B370(v73, v75, v74, v52, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v54 = 0;
  }
  uint64_t v55 = qword_ABC28;
  id v56 = v54;
  if (v55 != -1) {
    swift_once();
  }
  if (v51 == 27) {
    uint64_t v57 = 2;
  }
  else {
    uint64_t v57 = v51 == 25;
  }
  sub_6B608();
  sub_D838(0, (unint64_t *)&qword_AC898);
  uint64_t v58 = (void *)sub_7FEA0();
  [v58 setSequenceLabel:v57];
  id v59 = v50;
  [v58 setCustomization:v59];

  return v58;
}

id sub_6920C(uint64_t a1)
{
  return sub_69230(a1, (Class *)INCancelWorkoutIntent_ptr);
}

id sub_69218(uint64_t a1)
{
  return sub_69230(a1, (Class *)INEndWorkoutIntent_ptr);
}

id sub_69224(uint64_t a1)
{
  return sub_69230(a1, (Class *)INPauseWorkoutIntent_ptr);
}

id sub_69230(uint64_t a1, Class *a2)
{
  sub_65640();
  sub_65640();
  char v3 = sub_15F7C();
  if (v3 != 87) {
    sub_15EFC(v3);
  }
  id v4 = objc_allocWithZone((Class)INSpeakableString);
  sub_6B698();
  id v11 = sub_6B370(v5, v6, v7, v8, v9, v10);
  id v12 = [objc_allocWithZone(*a2) initWithWorkoutName:v11];

  return v12;
}

uint64_t sub_69304()
{
  uint64_t v0 = sub_65640();
  if (v1) {
    uint64_t v2 = v0;
  }
  else {
    uint64_t v2 = 0;
  }
  if (v1) {
    unint64_t v3 = v1;
  }
  else {
    unint64_t v3 = 0xE000000000000000;
  }
  char v4 = sub_667A8();
  if (v4 == 2)
  {
    if (v2 == 1835628403 && v3 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v6 = sub_802B0();
      swift_bridgeObjectRelease();
      if (v6) {
        return 2;
      }
      else {
        return 0;
      }
    }
  }
  else
  {
    char v8 = v4;
    swift_bridgeObjectRelease();
    if (v8) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_693C8(char a1)
{
  id v2 = [objc_allocWithZone((Class)NSNumber) initWithBool:a1 & 1];
  [v1 setIsBuiltInWorkoutType:v2];
}

uint64_t sub_69438(void *a1)
{
  sub_D838(0, (unint64_t *)&qword_AC898);
  id v2 = a1;
  return sub_7FEA0();
}

NSObject *sub_69494(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC2C0);
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_F67C();
  uint64_t v162 = v4;
  uint64_t v5 = sub_7FBE0();
  sub_6D54();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  id v11 = (char *)v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v153 - v13;
  __chkstk_darwin(v12);
  v163 = (char *)v153 - v15;
  sub_152AC();
  __chkstk_darwin(v16);
  uint64_t v167 = (void (*)(void))((char *)v153 - v17);
  uint64_t v18 = sub_7F4A0();
  sub_6D54();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_F67C();
  sub_6B68C(v22);
  uint64_t v164 = sub_6A60(&qword_AFF20);
  sub_7550();
  __chkstk_darwin(v23);
  sub_F67C();
  sub_6B68C(v24);
  uint64_t v25 = sub_6A60(&qword_AE710);
  uint64_t v26 = sub_DC74(v25);
  __chkstk_darwin(v26);
  sub_15308();
  uint64_t v165 = v27;
  sub_152AC();
  __chkstk_darwin(v28);
  char v30 = (char *)v153 - v29;
  sub_152AC();
  __chkstk_darwin(v31);
  sub_6B68C((uint64_t)v153 - v32);
  uint64_t v33 = sub_6A60(&qword_ACDE0);
  uint64_t v34 = sub_DC74(v33);
  __chkstk_darwin(v34);
  sub_F67C();
  sub_6B68C(v35);
  uint64_t v36 = sub_6A60(&qword_ACDD0);
  uint64_t v37 = sub_DC74(v36);
  __chkstk_darwin(v37);
  sub_F67C();
  sub_6B68C(v38);
  uint64_t v39 = sub_6A60(&qword_ACDC0);
  uint64_t v40 = sub_DC74(v39);
  __chkstk_darwin(v40);
  sub_755C();
  uint64_t v43 = v42 - v41;
  if (!sub_7F990())
  {
LABEL_4:
    uint64_t v44 = sub_7FBA0();
    sub_9D08();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, v44, v5);
    swift_retain_n();
    uint64_t v45 = sub_7FBD0();
    os_log_type_t v46 = sub_7FE30();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v170 = v5;
      uint64_t v169 = v7;
      uint64_t v47 = (uint8_t *)sub_269F4();
      uint64_t v175 = sub_1FA2C();
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v174 = a1;
      sub_7F690();
      swift_retain();
      uint64_t v48 = sub_7FC60();
      uint64_t v174 = sub_1CDF0(v48, v49, &v175);
      sub_7FF60();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v45, v46, "Failed to convert UsoTask to UsoTask_create_common_Workout: %s", v47, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(char *, uint64_t))(v169 + 8))(v11, v170);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v5);
    }
    sub_2DE78();
    swift_allocError();
    unsigned char *v50 = 1;
    swift_willThrow();
    return v45;
  }
  if (sub_F370(a1, 0))
  {
    swift_release();
    goto LABEL_4;
  }
  v153[1] = v14;
  uint64_t v169 = v7;
  uint64_t v170 = v5;
  id v176 = 0;
  uint64_t v158 = a1;
  sub_7F990();
  uint64_t v52 = sub_7F960();
  uint64_t v54 = v53;
  swift_release();
  if (v54)
  {
    swift_bridgeObjectRetain_n();
    sub_7F910();
    uint64_t v55 = sub_7F9B0();
    if (v56) {
      uint64_t v57 = v55;
    }
    else {
      uint64_t v57 = 0;
    }
    if (v56) {
      uint64_t v58 = v56;
    }
    else {
      uint64_t v58 = 0xE000000000000000;
    }
    id v59 = objc_allocWithZone((Class)INSpeakableString);
    id v176 = sub_6B370(v57, v58, v52, v54, 0, 0);
  }
  uint64_t v157 = v52;
  sub_7F990();
  uint64_t v60 = sub_7F930();
  uint64_t v62 = v61;
  swift_release();
  if (v62)
  {
    BOOL v63 = v60 == 1819242352 && v62 == 0xE400000000000000;
    if (v63 || (sub_802B0() & 1) != 0)
    {
      uint64_t v64 = 2;
LABEL_24:
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    BOOL v65 = v60 == 0x657461776E65706FLL && v62 == 0xE900000000000072;
    if (v65 || (sub_802B0() & 1) != 0)
    {
      uint64_t v64 = 1;
      goto LABEL_24;
    }
  }
  uint64_t v66 = sub_36338(v60, v62);
  if ((v67 & 1) == 0)
  {
    uint64_t v64 = v66;
    if (v66) {
      goto LABEL_33;
    }
  }
  if (!v54) {
    goto LABEL_68;
  }
  uint64_t v80 = v157;
  BOOL v81 = v157 == 1835628403 && v54 == 0xE400000000000000;
  if (v81 || (sub_6B670() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = 2;
    goto LABEL_34;
  }
  BOOL v82 = v80 == 1802264951 && v54 == 0xE400000000000000;
  if (v82 || (sub_6B670() & 1) != 0 || (v80 == 7239026 ? (BOOL v83 = v54 == 0xE300000000000000) : (BOOL v83 = 0), v83))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v84 = sub_6B670();
    swift_bridgeObjectRelease();
    if ((v84 & 1) == 0)
    {
LABEL_68:
      uint64_t v64 = 0;
      goto LABEL_34;
    }
  }
  uint64_t v64 = 1;
LABEL_34:
  uint64_t v68 = (uint64_t)v168;
  uint64_t v156 = v64;
  if (sub_7F380())
  {
    uint64_t v69 = sub_7F480();
    swift_release();
    if (v69)
    {
      swift_retain();
      sub_7F190();
      uint64_t v157 = v69;
      swift_release();
      char v70 = 0;
      goto LABEL_40;
    }
    uint64_t v157 = 0;
  }
  else
  {
    uint64_t v157 = 0;
  }
  char v70 = 1;
LABEL_40:
  sub_7F3B0();
  sub_7F3F0();
  swift_release();
  if (!v177)
  {
LABEL_73:
    uint64_t v79 = (uint64_t)v166;
    if ((v70 & 1) != 0 || (swift_retain(), unint64_t v85 = sub_7F470(), swift_release(), !v85))
    {
LABEL_82:
      uint64_t v155 = 0;
      uint64_t v76 = 0;
LABEL_86:
      int v154 = 1;
      goto LABEL_87;
    }
    if (v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_801C0();
      swift_bridgeObjectRelease();
      if (v76)
      {
LABEL_77:
        sub_140AC(0, (v85 & 0xC000000000000001) == 0, v85);
        if ((v85 & 0xC000000000000001) != 0) {
          sub_80040();
        }
        else {
          swift_retain();
        }
        swift_bridgeObjectRelease();
        sub_7F290();
        swift_release();
        uint64_t v76 = v177;
        if (v177)
        {
          uint64_t v86 = sub_7F5F0();
          swift_release();
          if (v86)
          {
            uint64_t v87 = v159;
            sub_7F580();
            os_log_type_t v88 = sub_19F00();
            sub_7494(v87, &qword_ACDD0);
            sub_7F580();
            uint64_t v155 = sub_1A2CC(v157, v87);
            char v90 = v89;
            swift_release();
            int v154 = v90 & 1;
            uint64_t v76 = (uint64_t)v88;
            uint64_t v91 = v87;
            uint64_t v79 = (uint64_t)v166;
            sub_7494(v91, &qword_ACDD0);
            goto LABEL_87;
          }
          goto LABEL_82;
        }
LABEL_85:
        uint64_t v155 = 0;
        goto LABEL_86;
      }
    }
    else
    {
      uint64_t v76 = *(void *)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFFF8));
      if (v76) {
        goto LABEL_77;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_85;
  }
  unint64_t v71 = sub_7F3A0();
  if (!v71)
  {
    swift_release();
    goto LABEL_73;
  }
  unint64_t v72 = v71;
  if (!(v71 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v71 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_44;
    }
LABEL_72:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_73;
  }
  if (!sub_801C0()) {
    goto LABEL_72;
  }
LABEL_44:
  sub_140AC(0, (v72 & 0xC000000000000001) == 0, v72);
  if ((v72 & 0xC000000000000001) != 0) {
    sub_80040();
  }
  else {
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_7F290();
  swift_release();
  if (!v177 || (uint64_t v73 = sub_7F5A0(), swift_release(), !v73))
  {
    swift_release();
    uint64_t v68 = (uint64_t)v168;
    goto LABEL_73;
  }
  sub_7F3C0();
  uint64_t v74 = sub_1A0A8();
  uint64_t v75 = v43;
  uint64_t v76 = (uint64_t)v74;
  sub_7494(v75, &qword_ACDC0);
  uint64_t v155 = sub_1A1CC();
  char v78 = v77;
  swift_release();
  swift_release();
  int v154 = v78 & 1;
  uint64_t v79 = (uint64_t)v166;
  uint64_t v68 = (uint64_t)v168;
LABEL_87:
  swift_retain();
  uint64_t v92 = sub_7F2A0();
  swift_release();
  if (v92)
  {
    uint64_t v93 = v161;
    sub_7F4C0();
    uint64_t v168 = sub_1A8C8();
    swift_release();
    sub_7494(v93, &qword_ACDE0);
  }
  else
  {
    uint64_t v168 = 0;
  }
  uint64_t v94 = v165;
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v68, enum case for UsoEntity_common_WorkoutGoal.DefinedValues.common_WorkoutGoal_Open(_:), v18);
  sub_9B2C(v68, 0, 1, v18);
  if (sub_7F380())
  {
    sub_7F490();
    swift_release();
  }
  else
  {
    sub_9B2C((uint64_t)v30, 1, 1, v18);
  }
  uint64_t v95 = v79 + *(int *)(v164 + 48);
  sub_6B4D4(v68, v79);
  sub_6B4D4((uint64_t)v30, v95);
  sub_6B6AC(v79);
  if (v63)
  {
    sub_7494((uint64_t)v30, &qword_AE710);
    sub_7494(v68, &qword_AE710);
    sub_6B6AC(v95);
    if (v63) {
      unint64_t v96 = &qword_AE710;
    }
    else {
      unint64_t v96 = &qword_AFF20;
    }
  }
  else
  {
    sub_6B4D4(v79, v94);
    sub_6B6AC(v95);
    if (v97)
    {
      sub_7494((uint64_t)v30, &qword_AE710);
      sub_7494(v68, &qword_AE710);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v94, v18);
      unint64_t v96 = &qword_AFF20;
    }
    else
    {
      uint64_t v98 = *(void (**)(void *, uint64_t, uint64_t))(v20 + 32);
      uint64_t v165 = v76;
      uint64_t v99 = v160;
      v98(v160, v95, v18);
      sub_6B5C0(&qword_AFF28, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_WorkoutGoal.DefinedValues);
      sub_7FC30();
      uint64_t v100 = *(void (**)(void *, uint64_t))(v20 + 8);
      v100(v99, v18);
      unint64_t v96 = &qword_AE710;
      sub_7494((uint64_t)v30, &qword_AE710);
      sub_7494(v68, &qword_AE710);
      v100((void *)v94, v18);
    }
  }
  sub_7494(v79, v96);
  sub_D838(0, (unint64_t *)&qword_AC898);
  id v101 = v176;
  uint64_t v102 = (void *)sub_7FEA0();
  [v102 setSequenceLabel:v168];
  sub_7F990();
  char v103 = 1;
  uint64_t v104 = sub_7F960();
  uint64_t v106 = v105;
  swift_release();
  uint64_t v107 = v170;
  if (v106)
  {
    char v108 = sub_12DF0(v104, v106);
    swift_bridgeObjectRelease();
    char v103 = v108 ^ 1;
  }
  uint64_t v109 = v167;
  uint64_t v168 = (uint64_t *)v102;
  sub_693C8(v103 & 1);
  uint64_t v110 = sub_6B6D8();
  if (v111)
  {
    unint64_t v112 = v111;
    uint64_t v165 = v110;
    uint64_t v113 = sub_7FBA0();
    sub_9D08();
    uint64_t v114 = v169;
    uint64_t v115 = *(void (**)(void, void, void))(v169 + 16);
    uint64_t v164 = v169 + 16;
    uint64_t v166 = v115;
    v115(v109, v113, v107);
    swift_bridgeObjectRetain_n();
    uint64_t v116 = sub_7FBD0();
    os_log_type_t v117 = sub_7FE20();
    if (os_log_type_enabled(v116, v117))
    {
      uint64_t v118 = swift_slowAlloc();
      uint64_t v160 = (void *)swift_slowAlloc();
      uint64_t v161 = sub_1FA2C();
      uint64_t v175 = v161;
      *(_DWORD *)uint64_t v118 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v174 = sub_1CDF0(v165, v112, &v175);
      sub_6B660();
      sub_7FF60();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v118 + 12) = 2112;
      sub_9D08();
      id v119 = v176;
      if (v176)
      {
        uint64_t v174 = (uint64_t)v176;
        id v120 = v176;
        sub_6B660();
        uint64_t v109 = v167;
      }
      else
      {
        uint64_t v174 = 0;
        sub_6B660();
      }
      sub_7FF60();
      *uint64_t v160 = v119;
      _os_log_impl(&dword_0, v116, v117, "Found instructor,  assuming search required: %s with modality: %@", (uint8_t *)v118, 0x16u);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      sub_6B6CC();
      uint64_t v121 = *(void (**)(void))(v123 + 8);
      uint64_t v122 = v109;
      uint64_t v107 = v170;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v121 = *(void (**)(void))(v114 + 8);
      uint64_t v122 = v109;
    }
    uint64_t v167 = v121;
    ((void (*)(void (*)(void), uint64_t))v121)(v122, v107);
    type metadata accessor for SearchBundleHelper();
    swift_initStackObject();
    sub_1B920();
    uint64_t v125 = v124;
    uint64_t v126 = v162;
    sub_1B950(v162);
    sub_9D08();
    uint64_t v127 = v163;
    if (v176)
    {
      id v128 = [v176 spokenPhrase];
      uint64_t v129 = sub_7FC50();
      uint64_t v131 = v130;

      uint64_t v107 = v170;
    }
    else
    {
      uint64_t v129 = 0;
      uint64_t v131 = 0;
    }
    uint64_t v132 = search(dataPath:guest:modality:)(v126, v165, v112, v129, v131);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_7494(v126, &qword_AC2C0);
    sub_9D08();
    sub_6B644();
    v133();
    swift_bridgeObjectRetain();
    uint64_t v134 = sub_7FBD0();
    os_log_type_t v135 = sub_7FE20();
    if (os_log_type_enabled(v134, v135))
    {
      unint64_t v136 = (uint8_t *)sub_269F4();
      *(_DWORD *)unint64_t v136 = 134217984;
      v173[1] = v132[2];
      sub_7FF60();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v134, v135, "Found %ld workouts, converting and attaching", v136, 0xCu);
      uint64_t v107 = v170;
      sub_9CB0();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_6B6CC();
    uint64_t v137 = v127;
    v138 = v167;
    uint64_t v169 = v139 + 8;
    ((void (*)(char *, uint64_t))v167)(v137, v107);
    sub_9D08();
    sub_6B644();
    v140();
    swift_bridgeObjectRetain_n();
    unint64_t v141 = sub_7FBD0();
    os_log_type_t v142 = sub_7FE20();
    if (os_log_type_enabled(v141, v142))
    {
      uint64_t v143 = (uint8_t *)sub_269F4();
      v173[0] = sub_1FA2C();
      *(_DWORD *)uint64_t v143 = 136315138;
      uint64_t v166 = v125;
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_7FD30();
      uint64_t v167 = v138;
      uint64_t v145 = v144;
      unint64_t v147 = v146;
      swift_bridgeObjectRelease();
      uint64_t v172 = sub_1CDF0(v145, v147, v173);
      sub_7FF60();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v141, v142, "Candidates found:  %s", v143, 0xCu);
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      sub_6B6CC();
      v167();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_6B6CC();
      v138();
    }
    uint64_t v45 = v168;
    uint64_t v148 = v132[2];
    if (v148)
    {
      v173[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_800B0();
      uint64_t v149 = v132 + 5;
      do
      {
        uint64_t v150 = *(v149 - 1);
        uint64_t v151 = *v149;
        objc_allocWithZone((Class)INWorkoutAssociatedItem);
        swift_bridgeObjectRetain();
        sub_795F0(5, v150, v151, 0, 0);
        sub_80080();
        sub_800C0();
        sub_800D0();
        sub_80090();
        v149 += 2;
        --v148;
      }
      while (v148);
      char v152 = (void *)v173[0];
      swift_bridgeObjectRelease();
      uint64_t v45 = v168;
    }
    else
    {
      swift_bridgeObjectRelease();
      char v152 = _swiftEmptyArrayStorage;
    }
    sub_6B53C((uint64_t)v152, v45);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
    return v168;
  }
  return v45;
}

void *sub_6AA30()
{
  return sub_689DC();
}

NSObject *sub_6AA48(uint64_t a1)
{
  return sub_69494(a1);
}

uint64_t sub_6AA64(void *a1)
{
  return sub_69438(a1);
}

_UNKNOWN **sub_6AA7C()
{
  return &off_AFE10;
}

id sub_6AA88(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INEndWorkoutIntent_ptr);
}

id sub_6AA94(uint64_t a1, uint64_t a2)
{
  return sub_6AC38(a1, a2, (void (*)(void))&type metadata accessor for UsoTask_stop_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter, (Class *)INEndWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_stop_common_Workout: %s");
}

uint64_t sub_6AAE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_6B244((uint64_t (*)(void))type metadata accessor for HealthWorkoutEndCATs, (uint64_t)&off_A0BD0, a1);
}

id sub_6AB04()
{
  id v1 = [v0 workoutName];

  return v1;
}

id sub_6AB3C(uint64_t a1)
{
  return sub_69230(a1, (Class *)INEndWorkoutIntent_ptr);
}

id sub_6AB5C(uint64_t a1)
{
  return sub_6AC38(a1, 0, (void (*)(void))&type metadata accessor for UsoTask_stop_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter, (Class *)INEndWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_stop_common_Workout: %s");
}

id sub_6ABB0(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INEndWorkoutIntent_ptr);
}

_UNKNOWN **sub_6ABD0()
{
  return &off_AFE50;
}

id sub_6ABDC(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INPauseWorkoutIntent_ptr);
}

id sub_6ABE8(uint64_t a1, uint64_t a2)
{
  return sub_6AC38(a1, a2, (void (*)(void))&type metadata accessor for UsoTask_pause_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter, (Class *)INPauseWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_pause_common_Workout: %s");
}

id sub_6AC38(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void *__return_ptr, uint64_t), Class *a5, const char *a6)
{
  uint64_t v9 = sub_7FBE0();
  sub_6D54();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_755C();
  id v15 = (id)(v14 - v13);
  sub_7F390();
  if (v34[3])
  {
    a3(0);
    if (swift_dynamicCast())
    {
      uint64_t v16 = swift_retain();
      a4(v34, v16);
      swift_release();
      sub_7F960();
      swift_release();
      swift_bridgeObjectRetain();
      sub_7F910();
      sub_7F9B0();
      id v17 = objc_allocWithZone((Class)INSpeakableString);
      sub_6B698();
      id v24 = sub_6B370(v18, v19, v20, v21, v22, v23);
      id v15 = [objc_allocWithZone(*a5) initWithWorkoutName:v24];
      swift_release();

      return v15;
    }
  }
  else
  {
    sub_7494((uint64_t)v34, &qword_AC670);
  }
  uint64_t v25 = sub_7FBA0();
  sub_9D08();
  (*(void (**)(id, uint64_t, uint64_t))(v11 + 16))(v15, v25, v9);
  swift_retain_n();
  uint64_t v26 = sub_7FBD0();
  os_log_type_t v27 = sub_7FE30();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)sub_269F4();
    uint64_t v35 = sub_1FA2C();
    *(_DWORD *)uint64_t v28 = 136315138;
    sub_7F690();
    swift_retain();
    uint64_t v29 = sub_7FC60();
    sub_1CDF0(v29, v30, &v35);
    sub_7FF60();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v26, v27, a6, v28, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(id, uint64_t))(v11 + 8))(v15, v9);
  sub_2DE78();
  swift_allocError();
  *uint64_t v31 = 1;
  swift_willThrow();
  return v15;
}

uint64_t sub_6AFA8@<X0>(uint64_t *a1@<X8>)
{
  return sub_6B244((uint64_t (*)(void))type metadata accessor for HealthWorkoutPauseCATs, (uint64_t)&off_A0C30, a1);
}

id sub_6AFC8(uint64_t a1)
{
  return sub_69230(a1, (Class *)INPauseWorkoutIntent_ptr);
}

id sub_6AFE8(uint64_t a1)
{
  return sub_6AC38(a1, 0, (void (*)(void))&type metadata accessor for UsoTask_pause_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter, (Class *)INPauseWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_pause_common_Workout: %s");
}

id sub_6B03C(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INPauseWorkoutIntent_ptr);
}

_UNKNOWN **sub_6B05C()
{
  return &off_AFE90;
}

id sub_6B068(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INResumeWorkoutIntent_ptr);
}

id sub_6B074(uint64_t a1, uint64_t a2)
{
  return sub_6AC38(a1, a2, (void (*)(void))&type metadata accessor for UsoTask_resume_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter, (Class *)INResumeWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_resume_common_Workout: %s");
}

uint64_t sub_6B0C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_6B244((uint64_t (*)(void))type metadata accessor for HealthWorkoutResumeCATs, (uint64_t)&off_A0C00, a1);
}

id sub_6B0E4(uint64_t a1)
{
  return sub_69230(a1, (Class *)INResumeWorkoutIntent_ptr);
}

id sub_6B104(uint64_t a1)
{
  return sub_6AC38(a1, 0, (void (*)(void))&type metadata accessor for UsoTask_resume_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter, (Class *)INResumeWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_resume_common_Workout: %s");
}

id sub_6B158(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INResumeWorkoutIntent_ptr);
}

_UNKNOWN **sub_6B178()
{
  return &off_AFED0;
}

id sub_6B184(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INCancelWorkoutIntent_ptr);
}

id sub_6B190(uint64_t a1, Class *a2)
{
  id v3 = objc_allocWithZone(*a2);

  return [v3 initWithWorkoutName:a1];
}

id sub_6B1D4(uint64_t a1, uint64_t a2)
{
  return sub_6AC38(a1, a2, (void (*)(void))&type metadata accessor for UsoTask_cancel_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_Reference.reference.getter, (Class *)INCancelWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_cancel_common_Workout: %s");
}

uint64_t sub_6B224@<X0>(uint64_t *a1@<X8>)
{
  return sub_6B244((uint64_t (*)(void))type metadata accessor for HealthWorkoutCancelCATs, (uint64_t)&off_A0BA0, a1);
}

uint64_t sub_6B244@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_7F870();
  uint64_t v7 = sub_DC74(v6);
  __chkstk_darwin(v7);
  sub_755C();
  uint64_t v8 = a1(0);
  sub_7F860();
  uint64_t result = sub_7F790();
  a3[3] = v8;
  a3[4] = a2;
  *a3 = result;
  return result;
}

id sub_6B2DC(uint64_t a1)
{
  return sub_69230(a1, (Class *)INCancelWorkoutIntent_ptr);
}

id sub_6B2FC(uint64_t a1)
{
  return sub_6AC38(a1, 0, (void (*)(void))&type metadata accessor for UsoTask_cancel_common_Workout, (void (*)(void *__return_ptr, uint64_t))&dispatch thunk of Uso_VerbTemplate_Reference.reference.getter, (Class *)INCancelWorkoutIntent_ptr, "Failed to convert UsoTask to UsoTask_cancel_common_Workout: %s");
}

id sub_6B350(uint64_t a1)
{
  return sub_6B190(a1, (Class *)INCancelWorkoutIntent_ptr);
}

id sub_6B370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v8 = sub_7FC40();
  swift_bridgeObjectRelease();
  NSString v9 = sub_7FC40();
  swift_bridgeObjectRelease();
  if (a6)
  {
    NSString v10 = sub_7FC40();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v11 = [v6 initWithVocabularyIdentifier:v8 spokenPhrase:v9 pronunciationHint:v10];

  return v11;
}

id sub_6B434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    NSString v6 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v7 = 0;
    goto LABEL_6;
  }
  NSString v6 = sub_7FC40();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v7 = sub_7FC40();
  swift_bridgeObjectRelease();
LABEL_6:
  id v8 = [v4 initWithFocus:v6 environment:v7];

  return v8;
}

uint64_t sub_6B4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_AE710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_6B53C(uint64_t a1, void *a2)
{
  sub_D838(0, &qword_AFF30);
  Class isa = sub_7FD10().super.isa;
  swift_bridgeObjectRelease();
  [a2 setAssociatedItems:isa];
}

uint64_t sub_6B5C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6B608()
{
  return sub_7F310();
}

uint64_t sub_6B624(uint64_t a1)
{
  return sub_6B0C(a1, 1, v1);
}

uint64_t sub_6B660()
{
  return v0 - 232;
}

uint64_t sub_6B670()
{
  return sub_802B0();
}

void sub_6B68C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_6B6AC(uint64_t a1)
{
  return sub_6B0C(a1, 1, v1);
}

uint64_t sub_6B6D8()
{
  if (!sub_7F990()) {
    return 0;
  }
  uint64_t v0 = sub_7F370();
  if (!v0)
  {
    swift_release();
    return v0;
  }
  uint64_t v1 = sub_7F4E0();
  swift_release();
  if (!v1)
  {
    swift_release();
    return 0;
  }
  uint64_t v0 = sub_7F5C0();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_6B774(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_AC660);
  __chkstk_darwin(v2 - 8);
  sub_755C();
  uint64_t v5 = v4 - v3;
  sub_7EED0();
  sub_6D54();
  uint64_t v46 = v7;
  uint64_t v47 = v6;
  __chkstk_darwin(v6);
  sub_755C();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_7EFA0();
  sub_6D54();
  uint64_t v45 = v12;
  __chkstk_darwin(v13);
  sub_755C();
  uint64_t v44 = v15 - v14;
  uint64_t v16 = sub_7ED20();
  sub_6D54();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_755C();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_7ED70();
  sub_6D54();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  sub_755C();
  uint64_t v29 = v28 - v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, a1, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 88))(v22, v16) != enum case for Parse.uso(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v18 + 96))(v22, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v29, v22, v23);
  sub_7ED60();
  uint64_t v30 = sub_7EEC0();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v10, v47);
  sub_6BB98(v30, v5);
  swift_bridgeObjectRelease();
  if (sub_6B0C(v5, 1, v11) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v23);
    sub_3FD94(v5);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v44, v5, v11);
  unint64_t v31 = sub_7F0F0();
  unint64_t v38 = v31;
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_801C0();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_10;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_6BB6C();
    v33(v32);
    uint64_t v34 = sub_6BB84();
    v35(v34);
    return 0;
  }
  if (!*(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_14;
  }
LABEL_10:
  sub_140AC(0, (v38 & 0xC000000000000001) == 0, v38);
  if ((v38 & 0xC000000000000001) != 0) {
    sub_80040();
  }
  else {
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_6B6D8();
  swift_release();
  uint64_t v39 = sub_6BB6C();
  v40(v39);
  uint64_t v41 = sub_6BB84();
  v42(v41);
  return v36;
}

uint64_t sub_6BB6C()
{
  return v0;
}

uint64_t sub_6BB84()
{
  return v0;
}

uint64_t sub_6BB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6BBC8(a1, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct, a2);
}

uint64_t sub_6BBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6BBC8(a1, (uint64_t (*)(void))&type metadata accessor for DeviceIdiom, a2);
}

uint64_t sub_6BBC8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a2(0);
  uint64_t v7 = v6;
  if (v5)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)), v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }

  return sub_9B2C(a3, v8, 1, v7);
}

uint64_t sub_6BC74(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_80130();
    uint64_t v4 = v3;
    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v2 = sub_6D9EC(a1);
    uint64_t v4 = v6;
    uint64_t v5 = v7 & 1;
  }
  uint64_t v8 = sub_6D7EC(a1);
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  char v13 = sub_6DA94(v2, v4, v5, v8, v9, v11 & 1);
  sub_6DAC8(v8, v10, v12);
  if (v13)
  {
    sub_6DAC8(v2, v4, v5);
    return 0;
  }
  else
  {
    sub_6D840(v2, v4, v5, a1);
    uint64_t v14 = v15;
    sub_6DAC8(v2, v4, v5);
  }
  return v14;
}

uint64_t sub_6BD74(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)&aStart_3[8 * a1];
  uint64_t v7 = qword_86230[a1];
  while (1)
  {
    uint64_t v8 = *(char *)(a2 + v5 + 32);
    if (*(void *)&aStart_3[8 * v8] == v6 && qword_86230[v8] == v7) {
      break;
    }
    char v10 = sub_802B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_12;
    }
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_6BE70(uint64_t a1)
{
  sub_7E380();
  uint64_t v3 = v1 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_input;
  uint64_t v4 = sub_7ECE0();
  sub_9B2C(v3, 1, 1, v4);
  sub_35F40(a1, v1 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_healthIntent);
  return v1;
}

uint64_t sub_6BEE0(uint64_t a1)
{
  uint64_t v4 = sub_6A60(&qword_B0070);
  uint64_t v5 = sub_DC74(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  sub_6DD74();
  uint64_t v9 = sub_7ECE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v2, a1, v9);
  sub_9B2C(v2, 0, 1, v9);
  sub_6DAD4(v2, (uint64_t)v8);
  uint64_t v10 = v1 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_input;
  swift_beginAccess();
  sub_6DB3C((uint64_t)v8, v10);
  swift_endAccess();
  return 1;
}

void sub_6C00C()
{
  sub_15258();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_7F870();
  uint64_t v7 = sub_DC74(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_7E630();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_6DC38();
  sub_7FE20();
  id v12 = *(id *)sub_7F9D0();
  sub_7FAE0();

  if (qword_ABC20 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_F524();
  sub_7F310();
  if (v18 == 9 || (sub_6BD74(v18, (uint64_t)&off_A0918) & 1) == 0)
  {
    type metadata accessor for DialogCATWrapper();
    sub_7F860();
    sub_7F790();
    sub_7ED30();
    sub_7E380();
    sub_7F920();
    sub_3600C();
    sub_7E610();
    sub_36058((uint64_t)&v18);
    v5(v1);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
  }
  else
  {
    sub_7FAC0();
    char v13 = (void *)sub_7FAB0();
    sub_7FAA0();
    uint64_t v14 = (void *)sub_7FA80();
    sub_6A60(&qword_AEA40);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_814D0;
    *(void *)(v15 + 32) = v13;
    uint64_t v18 = v15;
    sub_7FD40();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v5;
    v16[3] = v3;
    void v16[4] = v0;
    id v17 = v13;
    swift_retain();
    swift_retain();
    sub_7FA90();

    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_15240();
}

uint64_t sub_6C32C(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_7F870();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_7E630();
  uint64_t v26 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_6BC74(v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_7FE20();
    id v12 = (void **)sub_7F9D0();
    uint64_t v25 = a4;
    char v13 = *v12;
    sub_6A60(&qword_ABED0);
    uint64_t v14 = swift_allocObject();
    uint64_t v24 = a2;
    uint64_t v15 = (void *)v14;
    *(_OWORD *)(v14 + 16) = xmmword_80D90;
    id v16 = v13;
    v27[0] = sub_7FA60();
    v27[1] = v17;
    sub_6A60(&qword_AF470);
    uint64_t v18 = sub_7FF30();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v15[7] = &type metadata for String;
    v15[8] = sub_6C34();
    v15[4] = v18;
    v15[5] = v20;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_6C730();
    sub_7E620();
    swift_release();
    v24(v9);
  }
  else
  {
    sub_6A60(&qword_AC2D0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_80D90;
    *(void *)(v21 + 32) = 1651664246;
    *(void *)(v21 + 40) = 0xE400000000000000;
    if (qword_ABC20 != -1) {
      swift_once();
    }
    type metadata accessor for HealthNLIntent(0);
    sub_F524();
    sub_7F310();
    if (LOBYTE(v27[0]) != 9) {
      sub_75D8(v27[0]);
    }
    *(void *)(v21 + 72) = sub_7F830();
    sub_74EC((uint64_t *)(v21 + 48));
    sub_7F810();
    type metadata accessor for DialogCATWrapper();
    sub_7F860();
    sub_7F790();
    sub_7ED30();
    sub_7E380();
    sub_7F920();
    sub_3600C();
    sub_7E610();
    sub_36058((uint64_t)v27);
    a2(v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v7);
}

uint64_t sub_6C730()
{
  uint64_t v0 = sub_7F870();
  uint64_t v1 = sub_DC74(v0);
  __chkstk_darwin(v1);
  if (qword_ABC20 != -1) {
    swift_once();
  }
  type metadata accessor for HealthNLIntent(0);
  sub_F524();
  sub_7F310();
  switch(v5[0])
  {
    case 1:
      sub_6C900();
      break;
    case 3:
      sub_6CEC8();
      break;
    case 2:
      sub_6CBE4();
      break;
    default:
      type metadata accessor for DialogCATWrapper();
      sub_7F860();
      sub_7F790();
      sub_7ED30();
      sub_7E380();
      sub_7F920();
      sub_3600C();
      uint64_t v3 = sub_7E1E0();
      sub_36058((uint64_t)v5);
      return v3;
  }
  return v2;
}

void sub_6C900()
{
  sub_15258();
  uint64_t v3 = sub_6DE00(v2);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_6DC38();
  sub_6A60(&qword_AC830);
  sub_6D54();
  __chkstk_darwin(v5);
  sub_5863C();
  __chkstk_darwin(v6);
  sub_6DD74();
  uint64_t v7 = sub_6A60(&qword_B0070);
  uint64_t v8 = sub_DC74(v7);
  __chkstk_darwin(v8);
  sub_6DCC8();
  sub_6D54();
  __chkstk_darwin(v9);
  sub_6DCF0();
  __chkstk_darwin(v10);
  sub_6DE1C();
  sub_6DC50();
  sub_6D688((uint64_t)v0, v1);
  sub_6DD84();
  if (v11)
  {
    sub_6D6F0(v1);
    sub_7FE20();
    id v12 = *(id *)sub_7F9D0();
    sub_6DD3C();

    type metadata accessor for DialogCATWrapper();
    sub_7F860();
    sub_6DDE4();
    sub_7ED30();
    sub_7E380();
    sub_6DBDC();
    sub_3600C();
    sub_7E1E0();
    sub_36058((uint64_t)&v29);
  }
  else
  {
    uint64_t v13 = sub_6DC7C();
    v14(v13);
    type metadata accessor for HealthProducers();
    uint64_t v15 = sub_6DD24();
    sub_FFA4(v15);
    uint64_t v16 = sub_6A60(&qword_ADC58);
    sub_6DDC4(v16);
    type metadata accessor for PauseWorkoutStrategy();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = sub_6DBA4(v17);
    v19(v18);
    sub_6A60(&qword_AD5A0);
    swift_allocObject();
    id v20 = v0;
    sub_7E140();
    uint64_t v21 = sub_6DC14();
    v22(v21);
    sub_D838(0, (unint64_t *)&qword_AC818);
    uint64_t v23 = sub_6DDD4(OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_healthIntent);
    id v24 = sub_69224(v23);
    uint64_t v29 = sub_6DC9C((uint64_t)v24);
    sub_6D750(&qword_ADC60, &qword_ADC58);
    sub_6DDA8();
    swift_release();
    uint64_t v25 = sub_6DD0C();
    v26(v25);
    uint64_t v27 = sub_6DD60();
    v28(v27);
  }
  sub_15240();
}

void sub_6CBE4()
{
  sub_15258();
  uint64_t v3 = sub_6DE00(v2);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_6DC38();
  sub_6A60(&qword_AC7B0);
  sub_6D54();
  __chkstk_darwin(v5);
  sub_5863C();
  __chkstk_darwin(v6);
  sub_6DD74();
  uint64_t v7 = sub_6A60(&qword_B0070);
  uint64_t v8 = sub_DC74(v7);
  __chkstk_darwin(v8);
  sub_6DCC8();
  sub_6D54();
  __chkstk_darwin(v9);
  sub_6DCF0();
  __chkstk_darwin(v10);
  sub_6DE1C();
  sub_6DC50();
  sub_6D688((uint64_t)v0, v1);
  sub_6DD84();
  if (v11)
  {
    sub_6D6F0(v1);
    sub_7FE20();
    id v12 = *(id *)sub_7F9D0();
    sub_6DD3C();

    type metadata accessor for DialogCATWrapper();
    sub_7F860();
    sub_6DDE4();
    sub_7ED30();
    sub_7E380();
    sub_6DBDC();
    sub_3600C();
    sub_7E1E0();
    sub_36058((uint64_t)&v29);
  }
  else
  {
    uint64_t v13 = sub_6DC7C();
    v14(v13);
    type metadata accessor for HealthProducers();
    uint64_t v15 = (void *)sub_6DD24();
    sub_FA84(v15);
    uint64_t v16 = sub_6A60(&qword_ADC48);
    sub_6DDC4(v16);
    type metadata accessor for EndWorkoutStrategy();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = sub_6DBA4(v17);
    v19(v18);
    sub_6A60(&qword_AD508);
    swift_allocObject();
    id v20 = v0;
    sub_7E140();
    uint64_t v21 = sub_6DC14();
    v22(v21);
    sub_D838(0, (unint64_t *)&qword_AC798);
    uint64_t v23 = sub_6DDD4(OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_healthIntent);
    id v24 = sub_69218(v23);
    uint64_t v29 = sub_6DC9C((uint64_t)v24);
    sub_6D750(&qword_ADC50, &qword_ADC48);
    sub_6DDA8();
    swift_release();
    uint64_t v25 = sub_6DD0C();
    v26(v25);
    uint64_t v27 = sub_6DD60();
    v28(v27);
  }
  sub_15240();
}

void sub_6CEC8()
{
  sub_15258();
  uint64_t v3 = sub_6DE00(v2);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_6DC38();
  sub_6A60(&qword_AC728);
  sub_6D54();
  __chkstk_darwin(v5);
  sub_5863C();
  __chkstk_darwin(v6);
  sub_6DD74();
  uint64_t v7 = sub_6A60(&qword_B0070);
  uint64_t v8 = sub_DC74(v7);
  __chkstk_darwin(v8);
  sub_6DCC8();
  sub_6D54();
  __chkstk_darwin(v9);
  sub_6DCF0();
  __chkstk_darwin(v10);
  sub_6DE1C();
  sub_6DC50();
  sub_6D688((uint64_t)v0, v1);
  sub_6DD84();
  if (v11)
  {
    sub_6D6F0(v1);
    sub_7FE20();
    id v12 = *(id *)sub_7F9D0();
    sub_6DD3C();

    type metadata accessor for DialogCATWrapper();
    sub_7F860();
    sub_6DDE4();
    sub_7ED30();
    sub_7E380();
    sub_6DBDC();
    sub_3600C();
    sub_7E1E0();
    sub_36058((uint64_t)&v29);
  }
  else
  {
    uint64_t v13 = sub_6DC7C();
    v14(v13);
    type metadata accessor for HealthProducers();
    uint64_t v15 = sub_6DD24();
    sub_103B4(v15);
    uint64_t v16 = sub_6A60(&qword_ADC68);
    sub_6DDC4(v16);
    type metadata accessor for ResumeWorkoutStrategy();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = sub_6DBA4(v17);
    v19(v18);
    sub_6A60(&qword_AD6D0);
    swift_allocObject();
    id v20 = v0;
    sub_7E140();
    uint64_t v21 = sub_6DC14();
    v22(v21);
    sub_D838(0, (unint64_t *)&qword_ABEC8);
    uint64_t v23 = sub_6DDD4(OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_healthIntent);
    id v24 = sub_689D0(v23);
    uint64_t v29 = sub_6DC9C((uint64_t)v24);
    sub_6D750(&qword_ADC70, &qword_ADC68);
    sub_6DDA8();
    swift_release();
    uint64_t v25 = sub_6DD0C();
    v26(v25);
    uint64_t v27 = sub_6DD60();
    v28(v27);
  }
  sub_15240();
}

uint64_t sub_6D1AC()
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(v0 + 16);
  sub_F314(v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_healthIntent);
  sub_6D6F0(v0 + OBJC_IVAR____TtC24HealthFlowDelegatePlugin26SearchForRemoteDevicesFlow_input);
  return v0;
}

uint64_t sub_6D1EC()
{
  sub_6D1AC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_6D244()
{
  return type metadata accessor for SearchForRemoteDevicesFlow();
}

uint64_t type metadata accessor for SearchForRemoteDevicesFlow()
{
  uint64_t result = qword_AFF60;
  if (!qword_AFF60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_6D294()
{
  sub_7F6B0();
  if (v0 <= 0x3F)
  {
    sub_6D36C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_6D36C()
{
  if (!qword_AFF70)
  {
    sub_7ECE0();
    unint64_t v0 = sub_7FF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_AFF70);
    }
  }
}

uint64_t sub_6D3C4(uint64_t a1)
{
  return 1;
}

uint64_t sub_6D3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_6D49C;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_6D49C(uint64_t a1)
{
  sub_9C98();
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void sub_6D574()
{
}

uint64_t sub_6D598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1B53C;
  return Flow.execute()(a1, a2, a3);
}

uint64_t sub_6D64C()
{
  type metadata accessor for SearchForRemoteDevicesFlow();

  return sub_7E240();
}

uint64_t sub_6D688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_B0070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6D6F0(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_B0070);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6D750(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10C00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6D7A0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_6D7E0(uint64_t a1)
{
  return sub_6C32C(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_6D7EC(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return sub_80180();
  }
  else {
    return 1 << *(unsigned char *)(a1 + 32);
  }
}

void sub_6D840(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_80140();
      sub_7FA70();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_19;
  }
  if (a3)
  {
LABEL_10:
    if (sub_80160() == *(_DWORD *)(a4 + 36))
    {
      sub_80170();
      sub_7FA70();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v5 = sub_796FC((uint64_t)v10);
      char v7 = v6;

      if (v7) {
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 64) >> a1) & 1) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v8 = *(void **)(*(void *)(a4 + 48) + 8 * v5);

  id v9 = v8;
}

uint64_t sub_6D9EC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 192;
  for (uint64_t i = 12; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_6DA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
  {
    if ((a6 & 1) == 0)
    {
      if (a2 == a5) {
        return a1 == a4;
      }
      __break(1u);
    }
    goto LABEL_8;
  }
  if ((a6 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return static __CocoaDictionary.Index.== infix(_:_:)(a1, a2, a3, a4);
  }
  a3 = a4;
  a4 = a5;
  return static __CocoaDictionary.Index.== infix(_:_:)(a1, a2, a3, a4);
}

uint64_t sub_6DAC8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_6DAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_B0070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6DB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6A60(&qword_B0070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_6DBA4(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(v3 - 232) = a1;
  return v2;
}

uint64_t sub_6DBDC()
{
  return sub_7F920();
}

uint64_t sub_6DC14()
{
  return v0;
}

uint64_t sub_6DC50()
{
  *(void *)(v1 - 336) = v0;
  return swift_beginAccess();
}

uint64_t sub_6DC7C()
{
  return v0;
}

uint64_t sub_6DC9C(uint64_t a1)
{
  return RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(v3 - 232, v1, v2, a1);
}

uint64_t sub_6DCC8()
{
  return sub_7ECE0();
}

uint64_t sub_6DD0C()
{
  return v0;
}

uint64_t sub_6DD24()
{
  return *(void *)(v0 - 344);
}

uint64_t sub_6DD3C()
{
  return sub_7FAE0();
}

uint64_t sub_6DD60()
{
  return v0;
}

uint64_t sub_6DD84()
{
  return sub_6B0C(v1, 1, v0);
}

uint64_t sub_6DDA8()
{
  return sub_7E1E0();
}

uint64_t sub_6DDC4(uint64_t a1)
{
  *(void *)(v1 - 352) = a1;
  return 0;
}

uint64_t sub_6DDD4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 336) + a1;
}

uint64_t sub_6DDE4()
{
  return sub_7F790();
}

uint64_t sub_6DE00(uint64_t a1)
{
  *(void *)(v1 - 344) = a1;
  return sub_7F870();
}

uint64_t type metadata accessor for WorkoutEndCATPatternsExecutor(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_B0078);
}

uint64_t sub_6DE4C()
{
  return swift_initClassMetadata2();
}

__n128 *sub_6DE8C()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  char v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x656369766564;
  v5[5].n128_u64[1] = 0xE600000000000000;
  uint64_t v8 = type metadata accessor for WorkoutEndErrorWithCodeParameters(0);
  unint64_t v9 = *(void *)(v0 + *(int *)(v8 + 20));
  if (v9)
  {
    uint64_t v10 = sub_7F840();
    unint64_t v11 = v9;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v10 = 0;
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  v5[6].n128_u64[0] = v11;
  v5[7].n128_u64[1] = v10;
  v5[8].n128_u64[0] = 0x646F43726F727265;
  v5[8].n128_u64[1] = 0xE900000000000065;
  uint64_t v12 = v0 + *(int *)(v8 + 24);
  if (*(unsigned char *)(v12 + 8))
  {
    uint64_t v13 = 0;
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
    unint64_t v14 = 0;
  }
  else
  {
    unint64_t v14 = *(void *)v12;
    uint64_t v13 = &type metadata for Double;
  }
  v5[9].n128_u64[0] = v14;
  v5[10].n128_u64[1] = (unint64_t)v13;
  swift_retain();
  return v5;
}

uint64_t sub_6E040()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  sub_6A60(&qword_AC2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_80D90;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  *(void *)(v7 + 32) = 0x656D614E707061;
  *(void *)(v7 + 40) = 0xE700000000000000;
  sub_7434(v1, v6, &qword_AC2C8);
  uint64_t v9 = sub_7F830();
  if (sub_6B0C(v6, 1, v9) == 1)
  {
    sub_7494(v6, &qword_AC2C8);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    sub_74EC(v8);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  return v7;
}

__n128 *sub_6E184()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x5074737269467369;
  v5[5].n128_u64[1] = 0xEF70704179747261;
  uint64_t v8 = type metadata accessor for WorkoutEndIntentHandledResponseParameters(0);
  v5[6].n128_u8[0] = *(unsigned char *)(v0 + *(int *)(v8 + 20));
  v5[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v5[8], "isPunchingOut");
  v5[8].n128_u16[7] = -4864;
  unsigned __int8 v9 = *(unsigned char *)(v0 + *(int *)(v8 + 24));
  v5[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[9].n128_u8[0] = v9;
  return v5;
}

uint64_t sub_6E308(char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = a6;
  *(unsigned char *)(v6 + 84) = a4;
  *(unsigned char *)(v6 + 83) = a3;
  *(unsigned char *)(v6 + 82) = a2;
  *(unsigned char *)(v6 + 81) = a1;
  return _swift_task_switch(sub_6E338, 0, 0);
}

uint64_t sub_6E338()
{
  uint64_t v1 = *(void *)(v0 + 88);
  char v2 = *(unsigned char *)(v0 + 84);
  char v3 = *(unsigned char *)(v0 + 83);
  char v4 = *(unsigned char *)(v0 + 82);
  char v5 = *(unsigned char *)(v0 + 81);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(unsigned char *)(v0 + 25) = v5;
  *(unsigned char *)(v0 + 26) = v4;
  *(unsigned char *)(v0 + 27) = v3;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  *(void *)(v0 + 104) = sub_389E0();
  uint64_t v6 = (void *)sub_1B73C();
  *(void *)(v0 + 112) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_39248;
  unint64_t v7 = sub_6F4D8();
  return v9(v7);
}

uint64_t sub_6E430()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  _OWORD v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutEndErrorWithCodeParameters(0);
  v1[5] = v4;
  sub_DC74(v4);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_6E4C0, 0, 0);
}

uint64_t sub_6E4C0()
{
  sub_3B9D0();
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_7F830();
  sub_9B2C(v1, 1, 1, v4);
  *(void *)(v1 + *(int *)(v2 + 20)) = 0;
  uint64_t v5 = v1 + *(int *)(v2 + 24);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  v3(v1);
  uint64_t v6 = sub_6DE8C();
  v0[7] = v6;
  unint64_t v7 = (void *)sub_3B990();
  v0[8] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_6E5D8;
  return v9(0xD000000000000018, 0x800000000008AFE0, v6);
}

uint64_t sub_6E5D8()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_6E6E8()
{
  sub_9D38();
  sub_6F104(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutEndErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_6E760()
{
  sub_9D38();
  sub_6F104(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutEndErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_6E7E0()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  _OWORD v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutEndUnsupportedSlotValueParameters(0);
  sub_DC74(v4);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_6E86C, 0, 0);
}

uint64_t sub_6E86C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void (*)(uint64_t))v0[2];
  uint64_t v3 = sub_7F830();
  sub_3B9B0(v3);
  v2(v1);
  uint64_t v4 = sub_6E040();
  v0[6] = v4;
  uint64_t v5 = (void *)sub_3B990();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_6E954;
  return v7(0xD00000000000001FLL, 0x800000000008AFC0, v4);
}

uint64_t sub_6E954()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 72) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_6EA64()
{
  sub_9D38();
  sub_6F104(v0[5], (void (*)(void))type metadata accessor for WorkoutEndUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[9];
  return v1(v2);
}

uint64_t sub_6EAE8()
{
  sub_9D38();
  sub_6F104(*(void *)(v0 + 40), (void (*)(void))type metadata accessor for WorkoutEndUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_6EB68()
{
  sub_9D38();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 89) = v4;
  *(unsigned char *)(v1 + 88) = v5;
  uint64_t v6 = type metadata accessor for WorkoutEndIntentHandledResponseParameters(0);
  *(void *)(v1 + 40) = v6;
  sub_DC74(v6);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_6EC00, 0, 0);
}

uint64_t sub_6EC00()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 89);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = sub_7F830();
  sub_3B9B0(v6);
  *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v5;
  *(unsigned char *)(v1 + *(int *)(v2 + 24)) = v4;
  v3(v1);
  *(void *)(v0 + 56) = sub_6E184();
  unint64_t v7 = (void *)sub_1B73C();
  *(void *)(v0 + 64) = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_6ECF8;
  unint64_t v8 = sub_6F4D8();
  return v10(v8);
}

uint64_t sub_6ECF8()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *char v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_6EE08()
{
  sub_9D38();
  sub_6F104(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutEndIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_6EE80()
{
  sub_9D38();
  sub_6F104(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutEndIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_6EF00(uint64_t a1, uint64_t a2)
{
  return sub_6EF54(a1, a2);
}

uint64_t sub_6EF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  uint64_t v10 = sub_DC74(v9);
  __chkstk_darwin(v10);
  sub_755C();
  sub_7434(a1, v12 - v11, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v13 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v13;
}

uint64_t sub_6F0BC()
{
  return type metadata accessor for WorkoutEndCATPatternsExecutor(0);
}

uint64_t type metadata accessor for WorkoutEndIntentHandledResponseParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B0260);
}

uint64_t type metadata accessor for WorkoutEndUnsupportedSlotValueParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B01D0);
}

uint64_t sub_6F104(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_7550();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for WorkoutEndErrorWithCodeParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B0138);
}

uint64_t sub_6F180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6F194);
}

uint64_t sub_6F194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_6F230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6F244);
}

void sub_6F244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 20)) = v4;
  }
}

void sub_6F2C0()
{
}

uint64_t sub_6F2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6F2E8);
}

uint64_t sub_6F2E8()
{
  sub_3B9DC();
  uint64_t v2 = sub_6A60(&qword_AC2C8);

  return sub_6B0C(v1, v0, v2);
}

uint64_t sub_6F330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6F344);
}

uint64_t sub_6F344()
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  uint64_t v0 = sub_3B950();

  return sub_9B2C(v0, v1, v2, v3);
}

uint64_t sub_6F384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6F398);
}

uint64_t sub_6F398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_6F438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6F44C);
}

void sub_6F44C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 20)) = v4 + 1;
  }
}

void sub_6F4C8()
{
}

unint64_t sub_6F4D8()
{
  return 0xD000000000000020;
}

void sub_6F4F4(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  char v4 = sub_6F7A8(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_7FE20();
    uint64_t v6 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_80D90;
    id v8 = v6;
    id v9 = [v5 description];
    uint64_t v10 = sub_7FC50();
    uint64_t v12 = v11;

    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_6C34();
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v12;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    id v22 = v5;
    a3(v5, 0);
  }
  else
  {
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v13 = sub_E934(0);
    sub_7FE30();
    unint64_t v14 = *(void **)sub_7F9D0();
    sub_6A60(&qword_ABED0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_80D90;
    id v16 = v14;
    uint64_t v17 = sub_E854();
    uint64_t v19 = v18;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_6C34();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    sub_7FAE0();

    swift_bridgeObjectRelease();
    sub_700E8((unint64_t *)&qword_ABEE0, 255, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v20 = swift_allocError();
    *uint64_t v21 = v13;
    swift_retain();
    a3((void *)v20, 1);
    swift_errorRelease();
    swift_release();
  }
}

void *sub_6F7A8(uint64_t a1)
{
  uint64_t v2 = sub_6A60(&qword_ABEB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v39 = (char *)&v38 - v5;
  uint64_t v6 = type metadata accessor for HealthNLIntent(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_7F6B0();
  sub_6D54();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_7ED20();
  sub_6D54();
  uint64_t v16 = v15;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v23((char *)&v38 - v21, a1, v14);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v14);
  if (v24 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v25 = sub_6D70();
    v26(v25);
    uint64_t v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v22, v41);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v13, v27);
    sub_31DB4();
    uint64_t v28 = sub_689DC();
    sub_6BD4((uint64_t)v8, type metadata accessor for HealthNLIntent);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v27);
  }
  else
  {
    uint64_t v29 = a1;
    uint64_t v31 = (uint64_t)v39;
    uint64_t v30 = (uint64_t)v40;
    if (v24 == enum case for Parse.directInvocation(_:))
    {
      v23(v20, v29, v14);
      sub_7819C((uint64_t)v20, v31);
      sub_6AA4(v31, v30);
      uint64_t v32 = type metadata accessor for DirectInvocationData();
      if (sub_6B0C(v30, 1, v32) == 1)
      {
        sub_6B34(v31);
        sub_6B34(v30);
        uint64_t v28 = 0;
      }
      else
      {
        sub_7890C(v43);
        sub_6B34(v31);
        sub_6BD4(v30, (uint64_t (*)(void))type metadata accessor for DirectInvocationData);
        sub_6A60(&qword_ABEC0);
        sub_31DB4();
        if (swift_dynamicCast()) {
          uint64_t v28 = v42;
        }
        else {
          uint64_t v28 = 0;
        }
      }
      uint64_t v35 = sub_6D70();
      v36(v35);
    }
    else
    {
      uint64_t v33 = sub_6D70();
      v34(v33);
      return 0;
    }
  }
  return v28;
}

uint64_t type metadata accessor for StartWorkoutStrategy()
{
  return self;
}

uint64_t sub_6FB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, started, a6);
}

void sub_6FC00(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
}

uint64_t sub_6FC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, started, a3);
}

uint64_t sub_6FC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:)(a1, a2, a3, a4, started, a6);
}

uint64_t sub_6FCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:)(a1, a2, a3, a4, started, a6);
}

uint64_t sub_6FD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:)(a1, a2, a3, a4, started, a6);
}

uint64_t sub_6FDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_6FE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, started, a3);
}

uint64_t sub_6FE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, started, a4);
}

uint64_t sub_6FEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, started, a6);
}

uint64_t sub_6FF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t started = type metadata accessor for StartWorkoutStrategy();

  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, started, a7);
}

uint64_t sub_6FFC8(uint64_t a1, uint64_t a2)
{
  return sub_700E8(&qword_B0360, a2, (void (*)(uint64_t))type metadata accessor for StartWorkoutStrategy);
}

uint64_t sub_70010(uint64_t a1, uint64_t a2)
{
  return sub_700E8(&qword_B0368, a2, (void (*)(uint64_t))type metadata accessor for StartWorkoutStrategy);
}

uint64_t sub_70058(uint64_t a1, uint64_t a2)
{
  return sub_700E8(&qword_B0370, a2, (void (*)(uint64_t))type metadata accessor for StartWorkoutStrategy);
}

uint64_t sub_700A0(uint64_t a1, uint64_t a2)
{
  return sub_700E8(&qword_B0378, a2, (void (*)(uint64_t))type metadata accessor for StartWorkoutStrategy);
}

uint64_t sub_700E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutStartCATPatternsExecutor(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_B0380);
}

uint64_t sub_70150()
{
  return swift_initClassMetadata2();
}

__n128 *sub_70190()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x656369766564;
  v5[5].n128_u64[1] = 0xE600000000000000;
  uint64_t started = type metadata accessor for WorkoutStartErrorWithCodeParameters(0);
  unint64_t v9 = *(void *)(v0 + *(int *)(started + 20));
  if (v9)
  {
    uint64_t v10 = sub_7F840();
    unint64_t v11 = v9;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v10 = 0;
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  v5[6].n128_u64[0] = v11;
  v5[7].n128_u64[1] = v10;
  v5[8].n128_u64[0] = 0x646F43726F727265;
  v5[8].n128_u64[1] = 0xE900000000000065;
  uint64_t v12 = v0 + *(int *)(started + 24);
  if (*(unsigned char *)(v12 + 8))
  {
    uint64_t v13 = 0;
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
    unint64_t v14 = 0;
  }
  else
  {
    unint64_t v14 = *(void *)v12;
    uint64_t v13 = &type metadata for Double;
  }
  v5[9].n128_u64[0] = v14;
  v5[10].n128_u64[1] = (unint64_t)v13;
  swift_retain();
  return v5;
}

uint64_t sub_70344()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  uint64_t v3 = sub_DC74(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v16 - v7;
  sub_6A60(&qword_AC2D0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_83200;
  uint64_t v10 = (uint64_t *)(v9 + 48);
  *(void *)(v9 + 32) = 0x656D614E707061;
  *(void *)(v9 + 40) = 0xE700000000000000;
  sub_7434(v1, (uint64_t)v8, &qword_AC2C8);
  uint64_t v11 = sub_7F830();
  if (sub_6B0C((uint64_t)v8, 1, v11) == 1)
  {
    sub_7494((uint64_t)v8, &qword_AC2C8);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }
  else
  {
    *(void *)(v9 + 72) = v11;
    sub_74EC(v10);
    sub_7550();
    (*(void (**)(void))(v12 + 32))();
  }
  *(void *)(v9 + 80) = 0x6E456E65704F7369;
  *(void *)(v9 + 88) = 0xEB00000000646564;
  uint64_t started = type metadata accessor for WorkoutStartUnsupportedSlotValueParameters(0);
  *(unsigned char *)(v9 + 96) = *(unsigned char *)(v1 + *(int *)(started + 20));
  *(void *)(v9 + 120) = &type metadata for Bool;
  *(void *)(v9 + 128) = 1953459315;
  *(void *)(v9 + 136) = 0xE400000000000000;
  sub_7434(v1 + *(int *)(started + 24), (uint64_t)v6, &qword_AC2C8);
  if (sub_6B0C((uint64_t)v6, 1, v11) == 1)
  {
    sub_7494((uint64_t)v6, &qword_AC2C8);
    *(_OWORD *)(v9 + 144) = 0u;
    *(_OWORD *)(v9 + 160) = 0u;
  }
  else
  {
    *(void *)(v9 + 168) = v11;
    sub_74EC((uint64_t *)(v9 + 144));
    sub_7550();
    (*(void (**)(void))(v14 + 32))();
  }
  return v9;
}

__n128 *sub_70588()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_86580);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x5074737269467369;
  v5[5].n128_u64[1] = 0xEF70704179747261;
  uint64_t started = (int *)type metadata accessor for WorkoutStartIntentHandledResponseParameters(0);
  v5[6].n128_u8[0] = *(unsigned char *)(v0 + started[5]);
  v5[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v5[8], "isPunchingOut");
  v5[8].n128_u16[7] = -4864;
  v5[9].n128_u8[0] = *(unsigned char *)(v0 + started[6]);
  v5[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v5[11], "isWatchHandoff");
  v5[11].n128_u8[15] = -18;
  unsigned __int8 v9 = *(unsigned char *)(v0 + started[7]);
  v5[13].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[12].n128_u8[0] = v9;
  return v5;
}

uint64_t sub_70740(char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = a6;
  *(unsigned char *)(v6 + 84) = a4;
  *(unsigned char *)(v6 + 83) = a3;
  *(unsigned char *)(v6 + 82) = a2;
  *(unsigned char *)(v6 + 81) = a1;
  return _swift_task_switch(sub_70770, 0, 0);
}

uint64_t sub_70770()
{
  uint64_t v1 = *(void *)(v0 + 88);
  char v2 = *(unsigned char *)(v0 + 84);
  char v3 = *(unsigned char *)(v0 + 83);
  char v4 = *(unsigned char *)(v0 + 82);
  char v5 = *(unsigned char *)(v0 + 81);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(unsigned char *)(v0 + 25) = v5;
  *(unsigned char *)(v0 + 26) = v4;
  *(unsigned char *)(v0 + 27) = v3;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  *(void *)(v0 + 104) = sub_389E0();
  uint64_t v6 = (void *)sub_1B73C();
  *(void *)(v0 + 112) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_39248;
  unint64_t v7 = sub_72B7C();
  return v9(v7);
}

uint64_t sub_70868()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  _OWORD v1[2] = v3;
  uint64_t started = type metadata accessor for WorkoutStartErrorWithCodeParameters(0);
  v1[5] = started;
  sub_DC74(started);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_708F8, 0, 0);
}

uint64_t sub_708F8()
{
  sub_3B9D0();
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_7F830();
  sub_9B2C(v1, 1, 1, v4);
  *(void *)(v1 + *(int *)(v2 + 20)) = 0;
  uint64_t v5 = v1 + *(int *)(v2 + 24);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  v3(v1);
  uint64_t v6 = sub_70190();
  v0[7] = v6;
  unint64_t v7 = (void *)sub_3B990();
  v0[8] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_70A10;
  return v9(0xD00000000000001ALL, 0x800000000008B170, v6);
}

uint64_t sub_70A10()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_70B20()
{
  sub_9D38();
  sub_71598(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutStartErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_70B98()
{
  sub_9D38();
  sub_71598(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutStartErrorWithCodeParameters);
  swift_task_dealloc();
  sub_72B98();
  return v1();
}

uint64_t sub_70C10()
{
  sub_9D38();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 88) = v4;
  uint64_t started = type metadata accessor for WorkoutStartUnsupportedSlotValueParameters(0);
  *(void *)(v1 + 40) = started;
  sub_DC74(started);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_70CA4, 0, 0);
}

uint64_t sub_70CA4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 88);
  uint64_t v5 = sub_7F830();
  sub_9B2C(v1, 1, 1, v5);
  sub_9B2C(v1 + *(int *)(v2 + 24), 1, 1, v5);
  *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v4;
  v3(v1);
  uint64_t v6 = sub_70344();
  *(void *)(v0 + 56) = v6;
  uint64_t v7 = (void *)sub_1B73C();
  *(void *)(v0 + 64) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_70DD0;
  return v9(0xD000000000000021, 0x800000000008B140, v6);
}

uint64_t sub_70DD0()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *uint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_70EE0()
{
  sub_9D38();
  sub_71598(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutStartUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_70F58()
{
  sub_9D38();
  sub_71598(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutStartUnsupportedSlotValueParameters);
  swift_task_dealloc();
  sub_72B98();
  return v1();
}

uint64_t sub_70FD0()
{
  sub_9D38();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 90) = v4;
  *(unsigned char *)(v1 + 89) = v5;
  *(unsigned char *)(v1 + 88) = v6;
  uint64_t started = type metadata accessor for WorkoutStartIntentHandledResponseParameters(0);
  *(void *)(v1 + 40) = started;
  sub_DC74(started);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_7106C, 0, 0);
}

uint64_t sub_7106C()
{
  uint64_t v2 = *(int **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 90);
  char v5 = *(unsigned char *)(v0 + 89);
  char v6 = *(unsigned char *)(v0 + 88);
  uint64_t v7 = sub_7F830();
  sub_9B2C(v1, 1, 1, v7);
  *(unsigned char *)(v1 + v2[5]) = v6;
  *(unsigned char *)(v1 + v2[6]) = v5;
  *(unsigned char *)(v1 + v2[7]) = v4;
  v3(v1);
  *(void *)(v0 + 56) = sub_70588();
  uint64_t v8 = (void *)sub_3B990();
  *(void *)(v0 + 64) = v8;
  void *v8 = v0;
  v8[1] = sub_71184;
  unint64_t v9 = sub_72B7C();
  return v11(v9);
}

uint64_t sub_71184()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *char v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *uint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_71294()
{
  sub_9D38();
  sub_71598(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutStartIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_7130C()
{
  sub_9D38();
  sub_71598(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutStartIntentHandledResponseParameters);
  swift_task_dealloc();
  sub_72B98();
  return v1();
}

uint64_t sub_71384(uint64_t a1, uint64_t a2)
{
  return sub_713D8(a1, a2);
}

uint64_t sub_713D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  uint64_t v9 = sub_DC74(v8);
  __chkstk_darwin(v9);
  sub_7434(a1, (uint64_t)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_AC2C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v11;
}

uint64_t sub_71550()
{
  return type metadata accessor for WorkoutStartCATPatternsExecutor(0);
}

uint64_t type metadata accessor for WorkoutStartIntentHandledResponseParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B0570);
}

uint64_t type metadata accessor for WorkoutStartUnsupportedSlotValueParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B04D8);
}

uint64_t sub_71598(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_7550();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for WorkoutStartErrorWithCodeParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B0440);
}

uint64_t sub_71614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_71628);
}

uint64_t sub_71628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_716C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_716D8);
}

void sub_716D8()
{
  sub_72BA8();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_3B950();
    sub_9B2C(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = v0;
  }
}

void sub_7174C()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_717EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_7F830();
    if (sub_6B0C((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_6A60(&qword_AC2C8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_9B2C((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (sub_6B0C((uint64_t)v12, 1, v7))
    {
      uint64_t v13 = sub_6A60(&qword_AC2C8);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      sub_9B2C((uint64_t)v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_719A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F830();
  if (!sub_6B0C(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t result = sub_6B0C(v5, 1, v4);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v7(v5, v4);
  }
  return result;
}

char *sub_71A8C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_6B0C((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_6A60(&qword_AC2C8);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    sub_9B2C((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_71BF8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_9B2C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = sub_6B0C((uint64_t)&a1[v11], 1, v6);
  int v15 = sub_6B0C((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_6A60(&qword_AC2C8);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
  sub_9B2C((uint64_t)v12, 0, 1, v6);
  return a1;
}

char *sub_71E70(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_6B0C((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_6A60(&qword_AC2C8);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    sub_9B2C((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_71FDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_9B2C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = sub_6B0C((uint64_t)&a1[v11], 1, v6);
  int v15 = sub_6B0C((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_6A60(&qword_AC2C8);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
  sub_9B2C((uint64_t)v12, 0, 1, v6);
  return a1;
}

uint64_t sub_72250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_72264);
}

uint64_t sub_72268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7227C);
}

void sub_72280()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_72318(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_7F830();
    if (sub_6B0C((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_6A60(&qword_AC2C8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_9B2C((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_72454(uint64_t a1)
{
  uint64_t v2 = sub_7F830();
  uint64_t result = sub_6B0C(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_724DC(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_725C8(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  sub_9B2C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_72740(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_7F830();
  if (sub_6B0C((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_9B2C((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_7282C(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_7F830();
  int v7 = sub_6B0C((uint64_t)a1, 1, v6);
  int v8 = sub_6B0C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_6A60(&qword_AC2C8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  sub_9B2C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_729A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_729B4);
}

uint64_t sub_729B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_72A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_72A6C);
}

void sub_72A70()
{
  sub_72BA8();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_3B950();
    sub_9B2C(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
  }
}

void sub_72AE4()
{
  sub_3A968();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_72B7C()
{
  return 0xD000000000000022;
}

uint64_t sub_72B98()
{
  return v0 + 8;
}

uint64_t sub_72BBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_7F240();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for TerminalElement.Period.second(_:)) {
    return 6;
  }
  if (v6 == enum case for TerminalElement.Period.minute(_:)) {
    return 7;
  }
  if (v6 == enum case for TerminalElement.Period.hour(_:)) {
    return 8;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

uint64_t type metadata accessor for HealthUnsupportedCATs()
{
  uint64_t result = qword_B05B8;
  if (!qword_B05B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_72D54()
{
  return swift_initClassMetadata2();
}

uint64_t sub_72D94(uint64_t a1, uint64_t a2)
{
  return sub_72DE8(a1, a2);
}

uint64_t sub_72DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_6A60(&qword_AC2C0);
  __chkstk_darwin(v8 - 8);
  sub_1BE08(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_37EE0(a1);
  return v10;
}

uint64_t sub_72F50()
{
  return type metadata accessor for HealthUnsupportedCATs();
}

uint64_t type metadata accessor for WorkoutResumeCATPatternsExecutor(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_B0608);
}

uint64_t sub_72F78()
{
  return swift_initClassMetadata2();
}

__n128 *sub_72FB8()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x656369766564;
  v5[5].n128_u64[1] = 0xE600000000000000;
  uint64_t v8 = type metadata accessor for WorkoutResumeErrorWithCodeParameters(0);
  unint64_t v9 = *(void *)(v0 + *(int *)(v8 + 20));
  if (v9)
  {
    uint64_t v10 = sub_7F840();
    unint64_t v11 = v9;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v10 = 0;
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  v5[6].n128_u64[0] = v11;
  v5[7].n128_u64[1] = v10;
  v5[8].n128_u64[0] = 0x646F43726F727265;
  v5[8].n128_u64[1] = 0xE900000000000065;
  uint64_t v12 = v0 + *(int *)(v8 + 24);
  if (*(unsigned char *)(v12 + 8))
  {
    uint64_t v13 = 0;
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
    unint64_t v14 = 0;
  }
  else
  {
    unint64_t v14 = *(void *)v12;
    uint64_t v13 = &type metadata for Double;
  }
  v5[9].n128_u64[0] = v14;
  v5[10].n128_u64[1] = (unint64_t)v13;
  swift_retain();
  return v5;
}

uint64_t sub_7316C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  sub_6A60(&qword_AC2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_80D90;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  *(void *)(v7 + 32) = 0x656D614E707061;
  *(void *)(v7 + 40) = 0xE700000000000000;
  sub_7434(v1, v6, &qword_AC2C8);
  uint64_t v9 = sub_7F830();
  if (sub_6B0C(v6, 1, v9) == 1)
  {
    sub_7494(v6, &qword_AC2C8);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    sub_74EC(v8);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  return v7;
}

__n128 *sub_732B0()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x5074737269467369;
  v5[5].n128_u64[1] = 0xEF70704179747261;
  uint64_t v8 = type metadata accessor for WorkoutResumeIntentHandledResponseParameters(0);
  v5[6].n128_u8[0] = *(unsigned char *)(v0 + *(int *)(v8 + 20));
  v5[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v5[8], "isPunchingOut");
  v5[8].n128_u16[7] = -4864;
  unsigned __int8 v9 = *(unsigned char *)(v0 + *(int *)(v8 + 24));
  v5[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[9].n128_u8[0] = v9;
  return v5;
}

uint64_t sub_73434(char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = a6;
  *(unsigned char *)(v6 + 84) = a4;
  *(unsigned char *)(v6 + 83) = a3;
  *(unsigned char *)(v6 + 82) = a2;
  *(unsigned char *)(v6 + 81) = a1;
  return _swift_task_switch(sub_73464, 0, 0);
}

uint64_t sub_73464()
{
  uint64_t v1 = *(void *)(v0 + 88);
  char v2 = *(unsigned char *)(v0 + 84);
  char v3 = *(unsigned char *)(v0 + 83);
  char v4 = *(unsigned char *)(v0 + 82);
  char v5 = *(unsigned char *)(v0 + 81);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(unsigned char *)(v0 + 25) = v5;
  *(unsigned char *)(v0 + 26) = v4;
  *(unsigned char *)(v0 + 27) = v3;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  *(void *)(v0 + 104) = sub_389E0();
  uint64_t v6 = (void *)sub_1B73C();
  *(void *)(v0 + 112) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_39248;
  unint64_t v7 = sub_3B974();
  return v9(v7);
}

uint64_t sub_7355C()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  _OWORD v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutResumeErrorWithCodeParameters(0);
  v1[5] = v4;
  sub_DC74(v4);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_735EC, 0, 0);
}

uint64_t sub_735EC()
{
  sub_3B9D0();
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_7F830();
  sub_9B2C(v1, 1, 1, v4);
  *(void *)(v1 + *(int *)(v2 + 20)) = 0;
  uint64_t v5 = v1 + *(int *)(v2 + 24);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  v3(v1);
  uint64_t v6 = sub_72FB8();
  v0[7] = v6;
  unint64_t v7 = (void *)sub_3B990();
  v0[8] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_73704;
  return v9(0xD00000000000001BLL, 0x800000000008B2B0, v6);
}

uint64_t sub_73704()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_73814()
{
  sub_9D38();
  sub_74230(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutResumeErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_7388C()
{
  sub_9D38();
  sub_74230(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutResumeErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7390C()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  _OWORD v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutResumeUnsupportedSlotValueParameters(0);
  sub_DC74(v4);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_73998, 0, 0);
}

uint64_t sub_73998()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void (*)(uint64_t))v0[2];
  uint64_t v3 = sub_7F830();
  sub_3B9B0(v3);
  v2(v1);
  uint64_t v4 = sub_7316C();
  v0[6] = v4;
  uint64_t v5 = (void *)sub_3B990();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_73A80;
  return v7(0xD000000000000022, 0x800000000008B280, v4);
}

uint64_t sub_73A80()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 72) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_73B90()
{
  sub_9D38();
  sub_74230(v0[5], (void (*)(void))type metadata accessor for WorkoutResumeUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[9];
  return v1(v2);
}

uint64_t sub_73C14()
{
  sub_9D38();
  sub_74230(*(void *)(v0 + 40), (void (*)(void))type metadata accessor for WorkoutResumeUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_73C94()
{
  sub_9D38();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 89) = v4;
  *(unsigned char *)(v1 + 88) = v5;
  uint64_t v6 = type metadata accessor for WorkoutResumeIntentHandledResponseParameters(0);
  *(void *)(v1 + 40) = v6;
  sub_DC74(v6);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_73D2C, 0, 0);
}

uint64_t sub_73D2C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 89);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = sub_7F830();
  sub_3B9B0(v6);
  *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v5;
  *(unsigned char *)(v1 + *(int *)(v2 + 24)) = v4;
  v3(v1);
  *(void *)(v0 + 56) = sub_732B0();
  unint64_t v7 = (void *)sub_1B73C();
  *(void *)(v0 + 64) = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_73E24;
  unint64_t v8 = sub_3B974();
  return v10(v8);
}

uint64_t sub_73E24()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *char v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_73F34()
{
  sub_9D38();
  sub_74230(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutResumeIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_73FAC()
{
  sub_9D38();
  sub_74230(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutResumeIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7402C(uint64_t a1, uint64_t a2)
{
  return sub_74080(a1, a2);
}

uint64_t sub_74080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  uint64_t v10 = sub_DC74(v9);
  __chkstk_darwin(v10);
  sub_755C();
  sub_7434(a1, v12 - v11, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v13 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v13;
}

uint64_t sub_741E8()
{
  return type metadata accessor for WorkoutResumeCATPatternsExecutor(0);
}

uint64_t type metadata accessor for WorkoutResumeIntentHandledResponseParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B07F0);
}

uint64_t type metadata accessor for WorkoutResumeUnsupportedSlotValueParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B0760);
}

uint64_t sub_74230(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_7550();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for WorkoutResumeErrorWithCodeParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B06C8);
}

uint64_t sub_742AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_742C0);
}

uint64_t sub_742C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_7435C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_74370);
}

void sub_74370(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 20)) = v4;
  }
}

void sub_743EC()
{
}

uint64_t sub_74400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_74414);
}

uint64_t sub_74414()
{
  sub_3B9DC();
  uint64_t v2 = sub_6A60(&qword_AC2C8);

  return sub_6B0C(v1, v0, v2);
}

uint64_t sub_7445C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_74470);
}

uint64_t sub_74470()
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  uint64_t v0 = sub_3B950();

  return sub_9B2C(v0, v1, v2, v3);
}

uint64_t sub_744B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_744C4);
}

uint64_t sub_744C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_74564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_74578);
}

void sub_74578(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 20)) = v4 + 1;
  }
}

void sub_745F4()
{
}

uint64_t type metadata accessor for WorkoutsConfirmSlotStrategy()
{
  return sub_9C4C();
}

uint64_t sub_7461C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v136 = a8;
  id v123 = a2;
  uint64_t v134 = a9;
  uint64_t v11 = sub_6A60(&qword_AD9B0);
  __chkstk_darwin(v11 - 8);
  sub_755C();
  uint64_t v124 = v13 - v12;
  uint64_t v132 = a10;
  uint64_t v128 = *(void *)(a10 + 16);
  sub_7EA10();
  sub_10C00(&qword_ACBB0);
  uint64_t v135 = sub_80390();
  sub_6D54();
  uint64_t v137 = v14;
  __chkstk_darwin(v15);
  uint64_t v133 = &v114[-v16];
  uint64_t v17 = sub_7FBE0();
  sub_6D54();
  uint64_t v138 = v18;
  __chkstk_darwin(v19);
  sub_15308();
  uint64_t v131 = v20;
  sub_152AC();
  __chkstk_darwin(v21);
  uint64_t v130 = &v114[-v22];
  sub_152AC();
  __chkstk_darwin(v23);
  uint64_t v125 = &v114[-v24];
  sub_152AC();
  __chkstk_darwin(v25);
  uint64_t v129 = &v114[-v26];
  type metadata accessor for HealthNLIntent(0);
  sub_151D0();
  __chkstk_darwin(v27);
  sub_755C();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_7ED20();
  sub_6D54();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_76028();
  uint64_t v35 = sub_7F6B0();
  sub_6D54();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  sub_15308();
  uint64_t v127 = v39;
  sub_152AC();
  __chkstk_darwin(v40);
  uint64_t v126 = &v114[-v41];
  sub_152AC();
  __chkstk_darwin(v42);
  uint64_t v44 = &v114[-v43];
  sub_7ECD0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v33 + 88))(v10, v31) != enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v10, v31);
    uint64_t v62 = type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v63 = sub_E934(0);
    sub_7FBA0();
    sub_9D08();
    uint64_t v64 = v138;
    BOOL v65 = v131;
    sub_15528();
    v66();
    swift_retain_n();
    char v67 = sub_7FBD0();
    os_log_type_t v68 = sub_7FE30();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v130 = (unsigned char *)v62;
      uint64_t v70 = v69;
      unint64_t v71 = (void *)swift_slowAlloc();
      v139[0] = sub_1FA2C();
      *(_DWORD *)uint64_t v70 = 136315394;
      uint64_t v72 = sub_803E0();
      uint64_t v129 = (unsigned char *)v17;
      uint64_t v140 = sub_1CDF0(v72, v73, v139);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2112;
      sub_75E18((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *uint64_t v74 = v63;
      swift_retain();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v140 = v75;
      sub_7FF60();
      *unint64_t v71 = v75;
      sub_18C98();
      _os_log_impl(&dword_0, v67, v68, "%s Error: %@", (uint8_t *)v70, 0x16u);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      sub_152A0();
      v76();
    }
    else
    {

      sub_18C98();
      (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v65, v17);
    }
    sub_75E18((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v91 = sub_18BEC();
    sub_75FD0(v91, v92);
    swift_retain();
    sub_75FFC();
    v93();
    swift_release();
    uint64_t v94 = sub_76078();
    return v96(v94, v95);
  }
  (*(void (**)(uint64_t, uint64_t))(v33 + 96))(v10, v31);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v37 + 32))(v44, v10, v35);
  uint64_t v121 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v37 + 16);
  v121(v30, v44, v35);
  if (qword_ABC58 != -1) {
    swift_once();
  }
  sub_75E18((unint64_t *)&qword_AC668, (void (*)(uint64_t))type metadata accessor for HealthNLIntent);
  sub_7F310();
  uint64_t v45 = v138;
  uint64_t v122 = v37;
  if (v141 == 3)
  {
    uint64_t v46 = type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v47 = sub_E934(3);
    sub_7FBA0();
    sub_9D08();
    uint64_t v48 = v130;
    unint64_t v49 = (unsigned char *)v17;
    sub_15528();
    v50();
    swift_retain_n();
    int v51 = sub_7FBD0();
    os_log_type_t v52 = sub_7FE30();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v128 = v46;
      uint64_t v129 = v49;
      uint64_t v55 = (void *)v54;
      uint64_t v56 = sub_1FA2C();
      uint64_t v119 = v30;
      v139[0] = v56;
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v131 = v44;
      uint64_t v57 = sub_803E0();
      uint64_t v120 = v35;
      uint64_t v58 = v45;
      uint64_t v140 = sub_1CDF0(v57, v59, v139);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2112;
      sub_75E18((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *uint64_t v60 = v47;
      swift_retain();
      uint64_t v61 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v140 = v61;
      uint64_t v44 = v131;
      sub_7FF60();
      *uint64_t v55 = v61;
      sub_18C98();
      _os_log_impl(&dword_0, v51, v52, "%s Error: %@", (uint8_t *)v53, 0x16u);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      uint64_t v30 = v119;
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(unsigned char *, unsigned char *))(v58 + 8))(v130, v129);
      uint64_t v35 = v120;
    }
    else
    {

      sub_18C98();
      (*(void (**)(unsigned char *, unsigned char *))(v45 + 8))(v48, v49);
    }
    sub_75E18((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v97 = sub_18BEC();
    sub_75FD0(v97, v98);
    swift_retain();
    sub_75FFC();
    v99();
    swift_release();
    sub_76078();
    sub_152A0();
    v100();
    sub_F314(v30);
    unint64_t v96 = *(uint64_t (**)(uint64_t, uint64_t))(v122 + 8);
    uint64_t v94 = (uint64_t)v44;
    uint64_t v95 = v35;
    return v96(v94, v95);
  }
  int v115 = v141;
  uint64_t v77 = sub_7FBA0();
  sub_9D08();
  uint64_t v78 = *(void *)(v45 + 16);
  uint64_t v118 = v77;
  uint64_t v79 = v129;
  uint64_t v117 = v45 + 16;
  uint64_t v116 = v78;
  sub_15528();
  v80();
  uint64_t v131 = v44;
  sub_76040();
  v81();
  BOOL v82 = sub_7FBD0();
  os_log_type_t v83 = sub_7FE20();
  BOOL v84 = os_log_type_enabled(v82, v83);
  uint64_t v120 = v35;
  if (v84)
  {
    uint64_t v85 = swift_slowAlloc();
    uint64_t v119 = v30;
    uint64_t v86 = (uint8_t *)v85;
    v139[0] = sub_1FA2C();
    *(_DWORD *)uint64_t v86 = 136315138;
    uint64_t v130 = v86 + 4;
    sub_75E18(&qword_AD0D0, (void (*)(uint64_t))&type metadata accessor for NLIntent);
    uint64_t v87 = sub_802A0();
    uint64_t v140 = sub_1CDF0(v87, v88, v139);
    sub_7FF60();
    swift_bridgeObjectRelease();
    uint64_t v89 = sub_75F84();
    v90(v89);
    _os_log_impl(&dword_0, v82, v83, "Confirmation NL: %s", v86, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    uint64_t v30 = v119;
    sub_9CB0();

    (*(void (**)(unsigned char *, uint64_t))(v138 + 8))(v129, v17);
  }
  else
  {
    uint64_t v102 = sub_75F84();
    v103(v102);

    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v79, v17);
  }
  id v104 = (id)sub_3F540(v128, v128, *(void *)(v132 + 32));
  sub_7E830();
  sub_151D0();
  uint64_t v105 = (void (**)(unsigned char *, uint64_t))(v137 + 8);
  if (v115)
  {
    uint64_t v106 = sub_7600C();
    v107(v106);
    sub_76058();
    id v108 = v123;
  }
  else
  {
    uint64_t v110 = sub_7600C();
    v111(v110);
    sub_76058();
    id v104 = v104;
  }
  uint64_t v109 = v133;
  sub_7EA00();
  uint64_t v112 = v135;
  swift_storeEnumTagMultiPayload();
  sub_75FFC();
  v113();

  (*v105)(v109, v112);
  sub_F314(v30);
  return ((uint64_t (*)(unsigned char *, uint64_t))v130)(v131, v120);
}

uint64_t sub_75568(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *), uint64_t a9, uint64_t a10)
{
  uint64_t v58 = a2;
  uint64_t v62 = a9;
  uint64_t v63 = a8;
  sub_7FBE0();
  sub_6D54();
  uint64_t v61 = v14;
  __chkstk_darwin(v15);
  sub_755C();
  uint64_t v16 = sub_6A60(&qword_AC2C8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v58 - v20;
  uint64_t v22 = sub_6A60((uint64_t *)&unk_AF440);
  __chkstk_darwin(v22 - 8);
  sub_755C();
  uint64_t v25 = v24 - v23;
  sub_7E6E0();
  sub_6D54();
  uint64_t v59 = v27;
  uint64_t v60 = v26;
  __chkstk_darwin(v26);
  sub_76028();
  swift_bridgeObjectRetain();
  char v28 = sub_50760(a3, a4);
  if (v28 == 5)
  {
    uint64_t v29 = type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v30 = sub_E934(2);
    sub_7FBA0();
    sub_9D08();
    sub_15528();
    v32(v31);
    swift_retain_n();
    uint64_t v33 = sub_7FBD0();
    os_log_type_t v34 = sub_7FE30();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v60 = v29;
      uint64_t v37 = (void *)v36;
      uint64_t v59 = sub_1FA2C();
      v65[0] = v59;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v38 = sub_803E0();
      uint64_t v64 = sub_1CDF0(v38, v39, v65);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2112;
      sub_75E18((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_18BEC();
      *uint64_t v40 = v30;
      swift_retain();
      uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v64 = v41;
      sub_7FF60();
      *uint64_t v37 = v41;
      swift_release_n();
      _os_log_impl(&dword_0, v33, v34, "%s Error: %@", (uint8_t *)v35, 0x16u);
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {

      swift_release_n();
    }
    sub_152A0();
    v54(v53);
    uint64_t v55 = v63;
    sub_75E18((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    uint64_t v56 = sub_18BEC();
    *uint64_t v57 = v30;
    v65[0] = v56;
    char v68 = 1;
    swift_retain();
    v55(v65);
    swift_release();
    return sub_140D4((uint64_t)v65, (uint64_t *)&unk_AF480);
  }
  else
  {
    char v42 = v28;
    sub_43260();
    sub_D98C(v10, (uint64_t)v65);
    uint64_t v43 = v66;
    uint64_t v44 = v67;
    uint64_t v61 = sub_9AE0(v65, v66);
    sub_507AC(v42);
    sub_7FCA0();
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_7F830();
    uint64_t v46 = 1;
    sub_9B2C((uint64_t)v21, 0, 1, v45);
    uint64_t v47 = (*(uint64_t (**)(void))(*(void *)(a10 + 32) + 24))(*(void *)(a10 + 16));
    if (v47)
    {
      uint64_t v48 = (void *)v47;
      sub_7FE50();

      uint64_t v46 = 0;
    }
    sub_9B2C((uint64_t)v19, v46, 1, v45);
    (*(void (**)(char *, char *, uint64_t, uint64_t))(v44 + 8))(v21, v19, v43, v44);
    sub_140D4((uint64_t)v19, &qword_AC2C8);
    sub_140D4((uint64_t)v21, &qword_AC2C8);
    uint64_t v49 = _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v65);
    __chkstk_darwin(v49);
    *(&v58 - 2) = v11;
    sub_611D4((void (*)(uint64_t))sub_75DC4, (uint64_t)v65);
    v63(v65);
    sub_140D4((uint64_t)v65, (uint64_t *)&unk_AF480);
    sub_140D4(v25, (uint64_t *)&unk_AF440);
    sub_152A0();
    return v51(v50);
  }
}

uint64_t sub_75B6C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_6A60(&qword_AC3B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7ED30();
  sub_7ED30();
  sub_9AE0(v12, v12[3]);
  sub_7E3D0();
  uint64_t v7 = sub_7E6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  sub_9B2C((uint64_t)v6, 0, 1, v7);
  uint64_t v8 = sub_7ED80();
  memset(v10, 0, sizeof(v10));
  uint64_t v11 = 0;
  a2[3] = v8;
  a2[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_74EC(a2);
  sub_7E5D0();
  sub_140D4((uint64_t)v10, (uint64_t *)&unk_AF490);
  sub_140D4((uint64_t)v6, &qword_AC3B8);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v13);
  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v12);
}

uint64_t sub_75D14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_7461C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_75D3C()
{
  return NeedsConfirmationFlowStrategy.shouldRequestUnlockForConfirmation(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:)();
}

uint64_t sub_75D50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *), uint64_t a9, uint64_t a10)
{
  return sub_75568(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_75D5C()
{
  return NeedsConfirmationFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:)();
}

uint64_t sub_75D70()
{
  return NeedsConfirmationFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:)();
}

uint64_t sub_75D84()
{
  return NeedsConfirmationFlowStrategy.makePromptForDeviceUnlock(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)();
}

uint64_t sub_75D90()
{
  return NeedsConfirmationFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)();
}

uint64_t sub_75D9C()
{
  return NeedsConfirmationFlowStrategy.makeConfirmationRejectedResponse(app:intent:parameterName:multicardinalIndex:_:)();
}

uint64_t sub_75DA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_75DC4@<X0>(uint64_t *a1@<X8>)
{
  return sub_75B6C(*(void *)(v1 + 16), a1);
}

unint64_t sub_75DCC()
{
  unint64_t result = qword_B08C8;
  if (!qword_B08C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_B08C8);
  }
  return result;
}

uint64_t sub_75E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WorkoutsConfirmSlotError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x75EFCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutsConfirmSlotError()
{
  return &type metadata for WorkoutsConfirmSlotError;
}

unint64_t sub_75F38()
{
  unint64_t result = qword_B08D0;
  if (!qword_B08D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_B08D0);
  }
  return result;
}

uint64_t sub_75F84()
{
  uint64_t result = v0;
  *(void *)(v1 - 232) = *(void *)(*(void *)(v1 - 296) + 8);
  return result;
}

uint64_t sub_75FAC()
{
  return v0;
}

uint64_t sub_75FD0(uint64_t a1, void *a2)
{
  *a2 = v2;
  **(void **)(v3 - 208) = a1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_7600C()
{
  return *(void *)(v0 - 280);
}

uint64_t sub_76058()
{
  return sub_9B2C(v1, 0, 1, v0);
}

uint64_t sub_76078()
{
  return v0;
}

uint64_t type metadata accessor for WorkoutPauseCATPatternsExecutor(uint64_t a1)
{
  return sub_3A118(a1, (uint64_t *)&unk_B08D8);
}

uint64_t sub_760AC()
{
  return swift_initClassMetadata2();
}

__n128 *sub_760EC()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x656369766564;
  v5[5].n128_u64[1] = 0xE600000000000000;
  uint64_t v8 = type metadata accessor for WorkoutPauseErrorWithCodeParameters(0);
  unint64_t v9 = *(void *)(v0 + *(int *)(v8 + 20));
  if (v9)
  {
    uint64_t v10 = sub_7F840();
    unint64_t v11 = v9;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t v10 = 0;
    v5[6].n128_u64[1] = 0;
    v5[7].n128_u64[0] = 0;
  }
  v5[6].n128_u64[0] = v11;
  v5[7].n128_u64[1] = v10;
  v5[8].n128_u64[0] = 0x646F43726F727265;
  v5[8].n128_u64[1] = 0xE900000000000065;
  uint64_t v12 = v0 + *(int *)(v8 + 24);
  if (*(unsigned char *)(v12 + 8))
  {
    uint64_t v13 = 0;
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
    unint64_t v14 = 0;
  }
  else
  {
    unint64_t v14 = *(void *)v12;
    uint64_t v13 = &type metadata for Double;
  }
  v5[9].n128_u64[0] = v14;
  v5[10].n128_u64[1] = (unint64_t)v13;
  swift_retain();
  return v5;
}

uint64_t sub_762A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6A60(&qword_AC2C8);
  uint64_t v3 = sub_DC74(v2);
  __chkstk_darwin(v3);
  sub_755C();
  uint64_t v6 = v5 - v4;
  sub_6A60(&qword_AC2D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_80D90;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  *(void *)(v7 + 32) = 0x656D614E707061;
  *(void *)(v7 + 40) = 0xE700000000000000;
  sub_7434(v1, v6, &qword_AC2C8);
  uint64_t v9 = sub_7F830();
  if (sub_6B0C(v6, 1, v9) == 1)
  {
    sub_7494(v6, &qword_AC2C8);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    sub_74EC(v8);
    sub_7550();
    (*(void (**)(void))(v10 + 32))();
  }
  return v7;
}

__n128 *sub_763E4()
{
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = sub_DC74(v3);
  __chkstk_darwin(v4);
  sub_15210();
  sub_6A60(&qword_AC2D0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  sub_3B914(v5, (__n128)xmmword_83200);
  uint64_t v6 = sub_7F830();
  if (sub_6B0C(v1, 1, v6) == 1)
  {
    sub_7494(v1, &qword_AC2C8);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  else
  {
    v5[4].n128_u64[1] = v6;
    sub_74EC((uint64_t *)v2);
    sub_7550();
    (*(void (**)(void))(v7 + 32))();
  }
  v5[5].n128_u64[0] = 0x5074737269467369;
  v5[5].n128_u64[1] = 0xEF70704179747261;
  uint64_t v8 = type metadata accessor for WorkoutPauseIntentHandledResponseParameters(0);
  v5[6].n128_u8[0] = *(unsigned char *)(v0 + *(int *)(v8 + 20));
  v5[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v5[8], "isPunchingOut");
  v5[8].n128_u16[7] = -4864;
  unsigned __int8 v9 = *(unsigned char *)(v0 + *(int *)(v8 + 24));
  v5[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[9].n128_u8[0] = v9;
  return v5;
}

uint64_t sub_76568(char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = a6;
  *(unsigned char *)(v6 + 84) = a4;
  *(unsigned char *)(v6 + 83) = a3;
  *(unsigned char *)(v6 + 82) = a2;
  *(unsigned char *)(v6 + 81) = a1;
  return _swift_task_switch(sub_76598, 0, 0);
}

uint64_t sub_76598()
{
  uint64_t v1 = *(void *)(v0 + 88);
  char v2 = *(unsigned char *)(v0 + 84);
  char v3 = *(unsigned char *)(v0 + 83);
  char v4 = *(unsigned char *)(v0 + 82);
  char v5 = *(unsigned char *)(v0 + 81);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(unsigned char *)(v0 + 25) = v5;
  *(unsigned char *)(v0 + 26) = v4;
  *(unsigned char *)(v0 + 27) = v3;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  *(void *)(v0 + 104) = sub_389E0();
  uint64_t v6 = (void *)sub_1B73C();
  *(void *)(v0 + 112) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_39248;
  unint64_t v7 = sub_72B7C();
  return v9(v7);
}

uint64_t sub_76690()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  _OWORD v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutPauseErrorWithCodeParameters(0);
  v1[5] = v4;
  sub_DC74(v4);
  v1[6] = sub_9CC8();
  return _swift_task_switch(sub_76718, 0, 0);
}

uint64_t sub_76718()
{
  sub_3B9D0();
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_7F830();
  sub_9B2C(v1, 1, 1, v4);
  *(void *)(v1 + *(int *)(v2 + 20)) = 0;
  uint64_t v5 = v1 + *(int *)(v2 + 24);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  v3(v1);
  v0[7] = sub_760EC();
  uint64_t v6 = (void *)sub_3B990();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_7681C;
  unint64_t v7 = sub_779A0();
  return v9(v7);
}

uint64_t sub_7681C()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7692C()
{
  sub_9D38();
  sub_77588(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutPauseErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_769A4()
{
  sub_9D38();
  sub_77588(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutPauseErrorWithCodeParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_76A24()
{
  sub_9D38();
  v1[3] = v2;
  v1[4] = v0;
  _OWORD v1[2] = v3;
  uint64_t v4 = type metadata accessor for WorkoutPauseUnsupportedSlotValueParameters(0);
  sub_DC74(v4);
  v1[5] = sub_9CC8();
  return _swift_task_switch(sub_76AA8, 0, 0);
}

uint64_t sub_76AA8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void (*)(uint64_t))v0[2];
  uint64_t v3 = sub_7F830();
  sub_9B2C(v1, 1, 1, v3);
  v2(v1);
  uint64_t v4 = sub_762A0();
  v0[6] = v4;
  uint64_t v5 = (void *)sub_3B990();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_76BA0;
  return v7(0xD000000000000021, 0x800000000008B390, v4);
}

uint64_t sub_76BA0()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 72) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_76CB0()
{
  sub_9D38();
  sub_77588(v0[5], (void (*)(void))type metadata accessor for WorkoutPauseUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[9];
  return v1(v2);
}

uint64_t sub_76D34()
{
  sub_9D38();
  sub_77588(*(void *)(v0 + 40), (void (*)(void))type metadata accessor for WorkoutPauseUnsupportedSlotValueParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_76DB4()
{
  sub_9D38();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 89) = v4;
  *(unsigned char *)(v1 + 88) = v5;
  uint64_t v6 = type metadata accessor for WorkoutPauseIntentHandledResponseParameters(0);
  *(void *)(v1 + 40) = v6;
  sub_DC74(v6);
  *(void *)(v1 + 48) = sub_9CC8();
  return _swift_task_switch(sub_76E44, 0, 0);
}

uint64_t sub_76E44()
{
  uint64_t v2 = sub_779BC();
  uint64_t v3 = sub_77964(v2);
  v1(v3);
  *(void *)(v0 + 56) = sub_763E4();
  char v4 = (void *)sub_1B73C();
  *(void *)(v0 + 64) = v4;
  *char v4 = v0;
  v4[1] = sub_76F10;
  unint64_t v5 = sub_72B7C();
  return v7(v5);
}

uint64_t sub_76F10()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *unint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_77020()
{
  sub_9D38();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 89) = v4;
  *(unsigned char *)(v1 + 88) = v5;
  uint64_t v6 = type metadata accessor for WorkoutPauseIntentHandledResponseParameters(0);
  *(void *)(v1 + 40) = v6;
  sub_DC74(v6);
  *(void *)(v1 + 48) = sub_9CC8();
  return _swift_task_switch(sub_770B0, 0, 0);
}

uint64_t sub_770B0()
{
  uint64_t v2 = sub_779BC();
  uint64_t v3 = sub_77964(v2);
  v1(v3);
  *(void *)(v0 + 56) = sub_763E4();
  char v4 = (void *)sub_1B73C();
  *(void *)(v0 + 64) = v4;
  *char v4 = v0;
  v4[1] = sub_7717C;
  unint64_t v5 = sub_779A0();
  return v7(v5);
}

uint64_t sub_7717C()
{
  sub_3B9D0();
  sub_3B8F8();
  uint64_t v4 = v3;
  sub_9D5C();
  *unint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_9D5C();
  *unint64_t v7 = v6;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 80) = v1;
  }
  sub_3B964();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7728C()
{
  sub_9D38();
  sub_77588(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutPauseIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = sub_3B9E8();
  return v2(v1);
}

uint64_t sub_77304()
{
  sub_9D38();
  sub_77588(*(void *)(v0 + 48), (void (*)(void))type metadata accessor for WorkoutPauseIntentHandledResponseParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_77384(uint64_t a1, uint64_t a2)
{
  return sub_773D8(a1, a2);
}

uint64_t sub_773D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7F870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_755C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_6A60(&qword_AC2C0);
  uint64_t v10 = sub_DC74(v9);
  __chkstk_darwin(v10);
  sub_755C();
  sub_7434(a1, v12 - v11, &qword_AC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v13 = sub_7F770();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_7494(a1, &qword_AC2C0);
  return v13;
}

uint64_t sub_77540()
{
  return type metadata accessor for WorkoutPauseCATPatternsExecutor(0);
}

uint64_t type metadata accessor for WorkoutPauseIntentHandledResponseParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B0AC8);
}

uint64_t type metadata accessor for WorkoutPauseUnsupportedSlotValueParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B0A38);
}

uint64_t sub_77588(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_7550();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for WorkoutPauseErrorWithCodeParameters(uint64_t a1)
{
  return sub_3A118(a1, qword_B09A0);
}

uint64_t sub_77604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_77618);
}

uint64_t sub_77618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_776B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_776C8);
}

void sub_776C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 20)) = v4;
  }
}

void sub_77744()
{
}

uint64_t sub_77758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7776C);
}

uint64_t sub_7776C()
{
  sub_3B9DC();
  uint64_t v2 = sub_6A60(&qword_AC2C8);

  return sub_6B0C(v1, v0, v2);
}

uint64_t sub_777B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_777C8);
}

uint64_t sub_777C8()
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  uint64_t v0 = sub_3B950();

  return sub_9B2C(v0, v1, v2, v3);
}

uint64_t sub_77808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7781C);
}

uint64_t sub_7781C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_6B0C(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_778BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_778D0);
}

void sub_778D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_3B9DC();
  sub_6A60(&qword_AC2C8);
  sub_33D8C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_3B950();
    sub_9B2C(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 20)) = v4 + 1;
  }
}

void sub_7794C()
{
}

uint64_t sub_77964(uint64_t a1)
{
  sub_9B2C(v1, 1, 1, a1);
  *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v4;
  *(unsigned char *)(v1 + *(int *)(v2 + 24)) = v3;
  return v1;
}

unint64_t sub_779A0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_779BC()
{
  return sub_7F830();
}

void *sub_779E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *char v3 = *a2;
    char v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v7 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v7;
    uint64_t v8 = a2[10];
    uint64_t v9 = *(int *)(a3 + 44);
    uint64_t v15 = (uint64_t)a2 + v9;
    uint64_t v10 = a1 + v9;
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v8;
    uint64_t v11 = sub_7ED10();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v15, v11);
  }
  return v3;
}

uint64_t sub_77B2C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_7ED10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_77BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v13 = a2 + v8;
  uint64_t v9 = a1 + v8;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v10 = sub_7ED10();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v13, v10);
  return a1;
}

uint64_t sub_77CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_7ED10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_77DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v8 = sub_7ED10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_77E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 44);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_7ED10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_77F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_77F78);
}

uint64_t sub_77F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_7ED10();
    uint64_t v9 = a1 + *(int *)(a3 + 44);
    return sub_6B0C(v9, a2, v8);
  }
}

uint64_t sub_78000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_78014);
}

uint64_t sub_78014(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_7ED10();
    uint64_t v8 = v5 + *(int *)(a4 + 44);
    return sub_9B2C(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DirectInvocationData()
{
  uint64_t result = qword_B0B68;
  if (!qword_B0B68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_780DC()
{
  uint64_t result = sub_7ED10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_7819C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_7ED20();
  sub_6D54();
  uint64_t v6 = v5;
  __chkstk_darwin();
  sub_755C();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_7ED10();
  sub_6D54();
  uint64_t v12 = v11;
  __chkstk_darwin();
  sub_755C();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for DirectInvocationData();
  __chkstk_darwin();
  sub_755C();
  uint64_t v19 = v18 - v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v9, v4) != enum case for Parse.directInvocation(_:))
  {
    uint64_t v31 = *(void (**)(void))(v6 + 8);
    sub_79CFC();
    v31();
    sub_79CFC();
    v31();
    return sub_9B2C(a2, 1, 1, v16);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v9, v4);
  uint64_t v20 = sub_79DCC();
  v21(v20);
  uint64_t v22 = v15;
  uint64_t v23 = v19 + *(int *)(v16 + 44);
  uint64_t v24 = sub_79DCC();
  v25(v24);
  uint64_t v67 = v22;
  if (!sub_7ED00())
  {
    sub_79D30();
    goto LABEL_11;
  }
  uint64_t v26 = sub_79CE4();
  sub_791D4(v26 & 0xFFFFFFFFFFFFLL | 0x5674000000000000, 0xEB00000000627265, v22, v27);
  swift_bridgeObjectRelease();
  if (!v71)
  {
LABEL_11:
    sub_38594((uint64_t)&v70);
    goto LABEL_12;
  }
  uint64_t v66 = v19;
  if ((sub_79CC4() & 1) == 0)
  {
LABEL_12:
    sub_79CFC();
    v32();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v33(v22, v10);
    v33(v23, v10);
    return sub_9B2C(a2, 1, 1, v16);
  }
  if (sub_7ED00())
  {
    sub_79D4C((uint64_t)"workoutProgramName");
    swift_bridgeObjectRelease();
    sub_79CC4();
    sub_79D3C();
    if (v30) {
      uint64_t v29 = 0;
    }
  }
  else
  {
    sub_79D30();
    sub_38594((uint64_t)&v70);
    sub_79D74();
  }
  *(void *)uint64_t v19 = v28;
  *(void *)(v19 + 8) = v29;
  if (!sub_7ED00())
  {
    sub_79D30();
    goto LABEL_21;
  }
  sub_79D4C((uint64_t)"workoutTrainerName");
  swift_bridgeObjectRelease();
  if (!v71)
  {
LABEL_21:
    sub_38594((uint64_t)&v70);
    sub_79D74();
    goto LABEL_22;
  }
  sub_79CC4();
  sub_79D3C();
  if (v30) {
    uint64_t v36 = 0;
  }
LABEL_22:
  *(void *)(v19 + 16) = v35;
  *(void *)(v19 + 24) = v36;
  if (!sub_7ED00())
  {
    sub_79D30();
    unint64_t v39 = v69;
    goto LABEL_28;
  }
  uint64_t v37 = sub_79CE4();
  sub_791D4(v37 & 0xFFFFFFFFFFFFLL | 0x4E74000000000000, 0xEB000000006E756FLL, v22, v38);
  swift_bridgeObjectRelease();
  unint64_t v39 = v69;
  if (!v71)
  {
LABEL_28:
    sub_38594((uint64_t)&v70);
    sub_79D74();
    goto LABEL_29;
  }
  sub_79CC4();
  sub_79D3C();
  if (v30) {
    uint64_t v41 = 0;
  }
LABEL_29:
  *(void *)(v19 + 72) = v40;
  *(void *)(v19 + 80) = v41;
  char v42 = sub_79524(v68, v39);
  if (v42 == 5)
  {
    sub_79CFC();
    v43();
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v44(v67, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44(v23, v10);
    return sub_9B2C(a2, 1, 1, v16);
  }
  *(unsigned char *)(v19 + 48) = v42;
  uint64_t v45 = v12;
  if (!sub_7ED00())
  {
    sub_79D30();
    goto LABEL_37;
  }
  uint64_t v46 = sub_79CE4();
  sub_791D4(v46 & 0xFFFFFFFFFFFFLL | 0x5374000000000000, 0xEF65636E65757165, v67, v47);
  swift_bridgeObjectRelease();
  if (!v71)
  {
LABEL_37:
    sub_38594((uint64_t)&v70);
    sub_79D74();
    goto LABEL_38;
  }
  sub_79CC4();
  sub_79D3C();
  if (v30) {
    uint64_t v49 = 0;
  }
LABEL_38:
  *(void *)(v19 + 56) = v48;
  *(void *)(v19 + 64) = v49;
  if (!sub_7ED00())
  {
    sub_79D30();
    goto LABEL_43;
  }
  uint64_t v50 = sub_79CE4();
  sub_791D4(v50 & 0xFFFFFFFFFFFFLL | 0x4174000000000000, 0xEF79746976697463, v67, v51);
  swift_bridgeObjectRelease();
  if (!v71)
  {
LABEL_43:
    sub_38594((uint64_t)&v70);
    goto LABEL_44;
  }
  if (sub_79CC4())
  {
    char v52 = sub_15F7C();
    goto LABEL_45;
  }
LABEL_44:
  char v52 = 87;
LABEL_45:
  *(unsigned char *)(v19 + 32) = v52;
  uint64_t v53 = sub_7ED00();
  if (!v53)
  {
    sub_79D30();
    goto LABEL_59;
  }
  sub_791D4(0xD000000000000011, 0x800000000008B410, v53, &v70);
  swift_bridgeObjectRelease();
  if (!v71)
  {
LABEL_59:
    sub_38594((uint64_t)&v70);
    goto LABEL_60;
  }
  sub_6A60(&qword_ACEE8);
  if (sub_79CC4())
  {
    uint64_t v65 = v10;
    uint64_t v54 = *(void *)(v68 + 16);
    if (v54)
    {
      uint64_t v64 = v16;
      swift_bridgeObjectRetain();
      sub_141DC();
      uint64_t v55 = (uint64_t *)(v68 + 40);
      do
      {
        uint64_t v56 = *v55;
        *(void *)&long long v70 = *(v55 - 1);
        *((void *)&v70 + 1) = v56;
        swift_bridgeObjectRetain();
        if (*(void *)(sub_7FFC0() + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v57 = sub_7FC90();
          uint64_t v59 = v58;
          swift_bridgeObjectRelease();
          id v60 = objc_allocWithZone((Class)INWorkoutAssociatedItem);
          id v61 = sub_795F0(5, v57, v59, 0, 0);
          swift_bridgeObjectRelease();
          if (v61)
          {
            sub_7FD00();
            if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
              sub_7FD50();
            }
            sub_7FD80();
            sub_7FD40();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v55 += 2;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
      uint64_t v16 = v64;
      uint64_t v45 = v12;
    }
    sub_79CFC();
    v63();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v67, v65);
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
LABEL_60:
  sub_79CFC();
  v62();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v67, v10);
LABEL_61:
  *(void *)(v66 + 40) = &_swiftEmptyArrayStorage;
  sub_79AB0(v66, a2);
  sub_9B2C(a2, 0, 1, v16);
  return sub_79B14(v66);
}

uint64_t sub_7890C@<X0>(void *a1@<X8>)
{
  switch(*(unsigned char *)(v1 + 48))
  {
    case 1:
      id v8 = sub_799AC(v1);
      id v4 = [objc_allocWithZone((Class)INEndWorkoutIntent) initWithWorkoutName:v8];

      uint64_t result = sub_79DE0(v9, (unint64_t *)&qword_AC798);
      uint64_t v3 = result;
      uint64_t v7 = &off_A2538;
      break;
    case 2:
      id v10 = sub_799AC(v1);
      id v4 = [objc_allocWithZone((Class)INPauseWorkoutIntent) initWithWorkoutName:v10];

      uint64_t result = sub_79DE0(v11, (unint64_t *)&qword_AC818);
      uint64_t v3 = result;
      uint64_t v7 = &off_A2548;
      break;
    case 3:
      id v12 = sub_799AC(v1);
      id v4 = [objc_allocWithZone((Class)INCancelWorkoutIntent) initWithWorkoutName:v12];

      uint64_t result = sub_79DE0(v13, (unint64_t *)&qword_AC8F8);
      uint64_t v3 = result;
      uint64_t v7 = &off_A2540;
      break;
    case 4:
      id v14 = sub_799AC(v1);
      id v4 = [objc_allocWithZone((Class)INResumeWorkoutIntent) initWithWorkoutName:v14];

      uint64_t result = sub_79DE0(v15, (unint64_t *)&qword_ABEC8);
      uint64_t v3 = result;
      uint64_t v7 = &off_A2550;
      break;
    default:
      uint64_t v3 = sub_D838(0, (unint64_t *)&qword_AC898);
      sub_799AC(v1);
      sub_79D80();
      id v4 = (id)sub_7FEA0();
      uint64_t v5 = swift_bridgeObjectRetain();
      sub_79930(v5, v4);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v7 = &off_A2530;
      break;
  }
  a1[3] = v3;
  a1[4] = v7;
  *a1 = v4;
  return result;
}

uint64_t sub_78B14(char a1)
{
  return *(void *)&aStart_4[8 * a1];
}

uint64_t sub_78B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v2 = sub_6A60(&qword_B0BB8);
  __chkstk_darwin(v2 - 8);
  sub_F67C();
  uint64_t v61 = v3;
  uint64_t v4 = sub_6A60(&qword_B0BC0);
  __chkstk_darwin(v4 - 8);
  sub_F67C();
  uint64_t v58 = v5;
  uint64_t v67 = sub_7F6B0();
  sub_6D54();
  uint64_t v60 = v6;
  __chkstk_darwin(v7);
  sub_F67C();
  uint64_t v59 = v8;
  sub_7F340();
  sub_6D54();
  uint64_t v65 = v10;
  uint64_t v66 = v9;
  __chkstk_darwin(v9);
  sub_15308();
  uint64_t v64 = v11;
  __chkstk_darwin(v12);
  uint64_t v63 = (char *)&v55 - v13;
  uint64_t v70 = sub_7F2E0();
  uint64_t v14 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  sub_15308();
  uint64_t v57 = v15;
  __chkstk_darwin(v16);
  uint64_t v56 = (char *)&v55 - v17;
  uint64_t v18 = sub_6A60(&qword_B0BC8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t *)((char *)&v55 - v22);
  sub_6A60(&qword_AC9D0);
  uint64_t v24 = *(void *)(v14 + 72);
  uint64_t v69 = v14;
  unint64_t v25 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v71 = v24;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_811A0;
  *uint64_t v23 = sub_78B14(*(unsigned char *)(v1 + 48));
  v23[1] = v27;
  uint64_t v28 = sub_7F230();
  uint64_t v29 = *(void (**)(void))(*(void *)(v28 - 8) + 104);
  sub_79D0C();
  v29();
  sub_9B2C((uint64_t)v23, 0, 1, v28);
  sub_79D20();
  sub_7F2D0();
  int v30 = *(unsigned __int8 *)(v1 + 32);
  unint64_t v62 = v25;
  if (v30 == 87)
  {
    unint64_t v31 = 0xE500000000000000;
    uint64_t v32 = 0x726568746FLL;
  }
  else
  {
    uint64_t v32 = sub_15FD0(v30);
  }
  uint64_t v33 = v71;
  *uint64_t v21 = v32;
  v21[1] = v31;
  sub_79D0C();
  v29();
  sub_9B2C((uint64_t)v21, 0, 1, v28);
  sub_79D20();
  sub_7F2D0();
  uint64_t v34 = *(void *)(v1 + 64);
  if (v34)
  {
    uint64_t v35 = 2 * v33;
    *uint64_t v23 = *(void *)(v1 + 56);
    v23[1] = v34;
    sub_79D0C();
    v29();
    sub_79D94();
    uint64_t v36 = v56;
    sub_79D20();
    sub_7F2D0();
    uint64_t v26 = sub_133EC(1, 3, 1, v26);
    *(void *)(v26 + 16) = 3;
    unint64_t v37 = v62;
    (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v26 + v62 + v35, v36, v70);
  }
  else
  {
    unint64_t v37 = v62;
  }
  uint64_t v38 = *(void *)(v1 + 80);
  if (v38)
  {
    *uint64_t v23 = *(void *)(v1 + 72);
    v23[1] = v38;
    sub_79D0C();
    v29();
    sub_79D94();
    uint64_t v39 = v57;
    sub_79D20();
    sub_7F2D0();
    unint64_t v41 = *(void *)(v26 + 16);
    unint64_t v40 = *(void *)(v26 + 24);
    if (v41 >= v40 >> 1) {
      uint64_t v26 = sub_133EC(v40 > 1, v41 + 1, 1, v26);
    }
    uint64_t v43 = v60;
    uint64_t v42 = v61;
    uint64_t v45 = v58;
    uint64_t v44 = v59;
    *(void *)(v26 + 16) = v41 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v69 + 32))(v26 + v37 + v41 * v71, v39, v70);
  }
  else
  {
    uint64_t v43 = v60;
    uint64_t v42 = v61;
    uint64_t v45 = v58;
    uint64_t v44 = v59;
  }
  sub_79238(v26);
  swift_bridgeObjectRelease();
  uint64_t v46 = v63;
  sub_79D20();
  sub_7F330();
  uint64_t v47 = v64;
  sub_7F320();
  uint64_t v48 = v66;
  uint64_t v72[3] = v66;
  v72[4] = (uint64_t)&protocol witness table for NonTerminalIntentNode;
  uint64_t v49 = sub_74EC(v72);
  uint64_t v50 = v65;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v65 + 16))(v49, v47, v48);
  uint64_t v51 = sub_7F630();
  sub_9B2C(v45, 1, 1, v51);
  uint64_t v52 = sub_7F350();
  sub_9B2C(v42, 1, 1, v52);
  sub_79D80();
  sub_7F6A0();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v53(v47, v48);
  v53((uint64_t)v46, v48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v68, v44, v67);
}

double sub_791D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_79684(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_18B8C(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

void *sub_79238(uint64_t a1)
{
  uint64_t v2 = sub_7F2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_4B8E0();
    char v7 = v21;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v17 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v21 = v7;
      unint64_t v12 = v7[2];
      if (v12 >= v7[3] >> 1) {
        sub_4B8E0();
      }
      uint64_t v19 = v2;
      uint64_t v20 = &protocol witness table for TerminalIntentNode;
      uint64_t v13 = sub_74EC((uint64_t *)&v18);
      v9((char *)v13, (uint64_t)v5, v2);
      uint64_t v14 = v21;
      v21[2] = v12 + 1;
      sub_10C48(&v18, (uint64_t)&v14[5 * v12 + 4]);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      char v7 = v21;
      v11 += v17;
      --v6;
    }
    while (v6);
  }
  return v7;
}

unint64_t sub_79408(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 2:
      unint64_t result = 0x5374756F6B726F77;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x4174756F6B726F77;
      break;
    case 5:
      unint64_t result = 0x5674756F6B726F77;
      break;
    case 6:
      unint64_t result = 0x4E74756F6B726F77;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_79524(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_9FCA0;
  v6._object = a2;
  unint64_t v4 = sub_801E0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_79570(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_6539C(*a1, *a2);
}

Swift::Int sub_7957C()
{
  return sub_E060(*v0);
}

uint64_t sub_79584(uint64_t a1)
{
  return sub_E188(a1, *v1);
}

Swift::Int sub_7958C(uint64_t a1)
{
  return sub_E5F8(a1, *v1);
}

uint64_t sub_79594@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_79524(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_795C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_78B14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_795F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  Swift::String v6 = v5;
  if (a3)
  {
    NSString v10 = sub_7FC40();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v11 = [v6 initWithItemLabel:a1 itemID:v10 contentRating:a4 itemName:a5];

  return v11;
}

unint64_t sub_79684(uint64_t a1, uint64_t a2)
{
  sub_80350();
  sub_7FCC0();
  Swift::Int v4 = sub_80370();

  return sub_79740(a1, a2, v4);
}

unint64_t sub_796FC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_7FEE0(*(void *)(v2 + 40));

  return sub_79824(a1, v4);
}

unint64_t sub_79740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    NSString v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_802B0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_802B0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_79824(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_7FA70();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_7FEF0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_7FEF0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

void sub_79930(uint64_t a1, void *a2)
{
  sub_D838(0, &qword_AFF30);
  Class isa = sub_7FD10().super.isa;
  [a2 setAssociatedItems:isa];
}

id sub_799AC(uint64_t a1)
{
  uint64_t v14 = type metadata accessor for DirectInvocationData();
  uint64_t v15 = &off_A2558;
  uint64_t v2 = sub_74EC(v13);
  sub_79AB0(a1, (uint64_t)v2);
  int v3 = *((unsigned __int8 *)sub_9AE0(v13, v14) + 32);
  if (v3 == 87) {
    char v4 = 13;
  }
  else {
    char v4 = v3;
  }
  unint64_t v5 = sub_15EFC(v4);
  uint64_t v7 = v6;
  uint64_t v8 = sub_9AE0(v13, v14);
  if (v8[1])
  {
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
  }
  else
  {
    uint64_t v10 = 0xE700000000000000;
    uint64_t v9 = 0x74756F6B726F57;
  }
  objc_allocWithZone((Class)INSpeakableString);
  swift_bridgeObjectRetain();
  id v11 = sub_6B370(v5, v7, v9, v10, 0, 0);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v13);
  return v11;
}

uint64_t sub_79AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DirectInvocationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_79B14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DirectInvocationData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WorkoutVerb(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x79C3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutVerb()
{
  return &type metadata for WorkoutVerb;
}

unint64_t sub_79C78()
{
  unint64_t result = qword_B0BD0[0];
  if (!qword_B0BD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_B0BD0);
  }
  return result;
}

uint64_t sub_79CC4()
{
  return swift_dynamicCast();
}

uint64_t sub_79CE4()
{
  return 0x756F6B726F77;
}

uint64_t sub_79D20()
{
  return 0x68746C616568;
}

double sub_79D30()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return result;
}

double sub_79D4C@<D0>(uint64_t a1@<X8>)
{
  return sub_791D4(0xD000000000000012, (a1 - 32) | 0x8000000000000000, v1, (_OWORD *)(v2 - 112));
}

uint64_t sub_79D94()
{
  sub_9B2C(v1, 0, 1, v0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_79DCC()
{
  return v0;
}

uint64_t sub_79DE0(uint64_t a1, unint64_t *a2)
{
  return sub_D838(0, a2);
}

unint64_t sub_79DF8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_7FBE0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_allocWithZone((Class)NSUserDefaults);
  id v7 = sub_7A044(0xD000000000000015, 0x800000000008B450);
  if (!v7)
  {
    uint64_t v8 = sub_7FBA0();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    uint64_t v9 = sub_7FBD0();
    os_log_type_t v10 = sub_7FE20();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_0, v9, v10, "Error while creating Health user defaults!", v11, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v7 = [self standardUserDefaults];
  }
  id v12 = v7;
  unint64_t result = sub_26914();
  a1[3] = result;
  a1[4] = &off_A2610;
  *a1 = v12;
  return result;
}

unint64_t sub_79FD8()
{
  return (unint64_t)sub_7A000() & 1;
}

id sub_7A000()
{
  NSString v1 = sub_7FC40();
  id v2 = [v0 BOOLForKey:v1];

  return v2;
}

id sub_7A044(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = sub_7FC40();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithSuiteName:v3];

  return v4;
}

uint64_t sub_7A0A8(uint64_t a1)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 240);

  return _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 280);
}

uint64_t sub_7A110(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void *)(a2 + 264);
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v10;
  *(void *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  long long v12 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 280, a2 + 280);
  return a1;
}

uint64_t *sub_7A398(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *sub_7A418(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x140uLL);
}

uint64_t sub_7A420(uint64_t a1, uint64_t a2)
{
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 240);
  long long v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0(a1 + 280);
  long long v8 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  return a1;
}

uint64_t sub_7A52C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 320))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_7A56C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 320) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 320) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutDisambiguationStrategyAsync()
{
  return sub_9C4C();
}

uint64_t sub_7A618(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a5;
  uint64_t v35 = a8;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v33 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v46 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  long long v12 = (char *)&v31 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v32 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = sub_7FDE0();
  if (!v20) {
    return sub_7FD60();
  }
  Swift::Int v21 = v20;
  uint64_t v49 = sub_800F0();
  uint64_t v38 = sub_80100();
  sub_800A0(v21);
  uint64_t v42 = a6;
  uint64_t result = sub_7FDD0();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v40 = (void (**)(char *))(v39 + 2);
    unint64_t v41 = v14;
    ++v39;
    while (1)
    {
      uint64_t v23 = (void (*)(char *, void))sub_7FE00();
      uint64_t v24 = v12;
      unint64_t v25 = v12;
      uint64_t v26 = AssociatedTypeWitness;
      (*v40)(v24);
      v23(v48, 0);
      uint64_t v27 = v47;
      v44(v25, v46);
      if (v27) {
        break;
      }
      uint64_t v47 = 0;
      (*v39)(v25, v26);
      sub_800E0();
      sub_7FDF0();
      --v21;
      long long v12 = v25;
      if (!v21)
      {
        uint64_t v28 = v36;
        uint64_t v29 = v37;
        int v30 = v32;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v19, v37);
        sub_7FFF0();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
        return v49;
      }
    }
    (*v39)(v25, v26);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v37);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v35, v46, v34);
  }
  return result;
}

uint64_t sub_7AA8C()
{
  sub_9D38();
  v0[7] = v1;
  v0[8] = v2;
  uint64_t v3 = sub_7FBE0();
  v0[9] = v3;
  sub_9C80(v3);
  v0[10] = v4;
  v0[11] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_7AB18()
{
  int v30 = v0;
  sub_7EB30();
  uint64_t v1 = (void *)sub_7EB10();
  id v2 = [v1 disambiguationItems];

  uint64_t v3 = sub_7FD20();
  uint64_t v4 = sub_49E18(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_6A60(&qword_AD0E0);
    sub_7EC80();
    swift_task_dealloc();
    uint64_t v5 = sub_DAD8();
    return v6(v5);
  }
  else
  {
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[11];
    uint64_t v10 = v0[9];
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v11 = sub_E934(6);
    uint64_t v12 = sub_7FBA0();
    sub_9D08();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v12, v10);
    swift_retain_n();
    uint64_t v13 = sub_7FBD0();
    os_log_type_t v14 = sub_7FE30();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v17 = v0[10];
    uint64_t v16 = v0[11];
    uint64_t v18 = v0[9];
    if (v15)
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = sub_803E0();
      v0[5] = sub_1CDF0(v20, v21, &v29);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2112;
      sub_7D880((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      sub_7D960();
      *uint64_t v22 = v11;
      swift_retain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      v0[6] = v23;
      sub_7FF60();
      *uint64_t v28 = v23;
      swift_release_n();
      sub_7D940(&dword_0, v24, v25, "%s Error: %@");
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    sub_7D880((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    sub_7D960();
    *uint64_t v26 = v11;
    swift_willThrow();
    swift_task_dealloc();
    sub_9D44();
    return v27();
  }
}

uint64_t sub_7AF10()
{
  sub_9D38();
  v0[16] = v1;
  v0[17] = v2;
  v0[14] = v3;
  v0[15] = v4;
  v0[18] = *(void *)(v2 + 16);
  uint64_t v5 = sub_7E7A0();
  v0[19] = v5;
  sub_9C80(v5);
  v0[20] = v6;
  v0[21] = sub_9CC8();
  uint64_t v7 = sub_7ED20();
  v0[22] = v7;
  sub_9C80(v7);
  v0[23] = v8;
  v0[24] = sub_9CC8();
  uint64_t v9 = sub_7ECE0();
  v0[25] = v9;
  sub_9C80(v9);
  v0[26] = v10;
  v0[27] = sub_9CC8();
  uint64_t v11 = sub_7FBE0();
  v0[28] = v11;
  sub_9C80(v11);
  v0[29] = v12;
  v0[30] = swift_task_alloc();
  v0[31] = swift_task_alloc();
  sub_9D50();
  return _swift_task_switch(v13, v14, v15);
}

uint64_t sub_7B050()
{
  uint64_t v67 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[29];
  uint64_t v7 = v0 + 26;
  uint64_t v5 = v0[26];
  uint64_t v6 = v7[1];
  uint64_t v8 = v1[25];
  uint64_t v9 = v1[15];
  uint64_t v10 = sub_7FBA0();
  sub_9D08();
  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v64(v2, v10, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v9, v8);
  uint64_t v11 = sub_7FBD0();
  os_log_type_t v12 = sub_7FE20();
  uint64_t v65 = v10;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v61 = v1[29];
    uint64_t v13 = v1[27];
    uint64_t v14 = v1[25];
    uint64_t v60 = v1[26];
    uint64_t v15 = swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = sub_803E0();
    v1[12] = sub_1CDF0(v16, v17, v66);
    sub_7FF60();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_7D880((unint64_t *)&unk_AF4B0, (void (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v18 = sub_802A0();
    v1[13] = sub_1CDF0(v18, v19, v66);
    sub_7FF60();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v13, v14);
    _os_log_impl(&dword_0, v11, v12, "%s Received parse: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    uint64_t v20 = *(void (**)(void))(v61 + 8);
    sub_26A1C();
    v20();
  }
  else
  {
    uint64_t v21 = v1[31];
    uint64_t v23 = v1[28];
    uint64_t v22 = v1[29];
    sub_26A1C();
    v24();

    uint64_t v20 = *(void (**)(void))(v22 + 8);
    ((void (*)(uint64_t, uint64_t))v20)(v21, v23);
  }
  uint64_t v25 = (uint8_t *)v1[24];
  uint64_t v27 = v1[17];
  uint64_t v26 = (uint8_t *)v1[18];
  sub_7ECD0();
  uint64_t v28 = *(void *)(v27 + 32);
  uint64_t v29 = sub_3E8FC(v25, (uint64_t)v26, v26, v28);
  uint64_t v30 = v1[18];
  sub_26A1C();
  v31();
  uint64_t v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v30, v28);
  uint64_t v63 = (void *)v29;
  if (v32)
  {
    uint64_t v33 = v32;
    id v34 = [v32 spokenPhrase];

    uint64_t v35 = sub_7FC50();
    uint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v37 = 0;
  }
  sub_6A60(&qword_AD0C8);
  v1[8] = sub_7E930();
  uint64_t v38 = swift_task_alloc();
  *(void *)(v38 + 16) = v35;
  *(void *)(v38 + 24) = v37;
  sub_6A60(&qword_B0CA8);
  swift_getWitnessTable();
  sub_7FCF0();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)v1[9];
  if (v39)
  {
    uint64_t v41 = v1[20];
    uint64_t v40 = v1[21];
    uint64_t v42 = v1[19];
    v66[3] = sub_D838(0, (unint64_t *)&qword_AC3C8);
    v66[0] = (uint64_t)v39;
    id v43 = v39;
    id v44 = v63;
    sub_7E790();
    sub_7E840();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = (uint64_t (*)(void))v1[1];
  }
  else
  {
    uint64_t v47 = v1[30];
    uint64_t v48 = v1[28];
    type metadata accessor for HealthFlowError();
    swift_allocObject();
    uint64_t v49 = sub_E934(5);
    sub_9D08();
    v64(v47, v65, v48);
    swift_retain_n();
    uint64_t v50 = sub_7FBD0();
    os_log_type_t v51 = sub_7FE30();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      unint64_t v62 = (void *)swift_slowAlloc();
      v66[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136315394;
      uint64_t v53 = sub_803E0();
      v1[10] = sub_1CDF0(v53, v54, v66);
      sub_7FF60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2112;
      sub_7D880((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
      swift_allocError();
      *uint64_t v55 = v49;
      swift_retain();
      uint64_t v56 = _swift_stdlib_bridgeErrorToNSError();
      v1[11] = v56;
      sub_7FF60();
      *unint64_t v62 = v56;
      swift_release_n();
      sub_7D940(&dword_0, v57, v58, "%s Error: %@");
      sub_6A60(&qword_AC3D0);
      swift_arrayDestroy();
      sub_9CB0();
      swift_arrayDestroy();
      sub_9CB0();
      sub_9CB0();
    }
    else
    {
      swift_release_n();
    }

    sub_26A1C();
    v20();
    sub_7D880((unint64_t *)&qword_ABEE0, (void (*)(uint64_t))type metadata accessor for HealthFlowError);
    swift_allocError();
    *uint64_t v59 = v49;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = (uint64_t (*)(void))v1[1];
  }
  return v45();
}

uint64_t sub_7B88C(id *a1, uint64_t a2, uint64_t a3)
{
  id v5 = [*a1 spokenPhrase];
  uint64_t v6 = sub_7FC50();
  uint64_t v8 = v7;

  if (a3)
  {
    if (v6 == a2 && v8 == a3) {
      LOBYTE(a3) = 1;
    }
    else {
      LOBYTE(a3) = sub_802B0();
    }
  }
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_7B934()
{
  sub_9D38();
  v1[9] = v2;
  v1[10] = v0;
  v1[7] = v3;
  v1[8] = v4;
  sub_6A60(&qword_AC3B8);
  v1[11] = sub_9CC8();
  sub_7E470();
  v1[12] = sub_9CC8();
  uint64_t v5 = sub_7EA70();
  v1[13] = v5;
  sub_9C80(v5);
  v1[14] = v6;
  v1[15] = sub_9CC8();
  uint64_t v7 = sub_7E6E0();
  v1[16] = v7;
  sub_9C80(v7);
  v1[17] = v8;
  v1[18] = sub_9CC8();
  uint64_t v9 = sub_7FBE0();
  v1[19] = v9;
  sub_9C80(v9);
  v1[20] = v10;
  v1[21] = sub_9CC8();
  sub_9D50();
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_7BA70()
{
  uint64_t v29 = v0;
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  uint64_t v4 = sub_7FBA0();
  sub_9D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_7FBD0();
  os_log_type_t v6 = sub_7FE20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[20];
    uint64_t v27 = v0[21];
    uint64_t v8 = v0[19];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v10 = sub_803E0();
    v0[6] = sub_1CDF0(v10, v11, &v28);
    sub_7FF60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v6, "%s Generating prompt to disambiguate workoutName", v9, 0xCu);
    swift_arrayDestroy();
    sub_9CB0();
    sub_9CB0();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v27, v8);
  }
  else
  {
    uint64_t v13 = v0[20];
    uint64_t v12 = v0[21];
    uint64_t v14 = v0[19];

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[17];
  uint64_t v16 = v0[18];
  uint64_t v17 = v0[16];
  uint64_t v18 = v0[11];
  sub_6A60(&qword_AD0C8);
  v0[5] = sub_7E930();
  uint64_t v19 = sub_6A60(&qword_B0CA8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_7A618((void (*)(char *, char *))sub_7C2F4, 0, v19, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v21);
  swift_bridgeObjectRelease();
  sub_42C04(v22);
  swift_bridgeObjectRelease();
  sub_7E450();
  sub_7EA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v18, v16, v17);
  sub_9B2C(v18, 0, 1, v17);
  sub_7EA40();
  sub_7EA60();
  uint64_t v23 = sub_7E930();
  v0[22] = v23;
  uint64_t v24 = (void *)swift_task_alloc();
  v0[23] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_7BDD8;
  uint64_t v25 = v0[9];
  return sub_7C35C(v23, v25);
}

uint64_t sub_7BDD8()
{
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_9D5C();
  *uint64_t v5 = v4;
  *(void *)(v7 + 192) = v6;
  *(void *)(v7 + 200) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7BF08()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v1[38];
  uint64_t v3 = v1[39];
  sub_9AE0(v1 + 35, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_7BFD0;
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[7];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v7, v5, v6, v2, v3);
}

uint64_t sub_7BFD0()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_9D5C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_7C0B0()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v7();
}

uint64_t sub_7C19C()
{
  uint64_t v0 = sub_7D8E8();
  v1(v0);
  uint64_t v2 = sub_7D910();
  v3(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v4();
}

uint64_t sub_7C244()
{
  uint64_t v1 = sub_7D8E8();
  v2(v1);
  uint64_t v3 = sub_7D910();
  v4(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_9D44();
  return v5();
}

void sub_7C2F4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 spokenPhrase];
  uint64_t v4 = sub_7FC50();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_7C35C(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  sub_9D50();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_7C384()
{
  uint64_t v1 = sub_7CEA4(*(void *)(v0 + 136), *(void *)(v0 + 144));
  *(void *)(v0 + 160) = v1;
  uint64_t v2 = sub_D838(0, (unint64_t *)&qword_AC8F8);
  if (sub_7D928(v2))
  {
    uint64_t v3 = *sub_9AE0(*(void **)(v0 + 152), *(void *)(*(void *)(v0 + 152) + 24));
    uint64_t v4 = (void *)sub_7D8C8();
    *(void *)(v0 + 168) = v4;
    *uint64_t v4 = v0;
    uint64_t v5 = sub_7C698;
  }
  else
  {
    uint64_t v6 = sub_D838(0, (unint64_t *)&qword_AC798);
    if (sub_7D928(v6))
    {
      uint64_t v3 = *sub_9AE0((void *)(*(void *)(v0 + 152) + 40), *(void *)(*(void *)(v0 + 152) + 64));
      uint64_t v4 = (void *)sub_7D8C8();
      *(void *)(v0 + 184) = v4;
      *uint64_t v4 = v0;
      uint64_t v5 = sub_7C834;
    }
    else
    {
      uint64_t v7 = sub_D838(0, (unint64_t *)&qword_AC818);
      if (sub_7D928(v7))
      {
        uint64_t v3 = *sub_9AE0((void *)(*(void *)(v0 + 152) + 80), *(void *)(*(void *)(v0 + 152) + 104));
        uint64_t v4 = (void *)sub_7D8C8();
        *(void *)(v0 + 200) = v4;
        *uint64_t v4 = v0;
        uint64_t v5 = sub_7C9D0;
      }
      else
      {
        uint64_t v8 = sub_D838(0, (unint64_t *)&qword_ABEC8);
        if (sub_7D928(v8))
        {
          uint64_t v3 = *sub_9AE0((void *)(*(void *)(v0 + 152) + 120), *(void *)(*(void *)(v0 + 152) + 144));
          uint64_t v4 = (void *)sub_7D8C8();
          *(void *)(v0 + 216) = v4;
          *uint64_t v4 = v0;
          uint64_t v5 = sub_7CB6C;
        }
        else
        {
          uint64_t v9 = sub_D838(0, (unint64_t *)&qword_AC898);
          if (!sub_7D928(v9)) {
            return sub_801A0();
          }
          uint64_t v3 = *sub_9AE0((void *)(*(void *)(v0 + 152) + 160), *(void *)(*(void *)(v0 + 152) + 184));
          uint64_t v4 = (void *)sub_7D8C8();
          *(void *)(v0 + 232) = v4;
          *uint64_t v4 = v0;
          uint64_t v5 = sub_7CD08;
        }
      }
    }
  }
  v4[1] = v5;
  return v11(0, 1, 1, 0, v1, v3);
}

uint64_t sub_7C698()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 176) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7C77C()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_DAD8();
  return v1(v0);
}

uint64_t sub_7C7D8()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  sub_9D44();
  return v0();
}

uint64_t sub_7C834()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[5] = v1;
  v2[6] = v4;
  v2[7] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 192) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7C918()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_DAD8();
  return v1(v0);
}

uint64_t sub_7C974()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  sub_9D44();
  return v0();
}

uint64_t sub_7C9D0()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[8] = v1;
  v2[9] = v4;
  v2[10] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 208) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7CAB4()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_DAD8();
  return v1(v0);
}

uint64_t sub_7CB10()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  sub_9D44();
  return v0();
}

uint64_t sub_7CB6C()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[11] = v1;
  v2[12] = v4;
  v2[13] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 224) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7CC50()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_DAD8();
  return v1(v0);
}

uint64_t sub_7CCAC()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  sub_9D44();
  return v0();
}

uint64_t sub_7CD08()
{
  sub_9D38();
  sub_9C98();
  sub_9D5C();
  *uint64_t v3 = v2;
  v2[14] = v1;
  v2[15] = v4;
  v2[16] = v0;
  sub_DC68();
  uint64_t v5 = *v1;
  sub_9D5C();
  *uint64_t v6 = v5;
  *(void *)(v7 + 240) = v0;
  swift_task_dealloc();
  sub_9D50();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_7CDEC()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_DAD8();
  return v1(v0);
}

uint64_t sub_7CE48()
{
  sub_9D38();
  swift_bridgeObjectRelease();
  sub_9D44();
  return v0();
}

uint64_t sub_7CEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a1;
  v7[1] = *(_OWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v2 = sub_6A60(&qword_B0CA8);
  uint64_t v3 = sub_7F740();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_7A618((void (*)(char *, char *))sub_7D83C, (uint64_t)v7, v2, v3, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v5);
}

uint64_t sub_7CF5C@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_6A60(&qword_AC2C8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_7F830();
  uint64_t v25 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7FE50();
  uint64_t v12 = sub_7F820();
  uint64_t v14 = v13;
  uint64_t v15 = a1 + 30;
  uint64_t v16 = a1[33];
  uint64_t v17 = a1[34];
  sub_9AE0(v15, v16);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v27, v16, v17);
  sub_385F4(v27, v12, v14);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  _s24HealthFlowDelegatePlugin33WorkoutAppSelectionTrainingLoggerVwxx_0((uint64_t)v27);
  if (v19)
  {
    sub_7FCA0();
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  sub_9B2C((uint64_t)v8, v20, 1, v9);
  sub_7F730();
  swift_allocObject();
  sub_7F720();
  uint64_t v21 = v25;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v6, v11, v9);
  sub_9B2C((uint64_t)v6, 0, 1, v9);
  sub_7F710();
  swift_release();
  sub_2F854((uint64_t)v6);
  sub_7F6F0();
  swift_release();
  uint64_t v22 = sub_7F700();
  swift_release();
  sub_2F854((uint64_t)v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  *uint64_t v26 = v22;
  return result;
}

uint64_t sub_7D210(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_7D2B0;
  return sub_7AA8C();
}

uint64_t sub_7D2B0(uint64_t a1)
{
  sub_9C98();
  uint64_t v5 = v4;
  sub_9D5C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_9D5C();
  void *v8 = v7;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v5 + 16) = a1;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_7D394()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_9C7C;
  return sub_7AF10();
}

uint64_t sub_7D44C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_9C7C;
  return sub_7B934();
}

uint64_t sub_7D4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_9C7C;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)(a1, a2, a3, a4, a5);
}

uint64_t sub_7D5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_9C7C;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)(a1, a2, a3, a4, a5);
}

uint64_t sub_7D694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_9C7C;
  return NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_7D758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_9C7C;
  return NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_7D820()
{
  return swift_getWitnessTable();
}

uint64_t sub_7D83C@<X0>(uint64_t *a1@<X8>)
{
  return sub_7CF5C(*(void **)(v1 + 40), a1);
}

uint64_t sub_7D860(id *a1)
{
  return sub_7B88C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_7D880(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7D8C8()
{
  return swift_task_alloc();
}

uint64_t sub_7D8E8()
{
  return *(void *)(v0 + 120);
}

uint64_t sub_7D910()
{
  return v0;
}

uint64_t sub_7D928(uint64_t a1)
{
  return _swift_dynamicCastMetatype(v1, a1);
}

void sub_7D940(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_7D960()
{
  return swift_allocError();
}

uint64_t sub_7D980()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t sub_7D990()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_7D9A0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_7D9B0()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

void sub_7D9C0(NSURL *retstr@<X8>)
{
}

uint64_t sub_7D9D0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_7D9E0()
{
  return type metadata accessor for URL();
}

uint64_t sub_7D9F0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_7DA00()
{
  return UUID.uuidString.getter();
}

NSUUID sub_7DA10()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_7DA20()
{
  return UUID.init()();
}

uint64_t sub_7DA30()
{
  return type metadata accessor for UUID();
}

uint64_t sub_7DA40()
{
  return type metadata accessor for Locale();
}

uint64_t sub_7DA50()
{
  return SnippetPluginModel.snippetHidden(for:idiom:)();
}

uint64_t sub_7DAA0()
{
  return static CommonGuardFlowUtils.makeGuardFlow(withGuards:)();
}

uint64_t sub_7DAC0()
{
  return HandleIntentFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t sub_7DB20()
{
  return HandleIntentFlowStrategy.authenticationPolicy.getter();
}

uint64_t sub_7DB70()
{
  return SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
}

uint64_t sub_7DB80()
{
  return type metadata accessor for SimpleOutputFlowAsync();
}

uint64_t sub_7DBA0()
{
  return UnlockDeviceFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t sub_7DBC0()
{
  return UnlockDeviceFlowStrategy.authenticationPolicy.getter();
}

uint64_t sub_7DC90()
{
  return NeedsConfirmationFlowStrategy.authenticationPolicy.getter();
}

uint64_t sub_7DD10()
{
  return NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:)();
}

uint64_t sub_7DD20()
{
  return NeedsDisambiguationFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t sub_7DD60()
{
  return NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:)();
}

uint64_t sub_7DD80()
{
  return NeedsDisambiguationFlowStrategy.paginationStyle(app:intent:parameterName:intentResolutionResult:)();
}

uint64_t sub_7DD90()
{
  return NeedsDisambiguationFlowStrategy.paginationStyle()();
}

uint64_t sub_7DDA0()
{
  return NeedsDisambiguationFlowStrategy.authenticationPolicy.getter();
}

uint64_t sub_7DDF0()
{
  return RequestDeviceUnlockFlowStrategy.machineUtteranceForRestartingRequest.getter();
}

uint64_t sub_7DEC0()
{
  return AppResolutionOnDeviceFlowStrategy.makeAppResolutionSuccessfulResponse(app:completion:)();
}

uint64_t sub_7DEE0()
{
  return AppResolutionOnDeviceFlowStrategy.makeAppResolutionUnsuccessfulResponse(reason:completion:)();
}

uint64_t sub_7DF00()
{
  return AppResolutionOnDeviceFlowStrategy.makeErrorOutput(error:completion:)();
}

uint64_t sub_7DF40()
{
  return ClientHandledRequestTCCAcceptanceFlowStrategyAsync.handoffTCCFlow(deviceState:)();
}

uint64_t sub_7DF80()
{
  return dispatch thunk of AnyFlow.on(input:)();
}

uint64_t sub_7DF90()
{
  return type metadata accessor for GuardFlow();
}

uint64_t sub_7DFA0()
{
  return static CommonFlowGuard.disallowInSharingMode.getter();
}

uint64_t sub_7DFB0()
{
  return type metadata accessor for CommonFlowGuard();
}

uint64_t sub_7DFC0()
{
  return static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)();
}

uint64_t sub_7DFD0()
{
  return static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)();
}

uint64_t sub_7DFE0()
{
  return static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)();
}

uint64_t sub_7DFF0()
{
  return static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)();
}

uint64_t sub_7E000()
{
  return static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B, C>(strategy:)();
}

uint64_t sub_7E020()
{
  return static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)();
}

uint64_t sub_7E030()
{
  return static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)();
}

uint64_t sub_7E040()
{
  return static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)();
}

uint64_t sub_7E050()
{
  return static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)();
}

uint64_t sub_7E060()
{
  return static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)();
}

uint64_t sub_7E070()
{
  return static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)();
}

uint64_t sub_7E080()
{
  return static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)();
}

uint64_t sub_7E090()
{
  return static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)();
}

uint64_t sub_7E0A0()
{
  return static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)();
}

uint64_t sub_7E0B0()
{
  return RCHChildFlowProducersAsync.needsValueFlowProducer.setter();
}

uint64_t sub_7E0C0()
{
  return RCHChildFlowProducersAsync.handleIntentFlowProducer.setter();
}

uint64_t sub_7E0D0()
{
  return RCHChildFlowProducersAsync.appResolutionFlowProducer.setter();
}

uint64_t sub_7E0E0()
{
  return RCHChildFlowProducersAsync.continueInAppFlowProducer.setter();
}

uint64_t sub_7E0F0()
{
  return RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter();
}

uint64_t sub_7E100()
{
  return RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter();
}

uint64_t sub_7E110()
{
  return RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter();
}

uint64_t sub_7E120()
{
  return RCHChildFlowProducersAsync.init()();
}

uint64_t sub_7E130()
{
  return RCHChildFlowFactory.init(producers:)();
}

uint64_t sub_7E140()
{
  return RCHChildFlowFactory.init(producers:)();
}

uint64_t sub_7E150()
{
  return RCHChildFlowProducers.needsValueFlowCompletion.setter();
}

uint64_t sub_7E160()
{
  return RCHChildFlowProducers.handleIntentFlowCompletion.setter();
}

uint64_t sub_7E170()
{
  return RCHChildFlowProducers.appResolutionFlowCompletion.setter();
}

uint64_t sub_7E190()
{
  return RCHChildFlowProducers.unsupportedValueFlowCompletion.setter();
}

uint64_t sub_7E1A0()
{
  return RCHChildFlowProducers.needsConfirmationFlowCompletion.setter();
}

uint64_t sub_7E1B0()
{
  return RCHChildFlowProducers.needsDisambiguationFlowCompletion.setter();
}

uint64_t sub_7E1C0()
{
  return RCHChildFlowProducers.requestTCCAcceptanceFlowCompletion.setter();
}

uint64_t sub_7E1E0()
{
  return Flow.eraseToAnyFlow()();
}

uint64_t sub_7E200()
{
  return Flow.flexibleExecutionSupport.getter();
}

uint64_t sub_7E220()
{
  return Flow.guarded<A>(by:)();
}

uint64_t sub_7E240()
{
  return Flow<>.exitValue.getter();
}

uint64_t sub_7E250()
{
  return FlowPlugin.findFlowFor(parse:)();
}

uint64_t sub_7E260()
{
  return FlowPlugin.makeFlowFrame(parse:)();
}

void sub_7E270()
{
}

uint64_t sub_7E280()
{
  return static SiriKitEventSender.current.getter();
}

uint64_t sub_7E2A0()
{
  return SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)();
}

uint64_t sub_7E2B0()
{
  return type metadata accessor for SiriKitDisambiguationItem();
}

uint64_t sub_7E2C0()
{
  return static SiriKitIntentExecutionBehavior.remoteIntentExecution(targetDevice:)();
}

uint64_t sub_7E2D0()
{
  return static SiriKitIntentExecutionBehavior.standard()();
}

uint64_t sub_7E2E0()
{
  return type metadata accessor for SiriKitIntentExecutionBehavior();
}

uint64_t sub_7E2F0()
{
  return dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
}

uint64_t sub_7E300()
{
  return dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)();
}

uint64_t sub_7E310()
{
  return dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
}

uint64_t sub_7E320()
{
  return type metadata accessor for SiriKitDisambiguationItemComponent();
}

uint64_t sub_7E330()
{
  return static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)();
}

uint64_t sub_7E340()
{
  return static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForWatch(disambiguationItems:textToSpeechIsEnabled:)();
}

uint64_t sub_7E350()
{
  return static SiriKitEvent.uufrReady()();
}

uint64_t sub_7E370()
{
  return static AceService.currentAsync.getter();
}

uint64_t sub_7E380()
{
  return static AceService.current.getter();
}

uint64_t sub_7E390()
{
  return dispatch thunk of DeviceState.siriLocale.getter();
}

uint64_t sub_7E3A0()
{
  return dispatch thunk of DeviceState.inputOrigin.getter();
}

uint64_t sub_7E3B0()
{
  return dispatch thunk of DeviceState.isCarDNDMode.getter();
}

uint64_t sub_7E3C0()
{
  return dispatch thunk of DeviceState.isLockedWithPasscode.getter();
}

uint64_t sub_7E3D0()
{
  return dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
}

uint64_t sub_7E3E0()
{
  return dispatch thunk of DeviceState.isPhone.getter();
}

uint64_t sub_7E3F0()
{
  return dispatch thunk of DeviceState.isWatch.getter();
}

uint64_t sub_7E400()
{
  return dispatch thunk of DeviceState.isCarPlay.getter();
}

uint64_t sub_7E410()
{
  return dispatch thunk of DeviceState.isHomePod.getter();
}

uint64_t sub_7E420()
{
  return DeviceState.asInvocationContext.getter();
}

uint64_t sub_7E430()
{
  return static DialogPhase.completion.getter();
}

uint64_t sub_7E440()
{
  return static DialogPhase.confirmation.getter();
}

uint64_t sub_7E450()
{
  return static DialogPhase.clarification.getter();
}

uint64_t sub_7E460()
{
  return static DialogPhase.error.getter();
}

uint64_t sub_7E470()
{
  return type metadata accessor for DialogPhase();
}

uint64_t sub_7E480()
{
  return DisplayHint.init(idValue:displayValue:)();
}

uint64_t sub_7E490()
{
  return DisplayHint.idValue.getter();
}

uint64_t sub_7E4A0()
{
  return type metadata accessor for DisplayHint();
}

uint64_t sub_7E4C0()
{
  return TCCResponses.init()();
}

uint64_t sub_7E4D0()
{
  return type metadata accessor for TCCResponses();
}

uint64_t sub_7E4E0()
{
  return static TCCTemplates.promptToEnableApp(appDisplayInfo:deviceState:_:)();
}

uint64_t sub_7E4F0()
{
  return static TCCTemplates.promptToEnableAppSnippetTitle(appDisplayInfo:_:)();
}

uint64_t sub_7E500()
{
  return static TCCTemplates.promptToEnableAppSnippetSubtitle(appDisplayInfo:_:)();
}

uint64_t sub_7E510()
{
  return SemanticValue.init(string:label:)();
}

uint64_t sub_7E520()
{
  return type metadata accessor for SemanticValue();
}

uint64_t sub_7E530()
{
  return static ActionForInput.cancel()();
}

uint64_t sub_7E540()
{
  return static ActionForInput.handle()();
}

uint64_t sub_7E550()
{
  return static ActionForInput.ignore()();
}

uint64_t sub_7E560()
{
  return CommandFailure.init(errorCode:reason:)();
}

uint64_t sub_7E570()
{
  return type metadata accessor for CommandFailure();
}

uint64_t sub_7E5A0()
{
  return RCHFlowFactory.makeAppResolvingRCHFlow()();
}

uint64_t sub_7E5B0()
{
  return RCHFlowFactory.makeRCHFlowWithResolvedApp(_:intent:)();
}

uint64_t sub_7E5C0()
{
  return RCHFlowFactory.init(strategy:childFlowFactory:)();
}

uint64_t sub_7E5D0()
{
  return static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_7E5E0()
{
  return static AceOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_7E5F0()
{
  return static AceOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_7E600()
{
  return static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_7E610()
{
  return static ExecuteResponse.complete<A>(next:)();
}

uint64_t sub_7E620()
{
  return static ExecuteResponse.complete(next:)();
}

uint64_t sub_7E630()
{
  return type metadata accessor for ExecuteResponse();
}

uint64_t sub_7E640()
{
  return NLContextUpdate.displayHints.setter();
}

uint64_t sub_7E650()
{
  return NLContextUpdate.nluSystemDialogActs.setter();
}

uint64_t sub_7E660()
{
  return NLContextUpdate.objectDisambiguation.setter();
}

uint64_t sub_7E670()
{
  return NLContextUpdate.weightedPromptStrict.setter();
}

uint64_t sub_7E680()
{
  return NLContextUpdate.weightedPromptTargetDomain.setter();
}

uint64_t sub_7E690()
{
  return NLContextUpdate.conversationStateAttachments.setter();
}

uint64_t sub_7E6A0()
{
  return NLContextUpdate.weightedPromptResponseOptions.setter();
}

uint64_t sub_7E6B0()
{
  return NLContextUpdate.weightedPromptResponseTargets.setter();
}

uint64_t sub_7E6C0()
{
  return NLContextUpdate.nlInput.setter();
}

uint64_t sub_7E6D0()
{
  return NLContextUpdate.init()();
}

uint64_t sub_7E6E0()
{
  return type metadata accessor for NLContextUpdate();
}

uint64_t sub_7E6F0()
{
  return RCHFlowStrategy.makeErrorResponse(error:_:)();
}

uint64_t sub_7E720()
{
  return ResponseFactory.init()();
}

uint64_t sub_7E730()
{
  return type metadata accessor for ResponseFactory();
}

uint64_t sub_7E740()
{
  return static SAAppInfoFactory.createAppInfo(app:)();
}

BOOL sub_7E750(Swift::Bool defaultBehavior)
{
  return TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(defaultBehavior);
}

uint64_t sub_7E760()
{
  return type metadata accessor for TemplatingResult();
}

uint64_t sub_7E770()
{
  return dispatch thunk of AceServiceInvoker.submitToRemote<A>(_:_:completion:)();
}

uint64_t sub_7E780()
{
  return static ResponseTemplates.taskAborted(_:)();
}

uint64_t sub_7E790()
{
  return IntentPromptAnswer.init(answeredValue:updatedIntent:)();
}

uint64_t sub_7E7A0()
{
  return type metadata accessor for IntentPromptAnswer();
}

uint64_t sub_7E7C0()
{
  return static AppResolutionAction.noAppFound()();
}

uint64_t sub_7E7D0()
{
  return static AppResolutionAction.disambiguate(apps:)();
}

uint64_t sub_7E7E0()
{
  return static AppResolutionAction.select(app:)();
}

uint64_t sub_7E7F0()
{
  return type metadata accessor for AppResolutionAction();
}

uint64_t sub_7E810()
{
  return ParameterIdentifier.name.getter();
}

uint64_t sub_7E820()
{
  return type metadata accessor for ParameterIdentifier();
}

uint64_t sub_7E830()
{
  return type metadata accessor for ConfirmationResponse();
}

uint64_t sub_7E840()
{
  return static DisambiguationResult.chosenItem(_:)();
}

uint64_t sub_7E850()
{
  return type metadata accessor for DisambiguationResult();
}

uint64_t sub_7E870()
{
  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)();
}

uint64_t sub_7E880()
{
  return static AppResolutionResponse.makeDisambiguationList(apps:inLocale:)();
}

uint64_t sub_7E890()
{
  return static AppResolutionResponse.makeDisambiguationViews(apps:utteranceViews:disambiguationList:deviceState:compact:)();
}

uint64_t sub_7E8B0()
{
  return dispatch thunk of AppInformationResolver.getLocalizedAppDisplayName(inLocale:)();
}

uint64_t sub_7E8C0()
{
  return AppInformationResolver.init(app:)();
}

uint64_t sub_7E8D0()
{
  return type metadata accessor for AppInformationResolver();
}

uint64_t sub_7E8E0()
{
  return IntentResolutionRecord.intentResponse.getter();
}

uint64_t sub_7E8F0()
{
  return IntentResolutionRecord.app.getter();
}

uint64_t sub_7E900()
{
  return IntentResolutionRecord.intent.getter();
}

uint64_t sub_7E910()
{
  return type metadata accessor for IntentResolutionRecord();
}

uint64_t sub_7E920()
{
  return static OutputPublisherFactory.makeOutputPublisherAsync()();
}

uint64_t sub_7E930()
{
  return PaginatedItemContainer.items.getter();
}

uint64_t sub_7E940()
{
  return static AppConfirmationResponse.cancel()();
}

uint64_t sub_7E950()
{
  return type metadata accessor for AppConfirmationResponse();
}

uint64_t sub_7E960()
{
  return AppConfirmationStrategy.makeConfirmationErrorResponse(app:error:completion:)();
}

uint64_t sub_7E970()
{
  return AppConfirmationStrategy.makeConfirmationRejectedResponse(app:completion:)();
}

uint64_t sub_7E980()
{
  return AppConfirmationStrategy.makeConfirmationCancelledResponse(app:completion:)();
}

uint64_t sub_7E990()
{
  return AppConfirmationStrategy.makeRepromptOnEmptyParse(app:completion:)();
}

uint64_t sub_7E9A0()
{
  return AppConfirmationStrategy.makeRepromptOnLowConfidence(app:completion:)();
}

uint64_t sub_7E9B0()
{
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
}

uint64_t sub_7E9C0()
{
  return dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)();
}

uint64_t sub_7E9D0()
{
  return dispatch thunk of MachineUtteranceBuilder.build()();
}

uint64_t sub_7E9E0()
{
  return MachineUtteranceBuilder.init()();
}

uint64_t sub_7E9F0()
{
  return type metadata accessor for MachineUtteranceBuilder();
}

uint64_t sub_7EA00()
{
  return NeedsConfirmationAnswer.init(answeredValue:updatedIntent:)();
}

uint64_t sub_7EA10()
{
  return type metadata accessor for NeedsConfirmationAnswer();
}

uint64_t sub_7EA20()
{
  return OutputGenerationManifest.init(dialogPhase:_:)();
}

uint64_t sub_7EA30()
{
  return OutputGenerationManifest.canUseServerTTS.setter();
}

uint64_t sub_7EA40()
{
  return OutputGenerationManifest.nlContextUpdate.setter();
}

uint64_t sub_7EA50()
{
  return OutputGenerationManifest.additionalCommands.setter();
}

uint64_t sub_7EA60()
{
  return OutputGenerationManifest.listenAfterSpeaking.setter();
}

uint64_t sub_7EA70()
{
  return type metadata accessor for OutputGenerationManifest();
}

uint64_t sub_7EA80()
{
  return static AppDisambiguationResponse.cancel()();
}

uint64_t sub_7EA90()
{
  return static AppDisambiguationResponse.select(app:)();
}

uint64_t sub_7EAA0()
{
  return type metadata accessor for AppDisambiguationResponse();
}

uint64_t sub_7EAB0()
{
  return AppDisambiguationStrategy.makeDisambiguationErrorResponse(apps:error:completion:)();
}

uint64_t sub_7EAC0()
{
  return AppDisambiguationStrategy.makeDisambiguationCancelResponse(apps:completion:)();
}

uint64_t sub_7EAD0()
{
  return AppDisambiguationStrategy.makeRepromptOnEmptyParse(apps:completion:)();
}

uint64_t sub_7EAE0()
{
  return AppDisambiguationStrategy.makeRepromptOnLowConfidence(apps:completion:)();
}

uint64_t sub_7EAF0()
{
  return ParameterResolutionRecord.app.getter();
}

uint64_t sub_7EB00()
{
  return ParameterResolutionRecord.intent.getter();
}

uint64_t sub_7EB10()
{
  return ParameterResolutionRecord.result.getter();
}

uint64_t sub_7EB20()
{
  return ParameterResolutionRecord.parameter.getter();
}

uint64_t sub_7EB30()
{
  return type metadata accessor for ParameterResolutionRecord();
}

uint64_t sub_7EB40()
{
  return OrdinalDisplayHintsBuilder.init(referenceNode:)();
}

uint64_t sub_7EB50()
{
  return OrdinalDisplayHintsBuilder.build(for:)();
}

uint64_t sub_7EB60()
{
  return type metadata accessor for OrdinalDisplayHintsBuilder();
}

uint64_t sub_7EB80()
{
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)();
}

uint64_t sub_7EC80()
{
  return BasicDisambiguationItemContainer.__allocating_init(_:_:)();
}

uint64_t sub_7EC90()
{
  return BasicDisambiguationItemContainer.init(_:_:)();
}

uint64_t sub_7ECC0()
{
  return SimpleConfirmationResponseProvider.init(_:)();
}

uint64_t sub_7ECD0()
{
  return Input.parse.getter();
}

uint64_t sub_7ECE0()
{
  return type metadata accessor for Input();
}

uint64_t sub_7ECF0()
{
  return Parse.DirectInvocation.identifier.getter();
}

uint64_t sub_7ED00()
{
  return Parse.DirectInvocation.userData.getter();
}

uint64_t sub_7ED10()
{
  return type metadata accessor for Parse.DirectInvocation();
}

uint64_t sub_7ED20()
{
  return type metadata accessor for Parse();
}

uint64_t sub_7ED30()
{
  return static Device.current.getter();
}

uint64_t sub_7ED50()
{
  return RCHFlow.__allocating_init(strategy:childFlowFactory:)();
}

uint64_t sub_7ED60()
{
  return USOParse.userParse.getter();
}

uint64_t sub_7ED70()
{
  return type metadata accessor for USOParse();
}

uint64_t sub_7ED80()
{
  return type metadata accessor for AceOutput();
}

uint64_t sub_7ED90()
{
  return type metadata accessor for ImageSize();
}

uint64_t sub_7EDA0()
{
  return type metadata accessor for DomainUseCase();
}

uint64_t sub_7EDB0()
{
  return SignalListBuilder.withCommonSignals()();
}

uint64_t sub_7EDC0()
{
  return SignalListBuilder.init(with:)();
}

uint64_t sub_7EDD0()
{
  return type metadata accessor for SignalListBuilder();
}

uint64_t sub_7EDE0()
{
  return dispatch thunk of SignalListBuilding.withDomainSignals(useCase:)();
}

uint64_t sub_7EDF0()
{
  return dispatch thunk of SignalListBuilding.toTrainingMessageProviding()();
}

uint64_t sub_7EE00()
{
  return SELFMessageBuilding.populateCommonDependents(from:domainUseCase:)();
}

uint64_t sub_7EE10()
{
  return SELFMessageBuilding.populateCommonIndependent(from:)();
}

uint64_t sub_7EE20()
{
  return dispatch thunk of TrainingMessageProviding.generate<A>(with:)();
}

uint64_t sub_7EE30()
{
  return dispatch thunk of SignalDefinitionParametersProvider.Builder.with(bundleIds:)();
}

uint64_t sub_7EE40()
{
  return dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
}

uint64_t sub_7EE50()
{
  return SignalDefinitionParametersProvider.Builder.init()();
}

uint64_t sub_7EE60()
{
  return type metadata accessor for SignalDefinitionParametersProvider.Builder();
}

uint64_t sub_7EE70()
{
  return type metadata accessor for SignalDefinitionParametersProvider();
}

uint64_t sub_7EE80()
{
  return Siri_Nlu_External_UUID.init()();
}

uint64_t sub_7EE90()
{
  return type metadata accessor for Siri_Nlu_External_UUID();
}

uint64_t sub_7EEA0()
{
  return Siri_Nlu_External_UsoGraph.identifiers.getter();
}

uint64_t sub_7EEB0()
{
  return type metadata accessor for Siri_Nlu_External_UsoGraph();
}

uint64_t sub_7EEC0()
{
  return Siri_Nlu_External_UserParse.userDialogActs.getter();
}

uint64_t sub_7EED0()
{
  return type metadata accessor for Siri_Nlu_External_UserParse();
}

uint64_t sub_7EEE0()
{
  return Siri_Nlu_External_UserAccepted.init()();
}

uint64_t sub_7EEF0()
{
  return type metadata accessor for Siri_Nlu_External_UserAccepted();
}

uint64_t sub_7EF00()
{
  return Siri_Nlu_External_SystemOffered.offeredAct.setter();
}

uint64_t sub_7EF10()
{
  return Siri_Nlu_External_SystemOffered.init()();
}

uint64_t sub_7EF20()
{
  return type metadata accessor for Siri_Nlu_External_SystemOffered();
}

uint64_t sub_7EF30()
{
  return Siri_Nlu_External_UserDialogAct.hasAccepted.getter();
}

uint64_t sub_7EF40()
{
  return Siri_Nlu_External_UserDialogAct.hasRejected.getter();
}

uint64_t sub_7EF50()
{
  return Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
}

uint64_t sub_7EF60()
{
  return Siri_Nlu_External_UserDialogAct.userStatedTask.getter();
}

uint64_t sub_7EF70()
{
  return Siri_Nlu_External_UserDialogAct.userStatedTask.setter();
}

uint64_t sub_7EF80()
{
  return Siri_Nlu_External_UserDialogAct.accepted.setter();
}

uint64_t sub_7EF90()
{
  return Siri_Nlu_External_UserDialogAct.init()();
}

uint64_t sub_7EFA0()
{
  return type metadata accessor for Siri_Nlu_External_UserDialogAct();
}

uint64_t sub_7EFB0()
{
  return Siri_Nlu_External_SystemPrompted.target.setter();
}

uint64_t sub_7EFC0()
{
  return Siri_Nlu_External_SystemPrompted.init()();
}

uint64_t sub_7EFD0()
{
  return type metadata accessor for Siri_Nlu_External_SystemPrompted();
}

uint64_t sub_7EFE0()
{
  return Siri_Nlu_External_UserStatedTask.task.getter();
}

uint64_t sub_7EFF0()
{
  return Siri_Nlu_External_UserStatedTask.task.setter();
}

uint64_t sub_7F000()
{
  return Siri_Nlu_External_UserStatedTask.init()();
}

uint64_t sub_7F010()
{
  return type metadata accessor for Siri_Nlu_External_UserStatedTask();
}

uint64_t sub_7F020()
{
  return Siri_Nlu_External_SystemDialogAct.gaveOptions.setter();
}

uint64_t sub_7F030()
{
  return Siri_Nlu_External_SystemDialogAct.id.setter();
}

uint64_t sub_7F040()
{
  return Siri_Nlu_External_SystemDialogAct.offered.setter();
}

uint64_t sub_7F050()
{
  return Siri_Nlu_External_SystemDialogAct.prompted.setter();
}

uint64_t sub_7F060()
{
  return Siri_Nlu_External_SystemDialogAct.init()();
}

uint64_t sub_7F070()
{
  return type metadata accessor for Siri_Nlu_External_SystemDialogAct();
}

uint64_t sub_7F080()
{
  return Siri_Nlu_External_SystemGaveOptions.choices.setter();
}

uint64_t sub_7F090()
{
  return Siri_Nlu_External_SystemGaveOptions.init()();
}

uint64_t sub_7F0A0()
{
  return type metadata accessor for Siri_Nlu_External_SystemGaveOptions();
}

uint64_t sub_7F0B0()
{
  return Siri_Nlu_External_UsoEntityIdentifier.value.getter();
}

uint64_t sub_7F0C0()
{
  return Siri_Nlu_External_UsoEntityIdentifier.namespace.getter();
}

uint64_t sub_7F0D0()
{
  return type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier();
}

uint64_t sub_7F0E0()
{
  return static ConversionUtils.convertUuidToProto(uuid:)();
}

uint64_t sub_7F0F0()
{
  return static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)();
}

uint64_t sub_7F100()
{
  return static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
}

uint64_t sub_7F120()
{
  return NonTerminalOntologyNode.deinit();
}

uint64_t sub_7F130()
{
  return AppOntologyNode.init(name:multicardinal:)();
}

uint64_t sub_7F140()
{
  return type metadata accessor for AppOntologyNode();
}

uint64_t sub_7F150()
{
  return DomainOntologyNode.init(name:childNodes:isInEventTree:)();
}

uint64_t sub_7F160()
{
  return type metadata accessor for DomainOntologyNode();
}

uint64_t sub_7F170()
{
  return TerminalOntologyNode.init(name:multicardinal:)();
}

uint64_t sub_7F180()
{
  return dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)();
}

uint64_t sub_7F190()
{
  return CodeGenBase.entity.getter();
}

uint64_t sub_7F1A0()
{
  return UsoIdentifier.init(value:appBundleId:namespace:)();
}

uint64_t sub_7F1B0()
{
  return type metadata accessor for UsoIdentifier();
}

uint64_t sub_7F1C0()
{
  return UsoTaskBuilder.toProtobufUsoGraph()();
}

uint64_t sub_7F1D0()
{
  return type metadata accessor for UsoTaskBuilder();
}

uint64_t sub_7F210()
{
  return TerminalElement.DateTimeValue.duration.getter();
}

uint64_t sub_7F220()
{
  return type metadata accessor for TerminalElement.DateTimeValue();
}

uint64_t sub_7F230()
{
  return type metadata accessor for TerminalElement.Value();
}

uint64_t sub_7F240()
{
  return type metadata accessor for TerminalElement.Period();
}

uint64_t sub_7F250()
{
  return TerminalElement.Duration.period.getter();
}

uint64_t sub_7F260()
{
  return TerminalElement.Duration.duration.getter();
}

uint64_t sub_7F270()
{
  return type metadata accessor for TerminalElement.Duration();
}

uint64_t sub_7F280()
{
  return static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
}

uint64_t sub_7F290()
{
  return dispatch thunk of CodeGenListEntry.entry.getter();
}

uint64_t sub_7F2A0()
{
  return dispatch thunk of CodeGenGlobalArgs.usoListPosition.getter();
}

uint64_t sub_7F2B0()
{
  return UsoBuilderOptions.init(longhandDefinedValues:)();
}

uint64_t sub_7F2C0()
{
  return type metadata accessor for UsoBuilderOptions();
}

uint64_t sub_7F2D0()
{
  return TerminalIntentNode.init(name:value:semanticTags:)();
}

uint64_t sub_7F2E0()
{
  return type metadata accessor for TerminalIntentNode();
}

uint64_t sub_7F2F0()
{
  return UsoEntity_common_App.appIdentifier.getter();
}

uint64_t sub_7F300()
{
  return IntentNodeTraversable.wrappedNonTerminalIntentNode<A>(forOntologyNode:)();
}

uint64_t sub_7F310()
{
  return IntentNodeTraversable.value<A>(forNode:)();
}

uint64_t sub_7F320()
{
  return static NonTerminalIntentNode.rootNode(forDomainNode:inEventTree:)();
}

uint64_t sub_7F330()
{
  return NonTerminalIntentNode.init(name:childNodes:resultIDs:)();
}

uint64_t sub_7F340()
{
  return type metadata accessor for NonTerminalIntentNode();
}

uint64_t sub_7F350()
{
  return type metadata accessor for MitigatorClassification();
}

uint64_t sub_7F360()
{
  return UsoEntity_common_Number.asDouble.getter();
}

uint64_t sub_7F370()
{
  return dispatch thunk of UsoEntity_common_Workout.workoutClass.getter();
}

uint64_t sub_7F380()
{
  return dispatch thunk of UsoEntity_common_Workout.goal.getter();
}

uint64_t sub_7F390()
{
  return static UsoTask_CodegenConverter.convert(task:)();
}

uint64_t sub_7F3A0()
{
  return dispatch thunk of UsoEntity_common_Duration.components.getter();
}

uint64_t sub_7F3B0()
{
  return type metadata accessor for UsoEntity_common_Duration();
}

uint64_t sub_7F3C0()
{
  return dispatch thunk of UsoEntity_common_TimeUnit.definedValue.getter();
}

uint64_t sub_7F3D0()
{
  return type metadata accessor for UsoEntity_common_TimeUnit.DefinedValues();
}

uint64_t sub_7F3E0()
{
  return dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoAssociatedApp(value:)();
}

uint64_t sub_7F3F0()
{
  return static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
}

uint64_t sub_7F400()
{
  return dispatch thunk of UsoEntityBuilder_common_App.name.getter();
}

uint64_t sub_7F410()
{
  return dispatch thunk of UsoEntityBuilder_common_App.setName(value:)();
}

uint64_t sub_7F420()
{
  return UsoEntityBuilder_common_App.init()();
}

uint64_t sub_7F430()
{
  return type metadata accessor for UsoEntityBuilder_common_App();
}

uint64_t sub_7F440()
{
  return type metadata accessor for UsoTask_stop_common_Workout();
}

uint64_t sub_7F470()
{
  return dispatch thunk of UsoEntity_common_Measurement.components.getter();
}

uint64_t sub_7F480()
{
  return dispatch thunk of UsoEntity_common_WorkoutGoal.measurement.getter();
}

uint64_t sub_7F490()
{
  return dispatch thunk of UsoEntity_common_WorkoutGoal.definedValue.getter();
}

uint64_t sub_7F4A0()
{
  return type metadata accessor for UsoEntity_common_WorkoutGoal.DefinedValues();
}

uint64_t sub_7F4B0()
{
  return type metadata accessor for UsoTask_pause_common_Workout();
}

uint64_t sub_7F4C0()
{
  return dispatch thunk of UsoEntity_common_ListPosition.definedValue.getter();
}

uint64_t sub_7F4D0()
{
  return type metadata accessor for UsoEntity_common_ListPosition.DefinedValues();
}

uint64_t sub_7F4E0()
{
  return dispatch thunk of UsoEntity_common_WorkoutClass.instructor.getter();
}

uint64_t sub_7F4F0()
{
  return type metadata accessor for UsoTask_cancel_common_Workout();
}

uint64_t sub_7F500()
{
  return type metadata accessor for UsoTask_create_common_Workout();
}

uint64_t sub_7F510()
{
  return type metadata accessor for UsoTask_noVerb_common_Workout();
}

uint64_t sub_7F520()
{
  return type metadata accessor for UsoTask_resume_common_Workout();
}

uint64_t sub_7F530()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)();
}

uint64_t sub_7F540()
{
  return UsoEntityBuilder_common_Workout.init()();
}

uint64_t sub_7F550()
{
  return type metadata accessor for UsoEntityBuilder_common_Workout();
}

uint64_t sub_7F560()
{
  return type metadata accessor for UsoTask_noVerb_common_HealthLog();
}

uint64_t sub_7F580()
{
  return dispatch thunk of UsoEntity_common_MeasurementUnit.definedValue.getter();
}

uint64_t sub_7F590()
{
  return type metadata accessor for UsoEntity_common_MeasurementUnit.DefinedValues();
}

uint64_t sub_7F5A0()
{
  return dispatch thunk of UsoEntity_common_DurationComponent.unit.getter();
}

uint64_t sub_7F5B0()
{
  return dispatch thunk of UsoEntity_common_DurationComponent.value.getter();
}

uint64_t sub_7F5C0()
{
  return dispatch thunk of UsoEntity_common_WorkoutInstructor.name.getter();
}

uint64_t sub_7F5D0()
{
  return UsoTaskBuilder_create_common_Workout.init()();
}

uint64_t sub_7F5E0()
{
  return type metadata accessor for UsoTaskBuilder_create_common_Workout();
}

uint64_t sub_7F5F0()
{
  return dispatch thunk of UsoEntity_common_MeasurementComponent.unit.getter();
}

uint64_t sub_7F600()
{
  return dispatch thunk of UsoEntity_common_MeasurementComponent.value.getter();
}

uint64_t sub_7F610()
{
  return Scalar.unit.getter();
}

uint64_t sub_7F620()
{
  return Scalar.value.getter();
}

uint64_t sub_7F630()
{
  return type metadata accessor for NLState();
}

uint64_t sub_7F640()
{
  return static UsoTask.endWorkout(_:)();
}

uint64_t sub_7F650()
{
  return static UsoTask.pauseWorkout(_:)();
}

uint64_t sub_7F660()
{
  return static UsoTask.startWorkout(_:goalDefinedValue:goalUnitType:goalValue:areaType:sequenceLabel:appIdentifier:)();
}

uint64_t sub_7F670()
{
  return static UsoTask.cancelWorkout(_:)();
}

uint64_t sub_7F680()
{
  return static UsoTask.resumeWorkout(_:)();
}

uint64_t sub_7F690()
{
  return type metadata accessor for UsoTask();
}

uint64_t sub_7F6A0()
{
  return NLIntent.init(rootNode:score:originalInput:allWordsMatched:primary:usingExplicitInput:intentRank:isNERBasedParse:intentID:nlState:mitigatorClassification:strippedVoiceTrigger:isInvalidVoiceTrigger:isSuggested:metaDomainActions:)();
}

uint64_t sub_7F6B0()
{
  return type metadata accessor for NLIntent();
}

uint64_t sub_7F6C0()
{
  return static DeviceIdiom.== infix(_:_:)();
}

uint64_t sub_7F6D0()
{
  return type metadata accessor for DeviceIdiom();
}

uint64_t sub_7F6E0()
{
  return type metadata accessor for InputOrigin();
}

uint64_t sub_7F6F0()
{
  return dispatch thunk of DialogStringPair.Builder.withSecond(_:)();
}

uint64_t sub_7F700()
{
  return dispatch thunk of DialogStringPair.Builder.build()();
}

uint64_t sub_7F710()
{
  return dispatch thunk of DialogStringPair.Builder.withFirst(_:)();
}

uint64_t sub_7F720()
{
  return DialogStringPair.Builder.init()();
}

uint64_t sub_7F730()
{
  return type metadata accessor for DialogStringPair.Builder();
}

uint64_t sub_7F740()
{
  return type metadata accessor for DialogStringPair();
}

uint64_t sub_7F750()
{
  return CATGlobals.__allocating_init()();
}

uint64_t sub_7F760()
{
  return type metadata accessor for CATGlobals();
}

uint64_t sub_7F770()
{
  return CATWrapper.init(templateDir:options:globals:)();
}

uint64_t sub_7F780()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)();
}

uint64_t sub_7F790()
{
  return CATWrapper.__allocating_init(options:globals:)();
}

uint64_t sub_7F7A0()
{
  return CATWrapper.deinit();
}

uint64_t sub_7F7B0()
{
  return SirikitApp.init(_:)();
}

uint64_t sub_7F7C0()
{
  return type metadata accessor for SirikitApp();
}

uint64_t sub_7F7D0()
{
  return static CATExecutor.execute(bundle:catId:parameters:globals:callback:options:)();
}

uint64_t sub_7F7E0()
{
  return type metadata accessor for CATExecutor();
}

uint64_t sub_7F800()
{
  return type metadata accessor for CATResponse();
}

uint64_t sub_7F810()
{
  return SpeakableString.init(print:speak:)();
}

uint64_t sub_7F820()
{
  return SpeakableString.print.getter();
}

uint64_t sub_7F830()
{
  return type metadata accessor for SpeakableString();
}

uint64_t sub_7F840()
{
  return type metadata accessor for SirikitDeviceState();
}

uint64_t sub_7F850()
{
  return CATType.toDictionary.getter();
}

uint64_t sub_7F860()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_7F870()
{
  return type metadata accessor for CATOption();
}

uint64_t sub_7F880()
{
  return App.__allocating_init(appIdentifier:)();
}

uint64_t sub_7F890()
{
  return App.appIdentifier.getter();
}

BOOL sub_7F8A0()
{
  return App.isFirstParty()();
}

uint64_t sub_7F8B0()
{
  return type metadata accessor for App();
}

uint64_t sub_7F8C0()
{
  return AppDisplayInfo.init(displayName:isFirstParty:)();
}

uint64_t sub_7F8D0()
{
  return type metadata accessor for AppDisplayInfo();
}

uint64_t sub_7F8E0()
{
  return static AppFinder.listApps(intentID:siriAuthorizationRestriction:)();
}

uint64_t sub_7F900()
{
  return HealthApps.app.getter();
}

uint64_t sub_7F910()
{
  return HealthLogName.init(rawValue:)();
}

uint64_t sub_7F920()
{
  return DialogFlow.init(catId:wrapper:parameters:snippets:deviceState:aceService:)();
}

uint64_t sub_7F930()
{
  return getAreaType(from:)();
}

uint64_t sub_7F940()
{
  return currentIdiom(deviceState:)();
}

uint64_t sub_7F950()
{
  return getAppEntity(from:)();
}

uint64_t sub_7F960()
{
  return getWorkoutName(from:fallback:)();
}

uint64_t sub_7F970()
{
  return FlowConfigModel.init(deviceState:aceService:aceServiceAsync:sharedContextService:outputPublisher:flowFinder:networkStatusProvider:)();
}

uint64_t sub_7F990()
{
  return getWorkoutEntity(from:)();
}

BOOL sub_7F9A0(Swift::String a1)
{
  return appBundleIsInstalled(_:)(a1);
}

uint64_t sub_7F9B0()
{
  return vocabularyIdentifier(for:)();
}

uint64_t sub_7F9D0()
{
  return Log.health.unsafeMutableAddressor();
}

uint64_t sub_7F9E0()
{
  return WorkoutReminderAnnouncementFlow.init(flowConfig:deviceResolutionService:)();
}

uint64_t sub_7F9F0()
{
  return type metadata accessor for WorkoutReminderAnnouncementFlow();
}

uint64_t sub_7FA00()
{
  return WorkoutReminderControlsDirectInvocation.init(directInvocation:)();
}

uint64_t sub_7FA10()
{
  return WorkoutReminderAnnouncementDirectInvocation.identifier.unsafeMutableAddressor();
}

uint64_t sub_7FA20()
{
  return VoiceFeedbackAnnouncementFlow.init(data:)();
}

uint64_t sub_7FA30()
{
  return Google_Protobuf_StringValue.value.getter();
}

uint64_t sub_7FA40()
{
  return type metadata accessor for Google_Protobuf_StringValue();
}

uint64_t sub_7FA50()
{
  return DeviceUnit.assistantId.getter();
}

uint64_t sub_7FA60()
{
  return DeviceUnit.name.getter();
}

uint64_t sub_7FA70()
{
  return type metadata accessor for DeviceUnit();
}

uint64_t sub_7FA80()
{
  return static DeviceResolutionService.sharedService.getter();
}

uint64_t sub_7FA90()
{
  return dispatch thunk of DeviceResolutionService.devicesMatching(capabilityDescriptions:completion:)();
}

uint64_t sub_7FAA0()
{
  return type metadata accessor for DeviceResolutionService();
}

uint64_t sub_7FAB0()
{
  return dispatch thunk of static SeymourRoutingCapability.capabilityDescriptionMatchingSupportStatus(_:)();
}

uint64_t sub_7FAC0()
{
  return type metadata accessor for SeymourRoutingCapability();
}

uint64_t sub_7FAD0()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t sub_7FAE0()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_7FAF0()
{
  return OSSignpostID.init(log:)();
}

uint64_t sub_7FB00()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_7FB10()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_7FB20()
{
  return OSSignposter.init(logger:)();
}

uint64_t sub_7FB30()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_7FB40()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_7FB50()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_7FB60()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_7FB70()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_7FB80()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_7FB90()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_7FBA0()
{
  return Logger.health.unsafeMutableAddressor();
}

uint64_t sub_7FBB0()
{
  return Logger.workout.unsafeMutableAddressor();
}

uint64_t sub_7FBC0()
{
  return Logger.wellness.unsafeMutableAddressor();
}

uint64_t sub_7FBD0()
{
  return Logger.logObject.getter();
}

uint64_t sub_7FBE0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_7FBF0()
{
  return Logger.init(_:)();
}

NSDictionary sub_7FC00()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_7FC10()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_7FC20()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t sub_7FC30()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_7FC40()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_7FC50()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_7FC60()
{
  return String.init<A>(describing:)();
}

uint64_t sub_7FC70()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_7FC80()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_7FC90()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_7FCA0()
{
  return String.toSpeakableString.getter();
}

uint64_t sub_7FCB0()
{
  return String.firstLetterCapitalized()()._countAndFlagsBits;
}

uint64_t sub_7FCC0()
{
  return String.hash(into:)();
}

void sub_7FCD0(Swift::String a1)
{
}

Swift::Int sub_7FCE0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_7FCF0()
{
  return Sequence.first(where:)();
}

uint64_t sub_7FD00()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_7FD10()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_7FD20()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_7FD30()
{
  return Array.description.getter();
}

uint64_t sub_7FD40()
{
  return specialized Array._endMutation()();
}

uint64_t sub_7FD50()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_7FD60()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_7FD70()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_7FD80()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_7FD90()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_7FDA0()
{
  return static TaskPriority.background.getter();
}

uint64_t sub_7FDB0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_7FDC0()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_7FDD0()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_7FDE0()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_7FDF0()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_7FE00()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_7FE10()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_7FE20()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_7FE30()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_7FE40()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_7FE50()
{
  return INSpeakableString.toSpeakableString.getter();
}

uint64_t sub_7FE60()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_7FE70()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_7FE80()
{
  return static os_signpost_type_t.event.getter();
}

uint64_t sub_7FE90()
{
  return INStartWorkoutIntent.isOpenEnded.getter();
}

uint64_t sub_7FEA0()
{
  return INStartWorkoutIntent.init(workoutName:goalValue:workoutGoalUnitType:workoutLocationType:isOpenEnded:)();
}

uint64_t sub_7FEB0()
{
  return INStartWorkoutIntent.goalValue.getter();
}

uint64_t sub_7FEC0()
{
  return static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
}

uint64_t sub_7FED0()
{
  return NSArray.makeIterator()();
}

Swift::Int sub_7FEE0(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_7FEF0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_7FF00()
{
  return AceObject.serializeToBase64()().value._countAndFlagsBits;
}

uint64_t sub_7FF10()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_7FF20()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_7FF30()
{
  return Optional.description.getter();
}

uint64_t sub_7FF40()
{
  return type metadata accessor for Optional();
}

uint64_t sub_7FF50()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_7FF60()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_7FF70()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_7FF80()
{
  return StringProtocol.capitalized.getter();
}

uint64_t sub_7FF90()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_7FFA0()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_7FFB0()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_7FFC0()
{
  return StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t sub_7FFD0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_7FFE0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_7FFF0()
{
  return _expectEnd<A>(of:is:)();
}

uint64_t sub_80000()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_80010()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_80020(Swift::Int a1)
{
}

uint64_t sub_80030()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_80040()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_80050()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_80060()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_80070()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_80080()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_80090()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_800A0(Swift::Int a1)
{
}

uint64_t sub_800B0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_800C0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_800D0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_800E0()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_800F0()
{
  return ContiguousArray.init()();
}

uint64_t sub_80100()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_80110()
{
  return _print_unlocked<A, B>(_:_:)();
}

BOOL sub_80120(Swift::Bool isUnique, Swift::Int capacity)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, capacity);
}

uint64_t sub_80130()
{
  return __CocoaDictionary.startIndex.getter();
}

uint64_t sub_80140()
{
  return __CocoaDictionary.key(at:)();
}

uint64_t sub_80160()
{
  return __CocoaDictionary.Index.age.getter();
}

uint64_t sub_80170()
{
  return __CocoaDictionary.Index.key.getter();
}

uint64_t sub_80180()
{
  return __CocoaDictionary.endIndex.getter();
}

uint64_t sub_80190()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_801A0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_801B0()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_801C0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_801D0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_801E0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_801F0()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_80200()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_80230()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_80240()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_80250()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_80260()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_80280()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_80290(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_802A0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_802B0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_802C0()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_802D0()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_802E0()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_802F0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_80300()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_80310()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_80320()
{
  return Error._code.getter();
}

uint64_t sub_80330()
{
  return Error._domain.getter();
}

uint64_t sub_80340()
{
  return Error._userInfo.getter();
}

uint64_t sub_80350()
{
  return Hasher.init(_seed:)();
}

void sub_80360(Swift::UInt a1)
{
}

Swift::Int sub_80370()
{
  return Hasher._finalize()();
}

uint64_t sub_80380()
{
  return Result<>.firstPrint.getter();
}

uint64_t sub_80390()
{
  return type metadata accessor for Result();
}

uint64_t sub_803A0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_803B0()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_803E0()
{
  return _typeName(_:qualified:)();
}

uint64_t AFDeviceIsVictory()
{
  return _AFDeviceIsVictory();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return _swift_dynamicCastUnknownClass();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return _swift_dynamicCastUnknownClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

id objc_msgSend__append_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_append:");
}

id objc_msgSend__append_alt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_append:alt:");
}

id objc_msgSend__translateWord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_translateWord:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_punctuationCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 punctuationCharacterSet];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}