uint64_t MapsSuggestionsEntry.identifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = [v0 uniqueIdentifier];
  v2 = sub_B2F50();

  return v2;
}

id MapsSuggestionsEntry.entityBuilder.getter()
{
  sub_B28E0();
  sub_5BCC();
  uint64_t v1 = sub_B28D0();
  id v2 = [v0 geoMapItem];
  if (!v2) {
    return (id)v1;
  }
  v3 = v2;
  sub_5618(v2, (SEL *)&selRef_name);
  if (v4)
  {
    sub_B28B0();
    swift_bridgeObjectRelease();
  }
  id result = [v3 geoAddress];
  if (result)
  {
    v6 = result;
    id v7 = [result structuredAddress];

    if (v7)
    {
      sub_5618(v7, (SEL *)&selRef_fullThoroughfare);
      if (v8)
      {
        sub_5BB0();
        sub_5BCC();
        sub_B2900();
        sub_5B90();
        swift_bridgeObjectRelease();
        sub_5BE4();
        sub_B28C0();
        swift_release();
      }
      sub_5618(v7, (SEL *)&selRef_locality);
      if (v9)
      {
        sub_5BB0();
        sub_5BCC();
        sub_B2900();
        sub_5B90();
        swift_bridgeObjectRelease();
        sub_5BE4();
        sub_B28A0();
        swift_release();
      }
      sub_5618(v7, (SEL *)&selRef_administrativeArea);
      if (v10)
      {
        sub_5BB0();
        sub_5BCC();
        sub_B2900();
        sub_5B90();
        swift_bridgeObjectRelease();
        sub_5BE4();
        sub_B2890();
        swift_release();
      }
      sub_5618(v7, (SEL *)&selRef_postCode);
      if (v11)
      {
        sub_B2870();
        swift_bridgeObjectRelease();
      }
      sub_5618(v7, (SEL *)&selRef_country);
      if (v12)
      {
        sub_5BB0();
        sub_5BCC();
        sub_B2900();
        sub_5B90();
        swift_bridgeObjectRelease();
        sub_5BE4();
        sub_B2880();
        swift_release();
      }
    }
    else
    {
      id v7 = v3;
    }

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_5250()
{
  return MapsSuggestionsEntry.identifier.getter();
}

id sub_5274@<X0>(void *a1@<X8>)
{
  id result = MapsSuggestionsEntry.entityBuilder.getter();
  *a1 = result;
  return result;
}

uint64_t sub_52A0()
{
  return sub_5B50(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSString sub_52D8@<X0>(void *a1@<X8>)
{
  NSString result = sub_5B18();
  *a1 = result;
  return result;
}

void sub_5300(uint64_t a1@<X8>)
{
  sub_5334();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_533C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

BOOL sub_5368(uint64_t *a1, uint64_t *a2)
{
  return sub_5C8AC(*a1, *a2);
}

Swift::Int sub_5374()
{
  return sub_7F558(*v0);
}

void sub_537C(uint64_t a1)
{
  sub_7F598(a1, *v1);
}

Swift::Int sub_5384()
{
  return sub_80994();
}

uint64_t sub_538C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_6F808();
  *a1 = result;
  return result;
}

uint64_t sub_53B4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_6F810(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_53E4(void *a1, uint64_t *a2)
{
  return sub_6F818(a1, *a2);
}

uint64_t sub_53EC(uint64_t *a1)
{
  return sub_6F844(*a1);
}

uint64_t sub_53F4(uint64_t *a1)
{
  return sub_6F854(*a1);
}

BOOL sub_53FC(int *a1, int *a2)
{
  return sub_5C8B8(*a1, *a2);
}

uint64_t sub_5408@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_543C(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_543C(uint64_t result)
{
  return result;
}

uint64_t sub_5458@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

void *sub_5484@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_5490@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_B2F20();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_54D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_83088(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_5504(uint64_t a1)
{
  uint64_t v2 = sub_57F8(&qword_E6F78, type metadata accessor for Name);
  uint64_t v3 = sub_57F8((unint64_t *)&unk_E6F80, type metadata accessor for Name);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

void sub_55C0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_55CC()
{
  return sub_5B50(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_55FC()
{
  return sub_5958();
}

Swift::Int sub_5604()
{
  return sub_59AC();
}

uint64_t sub_560C()
{
  return sub_58D0();
}

uint64_t sub_5618(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_B2F50();

  return v4;
}

void type metadata accessor for Name(uint64_t a1)
{
}

__n128 initializeWithTake for CalendarTemplatingError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_569C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_56BC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for MapsSuggestionsEntryType(uint64_t a1)
{
}

void type metadata accessor for GEOTransportType(uint64_t a1)
{
}

void sub_5720(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_5768()
{
  return sub_57F8(&qword_E6F58, type metadata accessor for GEOTransportType);
}

uint64_t sub_57B0()
{
  return sub_57F8(&qword_E6F60, type metadata accessor for Name);
}

uint64_t sub_57F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5840()
{
  return sub_57F8(&qword_E6F68, type metadata accessor for Name);
}

uint64_t sub_5888()
{
  return sub_57F8(&qword_E6F70, type metadata accessor for Name);
}

uint64_t sub_58D0()
{
  uint64_t v0 = sub_B2F50();
  uint64_t v2 = v1;
  if (v0 == sub_B2F50() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_B37E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_5958()
{
  sub_B2F50();
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_59AC()
{
  sub_B2F50();
  sub_B38B0();
  sub_B2FF0();
  Swift::Int v0 = sub_B38E0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_5A20(uint64_t a1, id *a2)
{
  char v3 = sub_B2F40();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_5AA0(uint64_t a1, id *a2)
{
  uint64_t result = sub_B2F30();
  *a2 = 0;
  return result;
}

NSString sub_5B18()
{
  sub_B2F50();
  NSString v0 = sub_B2F20();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_5B50(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_B2F50();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_5B90()
{
  return dispatch thunk of UsoEntityBuilder_common_GeographicArea.setName(value:)(v1, v0);
}

uint64_t sub_5BB0()
{
  return type metadata accessor for UsoEntityBuilder_common_GeographicArea(0);
}

uint64_t sub_5BCC()
{
  return swift_allocObject();
}

uint64_t sub_5BE4()
{
  return v0;
}

unint64_t sub_5BF0(char a1)
{
  uint64_t v2 = (void *)0xEE00746E65764574;
  v3._countAndFlagsBits = 0x6E6174726F706D49;
  switch(a1)
  {
    case 1:
      uint64_t v4 = "UpcomingEventSummary";
      goto LABEL_5;
    case 2:
      uint64_t v4 = "CalendarEventSummary";
      goto LABEL_5;
    case 3:
      uint64_t v4 = "TomorrowEventSummary";
LABEL_5:
      uint64_t v2 = (void *)((unint64_t)(v4 - 32) | 0x8000000000000000);
      v3._countAndFlagsBits = 0xD000000000000014;
      break;
    default:
      break;
  }
  v3._object = v2;
  sub_B3020(v3);
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

unint64_t sub_5CD4(char a1)
{
  unint64_t result = 0x6E6174726F706D49;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_5D60(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DAD08;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_5DAC(unsigned __int8 *a1, char *a2)
{
  return sub_5E03C(*a1, *a2);
}

Swift::Int sub_5DB8()
{
  return sub_7F1C4(*v0);
}

uint64_t sub_5DC0(uint64_t a1)
{
  return sub_7FB3C(a1, *v1);
}

Swift::Int sub_5DC8(uint64_t a1)
{
  return sub_80770(a1, *v1);
}

uint64_t sub_5DD0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_5D60(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_5E00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_5CD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_5E2C()
{
  return sub_5BF0(*v0);
}

unsigned char *initializeBufferWithCopyOfBuffer for CalendarDialogs(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CalendarDialogs(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for CalendarDialogs(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5F94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_5FBC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_5FC8(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CalendarDialogs()
{
  return &type metadata for CalendarDialogs;
}

unint64_t sub_5FE4()
{
  unint64_t result = qword_E7350;
  if (!qword_E7350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7350);
  }
  return result;
}

uint64_t sub_6030()
{
  return 0x2E72656874616577;
}

uint64_t sub_6054()
{
  return 0;
}

uint64_t sub_605C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  *(void *)(v8 + 16) = 0;
  uint64_t v17 = v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_currentCondition;
  sub_B2C40();
  sub_79FC();
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, a1);
  *(void *)(v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_currentTemperature) = a2;
  *(void *)(v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_highTemperature) = a3;
  *(void *)(v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_lowTemperature) = a4;
  uint64_t v19 = v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_startTime;
  sub_B17F0();
  sub_79FC();
  (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v19, a5);
  *(unsigned char *)(v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowHighTemperature) = a6;
  *(unsigned char *)(v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowLowTemperature) = a7;
  *(unsigned char *)(v8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowNextDayWeather) = a8;
  return v8;
}

void sub_6188(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1 == 0xD000000000000010 && (sub_7908(), v12) || (sub_78A4() & 1) != 0)
  {
    uint64_t v7 = v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_currentCondition;
    uint64_t v8 = sub_B2C40();
    *(void *)(a3 + 24) = v8;
    uint64_t v9 = sub_7590((uint64_t *)a3);
    uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
    v10(v9, v7, v8);
    return;
  }
  if (a1 != 0xD000000000000012 || (sub_7908(), !v12))
  {
    if ((sub_78A4() & 1) == 0)
    {
      BOOL v12 = a1 == 0x706D655468676968 && a2 == 0xEF65727574617265;
      if (v12 || (sub_78A4() & 1) != 0)
      {
        uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_highTemperature);
        if (v11) {
          goto LABEL_11;
        }
LABEL_20:
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        return;
      }
      if (a1 == 0xD000000000000019 && (sub_7908(), v12) || (sub_78A4() & 1) != 0)
      {
        uint64_t v13 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowHighTemperature;
      }
      else if (a1 == 0xD000000000000018 && (sub_7908(), v12) || (sub_78A4() & 1) != 0)
      {
        uint64_t v13 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowLowTemperature;
      }
      else
      {
        if (a1 != 0xD000000000000018 || (sub_7908(), !v12))
        {
          if ((sub_78A4() & 1) == 0) {
            goto LABEL_20;
          }
        }
        uint64_t v13 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowNextDayWeather;
      }
      char v14 = *(unsigned char *)(v3 + v13);
      *(void *)(a3 + 24) = &type metadata for Bool;
      *(unsigned char *)a3 = v14;
      return;
    }
  }
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_currentTemperature);
LABEL_11:
  *(void *)(a3 + 24) = sub_B2AC0();
  *(void *)a3 = v11;

  swift_retain();
}

uint64_t sub_6408(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DAD88;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

uint64_t sub_6458()
{
  return 8;
}

uint64_t sub_6460()
{
  return 0;
}

void sub_646C(char a1)
{
  switch(a1)
  {
    case 1:
    case 5:
      sub_7A1C();
      break;
    case 2:
      sub_78E4();
      break;
    case 3:
      sub_78C0();
      break;
    case 4:
      sub_7960();
      break;
    default:
      return;
  }
}

void sub_6524(char a1)
{
  switch(a1)
  {
    case 1:
    case 5:
      sub_7A1C();
      break;
    case 2:
      sub_78E4();
      break;
    case 3:
      sub_78C0();
      break;
    case 4:
      sub_7960();
      break;
    default:
      return;
  }
}

uint64_t sub_65DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_5D2D8(*a1, *a2);
}

Swift::Int sub_65E8()
{
  return sub_7F1DC(*v0);
}

uint64_t sub_65F0(uint64_t a1)
{
  return sub_7FC00(a1, *v1);
}

Swift::Int sub_65F8(uint64_t a1)
{
  return sub_80748(a1, *v1);
}

uint64_t sub_6600@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_6408(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_6630(void *a1@<X8>)
{
  sub_646C(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void sub_665C()
{
  sub_6524(*v0);
}

uint64_t sub_6664@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_6454();
  *a1 = result;
  return result;
}

void sub_668C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_6698(uint64_t a1)
{
  unint64_t v2 = sub_74AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_66D4(uint64_t a1)
{
  unint64_t v2 = sub_74AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_6710()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_currentCondition;
  sub_B2C40();
  sub_79FC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_startTime;
  sub_B17F0();
  sub_79FC();
  (*(void (**)(uint64_t))(v4 + 8))(v3);
  return v0;
}

uint64_t sub_67E0()
{
  sub_6710();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_6838()
{
  return type metadata accessor for WeatherCurrent();
}

uint64_t type metadata accessor for WeatherCurrent()
{
  uint64_t result = qword_E7380;
  if (!qword_E7380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_6888()
{
  uint64_t result = sub_B2C40();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_B17F0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_697C(void *a1)
{
  uint64_t v3 = sub_7424(&qword_E74C0);
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin();
  sub_7A0C();
  uint64_t v8 = v7 - v6;
  sub_7468(a1, a1[3]);
  sub_74AC();
  sub_B3900();
  sub_B2C40();
  sub_7548(&qword_E74C8, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  sub_79D0();
  if (!v1)
  {
    sub_B2AC0();
    sub_7548(&qword_E74D0, (void (*)(uint64_t))&type metadata accessor for DialogTemperature);
    sub_B3790();
    sub_79A0(2);
    sub_79A0(3);
    sub_B17F0();
    sub_7548(&qword_E74D8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_79D0();
    sub_7918(5);
    sub_7918(6);
    sub_7918(7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_6C34(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_6C84(a1);
  return v2;
}

uint64_t sub_6C84(void *a1)
{
  uint64_t v3 = sub_B17F0();
  sub_7870();
  uint64_t v17 = v4;
  __chkstk_darwin();
  sub_7A0C();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_B2C40();
  sub_7870();
  uint64_t v18 = v9;
  __chkstk_darwin();
  sub_7A0C();
  uint64_t v19 = v11 - v10;
  sub_7424(&qword_E7498);
  sub_7870();
  __chkstk_darwin();
  sub_7A0C();
  uint64_t v21 = v1;
  *(void *)(v1 + 16) = 0;
  sub_7468(a1, a1[3]);
  sub_74AC();
  sub_B38F0();
  if (v20)
  {
    uint64_t v13 = v1;

    type metadata accessor for WeatherCurrent();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v22) = 0;
    sub_7548(&qword_E74A8, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    sub_B3710();
    uint64_t v13 = v1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_currentCondition, v19, v8);
    sub_B2AC0();
    sub_7548(&qword_E74B0, (void (*)(uint64_t))&type metadata accessor for DialogTemperature);
    sub_B3710();
    *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_currentTemperature) = v22;
    sub_797C(2);
    sub_B36C0();
    *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_highTemperature) = v22;
    sub_797C(3);
    sub_B36C0();
    *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_lowTemperature) = v22;
    sub_7548(&qword_E74B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_B3710();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_startTime, v7, v3);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowHighTemperature) = sub_793C(5) & 1;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowLowTemperature) = sub_793C(6) & 1;
    char v14 = sub_793C(7);
    uint64_t v15 = sub_788C();
    v16(v15);
    *(unsigned char *)(v21 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14WeatherCurrent_shouldShowNextDayWeather) = v14 & 1;
  }
  sub_74F8((uint64_t)a1);
  return v13;
}

void *sub_7230()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = v2;
  return v2;
}

void sub_7278(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = a1;
}

uint64_t (*sub_72C4())()
{
  return j__swift_endAccess;
}

void sub_7320(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_7344@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_6C34(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_7370(void *a1)
{
  return sub_697C(a1);
}

uint64_t sub_7394()
{
  return sub_7548(&qword_E7488, (void (*)(uint64_t))type metadata accessor for WeatherCurrent);
}

uint64_t sub_73DC()
{
  return sub_7548(&qword_E7490, (void (*)(uint64_t))type metadata accessor for WeatherCurrent);
}

uint64_t sub_7424(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *sub_7468(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_74AC()
{
  unint64_t result = qword_E74A0;
  if (!qword_E74A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E74A0);
  }
  return result;
}

uint64_t sub_74F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_7548(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_7590(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t getEnumTagSinglePayload for WeatherCurrent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for WeatherCurrent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7748);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherCurrent.CodingKeys()
{
  return &type metadata for WeatherCurrent.CodingKeys;
}

unint64_t sub_7784()
{
  unint64_t result = qword_E74E0;
  if (!qword_E74E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E74E0);
  }
  return result;
}

unint64_t sub_77D4()
{
  unint64_t result = qword_E74E8;
  if (!qword_E74E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E74E8);
  }
  return result;
}

unint64_t sub_7824()
{
  unint64_t result = qword_E74F0;
  if (!qword_E74F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_E74F0);
  }
  return result;
}

uint64_t sub_788C()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_78A4()
{
  return sub_B37E0();
}

uint64_t sub_78C0()
{
  return 0x65706D6554776F6CLL;
}

uint64_t sub_78E4()
{
  return 0x706D655468676968;
}

uint64_t sub_7918@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_B3760();
}

uint64_t sub_793C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_B36E0();
}

uint64_t sub_7960()
{
  return 0x6D69547472617473;
}

uint64_t sub_797C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v2 - 81) = a1;
  return v1;
}

uint64_t sub_79A0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 73) = a1;
  return sub_B3740();
}

uint64_t sub_79D0()
{
  return sub_B3790();
}

uint64_t sub_7A28(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 2;
  }
  BOOL v4 = a1 == 1702195828 && a2 == 0xE400000000000000;
  if (v4 || (sub_B37E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1 == 0x65736C6166 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_B37E0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return 2;
    }
  }
  return 1;
}

uint64_t sub_7AF8(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 24) = a2;
  int v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  void *v3 = v2;
  v3[1] = sub_7BC8;
  return sub_E7C8();
}

uint64_t sub_7BC8()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_7CB0()
{
  sub_7FDC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_7D3C;
  return sub_F26C(3);
}

uint64_t sub_7D3C()
{
  sub_7FDC();
  sub_7FC4();
  *(void *)(v2 + 24) = v0;
  *(void *)(v2 + 32) = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_7E14, 0, 0);
}

uint64_t sub_7E14()
{
  sub_7FDC();
  char v1 = sub_7A28(v0[3], v0[4]);
  char v2 = sub_7E78(v1);
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v4 = v2 & 1;
  return v3(v4);
}

uint64_t sub_7E78(char a1)
{
  if (!a1)
  {
    char v3 = 1;
LABEL_8:
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
  char v2 = sub_B37E0();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (a1 == 2) {
      char v3 = 1;
    }
    else {
      char v3 = sub_B37E0();
    }
    goto LABEL_8;
  }
  char v3 = 1;
  return v3 & 1;
}

uint64_t sub_7F50(char a1)
{
  if (!a1) {
    return 1702195796;
  }
  if (a1 == 1) {
    return 0x65736C6146;
  }
  return 0x7465736E75;
}

uint64_t sub_7F98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_7F50(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_7FE8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_7FF8(uint64_t a1, char a2)
{
}

Swift::Int sub_8020(char a1)
{
  return sub_B38E0();
}

BOOL sub_8068(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_7FE8(*a1, *a2);
}

Swift::Int sub_8074()
{
  return sub_8020(*v0);
}

void sub_807C(uint64_t a1)
{
  sub_7FF8(a1, *v1);
}

Swift::Int sub_8084()
{
  Swift::UInt v1 = *v0;
  sub_B38B0();
  sub_B38C0(v1);
  return sub_B38E0();
}

uint64_t sub_80C8()
{
  return 1;
}

uint64_t sub_80D0()
{
  return sub_B1C80();
}

uint64_t sub_8160()
{
  sub_7FDC();
  v1[49] = v2;
  v1[50] = v0;
  sub_7424(&qword_E76E0);
  v1[51] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_81EC()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_state;
  v0[52] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_state;
  if (*(unsigned char *)(v1 + v2))
  {
    sub_956C(v0[49]);
    swift_task_dealloc();
    sub_ABD0();
  }
  else
  {
    v0[53] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_logger;
    sub_B34C0(24);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_currentFlowSpec);
    v0[54] = v4;
    unint64_t v5 = (*(void *)v4 + 240) & 0xFFFFFFFFFFFFLL | 0xE1E7000000000000;
    v0[55] = *(void *)(*(void *)v4 + 240);
    v0[56] = v5;
    sub_AC3C();
    v6();
    uint64_t v7 = v0[5];
    uint64_t v8 = v0[6];
    sub_7468(v0 + 2, v7);
    v19._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    sub_B3020(v19);
    swift_bridgeObjectRelease();
    sub_74F8((uint64_t)(v0 + 2));
    sub_7A1C();
    v20._countAndFlagsBits = 0xD000000000000015;
    sub_B3020(v20);
    sub_ABC4();
    sub_AB5C();
    sub_8C308(v9, v10, v11, v12, v13, v14);
    swift_bridgeObjectRelease();
    uint64_t v17 = (uint64_t (*)(void))(*(void *)(*(void *)v4 + 280) + **(int **)(*(void *)v4 + 280));
    uint64_t v15 = (void *)swift_task_alloc();
    v0[57] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_8488;
    uint64_t v3 = v17;
  }
  return v3();
}

uint64_t sub_8488()
{
  sub_7FDC();
  sub_7FC4();
  *(void *)(v1 + 464) = v0;
  *(_WORD *)(v1 + 488) = v2;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_8560()
{
  __int16 v1 = *(_WORD *)(v0 + 488);
  if ((v1 & 0x100) != 0)
  {
    Swift::String v19 = *(void **)(v0 + 464);
    (*(void (**)(void))(v0 + 440))();
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 88);
    sub_7468((void *)(v0 + 56), v20);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    sub_A9B0(v19, v1, 1);
    v49._countAndFlagsBits = v22(v20, v21);
    sub_B3020(v49);
    swift_bridgeObjectRelease();
    sub_74F8(v0 + 56);
    sub_ABF8();
    sub_B34C0(26);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v50._countAndFlagsBits = sub_B3860();
    sub_B3020(v50);
    swift_bridgeObjectRelease();
    v51._countAndFlagsBits = 46;
    v51._object = (void *)0xE100000000000000;
    sub_B3020(v51);
    swift_bridgeObjectRetain();
    v52._countAndFlagsBits = 0xD000000000000017;
    v52._object = (void *)0x80000000000B4D30;
    sub_B3020(v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_AB5C();
    sub_8C2F0(v23, v24, v25, v26, v27, v28);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 368) = v19;
    swift_errorRetain();
    sub_7424(&qword_E7F40);
    int v29 = swift_dynamicCast();
    __int16 v30 = *(_WORD *)(v0 + 488);
    v31 = *(void **)(v0 + 464);
    if (v29)
    {
      uint64_t v32 = *(void *)(v0 + 392);
    }
    else
    {
      v33 = *(void (**)(void))(v0 + 440);
      uint64_t v45 = *(void *)(v0 + 392);
      v34 = sub_7468((void *)(*(void *)(v0 + 400)+ OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_siriKitEventSender), *(void *)(*(void *)(v0 + 400)+ OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_siriKitEventSender+ 24));
      v33();
      swift_getErrorValue();
      uint64_t v35 = sub_B3860();
      uint64_t v37 = v36;
      uint64_t v38 = *v34;
      uint64_t v39 = *(void *)(v0 + 280);
      uint64_t v40 = *(void *)(v0 + 288);
      v41 = sub_7468((void *)(v0 + 256), v39);
      sub_A2368((uint64_t)v41, 0x3Bu, v35, v37, v38, v39, v40);
      swift_bridgeObjectRelease();
      sub_74F8(v0 + 256);
      uint64_t v32 = v45;
    }
    sub_956C(v32);
    sub_A898(v31, v30, 1);
    sub_A898(v31, v30, 1);
    swift_task_dealloc();
    sub_ABD0();
    return v42();
  }
  else
  {
    __int16 v2 = *(void **)(v0 + 464);
    v44 = *(void (**)(void))(v0 + 440);
    uint64_t v3 = *(void *)(v0 + 432);
    uint64_t v43 = *(void *)(v0 + 400);
    v44();
    uint64_t v5 = *(void *)(v0 + 240);
    uint64_t v4 = *(void *)(v0 + 248);
    sub_7468((void *)(v0 + 216), v5);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    char v7 = v1 & 1;
    sub_A9C0(v2, v7);
    v47._countAndFlagsBits = v6(v5, v4);
    sub_B3020(v47);
    swift_bridgeObjectRelease();
    sub_74F8(v0 + 216);
    sub_ABF8();
    swift_bridgeObjectRetain();
    sub_7A1C();
    sub_B3020(v48);
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_AB5C();
    sub_8C308(v8, v9, v10, v11, v12, v13);
    swift_bridgeObjectRelease();
    sub_7468((void *)(v43 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_outputPublisher), *(void *)(v43 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_outputPublisher + 24));
    uint64_t v14 = ((uint64_t (*)(void))v44)();
    (*(void (**)(uint64_t))(*(void *)v3 + 264))(v14);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_8A90;
    uint64_t v16 = *(void *)(v0 + 464);
    uint64_t v17 = *(void *)(v0 + 408);
    return sub_938F4(v16, v7, v0 + 176, v17);
  }
}

uint64_t sub_8A90()
{
  sub_AC48();
  char v2 = v1;
  uint64_t v4 = v3;
  sub_7FC4();
  uint64_t v6 = v5 + 176;
  uint64_t v8 = *(void *)(v7 + 408);
  uint64_t v9 = *v0;
  sub_AB94();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  sub_A9CC(v4, v2 & 1);
  sub_A9D8(v8);
  sub_74F8(v6);
  sub_AC10();
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_8B9C()
{
  __int16 v1 = *(_WORD *)(v0 + 488);
  if (v1)
  {
    uint64_t v16 = *(void **)(v0 + 464);
    sub_A9B0(v16, *(_WORD *)(v0 + 488), 0);
    swift_retain();
    sub_B1F50();
    swift_release();
    sub_A898(v16, v1, 0);
    sub_A898(v16, v1, 0);
    sub_A8A8(v16, 1);
    swift_task_dealloc();
    sub_ABD0();
  }
  else
  {
    char v2 = *(void (**)(void))(v0 + 440);
    v2();
    sub_7468((void *)(v0 + 136), *(void *)(v0 + 160));
    uint64_t v3 = sub_ABA4();
    v20._countAndFlagsBits = v4(v3);
    sub_B3020(v20);
    swift_bridgeObjectRelease();
    sub_74F8(v0 + 136);
    sub_ABF8();
    swift_bridgeObjectRetain();
    sub_7A1C();
    v21._countAndFlagsBits = 0xD00000000000001ALL;
    sub_B3020(v21);
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_AB5C();
    sub_8C308(v5, v6, v7, v8, v9, v10);
    uint64_t v11 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v2)(v11);
    sub_7424(&qword_E76E8);
    if (swift_dynamicCast())
    {
      uint64_t v12 = *(unsigned __int8 *)(v0 + 491);
      swift_beginAccess();
      sub_37B88(0, v12);
      swift_endAccess();
    }
    uint64_t v13 = *(int **)(**(void **)(v0 + 432) + 304);
    uint64_t v18 = (uint64_t (*)(void))((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_8ED8;
    uint64_t v15 = v18;
  }
  return v15();
}

uint64_t sub_8ED8()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_8FA0()
{
  sub_AC48();
  uint64_t v1 = *(void **)(v0 + 464);
  uint64_t v2 = *(void *)(v0 + 392);
  char v3 = *(unsigned char *)(v0 + 488);
  *(unsigned char *)(*(void *)(v0 + 400) + *(void *)(v0 + 416)) = 1;
  sub_956C(v2);
  sub_A898(v1, v3, 0);
  sub_A898(v1, v3, 0);
  swift_task_dealloc();
  sub_ABD0();
  return v4();
}

uint64_t sub_903C(uint64_t a1)
{
  void (*v6)(uint64_t *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;

  uint64_t v2 = sub_7424(&qword_E76F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_E6E20 != -1) {
    swift_once();
  }
  sub_9532C();
  uint64_t v5 = sub_7468((void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_siriKitEventSender), *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_siriKitEventSender + 24));
  uint64_t v6 = *(void (**)(uint64_t *__return_ptr))(**(void **)(a1
                                                                  + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_currentFlowSpec)
                                                    + 240);
  v6(&v22);
  uint64_t v7 = *v5;
  uint64_t v8 = v24;
  uint64_t v9 = v25;
  unint64_t v10 = sub_7468(&v22, v24);
  sub_A2368((uint64_t)v10, 1u, 0, 0, v7, v8, v9);
  uint64_t v11 = sub_74F8((uint64_t)&v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t))v6)(&v22, v11);
  sub_7424(&qword_E76E8);
  if (swift_dynamicCast())
  {
    uint64_t v12 = v20;
    swift_beginAccess();
    sub_37B88(0, v12);
    swift_endAccess();
  }
  uint64_t v13 = sub_B3160();
  sub_AA40((uint64_t)v4, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  swift_retain();
  sub_98660();
  uint64_t v15 = swift_release();
  *(unsigned char *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_state) = 1;
  Swift::String v20 = 91;
  Swift::String v21 = 0xE100000000000000;
  ((void (*)(uint64_t *__return_ptr, uint64_t))v6)(&v22, v15);
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  sub_7468(&v22, v24);
  v26._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  sub_B3020(v26);
  swift_bridgeObjectRelease();
  sub_74F8((uint64_t)&v22);
  v27._countAndFlagsBits = 8285;
  v27._object = (void *)0xE200000000000000;
  sub_B3020(v27);
  uint64_t v22 = v20;
  uint64_t v23 = v21;
  swift_bridgeObjectRetain();
  v28._object = (void *)0x80000000000B4D50;
  v28._countAndFlagsBits = 0xD00000000000001ALL;
  sub_B3020(v28);
  swift_bridgeObjectRelease();
  sub_8C308(v22, v23, 0xD00000000000002FLL, 0x80000000000B4C90, 0x2865747563657865, 0xE900000000000029);
  return swift_bridgeObjectRelease();
}

uint64_t sub_9384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_93A4, 0, 0);
}

uint64_t sub_93A4()
{
  sub_AC48();
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 16)
                                                   + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_currentFlowSpec)
                                     + 304)
                         + **(int **)(**(void **)(*(void *)(v0 + 16)
                                                  + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_currentFlowSpec)
                                    + 304));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_94AC;
  return v3();
}

uint64_t sub_94AC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

uint64_t sub_956C@<X0>(uint64_t x8_0@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v58 = x8_0;
  uint64_t v3 = sub_9D54();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v60 = 91;
    unint64_t v61 = 0xE100000000000000;
    sub_AC3C();
    v5();
    uint64_t v6 = v65;
    uint64_t v7 = v66;
    sub_7468(&v63, v65);
    v71._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    sub_B3020(v71);
    swift_bridgeObjectRelease();
    sub_74F8((uint64_t)&v63);
    sub_ABF8();
    uint64_t v8 = v60;
    unint64_t v9 = v61;
    *(void *)&long long v63 = 0;
    *((void *)&v63 + 1) = 0xE000000000000000;
    sub_B34C0(18);
    swift_bridgeObjectRelease();
    uint64_t v60 = 0xD000000000000010;
    unint64_t v61 = 0x80000000000B4CF0;
    sub_AC3C();
    v10();
    sub_7468(&v63, v65);
    uint64_t v11 = sub_ABA4();
    v72._countAndFlagsBits = v12(v11);
    sub_B3020(v72);
    swift_bridgeObjectRelease();
    sub_74F8((uint64_t)&v63);
    uint64_t v13 = v60;
    uint64_t v14 = (void *)v61;
    *(void *)&long long v63 = v8;
    *((void *)&v63 + 1) = v9;
    swift_bridgeObjectRetain();
    v73._countAndFlagsBits = v13;
    v73._object = v14;
    sub_B3020(v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v15 = *((void *)&v63 + 1);
    sub_ABC4();
    sub_8C320(v16, v15, v17, v18, 0xD000000000000023, 0x80000000000B4CC0);
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_allFlowSpecs);
    sub_A8B4(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_aceService, (uint64_t)&v63);
    Swift::String v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_specExecutionStatus);
    swift_beginAccess();
    uint64_t v21 = *v20;
    sub_A8B4(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_templatingProvider, (uint64_t)&v60);
    sub_A8B4(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_outputPublisher, (uint64_t)v59);
    uint64_t v22 = qword_E6BA8;
    swift_retain();
    uint64_t v57 = v19;
    swift_bridgeObjectRetain();
    uint64_t v56 = v21;
    swift_bridgeObjectRetain();
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v23 = qword_F4E78;
    type metadata accessor for DBSiriKitEventSender();
    swift_retain();
    uint64_t inited = swift_initStaticObject();
    type metadata accessor for OfflineStateProvider();
    uint64_t v25 = swift_allocObject();
    sub_A918((uint64_t)&v60, v62);
    sub_AB78();
    __chkstk_darwin();
    uint64_t v27 = (uint64_t *)((char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v28 + 16))(v27);
    sub_A918((uint64_t)v59, v59[3]);
    sub_AB78();
    __chkstk_darwin();
    __int16 v30 = (uint64_t *)((char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v31 + 16))(v30);
    uint64_t v32 = sub_83E74(v4, v57, &v63, v23, v56, *v27, *v30, inited, v25);
    sub_74F8((uint64_t)v59);
    sub_74F8((uint64_t)&v60);
    *(void *)&long long v63 = v32;
    type metadata accessor for DailyBriefingFlow();
    sub_A968(&qword_E76D8, (void (*)(uint64_t))type metadata accessor for DailyBriefingFlow);
    sub_AC1C();
    swift_release();
  }
  else
  {
    uint64_t v60 = 91;
    unint64_t v61 = 0xE100000000000000;
    uint64_t v33 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_currentFlowSpec);
    sub_AC3C();
    v34();
    uint64_t v35 = v65;
    uint64_t v36 = v66;
    sub_7468(&v63, v65);
    v74._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    sub_B3020(v74);
    swift_bridgeObjectRelease();
    sub_74F8((uint64_t)&v63);
    sub_ABF8();
    *(void *)&long long v63 = 91;
    *((void *)&v63 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_7A1C();
    sub_B3020(v75);
    swift_bridgeObjectRelease();
    unint64_t v37 = *((void *)&v63 + 1);
    sub_ABC4();
    sub_8C320(v38, v37, v39, v40, 0xD000000000000023, 0x80000000000B4CC0);
    swift_bridgeObjectRelease();
    v41 = (uint64_t *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_specExecutionStatus);
    swift_beginAccess();
    uint64_t v42 = *v41;
    *(void *)&long long v63 = v42;
    swift_bridgeObjectRetain_n();
    unint64_t v43 = swift_bridgeObjectRetain();
    sub_809D0(v43, v42, (uint64_t *)&v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v63;
    uint64_t v45 = *(void *)(v33 + 88);
    uint64_t v46 = *(void *)(v33 + 96);
    char v47 = *(unsigned char *)(v33 + 104);
    sub_A8B4(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_aceService, (uint64_t)&v65);
    sub_A8B4(v33 + 112, (uint64_t)v67);
    if (qword_E6C00 != -1) {
      swift_once();
    }
    uint64_t v48 = qword_F4F40;
    v67[8] = type metadata accessor for AppDetecter();
    v67[9] = &off_DD2C8;
    v67[5] = v48;
    uint64_t v49 = *(void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_dialogService);
    uint64_t v50 = *(void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_knowledgeStore);
    sub_A8B4(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_templatingProvider, (uint64_t)v68);
    uint64_t v51 = qword_E6C38;
    swift_retain();
    swift_retain();
    swift_retain();
    if (v51 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_F5048;
    v68[8] = type metadata accessor for AMSSearchService();
    v68[9] = &off_DD738;
    v68[5] = v52;
    sub_A8B4(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_outputPublisher, (uint64_t)&v69);
    sub_A8B4(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_offlineStateProvider, (uint64_t)&v70);
    *(void *)&long long v63 = v45;
    *((void *)&v63 + 1) = v46;
    char v64 = v47;
    v67[10] = v49;
    v67[11] = v50;
    type metadata accessor for DBSiriKitEventSender();
    swift_retain();
    uint64_t v53 = swift_initStaticObject();
    type metadata accessor for OfflineFlow();
    uint64_t v54 = swift_allocObject();
    *(void *)&long long v63 = sub_83CD8(v44, &v63, v53, v54);
    sub_A968(&qword_E76D0, (void (*)(uint64_t))type metadata accessor for OfflineFlow);
    sub_AC1C();
  }
  return swift_release();
}

uint64_t sub_9D54()
{
  uint64_t v1 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_allFlowSpecs;
  swift_retain();
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_9FF4(v2, v0);
  char v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v7 = 0;
  if (v5) {
    return v7;
  }
  unint64_t v8 = *(void *)(v0 + v1);
  if (v8 >> 62) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
  while (__OFSUB__(v9, 1))
  {
    __break(1u);
LABEL_38:
    sub_ABDC();
    uint64_t result = sub_B3620();
    if (result <= v3) {
      goto LABEL_46;
    }
    int64_t v11 = result;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_B3620();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_9:
    if (v10 <= v3) {
      goto LABEL_41;
    }
    if (v3 < -1) {
      goto LABEL_42;
    }
    if (v1)
    {
      sub_ABDC();
      uint64_t v12 = sub_B3620();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8));
    }
    if (v12 < v11) {
      goto LABEL_43;
    }
    if (v11 < 0) {
      goto LABEL_44;
    }
    ++v3;
    if ((v0 & 0xC000000000000001) != 0 && v3 != v11)
    {
      if (v3 >= (unint64_t)v11) {
        goto LABEL_45;
      }
      type metadata accessor for BaseFlowSpec();
      Swift::Int v13 = v3;
      do
      {
        Swift::Int v14 = v13 + 1;
        sub_B34E0(v13);
        Swift::Int v13 = v14;
      }
      while (v11 != v14);
    }
    if (v1)
    {
      sub_ABDC();
      sub_B3630();
      uint64_t v1 = v15;
      uint64_t v3 = v16;
      unint64_t v18 = v17;
      swift_bridgeObjectRelease_n();
      int64_t v11 = v18 >> 1;
    }
    else
    {
      uint64_t v1 = (v0 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    if (v3 == v11)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    swift_unknownObjectRetain();
    while (v3 < v11)
    {
      uint64_t v7 = *(void *)(v1 + 8 * v3);
      swift_retain();
      uint64_t v19 = (void *)sub_8E410();
      if (BYTE1(v20) == 255 || (unint64_t v0 = v20, sub_A880(v19, v20), (v0 & 0x100) == 0))
      {
        swift_unknownObjectRelease_n();
        return v7;
      }
      ++v3;
      swift_release();
      if (v11 == v3)
      {
        swift_unknownObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_B3620();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v3 >= v9 - 1) {
    return 0;
  }
  unint64_t v0 = *(void *)(v0 + v1);
  uint64_t v1 = v0 >> 62;
  if (v0 >> 62) {
    goto LABEL_38;
  }
  uint64_t v10 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8));
  if (v10 > v3)
  {
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v11 = v10;
    goto LABEL_9;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_9FF4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_currentFlowSpec;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = sub_B34F0();
        uint64_t v8 = *(void *)(a2 + v6);
        swift_unknownObjectRelease();
        if (v7 == v8) {
          goto LABEL_11;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == *(void *)(a2 + v6))
      {
LABEL_11:
        swift_release();
        return v5;
      }
      uint64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      ++v5;
      if (v9 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_B3620();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  swift_release();
  return 0;
}

uint64_t sub_A10C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_aceService);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_templatingProvider);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_outputPublisher);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_siriKitEventSender);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_offlineStateProvider);
  return v0;
}

uint64_t sub_A210()
{
  sub_A10C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_A268()
{
  return type metadata accessor for DailyBriefingFlow();
}

uint64_t type metadata accessor for DailyBriefingFlow()
{
  uint64_t result = qword_E7540;
  if (!qword_E7540) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A2B8()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DailyBriefingFlow.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DailyBriefingFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA4ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_A514(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DailyBriefingFlow.State()
{
  return &type metadata for DailyBriefingFlow.State;
}

unint64_t sub_A534()
{
  unint64_t result = qword_E76B8[0];
  if (!qword_E76B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_E76B8);
  }
  return result;
}

uint64_t sub_A580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_A630;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_A630()
{
  sub_7FDC();
  uint64_t v2 = v1;
  sub_7FC4();
  uint64_t v3 = *v0;
  sub_AB94();
  *unsigned int v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_A6FC()
{
  return sub_80D0();
}

uint64_t sub_A720()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_A7BC;
  return sub_8160();
}

uint64_t sub_A7BC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

void sub_A880(void *a1, __int16 a2)
{
  if (HIBYTE(a2) != 255) {
    sub_A898(a1, a2, HIBYTE(a2) & 1);
  }
}

void sub_A898(void *a1, char a2, char a3)
{
  if (a3) {
    swift_errorRelease();
  }
  else {
    sub_A8A8(a1, a2 & 1);
  }
}

void sub_A8A8(void *a1, char a2)
{
  if (a2) {
    swift_release();
  }
  else {
}
  }

uint64_t sub_A8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_A918(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_A968(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_A9B0(void *a1, char a2, char a3)
{
  if (a3) {
    return (id)swift_errorRetain();
  }
  else {
    return sub_A9C0(a1, a2 & 1);
  }
}

id sub_A9C0(void *a1, char a2)
{
  if (a2) {
    return (id)swift_retain();
  }
  else {
    return a1;
  }
}

uint64_t sub_A9CC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_A9D8(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E76E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_AA38()
{
  return sub_903C(v0);
}

uint64_t sub_AA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_AA68()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_AAA8()
{
  sub_AC48();
  uint64_t v3 = v2;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_AB58;
  return sub_9384(v3, v4, v5, v6);
}

uint64_t sub_ABA4()
{
  return v0;
}

uint64_t sub_ABD0()
{
  return v0 + 8;
}

uint64_t sub_ABDC()
{
  return swift_bridgeObjectRetain();
}

void sub_ABF8()
{
  v1._countAndFlagsBits = 8285;
  v1._object = (void *)0xE200000000000000;
  sub_B3020(v1);
}

uint64_t sub_AC1C()
{
  return sub_B1F90();
}

double sub_AC54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_ACF8(a3, (uint64_t)&v10);
  if (v11)
  {
    sub_ADC0(&v10, v12);
    *(void *)a5 = a1;
    *(void *)(a5 + 8) = a2;
    swift_bridgeObjectRetain();
    sub_ADD0((uint64_t)v12, a4, (uint64_t *)(a5 + 16));
    sub_74F8((uint64_t)v12);
  }
  else
  {
    sub_AD60((uint64_t)&v10);
    double result = 0.0;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)a5 = 0u;
  }
  return result;
}

uint64_t sub_ACF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424((uint64_t *)&unk_E7990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_AD60(uint64_t a1)
{
  uint64_t v2 = sub_7424((uint64_t *)&unk_E7990);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_ADC0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_ADD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_B2D30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_B2C40();
  uint64_t v28 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  Swift::Int v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  sub_B218(a1, (uint64_t)v31);
  sub_7424(&qword_E7708);
  if (swift_dynamicCast())
  {
    sub_B3B0(&v30, (uint64_t)v29);
    sub_7468(v29, v29[3]);
    uint64_t v16 = sub_B2C80();
    a3[3] = sub_7424(&qword_E7718);
    *a3 = v16;
    sub_74F8((uint64_t)v29);
  }
  else
  {
    uint64_t v27 = v7;
    uint64_t v17 = sub_7424(&qword_E7710);
    if (swift_dynamicCast())
    {
      uint64_t v18 = v30;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_B274(v18, a2);
      swift_bridgeObjectRelease();
      a3[3] = v17;
      *a3 = (uint64_t)v19;
    }
    else if (swift_dynamicCast())
    {
      uint64_t v20 = v30;
      a3[3] = (uint64_t)&type metadata for Double;
      *a3 = v20;
    }
    else if (swift_dynamicCast())
    {
      char v21 = v30;
      a3[3] = (uint64_t)&type metadata for Bool;
      *(unsigned char *)a3 = v21;
    }
    else
    {
      if (!swift_dynamicCast())
      {
        if (qword_E6D58 != -1) {
          swift_once();
        }
        uint64_t v26 = sub_B378(v6, (uint64_t)qword_F5360);
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v9, v26, v6);
        *(void *)&long long v30 = 0;
        *((void *)&v30 + 1) = 0xE000000000000000;
        sub_B34C0(31);
        v32._countAndFlagsBits = 0xD00000000000001DLL;
        v32._object = (void *)0x80000000000B4D70;
        sub_B3020(v32);
        sub_B35C0();
        sub_8C338(v30, *((unint64_t *)&v30 + 1));
      }
      uint64_t v22 = v28;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v13, v15, v10);
      uint64_t v23 = sub_B2C30();
      a3[3] = (uint64_t)&type metadata for String;
      *a3 = v23;
      a3[1] = v24;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v10);
    }
  }
  return sub_74F8((uint64_t)v31);
}

uint64_t sub_B218(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_B274(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    sub_859D4(0, v3, 0);
    uint64_t v5 = _swiftEmptyArrayStorage;
    uint64_t v6 = a1 + 32;
    do
    {
      sub_ADD0(v10, v6, a2);
      uint64_t v11 = v5;
      unint64_t v8 = v5[2];
      unint64_t v7 = v5[3];
      if (v8 >= v7 >> 1)
      {
        sub_859D4((char *)(v7 > 1), v8 + 1, 1);
        uint64_t v5 = v11;
      }
      v5[2] = v8 + 1;
      sub_ADC0(v10, &v5[4 * v8 + 4]);
      v6 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

uint64_t sub_B378(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_B3B0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_B3C8()
{
  return 0x7265646E696D6572;
}

uint64_t sub_B3EC(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = 0;
  uint64_t v7 = v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_title;
  uint64_t v8 = sub_B2C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_date) = a2;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_isAllDay) = a3;
  return v3;
}

double sub_B48C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v5 || (sub_78A4() & 1) != 0)
  {
    uint64_t v8 = v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_title;
    uint64_t v9 = sub_B2C40();
    *(void *)(a3 + 24) = v9;
    uint64_t v10 = sub_7590((uint64_t *)a3);
    uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    v11(v10, v8, v9);
    return result;
  }
  BOOL v13 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (!v13 && (sub_78A4() & 1) == 0)
  {
    BOOL v15 = a1 == 0x7961446C6C417369 && a2 == 0xE800000000000000;
    if (v15 || (sub_78A4() & 1) != 0)
    {
      char v16 = *(unsigned char *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_isAllDay);
      *(void *)(a3 + 24) = &type metadata for Bool;
      *(unsigned char *)a3 = v16;
      return result;
    }
    goto LABEL_24;
  }
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_date);
  if (!v14)
  {
LABEL_24:
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  *(void *)(a3 + 24) = sub_B2B40();
  *(void *)a3 = v14;

  swift_retain();
  return result;
}

uint64_t sub_B634(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DAE68;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_B684()
{
  return 3;
}

uint64_t sub_B68C(char a1)
{
  if (!a1) {
    return sub_C394();
  }
  if (a1 == 1) {
    return 1702125924;
  }
  return 0x7961446C6C417369;
}

uint64_t sub_B6C8(unsigned __int8 *a1, char *a2)
{
  return sub_5D894(*a1, *a2);
}

Swift::Int sub_B6D4()
{
  return sub_7F1F4();
}

uint64_t sub_B6DC(uint64_t a1)
{
  return sub_7FF7C(a1, *v1);
}

Swift::Int sub_B6E4()
{
  return sub_805B8();
}

uint64_t sub_B6EC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_B634(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_B71C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_B68C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_B748()
{
  return sub_B68C(*v0);
}

uint64_t sub_B750@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_B680();
  *a1 = result;
  return result;
}

void sub_B778(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_B784(uint64_t a1)
{
  unint64_t v2 = sub_C084();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B7C0(uint64_t a1)
{
  unint64_t v2 = sub_C084();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_B7FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_title;
  uint64_t v2 = sub_B2C40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_B878()
{
  sub_B7FC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_B8D0()
{
  return type metadata accessor for DBReminder();
}

uint64_t type metadata accessor for DBReminder()
{
  uint64_t result = qword_E7748;
  if (!qword_E7748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_B920()
{
  uint64_t result = sub_B2C40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_B9C8(void *a1)
{
  uint64_t v3 = sub_7424(&qword_E7850);
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v9 = v8 - v7;
  sub_7468(a1, a1[3]);
  sub_C084();
  sub_B3900();
  sub_B2C40();
  sub_C0D0(&qword_E74C8, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  sub_B3790();
  if (!v1)
  {
    sub_B2B40();
    sub_C0D0(&qword_E7858, (void (*)(uint64_t))&type metadata accessor for DialogCalendar);
    sub_B3740();
    sub_B3760();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_BBD4(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_BC24(a1);
  return v2;
}

uint64_t sub_BC24(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_B2C40();
  sub_7870();
  uint64_t v17 = v6;
  __chkstk_darwin(v7);
  sub_7A0C();
  uint64_t v10 = v9 - v8;
  sub_7424(&qword_E7838);
  sub_7870();
  __chkstk_darwin(v11);
  sub_7A0C();
  *(void *)(v3 + 16) = 0;
  uint64_t v18 = a1;
  sub_7468(a1, a1[3]);
  sub_C084();
  sub_B38F0();
  if (v2)
  {

    type metadata accessor for DBReminder();
    swift_deallocPartialClassInstance();
    uint64_t v16 = (uint64_t)a1;
  }
  else
  {
    sub_C0D0(&qword_E74A8, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    sub_B3710();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_title, v10, v5);
    sub_B2B40();
    sub_C0D0(&qword_E7848, (void (*)(uint64_t))&type metadata accessor for DialogCalendar);
    sub_B36C0();
    *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_date) = v19;
    char v13 = sub_B36E0();
    uint64_t v14 = sub_C3A8();
    v15(v14);
    *(unsigned char *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBReminder_isAllDay) = v13 & 1;
    uint64_t v16 = (uint64_t)v18;
  }
  sub_74F8(v16);
  return v3;
}

double sub_BF80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_B48C(a1, a2, a3);
}

uint64_t sub_BFA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_BBD4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_BFD0(void *a1)
{
  return sub_B9C8(a1);
}

uint64_t sub_BFF4()
{
  return sub_C0D0(&qword_E7828, (void (*)(uint64_t))type metadata accessor for DBReminder);
}

uint64_t sub_C03C()
{
  return sub_C0D0(&qword_E7830, (void (*)(uint64_t))type metadata accessor for DBReminder);
}

unint64_t sub_C084()
{
  unint64_t result = qword_E7840;
  if (!qword_E7840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7840);
  }
  return result;
}

uint64_t sub_C0D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DBReminder.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DBReminder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC26CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DBReminder.CodingKeys()
{
  return &type metadata for DBReminder.CodingKeys;
}

unint64_t sub_C2A8()
{
  unint64_t result = qword_E7860;
  if (!qword_E7860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7860);
  }
  return result;
}

unint64_t sub_C2F8()
{
  unint64_t result = qword_E7868;
  if (!qword_E7868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7868);
  }
  return result;
}

unint64_t sub_C348()
{
  unint64_t result = qword_E7870;
  if (!qword_E7870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7870);
  }
  return result;
}

uint64_t sub_C394()
{
  return 0x656C746974;
}

uint64_t sub_C3A8()
{
  return v0;
}

uint64_t sub_C3C0()
{
  return v0;
}

BOOL sub_C3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)sub_C988(a1, a2, a3);
  sub_7870();
  __chkstk_darwin(v6);
  sub_C914();
  uint64_t v7 = sub_7424(&qword_E7878);
  __chkstk_darwin(v7 - 8);
  sub_C92C();
  uint64_t v8 = sub_7424((uint64_t *)&unk_E7880);
  sub_7870();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_C8DC();
  __chkstk_darwin(v12);
  sub_C944();
  if (sub_C844(v3, 1, v8) == 1)
  {
    sub_C86C(v3);
  }
  else
  {
    char v13 = self;
    id v14 = [v13 fahrenheit];
    sub_C968();

    BOOL v15 = *(void (**)(void))(v10 + 8);
    sub_C8CC();
    v15();
    sub_B14A0();
    double v17 = v16;
    sub_C8CC();
    v15();
    uint64_t v18 = sub_C8F8();
    v19(v18);
    unsigned int v20 = sub_7256C();
    id v21 = [v13 fahrenheit];
    sub_C9A8();

    sub_B14A0();
    double v23 = v22;
    sub_C8CC();
    v15();
    if (v20 <= 1) {
      return v17 - v23 > 1.0;
    }
  }
  return 0;
}

BOOL sub_C5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)sub_C988(a1, a2, a3);
  sub_7870();
  __chkstk_darwin(v6);
  sub_C914();
  uint64_t v7 = sub_7424(&qword_E7878);
  __chkstk_darwin(v7 - 8);
  sub_C92C();
  uint64_t v8 = sub_7424((uint64_t *)&unk_E7880);
  sub_7870();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_C8DC();
  __chkstk_darwin(v12);
  sub_C944();
  if (sub_C844(v3, 1, v8) == 1)
  {
    sub_C86C(v3);
  }
  else
  {
    char v13 = self;
    id v14 = [v13 fahrenheit];
    sub_C968();

    BOOL v15 = *(void (**)(void))(v10 + 8);
    sub_C8CC();
    v15();
    sub_B14A0();
    double v17 = v16;
    sub_C8CC();
    v15();
    uint64_t v18 = sub_C8F8();
    v19(v18);
    int v20 = sub_7256C();
    id v21 = [v13 fahrenheit];
    sub_C9A8();

    sub_B14A0();
    double v23 = v22;
    sub_C8CC();
    v15();
    if (v20 == 1) {
      return v23 - v17 > 1.0;
    }
  }
  return 0;
}

uint64_t sub_C7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_C86C(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E7878);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C8F8()
{
  return v0;
}

uint64_t sub_C944()
{
  return sub_C7DC(v1, v0);
}

uint64_t sub_C968()
{
  *(void *)(v1 - 112) = v0;
  return sub_B14B0();
}

uint64_t sub_C988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 104) = a3;
  return sub_B17F0();
}

uint64_t sub_C9A8()
{
  return sub_B14B0();
}

unint64_t sub_CA18()
{
  return 0xD000000000000011;
}

id sub_CA34()
{
  sub_8C308(0xD00000000000001CLL, 0x80000000000B4EF0, 0xD000000000000033, 0x80000000000B4F10, 0x74696E696564, 0xE600000000000000);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DailyBriefingMapsSink();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_CB94()
{
  return type metadata accessor for DailyBriefingMapsSink();
}

uint64_t type metadata accessor for DailyBriefingMapsSink()
{
  uint64_t result = qword_E7920;
  if (!qword_E7920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_CC4C()
{
  uint64_t v1 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DailyBriefingMapsSink_logger;
  uint64_t v2 = qword_E6D80;
  uint64_t v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = &v3[v1];
  uint64_t v5 = sub_B2D30();
  uint64_t v6 = sub_B378(v5, (uint64_t)qword_F53D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, v6, v5);
  *(void *)&v3[OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DailyBriefingMapsSink_entries] = 0;
  *(void *)&v3[OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DailyBriefingMapsSink_topSuggestion] = 0;
  uint64_t v7 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DailyBriefingMapsSink_networkRequester;
  *(void *)&v3[v7] = [objc_allocWithZone((Class)MapsSuggestionsRealNetworkRequester) init];

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DailyBriefingMapsSink();
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t sub_CD84()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_CE28(char w0_0)
{
  sub_CE84(w0_0);
  sub_B3020(v2);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

void sub_CE84(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      sub_7A1C();
      break;
    default:
      return;
  }
}

uint64_t sub_CF70(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DAED0;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

uint64_t sub_CFBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_5CE44(*a1, *a2);
}

Swift::Int sub_CFC8()
{
  return sub_7F200(*v0);
}

uint64_t sub_CFD0(uint64_t a1)
{
  return sub_7F86C(a1, *v1);
}

Swift::Int sub_CFD8(uint64_t a1)
{
  return sub_8080C(a1, *v1);
}

uint64_t sub_CFE0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_CF70(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_D010(void *a1@<X8>)
{
  sub_CE84(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t sub_D03C(uint64_t a1)
{
  return sub_DDF0(a1, (void (*)(void))type metadata accessor for DBKnowledgeStateStore, (uint64_t (*)(void))sub_DCA4, &qword_F4E70);
}

uint64_t sub_D070()
{
  sub_7FDC();
  v1[2] = v0;
  uint64_t v2 = sub_B2D00();
  v1[3] = v2;
  sub_FC60(v2);
  v1[4] = v3;
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_D108, v0, 0);
}

uint64_t sub_D108()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 112);
  v0[6] = v2;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    uint64_t v3 = sub_FCEC();
    return v4(v3);
  }
  else
  {
    if (qword_E6D30 != -1)
    {
      swift_once();
      uint64_t v1 = v0[2];
    }
    id v6 = (id)qword_F52D8;
    sub_B2CE0();
    sub_B3300();
    sub_FCC8();
    v0[7] = *(void *)(v1 + 120);
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[8] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_D27C;
    return sub_DE44();
  }
}

uint64_t sub_D27C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  *(void *)(v6 + 72) = v5;
  *(unsigned char *)(v6 + 80) = v7;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_D384, v2, 0);
}

uint64_t sub_D384()
{
  sub_FD60();
  char v1 = *(unsigned char *)(v0 + 80);
  sub_B32F0();
  sub_B2CC0();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 24);
    sub_B2EA0();
    sub_F95C(v3, 1);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    *(void *)(v2 + 112) = *(void *)(v0 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 112)) {
      swift_bridgeObjectRetain();
    }
    else {
      sub_B2EA0();
    }
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 24);
    sub_F95C(*(void *)(v0 + 72), 0);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  uint64_t v10 = sub_FCEC();
  return v11(v10);
}

uint64_t sub_D54C(char a1)
{
  uint64_t v3 = sub_B2D30();
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 112);
  if (v9)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_CE28(a1);
    sub_ABD24(v10, v11, v9, &v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18)
    {
      if (swift_dynamicCast()) {
        return v16;
      }
    }
    else
    {
      sub_AD60((uint64_t)&v17);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DBKnowledgeStateStore_logger, v3);
    sub_7A1C();
    sub_ABC4();
    sub_8C2F0(0xD000000000000019, v13, v14, v15, 0x65756C6156746567, 0xEE00293A726F6628);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  return 0;
}

uint64_t sub_D6EC()
{
  sub_7FDC();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = sub_B2D30();
  v1[5] = v4;
  sub_FC60(v4);
  v1[6] = v5;
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_D788, v0, 0);
}

uint64_t sub_D788()
{
  sub_FD60();
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v3 = v2[17];
  if (v3 && v1)
  {
    if (v2[16] == v0[2] && v3 == v1)
    {
LABEL_9:
      uint64_t v8 = v0[6];
      uint64_t v7 = v0[7];
      uint64_t v9 = v0[5];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, (uint64_t)v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DBKnowledgeStateStore_logger, v9);
      sub_7A1C();
      sub_ABC4();
      sub_FD2C(v10, v11, v12, v13, (uint64_t)"getRefreshedState(requestId:)");
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      if (v2[14]) {
        swift_bridgeObjectRetain();
      }
      else {
        sub_B2EA0();
      }
      swift_task_dealloc();
      sub_FCEC();
      sub_FCFC();
      __asm { BRAA            X2, X16 }
    }
    char v5 = sub_B37E0();
    uint64_t v6 = v0[4];
    if (v5)
    {
      uint64_t v2 = (void *)v0[4];
      goto LABEL_9;
    }
    uint64_t v14 = v0[3];
  }
  else
  {
    uint64_t v14 = v0[3];
    uint64_t v6 = v0[4];
  }
  uint64_t v18 = v0[6];
  uint64_t v17 = v0[7];
  uint64_t v19 = v0[5];
  uint64_t v20 = v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DBKnowledgeStateStore_logger, v19);
  sub_7A1C();
  sub_ABC4();
  sub_FD2C(v21, v22, v23, v24, (uint64_t)"getRefreshedState(requestId:)");
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  *(void *)(v6 + 112) = 0;
  swift_bridgeObjectRelease();
  v2[16] = v20;
  v2[17] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)swift_task_alloc();
  v0[8] = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_DA04;
  sub_FCFC();
  return sub_D070();
}

uint64_t sub_DA04(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_AB94();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  char v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(a1);
}

uint64_t sub_DB1C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DBKnowledgeStateStore_logger;
  sub_B2D30();
  sub_FC8C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_DB94()
{
  sub_DB1C();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_DBC0()
{
  return type metadata accessor for DBKnowledgeStateStore(0);
}

uint64_t type metadata accessor for DBKnowledgeStateStore(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_E79D0);
}

uint64_t sub_DBE8()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_DCA4()
{
  swift_defaultActor_initialize();
  *((void *)v0 + 14) = 0;
  if (qword_E6BA8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F4E78;
  *((void *)v0 + 16) = 0;
  *((void *)v0 + 17) = 0;
  *((void *)v0 + 15) = v1;
  uint64_t v2 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21DBKnowledgeStateStore_logger;
  uint64_t v3 = qword_E6D58;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_B2D30();
  sub_B378(v4, (uint64_t)qword_F5360);
  sub_FD18();
  (*(void (**)(char *))(v5 + 16))(&v0[v2]);
  return v0;
}

void sub_DD98()
{
}

void sub_DDA0()
{
}

uint64_t sub_DDBC(uint64_t a1)
{
  return sub_DDF0(a1, (void (*)(void))type metadata accessor for DBKnowledgeStore, sub_F544, &qword_F4E78);
}

uint64_t sub_DDF0(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  uint64_t v6 = swift_allocObject();
  uint64_t result = a3();
  *a4 = v6;
  return result;
}

uint64_t sub_DE44()
{
  *(void *)(v1 + 64) = v0;
  return sub_FCA0((uint64_t)sub_DE5C);
}

uint64_t sub_DE5C()
{
  sub_7FDC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  sub_7424(&qword_E7BF8);
  *uint64_t v1 = v0;
  v1[1] = sub_DF38;
  sub_AC10();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_DF38()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v2 = *v1;
  sub_AB94();
  void *v3 = v2;
  *(void *)(v4 + 80) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_E018()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_E034()
{
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_B2D30();
  sub_B378(v1, (uint64_t)qword_F5360);
  sub_FD4C();
  sub_B34C0(39);
  v0[2] = v10;
  v0[3] = v11;
  sub_7A1C();
  sub_B3020(v13);
  v0[5] = 0;
  v0[4] = 0;
  sub_B35C0();
  unint64_t v2 = v0[3];
  sub_ABC4();
  sub_8C2F0(v3, v2, v4, v5, 0xD000000000000011, 0x80000000000B5130);
  swift_bridgeObjectRelease();
  sub_F824();
  uint64_t v6 = swift_allocError();
  *uint64_t v7 = 0;
  v7[1] = 0;
  swift_errorRelease();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v8(v6, 1);
}

void sub_E1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7C08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = *(void **)(a2 + 16);
  id v8 = objc_allocWithZone((Class)sub_B2990());
  uint64_t v9 = (void *)sub_B29A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_F8F8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_E728;
  aBlock[3] = &unk_DC948;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [v7 dictionaryRepresentationForKeysMatching:v9 completionHandler:v12];
  _Block_release(v12);
}

uint64_t sub_E3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2D30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_B378(v4, (uint64_t)qword_F5360);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_B34C0(44);
    swift_bridgeObjectRelease();
    uint64_t v12 = 0xD00000000000002ALL;
    unint64_t v13 = 0x80000000000B51F0;
    swift_getErrorValue();
    v14._countAndFlagsBits = sub_B3860();
    sub_B3020(v14);
    swift_bridgeObjectRelease();
    sub_8C2F0(v12, v13, 0xD00000000000002ELL, 0x80000000000B5070, 0xD000000000000011, 0x80000000000B5130);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = a1;
    sub_7424(&qword_E7C08);
    return sub_B3120();
  }
  else
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_B378(v4, (uint64_t)qword_F5360);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_B34C0(29);
    swift_bridgeObjectRelease();
    uint64_t v12 = 0xD00000000000001BLL;
    unint64_t v13 = 0x80000000000B51D0;
    swift_bridgeObjectRetain();
    v15._countAndFlagsBits = sub_B2EB0();
    sub_B3020(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_8C308(v12, v13, 0xD00000000000002ELL, 0x80000000000B5070, 0xD000000000000011, 0x80000000000B5130);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = a2;
    LOBYTE(v13) = 0;
    swift_bridgeObjectRetain();
    sub_7424(&qword_E7C08);
    return sub_B3130();
  }
}

uint64_t sub_E728(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *, uint64_t))(a1 + 32);
  uint64_t v4 = sub_B2E80();
  swift_retain();
  id v5 = a2;
  v3(a2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_E7C8()
{
  sub_7FDC();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 88) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = sub_B2D00();
  *(void *)(v1 + 40) = v5;
  sub_FC60(v5);
  *(void *)(v1 + 48) = v6;
  *(void *)(v1 + 56) = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_E864()
{
  sub_FD60();
  if (qword_E6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 16);
  id v6 = (id)qword_F52F8;
  sub_B2CE0();
  sub_B3300();
  sub_FCC8();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 64) = v7;
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 24) = v5;
  *(void *)(v7 + 32) = v3;
  *(unsigned char *)(v7 + 40) = v4;
  *(void *)(v7 + 48) = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_E9D8;
  sub_AC10();
  sub_FCFC();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_E9D8()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_AC10();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_EAC0()
{
  sub_7FDC();
  uint64_t v1 = sub_FCAC();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_EB24()
{
  sub_FD60();
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 88);
  swift_task_dealloc();
  sub_B34C0(40);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = v2;
  v12._object = v1;
  sub_B3020(v12);
  v13._countAndFlagsBits = 0x20726F6620;
  v13._object = (void *)0xE500000000000000;
  sub_B3020(v13);
  sub_CE84(v3);
  sub_B3020(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x3A726F727245202ELL;
  v15._object = (void *)0xE900000000000020;
  sub_B3020(v15);
  sub_7A1C();
  v16._countAndFlagsBits = 0xD00000000000002ELL;
  sub_B3020(v16);
  sub_ABC4();
  sub_8C2F0(v4, 0x80000000000B5050, 0xD00000000000002ELL, v5, v6, 0x80000000000B5000);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v7 = sub_FCAC();
  v8(v7);
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_ECC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, uint64_t a6)
{
  uint64_t v28 = a6;
  uint64_t v29 = a1;
  char v6 = a5;
  int v25 = a5;
  NSString v31 = a4;
  uint64_t v26 = a2;
  uint64_t v27 = sub_7424(&qword_E7BF0);
  uint64_t v8 = *(void *)(v27 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v27);
  uint64_t v24 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_B2D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v32 = *(id *)(a2 + 16);
  NSString v31 = sub_B2F20();
  sub_CE28(v6);
  NSString v30 = sub_B2F20();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v28, v10);
  uint64_t v14 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v27);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + v16 + 9) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v15, v13, v10);
  unint64_t v19 = v18 + v16;
  *(void *)unint64_t v19 = v26;
  *(unsigned char *)(v19 + 8) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, v24, v14);
  aBlock[4] = sub_F758;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_7180C;
  aBlock[3] = &unk_DC8F8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v21 = v31;
  unint64_t v22 = v30;
  [v32 setValue:v31 forKey:v30 completionHandler:v20];
  _Block_release(v20);
}

uint64_t sub_EFD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (qword_E6D38 != -1) {
    swift_once();
  }
  sub_B32F0();
  sub_B2CC0();
  if (a1)
  {
    swift_errorRetain();
    sub_B34C0(37);
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = sub_CE28(a4);
    sub_B3020(v7);
    swift_bridgeObjectRelease();
    v8._countAndFlagsBits = 8250;
    v8._object = (void *)0xE200000000000000;
    sub_B3020(v8);
    swift_getErrorValue();
    v9._countAndFlagsBits = sub_B3860();
    sub_B3020(v9);
    swift_bridgeObjectRelease();
    sub_8C2F0(0xD00000000000001FLL, 0x80000000000B50F0, 0xD00000000000002ELL, 0x80000000000B5070, 0xD000000000000010, 0x80000000000B5000);
    swift_bridgeObjectRelease();
    sub_7424(&qword_E7BF0);
    return sub_B3120();
  }
  else
  {
    sub_7424(&qword_E7BF0);
    return sub_B3130();
  }
}

void sub_F1E0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_FD4C();
    sub_B34C0(44);
    swift_bridgeObjectRelease();
    v4._countAndFlagsBits = v2;
    v4._object = a2;
    sub_B3020(v4);
  }
  else
  {
    sub_7A1C();
  }
}

uint64_t sub_F26C(char a1)
{
  *(unsigned char *)(v1 + 24) = a1;
  return sub_FCA0((uint64_t)sub_F284);
}

uint64_t sub_F284()
{
  sub_7FDC();
  if (qword_E6BA0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F4E70;
  *(void *)(v0 + 16) = qword_F4E70;
  swift_retain();
  return _swift_task_switch(sub_F328, v1, 0);
}

uint64_t sub_F328()
{
  uint64_t v1 = sub_D54C(*(unsigned char *)(v0 + 24));
  uint64_t v3 = v2;
  swift_release();
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v1, v3);
}

uint64_t sub_F3AC()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16DBKnowledgeStore_logger;
  sub_B2D30();
  sub_FC8C();
  (*(void (**)(char *))(v2 + 8))(v1);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_F448()
{
  return type metadata accessor for DBKnowledgeStore(0);
}

uint64_t type metadata accessor for DBKnowledgeStore(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_E7B30);
}

uint64_t sub_F470(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_F4A4()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_F544()
{
  uint64_t v1 = v0;
  sub_B2980();
  *(void *)(v0 + 16) = sub_B2970();
  uint64_t v2 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin16DBKnowledgeStore_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_B2D30();
  sub_B378(v3, (uint64_t)qword_F5360);
  sub_FD18();
  (*(void (**)(uint64_t))(v4 + 16))(v1 + v2);
  return v1;
}

void sub_F608()
{
  sub_F1E0(*(void *)v0, *(void **)(v0 + 8));
}

void sub_F62C(uint64_t a1)
{
  sub_ECC8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_F640()
{
  uint64_t v1 = sub_B2D00();
  sub_7870();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = sub_7424(&qword_E7BF0);
  sub_7870();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v7 + v13 + 9) & ~v13;
  uint64_t v15 = v14 + *(void *)(v12 + 64);
  uint64_t v16 = v4 | v13 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v14, v8);

  return _swift_deallocObject(v0, v15, v16);
}

uint64_t sub_F758(uint64_t a1)
{
  uint64_t v3 = sub_B2D00();
  sub_FC60(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = sub_7424(&qword_E7BF0);
  sub_FC78(v8);
  uint64_t v9 = *(void *)(v1 + v7);
  char v10 = *(unsigned char *)(v1 + v7 + 8);

  return sub_EFD0(a1, v1 + v5, v9, v10);
}

uint64_t sub_F804(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_F814()
{
  return swift_release();
}

void sub_F81C(uint64_t a1)
{
  sub_E1C8(a1, v1);
}

unint64_t sub_F824()
{
  unint64_t result = qword_E7C00;
  if (!qword_E7C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7C00);
  }
  return result;
}

uint64_t sub_F870()
{
  sub_7424(&qword_E7C08);
  sub_FC8C();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_F8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7C08);
  sub_FC78(v4);

  return sub_E3B4(a1, a2);
}

uint64_t sub_F95C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void *initializeBufferWithCopyOfBuffer for CalendarTemplatingError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CalendarTemplatingError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CalendarTemplatingError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CalendarTemplatingError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CalendarTemplatingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CalendarTemplatingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_FABC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_FAD4(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for KnowledgeStoreError()
{
}

unsigned char *sub_FB00(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFBCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for KnowledgeStoreKey()
{
}

unint64_t sub_FC04()
{
  unint64_t result = qword_E7C10;
  if (!qword_E7C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7C10);
  }
  return result;
}

uint64_t sub_FC60(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_FC78(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_FCA0(uint64_t a1)
{
  return _swift_task_switch(a1, 0, 0);
}

uint64_t sub_FCAC()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_FCC8()
{
  return sub_B2CD0();
}

uint64_t sub_FCEC()
{
  return v0;
}

void sub_FD2C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_8C308(a1, a2, a3, a4, 0xD00000000000001DLL, (a5 - 32) | 0x8000000000000000);
}

uint64_t sub_FD74()
{
  if (sub_B1E50()) {
    return 0x646F50656D6F48;
  }
  sub_FEC0();
  if (sub_B1DB0()) {
    return 0x6B63696B65646953;
  }
  sub_FEC0();
  if (sub_B1E10()) {
    return 0x656E6F6850;
  }
  sub_FEC0();
  if (sub_B1E40()) {
    return 0x79616C50726143;
  }
  sub_FEC0();
  if (sub_B1E30()) {
    return 0x5654656C707041;
  }
  sub_FEC0();
  if (sub_B1E00()) {
    return 1684099177;
  }
  sub_FEC0();
  if (sub_B1E20()) {
    return 0x6863746157;
  }
  sub_FEC0();
  if (sub_B1DF0()) {
    return 6512973;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_FEC0()
{
  return v0;
}

uint64_t sub_FECC(char a1)
{
  switch(a1)
  {
    case 1:
      sub_B2190();
      sub_5BCC();
      sub_B2180();
      sub_B2160();
      sub_101B0();
      goto LABEL_7;
    case 2:
      sub_B2190();
      sub_5BCC();
      sub_B2180();
      sub_B2160();
      sub_101B0();
      sub_101C8();
      goto LABEL_7;
    case 3:
      sub_B2190();
      sub_5BCC();
      sub_B2180();
      sub_B2160();
      swift_release();
      sub_B2160();
      sub_101B0();
      sub_101C8();
      goto LABEL_7;
    case 4:
      sub_B2190();
      sub_5BCC();
      sub_B2180();
      unsigned __int8 v1 = 0;
      goto LABEL_10;
    case 5:
      sub_B2190();
      sub_5BCC();
      sub_B2180();
      unsigned __int8 v1 = 1;
LABEL_10:
      sub_A44C4(v1);
      sub_101B0();
      sub_A44C4(0xC1u);
      break;
    default:
      sub_B2190();
      sub_5BCC();
      sub_B2180();
      sub_101DC();
      sub_B2160();
      sub_101B0();
      sub_101DC();
LABEL_7:
      sub_B2160();
      break;
  }
  swift_release();
  uint64_t v2 = sub_B2170();
  swift_release();
  return v2;
}

uint64_t sub_101B0()
{
  return swift_release();
}

unint64_t sub_101C8()
{
  return 0xD000000000000011;
}

uint64_t sub_101DC()
{
  return 0x6B6F6F6265746F6ELL;
}

unint64_t sub_101F0(uint64_t a1, void *a2)
{
  unint64_t v2 = 0xD000000000000026;
  if (a2)
  {
    sub_B34C0(41);
    swift_bridgeObjectRelease();
    v6._countAndFlagsBits = a1;
    v6._object = a2;
    sub_B3020(v6);
    return 0xD000000000000027;
  }
  return v2;
}

unint64_t sub_10290()
{
  return sub_101F0(*(void *)v0, *(void **)(v0 + 8));
}

uint64_t sub_10298(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 80) = a4;
  *(void *)(v5 + 88) = v4;
  *(unsigned char *)(v5 + 61) = a3;
  *(void *)(v5 + 64) = a1;
  *(void *)(v5 + 72) = a2;
  uint64_t v6 = sub_7424(&qword_E76E0);
  sub_13294(v6);
  *(void *)(v5 + 96) = sub_131EC();
  return _swift_task_switch(sub_10328, 0, 0);
}

uint64_t sub_10328()
{
  unsigned __int8 v1 = *(uint64_t **)(v0 + 64);
  uint64_t v2 = *v1;
  *(void *)(v0 + 104) = *v1;
  if (v2)
  {
    uint64_t v3 = v0 + 16;
    uint64_t v4 = *((unsigned int *)v1 + 10);
    unint64_t v5 = v4 | ((unint64_t)*((unsigned __int8 *)v1 + 44) << 32);
    uint64_t v6 = v1[4];
    uint64_t v7 = v1[1];
    long long v8 = *((_OWORD *)v1 + 1);
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 24) = v7;
    *(_OWORD *)(v0 + 32) = v8;
    *(void *)(v0 + 48) = v6;
    *(unsigned char *)(v0 + 56) = v4 & 1;
    v9.i64[0] = 0xFFFFFFFFFFLL;
    v9.i64[1] = 0xFFFFFFFFFFLL;
    uint64x2_t v10 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v5), v9);
    int16x8_t v11 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_BE9F0), (int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_BE9E0));
    *(int8x8_t *)v11.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v11), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v0 + 57) = vmovn_s16(v11).u32[0];
    if (v4)
    {
      uint64_t v22 = *(void *)(v0 + 96);
      uint64_t v23 = sub_B2090();
      sub_AA40(v22, 1, 1, v23);
      uint64_t v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v24;
      *uint64_t v24 = v0;
      v24[1] = sub_10680;
      uint64_t v25 = *(void *)(v0 + 96);
      char v26 = *(unsigned char *)(v0 + 61);
      uint64_t v28 = *(void *)(v0 + 64);
      uint64_t v27 = *(void *)(v0 + 72);
      return sub_107AC(v28, v3, v27, v26, v25);
    }
    else
    {
      uint64_t v12 = (uint64_t)v1 + *(int *)(type metadata accessor for CalendarPreprocessingResult(0) + 20);
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_1056C;
      uint64_t v14 = *(void *)(v0 + 80);
      char v15 = *(unsigned char *)(v0 + 61);
      uint64_t v16 = *(void *)(v0 + 72);
      return sub_11AF0(v3, v12, v16, v15, v14);
    }
  }
  else
  {
    sub_12F98();
    uint64_t v18 = swift_allocError();
    *unint64_t v19 = 0;
    v19[1] = 0;
    int v20 = *(void *)(v0 + 104) == 0;
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
    return v21(v18, (v20 << 8));
  }
}

uint64_t sub_1056C()
{
  sub_130FC();
  uint64_t v3 = *v2;
  sub_AB94();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  int v5 = *(void *)(v0 + 104) == 0;
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t, void))(v3 + 8);
  return v6(v1, (v5 << 8) | 1u);
}

uint64_t sub_10680()
{
  sub_130FC();
  uint64_t v4 = v3;
  sub_AB94();
  *int v5 = v4;
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *v2;
  *int v5 = *v2;
  swift_task_dealloc();
  sub_12FE4(v6, &qword_E76E0);
  int v8 = *(void *)(v0 + 104) == 0;
  swift_task_dealloc();
  int8x16_t v9 = *(uint64_t (**)(uint64_t, void))(v7 + 8);
  return v9(v1, (v8 << 8) | 1u);
}

uint64_t sub_107AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 296) = a5;
  *(void *)(v6 + 304) = v5;
  *(unsigned char *)(v6 + 568) = a4;
  *(void *)(v6 + 280) = a2;
  *(void *)(v6 + 288) = a3;
  *(void *)(v6 + 272) = a1;
  sub_12DD0(a3, v6 + 144);
  *(void *)(v6 + 312) = *(void *)(v6 + 144);
  *(void *)(v6 + 320) = *(void *)(v6 + 168);
  uint64_t v7 = sub_7424(&qword_E7D10);
  sub_13294(v7);
  *(void *)(v6 + 328) = sub_13118();
  *(void *)(v6 + 336) = swift_task_alloc();
  *(void *)(v6 + 344) = swift_task_alloc();
  *(void *)(v6 + 352) = swift_task_alloc();
  *(void *)(v6 + 360) = swift_task_alloc();
  uint64_t v8 = sub_B17F0();
  *(void *)(v6 + 368) = v8;
  sub_FC60(v8);
  *(void *)(v6 + 376) = v9;
  *(void *)(v6 + 384) = sub_131EC();
  uint64_t v10 = sub_B1500();
  *(void *)(v6 + 392) = v10;
  sub_FC60(v10);
  *(void *)(v6 + 400) = v11;
  *(void *)(v6 + 408) = sub_131EC();
  uint64_t v12 = type metadata accessor for CalendarEvent(0);
  *(void *)(v6 + 416) = v12;
  sub_FC60(v12);
  *(void *)(v6 + 424) = v13;
  *(void *)(v6 + 432) = sub_131EC();
  uint64_t v14 = sub_B2C40();
  *(void *)(v6 + 440) = v14;
  sub_FC60(v14);
  *(void *)(v6 + 448) = v15;
  *(void *)(v6 + 456) = sub_13118();
  *(void *)(v6 + 464) = swift_task_alloc();
  *(void *)(v6 + 472) = swift_task_alloc();
  *(void *)(v6 + 480) = swift_task_alloc();
  uint64_t v16 = sub_7424(&qword_E7D18);
  sub_13294(v16);
  *(void *)(v6 + 488) = sub_13118();
  *(void *)(v6 + 496) = swift_task_alloc();
  *(void *)(v6 + 504) = swift_task_alloc();
  *(void *)(v6 + 512) = swift_task_alloc();
  *(void *)(v6 + 520) = swift_task_alloc();
  *(void *)(v6 + 528) = swift_task_alloc();
  *(void *)(v6 + 536) = swift_task_alloc();
  *(void *)(v6 + 544) = swift_task_alloc();
  return _swift_task_switch(sub_109EC, 0, 0);
}

uint64_t sub_109EC()
{
  uint64_t v1 = 0xD000000000000010;
  uint64_t v2 = *(void *)(v0 + 280);
  sub_7424(&qword_E7D20);
  uint64_t v3 = (__n128 *)swift_allocObject();
  *(void *)(v0 + 552) = v3;
  double v4 = sub_130B0(v3, (__n128)xmmword_BEA00);
  *(double *)(v5 + 48) = v4;
  *(void *)(v5 + 72) = &type metadata for Double;
  *(void *)(v5 + 80) = 0xD000000000000012;
  sub_13150();
  *(void *)(v6 + 88) = v7;
  *(double *)(v6 + 96) = (double)*(uint64_t *)(v2 + 16);
  *(void *)(v6 + 120) = v8;
  *(void *)(v6 + 128) = 0xD000000000000011;
  uint64_t v9 = sub_13398(v6, (uint64_t)"isEventCountStale");
  *(unsigned char *)(v9 + 144) = v10;
  *(void *)(v9 + 168) = &type metadata for Bool;
  *(void *)(v9 + 176) = 0xD000000000000010;
  uint64_t v11 = sub_132DC(v9, (uint64_t)"isEventTimeStale");
  *(void *)(v11 + 216) = v12;
  *(void *)(v11 + 224) = 0xD000000000000010;
  sub_13150();
  *(void *)(v13 + 232) = v14;
  *(unsigned char *)(v13 + 240) = *(unsigned char *)(v2 + 43);
  sub_133F4();
  v15[33] = v17;
  v15[34] = v16;
  v15[35] = 0xEB0000000073656CLL;
  uint64_t v18 = *(void *)v2;
  int64_t v19 = *(void *)(*(void *)v2 + 16);
  int v20 = &_swiftEmptyArrayStorage;
  v154 = v15;
  if (v19)
  {
    v160 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(v0 + 208);
    v161 = &_swiftEmptyArrayStorage;
    uint64_t v156 = *(void *)(v0 + 432);
    swift_bridgeObjectRetain();
    size_t v21 = sub_132A0();
    sub_85970(v21, v19, 0);
    sub_13284();
    uint64_t v152 = v18;
    uint64_t v23 = v18 + v22;
    sub_13310();
    int v20 = &_swiftEmptyArrayStorage;
    do
    {
      uint64_t v24 = *(void **)(v0 + 432);
      uint64_t v25 = *(void **)(v0 + 392);
      sub_12E38(v23, (uint64_t)v24);
      uint64_t v26 = *(void *)(v156 + 8);
      *(void *)(v0 + 208) = *v24;
      *(void *)(v0 + 216) = v26;
      swift_bridgeObjectRetain();
      sub_B14D0();
      sub_12E9C();
      sub_B33D0();
      sub_131C8();
      v27();
      swift_bridgeObjectRelease();
      sub_131D4();
      sub_12F44((uint64_t)v24, (void (*)(void))type metadata accessor for CalendarEvent);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_13090(v20[2]);
        int v20 = v161;
      }
      unint64_t v29 = v20[2];
      unint64_t v28 = v20[3];
      uint64_t v1 = v29 + 1;
      if (v29 >= v28 >> 1)
      {
        sub_1315C(v28);
        int v20 = v161;
      }
      v20[2] = v1;
      sub_13180();
      uint64_t v31 = sub_13134((uint64_t)v20 + v30);
      v32(v31);
      v161 = v20;
      v23 += v155;
      --v19;
    }
    while (v19);
    uint64_t v18 = v152;
    swift_bridgeObjectRelease();
    sub_13274();
  }
  else
  {
    uint64_t v25 = v15;
  }
  uint64_t v33 = *(void *)(v0 + 544);
  uint64_t v34 = *(void *)(v0 + 416);
  sub_7424(&qword_E7D28);
  v25[36] = v20;
  sub_133E0();
  uint64_t v153 = v35;
  v25[39] = v35;
  v25[40] = v36;
  v25[41] = 0xE900000000000065;
  sub_6431C(v18, v33);
  LODWORD(v34) = sub_C844(v33, 1, v34);
  sub_12FE4(v33, &qword_E7D18);
  if (v34 == 1)
  {
    *((_OWORD *)v25 + 21) = 0u;
    *((_OWORD *)v25 + 22) = 0u;
  }
  else
  {
    sub_6431C(v18, *(void *)(v0 + 536));
    uint64_t result = sub_13048();
    if (v120)
    {
      __break(1u);
      goto LABEL_65;
    }
    uint64_t v38 = *(void *)(v0 + 536);
    uint64_t v40 = *(void *)(v0 + 376);
    uint64_t v39 = *(void *)(v0 + 384);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v42 = sub_B2B40();
    uint64_t v43 = sub_13078();
    v44(v43);
    sub_12F44(v38, (void (*)(void))type metadata accessor for CalendarEvent);
    uint64_t v45 = sub_132C4();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    v25[45] = v42;
    v25[42] = v45;
  }
  sub_131A4();
  v25[46] = v46;
  v25[47] = v47;
  sub_12DD0(v48, v49);
  uint64_t v50 = *(void **)(v0 + 32);
  if (v50)
  {
    double v51 = (double)*(int *)(v0 + 320);
    uint64_t v50 = &type metadata for Double;
  }
  else
  {
    v25[49] = 0;
    v25[50] = 0;
    double v51 = 0.0;
  }
  uint64_t v52 = *(void *)(v0 + 288);
  *((double *)v25 + 48) = v51;
  v25[51] = v50;
  v25[52] = 6386789;
  v25[53] = 0xE300000000000000;
  sub_12DD0(v52, v0 + 80);
  if (*(void *)(v0 + 96))
  {
    uint64_t v53 = sub_B2B90();
    uint64_t v54 = sub_9B250();
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v53 = 0;
    v25[55] = 0;
    v25[56] = 0;
  }
  v25[54] = v54;
  sub_13408();
  v25[57] = v53;
  v25[58] = v55;
  sub_133CC();
  v25[59] = v56;
  *((unsigned char *)v25 + 480) = v57;
  v25[63] = &type metadata for Bool;
  v25[64] = 0x6E696E6576457369;
  v25[65] = 0xE900000000000067;
  char v59 = *(unsigned char *)(v58 + 41);
  v25[69] = &type metadata for Bool;
  *((unsigned char *)v25 + 528) = v59;
  v25[70] = v1 + 2;
  sub_13150();
  v25[71] = v60;
  double v62 = (double)*(uint64_t *)(v61 + 32);
  v25[75] = &type metadata for Double;
  *((double *)v25 + 72) = v62;
  v25[76] = v1 + 3;
  sub_13150();
  v25[77] = v63;
  uint64_t v65 = *(void *)(v64 + 8);
  int64_t v66 = *(void *)(v65 + 16);
  if (v66)
  {
    v160 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(v0 + 224);
    v162 = &_swiftEmptyArrayStorage;
    uint64_t v67 = *(void *)(v0 + 424);
    uint64_t v157 = *(void *)(v0 + 432);
    swift_bridgeObjectRetain();
    size_t v68 = sub_132A0();
    sub_85970(v68, v66, 0);
    sub_13284();
    uint64_t v70 = v65 + v69;
    uint64_t v155 = *(void *)(v67 + 72);
    Swift::String v71 = &_swiftEmptyArrayStorage;
    do
    {
      Swift::String v72 = *(void **)(v0 + 432);
      uint64_t v25 = *(void **)(v0 + 392);
      sub_12E38(v70, (uint64_t)v72);
      uint64_t v73 = *(void *)(v157 + 8);
      *(void *)(v0 + 224) = *v72;
      *(void *)(v0 + 232) = v73;
      swift_bridgeObjectRetain();
      sub_B14D0();
      sub_12E9C();
      sub_B33D0();
      sub_131C8();
      v74();
      swift_bridgeObjectRelease();
      sub_131D4();
      sub_12F44((uint64_t)v72, (void (*)(void))type metadata accessor for CalendarEvent);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_13090(v71[2]);
        Swift::String v71 = v162;
      }
      unint64_t v76 = v71[2];
      unint64_t v75 = v71[3];
      uint64_t v1 = v76 + 1;
      if (v76 >= v75 >> 1)
      {
        sub_1315C(v75);
        Swift::String v71 = v162;
      }
      v71[2] = v1;
      sub_13180();
      uint64_t v78 = sub_13134((uint64_t)v71 + v77);
      v79(v78);
      v162 = v71;
      v70 += v155;
      --v66;
    }
    while (v66);
    swift_bridgeObjectRelease();
    sub_13274();
  }
  else
  {
    Swift::String v71 = &_swiftEmptyArrayStorage;
  }
  uint64_t v80 = *(void *)(v0 + 528);
  uint64_t v81 = *(void *)(v0 + 416);
  v25[81] = v153;
  v25[78] = v71;
  v25[82] = v1 + 1;
  sub_13150();
  v25[83] = v82;
  sub_6431C(v65, v80);
  LODWORD(v81) = sub_C844(v80, 1, v81);
  sub_12FE4(v80, &qword_E7D18);
  if (v81 == 1)
  {
    *((_OWORD *)v25 + 42) = 0u;
    *((_OWORD *)v25 + 43) = 0u;
    goto LABEL_33;
  }
  sub_6431C(v65, *(void *)(v0 + 520));
  uint64_t result = sub_13048();
  if (v120)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v83 = *(void *)(v0 + 520);
  uint64_t v84 = sub_13378();
  uint64_t v85 = sub_13078();
  v86(v85);
  sub_12F44(v83, (void (*)(void))type metadata accessor for CalendarEvent);
  sub_132C4();
  uint64_t v87 = sub_13220();
  v88(v87);
  v25[87] = v84;
  v25[84] = v83;
LABEL_33:
  v25[88] = v1 + 12;
  sub_13150();
  v25[89] = v89;
  uint64_t v90 = type metadata accessor for CalendarPreprocessingResult(0);
  sub_132AC(v90, v91, &qword_E7D10);
  uint64_t v92 = type metadata accessor for ImportantEventInfo(0);
  int v93 = sub_132F4();
  v94 = *(uint64_t **)(v0 + 360);
  if (v93 == 1)
  {
    sub_12FE4(*(void *)(v0 + 360), &qword_E7D10);
    *((_OWORD *)v25 + 45) = 0u;
    *((_OWORD *)v25 + 46) = 0u;
  }
  else
  {
    uint64_t v95 = *v94;
    swift_bridgeObjectRetain();
    sub_12F44((uint64_t)v94, (void (*)(void))type metadata accessor for ImportantEventInfo);
    int64_t v96 = *(void *)(v95 + 16);
    if (v96)
    {
      v160 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(v0 + 256);
      uint64_t v158 = *(void *)(v0 + 432);
      v163 = &_swiftEmptyArrayStorage;
      size_t v97 = sub_132A0();
      sub_85970(v97, v96, 0);
      sub_13330();
      uint64_t v1 = v95 + v98;
      sub_13310();
      v99 = &_swiftEmptyArrayStorage;
      do
      {
        v100 = *(void **)(v0 + 432);
        sub_12E38(v1, (uint64_t)v100);
        uint64_t v101 = *(void *)(v158 + 8);
        *(void *)(v0 + 256) = *v100;
        *(void *)(v0 + 264) = v101;
        swift_bridgeObjectRetain();
        sub_B14D0();
        sub_12E9C();
        sub_B33D0();
        uint64_t v25 = v102;
        sub_131C8();
        v103();
        swift_bridgeObjectRelease();
        sub_131D4();
        sub_12F44((uint64_t)v100, (void (*)(void))type metadata accessor for CalendarEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_13090(v99[2]);
          v99 = v163;
        }
        unint64_t v105 = v99[2];
        unint64_t v104 = v99[3];
        if (v105 >= v104 >> 1)
        {
          sub_85970(v104 > 1, v105 + 1, 1);
          v99 = v163;
        }
        v99[2] = v105 + 1;
        sub_13180();
        uint64_t v107 = sub_13134((uint64_t)v99 + v106);
        v108(v107);
        v163 = v99;
        v1 += v155;
        --v96;
      }
      while (v96);
      swift_bridgeObjectRelease();
      sub_13274();
    }
    else
    {
      swift_bridgeObjectRelease();
      v99 = &_swiftEmptyArrayStorage;
    }
    v25[93] = v153;
    v25[90] = v99;
  }
  v109 = v25 + 96;
  v25[94] = v1 + 9;
  sub_13150();
  v25[95] = v110;
  sub_132AC(v111, v112, &qword_E7D10);
  int v113 = sub_132F4();
  uint64_t v114 = *(void *)(v0 + 512);
  uint64_t v115 = *(void *)(v0 + 416);
  uint64_t v116 = *(void *)(v0 + 352);
  if (v113 == 1)
  {
    sub_12FE4(*(void *)(v0 + 352), &qword_E7D10);
    sub_13204(v114);
LABEL_49:
    sub_12FE4(*(void *)(v0 + 512), &qword_E7D18);
    *(_OWORD *)v109 = 0u;
    *((_OWORD *)v25 + 49) = 0u;
    goto LABEL_53;
  }
  sub_12EE8(v116 + *(int *)(v92 + 20), *(void *)(v0 + 512), &qword_E7D18);
  sub_12F44(v116, (void (*)(void))type metadata accessor for ImportantEventInfo);
  sub_130E4(v114, 1, v115);
  if (v120) {
    goto LABEL_49;
  }
  uint64_t v117 = *(void *)(v0 + 344);
  uint64_t v118 = sub_12FE4(*(void *)(v0 + 512), &qword_E7D18);
  sub_132AC(v118, v119, &qword_E7D10);
  uint64_t result = sub_130E4(v117, 1, v92);
  if (v120) {
    goto LABEL_66;
  }
  uint64_t v151 = v92;
  uint64_t v121 = *(void *)(v0 + 344);
  sub_12EE8(v121 + *(int *)(v92 + 20), *(void *)(v0 + 504), &qword_E7D18);
  sub_12F44(v121, (void (*)(void))type metadata accessor for ImportantEventInfo);
  uint64_t result = sub_13048();
  if (v120)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v122 = *(uint64_t **)(v0 + 504);
  uint64_t v123 = *(void *)(v0 + 448);
  uint64_t v124 = *(void *)(v0 + 440);
  uint64_t v126 = *(void *)(v0 + 400);
  uint64_t v125 = *(void *)(v0 + 408);
  uint64_t v159 = *(void *)(v0 + 392);
  v160 = *(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v0 + 456);
  uint64_t v127 = *v122;
  uint64_t v128 = v122[1];
  swift_bridgeObjectRetain();
  sub_12F44((uint64_t)v122, (void (*)(void))type metadata accessor for CalendarEvent);
  *(void *)(v0 + 240) = v127;
  *(void *)(v0 + 248) = v128;
  sub_B14D0();
  sub_12E9C();
  sub_B33D0();
  (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v125, v159);
  swift_bridgeObjectRelease();
  sub_131D4();
  uint64_t v25 = v154;
  v154[99] = v124;
  v129 = sub_7590(v109);
  (*(void (**)(uint64_t *, uint64_t (*)(uint64_t, void *, uint64_t, uint64_t), uint64_t))(v123 + 32))(v129, v160, v124);
  uint64_t v1 = 0xD000000000000010;
  uint64_t v92 = v151;
LABEL_53:
  v25[100] = v1 + 8;
  sub_13150();
  v25[101] = v130;
  sub_132AC(v131, v132, &qword_E7D10);
  int v133 = sub_132F4();
  uint64_t v134 = *(void *)(v0 + 496);
  uint64_t v135 = *(void *)(v0 + 416);
  uint64_t v136 = *(void *)(v0 + 336);
  if (v133 != 1)
  {
    sub_12EE8(v136 + *(int *)(v92 + 20), *(void *)(v0 + 496), &qword_E7D18);
    sub_12F44(v136, (void (*)(void))type metadata accessor for ImportantEventInfo);
    sub_130E4(v134, 1, v135);
    if (v120) {
      goto LABEL_57;
    }
    uint64_t v137 = *(void *)(v0 + 328);
    uint64_t v138 = sub_12FE4(*(void *)(v0 + 496), &qword_E7D18);
    sub_132AC(v138, v139, &qword_E7D10);
    uint64_t result = sub_130E4(v137, 1, v92);
    if (!v140)
    {
      uint64_t v141 = *(void *)(v0 + 328);
      sub_12EE8(v141 + *(int *)(v92 + 20), *(void *)(v0 + 488), &qword_E7D18);
      sub_12F44(v141, (void (*)(void))type metadata accessor for ImportantEventInfo);
      uint64_t result = sub_13048();
      if (!v120)
      {
        uint64_t v142 = *(void *)(v0 + 488);
        uint64_t v143 = sub_13378();
        uint64_t v144 = sub_13078();
        v145(v144);
        sub_12F44(v142, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_132C4();
        uint64_t v146 = sub_13220();
        v147(v146);
        v25[105] = v143;
        v25[102] = v142;
        goto LABEL_61;
      }
LABEL_69:
      __break(1u);
      return result;
    }
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  sub_12FE4(*(void *)(v0 + 336), &qword_E7D10);
  sub_13204(v134);
LABEL_57:
  sub_12FE4(*(void *)(v0 + 496), &qword_E7D18);
  *((_OWORD *)v25 + 51) = 0u;
  *((_OWORD *)v25 + 52) = 0u;
LABEL_61:
  uint64_t v148 = *(void *)(*(void *)(v0 + 304) + 16);
  v149 = (void *)sub_133AC();
  *(void *)(v0 + 560) = v149;
  void *v149 = v0;
  v149[1] = sub_117D0;
  uint64_t v150 = *(void *)(v0 + 296);
  return v160(2, v25, v150, v148);
}

uint64_t sub_117D0(uint64_t a1)
{
  sub_7FC4();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_13190();
  uint64_t v2 = v1;
  sub_AB94();
  void *v3 = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
  return v4(a1);
}

uint64_t sub_11AF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 280) = a5;
  *(void *)(v6 + 288) = v5;
  *(unsigned char *)(v6 + 528) = a4;
  *(void *)(v6 + 264) = a2;
  *(void *)(v6 + 272) = a3;
  *(void *)(v6 + 256) = a1;
  sub_12DD0(a3, v6 + 144);
  *(void *)(v6 + 296) = *(void *)(v6 + 144);
  *(void *)(v6 + 304) = *(void *)(v6 + 168);
  uint64_t v7 = sub_7424(&qword_E7D10);
  sub_13294(v7);
  *(void *)(v6 + 312) = sub_13118();
  *(void *)(v6 + 320) = swift_task_alloc();
  *(void *)(v6 + 328) = swift_task_alloc();
  *(void *)(v6 + 336) = swift_task_alloc();
  *(void *)(v6 + 344) = swift_task_alloc();
  uint64_t v8 = sub_B17F0();
  *(void *)(v6 + 352) = v8;
  sub_FC60(v8);
  *(void *)(v6 + 360) = v9;
  *(void *)(v6 + 368) = sub_131EC();
  uint64_t v10 = sub_B1500();
  *(void *)(v6 + 376) = v10;
  sub_FC60(v10);
  *(void *)(v6 + 384) = v11;
  *(void *)(v6 + 392) = sub_131EC();
  uint64_t v12 = type metadata accessor for CalendarEvent(0);
  *(void *)(v6 + 400) = v12;
  sub_FC60(v12);
  *(void *)(v6 + 408) = v13;
  *(void *)(v6 + 416) = sub_131EC();
  uint64_t v14 = sub_B2C40();
  *(void *)(v6 + 424) = v14;
  sub_FC60(v14);
  *(void *)(v6 + 432) = v15;
  *(void *)(v6 + 440) = sub_13118();
  *(void *)(v6 + 448) = swift_task_alloc();
  *(void *)(v6 + 456) = swift_task_alloc();
  uint64_t v16 = sub_7424(&qword_E7D18);
  sub_13294(v16);
  *(void *)(v6 + 464) = sub_13118();
  *(void *)(v6 + 472) = swift_task_alloc();
  *(void *)(v6 + 480) = swift_task_alloc();
  *(void *)(v6 + 488) = swift_task_alloc();
  *(void *)(v6 + 496) = swift_task_alloc();
  *(void *)(v6 + 504) = swift_task_alloc();
  return _swift_task_switch(sub_11D0C, 0, 0);
}

uint64_t sub_11D0C()
{
  uint64_t v1 = *(void *)(v0 + 256);
  sub_7424(&qword_E7D20);
  uint64_t v2 = (__n128 *)swift_allocObject();
  *(void *)(v0 + 512) = v2;
  double v3 = sub_130B0(v2, (__n128)xmmword_BEA10);
  *(double *)(v4 + 48) = v3;
  *(void *)(v4 + 72) = &type metadata for Double;
  *(void *)(v4 + 80) = 0xD000000000000012;
  *(void *)(v4 + 88) = 0x80000000000B5420;
  *(double *)(v4 + 96) = (double)*(uint64_t *)(v1 + 32);
  *(void *)(v4 + 120) = &type metadata for Double;
  *(void *)(v4 + 128) = 0xD000000000000011;
  uint64_t v5 = sub_13398(v4, (uint64_t)"isEventCountStale");
  *(unsigned char *)(v5 + 144) = v6;
  *(void *)(v5 + 168) = &type metadata for Bool;
  *(void *)(v5 + 176) = 0xD000000000000010;
  sub_132DC(v5, (uint64_t)"isEventTimeStale");
  sub_133F4();
  v7[27] = &type metadata for Bool;
  v7[28] = v8;
  v7[29] = 0xEB0000000073656CLL;
  uint64_t v9 = *(void *)(v1 + 8);
  int64_t v10 = *(void *)(v9 + 16);
  uint64_t v121 = v0;
  uint64_t v115 = v7;
  if (v10)
  {
    sub_13344();
    swift_bridgeObjectRetain();
    size_t v11 = sub_132A0();
    sub_85970(v11, v10, 0);
    sub_13284();
    uint64_t v13 = v9 + v12;
    uint64_t v116 = MEMORY[0xD000000000000058];
    uint64_t v14 = v122;
    do
    {
      uint64_t v15 = *(void **)(v0 + 416);
      sub_12E38(v13, (uint64_t)v15);
      uint64_t v16 = *(void *)(v118 + 8);
      *(void *)(v121 + 208) = *v15;
      *(void *)(v121 + 216) = v16;
      swift_bridgeObjectRetain();
      sub_B14D0();
      sub_12E9C();
      sub_B33D0();
      uint64_t v0 = v121;
      sub_131C8();
      v17();
      swift_bridgeObjectRelease();
      sub_131D4();
      sub_12F44((uint64_t)v15, (void (*)(void))type metadata accessor for CalendarEvent);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_13090(v14[2]);
        uint64_t v14 = v122;
      }
      unint64_t v19 = v14[2];
      unint64_t v18 = v14[3];
      if (v19 >= v18 >> 1)
      {
        sub_1315C(v18);
        uint64_t v14 = v122;
      }
      v14[2] = v19 + 1;
      sub_13180();
      uint64_t v21 = sub_13258((uint64_t)v14 + v20);
      v22(v21);
      v122 = v14;
      v13 += v116;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v23 = v115;
  }
  else
  {
    uint64_t v23 = v7;
    uint64_t v14 = &_swiftEmptyArrayStorage;
  }
  uint64_t v24 = *(void *)(v0 + 504);
  uint64_t v25 = *(void *)(v0 + 400);
  sub_7424(&qword_E7D28);
  v23[30] = v14;
  sub_133E0();
  uint64_t v114 = v26;
  v23[33] = v26;
  v23[34] = v27;
  v23[35] = 0xE900000000000065;
  sub_6431C(v9, v24);
  LODWORD(v25) = sub_C844(v24, 1, v25);
  sub_12FE4(v24, &qword_E7D18);
  if (v25 == 1)
  {
    *((_OWORD *)v23 + 18) = 0u;
    *((_OWORD *)v23 + 19) = 0u;
  }
  else
  {
    sub_6431C(v9, *(void *)(v0 + 496));
    uint64_t result = sub_13048();
    if (v77)
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    uint64_t v29 = *(void *)(v0 + 496);
    uint64_t v30 = sub_13358();
    uint64_t v31 = sub_13078();
    v32(v31);
    sub_12F44(v29, (void (*)(void))type metadata accessor for CalendarEvent);
    sub_132C4();
    uint64_t v33 = sub_1323C();
    v34(v33);
    uint64_t v23 = v115;
    v115[39] = v30;
    v115[36] = v29;
  }
  sub_131A4();
  v23[40] = v35;
  v23[41] = v36;
  sub_12DD0(v37, v38);
  uint64_t v39 = *(void **)(v0 + 32);
  if (v39)
  {
    double v40 = (double)*(int *)(v0 + 304);
    uint64_t v39 = &type metadata for Double;
  }
  else
  {
    v23[43] = 0;
    v23[44] = 0;
    double v40 = 0.0;
  }
  uint64_t v41 = *(void *)(v0 + 272);
  *((double *)v23 + 42) = v40;
  v23[45] = v39;
  v23[46] = 6386789;
  v23[47] = 0xE300000000000000;
  sub_12DD0(v41, v0 + 80);
  if (*(void *)(v0 + 96))
  {
    uint64_t v42 = sub_B2B90();
    uint64_t v43 = sub_9B250();
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v42 = 0;
    v23[49] = 0;
    v23[50] = 0;
  }
  uint64_t v44 = *(void *)(v0 + 344);
  v23[48] = v43;
  sub_13408();
  v23[51] = v42;
  v23[52] = v45;
  sub_133CC();
  v23[53] = v46;
  *((unsigned char *)v23 + 432) = v47;
  v23[57] = &type metadata for Bool;
  v23[58] = 0xD00000000000001CLL;
  v23[59] = 0x80000000000B5480;
  sub_12EE8(v48, v44, &qword_E7D10);
  uint64_t v49 = type metadata accessor for ImportantEventInfo(0);
  int v50 = sub_C844(v44, 1, v49);
  double v51 = *(uint64_t **)(v0 + 344);
  if (v50 == 1)
  {
    sub_12FE4(*(void *)(v0 + 344), &qword_E7D10);
    *((_OWORD *)v23 + 30) = 0u;
    *((_OWORD *)v23 + 31) = 0u;
  }
  else
  {
    uint64_t v52 = *v51;
    swift_bridgeObjectRetain();
    sub_12F44((uint64_t)v51, (void (*)(void))type metadata accessor for ImportantEventInfo);
    int64_t v53 = *(void *)(v52 + 16);
    if (v53)
    {
      sub_13344();
      size_t v54 = sub_132A0();
      sub_85970(v54, v53, 0);
      sub_13330();
      uint64_t v56 = v52 + v55;
      uint64_t v117 = *(void *)(v44 + 72);
      char v57 = v122;
      do
      {
        uint64_t v58 = *(void **)(v0 + 416);
        sub_12E38(v56, (uint64_t)v58);
        uint64_t v59 = *(void *)(v118 + 8);
        *(void *)(v0 + 240) = *v58;
        *(void *)(v0 + 248) = v59;
        swift_bridgeObjectRetain();
        sub_B14D0();
        sub_12E9C();
        sub_B33D0();
        sub_131C8();
        v60();
        swift_bridgeObjectRelease();
        sub_131D4();
        sub_12F44((uint64_t)v58, (void (*)(void))type metadata accessor for CalendarEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_13090(v57[2]);
          char v57 = v122;
        }
        unint64_t v62 = v57[2];
        unint64_t v61 = v57[3];
        if (v62 >= v61 >> 1)
        {
          sub_85970(v61 > 1, v62 + 1, 1);
          char v57 = v122;
        }
        uint64_t v0 = v121;
        v57[2] = v62 + 1;
        sub_13180();
        uint64_t v64 = sub_13258((uint64_t)v57 + v63);
        v65(v64);
        v122 = v57;
        v56 += v117;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      char v57 = &_swiftEmptyArrayStorage;
    }
    uint64_t v23 = v115;
    v115[63] = v114;
    v115[60] = v57;
  }
  uint64_t v66 = *(void *)(v0 + 336);
  uint64_t v67 = v23 + 66;
  v23[64] = 0xD000000000000019;
  sub_13150();
  v23[65] = v68;
  sub_12EE8(v69, v66, &qword_E7D10);
  int v70 = sub_C844(v66, 1, v49);
  uint64_t v71 = *(void *)(v0 + 488);
  uint64_t v72 = *(void *)(v0 + 400);
  uint64_t v73 = *(void *)(v0 + 336);
  if (v70 == 1)
  {
    sub_12FE4(*(void *)(v0 + 336), &qword_E7D10);
    sub_13204(v71);
LABEL_36:
    sub_12FE4(*(void *)(v0 + 488), &qword_E7D18);
    *(_OWORD *)uint64_t v67 = 0u;
    *((_OWORD *)v23 + 34) = 0u;
    goto LABEL_40;
  }
  uint64_t v74 = sub_13324();
  sub_12EE8(v74, v71, &qword_E7D18);
  sub_12F44(v73, (void (*)(void))type metadata accessor for ImportantEventInfo);
  sub_130E4(v71, 1, v72);
  if (v77) {
    goto LABEL_36;
  }
  uint64_t v75 = *(void *)(v0 + 328);
  uint64_t v76 = *(void *)(v0 + 264);
  sub_12FE4(*(void *)(v0 + 488), &qword_E7D18);
  sub_12EE8(v76, v75, &qword_E7D10);
  uint64_t result = sub_130E4(v75, 1, v49);
  if (v77) {
    goto LABEL_52;
  }
  uint64_t v78 = *(void *)(v0 + 480);
  uint64_t v79 = *(void *)(v0 + 328);
  uint64_t v113 = v49;
  uint64_t v80 = sub_13324();
  sub_12EE8(v80, v78, &qword_E7D18);
  sub_12F44(v79, (void (*)(void))type metadata accessor for ImportantEventInfo);
  uint64_t result = sub_13048();
  if (v77)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v81 = *(uint64_t **)(v0 + 480);
  uint64_t v82 = *(void *)(v0 + 432);
  uint64_t v83 = *(void *)(v0 + 424);
  uint64_t v85 = *(void *)(v0 + 384);
  uint64_t v84 = *(void *)(v0 + 392);
  uint64_t v119 = *(void *)(v0 + 376);
  uint64_t v120 = *(void *)(v0 + 440);
  uint64_t v86 = *v81;
  uint64_t v87 = v81[1];
  swift_bridgeObjectRetain();
  sub_12F44((uint64_t)v81, (void (*)(void))type metadata accessor for CalendarEvent);
  *(void *)(v121 + 224) = v86;
  *(void *)(v121 + 232) = v87;
  uint64_t v0 = v121;
  sub_B14D0();
  sub_12E9C();
  sub_B33D0();
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v119);
  swift_bridgeObjectRelease();
  sub_131D4();
  v115[69] = v83;
  v88 = sub_7590(v67);
  uint64_t v89 = v83;
  uint64_t v23 = v115;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v82 + 32))(v88, v120, v89);
  uint64_t v49 = v113;
LABEL_40:
  uint64_t v90 = *(void *)(v0 + 320);
  v23[70] = 0xD000000000000018;
  sub_13150();
  v23[71] = v91;
  sub_12EE8(v92, v90, &qword_E7D10);
  int v93 = sub_C844(v90, 1, v49);
  uint64_t v94 = *(void *)(v0 + 472);
  uint64_t v95 = *(void *)(v0 + 400);
  uint64_t v96 = *(void *)(v0 + 320);
  if (v93 != 1)
  {
    uint64_t v97 = sub_13324();
    sub_12EE8(v97, v94, &qword_E7D18);
    sub_12F44(v96, (void (*)(void))type metadata accessor for ImportantEventInfo);
    sub_130E4(v94, 1, v95);
    if (v77) {
      goto LABEL_44;
    }
    uint64_t v98 = *(void *)(v0 + 312);
    uint64_t v99 = *(void *)(v0 + 264);
    sub_12FE4(*(void *)(v0 + 472), &qword_E7D18);
    sub_12EE8(v99, v98, &qword_E7D10);
    uint64_t result = sub_130E4(v98, 1, v49);
    if (!v100)
    {
      uint64_t v101 = *(void *)(v0 + 464);
      uint64_t v102 = *(void *)(v0 + 312);
      uint64_t v103 = sub_13324();
      sub_12EE8(v103, v101, &qword_E7D18);
      sub_12F44(v102, (void (*)(void))type metadata accessor for ImportantEventInfo);
      uint64_t result = sub_13048();
      if (!v77)
      {
        uint64_t v104 = *(void *)(v0 + 464);
        uint64_t v105 = sub_13358();
        uint64_t v106 = sub_13078();
        v107(v106);
        sub_12F44(v104, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_132C4();
        uint64_t v108 = sub_1323C();
        v109(v108);
        uint64_t v23 = v115;
        v115[75] = v105;
        v115[72] = v104;
        goto LABEL_48;
      }
LABEL_55:
      __break(1u);
      return result;
    }
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  sub_12FE4(*(void *)(v0 + 320), &qword_E7D10);
  sub_13204(v94);
LABEL_44:
  sub_12FE4(*(void *)(v0 + 472), &qword_E7D18);
  *((_OWORD *)v23 + 36) = 0u;
  *((_OWORD *)v23 + 37) = 0u;
LABEL_48:
  uint64_t v110 = *(void *)(*(void *)(v0 + 288) + 16);
  uint64_t v111 = (void *)sub_133AC();
  *(void *)(v0 + 520) = v111;
  *uint64_t v111 = v0;
  v111[1] = sub_12848;
  uint64_t v112 = *(void *)(v0 + 280);
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))v121)(3, v23, v112, v110);
}

uint64_t sub_12848(uint64_t a1)
{
  sub_7FC4();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_1306C();
  sub_13190();
  uint64_t v2 = v1;
  sub_AB94();
  void *v3 = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
  return v4(a1);
}

uint64_t sub_12B14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin25CalendarTemplatingService_logger;
  uint64_t v6 = qword_E6D68;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_B2D30();
  uint64_t v8 = sub_B378(v7, (uint64_t)qword_F5390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v2 + v5, v8, v7);
  swift_release();
  *(void *)(v2 + 16) = a2;
  sub_74F8(a1);
  return v2;
}

uint64_t sub_12BF0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin25CalendarTemplatingService_logger;
  sub_B2D30();
  sub_79FC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);

  return v4(v1, v2);
}

uint64_t sub_12C54()
{
  swift_release();
  sub_B2D30();
  sub_79FC();
  sub_131C8();
  v1();
  uint64_t v2 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v2, v3);
}

uint64_t sub_12CF0()
{
  return type metadata accessor for CalendarTemplatingService();
}

uint64_t type metadata accessor for CalendarTemplatingService()
{
  uint64_t result = qword_E7C48;
  if (!qword_E7C48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_12D40()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_12DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_12E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_12E9C()
{
  unint64_t result = qword_E7F50;
  if (!qword_E7F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7F50);
  }
  return result;
}

uint64_t sub_12EE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_7424(a3);
  sub_79FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_12F44(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_79FC();
  sub_131C8();
  v3();
  return a1;
}

unint64_t sub_12F98()
{
  unint64_t result = qword_E7D30;
  if (!qword_E7D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7D30);
  }
  return result;
}

uint64_t sub_12FE4(uint64_t a1, uint64_t *a2)
{
  sub_7424(a2);
  sub_79FC();
  sub_131C8();
  v3();
  return a1;
}

ValueMetadata *type metadata accessor for CalendarTemplatingError()
{
  return &type metadata for CalendarTemplatingError;
}

uint64_t sub_13048()
{
  return sub_C844(v1, 1, v0);
}

uint64_t sub_13078()
{
  return v0;
}

size_t sub_13090@<X0>(uint64_t a1@<X8>)
{
  return sub_85970(0, a1 + 1, 1);
}

double sub_130B0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6576456C61746F74;
  a1[2].n128_u64[1] = 0xEF746E756F43746ELL;
  return (double)*(uint64_t *)(v2 + 24);
}

uint64_t sub_130E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_C844(a1, a2, a3);
}

uint64_t sub_13118()
{
  return swift_task_alloc();
}

uint64_t sub_13134@<X0>(uint64_t a1@<X8>)
{
  return a1 + *(void *)(v1 + 72) * v2;
}

size_t sub_1315C@<X0>(unint64_t a1@<X8>)
{
  return sub_85970(a1 > 1, v1, 1);
}

uint64_t sub_131D4()
{
  return sub_B2C20();
}

uint64_t sub_131EC()
{
  return swift_task_alloc();
}

uint64_t sub_13204(uint64_t a1)
{
  return sub_AA40(a1, 1, 1, v1);
}

uint64_t sub_13220()
{
  return v0;
}

uint64_t sub_1323C()
{
  return v0;
}

uint64_t sub_13258@<X0>(uint64_t a1@<X8>)
{
  return a1 + *(void *)(v1 + 72) * v2;
}

uint64_t sub_13294(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_132A0()
{
  return 0;
}

uint64_t sub_132AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_12EE8(v4, v3, a3);
}

uint64_t sub_132C4()
{
  return sub_9B1D8();
}

uint64_t sub_132DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 184) = (a2 - 32) | 0x8000000000000000;
  *(unsigned char *)(result + 192) = *(unsigned char *)(v2 + 44);
  return result;
}

uint64_t sub_132F4()
{
  return sub_C844(v0, 1, v1);
}

uint64_t sub_13324()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_13358()
{
  return sub_B2B40();
}

uint64_t sub_13378()
{
  return sub_B2B40();
}

uint64_t sub_13398@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 136) = (a2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_133AC()
{
  return swift_task_alloc();
}

void *sub_1341C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(void *)(a1 + 32) = a2[4];
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 29) = *(_OWORD *)((char *)a2 + 29);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    size_t v11 = (void *)((char *)v4 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for ImportantEventInfo(0);
    if (sub_C844((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_7424(&qword_E7D10);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *size_t v11 = *v12;
      uint64_t v15 = *(int *)(v13 + 20);
      uint64_t v16 = (void *)((char *)v11 + v15);
      uint64_t v17 = (void *)((char *)v12 + v15);
      uint64_t v18 = type metadata accessor for CalendarEvent(0);
      swift_bridgeObjectRetain();
      if (sub_C844((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_7424(&qword_E7D18);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v20;
        uint64_t v21 = *(int *)(v18 + 20);
        uint64_t v49 = (char *)v17 + v21;
        int v50 = (char *)v16 + v21;
        uint64_t v22 = sub_B17F0();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v50, v49, v22);
        uint64_t v23 = *(int *)(v18 + 24);
        uint64_t v24 = (char *)v16 + v23;
        uint64_t v25 = (char *)v17 + v23;
        uint64_t v26 = sub_B1700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        sub_AA40((uint64_t)v16, 0, 1, v18);
      }
      sub_AA40((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v27 = *(int *)(a3 + 24);
    unint64_t v28 = (char *)v4 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    uint64_t v30 = sub_B17F0();
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
    v31(v28, v29, v30);
    id v32 = (int *)type metadata accessor for DBCalendarState();
    *(void *)&v28[v32[5]] = *(void *)(v29 + v32[5]);
    uint64_t v33 = v32[6];
    uint64_t v34 = &v28[v33];
    uint64_t v35 = (const void *)(v29 + v33);
    swift_bridgeObjectRetain();
    if (sub_C844((uint64_t)v35, 1, v30))
    {
      uint64_t v36 = sub_7424(&qword_E7D38);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v31(v34, (uint64_t)v35, v30);
      sub_AA40((uint64_t)v34, 0, 1, v30);
    }
    *(void *)&v28[v32[7]] = *(void *)(v29 + v32[7]);
    uint64_t v37 = v32[8];
    uint64_t v38 = &v28[v37];
    uint64_t v39 = v29 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = *(unsigned char *)(v39 + 8);
    *(void *)&v28[v32[9]] = *(void *)(v29 + v32[9]);
    *(void *)&v28[v32[10]] = *(void *)(v29 + v32[10]);
    uint64_t v40 = v32[11];
    uint64_t v41 = &v28[v40];
    uint64_t v42 = (const void *)(v29 + v40);
    swift_bridgeObjectRetain();
    if (sub_C844((uint64_t)v42, 1, v30))
    {
      uint64_t v43 = sub_7424(&qword_E7D38);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v31(v41, (uint64_t)v42, v30);
      sub_AA40((uint64_t)v41, 0, 1, v30);
    }
    uint64_t v44 = v32[12];
    uint64_t v45 = &v28[v44];
    uint64_t v46 = v29 + v44;
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = *(unsigned char *)(v46 + 8);
  }
  return v4;
}

uint64_t type metadata accessor for ImportantEventInfo(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_E7ED0);
}

uint64_t type metadata accessor for CalendarEvent(uint64_t a1)
{
  return sub_F470(a1, qword_E7E38);
}

uint64_t sub_138A8(void *a1, uint64_t a2)
{
  if (*a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = (uint64_t)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ImportantEventInfo(0);
  if (!sub_C844(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for CalendarEvent(0);
    if (!sub_C844(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + *(int *)(v7 + 20);
      uint64_t v9 = sub_B17F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      uint64_t v10 = v6 + *(int *)(v7 + 24);
      uint64_t v11 = sub_B1700();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }
  uint64_t v12 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v13 = sub_B17F0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
  v18(v12, v13);
  uint64_t v14 = type metadata accessor for DBCalendarState();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t)&v12[*(int *)(v14 + 24)];
  if (!sub_C844(v15, 1, v13)) {
    v18((char *)v15, v13);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)&v12[*(int *)(v14 + 44)];
  uint64_t result = sub_C844(v16, 1, v13);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v18)(v16, v13);
  }
  return result;
}

uint64_t sub_13AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for ImportantEventInfo(0);
  if (sub_C844((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_7424(&qword_E7D10);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v9 = *v10;
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = (void *)((char *)v9 + v13);
    uint64_t v15 = (void *)((char *)v10 + v13);
    uint64_t v16 = type metadata accessor for CalendarEvent(0);
    swift_bridgeObjectRetain();
    if (sub_C844((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_7424(&qword_E7D18);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v18;
      uint64_t v19 = *(int *)(v16 + 20);
      char v47 = (char *)v15 + v19;
      uint64_t v48 = (char *)v14 + v19;
      uint64_t v20 = sub_B17F0();
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v48, v47, v20);
      uint64_t v21 = *(int *)(v16 + 24);
      uint64_t v22 = (char *)v14 + v21;
      uint64_t v23 = (char *)v15 + v21;
      uint64_t v24 = sub_B1700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      sub_AA40((uint64_t)v14, 0, 1, v16);
    }
    sub_AA40((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_B17F0();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  v29(v26, v27, v28);
  uint64_t v30 = (int *)type metadata accessor for DBCalendarState();
  *(void *)(v26 + v30[5]) = *(void *)(v27 + v30[5]);
  uint64_t v31 = v30[6];
  id v32 = (void *)(v26 + v31);
  uint64_t v33 = (const void *)(v27 + v31);
  swift_bridgeObjectRetain();
  if (sub_C844((uint64_t)v33, 1, v28))
  {
    uint64_t v34 = sub_7424(&qword_E7D38);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    v29((uint64_t)v32, (uint64_t)v33, v28);
    sub_AA40((uint64_t)v32, 0, 1, v28);
  }
  *(void *)(v26 + v30[7]) = *(void *)(v27 + v30[7]);
  uint64_t v35 = v30[8];
  uint64_t v36 = v26 + v35;
  uint64_t v37 = v27 + v35;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(void *)(v26 + v30[9]) = *(void *)(v27 + v30[9]);
  *(void *)(v26 + v30[10]) = *(void *)(v27 + v30[10]);
  uint64_t v38 = v30[11];
  uint64_t v39 = (void *)(v26 + v38);
  uint64_t v40 = (const void *)(v27 + v38);
  swift_bridgeObjectRetain();
  if (sub_C844((uint64_t)v40, 1, v28))
  {
    uint64_t v41 = sub_7424(&qword_E7D38);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    v29((uint64_t)v39, (uint64_t)v40, v28);
    sub_AA40((uint64_t)v39, 0, 1, v28);
  }
  uint64_t v42 = v30[12];
  uint64_t v43 = v26 + v42;
  uint64_t v44 = v27 + v42;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  return a1;
}

uint64_t sub_13ECC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *a2;
  if (v6)
  {
    if (v7)
    {
      *(void *)a1 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = a2[4];
      *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
      *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
      *(unsigned char *)(a1 + 42) = *((unsigned char *)a2 + 42);
      *(unsigned char *)(a1 + 43) = *((unsigned char *)a2 + 43);
      *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
    }
    else
    {
      sub_146DC(a1);
      long long v8 = *(_OWORD *)((char *)a2 + 29);
      long long v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 29) = v8;
    }
  }
  else if (v7)
  {
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
    *(unsigned char *)(a1 + 42) = *((unsigned char *)a2 + 42);
    *(unsigned char *)(a1 + 43) = *((unsigned char *)a2 + 43);
    *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)a2;
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 29) = *(_OWORD *)((char *)a2 + 29);
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for ImportantEventInfo(0);
  int v16 = sub_C844((uint64_t)v13, 1, v15);
  int v17 = sub_C844((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v13 = *v14;
      uint64_t v18 = *(int *)(v15 + 20);
      uint64_t v19 = (void *)((char *)v13 + v18);
      uint64_t v20 = (void *)((char *)v14 + v18);
      uint64_t v21 = type metadata accessor for CalendarEvent(0);
      swift_bridgeObjectRetain();
      if (sub_C844((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_7424(&qword_E7D18);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        *uint64_t v19 = *v20;
        v19[1] = v20[1];
        uint64_t v41 = *(int *)(v21 + 20);
        uint64_t v84 = (char *)v20 + v41;
        uint64_t v86 = (char *)v19 + v41;
        uint64_t v42 = sub_B17F0();
        uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        v82(v86, v84, v42);
        uint64_t v43 = *(int *)(v21 + 24);
        uint64_t v44 = (char *)v19 + v43;
        uint64_t v45 = (char *)v20 + v43;
        uint64_t v46 = sub_B1700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        sub_AA40((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v39 = (uint64_t)v13;
      uint64_t v40 = v15;
      goto LABEL_21;
    }
    goto LABEL_14;
  }
  if (v17)
  {
    sub_1470C((uint64_t)v13, (void (*)(void))type metadata accessor for ImportantEventInfo);
LABEL_14:
    size_t v23 = *(void *)(*(void *)(sub_7424(&qword_E7D10) - 8) + 64);
    uint64_t v24 = v13;
    uint64_t v25 = v14;
LABEL_15:
    memcpy(v24, v25, v23);
    goto LABEL_22;
  }
  *uint64_t v13 = *v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(v15 + 20);
  uint64_t v27 = (void *)((char *)v13 + v26);
  uint64_t v28 = (void *)((char *)v14 + v26);
  uint64_t v29 = type metadata accessor for CalendarEvent(0);
  int v30 = sub_C844((uint64_t)v27, 1, v29);
  int v31 = sub_C844((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      uint64_t v32 = *(int *)(v29 + 20);
      uint64_t v83 = (char *)v28 + v32;
      uint64_t v85 = (char *)v27 + v32;
      uint64_t v33 = sub_B17F0();
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v34(v85, v83, v33);
      uint64_t v35 = *(int *)(v29 + 24);
      uint64_t v36 = (char *)v27 + v35;
      uint64_t v37 = (char *)v28 + v35;
      uint64_t v38 = sub_B1700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = (uint64_t)v27;
      uint64_t v40 = v29;
LABEL_21:
      sub_AA40(v39, 0, 1, v40);
      goto LABEL_22;
    }
    goto LABEL_39;
  }
  if (v31)
  {
    sub_1470C((uint64_t)v27, (void (*)(void))type metadata accessor for CalendarEvent);
LABEL_39:
    size_t v23 = *(void *)(*(void *)(sub_7424(&qword_E7D18) - 8) + 64);
    uint64_t v24 = v27;
    uint64_t v25 = v28;
    goto LABEL_15;
  }
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = *(int *)(v29 + 20);
  uint64_t v75 = (char *)v27 + v74;
  uint64_t v76 = (char *)v28 + v74;
  uint64_t v77 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 24))(v75, v76, v77);
  uint64_t v78 = *(int *)(v29 + 24);
  uint64_t v79 = (char *)v27 + v78;
  uint64_t v80 = (char *)v28 + v78;
  uint64_t v81 = sub_B1700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
LABEL_22:
  uint64_t v47 = *(int *)(a3 + 24);
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t)a2 + v47;
  uint64_t v50 = sub_B17F0();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 24);
  v87(v48, v49, v50);
  uint64_t v52 = (int *)type metadata accessor for DBCalendarState();
  *(void *)(v48 + v52[5]) = *(void *)(v49 + v52[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = v52[6];
  size_t v54 = (void *)(v48 + v53);
  uint64_t v55 = (const void *)(v49 + v53);
  int v56 = sub_C844(v48 + v53, 1, v50);
  int v57 = sub_C844((uint64_t)v55, 1, v50);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v54, v55, v50);
      sub_AA40((uint64_t)v54, 0, 1, v50);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v57)
  {
    (*(void (**)(void *, uint64_t))(v51 + 8))(v54, v50);
LABEL_27:
    uint64_t v58 = sub_7424(&qword_E7D38);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  v87((uint64_t)v54, (uint64_t)v55, v50);
LABEL_28:
  *(void *)(v48 + v52[7]) = *(void *)(v49 + v52[7]);
  uint64_t v59 = v52[8];
  uint64_t v60 = v48 + v59;
  unint64_t v61 = (uint64_t *)(v49 + v59);
  uint64_t v62 = *v61;
  *(unsigned char *)(v60 + 8) = *((unsigned char *)v61 + 8);
  *(void *)uint64_t v60 = v62;
  *(void *)(v48 + v52[9]) = *(void *)(v49 + v52[9]);
  *(void *)(v48 + v52[10]) = *(void *)(v49 + v52[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v52[11];
  uint64_t v64 = (void *)(v48 + v63);
  uint64_t v65 = (const void *)(v49 + v63);
  int v66 = sub_C844(v48 + v63, 1, v50);
  int v67 = sub_C844((uint64_t)v65, 1, v50);
  if (!v66)
  {
    if (!v67)
    {
      v87((uint64_t)v64, (uint64_t)v65, v50);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v51 + 8))(v64, v50);
    goto LABEL_33;
  }
  if (v67)
  {
LABEL_33:
    uint64_t v68 = sub_7424(&qword_E7D38);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v64, v65, v50);
  sub_AA40((uint64_t)v64, 0, 1, v50);
LABEL_34:
  uint64_t v69 = v52[12];
  uint64_t v70 = v48 + v69;
  uint64_t v71 = (uint64_t *)(v49 + v69);
  uint64_t v72 = *v71;
  *(unsigned char *)(v70 + 8) = *((unsigned char *)v71 + 8);
  *(void *)uint64_t v70 = v72;
  return a1;
}

uint64_t sub_146DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1470C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_79FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

_OWORD *sub_14764(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 29) = *(_OWORD *)((char *)a2 + 29);
  uint64_t v7 = *(int *)(a3 + 20);
  long long v8 = (void *)((char *)a1 + v7);
  long long v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for ImportantEventInfo(0);
  if (sub_C844((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_7424(&qword_E7D10);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *long long v8 = *v9;
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = (_OWORD *)((char *)v8 + v12);
    uint64_t v14 = (_OWORD *)((char *)v9 + v12);
    uint64_t v15 = type metadata accessor for CalendarEvent(0);
    if (sub_C844((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_7424(&qword_E7D18);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      *uint64_t v13 = *v14;
      uint64_t v17 = *(int *)(v15 + 20);
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = (char *)v14 + v17;
      uint64_t v20 = sub_B17F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      uint64_t v21 = *(int *)(v15 + 24);
      uint64_t v22 = (char *)v13 + v21;
      size_t v23 = (char *)v14 + v21;
      uint64_t v24 = sub_B1700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      sub_AA40((uint64_t)v13, 0, 1, v15);
    }
    sub_AA40((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_B17F0();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
  v29(v26, v27, v28);
  int v30 = (int *)type metadata accessor for DBCalendarState();
  *(void *)&v26[v30[5]] = *(void *)&v27[v30[5]];
  uint64_t v31 = v30[6];
  uint64_t v32 = &v26[v31];
  uint64_t v33 = &v27[v31];
  if (sub_C844((uint64_t)&v27[v31], 1, v28))
  {
    uint64_t v34 = sub_7424(&qword_E7D38);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    v29(v32, v33, v28);
    sub_AA40((uint64_t)v32, 0, 1, v28);
  }
  *(void *)&v26[v30[7]] = *(void *)&v27[v30[7]];
  uint64_t v35 = v30[8];
  uint64_t v36 = &v26[v35];
  uint64_t v37 = &v27[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  *(void *)&v26[v30[9]] = *(void *)&v27[v30[9]];
  *(void *)&v26[v30[10]] = *(void *)&v27[v30[10]];
  uint64_t v38 = v30[11];
  uint64_t v39 = &v26[v38];
  uint64_t v40 = &v27[v38];
  if (sub_C844((uint64_t)&v27[v38], 1, v28))
  {
    uint64_t v41 = sub_7424(&qword_E7D38);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    v29(v39, v40, v28);
    sub_AA40((uint64_t)v39, 0, 1, v28);
  }
  uint64_t v42 = v30[12];
  uint64_t v43 = &v26[v42];
  uint64_t v44 = &v27[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  return a1;
}

uint64_t sub_14AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a1)
  {
    if (*(void *)a2)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
      *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
      *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
      *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
      goto LABEL_6;
    }
    sub_146DC(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
LABEL_6:
  uint64_t v7 = *(int *)(a3 + 20);
  long long v8 = (void *)(a1 + v7);
  long long v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImportantEventInfo(0);
  int v11 = sub_C844((uint64_t)v8, 1, v10);
  int v12 = sub_C844((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *long long v8 = *v9;
      uint64_t v13 = *(int *)(v10 + 20);
      uint64_t v14 = (_OWORD *)((char *)v8 + v13);
      uint64_t v15 = (_OWORD *)((char *)v9 + v13);
      uint64_t v16 = type metadata accessor for CalendarEvent(0);
      if (sub_C844((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_7424(&qword_E7D18);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *uint64_t v14 = *v15;
        uint64_t v37 = *(int *)(v16 + 20);
        uint64_t v38 = (char *)v14 + v37;
        uint64_t v39 = (char *)v15 + v37;
        uint64_t v40 = sub_B17F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        uint64_t v41 = *(int *)(v16 + 24);
        uint64_t v42 = (char *)v14 + v41;
        uint64_t v43 = (char *)v15 + v41;
        uint64_t v44 = sub_B1700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        sub_AA40((uint64_t)v14, 0, 1, v16);
      }
      uint64_t v35 = (uint64_t)v8;
      uint64_t v36 = v10;
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  if (v12)
  {
    sub_1470C((uint64_t)v8, (void (*)(void))type metadata accessor for ImportantEventInfo);
LABEL_12:
    size_t v18 = *(void *)(*(void *)(sub_7424(&qword_E7D10) - 8) + 64);
    uint64_t v19 = v8;
    uint64_t v20 = v9;
LABEL_13:
    memcpy(v19, v20, v18);
    goto LABEL_20;
  }
  *long long v8 = *v9;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(int *)(v10 + 20);
  uint64_t v22 = (uint64_t)v8 + v21;
  uint64_t v23 = (uint64_t)v9 + v21;
  uint64_t v24 = type metadata accessor for CalendarEvent(0);
  int v25 = sub_C844(v22, 1, v24);
  int v26 = sub_C844(v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      uint64_t v27 = *(int *)(v24 + 20);
      uint64_t v28 = v22 + v27;
      uint64_t v29 = v23 + v27;
      uint64_t v30 = sub_B17F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      uint64_t v31 = *(int *)(v24 + 24);
      uint64_t v32 = v22 + v31;
      uint64_t v33 = v23 + v31;
      uint64_t v34 = sub_B1700();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      uint64_t v35 = v22;
      uint64_t v36 = v24;
LABEL_19:
      sub_AA40(v35, 0, 1, v36);
      goto LABEL_20;
    }
    goto LABEL_37;
  }
  if (v26)
  {
    sub_1470C(v22, (void (*)(void))type metadata accessor for CalendarEvent);
LABEL_37:
    size_t v18 = *(void *)(*(void *)(sub_7424(&qword_E7D18) - 8) + 64);
    uint64_t v19 = (void *)v22;
    uint64_t v20 = (const void *)v23;
    goto LABEL_13;
  }
  uint64_t v70 = *(void *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = v70;
  swift_bridgeObjectRelease();
  uint64_t v71 = *(int *)(v24 + 20);
  uint64_t v72 = v22 + v71;
  uint64_t v73 = v23 + v71;
  uint64_t v74 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
  uint64_t v75 = *(int *)(v24 + 24);
  uint64_t v76 = v22 + v75;
  uint64_t v77 = v23 + v75;
  uint64_t v78 = sub_B1700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
LABEL_20:
  uint64_t v45 = *(int *)(a3 + 24);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_B17F0();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 40);
  v79(v46, v47, v48);
  uint64_t v50 = (int *)type metadata accessor for DBCalendarState();
  *(void *)(v46 + v50[5]) = *(void *)(v47 + v50[5]);
  swift_bridgeObjectRelease();
  uint64_t v51 = v50[6];
  uint64_t v52 = (void *)(v46 + v51);
  uint64_t v53 = (const void *)(v47 + v51);
  int v54 = sub_C844(v46 + v51, 1, v48);
  int v55 = sub_C844((uint64_t)v53, 1, v48);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v52, v53, v48);
      sub_AA40((uint64_t)v52, 0, 1, v48);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v49 + 8))(v52, v48);
LABEL_25:
    uint64_t v56 = sub_7424(&qword_E7D38);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_26;
  }
  v79((uint64_t)v52, (uint64_t)v53, v48);
LABEL_26:
  *(void *)(v46 + v50[7]) = *(void *)(v47 + v50[7]);
  uint64_t v57 = v50[8];
  uint64_t v58 = v46 + v57;
  uint64_t v59 = v47 + v57;
  *(void *)uint64_t v58 = *(void *)v59;
  *(unsigned char *)(v58 + 8) = *(unsigned char *)(v59 + 8);
  *(void *)(v46 + v50[9]) = *(void *)(v47 + v50[9]);
  *(void *)(v46 + v50[10]) = *(void *)(v47 + v50[10]);
  swift_bridgeObjectRelease();
  uint64_t v60 = v50[11];
  unint64_t v61 = (void *)(v46 + v60);
  uint64_t v62 = (const void *)(v47 + v60);
  int v63 = sub_C844(v46 + v60, 1, v48);
  int v64 = sub_C844((uint64_t)v62, 1, v48);
  if (!v63)
  {
    if (!v64)
    {
      v79((uint64_t)v61, (uint64_t)v62, v48);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v49 + 8))(v61, v48);
    goto LABEL_31;
  }
  if (v64)
  {
LABEL_31:
    uint64_t v65 = sub_7424(&qword_E7D38);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v61, v62, v48);
  sub_AA40((uint64_t)v61, 0, 1, v48);
LABEL_32:
  uint64_t v66 = v50[12];
  uint64_t v67 = v46 + v66;
  uint64_t v68 = v47 + v66;
  *(void *)uint64_t v67 = *(void *)v68;
  *(unsigned char *)(v67 + 8) = *(unsigned char *)(v68 + 8);
  return a1;
}

uint64_t sub_15220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15234);
}

uint64_t sub_15234(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_7424(&qword_E7D10);
    sub_176F8();
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v11 = type metadata accessor for DBCalendarState();
      uint64_t v12 = *(int *)(a3 + 24);
    }
    return sub_C844((uint64_t)a1 + v12, a2, v11);
  }
}

uint64_t sub_152F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15304);
}

void *sub_15304(void *result, unsigned int a2, int a3, uint64_t a4)
{
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    sub_7424(&qword_E7D10);
    sub_176F8();
    if (*(_DWORD *)(v6 + 84) == a3)
    {
      uint64_t v7 = *(int *)(a4 + 20);
    }
    else
    {
      type metadata accessor for DBCalendarState();
      uint64_t v7 = *(int *)(a4 + 24);
    }
    uint64_t v8 = sub_17710(v7);
    return (void *)sub_AA40(v8, v9, v10, v11);
  }
  return result;
}

uint64_t type metadata accessor for CalendarPreprocessingResult(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_E7D98);
}

void sub_153C8()
{
  sub_16AD4(319, (unint64_t *)&unk_E7DA8, (void (*)(uint64_t))type metadata accessor for ImportantEventInfo);
  if (v0 <= 0x3F)
  {
    type metadata accessor for DBCalendarState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for UpcomingEventInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for UpcomingEventInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpcomingEventInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpcomingEventInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  return a1;
}

__n128 initializeWithTake for UpcomingEventInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for UpcomingEventInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  return a1;
}

uint64_t getEnumTagSinglePayload for UpcomingEventInfo(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 45))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpcomingEventInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 45) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 45) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpcomingEventInfo()
{
  return &type metadata for UpcomingEventInfo;
}

uint64_t *sub_1574C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_B17F0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_B1700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_1588C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_B1700();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_1594C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_B17F0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_B1700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *sub_15A3C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_B1700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_15B28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_B1700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *sub_15BFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_B1700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_15CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15CEC);
}

uint64_t sub_15CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_17720(*(void *)(a1 + 8));
  }
  sub_B17F0();
  sub_176F8();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v9 = sub_B1700();
    uint64_t v10 = *(int *)(a3 + 24);
  }

  return sub_C844(a1 + v10, a2, v9);
}

uint64_t sub_15D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15DA0);
}

void sub_15DA0()
{
  sub_17754();
  if (v4)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v5 = v3;
    int v6 = v2;
    sub_B17F0();
    sub_176F8();
    if (*(_DWORD *)(v7 + 84) == v6)
    {
      uint64_t v8 = *(int *)(v5 + 20);
    }
    else
    {
      sub_B1700();
      uint64_t v8 = *(int *)(v5 + 24);
    }
    uint64_t v9 = sub_17710(v8);
    sub_AA40(v9, v10, v11, v12);
  }
}

uint64_t sub_15E34()
{
  uint64_t result = sub_B17F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_B1700();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_15F08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for CalendarEvent(0);
    swift_bridgeObjectRetain();
    if (sub_C844((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_7424(&qword_E7D18);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v11;
      uint64_t v12 = *(int *)(v9 + 20);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_B17F0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      uint64_t v17 = *(int *)(v9 + 24);
      size_t v18 = (char *)v7 + v17;
      uint64_t v19 = (char *)v8 + v17;
      uint64_t v20 = sub_B1700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      sub_AA40((uint64_t)v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_160BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for CalendarEvent(0);
  uint64_t result = sub_C844(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_B17F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = v4 + *(int *)(v5 + 24);
    uint64_t v10 = sub_B1700();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  return result;
}

void *sub_161BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for CalendarEvent(0);
  swift_bridgeObjectRetain();
  if (sub_C844((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_7424(&qword_E7D18);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v9;
    uint64_t v10 = *(int *)(v7 + 20);
    uint64_t v11 = (char *)v5 + v10;
    uint64_t v12 = (char *)v6 + v10;
    uint64_t v13 = sub_B17F0();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = *(int *)(v7 + 24);
    uint64_t v16 = (char *)v5 + v15;
    uint64_t v17 = (char *)v6 + v15;
    uint64_t v18 = sub_B1700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    sub_AA40((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *sub_16324(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for CalendarEvent(0);
  int v10 = sub_C844((uint64_t)v7, 1, v9);
  int v11 = sub_C844((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(v9 + 20);
      uint64_t v24 = (char *)v7 + v23;
      int v25 = (char *)v8 + v23;
      uint64_t v26 = sub_B17F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
      uint64_t v27 = *(int *)(v9 + 24);
      uint64_t v28 = (char *)v7 + v27;
      uint64_t v29 = (char *)v8 + v27;
      uint64_t v30 = sub_B1700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
      return a1;
    }
    sub_1470C((uint64_t)v7, (void (*)(void))type metadata accessor for CalendarEvent);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v21 = sub_7424(&qword_E7D18);
    memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = sub_B17F0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  uint64_t v17 = *(int *)(v9 + 24);
  uint64_t v18 = (char *)v7 + v17;
  uint64_t v19 = (char *)v8 + v17;
  uint64_t v20 = sub_B1700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  sub_AA40((uint64_t)v7, 0, 1, v9);
  return a1;
}

void *sub_16590(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for CalendarEvent(0);
  if (sub_C844((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_7424(&qword_E7D18);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *uint64_t v5 = *v6;
    uint64_t v9 = *(int *)(v7 + 20);
    int v10 = (char *)v5 + v9;
    int v11 = (char *)v6 + v9;
    uint64_t v12 = sub_B17F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    uint64_t v13 = *(int *)(v7 + 24);
    uint64_t v14 = (char *)v5 + v13;
    uint64_t v15 = (char *)v6 + v13;
    uint64_t v16 = sub_B1700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    sub_AA40((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *sub_166D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for CalendarEvent(0);
  int v10 = sub_C844((uint64_t)v7, 1, v9);
  int v11 = sub_C844((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v22 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(v9 + 20);
      uint64_t v24 = (char *)v7 + v23;
      int v25 = (char *)v8 + v23;
      uint64_t v26 = sub_B17F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      uint64_t v27 = *(int *)(v9 + 24);
      uint64_t v28 = (char *)v7 + v27;
      uint64_t v29 = (char *)v8 + v27;
      uint64_t v30 = sub_B1700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
      return a1;
    }
    sub_1470C((uint64_t)v7, (void (*)(void))type metadata accessor for CalendarEvent);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v20 = sub_7424(&qword_E7D18);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v9 + 24);
  uint64_t v17 = (char *)v7 + v16;
  uint64_t v18 = (char *)v8 + v16;
  uint64_t v19 = sub_B1700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  sub_AA40((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_16904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_16918);
}

uint64_t sub_16918(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_17720(*a1);
  }
  uint64_t v7 = sub_7424(&qword_E7D18);
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 20);

  return sub_C844(v8, a2, v7);
}

uint64_t sub_16998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_169AC);
}

void sub_169AC()
{
  sub_17754();
  if (v3)
  {
    *unint64_t v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    sub_7424(&qword_E7D18);
    uint64_t v5 = sub_17710(*(int *)(v4 + 20));
    sub_AA40(v5, v6, v7, v8);
  }
}

void sub_16A1C()
{
  sub_16AD4(319, (unint64_t *)&unk_E7EE0, (void (*)(uint64_t))type metadata accessor for CalendarEvent);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_16AD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_B3380();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_16B28(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = type metadata accessor for ImportantEventInfo(0);
  sub_79FC();
  __chkstk_darwin(v4);
  sub_17768();
  uint64_t v51 = (uint64_t *)v5;
  uint64_t v53 = sub_7424(&qword_E7F10);
  sub_79FC();
  __chkstk_darwin(v6);
  sub_17768();
  uint64_t v57 = v7;
  uint64_t v8 = sub_7424(&qword_E7D10);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v52 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v54 = (uint64_t)&v44 - v12;
  __chkstk_darwin(v11);
  uint64_t v55 = (uint64_t)&v44 - v13;
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  unint64_t v19 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32);
  uint64_t v21 = *(void *)a2;
  uint64_t v20 = *(void *)(a2 + 8);
  uint64_t v23 = *(void *)(a2 + 16);
  uint64_t v22 = *(void *)(a2 + 24);
  unint64_t v24 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32);
  uint64_t v25 = *(void *)(a2 + 32);
  if (!*(void *)a1)
  {
    if (!v21) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v32 = *(void *)a1;
    uint64_t v50 = *(void *)(a2 + 8);
    uint64_t v57 = v25;
    uint64_t v58 = v18;
    uint64_t v49 = v21;
    sub_175C4(v32);
    sub_175C4(v21);
    sub_17604(v14);
    sub_17604(v49);
    goto LABEL_15;
  }
  if (!v21) {
    goto LABEL_6;
  }
  v59[0] = *(void *)a1;
  v59[1] = v15;
  v59[2] = v17;
  v59[3] = v16;
  v59[4] = v18;
  char v60 = v19 & 1;
  v26.i64[0] = 0xFFFFFFFFFFLL;
  v26.i64[1] = 0xFFFFFFFFFFLL;
  uint64x2_t v27 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v19), v26);
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_BE9F0), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_BE9E0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v61 = vmovn_s16(v28).u32[0];
  v62[0] = v21;
  v62[1] = v20;
  v62[2] = v23;
  v62[3] = v22;
  v62[4] = v25;
  char v63 = v24 & 1;
  uint64x2_t v29 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v24), v26);
  int16x8_t v30 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v29, (uint64x2_t)xmmword_BE9F0), (int32x4_t)vshlq_u64(v29, (uint64x2_t)xmmword_BE9E0));
  *(int8x8_t *)v30.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v30), (int8x8_t)0x1000100010001);
  unsigned __int32 v64 = vmovn_s16(v30).u32[0];
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  uint64_t v47 = v17;
  uint64_t v48 = v16;
  uint64_t v58 = v18;
  sub_175C4(v14);
  sub_175C4(v21);
  char v31 = sub_170B0((uint64_t)v59, (uint64_t)v62);
  sub_17604(v21);
  sub_17604(v45);
  if ((v31 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_7:
  uint64_t v33 = type metadata accessor for CalendarPreprocessingResult(0);
  uint64_t v34 = v55;
  sub_12EE8(a1 + *(int *)(v33 + 20), v55, &qword_E7D10);
  uint64_t v35 = v54;
  sub_12EE8(a2 + *(int *)(v33 + 20), v54, &qword_E7D10);
  uint64_t v36 = v57;
  uint64_t v37 = v57 + *(int *)(v53 + 48);
  sub_12EE8(v34, v57, &qword_E7D10);
  sub_12EE8(v35, v37, &qword_E7D10);
  uint64_t v38 = v56;
  if (sub_C844(v36, 1, v56) != 1)
  {
    uint64_t v39 = v52;
    sub_12EE8(v36, (uint64_t)v52, &qword_E7D10);
    if (sub_C844(v37, 1, v38) == 1)
    {
      sub_17644(v35, &qword_E7D10);
      sub_17644(v34, &qword_E7D10);
      sub_1470C((uint64_t)v39, (void (*)(void))type metadata accessor for ImportantEventInfo);
      goto LABEL_12;
    }
    uint64_t v40 = v51;
    sub_17698(v37, (uint64_t)v51, (void (*)(void))type metadata accessor for ImportantEventInfo);
    BOOL v41 = sub_17184(v39, v40);
    sub_1470C((uint64_t)v40, (void (*)(void))type metadata accessor for ImportantEventInfo);
    sub_17644(v35, &qword_E7D10);
    sub_17644(v34, &qword_E7D10);
    sub_1470C((uint64_t)v39, (void (*)(void))type metadata accessor for ImportantEventInfo);
    sub_17644(v36, &qword_E7D10);
    if (v41) {
      goto LABEL_14;
    }
LABEL_15:
    char v42 = 0;
    return v42 & 1;
  }
  sub_17644(v35, &qword_E7D10);
  sub_17644(v34, &qword_E7D10);
  if (sub_C844(v37, 1, v38) != 1)
  {
LABEL_12:
    sub_17644(v36, &qword_E7F10);
    goto LABEL_15;
  }
  sub_17644(v36, &qword_E7D10);
LABEL_14:
  char v42 = sub_969DC(a1 + *(int *)(v33 + 24), a2 + *(int *)(v33 + 24));
  return v42 & 1;
}

uint64_t sub_170B0(uint64_t a1, uint64_t a2)
{
  if ((sub_2107C(*(void *)a1, *(void *)a2) & 1) != 0
    && (sub_2107C(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) != 0
    && *(void *)(a1 + 16) == *(void *)(a2 + 16)
    && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    && *(void *)(a1 + 32) == *(void *)(a2 + 32)
    && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 42) ^ *(unsigned __int8 *)(a2 + 42)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 43) ^ *(unsigned __int8 *)(a2 + 43)) & 1) == 0)
  {
    char v4 = ((*(unsigned char *)(a1 + 44) & 1) == 0) ^ *(unsigned char *)(a2 + 44);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

BOOL sub_17184(uint64_t *a1, uint64_t *a2)
{
  type metadata accessor for CalendarEvent(0);
  sub_79FC();
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_7424(&qword_E7F18);
  sub_79FC();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_7424(&qword_E7D18);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v27 - v16;
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v27 - v18;
  if ((sub_2107C(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for ImportantEventInfo(0);
  sub_12EE8((uint64_t)a1 + *(int *)(v20 + 20), (uint64_t)v19, &qword_E7D18);
  sub_12EE8((uint64_t)a2 + *(int *)(v20 + 20), (uint64_t)v17, &qword_E7D18);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v7 + 48)];
  sub_12EE8((uint64_t)v19, (uint64_t)v10, &qword_E7D18);
  sub_12EE8((uint64_t)v17, v21, &qword_E7D18);
  sub_17734((uint64_t)v10);
  if (v23)
  {
    sub_17644((uint64_t)v17, &qword_E7D18);
    sub_17644((uint64_t)v19, &qword_E7D18);
    sub_17734(v21);
    if (v23)
    {
      sub_17644((uint64_t)v10, &qword_E7D18);
      return 1;
    }
    unint64_t v24 = &qword_E7F18;
  }
  else
  {
    sub_12EE8((uint64_t)v10, (uint64_t)v14, &qword_E7D18);
    sub_17734(v21);
    if (v23)
    {
      unint64_t v24 = &qword_E7F18;
    }
    else
    {
      sub_17698(v21, (uint64_t)v6, (void (*)(void))type metadata accessor for CalendarEvent);
      BOOL v25 = *v14 == *v6 && v14[1] == v6[1];
      if (v25 || (sub_B37E0()) && (sub_B17B0())
      {
        char v26 = sub_B16B0();
        sub_1470C((uint64_t)v6, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_17644((uint64_t)v17, &qword_E7D18);
        sub_17644((uint64_t)v19, &qword_E7D18);
        sub_1470C((uint64_t)v14, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_17644((uint64_t)v10, &qword_E7D18);
        return (v26 & 1) != 0;
      }
      sub_1470C((uint64_t)v6, (void (*)(void))type metadata accessor for CalendarEvent);
      unint64_t v24 = &qword_E7D18;
    }
    sub_17644((uint64_t)v17, &qword_E7D18);
    sub_17644((uint64_t)v19, &qword_E7D18);
    sub_1470C((uint64_t)v14, (void (*)(void))type metadata accessor for CalendarEvent);
  }
  sub_17644((uint64_t)v10, v24);
  return 0;
}

uint64_t sub_17514(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_B37E0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for CalendarEvent(0);
  if ((sub_B17B0() & 1) == 0) {
    return 0;
  }

  return sub_B16B0();
}

uint64_t sub_175C4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_17604(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_17644(uint64_t a1, uint64_t *a2)
{
  sub_7424(a2);
  sub_79FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_17698(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_79FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_17710@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_17720@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t sub_17734(uint64_t a1)
{
  return sub_C844(a1, 1, v1);
}

uint64_t sub_1777C()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_F4E80);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_F4E80);
  if (qword_E6D70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F53A8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_17844(uint64_t a1)
{
  sub_12E9C();
  uint64_t v2 = sub_B3420();
  sub_18268(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    a1 = sub_B2FD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_17910()
{
  sub_B2360();
  sub_7870();
  uint64_t v61 = v2;
  uint64_t v62 = v1;
  __chkstk_darwin(v1);
  sub_7A0C();
  uint64_t v60 = v4 - v3;
  uint64_t v64 = sub_B2300();
  sub_7870();
  uint64_t v59 = v5;
  __chkstk_darwin(v6);
  sub_18E00();
  uint64_t v55 = v7;
  __chkstk_darwin(v8);
  uint64_t v58 = (char *)v51 - v9;
  uint64_t v63 = sub_B2330();
  sub_7870();
  uint64_t v57 = v10;
  __chkstk_darwin(v11);
  sub_18E00();
  uint64_t v54 = v12;
  __chkstk_darwin(v13);
  uint64_t v56 = (char *)v51 - v14;
  uint64_t v15 = sub_B22C0();
  __chkstk_darwin(v15 - 8);
  sub_7A0C();
  uint64_t v66 = sub_B2390();
  sub_7870();
  uint64_t v17 = v16;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v23 = (char *)v51 - v22;
  uint64_t v24 = sub_7424(&qword_E7F30);
  __chkstk_darwin(v24 - 8);
  sub_18DB0();
  sub_B2080();
  sub_21D48(0);
  sub_B1FF0();
  sub_21D48(0);
  sub_B2040();
  sub_7424(&qword_E7F38);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_BEC60;
  unint64_t v67 = sub_21D48(1);
  uint64_t v68 = v26;
  sub_18D8C();
  v69._countAndFlagsBits = sub_18DE0();
  sub_B3020(v69);
  swift_bridgeObjectRelease();
  uint64_t v27 = v68;
  *(void *)(v25 + 32) = v67;
  *(void *)(v25 + 40) = v27;
  unint64_t v67 = sub_21D48(1);
  uint64_t v68 = v28;
  sub_18D8C();
  v70._countAndFlagsBits = sub_B2FC0();
  sub_B3020(v70);
  swift_bridgeObjectRelease();
  uint64_t v29 = v68;
  *(void *)(v25 + 48) = v67;
  *(void *)(v25 + 56) = v29;
  unint64_t v67 = sub_21D48(1);
  uint64_t v68 = v30;
  sub_18D8C();
  v71._countAndFlagsBits = sub_B2FC0();
  sub_B3020(v71);
  swift_bridgeObjectRelease();
  uint64_t v31 = v68;
  *(void *)(v25 + 64) = v67;
  *(void *)(v25 + 72) = v31;
  sub_B2050();
  uint64_t v32 = swift_allocObject();
  long long v65 = xmmword_BEC70;
  *(_OWORD *)(v32 + 16) = xmmword_BEC70;
  unint64_t v67 = sub_21D48(1);
  uint64_t v68 = v33;
  sub_18D8C();
  v72._countAndFlagsBits = sub_18DE0();
  sub_B3020(v72);
  swift_bridgeObjectRelease();
  uint64_t v34 = v68;
  *(void *)(v32 + 32) = v67;
  *(void *)(v32 + 40) = v34;
  sub_B2030();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v65;
  *(void *)(v35 + 32) = sub_21D48(1);
  *(void *)(v35 + 40) = v36;
  sub_B2060();
  sub_B2010();
  sub_B2930();
  swift_allocObject();
  uint64_t v37 = sub_B2920();
  sub_7424(&qword_E7F20);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_BEC80;
  *(void *)(v38 + 32) = v37;
  unint64_t v67 = v38;
  sub_B30C0();
  uint64_t v39 = sub_B2550();
  sub_AA40(v0, 1, 1, v39);
  swift_retain();
  uint64_t v40 = sub_B24D0();
  swift_bridgeObjectRelease();
  sub_18910(v0);
  sub_B2380();
  sub_B23B0();
  uint64_t v52 = v23;
  sub_B2370();
  BOOL v41 = v56;
  sub_B2320();
  uint64_t v53 = v17;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v23, v66);
  sub_B2310();
  v51[2] = v40;
  char v42 = v58;
  sub_B22F0();
  v51[1] = v37;
  uint64_t v43 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v54, v41, v63);
  sub_B22E0();
  uint64_t v44 = v60;
  sub_B2350();
  uint64_t v45 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v55, v42, v64);
  sub_B2340();
  sub_7424(&qword_E7F48);
  uint64_t v46 = v61;
  unint64_t v47 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v65;
  uint64_t v49 = v62;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 16))(v48 + v47, v44, v62);
  sub_B2000();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v49);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v64);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v63);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v52, v66);
}

id sub_18088()
{
  sub_B1820();
  sub_7870();
  uint64_t v1 = v0;
  __chkstk_darwin(v2);
  sub_18DB0();
  id v3 = [objc_allocWithZone((Class)SASendCommands) init];
  id v4 = [objc_allocWithZone((Class)SAStartDirectActionRequest) init];
  uint64_t v5 = sub_B2F50();
  sub_188A4(v5, v6, v4, (SEL *)&selRef_setDirectAction_);
  sub_188A4(0xD00000000000002BLL, 0x80000000000B55C0, v4, (SEL *)&selRef_setUtteranceFromRequestParameters_);
  id v7 = v4;
  sub_B1810();
  uint64_t v8 = sub_B1800();
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v12 = sub_18E14();
  v11(v12);
  sub_188A4(v8, v10, v7, (SEL *)&selRef_setAceId_);

  sub_7424(&qword_E7F20);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_BEC80;
  *(void *)(v13 + 32) = v7;
  uint64_t v21 = v13;
  sub_B30C0();
  id v14 = v7;
  sub_18820(v21, v3);
  id v15 = v3;
  sub_B1810();
  uint64_t v16 = sub_B1800();
  uint64_t v18 = v17;
  uint64_t v19 = sub_18E14();
  v11(v19);
  sub_188A4(v16, v18, v15, (SEL *)&selRef_setAceId_);

  return v15;
}

uint64_t sub_18268(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 32 * v1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_182CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4974736163646F70 && a2 == 0xE900000000000064;
  if (v2 || (sub_B37E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_B37E0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_183B8()
{
  return 2;
}

uint64_t sub_183C0(char a1)
{
  if (a1) {
    return 1701669236;
  }
  else {
    return 0x4974736163646F70;
  }
}

uint64_t sub_183F4(void *a1)
{
  uint64_t v3 = sub_7424(&qword_E7F68);
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v9 = v8 - v7;
  sub_7468(a1, a1[3]);
  sub_18B4C();
  sub_B3900();
  sub_B3750();
  if (!v1) {
    sub_B3770();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

double sub_18540(void *a1)
{
  sub_7424(&qword_E7F58);
  sub_7870();
  __chkstk_darwin(v4);
  sub_7A0C();
  sub_7468(a1, a1[3]);
  sub_18B4C();
  sub_B38F0();
  if (v1)
  {
    sub_74F8((uint64_t)a1);
  }
  else
  {
    sub_B36D0();
    swift_bridgeObjectRetain();
    sub_B36F0();
    double v2 = v6;
    uint64_t v7 = sub_18DC8();
    v8(v7);
    sub_74F8((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_186E0()
{
  return sub_183C0(*v0);
}

uint64_t sub_186E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_182CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18710()
{
  return sub_6460();
}

uint64_t sub_18730@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_183B8();
  *a1 = result;
  return result;
}

uint64_t sub_18758(uint64_t a1)
{
  unint64_t v2 = sub_18B4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_18794(uint64_t a1)
{
  unint64_t v2 = sub_18B4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_187D0(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_18540(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_18800(void *a1)
{
  return sub_183F4(a1);
}

void sub_18820(uint64_t a1, void *a2)
{
  sub_7424(&qword_E7F28);
  Class isa = sub_B3090().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCommands:isa];
}

void sub_18898(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_188A4(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v6 = sub_B2F20();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

uint64_t sub_18910(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E7F30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_18970(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *sub_189D8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PodcastLastInvocation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for PodcastLastInvocation(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for PodcastLastInvocation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastLastInvocation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastLastInvocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastLastInvocation()
{
  return &type metadata for PodcastLastInvocation;
}

unint64_t sub_18B4C()
{
  unint64_t result = qword_E7F60;
  if (!qword_E7F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7F60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PodcastLastInvocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18C64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastLastInvocation.CodingKeys()
{
  return &type metadata for PodcastLastInvocation.CodingKeys;
}

unint64_t sub_18CA0()
{
  unint64_t result = qword_E7F70;
  if (!qword_E7F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7F70);
  }
  return result;
}

unint64_t sub_18CF0()
{
  unint64_t result = qword_E7F78;
  if (!qword_E7F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7F78);
  }
  return result;
}

unint64_t sub_18D40()
{
  unint64_t result = qword_E7F80;
  if (!qword_E7F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7F80);
  }
  return result;
}

void sub_18D8C()
{
  v1._countAndFlagsBits = 0x2E65756C61562ELL;
  v1._object = (void *)0xE700000000000000;
  sub_B3020(v1);
}

uint64_t sub_18DC8()
{
  return v0;
}

uint64_t sub_18DE0()
{
  return sub_B2FC0();
}

uint64_t sub_18E14()
{
  return v0;
}

uint64_t getEnumTagSinglePayload for WeatherConditionCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEA)
  {
    if (a2 + 22 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 22) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 23;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v5 = v6 - 23;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for WeatherConditionCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18F7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionCategory()
{
  return &type metadata for WeatherConditionCategory;
}

uint64_t sub_18FB4()
{
  unint64_t v0 = sub_B3810();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17) {
    return 23;
  }
  else {
    return v0;
  }
}

unint64_t sub_19008(char a1)
{
  unint64_t result = 0x6E61636972727568;
  switch(a1)
  {
    case 1:
      return 0x6F64616E726F74;
    case 2:
      return 0x6C616369706F7274;
    case 3:
      return 0x6472617A7A696C62;
    case 4:
      return 1818845544;
    case 5:
      return 0x737265646E756874;
    case 6:
      return 0x7465656C73;
    case 7:
      uint64_t v3 = 2003791475;
      goto LABEL_15;
    case 8:
      return 0x53676E69776F6C62;
    case 9:
      uint64_t v3 = 1852399986;
      goto LABEL_15;
    case 10:
      uint64_t v3 = 1802464627;
      goto LABEL_15;
    case 11:
      return 1953723748;
    case 12:
      uint64_t v3 = 1684957559;
      goto LABEL_15;
    case 13:
      uint64_t v3 = 1734831974;
LABEL_15:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
      break;
    case 14:
      unint64_t result = 1702519144;
      break;
    case 15:
      unint64_t result = 0x7964756F6C63;
      break;
    case 16:
      unint64_t result = 0x6C43796C74726170;
      break;
    case 17:
      unint64_t result = 0x7261656C63;
      break;
    case 18:
      unint64_t result = 1684828003;
      break;
    case 19:
      unint64_t result = 7630696;
      break;
    case 20:
      unint64_t result = 0x6F6C43646578696DLL;
      break;
    case 21:
      unint64_t result = 0x656C43646578696DLL;
      break;
    case 22:
      unint64_t result = 0x6C69617641746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19294(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_5CA40(*a1, *a2);
}

Swift::Int sub_192A0()
{
  return sub_7F218(*v0);
}

uint64_t sub_192A8(uint64_t a1)
{
  return sub_7F6B4(a1, *v1);
}

Swift::Int sub_192B0(uint64_t a1)
{
  return sub_80854(a1, *v1);
}

uint64_t sub_192B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_18FB4();
  *a1 = result;
  return result;
}

unint64_t sub_192E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_19008(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_19318()
{
  unint64_t result = qword_E7F90;
  if (!qword_E7F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E7F90);
  }
  return result;
}

uint64_t sub_19364(uint64_t x0_0)
{
  uint64_t v117 = sub_B2240();
  sub_7870();
  uint64_t v116 = v2;
  __chkstk_darwin(v3);
  sub_17768();
  sub_1A05C(v4);
  uint64_t v5 = type metadata accessor for MediaPlayerIntent();
  __chkstk_darwin(v5 - 8);
  sub_17768();
  sub_1A05C(v6);
  sub_B2960();
  sub_7870();
  uint64_t v121 = v8;
  v122 = v7;
  __chkstk_darwin(v7);
  sub_18E00();
  uint64_t v120 = v9;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v119 = (char *)&v110 - v12;
  __chkstk_darwin(v11);
  id v14 = (char *)&v110 - v13;
  uint64_t v113 = sub_B2280();
  sub_7870();
  uint64_t v112 = v15;
  __chkstk_darwin(v16);
  sub_18E00();
  uint64_t v110 = v17;
  __chkstk_darwin(v18);
  sub_1A05C((uint64_t)&v110 - v19);
  uint64_t v20 = sub_B2250();
  sub_7870();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_E6D70 != -1) {
    swift_once();
  }
  uint64_t v114 = sub_B2D30();
  uint64_t v26 = sub_B378(v114, (uint64_t)qword_F53A8);
  sub_7A1C();
  unint64_t v124 = (unint64_t)"n State from parse";
  unint64_t v123 = (unint64_t)"onfirmation.swift";
  sub_1A028(v27, v28);
  uint64_t v131 = 0;
  memset(v130, 0, sizeof(v130));
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, x0_0, v20);
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v20);
  if (v29 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v30 = sub_19FB8();
    v31(v30);
    uint64_t v32 = v121;
    uint64_t v33 = v14;
    uint64_t v120 = *(void (**)(char *, char *, char *))(v121 + 32);
    uint64_t v34 = v25;
    uint64_t v35 = v122;
    v120(v14, v34, v122);
    sub_1A094();
    sub_7A1C();
    sub_1A028(v36, v37);
    uint64_t v38 = v119;
    (*(void (**)(char *, char *, char *))(v32 + 16))(v119, v14, v35);
    uint64_t v39 = type metadata accessor for DailyBriefingNLv3Intent();
    uint64_t v40 = swift_allocObject();
    v120((char *)(v40 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingNLv3Intent_intent), v38, v35);
    *((void *)&v128 + 1) = v39;
    v129 = &off_DE308;
    *(void *)&long long v127 = v40;
    (*(void (**)(char *, char *))(v32 + 8))(v14, v35);
    sub_19E60((uint64_t)v130);
    sub_19F1C((uint64_t)&v127, (uint64_t)v130);
LABEL_14:
    sub_1A050();
LABEL_15:
    sub_19DF8((uint64_t)v130, (uint64_t)&v125);
    if (v126)
    {
      sub_B3B0(&v125, (uint64_t)&v127);
      uint64_t v78 = *((void *)&v128 + 1);
      uint64_t v79 = v129;
      sub_7468(&v127, *((uint64_t *)&v128 + 1));
      uint64_t v80 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v79[8])(v78, v79);
      if (v80 != 3)
      {
        uint64_t v81 = v80;
        sub_19E60((uint64_t)v130);
        sub_74F8((uint64_t)&v127);
        return v81;
      }
      sub_19F84((uint64_t)(v33 + 6), (uint64_t)(v33 + 14), (uint64_t)"DBIntent does not have confirmation node.");
      sub_19E60((uint64_t)v130);
      sub_74F8((uint64_t)&v127);
      return 3;
    }
    sub_19E60((uint64_t)&v125);
    sub_19F84((uint64_t)(v33 + 1), (uint64_t)(v33 + 14), (uint64_t)"Did not receive DBIntent from Parse.");
LABEL_19:
    sub_19E60((uint64_t)v130);
    return 3;
  }
  uint64_t v33 = v122;
  if (v29 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v117 = (uint64_t)v14;
    uint64_t v41 = sub_19FB8();
    v42(v41);
    sub_7424(&qword_E7FA0);
    swift_release();
    uint64_t v43 = v120;
    uint64_t v44 = v121;
    uint64_t v116 = *(void *)(v121 + 32);
    ((void (*)(void, char *, char *))v116)(v120, v25, v33);
    sub_1A094();
    uint64_t v115 = v45 + 14;
    sub_1A06C();
    uint64_t v46 = (char *)v26;
    unint64_t v47 = v33;
    uint64_t v119 = v46;
    sub_8C320(v48, v49, v50, v51, v52, v53);
    uint64_t v33 = (char *)(v44 + 16);
    uint64_t v54 = *(void (**)(uint64_t, void, char *))(v44 + 16);
    uint64_t v55 = v118;
    v54(v118, v43, v47);
    if (sub_926A0())
    {
      sub_1A094();
      sub_7A1C();
      sub_1A06C();
      sub_8C320(v56, v57, v58, v59, v60, v61);
      sub_19EC0(v55);
      (*(void (**)(void (*)(char *, char *, char *), char *))(v44 + 8))(v120, v47);
      goto LABEL_19;
    }
    uint64_t v74 = v117;
    uint64_t v75 = v120;
    v54(v117, v120, v47);
    uint64_t v76 = type metadata accessor for DailyBriefingNLv3Intent();
    uint64_t v77 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, char *))v116)(v77 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingNLv3Intent_intent, v74, v47);
    *((void *)&v128 + 1) = v76;
    v129 = &off_DE308;
    *(void *)&long long v127 = v77;
    sub_19EC0(v55);
    (*(void (**)(void (*)(char *, char *, char *), char *))(v44 + 8))(v75, v47);
    sub_19E60((uint64_t)v130);
    sub_19F1C((uint64_t)&v127, (uint64_t)v130);
    goto LABEL_14;
  }
  if (v29 != enum case for Parse.directInvocation(_:))
  {
    if (v29 == enum case for Parse.NLv4IntentOnly(_:))
    {
      uint64_t v83 = sub_19FB8();
      v84(v83);
      sub_1A050();
      sub_19FD0((uint64_t)(v33 - 11), (uint64_t)(v33 + 14), (uint64_t)"Received NLV4 parse type");
      uint64_t v85 = type metadata accessor for DailyBriefingNLv4Intent();
      swift_allocObject();
      uint64_t v86 = swift_unknownObjectRetain();
      uint64_t v87 = sub_61BB8(v86);
      if (!v87)
      {
        sub_19E60((uint64_t)v130);
        swift_unknownObjectRelease();
        v129 = 0;
        long long v127 = 0u;
        long long v128 = 0u;
        goto LABEL_36;
      }
      uint64_t v88 = v87;
      *((void *)&v128 + 1) = v85;
      v129 = &off_DDF88;
      swift_unknownObjectRelease();
      *(void *)&long long v127 = v88;
    }
    else
    {
      if (v29 != enum case for Parse.uso(_:))
      {
        sub_1A094();
        sub_19F84(v105 - 12, v105 + 14, (uint64_t)"Received unknown parse.");
        sub_1A050();
        v107(v106, v20);
        goto LABEL_15;
      }
      uint64_t v95 = sub_19FB8();
      v96(v95);
      uint64_t v97 = v112;
      uint64_t v98 = v111;
      uint64_t v99 = v113;
      (*(void (**)(uint64_t, char *, uint64_t))(v112 + 32))(v111, v25, v113);
      sub_1A050();
      sub_19FD0((uint64_t)(v33 - 17), (uint64_t)(v33 + 14), (uint64_t)"Received uso parse");
      uint64_t v100 = type metadata accessor for DailyBriefingNLv4Intent();
      uint64_t v101 = v110;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v110, v98, v99);
      uint64_t v102 = sub_6191C(v101);
      if (!v102)
      {
        uint64_t v108 = sub_1A080();
        v109(v108);
        sub_19E60((uint64_t)v130);
        long long v127 = 0u;
        long long v128 = 0u;
        v129 = 0;
        goto LABEL_36;
      }
      *((void *)&v128 + 1) = v100;
      v129 = &off_DDF88;
      *(void *)&long long v127 = v102;
      uint64_t v103 = sub_1A080();
      v104(v103);
    }
    sub_19E60((uint64_t)v130);
LABEL_36:
    sub_19F1C((uint64_t)&v127, (uint64_t)v130);
    goto LABEL_15;
  }
  uint64_t v62 = sub_19FB8();
  v63(v62);
  uint64_t v64 = v116;
  uint64_t v65 = v115;
  uint64_t v66 = v117;
  (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v115, v25, v117);
  *(void *)&long long v127 = 0;
  *((void *)&v127 + 1) = 0xE000000000000000;
  sub_B34C0(29);
  sub_1A050();
  sub_7A1C();
  sub_B3020(v132);
  sub_B35C0();
  sub_8C320(v127, *((unint64_t *)&v127 + 1), (uint64_t)(v33 + 14), v124 | 0x8000000000000000, 0xD000000000000023, v123 | 0x8000000000000000);
  swift_bridgeObjectRelease();
  char v67 = sub_25F88();
  if (v67 == 2)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_B378(v114, (uint64_t)qword_F5360);
    sub_1A004();
    sub_8C2F0(v68, v69, v70, v71, v72, v73);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v66);
    goto LABEL_15;
  }
  uint64_t v81 = v67 & 1;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  sub_B378(v114, (uint64_t)qword_F5360);
  sub_1A004();
  sub_8C320(v89, v90, v91, v92, v93, v94);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v66);
  sub_19E60((uint64_t)v130);
  return v81;
}

uint64_t sub_19DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19E60(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E7F98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19EC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaPlayerIntent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_19F84(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v5 = *(void *)(v3 - 224) | 0x8000000000000000;
  unint64_t v6 = *(void *)(v3 - 232) | 0x8000000000000000;
  sub_8C2F0(a1, (a3 - 32) | 0x8000000000000000, a2, v5, 0xD000000000000023, v6);
}

uint64_t sub_19FB8()
{
  return v0;
}

void sub_19FD0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v5 = *(void *)(v3 - 224) | 0x8000000000000000;
  unint64_t v6 = *(void *)(v3 - 232) | 0x8000000000000000;
  sub_8C320(a1, (a3 - 32) | 0x8000000000000000, a2, v5, 0xD000000000000023, v6);
}

void sub_1A028(uint64_t a1, unint64_t a2)
{
  sub_8C320(a1, a2, v3, v4, 0xD000000000000023, v2);
}

uint64_t sub_1A05C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_1A080()
{
  return v0;
}

uint64_t sub_1A0A0()
{
  sub_B2DA0();
  sub_1A364();
  __chkstk_darwin(v1);
  uint64_t v3 = sub_1A384(v2, v20);
  v4(v3);
  uint64_t v5 = sub_1A3B8();
  LODWORD(result) = v6(v5);
  if (result == enum case for DispatchTimeInterval.seconds(_:))
  {
    uint64_t v8 = sub_1A34C();
    v9(v8);
    uint64_t result = 1000 * *v0;
    if ((unsigned __int128)(*v0 * (__int128)1000) >> 64 == result >> 63) {
      return result;
    }
    __break(1u);
  }
  if (result == enum case for DispatchTimeInterval.milliseconds(_:))
  {
    uint64_t v10 = sub_1A34C();
    v11(v10);
    return *v0;
  }
  if (result == enum case for DispatchTimeInterval.microseconds(_:))
  {
    uint64_t v12 = sub_1A34C();
    v13(v12);
    uint64_t v14 = *v0;
    uint64_t v15 = 1000;
    return v14 / v15;
  }
  if (result == enum case for DispatchTimeInterval.nanoseconds(_:))
  {
    uint64_t v16 = sub_1A34C();
    v17(v16);
    uint64_t v14 = *v0;
    uint64_t v15 = 1000000;
    return v14 / v15;
  }
  if (result != enum case for DispatchTimeInterval.never(_:))
  {
    uint64_t v18 = sub_1A3D4();
    v19(v18);
  }
  return 0;
}

double sub_1A1EC()
{
  sub_B2DA0();
  sub_1A364();
  __chkstk_darwin(v1);
  uint64_t v3 = sub_1A384(v2, v22);
  v4(v3);
  uint64_t v5 = sub_1A3B8();
  int v7 = v6(v5);
  if (v7 == enum case for DispatchTimeInterval.seconds(_:))
  {
    uint64_t v8 = sub_1A34C();
    v9(v8);
    return (double)*v0;
  }
  if (v7 == enum case for DispatchTimeInterval.milliseconds(_:))
  {
    uint64_t v11 = sub_1A34C();
    v12(v11);
    double v13 = (double)*v0;
    double v14 = 0.001;
    return v13 * v14;
  }
  if (v7 == enum case for DispatchTimeInterval.microseconds(_:))
  {
    uint64_t v15 = sub_1A34C();
    v16(v15);
    double v13 = (double)*v0;
    double v14 = 0.000001;
    return v13 * v14;
  }
  if (v7 == enum case for DispatchTimeInterval.nanoseconds(_:))
  {
    uint64_t v17 = sub_1A34C();
    v18(v17);
    double v13 = (double)*v0;
    double v14 = 0.000000001;
    return v13 * v14;
  }
  double v10 = 0.0;
  if (v7 != enum case for DispatchTimeInterval.never(_:))
  {
    uint64_t v20 = sub_1A3D4();
    v21(v20);
  }
  return v10;
}

uint64_t sub_1A34C()
{
  return v0;
}

char *sub_1A384@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1A3B8()
{
  return v0;
}

uint64_t sub_1A3D4()
{
  return v0;
}

unint64_t sub_1A3E8()
{
  return 0xD000000000000010;
}

uint64_t sub_1A404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = 0;
  uint64_t v9 = v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstCondition;
  uint64_t v10 = sub_B2C40();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v9, a1, v10);
  v11(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondCondition, a2, v10);
  *(void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstConditionStart) = a3;
  *(void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondConditionStart) = a4;
  return v4;
}

double sub_1A4DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = a1 == 0x6E6F437473726966 && a2 == 0xEE006E6F69746964;
  if (v5 || (sub_78A4() & 1) != 0)
  {
    uint64_t v8 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstCondition;
LABEL_7:
    uint64_t v9 = v3 + v8;
    uint64_t v10 = sub_B2C40();
    *(void *)(a3 + 24) = v10;
    uint64_t v11 = sub_7590((uint64_t *)a3);
    uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v12(v11, v9, v10);
    return result;
  }
  BOOL v14 = a1 == 0x6F43646E6F636573 && a2 == 0xEF6E6F697469646ELL;
  if (v14 || (sub_78A4() & 1) != 0)
  {
    uint64_t v8 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondCondition;
    goto LABEL_7;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000000000B4470 || (sub_78A4() & 1) != 0)
  {
    uint64_t v15 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstConditionStart;
  }
  else
  {
    if ((a1 != 0xD000000000000014 || a2 != 0x80000000000B4490) && (sub_78A4() & 1) == 0)
    {
      double result = 0.0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }
    uint64_t v15 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondConditionStart;
  }
  uint64_t v16 = *(void *)(v3 + v15);
  *(void *)(a3 + 24) = sub_B2B40();
  *(void *)a3 = v16;

  swift_retain();
  return result;
}

uint64_t sub_1A708(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DB2F8;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1A758()
{
  return 4;
}

unint64_t sub_1A760()
{
  unint64_t result = sub_1B654();
  switch(v1)
  {
    case 1:
      unint64_t result = sub_1B618();
      break;
    case 2:
      unint64_t result = sub_1B680();
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A7CC()
{
  unint64_t result = sub_1B654();
  switch(v1)
  {
    case 1:
      unint64_t result = sub_1B618();
      break;
    case 2:
      unint64_t result = sub_1B680();
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A838(unsigned __int8 *a1, char *a2)
{
  return sub_5CE5C(*a1, *a2);
}

Swift::Int sub_1A844()
{
  return sub_7F230(*v0);
}

uint64_t sub_1A84C(uint64_t a1)
{
  return sub_7F89C(a1, *v1);
}

Swift::Int sub_1A854(uint64_t a1)
{
  return sub_807DC(a1, *v1);
}

uint64_t sub_1A85C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A708(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1A88C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A760();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1A8B8()
{
  return sub_1A7CC();
}

uint64_t sub_1A8C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A754();
  *a1 = result;
  return result;
}

void sub_1A8E8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A8F4(uint64_t a1)
{
  unint64_t v2 = sub_1B36C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A930(uint64_t a1)
{
  unint64_t v2 = sub_1B36C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1A96C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstCondition;
  uint64_t v2 = sub_B2C40();
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondCondition, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AA28()
{
  sub_1A96C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1AA80()
{
  return type metadata accessor for WeatherExpected();
}

uint64_t type metadata accessor for WeatherExpected()
{
  uint64_t result = qword_E7FD0;
  if (!qword_E7FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AAD0()
{
  uint64_t result = sub_B2C40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AB7C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_7424(&qword_E80D8);
  sub_7870();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7468(a1, a1[3]);
  sub_1B36C();
  sub_B3900();
  LOBYTE(v13) = 0;
  sub_B2C40();
  sub_1B3B8(&qword_E74C8, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  sub_1B5F4();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1B5F4();
    uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstConditionStart);
    HIBYTE(v12) = 2;
    sub_B2B40();
    sub_1B3B8(&qword_E7858, (void (*)(uint64_t))&type metadata accessor for DialogCalendar);
    sub_1B5F4();
    uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondConditionStart);
    HIBYTE(v12) = 3;
    sub_1B5F4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_1AD90(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1ADE0(a1);
  return v2;
}

uint64_t sub_1ADE0(void *a1)
{
  uint64_t v4 = sub_B2C40();
  sub_7870();
  uint64_t v24 = v5;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v25 = (char *)v23 - v10;
  uint64_t v26 = sub_7424(&qword_E80C8);
  sub_7870();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v28 = a1;
  uint64_t v29 = v1;
  *(void *)(v1 + 16) = 0;
  sub_7468(a1, a1[3]);
  sub_1B36C();
  uint64_t v27 = v15;
  sub_B38F0();
  if (v2)
  {
    uint64_t v17 = (uint64_t)v28;
    uint64_t v19 = v29;

    type metadata accessor for WeatherExpected();
    swift_deallocPartialClassInstance();
    uint64_t v22 = v17;
  }
  else
  {
    v23[2] = v12;
    LOBYTE(v31) = 0;
    sub_1B3B8(&qword_E74A8, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    uint64_t v16 = v25;
    sub_1B694();
    sub_B3710();
    uint64_t v19 = v29;
    uint64_t v25 = *(char **)(v24 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v25)(v29 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstCondition, v16, v4);
    LOBYTE(v31) = 1;
    sub_1B694();
    sub_B3710();
    v23[1] = v4;
    ((void (*)(uint64_t, char *, uint64_t))v25)(v19 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondCondition, v9, v4);
    sub_B2B40();
    char v30 = 2;
    sub_1B3B8(&qword_E7848, (void (*)(uint64_t))&type metadata accessor for DialogCalendar);
    sub_B3710();
    *(void *)(v19 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_firstConditionStart) = v31;
    char v30 = 3;
    sub_B3710();
    uint64_t v20 = sub_1B63C();
    v21(v20);
    *(void *)(v19 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15WeatherExpected_secondConditionStart) = v31;
    uint64_t v22 = (uint64_t)v28;
  }
  sub_74F8(v22);
  return v19;
}

unint64_t sub_1B248()
{
  return 0xD000000000000010;
}

double sub_1B268@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A4DC(a1, a2, a3);
}

uint64_t sub_1B28C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AD90(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2B8(void *a1)
{
  return sub_1AB7C(a1);
}

uint64_t sub_1B2DC()
{
  return sub_1B3B8(&qword_E80B8, (void (*)(uint64_t))type metadata accessor for WeatherExpected);
}

uint64_t sub_1B324()
{
  return sub_1B3B8(&qword_E80C0, (void (*)(uint64_t))type metadata accessor for WeatherExpected);
}

unint64_t sub_1B36C()
{
  unint64_t result = qword_E80D0;
  if (!qword_E80D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E80D0);
  }
  return result;
}

uint64_t sub_1B3B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherExpected.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B4CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherExpected.CodingKeys()
{
  return &type metadata for WeatherExpected.CodingKeys;
}

unint64_t sub_1B508()
{
  unint64_t result = qword_E80E0;
  if (!qword_E80E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E80E0);
  }
  return result;
}

unint64_t sub_1B558()
{
  unint64_t result = qword_E80E8;
  if (!qword_E80E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E80E8);
  }
  return result;
}

unint64_t sub_1B5A8()
{
  unint64_t result = qword_E80F0;
  if (!qword_E80F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E80F0);
  }
  return result;
}

uint64_t sub_1B5F4()
{
  return sub_B3790();
}

uint64_t sub_1B618()
{
  return 0x6F43646E6F636573;
}

uint64_t sub_1B63C()
{
  return v0;
}

uint64_t sub_1B654()
{
  return 0x6E6F437473726966;
}

unint64_t sub_1B680()
{
  return 0xD000000000000013;
}

uint64_t sub_1B694()
{
  return v0;
}

uint64_t sub_1B6A8()
{
  type metadata accessor for ExecutorCallbackState(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1BA4C();
  qword_F4EB8 = v0;
  return result;
}

void sub_1B6E8(char a1)
{
  uint64_t v2 = v1;
  sub_B34C0(44);
  swift_bridgeObjectRelease();
  if (a1) {
    v4._countAndFlagsBits = 1702195828;
  }
  else {
    v4._countAndFlagsBits = 0x65736C6166;
  }
  if (a1) {
    uint64_t v5 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v5 = (void *)0xE500000000000000;
  }
  v4._object = v5;
  sub_B3020(v4);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  sub_B3020(v12);
  sub_ABC4();
  sub_8C308(v6, 0x80000000000B5D50, v7, v8, 0xD000000000000012, 0x80000000000B5D80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_didCallback) = a1;
  if (a1)
  {
    id v9 = [self defaultCenter];
    sub_7A1C();
    NSString v10 = sub_B2F20();
    [v9 postNotificationName:v10 object:v2];
  }
}

void sub_1B88C()
{
  sub_7A1C();
  sub_ABC4();
  sub_8C308(v1, v2, v3, v4, 0xD000000000000014, 0x80000000000B5D30);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_didCallback) = 0;
}

uint64_t sub_1B908()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_logger;
  sub_B2D30();
  sub_1DECC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1B980()
{
  return type metadata accessor for ExecutorCallbackState(0);
}

uint64_t type metadata accessor for ExecutorCallbackState(uint64_t a1)
{
  return sub_F470(a1, qword_E8128);
}

uint64_t sub_1B9A8()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BA4C()
{
  swift_defaultActor_initialize();
  uint64_t v1 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B2D30();
  sub_B378(v2, (uint64_t)qword_F5360);
  sub_1DECC();
  (*(void (**)(uint64_t))(v3 + 16))(v0 + v1);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_didCallback) = 0;
  return v0;
}

uint64_t sub_1BB0C()
{
  return v0;
}

uint64_t sub_1BB18()
{
  return sub_1BB0C();
}

uint64_t sub_1BB34(unint64_t a1)
{
  unint64_t v3 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_logger;
  if (qword_E6D58 != -1) {
LABEL_29:
  }
    swift_once();
  uint64_t v4 = sub_B2D30();
  sub_B378(v4, (uint64_t)qword_F5360);
  sub_1DECC();
  (*(void (**)(unint64_t))(v5 + 16))(v3);
  uint64_t v6 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_callbackState;
  if (qword_E6BB8 != -1) {
    swift_once();
  }
  *(void *)(v1 + v6) = qword_F4EB8;
  *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpec) = 0;
  uint64_t v7 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpecIndex;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_flowSpecs) = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v8 = sub_B3620();
  }
  else
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
    swift_retain();
  }
  uint64_t v19 = v1;
  if (v8)
  {
    if (v8 < 1) {
      __break(1u);
    }
    uint64_t v9 = 0;
    NSString v10 = _swiftEmptyArrayStorage;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v1 = sub_B34F0();
      }
      else
      {
        uint64_t v1 = *(void *)(a1 + 8 * v9 + 32);
        swift_retain();
      }
      if ((*(uint64_t (**)(void))(*(void *)v1 + 312))())
      {
        sub_7424(&qword_E8350);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_BEC70;
        *(void *)(inited + 32) = v1;
        unint64_t v3 = inited + 32;
        *(void *)(inited + 40) = 0;
        *(unsigned char *)(inited + 48) = -1;
        unint64_t v12 = v10[2];
        swift_bridgeObjectRetain();
        if (!swift_isUniquelyReferenced_nonNull_native() || (unint64_t v13 = v10[3] >> 1, v14 = v10, v13 <= v12))
        {
          sub_5EEF8();
          uint64_t v14 = v15;
          unint64_t v13 = v15[3] >> 1;
        }
        unint64_t v16 = v14[2];
        if (v13 <= v16)
        {
          __break(1u);
          goto LABEL_29;
        }
        if (v3 < (unint64_t)&v14[3 * v16 + 7] && (unint64_t)&v14[3 * v16 + 4] < inited + 56)
        {
          uint64_t result = sub_B3660();
          __break(1u);
          return result;
        }
        sub_7424(&qword_E8358);
        swift_arrayInitWithCopy();
        ++v14[2];
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        NSString v10 = v14;
      }
      else
      {
        swift_release();
        uint64_t v14 = v10;
      }
      if (v8 == ++v9) {
        goto LABEL_27;
      }
    }
  }
  uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_27:
  swift_bridgeObjectRelease_n();
  uint64_t result = v19;
  *(void *)(v19 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_flowSpecStatuses) = v14;
  return result;
}

uint64_t sub_1BEF8()
{
  *(void *)(v1 + 16) = v0;
  return sub_FCA0((uint64_t)sub_1BF10);
}

uint64_t sub_1BF10()
{
  sub_7FDC();
  sub_7A1C();
  sub_ABC4();
  sub_AB5C();
  sub_8C308(v1, v2, v3, v4, v5, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C01C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1C01C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *unint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1C0E4()
{
  sub_ABD0();
  return v0();
}

uint64_t sub_1C0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return _swift_task_switch(sub_1C11C, 0, 0);
}

uint64_t sub_1C11C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_retain();
  unint64_t v3 = swift_bridgeObjectRetain();
  sub_1C78C(v3, v2, v1);
  swift_bridgeObjectRelease();
  sub_ABD0();
  return v4();
}

uint64_t sub_1C1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 104) = a4;
  *(void *)(v5 + 112) = a5;
  return _swift_task_switch(sub_1C1D8, 0, 0);
}

void sub_1C1D8()
{
  uint64_t v1 = v0[13];
  type metadata accessor for DBSiriKitEventSender();
  uint64_t inited = swift_initStaticObject();
  unint64_t v3 = *(void (**)(void))(*(void *)v1 + 240);
  sub_1DDEC();
  v3();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = sub_7468(v0 + 2, v4);
  sub_A2360((uint64_t)v6, 0x11u, 0, 0, inited, v4, v5);
  sub_74F8((uint64_t)(v0 + 2));
  v0[15] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_logger;
  sub_1DDDC();
  sub_B34C0(34);
  swift_bridgeObjectRelease();
  sub_1DDEC();
  v3();
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  sub_7468(v0 + 7, v7);
  v18._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  sub_B3020(v18);
  swift_bridgeObjectRelease();
  sub_74F8((uint64_t)(v0 + 7));
  sub_ABC4();
  sub_AB5C();
  sub_8C308(v9, v10, v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[16] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1C430;
  sub_1DE50();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C430()
{
  sub_7FDC();
  sub_7FC4();
  *(void *)(v1 + 136) = v0;
  *(unsigned char *)(v1 + 152) = v2;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1C508()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 104);
  char v3 = *(unsigned char *)(v0 + 152) & 1;
  *(void *)(v0 + 96) = v2;
  type metadata accessor for BaseFlowSpec();
  swift_retain();
  v15._countAndFlagsBits = sub_B2FA0();
  sub_B3020(v15);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_AB5C();
  sub_8C5B4(v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  sub_1D45C(v2, v1, v3);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v10;
  *unint64_t v10 = v0;
  v10[1] = sub_1C664;
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v12 = *(void *)(v0 + 104);
  return sub_1CBE4(v12, v11, v3);
}

uint64_t sub_1C664()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1C72C()
{
  sub_7FDC();
  sub_A9CC(*(void *)(v0 + 136), *(unsigned char *)(v0 + 152) & 1);
  sub_ABD0();
  return v1();
}

uint64_t sub_1C78C(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v6 = sub_7424(&qword_E76F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v47 = (uint64_t)v28 - v10;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_B3620())
  {
    v28[1] = v4;
    unint64_t v35 = a1 & 0xC000000000000001;
    uint64_t v33 = v37 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_logger;
    uint64_t v12 = 4;
    uint64_t v32 = 0x80000000000B5B00;
    uint64_t v31 = (char *)&type metadata for () + 8;
    uint64_t v34 = v9;
    unint64_t v30 = a1;
    uint64_t v29 = v11;
    while (1)
    {
      if (v35)
      {
        uint64_t v13 = sub_B34F0();
      }
      else
      {
        uint64_t v13 = *(void *)(a1 + 8 * v12);
        swift_retain();
      }
      uint64_t v14 = v12 - 3;
      if (__OFADD__(v12 - 4, 1)) {
        break;
      }
      uint64_t v45 = 540950078;
      unint64_t v46 = 0xE400000000000000;
      (*(void (**)(void *__return_ptr))(*(void *)v13 + 240))(v42);
      uint64_t v15 = v43;
      uint64_t v16 = v44;
      sub_7468(v42, v43);
      v48._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
      sub_B3020(v48);
      swift_bridgeObjectRelease();
      sub_74F8((uint64_t)v42);
      sub_8C5B4(v45, v46, 0xD000000000000028, v32, 0x2865747563657865, 0xE900000000000029);
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_B3160();
      uint64_t v18 = v47;
      sub_AA40(v47, 1, 1, v17);
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = 0;
      v19[3] = 0;
      v19[4] = v13;
      v19[5] = v37;
      sub_1DC2C(v18, (uint64_t)v9);
      int v20 = sub_C844((uint64_t)v9, 1, v17);
      swift_retain();
      swift_retain();
      if (v20 == 1)
      {
        sub_1DC94((uint64_t)v9);
      }
      else
      {
        sub_B3150();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v9, v17);
      }
      if (v19[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v4 = sub_B3110();
        uint64_t v22 = v21;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v4 = 0;
        uint64_t v22 = 0;
      }
      uint64_t v23 = v29;
      uint64_t v24 = *v36;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = &unk_E8378;
      *(void *)(v25 + 24) = v19;
      uint64_t v26 = (void *)(v22 | v4);
      if (v22 | v4)
      {
        v41[0] = 0;
        v41[1] = 0;
        uint64_t v26 = v41;
        v41[2] = v4;
        v41[3] = v22;
      }
      a1 = v30;
      uint64_t v38 = 1;
      uint64_t v39 = v26;
      uint64_t v40 = v24;
      swift_task_create();
      swift_release();
      sub_1DC94(v47);
      swift_release();
      ++v12;
      unint64_t v9 = v34;
      if (v14 == v23) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1CBE4(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 72) = a2;
  *(void *)(v4 + 80) = v3;
  *(unsigned char *)(v4 + 112) = a3;
  *(void *)(v4 + 64) = a1;
  return sub_FCA0((uint64_t)sub_1CC04);
}

uint64_t sub_1CC04()
{
  sub_7FDC();
  uint64_t v1 = v0[10];
  uint64_t v2 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_callbackState;
  v0[11] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_callbackState;
  uint64_t v3 = *(void *)(v1 + v2);
  v0[12] = v3;
  swift_retain();
  return _swift_task_switch(sub_1CC84, v3, 0);
}

uint64_t sub_1CC84()
{
  sub_7FDC();
  *(unsigned char *)(v0 + 113) = *(unsigned char *)(*(void *)(v0 + 96)
                                  + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_didCallback);
  swift_release();
  sub_AC10();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1CCF4()
{
  if (*(unsigned char *)(v0 + 113))
  {
    sub_7A1C();
    sub_ABC4();
    sub_8C308(v1, v2, v3, v4, 0xD000000000000017, 0x80000000000B5BB0);
    goto LABEL_12;
  }
  uint64_t v5 = (uint64_t *)(*(void *)(v0 + 80) + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_flowSpecStatuses);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = *(void *)(*v5 + 16);
  uint64_t v8 = *(void *)(v0 + 64);
  if (!v7) {
    goto LABEL_10;
  }
  if (*(void *)(v6 + 32) != v8)
  {
    if (v7 != 1)
    {
      unint64_t v9 = (void *)(v6 + 56);
      uint64_t v10 = 1;
      while (1)
      {
        if (*v9 == v8) {
          goto LABEL_16;
        }
        uint64_t v11 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          break;
        }
        ++v10;
        v9 += 3;
        if (v11 == v7) {
          goto LABEL_10;
        }
      }
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      sub_78078();
      uint64_t v20 = isUniquelyReferenced_nonNull_native;
      *uint64_t v5 = isUniquelyReferenced_nonNull_native;
      if (v10 < 0) {
        goto LABEL_66;
      }
      goto LABEL_18;
    }
LABEL_10:
    sub_1DDDC();
    sub_B34C0(22);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 40) = v8;
    type metadata accessor for BaseFlowSpec();
    swift_retain();
    v58._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v58);
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_1DE90();
LABEL_11:
    sub_8C308(v12, v13, v14, v15, v16, v17);
    swift_bridgeObjectRelease();
LABEL_12:
    sub_ABD0();
    sub_1DE50();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v10 = 0;
LABEL_16:
  swift_beginAccess();
  uint64_t v20 = *v5;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v5 = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_65;
  }
  if (v10 < 0)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_18:
  if ((unint64_t)v10 >= *(void *)(v20 + 16))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    return _swift_task_switch(isUniquelyReferenced_nonNull_native, v22, v23);
  }
  char v24 = *(unsigned char *)(v0 + 112);
  uint64_t v25 = *(void *)(v0 + 72);
  uint64_t v26 = v20 + 24 * v10;
  uint64_t v27 = *(void *)(v26 + 40);
  *(void *)(v26 + 40) = v25;
  unsigned __int8 v28 = *(unsigned char *)(v26 + 48);
  *(unsigned char *)(v26 + 48) = v24 & 1;
  sub_1DA64(v25, v24 & 1);
  swift_endAccess();
  uint64_t isUniquelyReferenced_nonNull_native = sub_1DA70(v27, v28);
  uint64_t v29 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpecIndex;
  uint64_t v30 = *(void *)(v0 + 80);
  if ((v24 & 1) == 0)
  {
    uint64_t v31 = v30 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpecIndex;
    if ((*(unsigned char *)(v30 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpecIndex + 8) & 1) != 0
      || v10 < *(void *)v31)
    {
      *(void *)(v30 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpec) = *(void *)(v0 + 64);
      swift_retain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_release();
      *(void *)uint64_t v31 = v10;
      *(unsigned char *)(v31 + 8) = 0;
      uint64_t v29 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpecIndex;
      uint64_t v30 = *(void *)(v0 + 80);
    }
  }
  uint64_t v32 = v30 + v29;
  if (*(unsigned char *)(v32 + 8)) {
    uint64_t v22 = v10;
  }
  else {
    uint64_t v22 = *(void *)v32;
  }
  if (v22 < 0) {
    goto LABEL_68;
  }
  sub_A24C0(0, v22, *v5);
  if (v34 == v35 >> 1)
  {
LABEL_32:
    uint64_t v38 = *(void *)(v0 + 80);
    swift_unknownObjectRelease();
    int v39 = 0;
    BOOL v40 = *(void *)(v38 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpec) != 0;
  }
  else
  {
    int64_t v36 = v35 >> 1;
    uint64_t v37 = (unsigned __int8 *)(v33 + 24 * v34 + 16);
    while (1)
    {
      if (v34 >= v36) {
        goto LABEL_64;
      }
      if (*v37 == 255) {
        break;
      }
      ++v34;
      v37 += 24;
      if (v36 == v34) {
        goto LABEL_32;
      }
    }
    swift_unknownObjectRelease();
    BOOL v40 = 0;
    int v39 = 1;
  }
  uint64_t v41 = *(void *)(*v5 + 16);
  if (!v41)
  {
LABEL_38:
    int v55 = 0;
    goto LABEL_39;
  }
  char v42 = (unsigned __int8 *)(*v5 + 48);
  while (1)
  {
    int v43 = *v42;
    v42 += 24;
    if (v43 == 255) {
      break;
    }
    if (!--v41) {
      goto LABEL_38;
    }
  }
  if (!v40)
  {
    uint64_t v53 = *(void *)(v0 + 64);
    sub_1DDDC();
    sub_B34C0(45);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 40) = v53;
    type metadata accessor for BaseFlowSpec();
    swift_retain();
    v64._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v64);
    swift_bridgeObjectRelease();
    v65._countAndFlagsBits = 0xD00000000000001DLL;
    v65._object = (void *)0x80000000000B5BD0;
    sub_B3020(v65);
    sub_ABC4();
    sub_1DE90();
    goto LABEL_11;
  }
  int v55 = 1;
LABEL_39:
  uint64_t v56 = *(void *)(v0 + 80);
  uint64_t v57 = *(void *)(v0 + 88);
  sub_1DDDC();
  sub_B34C0(27);
  swift_bridgeObjectRelease();
  if (v39) {
    v44._countAndFlagsBits = 0x65736C6166;
  }
  else {
    v44._countAndFlagsBits = 1702195828;
  }
  if (v39) {
    uint64_t v45 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v45 = (void *)0xE400000000000000;
  }
  v44._object = v45;
  sub_B3020(v44);
  swift_bridgeObjectRelease();
  v59._countAndFlagsBits = 44;
  v59._object = (void *)0xE100000000000000;
  sub_B3020(v59);
  sub_1DDDC();
  sub_B34C0(43);
  swift_bridgeObjectRelease();
  if (v40) {
    v46._countAndFlagsBits = 1702195828;
  }
  else {
    v46._countAndFlagsBits = 0x65736C6166;
  }
  if (v40) {
    uint64_t v47 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v47 = (void *)0xE500000000000000;
  }
  v46._object = v47;
  sub_B3020(v46);
  swift_bridgeObjectRelease();
  v60._countAndFlagsBits = 44;
  v60._object = (void *)0xE100000000000000;
  sub_B3020(v60);
  swift_bridgeObjectRetain();
  v61._countAndFlagsBits = 0xD000000000000028;
  v61._object = (void *)0x80000000000B5C10;
  sub_B3020(v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DDDC();
  sub_B34C0(41);
  swift_bridgeObjectRelease();
  if (v55) {
    v48._countAndFlagsBits = 0x65736C6166;
  }
  else {
    v48._countAndFlagsBits = 1702195828;
  }
  if (v55) {
    unint64_t v49 = (void *)0xE500000000000000;
  }
  else {
    unint64_t v49 = (void *)0xE400000000000000;
  }
  v48._object = v49;
  sub_B3020(v48);
  swift_bridgeObjectRelease();
  v62._object = (void *)0x80000000000B5C60;
  v62._countAndFlagsBits = 0xD000000000000017;
  sub_B3020(v62);
  swift_bridgeObjectRetain();
  v63._countAndFlagsBits = 0xD000000000000010;
  v63._object = (void *)0x80000000000B5C40;
  sub_B3020(v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_8C308(v50, 0x80000000000B5BF0, 0xD000000000000028, v51, 0xD000000000000017, 0x80000000000B5BB0);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 104) = *(void *)(v56 + v57);
  swift_retain();
  sub_1DE50();
  return _swift_task_switch(isUniquelyReferenced_nonNull_native, v22, v23);
}

uint64_t sub_1D3F8()
{
  sub_7FDC();
  sub_1B6E8(1);
  swift_release();
  sub_ABD0();
  return v0();
}

uint64_t sub_1D45C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_errorRetain();
    swift_errorRetain();
    sub_7424(&qword_E7F40);
    uint64_t v73 = 0;
    uint64_t v74 = 0xE000000000000000;
    if (swift_dynamicCast())
    {
      sub_B34C0(36);
      swift_bridgeObjectRelease();
      sub_1DDFC(0xD00000000000001ALL);
      uint64_t v18 = *(void (**)(void))(v17 + 240);
      sub_1DDEC();
      v18();
      uint64_t v19 = v77;
      sub_7468(&v73, v76);
      uint64_t v20 = sub_1DE14();
      v80._countAndFlagsBits = v21(v20);
      sub_B3020(v80);
      swift_bridgeObjectRelease();
      sub_74F8((uint64_t)&v73);
      v81._countAndFlagsBits = 0x206874697720;
      v81._object = (void *)0xE600000000000000;
      sub_B3020(v81);
      swift_getErrorValue();
      v82._countAndFlagsBits = sub_B3860();
      sub_B3020(v82);
      swift_bridgeObjectRelease();
      uint64_t v22 = v78;
      sub_ABC4();
      sub_1DE34();
      sub_8C2F0(v23, v24, v25, v26, v27, v28);
      swift_bridgeObjectRelease();
      type metadata accessor for DBSiriKitEventSender();
      uint64_t inited = swift_initStaticObject();
      sub_1DDEC();
      v18();
      swift_getErrorValue();
      uint64_t v30 = v61;
      uint64_t v31 = sub_B3860();
      int v39 = sub_1DE6C(v31, v32, v33, v34, v35, v36, v37, v38, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70,
              v71,
              v72,
              v73,
              v74,
              v75,
              v76);
      unsigned int v40 = 57;
    }
    else
    {
      sub_B34C0(29);
      swift_bridgeObjectRelease();
      sub_1DDFC(0xD00000000000001BLL);
      char v42 = *(void (**)(void))(v41 + 240);
      sub_1DDEC();
      v42();
      uint64_t v19 = v77;
      sub_7468(&v73, v76);
      uint64_t v43 = sub_1DE14();
      v83._countAndFlagsBits = v44(v43);
      sub_B3020(v83);
      swift_bridgeObjectRelease();
      sub_74F8((uint64_t)&v73);
      uint64_t v22 = v78;
      sub_ABC4();
      sub_1DE34();
      sub_8C308(v45, v46, v47, v48, v49, v50);
      swift_bridgeObjectRelease();
      type metadata accessor for DBSiriKitEventSender();
      uint64_t inited = swift_initStaticObject();
      sub_1DDEC();
      v42();
      swift_getErrorValue();
      uint64_t v30 = v69;
      uint64_t v51 = sub_B3860();
      int v39 = sub_1DE6C(v51, v52, v53, v54, v55, v56, v57, v58, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70,
              v71,
              v72,
              v73,
              v74,
              v75,
              v76);
      unsigned int v40 = 58;
    }
    sub_A2360((uint64_t)v39, v40, a1, v30, inited, v22, v19);
    swift_bridgeObjectRelease();
    sub_A9CC(a2, 1);
  }
  else
  {
    uint64_t v73 = 0;
    uint64_t v74 = 0xE000000000000000;
    sub_B34C0(31);
    swift_bridgeObjectRelease();
    sub_1DDFC(0xD00000000000001DLL);
    uint64_t v5 = *(void (**)(void))(v4 + 240);
    sub_1DEB8();
    v5();
    uint64_t v6 = v76;
    uint64_t v7 = v77;
    sub_7468(&v73, v76);
    v79._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    sub_B3020(v79);
    swift_bridgeObjectRelease();
    sub_74F8((uint64_t)&v73);
    unint64_t v8 = v78;
    sub_ABC4();
    sub_8C308(v9, v8, v10, v11, 0xD00000000000001ELL, 0x80000000000B5B30);
    swift_bridgeObjectRelease();
    type metadata accessor for DBSiriKitEventSender();
    uint64_t v12 = swift_initStaticObject();
    sub_1DEB8();
    v5();
    uint64_t v13 = v76;
    uint64_t v14 = v77;
    uint64_t v15 = sub_7468(&v73, v76);
    sub_A2360((uint64_t)v15, 1u, 0, 0, v12, v13, v14);
  }
  return sub_74F8((uint64_t)&v73);
}

uint64_t sub_1D884()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_logger;
  sub_B2D30();
  sub_1DECC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D924()
{
  sub_1D884();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1D97C()
{
  return type metadata accessor for DBExecutor(0);
}

uint64_t type metadata accessor for DBExecutor(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_E8218);
}

uint64_t sub_1D9A4()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA64(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_1DA70(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_A9CC(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1DA88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_1DEA8(v5);
  void *v6 = v7;
  v6[1] = sub_A7BC;
  return sub_1C0FC(a1, a2, v2);
}

uint64_t sub_1DB2C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1DB74(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)sub_1DEA8(v7);
  *unint64_t v8 = v9;
  v8[1] = sub_AB58;
  return sub_1C1B8(a1, v3, v4, v6, v5);
}

uint64_t sub_1DC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E76F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC94(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E76F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCF4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1DD2C(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_1DEA8(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_A7BC;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_EB850 + dword_EB850);
  return v7(a1, v3);
}

void sub_1DDFC(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_1DE14()
{
  return v0;
}

void *sub_1DE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v26 = a25;
  return sub_7468(&a22, v26);
}

uint64_t sub_1DEA8(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_1DED8(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_DB490;
  v7._object = a2;
  Swift::Int v4 = sub_B3680(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DF2C(char a1)
{
  if (a1) {
    return 0x6574656C706D6F63;
  }
  else {
    return 0x6572676F72506E69;
  }
}

uint64_t sub_1DF6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_5DF9C(*a1, *a2);
}

Swift::Int sub_1DF78()
{
  return sub_7F248();
}

uint64_t sub_1DF80(uint64_t a1)
{
  return sub_80358(a1, *v1);
}

uint64_t sub_1DF88(uint64_t a1)
{
  return sub_803F0(a1, *v1);
}

uint64_t sub_1DF90@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DED8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1DFC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DF2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DFEC()
{
  return sub_B1C80();
}

uint64_t sub_1E07C(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return sub_FCA0((uint64_t)sub_1E094);
}

uint64_t sub_1E094()
{
  uint64_t v1 = v0[5];
  sub_B34C0(33);
  swift_bridgeObjectRelease();
  uint64_t v2 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_state;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_state)) {
    v3._countAndFlagsBits = 0x6574656C706D6F63;
  }
  else {
    v3._countAndFlagsBits = 0x6572676F72506E69;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_state)) {
    uint64_t v4 = (void *)0xE900000000000064;
  }
  else {
    uint64_t v4 = (void *)0xEA00000000007373;
  }
  uint64_t v5 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_logger;
  v0[6] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_logger;
  uint64_t v6 = v1 + v5;
  v3._object = v4;
  sub_B3020(v3);
  swift_bridgeObjectRelease();
  sub_1FBB0(0xD00000000000001FLL, 0x80000000000B5E10);
  swift_bridgeObjectRelease();
  uint64_t v7 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender;
  v0[7] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender;
  unint64_t v8 = (void *)(v1 + v7);
  sub_7468((void *)(v1 + v7), *(void *)(v1 + v7 + 24));
  uint64_t v9 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_name;
  v0[8] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_name;
  uint64_t v10 = (void *)(v1 + v9);
  uint64_t v11 = *(void *)(v1 + v9 + 24);
  uint64_t v12 = *(void *)(v1 + v9 + 32);
  sub_7468((void *)(v1 + v9), v11);
  sub_1FC04();
  sub_A2360(v13, v14, v15, v16, v17, v11, v12);
  if (*(unsigned char *)(v1 + v2))
  {
    sub_7A1C();
    sub_1FBB0(v18, v19);
    v0[2] = sub_1EE74();
    type metadata accessor for WarningsFlow();
    sub_1FAE0(&qword_E8508, (void (*)(uint64_t))type metadata accessor for WarningsFlow);
    sub_B1F90();
    swift_release();
    sub_ABD0();
    sub_1FBE8();
    __asm { BRAA            X1, X16 }
  }
  sub_7468((void *)(v0[5] + 304), *(void *)(v0[5] + 328));
  if ((sub_8EAE8() & 1) != 0
    && (uint64_t v22 = swift_bridgeObjectRetain(), sub_1F504(v22), sub_1FC24(), v23 = *(void *)(v6 + 16), swift_release(), v23))
  {
    sub_7468(v8, v8[3]);
    uint64_t v24 = v10[3];
    uint64_t v25 = v10[4];
    sub_7468(v10, v24);
    sub_1FC04();
    sub_A2360(v26, v27, v28, v29, v30, v24, v25);
    uint64_t v31 = (void *)swift_task_alloc();
    v0[9] = v31;
    void *v31 = v0;
    v31[1] = sub_1E41C;
    sub_1FBE8();
    return sub_1ED20(v32);
  }
  else
  {
    v0[10] = 0;
    uint64_t v35 = (void *)swift_task_alloc();
    v0[11] = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_1E4DC;
    sub_1FBE8();
    return sub_1EF00();
  }
}

uint64_t sub_1E41C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

uint64_t sub_1E4DC()
{
  sub_7FDC();
  sub_7FC4();
  sub_1FC14();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 112) = v3;
  swift_task_dealloc();
  return _swift_task_switch(sub_1E5AC, 0, 0);
}

uint64_t sub_1E5AC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 112);
  sub_7468((void *)(*(void *)(v0 + 40) + 304), *(void *)(*(void *)(v0 + 40) + 328));
  if ((sub_8EAE8() & 1) != 0
    || (v1 & 1) != 0
    || (uint64_t v2 = swift_bridgeObjectRetain(), sub_A0BE8(v2), sub_1FC24(), v3 = *(void *)(v1 + 16), swift_release(), v3 > 1))
  {
LABEL_9:
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t v20 = (void *)(v19 + *(void *)(v0 + 64));
    uint64_t v21 = (void *)(v19 + *(void *)(v0 + 56));
    sub_7A1C();
    sub_8C308(v22, v23, 0xD00000000000002CLL, 0x80000000000B5E30, 0x2865747563657865, 0xE900000000000029);
    sub_7468(v21, v21[3]);
    uint64_t v24 = v20[3];
    uint64_t v25 = v20[4];
    sub_7468(v20, v24);
    sub_1FC04();
    sub_A2360(v26, v27, v28, v29, v30, v24, v25);
    *(void *)(v0 + 24) = sub_1EE74();
    type metadata accessor for WarningsFlow();
    sub_1FAE0(&qword_E8508, (void (*)(uint64_t))type metadata accessor for WarningsFlow);
    sub_B1F90();
    swift_release();
    sub_ABD0();
    return v31();
  }
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = (void *)(v4 + *(void *)(v0 + 64));
  uint64_t v6 = *sub_7468((void *)(v4 + *(void *)(v0 + 56)), *(void *)(v4 + *(void *)(v0 + 56) + 24));
  uint64_t v7 = v5[3];
  uint64_t v8 = v5[4];
  uint64_t v9 = sub_7468(v5, v7);
  sub_A2360((uint64_t)v9, 1u, 0, 0, v6, v7, v8);
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_A0BE8(v10);
  sub_1FC24();
  uint64_t v11 = v5[2];
  swift_release();
  if (v11)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_A0BE8(v12);
    sub_1FC24();
    uint64_t v13 = v5[2];
    swift_release();
    if (v13 == 1)
    {
      sub_1FC3C();
      sub_7A1C();
      sub_1FB28(v14, v15, (uint64_t)"DailyBriefingFlowPlugin/ConclusionFlow.swift");
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_1E9F0;
      uint64_t v17 = *(void *)(v0 + 32);
      return sub_1ED20(v17);
    }
    goto LABEL_9;
  }
  sub_1FC3C();
  sub_7A1C();
  sub_1FB28(v32, v33, (uint64_t)"DailyBriefingFlowPlugin/ConclusionFlow.swift");
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v34;
  void *v34 = v0;
  v34[1] = sub_1E930;
  uint64_t v35 = *(void *)(v0 + 32);
  return sub_1EAB0(v35);
}

uint64_t sub_1E930()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

uint64_t sub_1E9F0()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

uint64_t sub_1EAB0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_FCA0((uint64_t)sub_1EAC8);
}

uint64_t sub_1EAC8()
{
  sub_7FDC();
  sub_7468((void *)(v0[3] + 184), *(void *)(v0[3] + 208));
  v0[4] = sub_67E90();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1EB70;
  return sub_3D740();
}

uint64_t sub_1EB70()
{
  sub_7FDC();
  sub_7FC4();
  sub_1FC14();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  *(void *)(v6 + 48) = v5;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1EC58, 0, 0);
}

uint64_t sub_1EC58()
{
  uint64_t v1 = sub_7468((void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender), *(void *)(*(void *)(v0 + 24)+ OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender+ 24));
  sub_1FB60(v1, OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_name);
  swift_retain();
  sub_B1F50();
  swift_release();
  swift_release();
  sub_ABD0();
  return v2();
}

uint64_t sub_1ED20(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_FCA0((uint64_t)sub_1ED38);
}

uint64_t sub_1ED38()
{
  sub_7FDC();
  sub_7468((void *)(v0[3] + 184), *(void *)(v0[3] + 208));
  v0[4] = sub_67E90();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1EB70;
  return sub_3CF40();
}

uint64_t sub_1EDE0(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_state) = 1;
  uint64_t v2 = sub_7468((void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender), *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender + 24));
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_name);
  uint64_t v4 = *v2;
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = sub_7468(v3, v5);

  return sub_A2368((uint64_t)v7, 1u, 0, 0, v4, v5, v6);
}

uint64_t sub_1EE74()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1F7B4(v0 + 24, (uint64_t)v5);
  type metadata accessor for DBSiriKitEventSender();
  swift_bridgeObjectRetain();
  uint64_t inited = swift_initStaticObject();
  type metadata accessor for WarningsFlow();
  uint64_t v3 = swift_allocObject();
  return sub_1F810(v1, (uint64_t)v5, inited, v3);
}

uint64_t sub_1EF00()
{
  *(void *)(v1 + 16) = v0;
  return sub_FCA0((uint64_t)sub_1EF18);
}

uint64_t sub_1EF18()
{
  sub_7468((void *)(*(void *)(v0 + 16) + 128), *(void *)(*(void *)(v0 + 16) + 152));
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_ED050 + dword_ED050);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1EFE8;
  return v3();
}

uint64_t sub_1EFE8()
{
  sub_7FDC();
  uint64_t v2 = v1;
  sub_7FC4();
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_1F0B4()
{
  swift_bridgeObjectRelease();
  sub_1FA58(v0 + 24);
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_name);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender);
  return v0;
}

uint64_t sub_1F148()
{
  sub_1F0B4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1F1A0()
{
  return type metadata accessor for ConclusionFlow();
}

uint64_t type metadata accessor for ConclusionFlow()
{
  uint64_t result = qword_E83C0;
  if (!qword_E83C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1F1F0()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConclusionFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConclusionFlow.State()
{
  return &type metadata for ConclusionFlow.State;
}

unint64_t sub_1F3BC()
{
  unint64_t result = qword_E84E8[0];
  if (!qword_E84E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_E84E8);
  }
  return result;
}

uint64_t sub_1F408()
{
  return sub_1DFEC();
}

uint64_t sub_1F42C(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_A7BC;
  return sub_1E07C(a1);
}

uint64_t sub_1F4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ConclusionFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t *sub_1F504(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v5 = (unint64_t *)((char *)&v9 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_A0BCC(0, v4, v5);
    unsigned int v6 = sub_1F668(v5, v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (unint64_t *)swift_slowAlloc();
    sub_A0BCC(0, v4, v7);
    uint64_t v2 = sub_1F668(v7, v4, (uint64_t)v2);
    swift_slowDealloc();
  }
  return v2;
}

unint64_t *sub_1F668(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_A0E54(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_A0E54(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_A0E54(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_20:
    if (*(unsigned char *)(*(void *)(a3 + 56) + v12) == 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_A0E54(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_A0E54(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_A0E54(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1F7B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1F810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_B17F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DBSiriKitEventSender();
  uint64_t v19 = &off_DF120;
  uint64_t v20 = sub_1FAE0(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v17 = a3;
  uint64_t v12 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12WarningsFlow_logger;
  if (qword_E6D90 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_B2D30();
  uint64_t v14 = sub_B378(v13, (uint64_t)qword_F5408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a4 + v12, v14, v13);
  uint64_t v15 = a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12WarningsFlow_name;
  *(void *)(v15 + 24) = &type metadata for CommonSpecs;
  *(void *)(v15 + 32) = &off_DE228;
  *(unsigned char *)uint64_t v15 = 1;
  *(void *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12WarningsFlow_specExecutionStatus) = a1;
  sub_1F7B4(a2, a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12WarningsFlow_flowParams);
  sub_B17E0();
  sub_1FA58(a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12WarningsFlow_now, v11, v8);
  sub_1FAAC(&v17, (_OWORD *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12WarningsFlow_siriKitEventSender));
  return a4;
}

uint64_t sub_1FA58(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1FAAC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1FAC4()
{
  return sub_1EDE0(v0);
}

uint64_t sub_1FAE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1FB28(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_8C320(a1, a2, 0xD00000000000002CLL, (a3 - 32) | 0x8000000000000000, 0x2865747563657865, 0xE900000000000029);
}

uint64_t sub_1FB60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + a2);
  uint64_t v4 = *a1;
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = sub_7468(v3, v5);
  return sub_A2368((uint64_t)v7, 0x11u, 0, 0, v4, v5, v6);
}

void sub_1FBB0(uint64_t a1, unint64_t a2)
{
  sub_8C308(a1, a2, 0xD00000000000002CLL, v2, 0x2865747563657865, 0xE900000000000029);
}

uint64_t sub_1FC24()
{
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1FC50(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_B17F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1FD44(uint64_t a1)
{
  uint64_t v2 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1FDC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1FE6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1FF30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1FFC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2007C);
}

uint64_t sub_2007C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_B17F0();
  sub_176F8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_C844(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_2010C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_20120);
}

void sub_20120(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_B17F0();
  sub_176F8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_AA40(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for WeatherState()
{
  uint64_t result = qword_E8570;
  if (!qword_E8570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_201F4()
{
  uint64_t result = sub_B17F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_202A4(uint64_t a1, uint64_t a2)
{
  if ((sub_B17B0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for WeatherState();
  if (*(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (sub_B37E0() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(int *)(v5 + 28);
  uint64_t v12 = *(void **)(a1 + v11);
  uint64_t v13 = *(void **)(a2 + v11);

  return sub_21480(v12, v13);
}

BOOL sub_20354(char a1, char a2)
{
  return a1 == a2;
}

void sub_20364(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_2038C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697461636F766E69 && a2 == 0xEE00657461446E6FLL;
  if (v2 || (sub_B37E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000000B4180 || (sub_B37E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000000B4160 || (sub_B37E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000000B5F20)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_B37E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

Swift::Int sub_20554(unsigned __int8 a1)
{
  return sub_B38E0();
}

unint64_t sub_2059C(char a1)
{
  unint64_t result = 0x697461636F766E69;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2063C(void *a1)
{
  uint64_t v3 = sub_7424(&qword_E85D0);
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v9 = v8 - v7;
  sub_7468(a1, a1[3]);
  sub_20D20();
  sub_B3900();
  sub_B17F0();
  sub_2164C(&qword_E74D8, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_218BC();
  if (!v1)
  {
    type metadata accessor for WeatherState();
    sub_B3770();
    sub_B3750();
    sub_7424(&qword_E85C0);
    sub_20DB4(&qword_E85D8);
    sub_218BC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_20848@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_B17F0();
  sub_7870();
  uint64_t v22 = v5;
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v23 = v8 - v7;
  sub_7424(&qword_E85B0);
  sub_7870();
  __chkstk_darwin(v9);
  sub_7A0C();
  BOOL v10 = (int *)type metadata accessor for WeatherState();
  sub_79FC();
  __chkstk_darwin(v11);
  sub_7A0C();
  uint64_t v14 = v13 - v12;
  sub_7468(a1, a1[3]);
  sub_20D20();
  sub_B38F0();
  if (v2) {
    return sub_74F8((uint64_t)a1);
  }
  sub_2164C(&qword_E74B8, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_B3710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v14, v23, v4);
  sub_B36F0();
  *(void *)(v14 + v10[5]) = v15;
  uint64_t v16 = sub_B36D0();
  long long v17 = (uint64_t *)(v14 + v10[6]);
  *long long v17 = v16;
  v17[1] = v18;
  sub_7424(&qword_E85C0);
  sub_20DB4(&qword_E85C8);
  sub_B3710();
  sub_218AC();
  v19();
  *(void *)(v14 + v10[7]) = v24;
  sub_21594(v14, a2, (void (*)(void))type metadata accessor for WeatherState);
  sub_74F8((uint64_t)a1);
  return sub_215F4(v14, (void (*)(void))type metadata accessor for WeatherState);
}

BOOL sub_20C00(char *a1, char *a2)
{
  return sub_20354(*a1, *a2);
}

Swift::Int sub_20C0C()
{
  return sub_20554(*v0);
}

void sub_20C14(uint64_t a1)
{
  sub_20364(a1, *v1);
}

unint64_t sub_20C1C()
{
  return sub_2059C(*v0);
}

uint64_t sub_20C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2038C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20C4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A758();
  *a1 = result;
  return result;
}

uint64_t sub_20C74(uint64_t a1)
{
  unint64_t v2 = sub_20D20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20CB0(uint64_t a1)
{
  unint64_t v2 = sub_20D20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_20CEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20848(a1, a2);
}

uint64_t sub_20D04(void *a1)
{
  return sub_2063C(a1);
}

unint64_t sub_20D20()
{
  unint64_t result = qword_E85B8;
  if (!qword_E85B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E85B8);
  }
  return result;
}

uint64_t sub_20D6C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_20DB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20D6C(&qword_E85C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_20E18(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  }
  if (v6 != v7) {
    return 0;
  }
  if (!v6) {
    return &dword_0 + 1;
  }
  uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v8 = a1;
  }
  if (v5) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v10 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v11 = v10;
  }
  if (v9 == v11) {
    return &dword_0 + 1;
  }
  if (v6 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  unint64_t v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id result = (id)sub_B34F0();
    goto LABEL_20;
  }
  if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
  {
    __break(1u);
    goto LABEL_46;
  }
  id result = *(id *)(a1 + 32);
LABEL_20:
  uint64_t v5 = result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_46:
    id v13 = (id)sub_B34F0();
LABEL_23:
    uint64_t v14 = v13;
    sub_21554();
    char v15 = sub_B3360();

    if (v15)
    {
      uint64_t v16 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v16 + i == 5;
        if (v16 + i == 5) {
          break;
        }
        unint64_t v18 = i - 4;
        if (v24)
        {
          id v19 = (id)sub_B34F0();
        }
        else
        {
          if (v18 >= *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
          {
            __break(1u);
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
          id v19 = *(id *)(a1 + 8 * i);
        }
        uint64_t v20 = v19;
        if (v2)
        {
          id v21 = (id)sub_B34F0();
        }
        else
        {
          if (v18 >= *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_42;
          }
          id v21 = *(id *)(a2 + 8 * i);
        }
        uint64_t v22 = v21;
        char v23 = sub_B3360();

        if ((v23 & 1) == 0) {
          return (id)v6;
        }
      }
      return (id)v6;
    }
    return 0;
  }
  if (*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
  {
    id v13 = *(id *)(a2 + 32);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_2107C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarEvent(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v10 = (uint64_t *)((char *)&v20 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_19:
    char v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_21594(a1 + v12, (uint64_t)v10, (void (*)(void))type metadata accessor for CalendarEvent);
      sub_21594(a2 + v12, (uint64_t)v7, (void (*)(void))type metadata accessor for CalendarEvent);
      BOOL v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_B37E0() & 1) == 0 || (sub_B17B0() & 1) == 0) {
        break;
      }
      char v16 = sub_B16B0();
      sub_215F4((uint64_t)v7, (void (*)(void))type metadata accessor for CalendarEvent);
      sub_215F4((uint64_t)v10, (void (*)(void))type metadata accessor for CalendarEvent);
      BOOL v18 = v14-- != 0;
      if (v16)
      {
        v12 += v13;
        if (v18) {
          continue;
        }
      }
      return v16 & 1;
    }
    sub_215F4((uint64_t)v7, (void (*)(void))type metadata accessor for CalendarEvent);
    sub_215F4((uint64_t)v10, (void (*)(void))type metadata accessor for CalendarEvent);
    goto LABEL_19;
  }
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_21288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B1700();
  sub_7870();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      uint64_t v13 = v7 + 16;
      uint64_t v32 = v8;
      unint64_t v33 = v14;
      uint64_t v15 = (v12 + 32) & ~v12;
      uint64_t v16 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v30 = v16;
      uint64_t v31 = (void (**)(uint64_t, uint64_t))(v13 - 8);
      uint64_t v17 = v11 - 1;
      uint64_t v18 = v8;
      do
      {
        uint64_t v19 = a1;
        uint64_t v20 = v10;
        id v21 = v10;
        uint64_t v22 = v33;
        v33((uint64_t)v20, a1 + v15, v4);
        uint64_t v23 = a2;
        v22(v18, a2 + v15, v4);
        uint64_t v10 = v21;
        sub_2164C(&qword_E85E8, (void (*)(uint64_t))&type metadata accessor for URL);
        char v24 = sub_B2F10();
        uint64_t v25 = *v31;
        (*v31)(v18, v4);
        v25((uint64_t)v21, v4);
        BOOL v27 = v17-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v15 += v30;
        a2 = v23;
        a1 = v19;
      }
      while (v27);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_21480(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    char v7 = sub_B37E0();
    uint64_t result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v8 = a1 + 7;
  uint64_t v9 = a2 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v8 - 1);
    if (result != *(v9 - 1) || *v8 != *v9)
    {
      uint64_t result = sub_B37E0();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_21554()
{
  unint64_t result = qword_E85E0;
  if (!qword_E85E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_E85E0);
  }
  return result;
}

uint64_t sub_21594(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_79FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_215F4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_79FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2164C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21694(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherState.CodingKeys()
{
  return &type metadata for WeatherState.CodingKeys;
}

unint64_t sub_217C0()
{
  unint64_t result = qword_E85F0;
  if (!qword_E85F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E85F0);
  }
  return result;
}

unint64_t sub_21810()
{
  unint64_t result = qword_E85F8;
  if (!qword_E85F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E85F8);
  }
  return result;
}

unint64_t sub_21860()
{
  unint64_t result = qword_E8600;
  if (!qword_E8600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8600);
  }
  return result;
}

uint64_t sub_218BC()
{
  return sub_B3790();
}

uint64_t getEnumTagSinglePayload for WeatherAirQuality.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_21964(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for DailyBriefingNLIntent.DailyBriefingVerb()
{
}

unsigned char *sub_21A64(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21B30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for DailyBriefingNLIntent.DailyBriefingNoun()
{
}

void type metadata accessor for DailyBriefingNLIntent()
{
}

uint64_t getEnumTagSinglePayload for SupportedFeatures(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_21BF8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for DailyBriefingNLIntent.DailyBriefingType()
{
}

unint64_t sub_21CFC()
{
  unint64_t result = qword_E8608;
  if (!qword_E8608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8608);
  }
  return result;
}

unint64_t sub_21D48(char a1)
{
  sub_B34C0(20);
  swift_bridgeObjectRelease();
  unint64_t v2 = sub_21DEC(a1);
  uint64_t v4 = sub_92204(v2, v3);
  unsigned int v6 = v5;
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v4;
  v8._object = v6;
  sub_B3020(v8);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

unint64_t sub_21DEC(char a1)
{
  unint64_t result = 0x697242796C696164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
    case 3:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 7368801;
      break;
    case 6:
      unint64_t result = 0x656D614E707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21ECC(unsigned __int8 a1)
{
  switch(a1 >> 6)
  {
    case 1:
      if (a1) {
        uint64_t result = 0x657461647075;
      }
      else {
        uint64_t result = 0x676E696665697262;
      }
      break;
    case 2:
      uint64_t result = 0x736972616D6D7573;
      switch(a1 & 0x3F)
      {
        case 1:
          uint64_t result = sub_23BB0();
          break;
        case 2:
          uint64_t result = sub_23C50(1633972341);
          break;
        case 3:
          uint64_t result = sub_23C50(1701602660);
          break;
        case 4:
          uint64_t result = sub_23C00();
          break;
        case 5:
          uint64_t result = 0x746165706572;
          break;
        default:
          return result;
      }
      break;
    case 3:
      uint64_t result = 0x7261646E656C6163;
      switch(a1 & 0x3F)
      {
        case 1:
          uint64_t result = sub_23C10();
          break;
        case 2:
          uint64_t result = sub_23BEC();
          break;
        case 3:
          uint64_t result = sub_23BD4();
          break;
        case 4:
          uint64_t result = 0x72656874616577;
          break;
        default:
          return result;
      }
      break;
    default:
      uint64_t v2 = 28526;
      if (a1 != 1) {
        uint64_t v2 = 0x6C65636E6163;
      }
      if (a1) {
        uint64_t result = v2;
      }
      else {
        uint64_t result = 7562617;
      }
      break;
  }
  return result;
}

uint64_t sub_22084(char a1)
{
  if (!a1) {
    return 7562617;
  }
  if (a1 == 1) {
    return 28526;
  }
  return 0x6C65636E6163;
}

uint64_t sub_220C4(char a1)
{
  if (a1) {
    return 0x657461647075;
  }
  else {
    return 0x676E696665697262;
  }
}

uint64_t sub_220F8(char a1)
{
  uint64_t result = 0x736972616D6D7573;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_23BB0();
      break;
    case 2:
      uint64_t result = sub_23C50(1633972341);
      break;
    case 3:
      uint64_t result = sub_23C50(1701602660);
      break;
    case 4:
      uint64_t result = sub_23C00();
      break;
    case 5:
      uint64_t result = 0x746165706572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2218C(char a1)
{
  uint64_t result = 0x7261646E656C6163;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_23C10();
      break;
    case 2:
      uint64_t result = sub_23BEC();
      break;
    case 3:
      uint64_t result = sub_23BD4();
      break;
    case 4:
      uint64_t result = 0x72656874616577;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22208(uint64_t a1)
{
  return sub_23BA8(a1, &qword_E86E0, 25, 0x80000000000B5FA0, &qword_F4F00);
}

uint64_t sub_22230(uint64_t a1)
{
  return sub_222D4(a1, &qword_E86F8, 0xD000000000000011, 0x80000000000B5F60, &qword_F4F08);
}

uint64_t sub_2225C(uint64_t a1)
{
  return sub_23BA8(a1, &qword_E86C8, 17, 0x80000000000B5F60, &qword_F4F10);
}

uint64_t sub_22284(uint64_t a1)
{
  return sub_23BA8(a1, &qword_E86D8, 17, 0x80000000000B5F40, &qword_F4F18);
}

uint64_t sub_222AC(uint64_t a1)
{
  return sub_23BA8(a1, &qword_E86D0, 17, 0x80000000000B5F80, &qword_F4F20);
}

uint64_t sub_222D4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_7424(a2);
  swift_allocObject();
  uint64_t result = sub_B2440();
  *a5 = result;
  return result;
}

uint64_t sub_22334()
{
  sub_7424(&qword_E8720);
  swift_allocObject();
  uint64_t result = sub_B2440();
  qword_F4F28 = result;
  return result;
}

uint64_t sub_22390()
{
  sub_7424(&qword_E86E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_BEC70;
  if (qword_E6BE8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F4F28;
  *(void *)(v0 + 56) = sub_7424(&qword_E8720);
  *(void *)(v0 + 64) = sub_238F4(&qword_E8728, &qword_E8720);
  *(void *)(v0 + 32) = v1;
  sub_B23D0();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_B23C0();
  qword_F4F30 = result;
  return result;
}

uint64_t sub_22498()
{
  sub_7424(&qword_E86E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_BF610;
  if (qword_E6BC0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F4F00;
  *(void *)(v0 + 56) = sub_7424(&qword_E86E0);
  *(void *)(v0 + 64) = sub_238F4(&qword_E86F0, &qword_E86E0);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = qword_E6BC8;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_F4F08;
  *(void *)(v0 + 96) = sub_7424(&qword_E86F8);
  *(void *)(v0 + 104) = sub_238F4(&qword_E8700, &qword_E86F8);
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = qword_E6BD0;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_F4F10;
  *(void *)(v0 + 136) = sub_7424(&qword_E86C8);
  *(void *)(v0 + 144) = sub_238F4(&qword_E8708, &qword_E86C8);
  *(void *)(v0 + 112) = v5;
  uint64_t v6 = qword_E6BF0;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_F4F30;
  *(void *)(v0 + 176) = sub_B23D0();
  *(void *)(v0 + 184) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v0 + 152) = v7;
  uint64_t v8 = qword_E6BD8;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_F4F18;
  *(void *)(v0 + 216) = sub_7424(&qword_E86D8);
  *(void *)(v0 + 224) = sub_238F4(&qword_E8710, &qword_E86D8);
  *(void *)(v0 + 192) = v9;
  uint64_t v10 = qword_E6BE0;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_F4F20;
  *(void *)(v0 + 256) = sub_7424(&qword_E86D0);
  *(void *)(v0 + 264) = sub_238F4(&qword_E8718, &qword_E86D0);
  *(void *)(v0 + 232) = v11;
  sub_B2430();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_B2420();
  qword_F4F38 = result;
  return result;
}

uint64_t sub_2280C()
{
  sub_23C44();
  v2._rawValue = &off_DB4E0;
  v4._object = v0;
  sub_B3680(v2, v4);
  sub_23C20();
  if (v1 >= 3) {
    return 3;
  }
  else {
    return v1;
  }
}

_UNKNOWN **sub_2284C()
{
  return &off_DB548;
}

uint64_t sub_22858(unsigned __int8 *a1, char *a2)
{
  return sub_5DED0(*a1, *a2);
}

Swift::Int sub_22864()
{
  return sub_7F268();
}

uint64_t sub_2286C()
{
  return sub_802E4();
}

Swift::Int sub_22874()
{
  return sub_8048C();
}

uint64_t sub_2287C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2280C();
  *a1 = result;
  return result;
}

uint64_t sub_228AC()
{
  char v1 = sub_23C38();
  uint64_t result = sub_22084(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

void sub_228D4(void *a1@<X8>)
{
  *a1 = &off_DB548;
}

uint64_t sub_228E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22F70(a1, a2, a3, (uint64_t (*)(void))sub_239D8, (uint64_t (*)(void))sub_23A24, (uint64_t (*)(void))sub_23A70);
}

uint64_t sub_22924()
{
  sub_23C44();
  v2._rawValue = &off_DB1F8;
  v4._object = v0;
  sub_B3680(v2, v4);
  sub_23C20();
  if (v1 >= 6) {
    return 6;
  }
  else {
    return v1;
  }
}

_UNKNOWN **sub_22964()
{
  return &off_DB570;
}

uint64_t sub_22970()
{
  sub_23C44();
  v2._rawValue = &off_DB598;
  v4._object = v0;
  sub_B3680(v2, v4);
  sub_23C20();
  if (v1 >= 7) {
    return 7;
  }
  else {
    return v1;
  }
}

_UNKNOWN **sub_229B0()
{
  return &off_DB660;
}

unint64_t sub_229BC(char a1)
{
  unint64_t result = 0x6665697262;
  switch(a1)
  {
    case 1:
      unint64_t result = 6579297;
      break;
    case 2:
      unint64_t result = sub_23C50(1633972341);
      break;
    case 3:
      unint64_t result = sub_23C50(1701602660);
      break;
    case 4:
      unint64_t result = 0x65676E616863;
      break;
    case 5:
      unint64_t result = 1684104562;
      break;
    case 6:
      unint64_t result = 2036427888;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22A74()
{
  sub_23C44();
  v2._rawValue = &off_DB688;
  v4._object = v0;
  sub_B3680(v2, v4);
  sub_23C20();
  if (v1 >= 5) {
    return 5;
  }
  else {
    return v1;
  }
}

_UNKNOWN **sub_22AB4()
{
  return &off_DB720;
}

uint64_t sub_22AC0()
{
  sub_23C44();
  v2._rawValue = &off_DB748;
  v5._object = v0;
  sub_B3680(v2, v5);
  sub_23C20();
  if (v1 == 1) {
    unsigned int v3 = 1;
  }
  else {
    unsigned int v3 = 2;
  }
  if (v1) {
    return v3;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_22B08()
{
  return &off_DB798;
}

uint64_t sub_22B14(unsigned __int8 *a1, char *a2)
{
  return sub_5DB34(*a1, *a2);
}

Swift::Int sub_22B20()
{
  return sub_7F274(*v0);
}

uint64_t sub_22B28()
{
  return sub_800E0();
}

Swift::Int sub_22B30(uint64_t a1)
{
  return sub_80588(a1, *v1);
}

uint64_t sub_22B38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22924();
  *a1 = result;
  return result;
}

uint64_t sub_22B68()
{
  char v1 = sub_23C38();
  uint64_t result = sub_220F8(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

void sub_22B90(void *a1@<X8>)
{
  *a1 = &off_DB570;
}

uint64_t sub_22BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22F70(a1, a2, a3, (uint64_t (*)(void))sub_23208, (uint64_t (*)(void))sub_23254, (uint64_t (*)(void))sub_232A0);
}

uint64_t sub_22BE0(unsigned __int8 *a1, char *a2)
{
  return sub_5D978(*a1, *a2);
}

Swift::Int sub_22BEC()
{
  return sub_7F28C(*v0);
}

uint64_t sub_22BF4()
{
  return sub_7FFF0();
}

Swift::Int sub_22BFC(uint64_t a1)
{
  return sub_805A0(a1, *v1);
}

uint64_t sub_22C04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22970();
  *a1 = result;
  return result;
}

unint64_t sub_22C34()
{
  char v1 = sub_23C38();
  unint64_t result = sub_229BC(v1);
  unint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

void sub_22C5C(void *a1@<X8>)
{
  *a1 = &off_DB660;
}

uint64_t sub_22C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22F70(a1, a2, a3, (uint64_t (*)(void))sub_23ABC, (uint64_t (*)(void))sub_23B08, (uint64_t (*)(void))sub_23B54);
}

uint64_t sub_22CAC()
{
  return sub_5DD00();
}

Swift::Int sub_22CB8()
{
  return sub_7F2A4(*v0);
}

uint64_t sub_22CC0()
{
  return sub_801D8();
}

Swift::Int sub_22CC8(uint64_t a1)
{
  return sub_80570(a1, *v1);
}

uint64_t sub_22CD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22A74();
  *a1 = result;
  return result;
}

uint64_t sub_22D00()
{
  char v1 = sub_23C38();
  uint64_t result = sub_2218C(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

void sub_22D28(void *a1@<X8>)
{
  *a1 = &off_DB720;
}

uint64_t sub_22D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22F70(a1, a2, a3, (uint64_t (*)(void))sub_233D0, (uint64_t (*)(void))sub_2341C, (uint64_t (*)(void))sub_23468);
}

uint64_t sub_22D78()
{
  return sub_238F4(&qword_E8610, &qword_E8618);
}

unint64_t sub_22DB8()
{
  unint64_t result = qword_E8620;
  if (!qword_E8620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8620);
  }
  return result;
}

unint64_t sub_22E08()
{
  unint64_t result = qword_E8628;
  if (!qword_E8628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8628);
  }
  return result;
}

unint64_t sub_22E58()
{
  unint64_t result = qword_E8630;
  if (!qword_E8630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8630);
  }
  return result;
}

uint64_t sub_22EA4(char *a1, char *a2)
{
  return sub_5DE40(*a1, *a2);
}

Swift::Int sub_22EB0()
{
  return sub_7F2BC();
}

uint64_t sub_22EB8()
{
  return sub_8027C();
}

Swift::Int sub_22EC0()
{
  return sub_80504();
}

uint64_t sub_22EC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22AC0();
  *a1 = result;
  return result;
}

uint64_t sub_22EF8()
{
  char v1 = sub_23C38();
  uint64_t result = sub_220C4(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

void sub_22F20(void *a1@<X8>)
{
  *a1 = &off_DB798;
}

uint64_t sub_22F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22F70(a1, a2, a3, (uint64_t (*)(void))sub_232EC, (uint64_t (*)(void))sub_23338, (uint64_t (*)(void))sub_23384);
}

uint64_t sub_22F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a4();
  uint64_t v11 = a5();
  uint64_t v12 = a6();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v10, v11, v12);
}

uint64_t sub_23000()
{
  return sub_238F4(&qword_E8638, &qword_E8640);
}

unint64_t sub_23040()
{
  unint64_t result = qword_E8648;
  if (!qword_E8648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8648);
  }
  return result;
}

unint64_t sub_23090()
{
  unint64_t result = qword_E8650;
  if (!qword_E8650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8650);
  }
  return result;
}

unint64_t sub_230E0()
{
  unint64_t result = qword_E8658;
  if (!qword_E8658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8658);
  }
  return result;
}

uint64_t sub_2312C()
{
  return sub_238F4(&qword_E8660, &qword_E8668);
}

unint64_t sub_2316C()
{
  unint64_t result = qword_E8670;
  if (!qword_E8670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8670);
  }
  return result;
}

unint64_t sub_231BC()
{
  unint64_t result = qword_E8678;
  if (!qword_E8678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8678);
  }
  return result;
}

unint64_t sub_23208()
{
  unint64_t result = qword_E8680;
  if (!qword_E8680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8680);
  }
  return result;
}

unint64_t sub_23254()
{
  unint64_t result = qword_E8688;
  if (!qword_E8688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8688);
  }
  return result;
}

unint64_t sub_232A0()
{
  unint64_t result = qword_E8690;
  if (!qword_E8690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8690);
  }
  return result;
}

unint64_t sub_232EC()
{
  unint64_t result = qword_E8698;
  if (!qword_E8698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8698);
  }
  return result;
}

unint64_t sub_23338()
{
  unint64_t result = qword_E86A0;
  if (!qword_E86A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E86A0);
  }
  return result;
}

unint64_t sub_23384()
{
  unint64_t result = qword_E86A8;
  if (!qword_E86A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E86A8);
  }
  return result;
}

unint64_t sub_233D0()
{
  unint64_t result = qword_E86B0;
  if (!qword_E86B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E86B0);
  }
  return result;
}

unint64_t sub_2341C()
{
  unint64_t result = qword_E86B8;
  if (!qword_E86B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E86B8);
  }
  return result;
}

unint64_t sub_23468()
{
  unint64_t result = qword_E86C0;
  if (!qword_E86C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E86C0);
  }
  return result;
}

unsigned char *sub_234B4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23580);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for DailyBriefingNLIntent.DailyBriefingConfirmation()
{
}

uint64_t sub_235B4(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_2363C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23708);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for DailyBriefingNLIntent.DailyBriefingVerbNLv3()
{
}

unint64_t sub_23740()
{
  unint64_t result = qword_E8730;
  if (!qword_E8730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8730);
  }
  return result;
}

uint64_t sub_2378C()
{
  return sub_238F4(&qword_E8738, &qword_E8740);
}

unint64_t sub_237CC()
{
  unint64_t result = qword_E8748;
  if (!qword_E8748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8748);
  }
  return result;
}

unint64_t sub_2381C()
{
  unint64_t result = qword_E8750;
  if (!qword_E8750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8750);
  }
  return result;
}

unint64_t sub_2386C()
{
  unint64_t result = qword_E8758;
  if (!qword_E8758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8758);
  }
  return result;
}

uint64_t sub_238B8()
{
  return sub_238F4(&qword_E8760, &qword_E8768);
}

uint64_t sub_238F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20D6C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2393C()
{
  unint64_t result = qword_E8770;
  if (!qword_E8770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8770);
  }
  return result;
}

unint64_t sub_2398C()
{
  unint64_t result = qword_E8778;
  if (!qword_E8778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8778);
  }
  return result;
}

unint64_t sub_239D8()
{
  unint64_t result = qword_E8780;
  if (!qword_E8780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8780);
  }
  return result;
}

unint64_t sub_23A24()
{
  unint64_t result = qword_E8788;
  if (!qword_E8788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8788);
  }
  return result;
}

unint64_t sub_23A70()
{
  unint64_t result = qword_E8790;
  if (!qword_E8790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8790);
  }
  return result;
}

unint64_t sub_23ABC()
{
  unint64_t result = qword_E8798;
  if (!qword_E8798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8798);
  }
  return result;
}

unint64_t sub_23B08()
{
  unint64_t result = qword_E87A0;
  if (!qword_E87A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E87A0);
  }
  return result;
}

unint64_t sub_23B54()
{
  unint64_t result = qword_E87A8;
  if (!qword_E87A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E87A8);
  }
  return result;
}

uint64_t sub_23BA8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_222D4(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4, a5);
}

uint64_t sub_23BB0()
{
  return 0x6978456B63656863;
}

uint64_t sub_23BD4()
{
  return 0x63696666617274;
}

uint64_t sub_23BEC()
{
  return 0x7265646E696D6572;
}

uint64_t sub_23C00()
{
  return 2036427888;
}

uint64_t sub_23C10()
{
  return 1937204590;
}

uint64_t sub_23C20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C38()
{
  return *v0;
}

unint64_t sub_23C50(uint64_t a1)
{
  return a1 & 0xFFFF0000FFFFFFFFLL | 0x657400000000;
}

void sub_23C58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_bridgeObjectRetain();
  sub_B1D60();
  uint64_t v5 = a4[3];
  uint64_t v6 = a4[4];
  sub_7468(a4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  sub_B1D70();
  id v7 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [objc_allocWithZone((Class)FLOWSchemaFLOWBriefingContext) init];
    if (v9)
    {
      uint64_t v10 = a4[3];
      uint64_t v11 = a4[4];
      id v14 = v9;
      sub_7468(a4, v10);
      objc_msgSend(v14, "setBriefingAttribute:", (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11));
      [v8 setBriefingContext:v14];
      [v8 setHasBriefingContext:1];
      id v12 = v8;
      sub_B1D50();

      return;
    }
  }
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_B2D30();
  sub_B378(v13, (uint64_t)qword_F5360);
  sub_8C2F0(0xD000000000000035, 0x80000000000B5FE0, 0xD000000000000038, 0x80000000000B6020, 0xD00000000000003FLL, 0x80000000000B6060);
}

uint64_t sub_23E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (void *)swift_allocObject();
  v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;

  return sub_B1D80();
}

void sub_23F28(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v3)
  {
    unsigned int v4 = v3;
    id v5 = [objc_allocWithZone((Class)FLOWSchemaFLOWBriefingContext) init];
    if (v5)
    {
      id v11 = v5;
      uint64_t v6 = *(void *)(a2 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v6; ++i)
        {
          uint64_t v8 = dword_BFCE8[*(char *)(a2 + i + 32)];
          [v11 addEnabledFeatures:v8];
        }
        swift_bridgeObjectRelease();
      }
      [v4 setBriefingContext:v11];
      [v4 setHasBriefingContext:1];
      id v9 = v4;
      sub_B1D50();
      swift_bridgeObjectRetain();
      sub_B1D70();

      return;
    }
  }
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_B2D30();
  sub_B378(v10, (uint64_t)qword_F5360);
  sub_8C2F0(0xD000000000000035, 0x80000000000B5FE0, 0xD000000000000038, 0x80000000000B6020, 0xD000000000000037, 0x80000000000B60A0);
}

uint64_t sub_24124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v17[3] = a7;
  v17[4] = a8;
  id v12 = sub_7590(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v12, a2, a7);
  sub_A8B4((uint64_t)v17, (uint64_t)v16);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  sub_B3B0(v16, v13 + 32);
  uint64_t v14 = sub_B1D80();
  sub_74F8((uint64_t)v17);
  return v14;
}

uint64_t sub_24240()
{
  swift_bridgeObjectRelease();
  sub_74F8(v0 + 32);

  return _swift_deallocObject(v0, 72, 7);
}

void sub_24280(uint64_t a1)
{
  sub_23C58(a1, v1[2], v1[3], v1 + 4);
}

uint64_t sub_2428C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_242CC(uint64_t a1)
{
  sub_23F28(a1, *(void *)(v1 + 16));
}

uint64_t sub_242D8()
{
  type metadata accessor for AppDetecter();
  swift_allocObject();
  uint64_t result = sub_248B0();
  qword_F4F40 = result;
  return result;
}

uint64_t sub_24318()
{
  if (qword_E6C80 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_F50D8;
  swift_bridgeObjectRetain_n();
  sub_5605C(v0);
  swift_bridgeObjectRelease();
  if (qword_E6C58 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F5098;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_5605C(v1);
  qword_F4F48 = (uint64_t)&off_DB460;
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_24430()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_B2D00();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter__detectedApps);
  if (v6)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v46 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter__detectedApps;
    Swift::String v44 = "fetched for reqId.";
    uint64_t v45 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter_logger;
    sub_24D48();
    sub_8C308(v7, v8, v9, v10, v11, v12);
    if (qword_E6D48 != -1) {
      swift_once();
    }
    id v13 = (id)qword_F5338;
    sub_B2CE0();
    sub_B3300();
    sub_B2CD0();
    if (qword_E6C08 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(qword_F4F48 + 16);
    uint64_t v47 = v3;
    if (v14)
    {
      uint64_t v41 = v5;
      uint64_t v42 = v1;
      uint64_t v43 = v2;
      uint64_t v40 = swift_bridgeObjectRetain();
      uint64_t v15 = (uint64_t *)(v40 + 40);
      uint64_t v16 = &_swiftEmptyArrayStorage;
      do
      {
        uint64_t v18 = *(v15 - 1);
        uint64_t v17 = *v15;
        id v19 = objc_allocWithZone((Class)LSApplicationRecord);
        swift_bridgeObjectRetain_n();
        id v20 = sub_24C6C(v18, v17, 0);
        id v21 = v20;
        if (v20
          && (id v22 = [v20 applicationState],
              unsigned __int8 v23 = [v22 isInstalled],
              v21,
              v22,
              (v23 & 1) != 0))
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v48 = (unint64_t)v16;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_859F4(0, v16[2] + 1, 1);
            uint64_t v16 = (void *)v48;
          }
          unint64_t v26 = v16[2];
          unint64_t v25 = v16[3];
          if (v26 >= v25 >> 1)
          {
            sub_859F4((char *)(v25 > 1), v26 + 1, 1);
            uint64_t v16 = (void *)v48;
          }
          long long v16[2] = v26 + 1;
          BOOL v27 = (char *)&v16[2 * v26];
          *((void *)v27 + 4) = v18;
          *((void *)v27 + 5) = v17;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v1 = v42;
      uint64_t v2 = v43;
      id v5 = v41;
    }
    else
    {
      uint64_t v16 = &_swiftEmptyArrayStorage;
    }
    uint64_t v28 = sub_86264((uint64_t)v16);
    uint64_t v29 = v46;
    *(void *)(v1 + v46) = v28;
    swift_bridgeObjectRelease();
    sub_B32F0();
    sub_B2CC0();
    unint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    sub_B34C0(27);
    uint64_t v30 = swift_bridgeObjectRelease();
    unint64_t v48 = 0xD000000000000019;
    unint64_t v49 = 0x80000000000B61D0;
    sub_24430(v30);
    v50._countAndFlagsBits = sub_B3210();
    sub_B3020(v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D48();
    sub_8C320(v31, v32, v33, v34, v35, v36);
    swift_bridgeObjectRelease();
    if (*(void *)(v1 + v29)) {
      uint64_t v6 = *(void **)(v1 + v29);
    }
    else {
      uint64_t v6 = &_swiftEmptySetSingleton;
    }
    uint64_t v37 = *(void (**)(char *, uint64_t))(v47 + 8);
    swift_bridgeObjectRetain();
    v37(v5, v2);
  }
  return v6;
}

uint64_t sub_248B0()
{
  uint64_t v1 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B2D30();
  uint64_t v3 = sub_B378(v2, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter_requestId);
  *uint64_t v4 = 0;
  v4[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter__detectedApps) = 0;
  return v0;
}

void sub_2497C(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter_requestId);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter_requestId + 8);
  if (v6 && a2 && (*v5 == a1 ? (BOOL v7 = v6 == a2) : (BOOL v7 = 0), v7 || (sub_B37E0() & 1) != 0))
  {
    sub_8C320(0xD000000000000032, 0x80000000000B6120, 0xD000000000000029, 0x80000000000B6160, 0xD000000000000018, 0x80000000000B6190);
  }
  else
  {
    *(void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter__detectedApps) = 0;
    swift_bridgeObjectRelease();
    *id v5 = a1;
    v5[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_24430();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24A98()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11AppDetecter_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24B20()
{
  sub_24A98();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_24B78()
{
  return type metadata accessor for AppDetecter();
}

uint64_t type metadata accessor for AppDetecter()
{
  uint64_t result = qword_E87E8;
  if (!qword_E87E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24BC8()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_24C6C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = sub_B2F20();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_B1690();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_24D70(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (uint64_t)&_swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  sub_85B28(0, v1, 0);
  uint64_t result = sub_25EBC(v2);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v5 = result;
    if (result < 1 << *(unsigned char *)(v2 + 32))
    {
      int v6 = v4;
      uint64_t v7 = v2 + 64;
      while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
      {
        if (v6 != *(_DWORD *)(v2 + 36)) {
          goto LABEL_18;
        }
        int64_t v14 = v1;
        char v8 = *(unsigned char *)(*(void *)(v2 + 48) + v5);
        uint64_t v9 = v2;
        unint64_t v11 = *((void *)&_swiftEmptyArrayStorage + 2);
        unint64_t v10 = *((void *)&_swiftEmptyArrayStorage + 3);
        if (v11 >= v10 >> 1)
        {
          uint64_t v13 = v7;
          uint64_t result = (uint64_t)sub_85B28((void *)(v10 > 1), v11 + 1, 1);
          uint64_t v7 = v13;
        }
        *((void *)&_swiftEmptyArrayStorage + 2) = v11 + 1;
        *((unsigned char *)&_swiftEmptyArrayStorage + v11 + 32) = v8;
        if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(v9 + 32))) {
          goto LABEL_19;
        }
        if ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
          goto LABEL_20;
        }
        uint64_t v2 = v9;
        if (v6 != *(_DWORD *)(v9 + 36)) {
          goto LABEL_21;
        }
        uint64_t v12 = v7;
        uint64_t result = sub_B3450();
        int64_t v1 = v14 - 1;
        if (v14 == 1) {
          return (uint64_t)&_swiftEmptyArrayStorage;
        }
        unint64_t v5 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v7 = v12;
          int v6 = *(_DWORD *)(v2 + 36);
          if (result < 1 << *(unsigned char *)(v2 + 32)) {
            continue;
          }
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_24F28(uint64_t a1)
{
  sub_25E84(a1, v10);
  sub_25F70();
  while (1)
  {
    if (v5)
    {
      sub_25F58();
      goto LABEL_21;
    }
    uint64_t v7 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v7 >= v3) {
      goto LABEL_22;
    }
    if (!*(void *)(v2 + 8 * v7))
    {
      if (v4 + 2 >= v3) {
        goto LABEL_22;
      }
      if (!*(void *)(v2 + 8 * (v4 + 2)))
      {
        if (v4 + 3 >= v3) {
          goto LABEL_22;
        }
        if (!*(void *)(v2 + 8 * (v4 + 3)))
        {
          if (v4 + 4 >= v3) {
            goto LABEL_22;
          }
          if (!*(void *)(v2 + 8 * (v4 + 4)))
          {
            if (v4 + 5 >= v3) {
              goto LABEL_22;
            }
            if (!*(void *)(v2 + 8 * (v4 + 5)))
            {
              if (v4 + 6 >= v3) {
                goto LABEL_22;
              }
              if (!*(void *)(v2 + 8 * (v4 + 6)))
              {
                uint64_t v8 = v4 + 7;
                while (v8 < v3)
                {
                  if (*(void *)(v2 + 8 * v8++)) {
                    goto LABEL_20;
                  }
                }
LABEL_22:
                swift_bridgeObjectRetain();
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_20:
    sub_25F3C();
LABEL_21:
    if (*(unsigned char *)(*(void *)(v1 + 56) + v6) != 2) {
      goto LABEL_22;
    }
  }
  __break(1u);
}

void sub_25044(uint64_t a1)
{
  sub_25E84(a1, v10);
  sub_25F70();
  while (1)
  {
    if (v5)
    {
      sub_25F58();
      goto LABEL_21;
    }
    uint64_t v7 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v7 >= v3) {
      goto LABEL_22;
    }
    if (!*(void *)(v2 + 8 * v7))
    {
      if (v4 + 2 >= v3) {
        goto LABEL_22;
      }
      if (!*(void *)(v2 + 8 * (v4 + 2)))
      {
        if (v4 + 3 >= v3) {
          goto LABEL_22;
        }
        if (!*(void *)(v2 + 8 * (v4 + 3)))
        {
          if (v4 + 4 >= v3) {
            goto LABEL_22;
          }
          if (!*(void *)(v2 + 8 * (v4 + 4)))
          {
            if (v4 + 5 >= v3) {
              goto LABEL_22;
            }
            if (!*(void *)(v2 + 8 * (v4 + 5)))
            {
              if (v4 + 6 >= v3) {
                goto LABEL_22;
              }
              if (!*(void *)(v2 + 8 * (v4 + 6)))
              {
                uint64_t v8 = v4 + 7;
                while (v8 < v3)
                {
                  if (*(void *)(v2 + 8 * v8++)) {
                    goto LABEL_20;
                  }
                }
LABEL_22:
                swift_bridgeObjectRetain();
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_20:
    sub_25F3C();
LABEL_21:
    if ((*(unsigned char *)(*(void *)(v1 + 56) + v6) & 0xFE) != 2) {
      goto LABEL_22;
    }
  }
  __break(1u);
}

void *sub_25164()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_2534C(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_24D70((uint64_t)v1);
  swift_release();
  uint64_t v13 = v2;
  swift_bridgeObjectRetain();
  sub_25600(&v13);
  swift_bridgeObjectRelease();
  uint64_t v3 = v13;
  int64_t v4 = v13[2];
  if (v4)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_859F4(0, v4, 0);
    uint64_t v5 = 0;
    uint64_t v6 = v13;
    do
    {
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x7261646E656C6163;
      switch(*((unsigned char *)v3 + v5 + 32))
      {
        case 1:
          unint64_t v7 = 0xE900000000000073;
          uint64_t v8 = 0x7265646E696D6572;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x72656874616577;
          break;
        case 3:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1936744813;
          break;
        case 4:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x74736163646F70;
          break;
        default:
          break;
      }
      uint64_t v13 = v6;
      unint64_t v10 = v6[2];
      unint64_t v9 = v6[3];
      if (v10 >= v9 >> 1)
      {
        sub_859F4((char *)(v9 > 1), v10 + 1, 1);
        uint64_t v6 = v13;
      }
      ++v5;
      v6[2] = v10 + 1;
      unint64_t v11 = &v6[2 * v10];
      v11[4] = v8;
      v11[5] = v7;
    }
    while (v4 != v5);
    swift_release();
  }
  else
  {
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

unint64_t *sub_2534C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v5 = (unint64_t *)((char *)&v9 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_A0BCC(0, v4, v5);
    uint64_t v6 = sub_254B0(v5, v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    unint64_t v7 = (unint64_t *)swift_slowAlloc();
    sub_A0BCC(0, v4, v7);
    uint64_t v2 = sub_254B0(v7, v4, (uint64_t)v2);
    swift_slowDealloc();
  }
  return v2;
}

unint64_t *sub_254B0(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_A0E54(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_A0E54(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_A0E54(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_20:
    if ((*(unsigned char *)(*(void *)(a3 + 56) + v12) & 0xFE) == 2)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_A0E54(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_A0E54(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_A0E54(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25600(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_30794((uint64_t)v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_2566C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2566C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_B37B0(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_25C6C(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_2D540(v3 / 2);
  Swift::String v81 = a1;
  uint64_t v82 = result;
  uint64_t v84 = v3;
  __dst = v6;
  if (v3 <= 0)
  {
    uint64_t v86 = (unint64_t *)&_swiftEmptyArrayStorage;
    unint64_t v20 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_90:
    if (v20 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v84 >= -1)
      {
        *(void *)(v82 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v74 = *v81;
    while (1)
    {
      unint64_t v75 = v20 - 2;
      if (v20 < 2) {
        break;
      }
      if (!v74) {
        goto LABEL_133;
      }
      uint64_t v76 = v86;
      int64_t v77 = v86[2 * v75 + 4];
      int64_t v78 = v86[2 * v20 + 3];
      uint64_t result = sub_25CDC((char *)(v74 + v77), (char *)(v74 + v86[2 * v20 + 2]), v74 + v78, __dst);
      if (v1) {
        goto LABEL_86;
      }
      if (v78 < v77) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2FFE4((uint64_t)v86);
        uint64_t v76 = (unint64_t *)result;
      }
      if (v75 >= v76[2]) {
        goto LABEL_120;
      }
      Swift::String v79 = &v76[2 * v75 + 4];
      *Swift::String v79 = v77;
      v79[1] = v78;
      unint64_t v80 = v76[2];
      if (v20 > v80) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove(&v76[2 * v20 + 2], &v76[2 * v20 + 4], 16 * (v80 - v20));
      uint64_t v86 = v76;
      v76[2] = v80 - 1;
      unint64_t v20 = v80 - 1;
      if (v80 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v86 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v83 = v5;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 < v3)
    {
      uint64_t v10 = *(char *)(v8 + v7);
      unint64_t v11 = qword_BFD80[v10];
      unint64_t v12 = qword_BFD80[*(char *)(v8 + v9)];
      Swift::Int v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        while (v11 < v12 != qword_BFD80[*(char *)(v8 + v7)] >= qword_BFD80[(char)v10])
        {
          LOBYTE(v10) = *(unsigned char *)(v8 + v7++);
          if (v7 >= v3)
          {
            Swift::Int v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v9) {
          goto LABEL_126;
        }
        if (v9 < v7)
        {
          Swift::Int v13 = v7 - 1;
          Swift::Int v14 = v9;
          do
          {
            if (v14 != v13)
            {
              if (!v8) {
                goto LABEL_132;
              }
              char v15 = *(unsigned char *)(v8 + v14);
              *(unsigned char *)(v8 + v14) = *(unsigned char *)(v8 + v13);
              *(unsigned char *)(v8 + v13) = v15;
            }
            BOOL v51 = ++v14 < v13--;
          }
          while (v51);
        }
      }
    }
    if (v7 >= v3) {
      goto LABEL_25;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_123;
    }
    if (v7 - v9 >= v5) {
      goto LABEL_25;
    }
    Swift::Int v16 = v9 + v5;
    if (__OFADD__(v9, v5)) {
      goto LABEL_127;
    }
    if (v16 >= v3) {
      Swift::Int v16 = v3;
    }
    if (v16 < v9) {
      goto LABEL_128;
    }
    if (v7 == v16)
    {
LABEL_25:
      uint64_t v17 = (char *)v86;
    }
    else
    {
      uint64_t v68 = (unsigned char *)(v8 + v7);
      uint64_t v17 = (char *)v86;
      do
      {
        char v69 = *(unsigned char *)(v8 + v7);
        unint64_t v70 = qword_BFD80[v69];
        Swift::Int v71 = v9;
        uint64_t v72 = v68;
        do
        {
          uint64_t v73 = (char)*(v72 - 1);
          if (v70 >= qword_BFD80[v73]) {
            break;
          }
          if (!v8) {
            goto LABEL_130;
          }
          *uint64_t v72 = v73;
          *--uint64_t v72 = v69;
          ++v71;
        }
        while (v7 != v71);
        ++v7;
        ++v68;
      }
      while (v7 != v16);
      Swift::Int v7 = v16;
    }
    if (v7 < v9) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2FF00(0, *((void *)v17 + 2) + 1, 1, v17);
      uint64_t v17 = (char *)result;
    }
    unint64_t v19 = *((void *)v17 + 2);
    unint64_t v18 = *((void *)v17 + 3);
    unint64_t v20 = v19 + 1;
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_2FF00((char *)(v18 > 1), v19 + 1, 1, v17);
      uint64_t v17 = (char *)result;
    }
    *((void *)v17 + 2) = v20;
    id v21 = v17 + 32;
    id v22 = (Swift::Int *)&v17[16 * v19 + 32];
    *id v22 = v9;
    v22[1] = v7;
    uint64_t v86 = (unint64_t *)v17;
    if (v19) {
      break;
    }
    unint64_t v20 = 1;
LABEL_74:
    uint64_t v5 = v83;
    Swift::Int v3 = v84;
    if (v7 >= v84) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v23 = v20 - 1;
    if (v20 >= 4)
    {
      uint64_t v28 = &v21[16 * v20];
      uint64_t v29 = *((void *)v28 - 8);
      uint64_t v30 = *((void *)v28 - 7);
      BOOL v34 = __OFSUB__(v30, v29);
      uint64_t v31 = v30 - v29;
      if (v34) {
        goto LABEL_107;
      }
      uint64_t v33 = *((void *)v28 - 6);
      uint64_t v32 = *((void *)v28 - 5);
      BOOL v34 = __OFSUB__(v32, v33);
      uint64_t v26 = v32 - v33;
      char v27 = v34;
      if (v34) {
        goto LABEL_108;
      }
      unint64_t v35 = v20 - 2;
      unint64_t v36 = &v21[16 * v20 - 32];
      uint64_t v38 = *(void *)v36;
      uint64_t v37 = *((void *)v36 + 1);
      BOOL v34 = __OFSUB__(v37, v38);
      uint64_t v39 = v37 - v38;
      if (v34) {
        goto LABEL_109;
      }
      BOOL v34 = __OFADD__(v26, v39);
      uint64_t v40 = v26 + v39;
      if (v34) {
        goto LABEL_111;
      }
      if (v40 >= v31)
      {
        uint64_t v58 = &v21[16 * v23];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v34 = __OFSUB__(v59, v60);
        uint64_t v61 = v59 - v60;
        if (v34) {
          goto LABEL_117;
        }
        BOOL v51 = v26 < v61;
        goto LABEL_63;
      }
    }
    else
    {
      if (v20 != 3)
      {
        uint64_t v52 = *((void *)v17 + 4);
        uint64_t v53 = *((void *)v17 + 5);
        BOOL v34 = __OFSUB__(v53, v52);
        uint64_t v45 = v53 - v52;
        char v46 = v34;
        goto LABEL_57;
      }
      uint64_t v25 = *((void *)v17 + 4);
      uint64_t v24 = *((void *)v17 + 5);
      BOOL v34 = __OFSUB__(v24, v25);
      uint64_t v26 = v24 - v25;
      char v27 = v34;
    }
    if (v27) {
      goto LABEL_110;
    }
    unint64_t v35 = v20 - 2;
    uint64_t v41 = &v21[16 * v20 - 32];
    uint64_t v43 = *(void *)v41;
    uint64_t v42 = *((void *)v41 + 1);
    BOOL v44 = __OFSUB__(v42, v43);
    uint64_t v45 = v42 - v43;
    char v46 = v44;
    if (v44) {
      goto LABEL_112;
    }
    uint64_t v47 = &v21[16 * v23];
    uint64_t v49 = *(void *)v47;
    uint64_t v48 = *((void *)v47 + 1);
    BOOL v34 = __OFSUB__(v48, v49);
    uint64_t v50 = v48 - v49;
    if (v34) {
      goto LABEL_114;
    }
    if (__OFADD__(v45, v50)) {
      goto LABEL_116;
    }
    if (v45 + v50 >= v26)
    {
      BOOL v51 = v26 < v50;
LABEL_63:
      if (v51) {
        unint64_t v23 = v35;
      }
      goto LABEL_65;
    }
LABEL_57:
    if (v46) {
      goto LABEL_113;
    }
    uint64_t v54 = &v21[16 * v23];
    uint64_t v56 = *(void *)v54;
    uint64_t v55 = *((void *)v54 + 1);
    BOOL v34 = __OFSUB__(v55, v56);
    uint64_t v57 = v55 - v56;
    if (v34) {
      goto LABEL_115;
    }
    if (v57 < v45) {
      goto LABEL_74;
    }
LABEL_65:
    unint64_t v62 = v23 - 1;
    if (v23 - 1 >= v20)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    uint64_t v63 = &v21[16 * v62];
    uint64_t v64 = *(void *)v63;
    uint64_t v65 = &v21[16 * v23];
    uint64_t v66 = *((void *)v65 + 1);
    uint64_t result = sub_25CDC((char *)(v8 + *(void *)v63), (char *)(v8 + *(void *)v65), v8 + v66, __dst);
    if (v1) {
      break;
    }
    if (v66 < v64) {
      goto LABEL_104;
    }
    if (v23 > v86[2]) {
      goto LABEL_105;
    }
    *(void *)uint64_t v63 = v64;
    *(void *)&v21[16 * v62 + 8] = v66;
    unint64_t v67 = v86[2];
    if (v23 >= v67) {
      goto LABEL_106;
    }
    uint64_t v17 = (char *)v86;
    unint64_t v20 = v67 - 1;
    uint64_t result = (uint64_t)memmove(&v21[16 * v23], v65 + 16, 16 * (v67 - 1 - v23));
    v86[2] = v67 - 1;
    if (v67 <= 2) {
      goto LABEL_74;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v84 < -1) {
    goto LABEL_125;
  }
  *(void *)(v82 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25C6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = (unsigned char *)(*a4 + a3);
    while (2)
    {
      char v6 = *(unsigned char *)(v4 + a3);
      unint64_t v7 = qword_BFD80[v6];
      uint64_t v8 = result;
      Swift::Int v9 = v5;
      do
      {
        uint64_t v10 = (char)*(v9 - 1);
        if (v7 >= qword_BFD80[v10]) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *Swift::Int v9 = v10;
        *--Swift::Int v9 = v6;
        ++v8;
      }
      while (a3 != v8);
      ++a3;
      ++v5;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_25CDC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  char v6 = a2;
  unint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  uint64_t v9 = a3 - (void)a2;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    sub_5FDEC(a2, a3 - (void)a2, __dst);
    uint64_t v10 = &v4[v9];
    if (v7 >= v6 || v9 < 1) {
      goto LABEL_43;
    }
    char v15 = (char *)(a3 - 1);
    while (1)
    {
      uint64_t v16 = *(v10 - 1);
      uint64_t v17 = v15 + 1;
      if (qword_BFD80[v16] >= qword_BFD80[*(v6 - 1)])
      {
        if (v17 != v10 || v15 >= v10)
        {
          --v10;
          goto LABEL_38;
        }
        --v10;
      }
      else
      {
        if (v17 != v6 || v15 >= v6)
        {
          LOBYTE(v16) = *--v6;
LABEL_38:
          *char v15 = v16;
          goto LABEL_39;
        }
        --v6;
      }
LABEL_39:
      --v15;
      if (v6 <= v7 || v10 <= v4) {
        goto LABEL_43;
      }
    }
  }
  sub_5FDEC(__src, a2 - __src, __dst);
  uint64_t v10 = &v4[v8];
  if ((unint64_t)v6 < a3 && v8 >= 1)
  {
    do
    {
      uint64_t v12 = *v6;
      if (qword_BFD80[v12] >= qword_BFD80[*v4])
      {
        if (v7 == v4)
        {
          ++v4;
          goto LABEL_14;
        }
        LOBYTE(v12) = *v4++;
      }
      else
      {
        if (v7 == v6)
        {
          ++v6;
          goto LABEL_14;
        }
        ++v6;
      }
      *unint64_t v7 = v12;
LABEL_14:
      ++v7;
    }
    while (v4 < v10 && (unint64_t)v6 < a3);
  }
  char v6 = v7;
LABEL_43:
  sub_5FDEC(v4, v10 - v4, v6);
  return 1;
}

uint64_t sub_25E84@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_25EBC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_25F88()
{
  uint64_t v0 = sub_B2D30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_B2220() == 0xD000000000000039 && v4 == 0x80000000000B61F0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v6 = sub_B2230();
    uint64_t v7 = sub_2627C(v6);
    swift_bridgeObjectRelease();
    return v7;
  }
  char v5 = sub_B37E0();
  swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_5;
  }
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_B378(v0, (uint64_t)qword_F5360);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v9, v0);
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_B34C0(52);
  v12._countAndFlagsBits = 0xD000000000000032;
  v12._object = (void *)0x80000000000B6230;
  sub_B3020(v12);
  v13._countAndFlagsBits = sub_B2220();
  sub_B3020(v13);
  swift_bridgeObjectRelease();
  sub_8C2F0(v10, v11, 0xD000000000000036, 0x80000000000B6270, 0x293A5F286D6F7266, 0xE800000000000000);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 2;
}

uint64_t sub_261DC(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_DB2A8;
  v7._object = a2;
  Swift::Int v4 = sub_B3680(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_26230(char a1)
{
  if (a1) {
    return 0x656E696C636544;
  }
  else {
    return 0x6D7269666E6F43;
  }
}

unint64_t sub_26260()
{
  return 0xD000000000000039;
}

uint64_t sub_2627C(uint64_t a1)
{
  uint64_t v2 = sub_B2D30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int64_t v8 = (char *)v18 - v7;
  if (!a1)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_9;
  }
  sub_ABD24(0x72506E6F74747562, 0xED00006465737365, a1, &v19);
  if (!*((void *)&v20 + 1))
  {
LABEL_9:
    sub_AD60((uint64_t)&v19);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_B378(v2, (uint64_t)qword_F5360);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v13, v2);
    *(void *)&long long v19 = 0;
    *((void *)&v19 + 1) = 0xE000000000000000;
    sub_B34C0(63);
    v23._countAndFlagsBits = 0xD00000000000003DLL;
    v23._object = (void *)0x80000000000B62B0;
    sub_B3020(v23);
    if (a1)
    {
      v14._countAndFlagsBits = sub_B2E90();
      object = v14._object;
    }
    else
    {
      object = (void *)0xE300000000000000;
      v14._countAndFlagsBits = 7104878;
    }
    v14._object = object;
    sub_B3020(v14);
    swift_bridgeObjectRelease();
    sub_8C2F0(v19, *((unint64_t *)&v19 + 1), 0xD000000000000036, 0x80000000000B6270, 0xD00000000000001BLL, 0x80000000000B62F0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 2;
  }
  uint64_t v10 = v18[0];
  uint64_t v9 = (void *)v18[1];
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_261DC(v10, v9);
  if (v11 != 2)
  {
    uint64_t v16 = v11;
    swift_bridgeObjectRelease();
    return v16;
  }
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_B378(v2, (uint64_t)qword_F5360);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v12, v2);
  *(void *)&long long v19 = 0;
  *((void *)&v19 + 1) = 0xE000000000000000;
  sub_B34C0(62);
  v21._countAndFlagsBits = 0xD00000000000003CLL;
  v21._object = (void *)0x80000000000B6310;
  sub_B3020(v21);
  v22._countAndFlagsBits = v10;
  v22._object = v9;
  sub_B3020(v22);
  swift_bridgeObjectRelease();
  sub_8C2F0(v19, *((unint64_t *)&v19 + 1), 0xD000000000000036, 0x80000000000B6270, 0xD00000000000001BLL, 0x80000000000B62F0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return 2;
}

void sub_2663C()
{
  qword_F4F70 = (uint64_t)&type metadata for CATProvider;
  *(void *)algn_F4F78 = &off_DD378;
}

uint64_t getEnumTagSinglePayload for CATProvider(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for CATProvider(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2674CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CATProvider()
{
  return &type metadata for CATProvider;
}

unint64_t sub_26788()
{
  unint64_t result = qword_E88D8;
  if (!qword_E88D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E88D8);
  }
  return result;
}

void sub_267D4()
{
}

Swift::Int sub_267FC()
{
  return sub_B38E0();
}

Swift::Int sub_26848()
{
  return sub_B38E0();
}

uint64_t sub_26888(unsigned __int8 a1)
{
  return a1 + 1;
}

unint64_t sub_26894()
{
  return 0xD000000000000027;
}

unint64_t sub_268B0()
{
  return 0xD000000000000010;
}

BOOL sub_268CC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DB7C0;
  v6._object = a2;
  Swift::Int v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_26924@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_268CC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_2695C@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_268B0();
  *a1 = 0xD000000000000010;
  a1[1] = v3;
  return result;
}

unint64_t sub_2698C()
{
  return 0xD000000000000027;
}

unsigned char *storeEnumTagSinglePayload for RemindersDialogs(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x26A48);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemindersDialogs()
{
  return &type metadata for RemindersDialogs;
}

unint64_t sub_26A84()
{
  unint64_t result = qword_E88E0;
  if (!qword_E88E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E88E0);
  }
  return result;
}

char *sub_26AD0(uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v42 = a3;
  uint64_t v5 = sub_7424(&qword_E8B68);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_B2D90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v36 = (char *)&v32 - v12;
  uint64_t v13 = sub_7424(&qword_E8B70);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v40 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v32 - v16);
  uint64_t v18 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v39 = v18;
  uint64_t v32 = a1;
  if (v18)
  {
    uint64_t v43 = v8;
    uint64_t v19 = 0;
    uint64_t v20 = *(void *)(type metadata accessor for CalendarEvent(0) - 8);
    uint64_t v21 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v38 = *(void *)(v20 + 72);
    uint64_t v34 = v9;
    uint64_t v37 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    Swift::String v22 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v35 = a2;
    uint64_t v33 = v7;
    do
    {
      uint64_t v23 = (uint64_t)&v40[*(int *)(v13 + 48)];
      sub_2B01C(v21, v23, (void (*)(void))type metadata accessor for CalendarEvent);
      uint64_t v24 = (uint64_t)v17 + *(int *)(v13 + 48);
      *uint64_t v17 = v19;
      sub_2A67C(v23, v24, (void (*)(void))type metadata accessor for CalendarEvent);
      a2(*v17, (char *)v17 + *(int *)(v13 + 48));
      sub_2AFD0((uint64_t)v17, &qword_E8B70);
      uint64_t v25 = v43;
      if (sub_C844((uint64_t)v7, 1, v43) == 1)
      {
        sub_2AFD0((uint64_t)v7, &qword_E8B68);
      }
      else
      {
        uint64_t v26 = v7;
        char v27 = v36;
        uint64_t v28 = *v37;
        (*v37)(v36, v26, v25);
        v28(v41, v27, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v22 = (char *)sub_5EB80(0, *((void *)v22 + 2) + 1, 1, (uint64_t)v22);
        }
        unint64_t v30 = *((void *)v22 + 2);
        unint64_t v29 = *((void *)v22 + 3);
        if (v30 >= v29 >> 1) {
          Swift::String v22 = (char *)sub_5EB80(v29 > 1, v30 + 1, 1, (uint64_t)v22);
        }
        *((void *)v22 + 2) = v30 + 1;
        v28(&v22[((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v30], v41, v43);
        a2 = v35;
        uint64_t v7 = v33;
      }
      ++v19;
      v21 += v38;
    }
    while (v39 != v19);
  }
  else
  {
    Swift::String v22 = (char *)&_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_26ED0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = type metadata accessor for CalendarEvent(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_7424(&qword_E7D18);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2AF80(a1, (uint64_t)v10, &qword_E7D18);
  int v11 = sub_C844((uint64_t)v10, 1, v5);
  if (v11 == 1) {
    return v11 == 1;
  }
  sub_2A67C((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for CalendarEvent);
  sub_2A1A0((uint64_t)v7, a2);
  uint64_t result = sub_2A6D0((uint64_t)v7, (void (*)(void))type metadata accessor for CalendarEvent);
  if (!v2) {
    return v11 == 1;
  }
  return result;
}

uint64_t sub_27044(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    int64_t v12 = v11;
    if (!v8) {
      break;
    }
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_29:
    if (*(void *)(v5 + 16))
    {
      uint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_B38B0();
      swift_bridgeObjectRetain();
      sub_B2FF0();
      Swift::Int v21 = sub_B38E0();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        uint64_t v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_B37E0() & 1) != 0)
        {
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_47:
          sub_2B070();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_B37E0() & 1) != 0) {
            goto LABEL_46;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v15 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v15);
  ++v11;
  if (v16) {
    goto LABEL_28;
  }
  int64_t v11 = v12 + 2;
  if (v12 + 2 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v11);
  if (v16) {
    goto LABEL_28;
  }
  int64_t v11 = v12 + 3;
  if (v12 + 3 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v11);
  if (v16)
  {
LABEL_28:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_29;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_47;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_49;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_28;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

void sub_27324(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for SupportedFeatures;
  *(void *)(a1 + 32) = &off_DE210;
  *(unsigned char *)a1 = 0;
}

uint64_t sub_27340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_eventDetails_Value;
  swift_beginAccess();
  return sub_2AF80(v3, a2, &qword_E8B60);
}

uint64_t sub_273AC(uint64_t a1)
{
  uint64_t v3 = sub_7424(&qword_E8B60);
  uint64_t v4 = sub_FC60(v3);
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v4);
  uint64_t v9 = *(NSObject **)(v1 + 80);
  sub_2AF80(a1, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_E8B60);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  sub_2B53C((uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, &qword_E8B60);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_2B58C;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_2B604;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5922C;
  aBlock[3] = &unk_DD480;
  unint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v13);
  _Block_release(v13);
  sub_2AFD0(a1, &qword_E8B60);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_27598(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_eventDetails_Value;
  swift_beginAccess();
  sub_2B624(a2, v3);
  return swift_endAccess();
}

uint64_t sub_275F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = swift_allocObject();
  sub_A918(a9, *(void *)(a9 + 24));
  sub_2B68C();
  __chkstk_darwin(v16);
  sub_7A0C();
  uint64_t v19 = (uint64_t *)(v18 - v17);
  (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
  uint64_t v21 = sub_2B078(a1, a2, a3, a4, a5, a6, a7, a8, *v19, v15);
  sub_74F8(a9);
  return v21;
}

uint64_t sub_27714()
{
  sub_7FDC();
  v1[2] = v0;
  uint64_t v2 = sub_B17F0();
  v1[3] = v2;
  sub_FC60(v2);
  v1[4] = v3;
  v1[5] = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_277A0()
{
  sub_AC48();
  if (qword_E6C00 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F4F40;
  v0[6] = qword_F4F40;
  swift_retain();
  sub_B17E0();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_E8B90 + dword_E8B90);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2789C;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  return v6(v1, v3, v4);
}

uint64_t sub_2789C(uint64_t a1)
{
  sub_7FC4();
  uint64_t v4 = v3[5];
  uint64_t v5 = v3[4];
  uint64_t v6 = v3[3];
  uint64_t v7 = *v1;
  sub_AB94();
  *uint64_t v8 = v7;
  uint64_t v10 = v9 & 1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v11(a1, v10);
}

uint64_t sub_279FC()
{
  sub_7FDC();
  v1[26] = v0;
  uint64_t v2 = sub_7424(&qword_E76E0);
  sub_13294(v2);
  v1[27] = sub_131EC();
  uint64_t v3 = sub_7424(&qword_E7D18);
  sub_13294(v3);
  v1[28] = sub_13118();
  v1[29] = swift_task_alloc();
  uint64_t v4 = sub_B1700();
  v1[30] = v4;
  sub_FC60(v4);
  v1[31] = v5;
  v1[32] = sub_13118();
  v1[33] = swift_task_alloc();
  uint64_t v6 = sub_7424(&qword_E8B80);
  sub_13294(v6);
  v1[34] = sub_13118();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v7 = sub_7424(&qword_E8B60);
  v1[38] = v7;
  sub_13294(v7);
  v1[39] = sub_131EC();
  uint64_t v8 = type metadata accessor for CalendarPreprocessingResult(0);
  v1[40] = v8;
  sub_13294(v8);
  v1[41] = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_27B7C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))0xD000000000000014;
  uint64_t v3 = v0[39];
  uint64_t v2 = v0[40];
  sub_7A1C();
  sub_2B8F0(v4, v5, v6, 0x80000000000B6420);
  sub_B32C0();
  sub_130E4(v3, 1, v2);
  if (v7)
  {
    sub_2AFD0(v0[39], &qword_E8B60);
    goto LABEL_10;
  }
  uint64_t v8 = v0[41];
  sub_2A67C(v0[39], v8, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
  uint64_t v9 = *(void *)v8;
  if (!*(void *)v8)
  {
    sub_2A6D0(v0[41], (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
LABEL_10:
    sub_7A1C();
    sub_2B8F0(v26, v27, v28, 0x80000000000B6420);
    sub_8E410();
    if (v29 == 255)
    {
      sub_2A760();
      swift_allocError();
      *uint64_t v30 = 2;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2B6D4();
    __asm { BRAA            X3, X16 }
  }
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(void *)(v8 + 16);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v12 = *(void *)(v8 + 32);
  int v14 = *(_DWORD *)(v8 + 40);
  sub_2B8CC();
  sub_AA40(v15, v16, v17, v18);
  if (v14)
  {
    if (v11 == 1)
    {
      uint64_t v33 = v0[29];
      sub_6431C(v9, v33);
      uint64_t v34 = type metadata accessor for CalendarEvent(0);
      int v35 = sub_C844(v33, 1, v34);
      uint64_t v36 = v0[36];
      if (v35 == 1)
      {
        uint64_t v37 = v0[29];
        uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[30];
        sub_2B740();
        sub_2AFD0(v37, &qword_E7D18);
        sub_2B8CC();
        sub_AA40(v38, v39, v40, (uint64_t)v1);
      }
      else
      {
        uint64_t v45 = v0[30];
        uint64_t v46 = v0[29];
        uint64_t v47 = v46 + *(int *)(v34 + 24);
        uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[31] + 16);
        v1(v0[36], v47, v45);
        sub_2B740();
        sub_2A6D0(v46, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_2B790();
        sub_AA40(v48, v49, v50, v45);
        sub_130E4(v36, 1, v45);
        if (!v7)
        {
          uint64_t v66 = v0[37];
          uint64_t v76 = v0[36];
          int64_t v77 = v1;
          uint64_t v67 = v0[33];
          uint64_t v69 = v0[30];
          uint64_t v68 = v0[31];
          sub_2B768();
          sub_2AFD0(v66, &qword_E8B80);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v67, v76, v69);
          v77(v66, v67, v69);
          sub_2B790();
          sub_AA40(v70, v71, v72, v69);
          uint64_t v73 = (void *)swift_task_alloc();
          v0[42] = v73;
          *uint64_t v73 = v0;
          v73[1] = sub_28294;
          goto LABEL_29;
        }
      }
      sub_2AFD0(v0[36], &qword_E8B80);
      sub_2B768();
    }
LABEL_24:
    sub_2B6B0();
    type metadata accessor for CalendarTemplatingService();
    swift_allocObject();
    swift_retain();
    uint64_t v51 = sub_2B83C();
    uint64_t v52 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion;
    v0[44] = v51;
    v0[45] = v52;
    sub_2B53C((uint64_t)v1 + v52, (uint64_t)(v0 + 10), &qword_E7D08);
    sub_2AF80(v9, v13, &qword_E8B80);
    sub_2A7F8(v0 + 10, (void (*)(void, void, void, void, void, void, void, void))sub_2A7AC);
    if (qword_E6BA8 != -1) {
      swift_once();
    }
    v0[46] = qword_F4E78;
    swift_retain();
    uint64_t v53 = (void *)swift_task_alloc();
    v0[47] = v53;
    *uint64_t v53 = v0;
    v53[1] = sub_2872C;
    sub_2B878();
    sub_2B6D4();
    return sub_F26C(v54);
  }
  if (v12 != 1) {
    goto LABEL_24;
  }
  uint64_t v9 = v0[28];
  sub_6431C(v10, v9);
  uint64_t v19 = type metadata accessor for CalendarEvent(0);
  int v20 = sub_C844(v9, 1, v19);
  uint64_t v21 = v0[35];
  if (v20 == 1)
  {
    uint64_t v22 = v0[30];
    sub_2AFD0(v0[28], &qword_E7D18);
    sub_2B8CC();
    sub_AA40(v23, v24, v25, v22);
LABEL_20:
    sub_2AFD0(v0[35], &qword_E8B80);
    goto LABEL_24;
  }
  uint64_t v9 = v0[30];
  uint64_t v13 = v0[28];
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[31] + 16);
  v41(v0[35], v13 + *(int *)(v19 + 24), v9);
  sub_2A6D0(v13, (void (*)(void))type metadata accessor for CalendarEvent);
  sub_2B790();
  sub_AA40(v42, v43, v44, v9);
  sub_130E4(v21, 1, v9);
  if (v7) {
    goto LABEL_20;
  }
  uint64_t v57 = v0[37];
  uint64_t v58 = v0[35];
  uint64_t v60 = v0[31];
  uint64_t v59 = v0[32];
  uint64_t v61 = v0[30];
  sub_2AFD0(v57, &qword_E8B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v59, v58, v61);
  v41(v57, v59, v61);
  sub_2B790();
  sub_AA40(v62, v63, v64, v61);
  uint64_t v65 = (void *)swift_task_alloc();
  v0[43] = v65;
  *uint64_t v65 = v0;
  v65[1] = sub_284E0;
LABEL_29:
  sub_2B6D4();
  return sub_28CA4(v74);
}

uint64_t sub_28294()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_2835C()
{
  sub_2B7FC();
  (*(void (**)(void, void))(v1[31] + 8))(v1[33], v1[30]);
  sub_2B6B0();
  type metadata accessor for CalendarTemplatingService();
  swift_allocObject();
  swift_retain();
  uint64_t v4 = sub_2B83C();
  uint64_t v5 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion;
  v1[44] = v4;
  v1[45] = v5;
  sub_2B53C(v3 + v5, (uint64_t)(v1 + 10), &qword_E7D08);
  sub_2AF80(v0, v2, &qword_E8B80);
  sub_2A7F8(v1 + 10, (void (*)(void, void, void, void, void, void, void, void))sub_2A7AC);
  if (qword_E6BA8 != -1) {
    swift_once();
  }
  v1[46] = qword_F4E78;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v1[47] = v6;
  void *v6 = v1;
  v6[1] = sub_2872C;
  char v7 = sub_2B878();
  return sub_F26C(v7);
}

uint64_t sub_284E0()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_285A8()
{
  sub_2B7FC();
  (*(void (**)(void, void))(v1[31] + 8))(v1[32], v1[30]);
  sub_2B6B0();
  type metadata accessor for CalendarTemplatingService();
  swift_allocObject();
  swift_retain();
  uint64_t v4 = sub_2B83C();
  uint64_t v5 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion;
  v1[44] = v4;
  v1[45] = v5;
  sub_2B53C(v3 + v5, (uint64_t)(v1 + 10), &qword_E7D08);
  sub_2AF80(v0, v2, &qword_E8B80);
  sub_2A7F8(v1 + 10, (void (*)(void, void, void, void, void, void, void, void))sub_2A7AC);
  if (qword_E6BA8 != -1) {
    swift_once();
  }
  v1[46] = qword_F4E78;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v1[47] = v6;
  void *v6 = v1;
  v6[1] = sub_2872C;
  char v7 = sub_2B878();
  return sub_F26C(v7);
}

uint64_t sub_2872C()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  v1[23] = v0;
  v1[24] = v3;
  v1[25] = v4;
  uint64_t v5 = *v0;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v8 + 384) = v7;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_287FC()
{
  sub_2B7FC();
  if (v0[48])
  {
    sub_2A720();
    id v1 = sub_2B7B4();
  }
  else
  {
    id v1 = 0;
  }
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[27];
  swift_release();
  sub_2B53C(v4 + v2, (uint64_t)(v0 + 2), &qword_E7D08);
  sub_2A7F8(v0 + 2, (void (*)(void, void, void, void, void, void, void, void))sub_2A7AC);
  char v6 = sub_68184(v3, v1, (uint64_t)(v0 + 2));
  sub_2A7F8(v0 + 2, (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);

  sub_2AFD0(v3, &qword_E8B80);
  sub_299F8(v5);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[49] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2896C;
  uint64_t v8 = v0[41];
  uint64_t v9 = v0[27];
  return sub_10298(v8, (uint64_t)(v0 + 10), v6 & 1, v9);
}

uint64_t sub_2896C()
{
  sub_AC48();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 216);
  uint64_t v5 = *v0;
  sub_AB94();
  void *v6 = v5;
  uint64_t v8 = (void *)(v7 + 80);
  *(void *)(v7 + 400) = v9;
  *(_WORD *)(v7 + 408) = v10;
  swift_task_dealloc();
  sub_2A7F8(v8, (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
  swift_release();
  sub_2AFD0(v4, &qword_E76E0);
  sub_AC10();
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_28AA4()
{
  uint64_t v1 = *(void *)(v0 + 328);
  sub_2AFD0(*(void *)(v0 + 296), &qword_E8B80);
  sub_2A6D0(v1, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
  __int16 v4 = *(_WORD *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
  return v2(v5, v4 & 0x1FF);
}

uint64_t sub_28BDC()
{
  sub_7468((void *)(v0 + 168), *(void *)(v0 + 192));
  if ((sub_8EAE8() & 1) == 0 && *(unsigned char *)(v0 + 104) == 1) {
    return 1;
  }
  sub_7A1C();
  sub_ABC4();
  sub_8C320(v2, v3, v4, v5, 0xD000000000000017, 0x80000000000B65C0);
  return 0;
}

uint64_t sub_28CA4(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = v1;
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_28CC8()
{
  sub_AC48();
  if (sub_28BDC())
  {
    if (qword_E6CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 208) = qword_F51C8;
    swift_retain();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_28DEC;
    return sub_864FC(v0 + 80);
  }
  else
  {
    sub_ABD0();
    return v3();
  }
}

uint64_t sub_28DEC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

void sub_28ED0()
{
  sub_2B53C(v0 + 80, v0 + 16, &qword_E7D08);
  uint64_t v1 = *(void *)(v0 + 32);
  if (v1)
  {
    if (*(void *)(v0 + 64) != 3) {
      goto LABEL_8;
    }
    uint64_t v38 = *(void *)(v0 + 24);
    uint64_t v39 = *(void *)(v0 + 16);
    uint64_t v2 = *(unsigned int *)(v0 + 40);
    uint64_t v40 = *(void *)(v0 + 56);
    uint64_t v41 = *(void *)(v0 + 48);
    uint64_t v3 = *(void **)(v0 + 72);
    *(void *)(v0 + 144) = sub_B16E0();
    *(void *)(v0 + 152) = v4;
    sub_12E9C();
    uint64_t v5 = sub_B33F0();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_8;
    }
    *(void *)(v0 + 160) = v5;
    *(void *)(v0 + 168) = v7;
    id v8 = [v3 uniqueIdentifier];
    uint64_t v9 = v3;
    uint64_t v10 = sub_B2F50();
    uint64_t v37 = v2;
    uint64_t v12 = v11;

    *(void *)(v0 + 176) = v10;
    *(void *)(v0 + 184) = v12;
    char v13 = sub_B3410();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13)
    {
      sub_7A1C();
      sub_ABC4();
      sub_2B720(v14, v15, v16, v17, (uint64_t)"setETAtoEvent(_:)");
      if (qword_E6DF0 != -1) {
        swift_once();
      }
      sub_84ED0(0, qword_F5578, unk_F5580, byte_F5588, (void *)qword_F5590);
      uint64_t v18 = sub_2B79C(OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion);
      *uint64_t v19 = v39;
      v19[1] = v38;
      v19[2] = v1;
      v19[3] = v37;
      v19[4] = v41;
      v19[5] = v40;
      v19[6] = 3;
      v19[7] = v9;
      sub_2A57C(v18, v20, v21, v22, v23, v24, v25, v26);
    }
    else
    {
LABEL_8:
      sub_7A1C();
      sub_ABC4();
      sub_2B720(v27, v28, v29, v30, (uint64_t)"setETAtoEvent(_:)");
      sub_2A7F8((void *)(v0 + 80), (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
    }
  }
  else
  {
    sub_7A1C();
    sub_ABC4();
    sub_2B720(v31, v32, v33, v34, (uint64_t)"setETAtoEvent(_:)");
  }
  sub_ABD0();
  sub_2B6D4();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_291C4()
{
  sub_7FDC();
  v1[5] = v0;
  uint64_t v2 = sub_7424(&qword_E8B60);
  v1[6] = v2;
  sub_13294(v2);
  v1[7] = sub_131EC();
  uint64_t v3 = type metadata accessor for CalendarPreprocessingResult(0);
  v1[8] = v3;
  sub_13294(v3);
  v1[9] = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_2926C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  sub_B32C0();
  sub_130E4(v2, 1, v1);
  if (v3)
  {
    sub_2AFD0(v0[7], &qword_E8B60);
    sub_2B8D8();
    swift_task_dealloc();
    sub_ABD0();
    return v4();
  }
  else
  {
    uint64_t v6 = v0[5];
    sub_2A67C(v0[7], v0[9], (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
    v0[10] = *(void *)(v6 + 152);
    uint64_t v8 = (uint64_t (__cdecl *)())((char *)&dword_E9068 + dword_E9068);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[11] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_293EC;
    return v8();
  }
}

uint64_t sub_293EC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_294B4()
{
  sub_AC48();
  uint64_t v1 = (void *)(v0[5] + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion);
  v0[12] = *v1;
  v0[13] = v1[1];
  uint64_t v2 = v1[2];
  v0[14] = v2;
  v0[15] = v1[3];
  v0[16] = v1[4];
  v0[17] = v1[5];
  v0[18] = v1[6];
  uint64_t v3 = (void *)v1[7];
  v0[19] = v3;
  if (v2)
  {
    uint64_t v4 = qword_E6BA8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    v0[20] = qword_F4E78;
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[21] = v6;
    void *v6 = v0;
    v6[1] = sub_29648;
    char v7 = sub_2B878();
    return sub_F26C(v7);
  }
  else
  {
    sub_2A6D0(v0[9], (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
    sub_2B8D8();
    swift_task_dealloc();
    sub_ABD0();
    return v9();
  }
}

uint64_t sub_29648()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  v1[2] = v0;
  v1[3] = v3;
  v1[4] = v4;
  uint64_t v5 = *v0;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v8 + 176) = v7;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_29718()
{
  sub_2B7FC();
  id v1 = *(id *)(v0 + 176);
  if (v1)
  {
    sub_2A720();
    id v1 = sub_2B7B4();
  }
  swift_release();
  *(void *)(v0 + 184) = v1;
  sub_4001C(*(void **)(v0 + 152));
  *(void *)(v0 + 192) = v2;
  if (v2)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v3;
    void *v3 = v0;
    v3[1] = sub_2987C;
    return sub_E7C8();
  }
  else
  {
    sub_2B7D8();
    sub_2B6F0();
    sub_2A6D0(*(void *)(v0 + 72), (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
    sub_2B8D8();
    swift_task_dealloc();
    sub_ABD0();
    return v5();
  }
}

uint64_t sub_2987C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_29960()
{
  sub_2B7FC();
  sub_2B7D8();
  sub_2B6F0();
  sub_2A6D0(*(void *)(v0 + 72), (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
  sub_2B8D8();
  swift_task_dealloc();
  sub_ABD0();
  return v1();
}

uint64_t sub_299F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v96 = a1;
  uint64_t v91 = sub_B1820();
  sub_2B68C();
  uint64_t v94 = v2;
  __chkstk_darwin(v3);
  sub_17768();
  uint64_t v93 = v4;
  uint64_t v5 = sub_7424(&qword_E7D18);
  uint64_t v6 = sub_13294(v5);
  __chkstk_darwin(v6);
  sub_17768();
  uint64_t v92 = v7;
  uint64_t v8 = type metadata accessor for CalendarEvent(0);
  uint64_t v9 = sub_FC60(v8);
  uint64_t v89 = v10;
  __chkstk_darwin(v9);
  sub_17768();
  uint64_t v90 = v11;
  uint64_t v12 = sub_7424(&qword_E7D10);
  uint64_t v13 = sub_13294(v12);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v80 - v17;
  uint64_t v19 = sub_7424(&qword_E76E0);
  uint64_t v20 = sub_13294(v19);
  __chkstk_darwin(v20);
  sub_7A0C();
  uint64_t v23 = v22 - v21;
  uint64_t v97 = sub_B2090();
  sub_2B68C();
  uint64_t v95 = v24;
  __chkstk_darwin(v25);
  sub_7A0C();
  uint64_t v28 = v27 - v26;
  sub_7424(&qword_E8B60);
  sub_79FC();
  __chkstk_darwin(v29);
  sub_7A0C();
  uint64_t v32 = v31 - v30;
  uint64_t v33 = type metadata accessor for CalendarPreprocessingResult(0);
  sub_79FC();
  __chkstk_darwin(v34);
  sub_7A0C();
  uint64_t v37 = (uint64_t *)(v36 - v35);
  sub_B32C0();
  sub_130E4(v32, 1, v33);
  if (v51)
  {
    sub_2AFD0(v32, &qword_E8B60);
LABEL_9:
    uint64_t v41 = v97;
    goto LABEL_10;
  }
  uint64_t v86 = v16;
  uint64_t v87 = v28;
  uint64_t v38 = v95;
  uint64_t v88 = v1;
  sub_2A67C(v32, (uint64_t)v37, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
  uint64_t v39 = *v37;
  if (!*v37)
  {
    sub_2A6D0((uint64_t)v37, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
    goto LABEL_9;
  }
  uint64_t v40 = v37[2];
  uint64_t v84 = v37[3];
  uint64_t v85 = v40;
  uint64_t v83 = v37[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_8E2FC(v23);
  uint64_t v41 = v97;
  sub_130E4(v23, 1, v97);
  if (v51)
  {
    sub_2A6D0((uint64_t)v37, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
    sub_2B808();
    sub_2AFD0(v23, &qword_E76E0);
LABEL_10:
    sub_2B8CC();
    return sub_AA40(v42, v43, v44, v41);
  }
  Swift::String v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
  v81(v87, v23, v41);
  v98[0] = v39;
  swift_bridgeObjectRetain();
  uint64_t v46 = swift_bridgeObjectRetain();
  sub_55D7C(v46);
  sub_2B808();
  uint64_t v47 = v98[0];
  uint64_t v48 = (uint64_t)v37 + *(int *)(v33 + 20);
  uint64_t v49 = (uint64_t *)v18;
  sub_2AF80(v48, (uint64_t)v18, &qword_E7D10);
  uint64_t v50 = type metadata accessor for ImportantEventInfo(0);
  sub_130E4((uint64_t)v49, 1, v50);
  uint64_t v95 = v38 + 32;
  uint64_t v82 = v37;
  if (v51)
  {
    sub_2AFD0((uint64_t)v49, &qword_E7D10);
  }
  else
  {
    uint64_t v52 = *v49;
    swift_bridgeObjectRetain();
    sub_2A6D0((uint64_t)v49, (void (*)(void))type metadata accessor for ImportantEventInfo);
    uint64_t v53 = *(void *)(v52 + 16);
    if (v53)
    {
      uint64_t v84 = v50;
      uint64_t v85 = v48;
      unint64_t v54 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
      uint64_t v55 = v52 + v54;
      uint64_t v56 = *(void *)(v89 + 72);
      swift_bridgeObjectRetain();
      uint64_t v57 = v90;
      do
      {
        sub_2B01C(v55, v57, (void (*)(void))type metadata accessor for CalendarEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v47 = sub_5EBC8(0, *(void *)(v47 + 16) + 1, 1, v47);
        }
        unint64_t v59 = *(void *)(v47 + 16);
        unint64_t v58 = *(void *)(v47 + 24);
        if (v59 >= v58 >> 1) {
          uint64_t v47 = sub_5EBC8(v58 > 1, v59 + 1, 1, v47);
        }
        *(void *)(v47 + 16) = v59 + 1;
        sub_2A67C(v57, v47 + v54 + v59 * v56, (void (*)(void))type metadata accessor for CalendarEvent);
        v55 += v56;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease_n();
      v98[0] = v47;
      uint64_t v50 = v84;
      uint64_t v48 = v85;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v60 = (uint64_t)v86;
  sub_2AF80(v48, (uint64_t)v86, &qword_E7D10);
  sub_130E4(v60, 1, v50);
  uint64_t v62 = v91;
  uint64_t v61 = v92;
  uint64_t v64 = v93;
  uint64_t v63 = v94;
  uint64_t v65 = v88;
  if (v51)
  {
    sub_2AFD0(v60, &qword_E7D10);
  }
  else
  {
    sub_2AF80(v60 + *(int *)(v50 + 20), v92, &qword_E7D18);
    sub_2A6D0(v60, (void (*)(void))type metadata accessor for ImportantEventInfo);
    sub_26ED0(v61, v98);
    sub_2AFD0(v61, &qword_E7D18);
  }
  sub_7468((void *)(v65 + 112), *(void *)(v65 + 136));
  swift_bridgeObjectRetain();
  char v66 = sub_B1E20();
  if (v66) {
    unint64_t v67 = 0xD000000000000016;
  }
  else {
    unint64_t v67 = 0xD000000000000013;
  }
  if (v66) {
    unint64_t v68 = 0x80000000000B44E0;
  }
  else {
    unint64_t v68 = 0x80000000000B44C0;
  }
  sub_B1810();
  uint64_t v69 = sub_B1800();
  uint64_t v71 = v70;
  uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v64, v62);
  __chkstk_darwin(v72);
  *(&v80 - 4) = v67;
  *(&v80 - 3) = v68;
  *(&v80 - 2) = v69;
  *(&v80 - 1) = v71;
  uint64_t v73 = swift_bridgeObjectRetain();
  sub_26AD0(v73, (void (*)(void, void))sub_2A670, (uint64_t)(&v80 - 6));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v74 = v87;
  sub_B1FE0();
  sub_2A6D0((uint64_t)v82, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
  uint64_t v75 = v74;
  uint64_t v76 = v97;
  v81(v96, v75, v97);
  sub_2B790();
  sub_AA40(v77, v78, v79, v76);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2A1A0(uint64_t a1, uint64_t *a2)
{
  sub_2A5C8();
  uint64_t v4 = *(void *)(*a2 + 16);
  sub_2A614(v4);
  uint64_t v5 = *a2;
  *(void *)(v5 + 16) = v4 + 1;
  uint64_t v6 = *(void *)(type metadata accessor for CalendarEvent(0) - 8);
  return sub_2B01C(a1, v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v4, (void (*)(void))type metadata accessor for CalendarEvent);
}

uint64_t sub_2A26C()
{
  sub_B2D30();
  sub_79FC();
  uint64_t v1 = sub_2B82C();
  v2(v1);

  uint64_t v3 = sub_2B79C(OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion);
  sub_2A57C(v3, v4, v5, v6, v7, v8, v9, v10);
  return sub_2AFD0(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_eventDetails_Value, &qword_E8B60);
}

uint64_t sub_2A2F4()
{
  uint64_t v0 = sub_8E3A8();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_logger;
  sub_B2D30();
  sub_79FC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);

  sub_2A57C(*(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion), *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion + 8), *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion + 16), *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion + 24), *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion + 32), *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion + 40), *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion + 48), *(void **)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion + 56));
  sub_2AFD0(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_eventDetails_Value, &qword_E8B60);
  return v0;
}

uint64_t sub_2A3A0()
{
  uint64_t v0 = sub_2A2F4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_2A3F4()
{
  return type metadata accessor for CalendarSpec();
}

uint64_t type metadata accessor for CalendarSpec()
{
  uint64_t result = qword_E8920;
  if (!qword_E8920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2A444()
{
  sub_B2D30();
  if (v0 <= 0x3F)
  {
    sub_2A524();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_2A524()
{
  if (!qword_E8950)
  {
    type metadata accessor for CalendarPreprocessingResult(255);
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_E8950);
    }
  }
}

uint64_t sub_2A57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a3)
  {
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2A5C8()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v0 = v1;
  if (!result)
  {
    uint64_t result = sub_5EBC8(0, *(void *)(v1 + 16) + 1, 1, v1);
    uint64_t *v0 = result;
  }
  return result;
}

uint64_t sub_2A614(uint64_t result)
{
  unint64_t v2 = *(void *)(*v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_5EBC8(v2 > 1, result + 1, 1, *v1);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_2A654@<X0>(uint64_t a1@<X8>)
{
  return sub_27340(v1, a1);
}

uint64_t sub_2A670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5E840(a1, v2[2], v2[4], v2[5], a2);
}

uint64_t sub_2A67C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_79FC();
  uint64_t v4 = sub_2B8A4();
  v5(v4);
  return a2;
}

uint64_t sub_2A6D0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_79FC();
  uint64_t v3 = sub_2B82C();
  v4(v3);
  return a1;
}

unint64_t sub_2A720()
{
  unint64_t result = qword_E8B78;
  if (!qword_E8B78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_E8B78);
  }
  return result;
}

unint64_t sub_2A760()
{
  unint64_t result = qword_E8B88;
  if (!qword_E8B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8B88);
  }
  return result;
}

uint64_t sub_2A7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    id v9 = a8;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_2A7F8(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_2A83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  sub_7424(&qword_E8B60);
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for CalendarPreprocessingResult(0);
  v3[20] = swift_task_alloc();
  v3[21] = sub_7424(&qword_E8B98);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AppDetecter();
  v3[24] = v5;
  v3[5] = v5;
  v3[6] = &off_DD2C8;
  v3[2] = a1;
  swift_retain();
  return _swift_task_switch(sub_2A970, 0, 0);
}

uint64_t sub_2A970()
{
  sub_7468(v0 + 2, v0[24]);
  if (qword_E6C58 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F5098;
  unint64_t v2 = sub_24430();
  LOBYTE(v1) = sub_27044(v1, (uint64_t)v2);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_7A1C();
    sub_ABC4();
    sub_8C308(0xD00000000000001ALL, v3, v4, v5, 0xD00000000000001ALL, 0x80000000000B64B0);
    sub_2A760();
    uint64_t v6 = (void *)sub_2B858();
    *uint64_t v7 = 3;
    sub_8E480(v6, 256);
    uint64_t v8 = sub_2B858();
    *id v9 = 3;
    sub_74F8((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v10(v8, 1);
  }
  else
  {
    sub_B1DA0();
    if (qword_E6BA8 != -1) {
      swift_once();
    }
    v0[25] = qword_F4E78;
    id v12 = objc_allocWithZone((Class)PPEventStore);
    swift_retain();
    v0[26] = [v12 init];
    uint64_t v13 = (void *)swift_task_alloc();
    v0[27] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_2AC10;
    return sub_476E8();
  }
}

uint64_t sub_2AC10()
{
  sub_AC48();
  sub_7FC4();
  sub_2B6A4();
  *unint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v5 = *(void **)(v4 + 208);
  uint64_t v6 = *v0;
  sub_AB94();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  swift_release();

  sub_74F8(v3);
  sub_AC10();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_2AD1C()
{
  sub_2AF80(v0[23], v0[22], &qword_E8B98);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[23];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = *(void **)v0[22];
    sub_B34C0(31);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v16._countAndFlagsBits = sub_B3860();
    sub_B3020(v16);
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_8C308(v4, 0x80000000000B6490, v5, v6, 0xD00000000000001ALL, 0x80000000000B64B0);
    swift_bridgeObjectRelease();
    swift_errorRetain();
    sub_8E480(v3, 256);
  }
  else
  {
    uint64_t v8 = v0[19];
    uint64_t v7 = v0[20];
    uint64_t v9 = v0[18];
    sub_2A67C(v0[22], v7, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
    sub_2B01C(v7, v9, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
    uint64_t v3 = &dword_0 + 1;
    sub_2B790();
    sub_AA40(v10, v11, v12, v8);
    sub_273AC(v9);
    sub_2A6D0(v7, (void (*)(void))type metadata accessor for CalendarPreprocessingResult);
  }
  sub_2AFD0(v2, &qword_E8B98);
  sub_74F8((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void *, BOOL))v0[1];
  return v13(v3, EnumCaseMultiPayload == 1);
}

uint64_t sub_2AF80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_7424(a3);
  sub_79FC();
  uint64_t v4 = sub_2B8B8();
  v5(v4);
  return a2;
}

uint64_t sub_2AFD0(uint64_t a1, uint64_t *a2)
{
  sub_7424(a2);
  sub_79FC();
  uint64_t v3 = sub_2B82C();
  v4(v3);
  return a1;
}

uint64_t sub_2B01C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_79FC();
  uint64_t v4 = sub_2B8B8();
  v5(v4);
  return a2;
}

uint64_t sub_2B070()
{
  return swift_release();
}

uint64_t sub_2B078(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a8;
  uint64_t v31 = a7;
  v37[3] = type metadata accessor for OfflineStateProvider();
  v37[4] = &off_DEAE0;
  v37[0] = a9;
  uint64_t v16 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_logger;
  uint64_t v17 = qword_E6D68;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = a10 + v16;
  uint64_t v19 = sub_B2D30();
  uint64_t v20 = sub_B378(v19, (uint64_t)qword_F5390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v20, v19);
  *(void *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_previousMapEntry) = 0;
  uint64_t v21 = (_OWORD *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_etaSuggestion);
  *uint64_t v21 = 0u;
  v21[1] = 0u;
  v21[2] = 0u;
  v21[3] = 0u;
  uint64_t v22 = a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12CalendarSpec_eventDetails_Value;
  uint64_t v23 = type metadata accessor for CalendarPreprocessingResult(0);
  sub_AA40(v22, 1, 1, v23);
  swift_release();
  sub_A8B4(a5, (uint64_t)v36);
  sub_A8B4(a6, (uint64_t)v35);
  sub_A8B4((uint64_t)v37, (uint64_t)v33);
  uint64_t v24 = sub_A918((uint64_t)v33, v34);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  uint64_t v28 = sub_8F900(a1, a2, a3, a4, v36, v35, v31, v32, *v26, a10);
  sub_74F8((uint64_t)v33);
  sub_74F8((uint64_t)v37);
  sub_74F8(a6);
  sub_74F8(a5);
  return v28;
}

uint64_t sub_2B300()
{
  uint64_t v2 = sub_7424(&qword_E8B60);
  sub_FC60(v2);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  swift_release();
  uint64_t v8 = (void *)(v0 + v5);
  uint64_t v9 = type metadata accessor for CalendarPreprocessingResult(0);
  if (!sub_C844(v0 + v5, 1, v9))
  {
    if (*v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = (char *)v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for ImportantEventInfo(0);
    if (!sub_2B884(v11))
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = &v10[*(int *)(v1 + 20)];
      uint64_t v13 = type metadata accessor for CalendarEvent(0);
      if (!sub_2B884(v13))
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = &v12[*(int *)(v1 + 20)];
        sub_B17F0();
        sub_79FC();
        (*(void (**)(char *))(v15 + 8))(v14);
        uint64_t v16 = &v12[*(int *)(v1 + 24)];
        sub_B1700();
        sub_79FC();
        (*(void (**)(char *))(v17 + 8))(v16);
      }
    }
    uint64_t v18 = (char *)v8 + *(int *)(v9 + 24);
    uint64_t v19 = sub_B17F0();
    sub_79FC();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 8);
    v21(v18, v19);
    uint64_t v22 = type metadata accessor for DBCalendarState();
    swift_bridgeObjectRelease();
    uint64_t v23 = (uint64_t)&v18[*(int *)(v22 + 24)];
    if (!sub_C844(v23, 1, v19)) {
      v21((char *)v23, v19);
    }
    swift_bridgeObjectRelease();
    uint64_t v24 = (uint64_t)&v18[*(int *)(v22 + 44)];
    if (!sub_C844(v24, 1, v19)) {
      v21((char *)v24, v19);
    }
  }

  return _swift_deallocObject(v0, v5 + v7, v4 | 7);
}

uint64_t sub_2B53C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_7424(a3);
  sub_79FC();
  uint64_t v4 = sub_2B8A4();
  v5(v4);
  return a2;
}

uint64_t sub_2B58C()
{
  uint64_t v1 = *(void *)(sub_7424(&qword_E8B60) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_27598(v2, v3);
}

uint64_t sub_2B5F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2B604()
{
  return sub_59204(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2B60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2B61C()
{
  return swift_release();
}

uint64_t sub_2B624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E8B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2B6B0()
{
  uint64_t v3 = *(void *)(v1 + 208) + 112;
  return sub_A8B4(v3, v0);
}

uint64_t sub_2B6F0()
{
  return sub_2A57C(v7, v6, v5, v4, v3, v2, v0, v1);
}

void sub_2B720(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_8C308(a1, a2, a3, a4, 0xD000000000000011, (a5 - 32) | 0x8000000000000000);
}

uint64_t sub_2B740()
{
  return sub_175C4(v0);
}

uint64_t sub_2B768()
{
  return sub_17604(v0);
}

uint64_t sub_2B79C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

id sub_2B7B4()
{
  return sub_3FFB0(v0, v1, 1);
}

void sub_2B7D8()
{
  uint64_t v2 = *(void **)(v0 + 184);
}

uint64_t sub_2B808()
{
  return sub_17604(v0);
}

uint64_t sub_2B82C()
{
  return v0;
}

uint64_t sub_2B83C()
{
  return sub_12B14(v0, v1);
}

uint64_t sub_2B858()
{
  return swift_allocError();
}

uint64_t sub_2B878()
{
  return 4;
}

uint64_t sub_2B884(uint64_t a1)
{
  return sub_C844(v1, 1, a1);
}

uint64_t sub_2B8A4()
{
  return v0;
}

uint64_t sub_2B8B8()
{
  return v0;
}

uint64_t sub_2B8D8()
{
  return swift_task_dealloc();
}

void sub_2B8F0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_8C308(a1, a2, a3, a4, 0xD000000000000014, v4 | 0x8000000000000000);
}

uint64_t sub_2B910(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_7468(a1, v2);
  switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3))
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_A8B4((uint64_t)a1, (uint64_t)v9);
      goto LABEL_9;
    case 3u:
      sub_A8B4((uint64_t)a1, (uint64_t)v9);
      goto LABEL_6;
    default:
      char v4 = sub_B37E0();
      swift_bridgeObjectRelease();
      sub_A8B4((uint64_t)a1, (uint64_t)v9);
      if (v4)
      {
LABEL_9:
        char v7 = 1;
      }
      else
      {
LABEL_6:
        uint64_t v5 = v10;
        uint64_t v6 = v11;
        sub_7468(v9, v10);
        char v7 = 0;
        switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6))
        {
          case 2u:
            swift_bridgeObjectRelease();
            goto LABEL_9;
          case 3u:
            break;
          default:
            char v7 = sub_B37E0();
            swift_bridgeObjectRelease();
            break;
        }
      }
      sub_74F8((uint64_t)v9);
      return v7 & 1;
  }
}

uint64_t sub_2BAE0()
{
  return sub_B1C80();
}

uint64_t sub_2BB40(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return _swift_task_switch(sub_2BB60, 0, 0);
}

uint64_t sub_2BB60()
{
  uint64_t v1 = v0[6];
  sub_8C308(0xD000000000000059, 0x80000000000B6670, 0xD00000000000002ELL, 0x80000000000B66D0, 0x2865747563657865, 0xE900000000000029);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_templatingService);
  type metadata accessor for CommonTemplatingService();
  uint64_t inited = swift_initStackObject();
  v0[7] = inited;
  *(void *)(inited + 16) = v2;
  char v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *char v4 = v0;
  v4[1] = sub_2BC80;
  return sub_3D064();
}

uint64_t sub_2BC80()
{
  sub_7FC4();
  *(void *)(v1 + 72) = v0;
  swift_task_dealloc();
  return _swift_task_switch(sub_2BD5C, 0, 0);
}

uint64_t sub_2BD5C()
{
  sub_7468((void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_siriKitEventSender), *(void *)(*(void *)(v0 + 48)+ OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_siriKitEventSender+ 24));
  sub_A21D8();
  sub_B1FA0();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2BDF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_aceService);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_deviceState);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_siriKitEventSender);
  return v0;
}

uint64_t sub_2BEA8()
{
  sub_2BDF4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_2BF00()
{
  return type metadata accessor for CancellationFlow();
}

uint64_t type metadata accessor for CancellationFlow()
{
  uint64_t result = qword_E8BD0;
  if (!qword_E8BD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2BF50()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2C014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_2C0C4;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_2C0C4(uint64_t a1)
{
  sub_7FC4();
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_2C19C()
{
  return sub_2BAE0();
}

uint64_t sub_2C1C0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_2C25C;
  return sub_2BB40(a1);
}

uint64_t sub_2C25C()
{
  sub_7FC4();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_2C32C()
{
  unint64_t result = qword_E8D18;
  if (!qword_E8D18)
  {
    type metadata accessor for CancellationFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8D18);
  }
  return result;
}

unsigned char *sub_2C37C()
{
  unint64_t result = sub_6B090((uint64_t)&off_DB7F8);
  qword_E8D20 = (uint64_t)result;
  return result;
}

unsigned char *sub_2C3A4()
{
  unint64_t result = sub_6B090((uint64_t)&off_DB820);
  qword_E8D28 = (uint64_t)result;
  return result;
}

uint64_t sub_2C3CC(char a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 16) = a1;
  uint64_t v6 = v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_startTime;
  uint64_t v7 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a2, v7);
  *(void *)(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count) = a3;
  return v3;
}

uint64_t sub_2C454()
{
  v1._countAndFlagsBits = 0x79726F6765746163;
  v1._object = (void *)0xEA0000000000203ALL;
  sub_B3020(v1);
  sub_B35C0();
  v2._countAndFlagsBits = 10;
  v2._object = (void *)0xE100000000000000;
  sub_B3020(v2);
  sub_B17F0();
  sub_307BC();
  v3._countAndFlagsBits = sub_B37C0();
  sub_B3020(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 10;
  v4._object = (void *)0xE100000000000000;
  sub_B3020(v4);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 0x6D69547472617473;
  v5._object = (void *)0xEB00000000203A65;
  sub_B3020(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = sub_B37C0();
  sub_B3020(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = 0x203A746E756F63;
  v7._object = (void *)0xE700000000000000;
  sub_B3020(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2C61C(unint64_t a1)
{
  return sub_2C64C(a1, (void (*)(void *))sub_2DCDC);
}

uint64_t sub_2C634(unint64_t a1)
{
  return sub_2C64C(a1, (void (*)(void *))sub_2E570);
}

uint64_t sub_2C64C(unint64_t a1, void (*a2)(void *))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_B3620();
    swift_bridgeObjectRelease();
    if (v6)
    {
      unint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v3 = (uint64_t)sub_2D7A4(v7);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    return 0;
  }
  uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8))) {
    return 0;
  }
  swift_bridgeObjectRetain();
LABEL_4:
  uint64_t v9 = v3;
  sub_2DC58(&v9, a2);
  uint64_t v4 = v9;
  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_B3620();
    swift_release();
    if (v5)
    {
LABEL_7:
      sub_21550(0, (v4 & 0xC000000000000001) == 0, v4);
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = sub_B34F0();
      }
      else
      {
        uint64_t v5 = *(void *)(v4 + 32);
        swift_retain();
      }
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v9 + 16);
    if (v5) {
      goto LABEL_7;
    }
  }
  swift_release();
  return v5;
}

uint64_t sub_2C788(uint64_t a1)
{
  Swift::String v2 = (void *)sub_B17F0();
  uint64_t v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v30 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t)sub_2D7A4(v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v31 = v5;
  unint64_t v6 = 0;
  sub_2DC58(&v31, (void (*)(void *))sub_2EFB8);
  uint64_t v7 = v31;
  LODWORD(v8) = v31 < 0 || (v31 & 0x4000000000000000) != 0;
  if (v8) {
    goto LABEL_44;
  }
  uint64_t v9 = *(void *)(v31 + 16);
  while (1)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    if (v9)
    {
      uint64_t v31 = (uint64_t)_swiftEmptyArrayStorage;
      uint64_t v11 = &v31;
      sub_85B78(0, v9 & ~(v9 >> 63), 0);
      if (v9 < 0)
      {
        __break(1u);
        goto LABEL_47;
      }
      HIDWORD(v29) = v8;
      uint64_t v12 = 0;
      uint64_t v10 = (void *)v31;
      do
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          char v13 = *(unsigned char *)(sub_B34F0() + 16);
          swift_unknownObjectRelease();
        }
        else
        {
          char v13 = *(unsigned char *)(*(void *)(v7 + 8 * v12 + 32) + 16);
        }
        uint64_t v31 = (uint64_t)v10;
        unint64_t v15 = v10[2];
        unint64_t v14 = v10[3];
        if (v15 >= v14 >> 1)
        {
          sub_85B78((void *)(v14 > 1), v15 + 1, 1);
          uint64_t v10 = (void *)v31;
        }
        ++v12;
        _OWORD v10[2] = v15 + 1;
        *((unsigned char *)v10 + v15 + 32) = v13;
      }
      while (v9 != v12);
      LODWORD(v8) = HIDWORD(v29);
    }
    uint64_t v16 = sub_86318((uint64_t)v10);
    if (qword_E6C18 != -1) {
      swift_once();
    }
    unsigned __int8 v17 = sub_2CBB4(qword_E8D20, v16);
    if (qword_E6C20 != -1) {
      swift_once();
    }
    unsigned __int8 v18 = sub_2CBB4(qword_E8D28, v16);
    swift_bridgeObjectRelease();
    if (v18) {
      LOBYTE(v11) = 21;
    }
    else {
      LOBYTE(v11) = 20;
    }
    if (((v18 | v17) & 1) == 0) {
      return v7;
    }
    sub_7424(&qword_E7F20);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_BEC80;
    unint64_t v6 = v7 & 0xC000000000000001;
    sub_21550(0, (v7 & 0xC000000000000001) == 0, v7);
    if ((v7 & 0xC000000000000001) == 0)
    {
      uint64_t v19 = *(void *)(v7 + 32);
      swift_retain();
      goto LABEL_29;
    }
LABEL_47:
    uint64_t v19 = sub_B34F0();
LABEL_29:
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, void *))(v3 + 16);
    v3 += 16;
    v20(v30, v19 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_startTime, v2);
    swift_release();
    if (v8)
    {
      swift_retain();
      uint64_t v21 = sub_B3620();
      if (!v21) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v21 = *(void *)(v7 + 16);
      swift_retain();
      if (!v21)
      {
LABEL_40:
        uint64_t v22 = 0;
LABEL_41:
        swift_release_n();
        type metadata accessor for WeatherConditionEvent();
        uint64_t v26 = swift_allocObject();
        sub_2C3CC((char)v11, v30, v22);
        *(void *)(v9 + 32) = v26;
        uint64_t v31 = v9;
        sub_B30C0();
        return v31;
      }
    }
    if (v21 < 1) {
      break;
    }
    uint64_t v8 = 0;
    uint64_t v22 = 0;
    Swift::String v2 = &unk_F4000;
    while (1)
    {
      uint64_t v23 = v6 ? sub_B34F0() : swift_retain();
      uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count);
      swift_release();
      BOOL v25 = __OFADD__(v22, v24);
      v22 += v24;
      if (v25) {
        break;
      }
      if (v21 == ++v8) {
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_B3620();
    swift_release();
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2CBB4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v36 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v34 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a1 + 56;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v35 = v3;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v10 = (v7 - 1) & v7;
  unint64_t v11 = __clz(__rbit64(v7)) | (v9 << 6);
  for (i = v9; ; unint64_t v11 = __clz(__rbit64(v14)) + (i << 6))
  {
    if (!*(void *)(a1 + 16))
    {
      uint64_t v2 = 0;
      goto LABEL_87;
    }
    uint64_t v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
    sub_B38B0();
    sub_19008(v16);
    sub_B2FF0();
    swift_bridgeObjectRelease();
    Swift::Int v17 = sub_B38E0();
    uint64_t v18 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v8 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
    {
      uint64_t v2 = 0;
      goto LABEL_87;
    }
    uint64_t v20 = ~v18;
    while (1)
    {
      unint64_t v21 = 0xE900000000000065;
      unint64_t v22 = 0x6E61636972727568;
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v19))
      {
        case 1:
          unint64_t v21 = 0xE700000000000000;
          unint64_t v22 = 0x6F64616E726F74;
          break;
        case 2:
          unint64_t v22 = 0x6C616369706F7274;
          unint64_t v21 = 0xED00006D726F7453;
          break;
        case 3:
          unint64_t v21 = 0xE800000000000000;
          unint64_t v22 = 0x6472617A7A696C62;
          break;
        case 4:
          unint64_t v21 = 0xE400000000000000;
          unint64_t v22 = 1818845544;
          break;
        case 5:
          unint64_t v22 = 0x737265646E756874;
          uint64_t v23 = 1836216180;
          goto LABEL_50;
        case 6:
          unint64_t v21 = 0xE500000000000000;
          unint64_t v22 = 0x7465656C73;
          break;
        case 7:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v24 = 2003791475;
          goto LABEL_39;
        case 8:
          unint64_t v22 = 0x53676E69776F6C62;
          uint64_t v25 = 7827310;
          goto LABEL_47;
        case 9:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v24 = 1852399986;
          goto LABEL_39;
        case 0xA:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v24 = 1802464627;
          goto LABEL_39;
        case 0xB:
          unint64_t v21 = 0xE400000000000000;
          unint64_t v22 = 1953723748;
          break;
        case 0xC:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v24 = 1684957559;
          goto LABEL_39;
        case 0xD:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v24 = 1734831974;
LABEL_39:
          unint64_t v22 = v24 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
          break;
        case 0xE:
          unint64_t v21 = 0xE400000000000000;
          unint64_t v22 = 1702519144;
          break;
        case 0xF:
          unint64_t v21 = 0xE600000000000000;
          unint64_t v22 = 0x7964756F6C63;
          break;
        case 0x10:
          unint64_t v22 = 0x6C43796C74726170;
          uint64_t v23 = 2036626799;
          goto LABEL_50;
        case 0x11:
          unint64_t v21 = 0xE500000000000000;
          unint64_t v22 = 0x7261656C63;
          break;
        case 0x12:
          unint64_t v21 = 0xE400000000000000;
          unint64_t v22 = 1684828003;
          break;
        case 0x13:
          unint64_t v21 = 0xE300000000000000;
          unint64_t v22 = 7630696;
          break;
        case 0x14:
          unint64_t v22 = 0x6F6C43646578696DLL;
          uint64_t v25 = 7955573;
LABEL_47:
          unint64_t v21 = v25 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0x15:
          unint64_t v22 = 0x656C43646578696DLL;
          unint64_t v21 = 0xEA00000000007261;
          break;
        case 0x16:
          unint64_t v22 = 0x6C69617641746F6ELL;
          uint64_t v23 = 1701601889;
LABEL_50:
          unint64_t v21 = v23 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          break;
      }
      unint64_t v26 = 0x6E61636972727568;
      unint64_t v27 = 0xE900000000000065;
      switch(v16)
      {
        case 1:
          unint64_t v27 = 0xE700000000000000;
          unint64_t v26 = 0x6F64616E726F74;
          break;
        case 2:
          unint64_t v26 = 0x6C616369706F7274;
          unint64_t v27 = 0xED00006D726F7453;
          break;
        case 3:
          unint64_t v27 = 0xE800000000000000;
          unint64_t v26 = 0x6472617A7A696C62;
          break;
        case 4:
          unint64_t v27 = 0xE400000000000000;
          unint64_t v26 = 1818845544;
          break;
        case 5:
          unint64_t v26 = 0x737265646E756874;
          uint64_t v28 = 1836216180;
          goto LABEL_76;
        case 6:
          unint64_t v27 = 0xE500000000000000;
          unint64_t v26 = 0x7465656C73;
          break;
        case 7:
          unint64_t v27 = 0xE500000000000000;
          uint64_t v29 = 2003791475;
          goto LABEL_65;
        case 8:
          unint64_t v26 = 0x53676E69776F6C62;
          uint64_t v30 = 7827310;
          goto LABEL_73;
        case 9:
          unint64_t v27 = 0xE500000000000000;
          uint64_t v29 = 1852399986;
          goto LABEL_65;
        case 10:
          unint64_t v27 = 0xE500000000000000;
          uint64_t v29 = 1802464627;
          goto LABEL_65;
        case 11:
          unint64_t v27 = 0xE400000000000000;
          unint64_t v26 = 1953723748;
          break;
        case 12:
          unint64_t v27 = 0xE500000000000000;
          uint64_t v29 = 1684957559;
          goto LABEL_65;
        case 13:
          unint64_t v27 = 0xE500000000000000;
          uint64_t v29 = 1734831974;
LABEL_65:
          unint64_t v26 = v29 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
          break;
        case 14:
          unint64_t v27 = 0xE400000000000000;
          unint64_t v26 = 1702519144;
          break;
        case 15:
          unint64_t v27 = 0xE600000000000000;
          unint64_t v26 = 0x7964756F6C63;
          break;
        case 16:
          unint64_t v26 = 0x6C43796C74726170;
          uint64_t v28 = 2036626799;
          goto LABEL_76;
        case 17:
          unint64_t v27 = 0xE500000000000000;
          unint64_t v26 = 0x7261656C63;
          break;
        case 18:
          unint64_t v27 = 0xE400000000000000;
          unint64_t v26 = 1684828003;
          break;
        case 19:
          unint64_t v27 = 0xE300000000000000;
          unint64_t v26 = 7630696;
          break;
        case 20:
          unint64_t v26 = 0x6F6C43646578696DLL;
          uint64_t v30 = 7955573;
LABEL_73:
          unint64_t v27 = v30 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 21:
          unint64_t v26 = 0x656C43646578696DLL;
          unint64_t v27 = 0xEA00000000007261;
          break;
        case 22:
          unint64_t v26 = 0x6C69617641746F6ELL;
          uint64_t v28 = 1701601889;
LABEL_76:
          unint64_t v27 = v28 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          break;
      }
      if (v22 == v26 && v21 == v27) {
        break;
      }
      char v32 = sub_B37E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32) {
        goto LABEL_85;
      }
      unint64_t v19 = (v19 + 1) & v20;
      if (((*(void *)(v8 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
        uint64_t v2 = 0;
        goto LABEL_87;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_85:
    int64_t v9 = i;
    unint64_t v7 = v10;
    uint64_t v3 = v35;
    if (v10) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_93;
    }
    if (v13 >= v34) {
      goto LABEL_91;
    }
    unint64_t v14 = *(void *)(v36 + 8 * v13);
    int64_t i = v9 + 1;
    if (!v14)
    {
      int64_t i = v9 + 2;
      if (v9 + 2 >= v34) {
        goto LABEL_91;
      }
      unint64_t v14 = *(void *)(v36 + 8 * i);
      if (!v14)
      {
        int64_t i = v9 + 3;
        if (v9 + 3 >= v34) {
          goto LABEL_91;
        }
        unint64_t v14 = *(void *)(v36 + 8 * i);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v9 + 4;
  if (v9 + 4 < v34)
  {
    unint64_t v14 = *(void *)(v36 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t i = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (i >= v34) {
          goto LABEL_91;
        }
        unint64_t v14 = *(void *)(v36 + 8 * i);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
LABEL_93:
      __break(1u);
      JUMPOUT(0x2D2B8);
    }
    int64_t i = v9 + 4;
    goto LABEL_21;
  }
LABEL_91:
  uint64_t v2 = 1;
LABEL_87:
  sub_2B070();
  return v2;
}

uint64_t sub_2D370()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_startTime;
  uint64_t v2 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_2D410()
{
  return type metadata accessor for WeatherConditionEvent();
}

uint64_t type metadata accessor for WeatherConditionEvent()
{
  uint64_t result = qword_E8D58;
  if (!qword_E8D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2D460()
{
  uint64_t result = sub_B17F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2D508()
{
  return sub_2C454();
}

uint64_t sub_2D52C(uint64_t a1)
{
  return sub_2D674(a1, (unint64_t *)&qword_E85E0);
}

void *sub_2D540(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_308F0();
    uint64_t result = (void *)sub_308CC();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = (void *)sub_B30E0();
    result[2] = a1;
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_2D5B8(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_B35F0();
    __break(1u);
  }
  else if (a1)
  {
    type metadata accessor for WeatherConditionEvent();
    uint64_t result = sub_B30E0();
    *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8)) = a1;
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_2D660(uint64_t a1)
{
  return sub_2D674(a1, &qword_E8E58);
}

uint64_t sub_2D674(uint64_t a1, unint64_t *a2)
{
  if (a1 < 0)
  {
    sub_308F0();
    uint64_t result = sub_308CC();
    __break(1u);
  }
  else if (a1)
  {
    sub_3085C(0, a2);
    uint64_t result = sub_B30E0();
    *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8)) = a1;
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

void sub_2D6F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 > 0)
    {
      sub_7424(&qword_E7F20);
      uint64_t v8 = (void *)sub_308B4();
      j__malloc_size(v8);
      sub_3089C();
      v8[2] = v5;
      v8[3] = v9;
    }
    if (v4 != a3)
    {
      sub_6015C(a2 + 8 * a3, v5);
      return;
    }
    goto LABEL_9;
  }
}

void *sub_2D7A4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_7424(&qword_E7F20);
      uint64_t v3 = (void *)swift_allocObject();
      size_t v4 = j__malloc_size(v3);
      v3[2] = v2;
      v3[3] = (2 * ((uint64_t)(v4 - 32) / 8)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_3045C((uint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v5;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_B3620();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void sub_2D898()
{
  sub_30960();
  if (*(void *)(v0 + 16))
  {
    sub_7424(&qword_E7F38);
    unint64_t v1 = (const void *)sub_308B4();
    j__malloc_size(v1);
    sub_3097C();
    sub_30924(v2);
    sub_30024(v3, v4, v5, v6);
    sub_3093C();
    sub_30990();
    if (!v7) {
      __break(1u);
    }
  }
  sub_30908();
}

uint64_t sub_2D914(uint64_t a1)
{
  return sub_2D98C(a1, sub_60444, &unk_E8E50, &unk_E8E48, sub_A7248);
}

uint64_t sub_2D950(uint64_t a1)
{
  return sub_2D98C(a1, sub_6015C, &unk_E8E38, &unk_E8E30, sub_A71AC);
}

#error "2DA30: call analysis failed (funcsize=66)"

void sub_2DA98(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      int64_t v13 = _swiftEmptyArrayStorage;
LABEL_12:
      if (v4 != a3)
      {
        uint64_t v16 = type metadata accessor for CurrentWeatherForecast();
        sub_FC60(v16);
        sub_60524(a2 + *(void *)(v18 + 72) * a3, v5, (unint64_t)v13+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)));
        return;
      }
      goto LABEL_17;
    }
    sub_7424(&qword_E8E28);
    uint64_t v8 = type metadata accessor for CurrentWeatherForecast();
    sub_FC60(v8);
    uint64_t v10 = *(void *)(v9 + 72);
    unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    int64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    if (v10)
    {
      if (v14 - v12 != 0x8000000000000000 || v10 != -1)
      {
        v13[2] = v5;
        v13[3] = 2 * ((uint64_t)(v14 - v12) / v10);
        goto LABEL_12;
      }
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      return;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
}

void sub_2DBDC()
{
  sub_30960();
  if (*(void *)(v0 + 16))
  {
    sub_7424(&qword_E7F20);
    unint64_t v1 = (const void *)sub_308B4();
    j__malloc_size(v1);
    sub_3089C();
    sub_30924(v2);
    sub_30224(v3, v4, v5, v6);
    sub_3093C();
    sub_30990();
    if (!v7) {
      __break(1u);
    }
  }
  sub_30908();
}

uint64_t sub_2DC58(uint64_t *a1, void (*a2)(void *))
{
  uint64_t v4 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_307A8(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return sub_B3540();
}

Swift::Int sub_2DCDC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_B37B0(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_170;
    }
    if (v3) {
      return sub_2F670(0, v3, 1, a1);
    }
  }
  else
  {
    Swift::Int v5 = result;
    uint64_t v94 = v1;
    uint64_t v6 = sub_2D5B8(v3 / 2);
    uint64_t v93 = v7;
    uint64_t v95 = v6;
    uint64_t v91 = v3;
    uint64_t v89 = a1;
    if (v3 > 0)
    {
      uint64_t v8 = 0;
      uint64_t v9 = *a1;
      uint64_t v88 = *a1 - 8;
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
      Swift::Int v11 = v3;
      Swift::Int v90 = v5;
      uint64_t v92 = *a1;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v11)
        {
          uint64_t v13 = *(void *)(v9 + 8 * v8);
          unint64_t v14 = qword_C0120[*(char *)(v13 + 16)];
          unint64_t v15 = qword_C0120[*(char *)(*(void *)(v9 + 8 * v12) + 16)];
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v11)
          {
            while (2)
            {
              uint64_t v16 = *(unsigned __int8 *)(v13 + 16);
              uint64_t v13 = *(void *)(v9 + 8 * v8);
              unint64_t v17 = 50800;
              switch(v16)
              {
                case 1:
                  goto LABEL_30;
                case 2:
                  unint64_t v17 = 50700;
                  goto LABEL_30;
                case 3:
                  unint64_t v17 = 50600;
                  goto LABEL_30;
                case 4:
                  unint64_t v17 = 50500;
                  goto LABEL_30;
                case 5:
                  unint64_t v17 = 50400;
                  goto LABEL_30;
                case 6:
                  unint64_t v17 = 30900;
                  goto LABEL_30;
                case 7:
                  unint64_t v17 = 30800;
                  goto LABEL_30;
                case 8:
                  unint64_t v17 = 30700;
                  goto LABEL_30;
                case 9:
                  unint64_t v17 = 30600;
                  goto LABEL_30;
                case 10:
                  unint64_t v17 = 30500;
                  goto LABEL_30;
                case 11:
                  unint64_t v17 = 30400;
                  goto LABEL_30;
                case 12:
                  unint64_t v17 = 30300;
                  goto LABEL_30;
                case 13:
                  unint64_t v17 = 10900;
                  goto LABEL_30;
                case 14:
                  unint64_t v17 = 10800;
                  goto LABEL_30;
                case 15:
                  unint64_t v17 = 10700;
                  goto LABEL_30;
                case 16:
                  unint64_t v17 = 10600;
                  goto LABEL_30;
                case 17:
                  unint64_t v17 = 10500;
                  goto LABEL_30;
                case 18:
                  unint64_t v17 = 20;
                  goto LABEL_30;
                case 19:
                  unint64_t v17 = 10;
                  goto LABEL_30;
                case 20:
                  unint64_t v17 = 10650;
                  goto LABEL_30;
                case 21:
                  unint64_t v17 = 10550;
                  goto LABEL_30;
                case 22:
                  unint64_t v17 = 0;
LABEL_30:
                  if (v15 < v14 != v17 >= qword_C0120[*(char *)(v13 + 16)]) {
                    goto LABEL_31;
                  }
                  break;
                default:
                  if (v15 < v14) {
                    goto LABEL_34;
                  }
LABEL_31:
                  if (++v8 < v11) {
                    continue;
                  }
                  uint64_t v8 = v11;
                  break;
              }
              break;
            }
          }
          if (v15 < v14)
          {
LABEL_34:
            if (v8 < v12) {
              goto LABEL_172;
            }
            if (v12 < v8)
            {
              uint64_t v18 = (uint64_t *)(v88 + 8 * v8);
              uint64_t v19 = v8;
              uint64_t v20 = v12;
              unint64_t v21 = (uint64_t *)(v9 + 8 * v12);
              do
              {
                if (v20 != --v19)
                {
                  if (!v9) {
                    goto LABEL_178;
                  }
                  uint64_t v22 = *v21;
                  *unint64_t v21 = *v18;
                  *uint64_t v18 = v22;
                }
                ++v20;
                --v18;
                ++v21;
              }
              while (v20 < v19);
            }
          }
        }
        if (v8 < v11)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_169;
          }
          if (v8 - v12 < v5)
          {
            Swift::Int v23 = v12 + v5;
            if (__OFADD__(v12, v5)) {
              goto LABEL_173;
            }
            if (v23 >= v11) {
              Swift::Int v23 = v11;
            }
            if (v23 < v12)
            {
LABEL_174:
              __break(1u);
              goto LABEL_175;
            }
            if (v8 != v23)
            {
              uint64_t v24 = (void *)(v88 + 8 * v8);
LABEL_50:
              uint64_t v25 = *(void *)(v9 + 8 * v8);
              uint64_t v26 = v12;
              unint64_t v27 = v24;
              while (2)
              {
                uint64_t v28 = *v27;
                unint64_t v29 = 50800;
                switch(*(unsigned char *)(*v27 + 16))
                {
                  case 1:
                    goto LABEL_73;
                  case 2:
                    unint64_t v29 = 50700;
                    goto LABEL_73;
                  case 3:
                    unint64_t v29 = 50600;
                    goto LABEL_73;
                  case 4:
                    unint64_t v29 = 50500;
                    goto LABEL_73;
                  case 5:
                    unint64_t v29 = 50400;
                    goto LABEL_73;
                  case 6:
                    unint64_t v29 = 30900;
                    goto LABEL_73;
                  case 7:
                    unint64_t v29 = 30800;
                    goto LABEL_73;
                  case 8:
                    unint64_t v29 = 30700;
                    goto LABEL_73;
                  case 9:
                    unint64_t v29 = 30600;
                    goto LABEL_73;
                  case 0xA:
                    unint64_t v29 = 30500;
                    goto LABEL_73;
                  case 0xB:
                    unint64_t v29 = 30400;
                    goto LABEL_73;
                  case 0xC:
                    unint64_t v29 = 30300;
                    goto LABEL_73;
                  case 0xD:
                    unint64_t v29 = 10900;
                    goto LABEL_73;
                  case 0xE:
                    unint64_t v29 = 10800;
                    goto LABEL_73;
                  case 0xF:
                    unint64_t v29 = 10700;
                    goto LABEL_73;
                  case 0x10:
                    unint64_t v29 = 10600;
                    goto LABEL_73;
                  case 0x11:
                    unint64_t v29 = 10500;
                    goto LABEL_73;
                  case 0x12:
                    unint64_t v29 = 20;
                    goto LABEL_73;
                  case 0x13:
                    unint64_t v29 = 10;
                    goto LABEL_73;
                  case 0x14:
                    unint64_t v29 = 10650;
                    goto LABEL_73;
                  case 0x15:
                    unint64_t v29 = 10550;
                    goto LABEL_73;
                  case 0x16:
                    unint64_t v29 = 0;
LABEL_73:
                    if (v29 >= qword_C0120[*(char *)(v25 + 16)]) {
                      goto LABEL_76;
                    }
                    if (!v9) {
                      goto LABEL_176;
                    }
                    *unint64_t v27 = v25;
                    v27[1] = v28;
                    --v27;
                    if (v8 != ++v26) {
                      continue;
                    }
LABEL_76:
                    ++v8;
                    ++v24;
                    if (v8 != v23) {
                      goto LABEL_50;
                    }
                    uint64_t v8 = v23;
                    break;
                  default:
                    goto LABEL_76;
                }
                break;
              }
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_168;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_2FF00(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v31 = *((void *)v10 + 2);
        unint64_t v30 = *((void *)v10 + 3);
        unint64_t v32 = v31 + 1;
        uint64_t v9 = v92;
        if (v31 >= v30 >> 1)
        {
          uint64_t v9 = v92;
          uint64_t v10 = sub_2FF00((char *)(v30 > 1), v31 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v32;
        uint64_t v33 = v10 + 32;
        int64_t v34 = &v10[16 * v31 + 32];
        *(void *)int64_t v34 = v12;
        *((void *)v34 + 1) = v8;
        if (v31)
        {
          while (1)
          {
            unint64_t v35 = v32 - 1;
            if (v32 >= 4)
            {
              uint64_t v40 = &v33[16 * v32];
              uint64_t v41 = *((void *)v40 - 8);
              uint64_t v42 = *((void *)v40 - 7);
              BOOL v46 = __OFSUB__(v42, v41);
              uint64_t v43 = v42 - v41;
              if (v46) {
                goto LABEL_153;
              }
              uint64_t v45 = *((void *)v40 - 6);
              uint64_t v44 = *((void *)v40 - 5);
              BOOL v46 = __OFSUB__(v44, v45);
              uint64_t v38 = v44 - v45;
              char v39 = v46;
              if (v46) {
                goto LABEL_154;
              }
              unint64_t v47 = v32 - 2;
              uint64_t v48 = &v33[16 * v32 - 32];
              uint64_t v50 = *(void *)v48;
              uint64_t v49 = *((void *)v48 + 1);
              BOOL v46 = __OFSUB__(v49, v50);
              uint64_t v51 = v49 - v50;
              if (v46) {
                goto LABEL_155;
              }
              BOOL v46 = __OFADD__(v38, v51);
              uint64_t v52 = v38 + v51;
              if (v46) {
                goto LABEL_157;
              }
              if (v52 >= v43)
              {
                uint64_t v70 = &v33[16 * v35];
                uint64_t v72 = *(void *)v70;
                uint64_t v71 = *((void *)v70 + 1);
                BOOL v46 = __OFSUB__(v71, v72);
                uint64_t v73 = v71 - v72;
                if (v46) {
                  goto LABEL_163;
                }
                BOOL v63 = v38 < v73;
                goto LABEL_115;
              }
            }
            else
            {
              if (v32 != 3)
              {
                uint64_t v64 = *((void *)v10 + 4);
                uint64_t v65 = *((void *)v10 + 5);
                BOOL v46 = __OFSUB__(v65, v64);
                uint64_t v57 = v65 - v64;
                char v58 = v46;
                goto LABEL_109;
              }
              uint64_t v37 = *((void *)v10 + 4);
              uint64_t v36 = *((void *)v10 + 5);
              BOOL v46 = __OFSUB__(v36, v37);
              uint64_t v38 = v36 - v37;
              char v39 = v46;
            }
            if (v39) {
              goto LABEL_156;
            }
            unint64_t v47 = v32 - 2;
            uint64_t v53 = &v33[16 * v32 - 32];
            uint64_t v55 = *(void *)v53;
            uint64_t v54 = *((void *)v53 + 1);
            BOOL v56 = __OFSUB__(v54, v55);
            uint64_t v57 = v54 - v55;
            char v58 = v56;
            if (v56) {
              goto LABEL_158;
            }
            unint64_t v59 = &v33[16 * v35];
            uint64_t v61 = *(void *)v59;
            uint64_t v60 = *((void *)v59 + 1);
            BOOL v46 = __OFSUB__(v60, v61);
            uint64_t v62 = v60 - v61;
            if (v46) {
              goto LABEL_160;
            }
            if (__OFADD__(v57, v62)) {
              goto LABEL_162;
            }
            if (v57 + v62 >= v38)
            {
              BOOL v63 = v38 < v62;
LABEL_115:
              if (v63) {
                unint64_t v35 = v47;
              }
              goto LABEL_117;
            }
LABEL_109:
            if (v58) {
              goto LABEL_159;
            }
            char v66 = &v33[16 * v35];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v46 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v46) {
              goto LABEL_161;
            }
            if (v69 < v57) {
              goto LABEL_126;
            }
LABEL_117:
            unint64_t v74 = v35 - 1;
            if (v35 - 1 >= v32)
            {
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
              goto LABEL_171;
            }
            if (!v9) {
              goto LABEL_177;
            }
            uint64_t v75 = &v33[16 * v74];
            uint64_t v76 = *(void *)v75;
            uint64_t v77 = &v33[16 * v35];
            uint64_t v78 = *((void *)v77 + 1);
            sub_2F8E8((void *)(v9 + 8 * *(void *)v75), (void *)(v9 + 8 * *(void *)v77), v9 + 8 * v78, v93);
            if (v94)
            {
LABEL_131:
              swift_bridgeObjectRelease();
              if (v91 >= -1)
              {
                *(void *)((char *)&dword_10 + (v95 & 0xFFFFFFFFFFFFFF8)) = 0;
                sub_B30C0();
                return swift_bridgeObjectRelease();
              }
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
              goto LABEL_174;
            }
            if (v78 < v76) {
              goto LABEL_150;
            }
            if (v35 > *((void *)v10 + 2)) {
              goto LABEL_151;
            }
            *(void *)uint64_t v75 = v76;
            *(void *)&v33[16 * v74 + 8] = v78;
            unint64_t v79 = *((void *)v10 + 2);
            if (v35 >= v79) {
              goto LABEL_152;
            }
            unint64_t v32 = v79 - 1;
            memmove(&v33[16 * v35], v77 + 16, 16 * (v79 - 1 - v35));
            *((void *)v10 + 2) = v79 - 1;
            uint64_t v9 = v92;
            if (v79 <= 2) {
              goto LABEL_126;
            }
          }
        }
        unint64_t v32 = 1;
LABEL_126:
        Swift::Int v5 = v90;
        Swift::Int v11 = v91;
        if (v8 >= v91) {
          goto LABEL_134;
        }
      }
    }
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    unint64_t v32 = _swiftEmptyArrayStorage[2];
LABEL_134:
    uint64_t v80 = v10;
    if (v32 >= 2)
    {
      uint64_t v81 = *v89;
      do
      {
        unint64_t v82 = v32 - 2;
        if (v32 < 2) {
          goto LABEL_164;
        }
        if (!v81) {
          goto LABEL_179;
        }
        uint64_t v83 = v80;
        uint64_t v84 = *(void *)&v80[16 * v82 + 32];
        uint64_t v85 = *(void *)&v80[16 * v32 + 24];
        sub_2F8E8((void *)(v81 + 8 * v84), (void *)(v81 + 8 * *(void *)&v80[16 * v32 + 16]), v81 + 8 * v85, v93);
        if (v94) {
          goto LABEL_131;
        }
        if (v85 < v84) {
          goto LABEL_165;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v83 = sub_2FFE4((uint64_t)v83);
        }
        if (v82 >= *((void *)v83 + 2)) {
          goto LABEL_166;
        }
        uint64_t v86 = &v83[16 * v82 + 32];
        *(void *)uint64_t v86 = v84;
        *((void *)v86 + 1) = v85;
        unint64_t v87 = *((void *)v83 + 2);
        if (v32 > v87) {
          goto LABEL_167;
        }
        memmove(&v83[16 * v32 + 16], &v83[16 * v32 + 32], 16 * (v87 - v32));
        uint64_t v80 = v83;
        *((void *)v83 + 2) = v87 - 1;
        unint64_t v32 = v87 - 1;
      }
      while (v87 > 2);
    }
    swift_bridgeObjectRelease();
    if (v91 < -1)
    {
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      JUMPOUT(0x2E4B8);
    }
    *(void *)((char *)&dword_10 + (v95 & 0xFFFFFFFFFFFFFF8)) = 0;
    sub_B30C0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Int sub_2E570(uint64_t *a1)
{
  Swift::Int v2 = a1[1];
  Swift::Int result = sub_B37B0(v2);
  uint64_t v4 = &unk_F4000;
  if (result >= v2)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v2 >= 2)
      {
        uint64_t v107 = 0;
        uint64_t v108 = *a1;
        for (uint64_t i = 1; i != v2; ++i)
        {
          uint64_t v110 = *(void *)(v108 + 8 * i);
          uint64_t v111 = v107;
          do
          {
            uint64_t v112 = *(void *)(v108 + v111);
            if (*(void *)(v112 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count) >= *(void *)(v110 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count)) {
              break;
            }
            if (!v108) {
              goto LABEL_258;
            }
            *(void *)(v108 + v111 + 8) = v112;
            *(void *)(v108 + v111) = v110;
            v111 -= 8;
          }
          while (v111 != -8);
          v107 += 8;
        }
      }
      return result;
    }
    goto LABEL_255;
  }
  Swift::Int v5 = result;
  uint64_t v6 = sub_2D5B8(v2 / 2);
  __dst = v7;
  uint64_t v164 = v6;
  uint64_t v146 = v2;
  uint64_t v144 = a1;
  if (v2 <= 0)
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    unint64_t v32 = _swiftEmptyArrayStorage[2];
LABEL_156:
    if (v32 < 2)
    {
LABEL_228:
      swift_bridgeObjectRelease();
      if (v146 >= -1)
      {
        *(void *)((char *)&dword_10 + (v164 & 0xFFFFFFFFFFFFFF8)) = 0;
        sub_B30C0();
        return swift_bridgeObjectRelease();
      }
LABEL_257:
      __break(1u);
LABEL_258:
      __break(1u);
LABEL_259:
      __break(1u);
LABEL_260:
      __break(1u);
LABEL_261:
      __break(1u);
      goto LABEL_262;
    }
    uint64_t v113 = *v144;
    uint64_t v150 = *v144 - 8;
    uint64_t v153 = *v144;
    while (v32 >= 2)
    {
      if (!v113) {
        goto LABEL_261;
      }
      uint64_t v159 = (uint64_t)v10;
      int64_t v156 = v32 - 2;
      uint64_t v114 = *(void *)&v10[16 * v32];
      uint64_t v115 = *(void *)&v10[16 * v32 + 16];
      uint64_t v161 = *(void *)&v10[16 * v32 + 24];
      uint64_t v163 = v114;
      uint64_t v116 = (char *)(v113 + 8 * v114);
      uint64_t v117 = (char *)(v113 + 8 * v115);
      unint64_t v118 = v113 + 8 * v161;
      uint64_t v119 = v117 - v116;
      uint64_t v120 = (v117 - v116) / 8;
      uint64_t v121 = v118 - (void)v117;
      uint64_t v122 = (uint64_t)(v118 - (void)v117) / 8;
      if (v120 < v122)
      {
        if (v119 <= -8) {
          goto LABEL_262;
        }
        if (__dst != v116 || __dst >= v117) {
          memmove(__dst, (const void *)(v113 + 8 * v114), 8 * v120);
        }
        unint64_t v124 = &__dst[8 * v120];
        BOOL v63 = v115 < v161;
        uint64_t v125 = v161;
        BOOL v126 = !v63 || v119 < 8;
        long long v127 = __dst;
        if (!v126)
        {
          while (1)
          {
            uint64_t v128 = *(void *)v117;
            if (*(void *)(*(void *)v127 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count) < *(void *)(*(void *)v117 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count)) {
              break;
            }
            uint64_t v128 = *(void *)v127;
            BOOL v92 = v116 == v127;
            v127 += 8;
            if (!v92) {
              goto LABEL_179;
            }
LABEL_180:
            v116 += 8;
            if (v127 >= v124 || (unint64_t)v117 >= v118) {
              goto LABEL_185;
            }
          }
          BOOL v92 = v116 == v117;
          v117 += 8;
          if (v92) {
            goto LABEL_180;
          }
LABEL_179:
          *(void *)uint64_t v116 = v128;
          goto LABEL_180;
        }
        long long v127 = __dst;
LABEL_185:
        uint64_t v117 = v116;
        uint64_t v130 = v163;
        goto LABEL_215;
      }
      if (v121 <= -8) {
        goto LABEL_262;
      }
      long long v127 = __dst;
      if ((unint64_t)__dst >= v118 || __dst != v117) {
        memmove(__dst, (const void *)(v113 + 8 * v115), 8 * v122);
      }
      unint64_t v124 = &__dst[8 * v122];
      uint64_t v130 = v163;
      if (v163 < v115 && v121 >= 8)
      {
        uint64_t v125 = v161;
        int v133 = (char *)(v150 + 8 * v161);
        while (1)
        {
          uint64_t v134 = v133 + 8;
          uint64_t v135 = *((void *)v117 - 1);
          if (*(void *)(v135 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count) >= *(void *)(*((void *)v124 - 1) + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count))
          {
            BOOL v137 = v134 != v124 || v133 >= v124;
            uint64_t v135 = *((void *)v124 - 1);
            v124 -= 8;
            if (!v137) {
              goto LABEL_210;
            }
          }
          else
          {
            BOOL v136 = v134 != v117 || v133 >= v117;
            v117 -= 8;
            if (!v136) {
              goto LABEL_210;
            }
          }
          *(void *)int v133 = v135;
LABEL_210:
          v133 -= 8;
          if (v116 >= v117 || __dst >= v124) {
            goto LABEL_215;
          }
        }
      }
      uint64_t v125 = v161;
LABEL_215:
      uint64_t v139 = v124 - v127;
      if (v139 <= -8) {
        goto LABEL_262;
      }
      uint64_t v140 = v139 / 8;
      if (v117 != v127 || v117 >= &v127[8 * v140]) {
        memmove(v117, v127, 8 * v140);
      }
      if (v125 < v130) {
        goto LABEL_247;
      }
      uint64_t v10 = (char *)v159;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_2FFE4(v159);
      }
      if (v156 >= *((void *)v10 + 2)) {
        goto LABEL_248;
      }
      uint64_t v142 = &v10[16 * v156 + 32];
      *(void *)uint64_t v142 = v130;
      *((void *)v142 + 1) = v125;
      unint64_t v143 = *((void *)v10 + 2);
      if (v32 > v143) {
        goto LABEL_249;
      }
      memmove(&v10[16 * v32 + 16], &v10[16 * v32 + 32], 16 * (v143 - v32));
      *((void *)v10 + 2) = v143 - 1;
      unint64_t v32 = v143 - 1;
      uint64_t v113 = v153;
      if (v143 <= 2) {
        goto LABEL_228;
      }
    }
LABEL_246:
    __break(1u);
LABEL_247:
    __break(1u);
LABEL_248:
    __break(1u);
LABEL_249:
    __break(1u);
LABEL_250:
    __break(1u);
LABEL_251:
    __break(1u);
LABEL_252:
    __break(1u);
LABEL_253:
    __break(1u);
LABEL_254:
    __break(1u);
LABEL_255:
    __break(1u);
LABEL_256:
    __break(1u);
    goto LABEL_257;
  }
  Swift::Int v145 = v5;
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v148 = *a1 - 8;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v11 = v2;
  uint64_t v154 = *a1;
  while (1)
  {
    uint64_t v12 = v8;
    Swift::Int v13 = v8 + 1;
    if (v8 + 1 < v11)
    {
      uint64_t v14 = v4[504];
      uint64_t v15 = *(void *)(*(void *)(v9 + 8 * v13) + v14);
      uint64_t v16 = *(void *)(*(void *)(v9 + 8 * v8) + v14);
      Swift::Int v13 = v12 + 2;
      if (v12 + 2 < v11)
      {
        uint64_t v17 = v15;
        while (1)
        {
          uint64_t v18 = *(void *)(*(void *)(v9 + 8 * v13) + v14);
          if (v16 < v15 == v17 >= v18) {
            break;
          }
          ++v13;
          uint64_t v17 = v18;
          if (v13 >= v11)
          {
            Swift::Int v13 = v11;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v13 < v12) {
          goto LABEL_252;
        }
        if (v12 < v13)
        {
          uint64_t v19 = (uint64_t *)(v148 + 8 * v13);
          Swift::Int v20 = v13;
          Swift::Int v21 = v12;
          uint64_t v22 = (uint64_t *)(v9 + 8 * v12);
          do
          {
            if (v21 != --v20)
            {
              if (!v9) {
                goto LABEL_260;
              }
              uint64_t v23 = *v22;
              *uint64_t v22 = *v19;
              *uint64_t v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v13 < v11)
    {
      if (__OFSUB__(v13, v12)) {
        goto LABEL_251;
      }
      if (v13 - v12 < v145)
      {
        Swift::Int v24 = v12 + v145;
        if (__OFADD__(v12, v145)) {
          goto LABEL_253;
        }
        if (v24 >= v11) {
          Swift::Int v24 = v11;
        }
        if (v24 < v12) {
          goto LABEL_254;
        }
        if (v13 != v24)
        {
          uint64_t v25 = (uint64_t *)(v148 + 8 * v13);
          do
          {
            uint64_t v26 = *(void *)(v9 + 8 * v13);
            uint64_t v27 = v12;
            uint64_t v28 = v25;
            do
            {
              uint64_t v29 = *v28;
              if (*(void *)(*v28 + v4[504]) >= *(void *)(v26 + v4[504])) {
                break;
              }
              if (!v9) {
                goto LABEL_256;
              }
              *uint64_t v28 = v26;
              v28[1] = v29;
              --v28;
              ++v27;
            }
            while (v13 != v27);
            ++v13;
            ++v25;
          }
          while (v13 != v24);
          Swift::Int v13 = v24;
        }
      }
    }
    if (v13 < v12) {
      goto LABEL_250;
    }
    uint64_t v147 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_2FF00(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v31 = *((void *)v10 + 2);
    unint64_t v30 = *((void *)v10 + 3);
    unint64_t v32 = v31 + 1;
    if (v31 >= v30 >> 1) {
      uint64_t v10 = sub_2FF00((char *)(v30 > 1), v31 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v32;
    uint64_t v33 = v10 + 32;
    int64_t v34 = &v10[16 * v31 + 32];
    *(void *)int64_t v34 = v12;
    *((void *)v34 + 1) = v147;
    if (v31) {
      break;
    }
    unint64_t v32 = 1;
LABEL_144:
    Swift::Int v11 = v146;
    uint64_t v8 = v147;
    if (v147 >= v146) {
      goto LABEL_156;
    }
  }
  uint64_t v155 = v10 + 32;
  while (1)
  {
    int64_t v35 = v32 - 1;
    if (v32 >= 4)
    {
      uint64_t v40 = &v33[16 * v32];
      uint64_t v41 = *((void *)v40 - 8);
      uint64_t v42 = *((void *)v40 - 7);
      BOOL v46 = __OFSUB__(v42, v41);
      uint64_t v43 = v42 - v41;
      if (v46) {
        goto LABEL_235;
      }
      uint64_t v45 = *((void *)v40 - 6);
      uint64_t v44 = *((void *)v40 - 5);
      BOOL v46 = __OFSUB__(v44, v45);
      uint64_t v38 = v44 - v45;
      char v39 = v46;
      if (v46) {
        goto LABEL_236;
      }
      unint64_t v47 = v32 - 2;
      uint64_t v48 = &v33[16 * v32 - 32];
      uint64_t v50 = *(void *)v48;
      uint64_t v49 = *((void *)v48 + 1);
      BOOL v46 = __OFSUB__(v49, v50);
      uint64_t v51 = v49 - v50;
      if (v46) {
        goto LABEL_238;
      }
      BOOL v46 = __OFADD__(v38, v51);
      uint64_t v52 = v38 + v51;
      if (v46) {
        goto LABEL_241;
      }
      if (v52 >= v43)
      {
        uint64_t v70 = &v33[16 * v35];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v46 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v46) {
          goto LABEL_245;
        }
        BOOL v63 = v38 < v73;
        goto LABEL_71;
      }
    }
    else
    {
      if (v32 != 3)
      {
        uint64_t v64 = *((void *)v10 + 4);
        uint64_t v65 = *((void *)v10 + 5);
        BOOL v46 = __OFSUB__(v65, v64);
        uint64_t v57 = v65 - v64;
        char v58 = v46;
        goto LABEL_65;
      }
      uint64_t v37 = *((void *)v10 + 4);
      uint64_t v36 = *((void *)v10 + 5);
      BOOL v46 = __OFSUB__(v36, v37);
      uint64_t v38 = v36 - v37;
      char v39 = v46;
    }
    if (v39) {
      goto LABEL_237;
    }
    unint64_t v47 = v32 - 2;
    uint64_t v53 = &v33[16 * v32 - 32];
    uint64_t v55 = *(void *)v53;
    uint64_t v54 = *((void *)v53 + 1);
    BOOL v56 = __OFSUB__(v54, v55);
    uint64_t v57 = v54 - v55;
    char v58 = v56;
    if (v56) {
      goto LABEL_240;
    }
    unint64_t v59 = &v33[16 * v35];
    uint64_t v61 = *(void *)v59;
    uint64_t v60 = *((void *)v59 + 1);
    BOOL v46 = __OFSUB__(v60, v61);
    uint64_t v62 = v60 - v61;
    if (v46) {
      goto LABEL_243;
    }
    if (__OFADD__(v57, v62)) {
      goto LABEL_244;
    }
    if (v57 + v62 >= v38)
    {
      BOOL v63 = v38 < v62;
LABEL_71:
      if (v63) {
        int64_t v35 = v47;
      }
      goto LABEL_73;
    }
LABEL_65:
    if (v58) {
      goto LABEL_239;
    }
    char v66 = &v33[16 * v35];
    uint64_t v68 = *(void *)v66;
    uint64_t v67 = *((void *)v66 + 1);
    BOOL v46 = __OFSUB__(v67, v68);
    uint64_t v69 = v67 - v68;
    if (v46) {
      goto LABEL_242;
    }
    if (v69 < v57) {
      goto LABEL_144;
    }
LABEL_73:
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_232:
      __break(1u);
LABEL_233:
      __break(1u);
LABEL_234:
      __break(1u);
LABEL_235:
      __break(1u);
LABEL_236:
      __break(1u);
LABEL_237:
      __break(1u);
LABEL_238:
      __break(1u);
LABEL_239:
      __break(1u);
LABEL_240:
      __break(1u);
LABEL_241:
      __break(1u);
LABEL_242:
      __break(1u);
LABEL_243:
      __break(1u);
LABEL_244:
      __break(1u);
LABEL_245:
      __break(1u);
      goto LABEL_246;
    }
    if (!v9) {
      goto LABEL_259;
    }
    unint64_t v74 = v10;
    int64_t v162 = v35 - 1;
    v160 = &v33[16 * v35 - 16];
    uint64_t v75 = *(void *)v160;
    uint64_t v76 = &v33[16 * v35];
    uint64_t v78 = *(void *)v76;
    uint64_t v77 = *((void *)v76 + 1);
    unint64_t v79 = (char *)(v9 + 8 * *(void *)v160);
    uint64_t v80 = (char *)(v9 + 8 * *(void *)v76);
    unint64_t v81 = v9 + 8 * v77;
    uint64_t v82 = v80 - v79;
    uint64_t v83 = (v80 - v79) / 8;
    uint64_t v84 = v81 - (void)v80;
    uint64_t v85 = (uint64_t)(v81 - (void)v80) / 8;
    uint64_t v158 = v76;
    if (v83 >= v85) {
      break;
    }
    if (v82 <= -8) {
      goto LABEL_262;
    }
    BOOL v86 = __dst != v79 || __dst >= v80;
    uint64_t v4 = &unk_F4000;
    if (v86)
    {
      int64_t v149 = v35;
      uint64_t v151 = *((void *)v76 + 1);
      memmove(__dst, v79, 8 * v83);
      int64_t v35 = v149;
      uint64_t v77 = v151;
    }
    unint64_t v87 = &__dst[8 * v83];
    BOOL v88 = v78 >= v77 || v82 < 8;
    uint64_t v89 = __dst;
    uint64_t v9 = v154;
    uint64_t v33 = v155;
    if (!v88)
    {
      while (1)
      {
        uint64_t v90 = *(void *)v80;
        if (*(void *)(*(void *)v89 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count) < *(void *)(*(void *)v80 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count)) {
          break;
        }
        uint64_t v90 = *(void *)v89;
        BOOL v92 = v79 == v89;
        v89 += 8;
        if (!v92) {
          goto LABEL_94;
        }
LABEL_95:
        v79 += 8;
        if (v89 >= v87 || (unint64_t)v80 >= v81) {
          goto LABEL_100;
        }
      }
      BOOL v92 = v79 == v80;
      v80 += 8;
      if (v92) {
        goto LABEL_95;
      }
LABEL_94:
      *(void *)unint64_t v79 = v90;
      goto LABEL_95;
    }
    uint64_t v89 = __dst;
LABEL_100:
    uint64_t v80 = v79;
    uint64_t v10 = v74;
LABEL_131:
    uint64_t v101 = v87 - v89;
    if (v101 <= -8) {
      goto LABEL_262;
    }
    uint64_t v102 = v101 / 8;
    if (v80 != v89 || v80 >= &v89[8 * v102])
    {
      uint64_t v104 = v77;
      int64_t v105 = v35;
      memmove(v80, v89, 8 * v102);
      uint64_t v77 = v104;
      int64_t v35 = v105;
    }
    if (v77 < v75) {
      goto LABEL_232;
    }
    if (v35 > *((void *)v10 + 2)) {
      goto LABEL_233;
    }
    *(void *)v160 = v75;
    *(void *)&v33[16 * v162 + 8] = v77;
    unint64_t v106 = *((void *)v10 + 2);
    if (v35 >= (uint64_t)v106) {
      goto LABEL_234;
    }
    unint64_t v32 = v106 - 1;
    memmove(v158, v158 + 16, 16 * (v106 - 1 - v35));
    *((void *)v10 + 2) = v106 - 1;
    if (v106 <= 2) {
      goto LABEL_144;
    }
  }
  if (v84 > -8)
  {
    BOOL v92 = (unint64_t)__dst < v81 && __dst == v80;
    if (!v92)
    {
      uint64_t v152 = *((void *)v76 + 1);
      int64_t v93 = v35;
      memmove(__dst, v80, 8 * v85);
      uint64_t v77 = v152;
      int64_t v35 = v93;
    }
    unint64_t v87 = &__dst[8 * v85];
    BOOL v94 = v75 >= v78 || v84 < 8;
    uint64_t v10 = v74;
    if (v94)
    {
      uint64_t v89 = __dst;
      uint64_t v4 = (void *)&unk_F4000;
      uint64_t v9 = v154;
      uint64_t v33 = v155;
      goto LABEL_131;
    }
    uint64_t v95 = (char *)(v148 + 8 * v77);
    uint64_t v4 = &unk_F4000;
    uint64_t v33 = v155;
    while (1)
    {
      uint64_t v96 = v95 + 8;
      uint64_t v97 = *((void *)v80 - 1);
      if (*(void *)(v97 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count) >= *(void *)(*((void *)v87 - 1) + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21WeatherConditionEvent_count))
      {
        BOOL v99 = v96 != v87 || v95 >= v87;
        uint64_t v97 = *((void *)v87 - 1);
        v87 -= 8;
        if (!v99) {
          goto LABEL_125;
        }
      }
      else
      {
        BOOL v98 = v96 != v80 || v95 >= v80;
        v80 -= 8;
        if (!v98) {
          goto LABEL_125;
        }
      }
      *(void *)uint64_t v95 = v97;
LABEL_125:
      v95 -= 8;
      if (v79 >= v80 || __dst >= v87)
      {
        uint64_t v89 = __dst;
        uint64_t v9 = v154;
        goto LABEL_131;
      }
    }
  }
LABEL_262:
  Swift::Int result = sub_B3660();
  __break(1u);
  return result;
}

uint64_t sub_2EFB8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_B37B0(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_128;
    }
    if (v3) {
      return sub_2F800(0, v3, 1, a1);
    }
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = sub_2D5B8(v3 / 2);
  int64_t v93 = v6;
  uint64_t v94 = result;
  uint64_t v89 = v3;
  unint64_t v87 = a1;
  if (v3 <= 0) {
    goto LABEL_92;
  }
  uint64_t v88 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v86 = *a1 - 8;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v10 = v7++;
    if (v7 >= v3) {
      goto LABEL_20;
    }
    swift_retain();
    swift_retain();
    int v11 = sub_B1760();
    swift_release();
    uint64_t result = swift_release();
    Swift::Int v7 = v10 + 2;
    if (v10 + 2 >= v3)
    {
LABEL_10:
      if ((v11 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_13:
      if (v7 < v10) {
        goto LABEL_129;
      }
      if (v10 < v7)
      {
        uint64_t v15 = (uint64_t *)(v86 + 8 * v7);
        Swift::Int v16 = v7;
        Swift::Int v17 = v10;
        uint64_t v18 = (uint64_t *)(v8 + 8 * v10);
        do
        {
          if (v17 != --v16)
          {
            if (!v8) {
              goto LABEL_135;
            }
            uint64_t v19 = *v18;
            *uint64_t v18 = *v15;
            *uint64_t v15 = v19;
          }
          ++v17;
          --v15;
          ++v18;
        }
        while (v17 < v16);
      }
      goto LABEL_20;
    }
    Swift::Int v12 = v10;
    while (1)
    {
      swift_retain();
      swift_retain();
      int v13 = sub_B1760();
      swift_release();
      uint64_t result = swift_release();
      if ((v11 ^ v13)) {
        break;
      }
      Swift::Int v14 = v12 + 3;
      ++v12;
      if (v14 >= v3)
      {
        Swift::Int v7 = v3;
        goto LABEL_10;
      }
    }
    Swift::Int v7 = v12 + 2;
    if (v11) {
      goto LABEL_13;
    }
LABEL_20:
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_127;
      }
      if (v7 - v10 < v88)
      {
        if (__OFADD__(v10, v88)) {
          goto LABEL_130;
        }
        if (v10 + v88 >= v3) {
          Swift::Int v20 = v3;
        }
        else {
          Swift::Int v20 = v10 + v88;
        }
        if (v20 < v10)
        {
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (v7 != v20)
        {
          Swift::Int v21 = (uint64_t *)(v86 + 8 * v7);
          Swift::Int v90 = v10;
          Swift::Int v91 = v20;
          do
          {
            uint64_t v22 = v21;
            do
            {
              swift_retain();
              swift_retain();
              char v23 = sub_B1760();
              swift_release();
              uint64_t result = swift_release();
              if ((v23 & 1) == 0) {
                break;
              }
              if (!v8) {
                goto LABEL_133;
              }
              uint64_t v24 = *v22;
              *uint64_t v22 = v22[1];
              v22[1] = v24;
              --v22;
              ++v10;
            }
            while (v7 != v10);
            ++v7;
            ++v21;
            Swift::Int v10 = v90;
          }
          while (v7 != v91);
          Swift::Int v7 = v91;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_126;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2FF00(0, *((void *)v9 + 2) + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    unint64_t v26 = *((void *)v9 + 2);
    unint64_t v25 = *((void *)v9 + 3);
    unint64_t v27 = v26 + 1;
    if (v26 >= v25 >> 1)
    {
      uint64_t result = (uint64_t)sub_2FF00((char *)(v25 > 1), v26 + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    *((void *)v9 + 2) = v27;
    BOOL v92 = v9 + 32;
    uint64_t v28 = &v9[16 * v26 + 32];
    *(void *)uint64_t v28 = v10;
    *((void *)v28 + 1) = v7;
    if (v26) {
      break;
    }
    unint64_t v27 = 1;
LABEL_85:
    Swift::Int v3 = v89;
    if (v7 >= v89) {
      goto LABEL_93;
    }
  }
  uint64_t v29 = v9 + 32;
  while (1)
  {
    unint64_t v30 = v27 - 1;
    if (v27 >= 4)
    {
      int64_t v35 = &v29[2 * v27];
      uint64_t v36 = *(v35 - 8);
      uint64_t v37 = *(v35 - 7);
      BOOL v41 = __OFSUB__(v37, v36);
      uint64_t v38 = v37 - v36;
      if (v41) {
        goto LABEL_111;
      }
      uint64_t v40 = *(v35 - 6);
      uint64_t v39 = *(v35 - 5);
      BOOL v41 = __OFSUB__(v39, v40);
      uint64_t v33 = v39 - v40;
      char v34 = v41;
      if (v41) {
        goto LABEL_112;
      }
      unint64_t v42 = v27 - 2;
      uint64_t v43 = &v29[2 * v27 - 4];
      uint64_t v45 = *v43;
      uint64_t v44 = v43[1];
      BOOL v41 = __OFSUB__(v44, v45);
      uint64_t v46 = v44 - v45;
      if (v41) {
        goto LABEL_113;
      }
      BOOL v41 = __OFADD__(v33, v46);
      uint64_t v47 = v33 + v46;
      if (v41) {
        goto LABEL_115;
      }
      if (v47 >= v38)
      {
        uint64_t v65 = &v29[2 * v30];
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v41 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v41) {
          goto LABEL_121;
        }
        BOOL v58 = v33 < v68;
        goto LABEL_74;
      }
    }
    else
    {
      if (v27 != 3)
      {
        uint64_t v59 = *((void *)v9 + 4);
        uint64_t v60 = *((void *)v9 + 5);
        BOOL v41 = __OFSUB__(v60, v59);
        uint64_t v52 = v60 - v59;
        char v53 = v41;
        goto LABEL_68;
      }
      uint64_t v32 = *((void *)v9 + 4);
      uint64_t v31 = *((void *)v9 + 5);
      BOOL v41 = __OFSUB__(v31, v32);
      uint64_t v33 = v31 - v32;
      char v34 = v41;
    }
    if (v34) {
      goto LABEL_114;
    }
    unint64_t v42 = v27 - 2;
    uint64_t v48 = &v29[2 * v27 - 4];
    uint64_t v50 = *v48;
    uint64_t v49 = v48[1];
    BOOL v51 = __OFSUB__(v49, v50);
    uint64_t v52 = v49 - v50;
    char v53 = v51;
    if (v51) {
      goto LABEL_116;
    }
    uint64_t v54 = &v29[2 * v30];
    uint64_t v56 = *v54;
    uint64_t v55 = v54[1];
    BOOL v41 = __OFSUB__(v55, v56);
    uint64_t v57 = v55 - v56;
    if (v41) {
      goto LABEL_118;
    }
    if (__OFADD__(v52, v57)) {
      goto LABEL_120;
    }
    if (v52 + v57 >= v33)
    {
      BOOL v58 = v33 < v57;
LABEL_74:
      if (v58) {
        unint64_t v30 = v42;
      }
      goto LABEL_76;
    }
LABEL_68:
    if (v53) {
      goto LABEL_117;
    }
    uint64_t v61 = &v29[2 * v30];
    uint64_t v63 = *v61;
    uint64_t v62 = v61[1];
    BOOL v41 = __OFSUB__(v62, v63);
    uint64_t v64 = v62 - v63;
    if (v41) {
      goto LABEL_119;
    }
    if (v64 < v52) {
      goto LABEL_85;
    }
LABEL_76:
    unint64_t v69 = v30 - 1;
    if (v30 - 1 >= v27)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    uint64_t v70 = v8;
    if (!v8) {
      goto LABEL_134;
    }
    uint64_t v71 = v9;
    uint64_t v72 = v29;
    uint64_t v73 = &v29[2 * v69];
    uint64_t v74 = *v73;
    uint64_t v75 = &v72[2 * v30];
    uint64_t v76 = v75[1];
    uint64_t v77 = v70;
    uint64_t result = sub_2FCD4((void *)(v70 + 8 * *v73), (void *)(v70 + 8 * *v75), v70 + 8 * v76, v93);
    if (v1) {
      break;
    }
    if (v76 < v74) {
      goto LABEL_108;
    }
    if (v30 > *((void *)v71 + 2)) {
      goto LABEL_109;
    }
    *uint64_t v73 = v74;
    uint64_t v29 = v92;
    v92[2 * v69 + 1] = v76;
    unint64_t v78 = *((void *)v71 + 2);
    if (v30 >= v78) {
      goto LABEL_110;
    }
    uint64_t v9 = v71;
    unint64_t v27 = v78 - 1;
    uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v78 - 1 - v30));
    *((void *)v71 + 2) = v78 - 1;
    uint64_t v8 = v77;
    if (v78 <= 2) {
      goto LABEL_85;
    }
  }
LABEL_90:
  swift_bridgeObjectRelease();
  if (v89 >= -1) {
    goto LABEL_105;
  }
  __break(1u);
LABEL_92:
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  unint64_t v27 = _swiftEmptyArrayStorage[2];
LABEL_93:
  uint64_t result = (uint64_t)v9;
  if (v27 >= 2)
  {
    uint64_t v79 = *v87;
    while (1)
    {
      unint64_t v80 = v27 - 2;
      if (v27 < 2) {
        break;
      }
      if (!v79) {
        goto LABEL_136;
      }
      uint64_t v81 = result;
      uint64_t v82 = *(void *)(result + 32 + 16 * v80);
      uint64_t v83 = *(void *)(result + 32 + 16 * (v27 - 1) + 8);
      uint64_t result = sub_2FCD4((void *)(v79 + 8 * v82), (void *)(v79 + 8 * *(void *)(result + 32 + 16 * (v27 - 1))), v79 + 8 * v83, v93);
      if (v1) {
        goto LABEL_90;
      }
      if (v83 < v82) {
        goto LABEL_123;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2FFE4(v81);
        uint64_t v81 = result;
      }
      if (v80 >= *(void *)(v81 + 16)) {
        goto LABEL_124;
      }
      uint64_t v84 = (void *)(v81 + 32 + 16 * v80);
      *uint64_t v84 = v82;
      v84[1] = v83;
      unint64_t v85 = *(void *)(v81 + 16);
      if (v27 > v85) {
        goto LABEL_125;
      }
      memmove((void *)(v81 + 32 + 16 * (v27 - 1)), (const void *)(v81 + 32 + 16 * v27), 16 * (v85 - v27));
      uint64_t result = v81;
      *(void *)(v81 + 16) = v85 - 1;
      unint64_t v27 = v85 - 1;
      if (v85 <= 2) {
        goto LABEL_104;
      }
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_104:
  uint64_t result = swift_bridgeObjectRelease();
  if (v89 >= -1)
  {
LABEL_105:
    *(void *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFFF8)) = 0;
    sub_B30C0();
    return swift_bridgeObjectRelease();
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
  return result;
}

uint64_t sub_2F670(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_3:
    uint64_t v6 = *(void *)(v4 + 8 * a3);
    uint64_t v7 = result;
    uint64_t v8 = (void *)v5;
    while (2)
    {
      uint64_t v9 = *v8;
      unint64_t v10 = 50800;
      switch(*(unsigned char *)(*v8 + 16))
      {
        case 1:
          goto LABEL_26;
        case 2:
          unint64_t v10 = 50700;
          goto LABEL_26;
        case 3:
          unint64_t v10 = 50600;
          goto LABEL_26;
        case 4:
          unint64_t v10 = 50500;
          goto LABEL_26;
        case 5:
          unint64_t v10 = 50400;
          goto LABEL_26;
        case 6:
          unint64_t v10 = 30900;
          goto LABEL_26;
        case 7:
          unint64_t v10 = 30800;
          goto LABEL_26;
        case 8:
          unint64_t v10 = 30700;
          goto LABEL_26;
        case 9:
          unint64_t v10 = 30600;
          goto LABEL_26;
        case 0xA:
          unint64_t v10 = 30500;
          goto LABEL_26;
        case 0xB:
          unint64_t v10 = 30400;
          goto LABEL_26;
        case 0xC:
          unint64_t v10 = 30300;
          goto LABEL_26;
        case 0xD:
          unint64_t v10 = 10900;
          goto LABEL_26;
        case 0xE:
          unint64_t v10 = 10800;
          goto LABEL_26;
        case 0xF:
          unint64_t v10 = 10700;
          goto LABEL_26;
        case 0x10:
          unint64_t v10 = 10600;
          goto LABEL_26;
        case 0x11:
          unint64_t v10 = 10500;
          goto LABEL_26;
        case 0x12:
          unint64_t v10 = 20;
          goto LABEL_26;
        case 0x13:
          unint64_t v10 = 10;
          goto LABEL_26;
        case 0x14:
          unint64_t v10 = 10650;
          goto LABEL_26;
        case 0x15:
          unint64_t v10 = 10550;
          goto LABEL_26;
        case 0x16:
          unint64_t v10 = 0;
LABEL_26:
          if (v10 >= qword_C0120[*(char *)(v6 + 16)]) {
            goto LABEL_29;
          }
          if (!v4)
          {
            __break(1u);
            JUMPOUT(0x2F7A4);
          }
          *uint64_t v8 = v6;
          v8[1] = v9;
          --v8;
          if (a3 == ++v7) {
            goto LABEL_29;
          }
          continue;
        default:
LABEL_29:
          ++a3;
          v5 += 8;
          if (a3 == a2) {
            return result;
          }
          goto LABEL_3;
      }
    }
  }
  return result;
}

uint64_t sub_2F800(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v12 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v7 = v12;
      uint64_t v8 = (uint64_t *)v6;
      do
      {
        swift_retain();
        swift_retain();
        char v9 = sub_B1760();
        swift_release();
        uint64_t result = swift_release();
        if ((v9 & 1) == 0) {
          break;
        }
        if (!v5)
        {
          __break(1u);
          return result;
        }
        uint64_t v10 = *v8;
        *uint64_t v8 = v8[1];
        v8[1] = v10;
        --v8;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v6 += 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_2F8E8(void *a1, void *a2, unint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_5FDF0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v12 = &v4[v11];
    if (v7 < v6 && v10 >= 8)
    {
      uint64_t v19 = (void *)(a3 - 8);
      while (2)
      {
        unint64_t v20 = (unint64_t)v12;
        uint64_t v22 = *--v12;
        uint64_t v21 = v22;
        char v23 = v19 + 1;
        unint64_t v24 = qword_C0120[*(char *)(v22 + 16)];
        unint64_t v25 = 50800;
        switch(*(unsigned char *)(*(v6 - 1) + 16))
        {
          case 1:
            goto LABEL_67;
          case 2:
            unint64_t v25 = 50700;
            goto LABEL_67;
          case 3:
            unint64_t v25 = 50600;
            goto LABEL_67;
          case 4:
            unint64_t v25 = 50500;
            goto LABEL_67;
          case 5:
            unint64_t v25 = 50400;
            goto LABEL_67;
          case 6:
            unint64_t v25 = 30900;
            goto LABEL_67;
          case 7:
            unint64_t v25 = 30800;
            goto LABEL_67;
          case 8:
            unint64_t v25 = 30700;
            goto LABEL_67;
          case 9:
            unint64_t v25 = 30600;
            goto LABEL_67;
          case 0xA:
            unint64_t v25 = 30500;
            goto LABEL_67;
          case 0xB:
            unint64_t v25 = 30400;
            goto LABEL_67;
          case 0xC:
            unint64_t v25 = 30300;
            goto LABEL_67;
          case 0xD:
            unint64_t v25 = 10900;
            goto LABEL_67;
          case 0xE:
            unint64_t v25 = 10800;
            goto LABEL_67;
          case 0xF:
            unint64_t v25 = 10700;
            goto LABEL_67;
          case 0x10:
            unint64_t v25 = 10600;
            goto LABEL_67;
          case 0x11:
            unint64_t v25 = 10500;
            goto LABEL_67;
          case 0x12:
            unint64_t v25 = 20;
            goto LABEL_67;
          case 0x13:
            unint64_t v25 = 10;
            goto LABEL_67;
          case 0x14:
            unint64_t v25 = 10650;
            goto LABEL_67;
          case 0x15:
            unint64_t v25 = 10550;
            goto LABEL_67;
          case 0x16:
            unint64_t v25 = 0;
LABEL_67:
            if (v25 >= v24) {
              goto LABEL_73;
            }
            BOOL v26 = v23 != v6 || v19 >= v6;
            uint64_t v21 = *--v6;
            uint64_t v12 = (void *)v20;
            if (!v26) {
              goto LABEL_79;
            }
            goto LABEL_78;
          default:
LABEL_73:
            if (v23 == (void *)v20 && (unint64_t)v19 < v20) {
              goto LABEL_79;
            }
LABEL_78:
            *uint64_t v19 = v21;
LABEL_79:
            --v19;
            if (v6 <= v7 || v12 <= v4) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
  else
  {
    sub_5FDF0(a1, a2 - a1, a4);
    uint64_t v12 = &v4[v9];
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (2)
      {
        uint64_t v14 = *v4;
        unint64_t v15 = 50800;
        switch(*(unsigned char *)(*v4 + 16))
        {
          case 1:
            goto LABEL_28;
          case 2:
            unint64_t v15 = 50700;
            goto LABEL_28;
          case 3:
            unint64_t v15 = 50600;
            goto LABEL_28;
          case 4:
            unint64_t v15 = 50500;
            goto LABEL_28;
          case 5:
            unint64_t v15 = 50400;
            goto LABEL_28;
          case 6:
            unint64_t v15 = 30900;
            goto LABEL_28;
          case 7:
            unint64_t v15 = 30800;
            goto LABEL_28;
          case 8:
            unint64_t v15 = 30700;
            goto LABEL_28;
          case 9:
            unint64_t v15 = 30600;
            goto LABEL_28;
          case 0xA:
            unint64_t v15 = 30500;
            goto LABEL_28;
          case 0xB:
            unint64_t v15 = 30400;
            goto LABEL_28;
          case 0xC:
            unint64_t v15 = 30300;
            goto LABEL_28;
          case 0xD:
            unint64_t v15 = 10900;
            goto LABEL_28;
          case 0xE:
            unint64_t v15 = 10800;
            goto LABEL_28;
          case 0xF:
            unint64_t v15 = 10700;
            goto LABEL_28;
          case 0x10:
            unint64_t v15 = 10600;
            goto LABEL_28;
          case 0x11:
            unint64_t v15 = 10500;
            goto LABEL_28;
          case 0x12:
            unint64_t v15 = 20;
            goto LABEL_28;
          case 0x13:
            unint64_t v15 = 10;
            goto LABEL_28;
          case 0x14:
            unint64_t v15 = 10650;
            goto LABEL_28;
          case 0x15:
            unint64_t v15 = 10550;
            goto LABEL_28;
          case 0x16:
            unint64_t v15 = 0;
LABEL_28:
            if (v15 >= qword_C0120[*(char *)(*v6 + 16)]) {
              goto LABEL_32;
            }
            uint64_t v14 = *v6;
            BOOL v16 = v7 == v6++;
            if (!v16) {
              goto LABEL_33;
            }
            goto LABEL_34;
          default:
LABEL_32:
            BOOL v16 = v7 == v4++;
            if (!v16) {
LABEL_33:
            }
              *uint64_t v7 = v14;
LABEL_34:
            ++v7;
            if (v4 < v12 && (unint64_t)v6 < a3) {
              continue;
            }
            goto LABEL_39;
        }
      }
    }
LABEL_39:
    uint64_t v6 = v7;
  }
  sub_5FDF0(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_2FCD4(void *a1, void *a2, unint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_5FDF0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_38;
    }
    unint64_t v20 = (void *)(a3 - 8);
    uint64_t v29 = v4;
    while (1)
    {
      unint64_t v30 = v20 + 1;
      uint64_t v21 = v12 - 1;
      uint64_t v22 = v6 - 1;
      unint64_t v23 = (unint64_t)v12;
      swift_retain();
      swift_retain();
      char v24 = sub_B1760();
      swift_release();
      swift_release();
      if (v24)
      {
        BOOL v25 = v30 != v6 || v20 >= v6;
        --v6;
        uint64_t v4 = v29;
        uint64_t v12 = (void *)v23;
        if (!v25) {
          goto LABEL_34;
        }
      }
      else
      {
        BOOL v26 = v30 != (void *)v23 || (unint64_t)v20 >= v23;
        uint64_t v22 = v21;
        uint64_t v12 = v21;
        uint64_t v4 = v29;
        if (!v26) {
          goto LABEL_34;
        }
      }
      *unint64_t v20 = *v22;
LABEL_34:
      --v20;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_38;
      }
    }
  }
  sub_5FDF0(a1, a2 - a1, a4);
  uint64_t v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    do
    {
      unint64_t v14 = (unint64_t)v12;
      swift_retain();
      swift_retain();
      char v15 = sub_B1760();
      swift_release();
      swift_release();
      if (v15)
      {
        BOOL v16 = v6;
        BOOL v17 = v7 == v6++;
      }
      else
      {
        BOOL v16 = v4;
        BOOL v17 = v7 == v4++;
      }
      uint64_t v12 = (void *)v14;
      if (!v17) {
        *uint64_t v7 = *v16;
      }
      ++v7;
    }
    while ((unint64_t)v4 < v14 && (unint64_t)v6 < a3);
  }
  uint64_t v6 = v7;
LABEL_38:
  sub_5FDF0(v4, v12 - v4, v6);
  return 1;
}

char *sub_2FF00(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_7424(&qword_E8E20);
    uint64_t v10 = (char *)sub_308B4();
    j__malloc_size(v10);
    sub_3097C();
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v11;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  int v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2FFE4(uint64_t a1)
{
  return sub_2FF00(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_2FFF8(char *__src, uint64_t a2, char *__dst)
{
  if (__dst != __src || &__src[16 * a2] <= __dst) {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

uint64_t sub_30024(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  char v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *char v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_30224(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  char v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *char v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_30420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_305FC(a1, a2, a3, (uint64_t)sub_6015C, (uint64_t)&unk_E8E38, (uint64_t)&unk_E8E30, (uint64_t)sub_A71AC, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

uint64_t sub_3045C(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_B3620();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_B3620();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_3080C(&qword_E8E18, &qword_E8E10);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v7; ++i)
          {
            sub_7424(&qword_E8E10);
            uint64_t v10 = sub_A71FC();
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t *, void))v10)(&v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) <= a2)
      {
        sub_602F0((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_305FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_30960();
  a25 = v26;
  a26 = v28;
  unint64_t v30 = v29;
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v36 = v35;
  unint64_t v37 = v27;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  unint64_t v42 = v27 >> 62;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_B3620();
    swift_bridgeObjectRelease();
    if (!v43) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v43 = *(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8));
    if (!v43)
    {
LABEL_13:
      sub_30908();
      return;
    }
  }
  if (v41)
  {
    if (v42)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_B3620();
      swift_bridgeObjectRelease();
      if (v44 <= v39)
      {
        if (v43 >= 1)
        {
          uint64_t v45 = sub_3080C(v34, v32);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v43; ++i)
          {
            uint64_t v47 = sub_7424(v32);
            uint64_t v48 = (void (*)(char *, void))v30(&a11, i, v37, v47, v45);
            id v50 = *v49;
            v48(&a11, 0);
            *(void *)(v41 + 8 * i) = v50;
          }
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFFF8)) <= v39)
      {
        v36((v37 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFFF8)), v41);
        goto LABEL_13;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
}

void *sub_30794(uint64_t a1)
{
  return sub_85F54(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_307A8(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

unint64_t sub_307BC()
{
  unint64_t result = qword_E8E40;
  if (!qword_E8E40)
  {
    sub_B17F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8E40);
  }
  return result;
}

uint64_t sub_3080C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20D6C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3085C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_308B4()
{
  return swift_allocObject();
}

uint64_t sub_308CC()
{
  return sub_B35F0();
}

void sub_30924(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
}

uint64_t sub_3093C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_30990()
{
  return sub_2B070();
}

unint64_t sub_309BC()
{
  return 0xD000000000000023;
}

uint64_t sub_309D8()
{
  return 0x57746E6572727543;
}

BOOL sub_309FC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DB848;
  v6._object = a2;
  Swift::Int v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_30A50@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_309FC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_30A88(char *a1@<X8>)
{
  a1[15] = -18;
}

unint64_t sub_30AB0()
{
  return 0xD000000000000023;
}

unsigned char *storeEnumTagSinglePayload for WeatherDialogs(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *BOOL result = a2;
        return result;
      case 2:
        *(_WORD *)BOOL result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)BOOL result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *BOOL result = 0;
      break;
    case 2:
      *(_WORD *)BOOL result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x30B6CLL);
    case 4:
      *(_DWORD *)BOOL result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDialogs()
{
  return &type metadata for WeatherDialogs;
}

unint64_t sub_30BA8()
{
  unint64_t result = qword_E8E60;
  if (!qword_E8E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8E60);
  }
  return result;
}

uint64_t sub_30BF4()
{
  sub_21CFC();
  uint64_t result = sub_B2EA0();
  qword_F4FC8 = result;
  return result;
}

uint64_t sub_30C34(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_7468(a1, v2);
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  sub_A8B4((uint64_t)a1, (uint64_t)v9);
  if (v4)
  {
    char v5 = 1;
  }
  else
  {
    sub_7468(v9, v9[3]);
    uint64_t v6 = sub_3265C();
    char v5 = v7(v6);
  }
  sub_74F8((uint64_t)v9);
  return v5 & 1;
}

uint64_t sub_30CE0()
{
  return sub_B1C80();
}

uint64_t sub_30D40(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return sub_FCA0((uint64_t)sub_30D58);
}

uint64_t sub_30D58()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_3254C();
  sub_8C320(v2, v3, v4, v5, v6, v7);
  uint64_t v8 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender;
  *(void *)(v0 + 56) = OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender;
  unint64_t v9 = (void *)(v1 + v8);
  sub_7468((void *)(v1 + v8), *(void *)(v1 + v8 + 24));
  sub_3263C();
  sub_32620(131);
  sub_A1D18();
  swift_release();
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_templatingService);
  type metadata accessor for CommonTemplatingService();
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 64) = inited;
  *(void *)(inited + 16) = v10;
  uint64_t v12 = (void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_intent);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_intent + 24);
  uint64_t v14 = v12[4];
  sub_7468(v12, v13);
  unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 32);
  swift_retain();
  if ((v15(v13, v14) & 1) == 0)
  {
    sub_325FC();
    uint64_t v16 = sub_32570();
    if ((v17(v16) & 1) == 0) {
      goto LABEL_7;
    }
  }
  sub_325FC();
  uint64_t v18 = sub_32570();
  uint64_t v20 = v19(v18);
  *(unsigned char *)(v0 + 155) = v20;
  if (v20 == 5) {
    goto LABEL_7;
  }
  uint64_t v21 = v20;
  if (qword_E6C28 != -1) {
    swift_once();
  }
  char v22 = sub_ABDEC(v21, qword_F4FC8);
  *(unsigned char *)(v0 + 156) = v22;
  if (v22 != 8)
  {
    char v37 = v22;
    uint64_t v38 = *(void *)(v0 + 48);
    sub_7468(v12, v12[3]);
    uint64_t v39 = sub_3265C();
    *(unsigned char *)(v0 + 157) = v40(v39) & 1;
    *(void *)(v0 + 72) = *(void *)(v38 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_knowledgeStore);
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v41;
    void *v41 = v0;
    v41[1] = sub_312A0;
    return sub_F26C(v37);
  }
  else
  {
LABEL_7:
    sub_B34C0(48);
    swift_bridgeObjectRelease();
    sub_325FC();
    uint64_t v23 = sub_32570();
    *(unsigned char *)(v0 + 152) = v24(v23);
    sub_7424(&qword_E8F90);
    v43._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v43);
    swift_bridgeObjectRelease();
    v44._countAndFlagsBits = 8236;
    v44._object = (void *)0xE200000000000000;
    sub_B3020(v44);
    uint64_t v25 = v12[3];
    uint64_t v26 = v12[4];
    sub_7468(v12, v25);
    *(unsigned char *)(v0 + 153) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 72))(v25, v26);
    sub_7424(&qword_EA5C0);
    v45._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v45);
    swift_bridgeObjectRelease();
    v46._countAndFlagsBits = 46;
    v46._object = (void *)0xE100000000000000;
    sub_B3020(v46);
    swift_bridgeObjectRetain();
    v47._countAndFlagsBits = 0x203A6570797420;
    v47._object = (void *)0xE700000000000000;
    sub_B3020(v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_3254C();
    sub_8C308(v27, v28, v29, v30, v31, v32);
    swift_bridgeObjectRelease();
    sub_7468(v9, v9[3]);
    sub_B34C0(46);
    swift_bridgeObjectRelease();
    uint64_t v33 = v12[3];
    uint64_t v34 = v12[4];
    sub_7468(v12, v33);
    *(unsigned char *)(v0 + 154) = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v33, v34);
    v48._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_A1178(131, 6, 0xD00000000000002CLL, 0x80000000000B68E0);
    sub_A1D18();
    swift_bridgeObjectRelease();
    swift_release();
    int64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v35;
    *int64_t v35 = v0;
    v35[1] = sub_317D4;
    return sub_3D948();
  }
}

uint64_t sub_312A0()
{
  sub_7FDC();
  sub_7FC4();
  sub_1FC14();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 88) = v3;
  *(void *)(v1 + 96) = v4;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_3136C()
{
  sub_7FDC();
  *(unsigned char *)(v0 + 158) = sub_7A28(*(void *)(v0 + 88), *(void *)(v0 + 96));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_31410;
  char v2 = *(unsigned char *)(v0 + 157);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 156);
  return sub_7AF8(v3, v2);
}

uint64_t sub_31410()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_314D8()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 48) + *(void *)(v0 + 56));
  char v2 = *(unsigned char *)(v0 + 155);
  sub_7468(v1, v1[3]);
  sub_32620(131);
  sub_A1D18();
  swift_release();
  uint64_t v3 = sub_2218C(v2);
  uint64_t v5 = v4;
  *(void *)(v0 + 112) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v6;
  void *v6 = v0;
  v6[1] = sub_315DC;
  char v7 = *(unsigned char *)(v0 + 157);
  uint64_t v8 = *(void *)(v0 + 64);
  char v9 = *(unsigned char *)(v0 + 158);
  return sub_31AE0(v7, v3, v5, v8, v9);
}

uint64_t sub_315DC()
{
  sub_7FDC();
  sub_7FC4();
  sub_1FC14();
  *char v2 = v1;
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  *(void *)(v6 + 128) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_316C0()
{
  char v1 = *(unsigned char *)(v0 + 157);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_7468((void *)(v2 + *(void *)(v0 + 56)), *(void *)(v2 + *(void *)(v0 + 56) + 24));
  sub_3263C();
  sub_32620(132);
  sub_A1D18();
  swift_release();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  swift_retain();
  sub_B1F80();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_317D4()
{
  sub_7FDC();
  sub_7FC4();
  sub_1FC14();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 144) = v3;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_318A0()
{
  sub_7468((void *)(v0[6] + v0[7]), *(void *)(v0[6] + v0[7] + 24));
  sub_3263C();
  sub_ABC4();
  sub_A1178(132, 6, 0xD00000000000001DLL, v1);
  sub_A1D18();
  swift_release();
  swift_retain();
  sub_B1F80();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_319A8(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender);
  sub_7468((void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender), *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender + 24));
  sub_A1178(132, 6, 0xD00000000000001DLL, 0x80000000000B6910);
  sub_A1D18();
  swift_release();
  sub_7468(v1, v1[3]);
  return sub_A2098();
}

uint64_t sub_31A48(uint64_t a1, char a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender);
  sub_7468((void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender), *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender + 24));
  sub_A1178(132, 6, 0, 0);
  sub_A1D18();
  swift_release();
  sub_7468(v3, v3[3]);
  return sub_A2110(a2);
}

uint64_t sub_31AE0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v6 + 73) = a5;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  *(unsigned char *)(v6 + 72) = a1;
  return sub_FCA0((uint64_t)sub_31B04);
}

uint64_t sub_31B04()
{
  if (*(unsigned char *)(v0 + 73) && *(unsigned char *)(v0 + 73) == 1)
  {
    char v1 = *(unsigned char *)(v0 + 72);
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_10;
    }
  }
  else
  {
    char v2 = *(unsigned char *)(v0 + 72);
    char v3 = sub_B37E0();
    swift_bridgeObjectRelease();
    if (v3 & 1) == 0 || (v2)
    {
LABEL_10:
      char v10 = *(unsigned char *)(v0 + 72);
      if (sub_7E78(*(unsigned char *)(v0 + 73)) & 1) == 0 || (v10)
      {
        sub_3264C();
        sub_B34C0(17);
        swift_bridgeObjectRelease();
        sub_32670();
        sub_325D4();
        sub_ABC4();
        sub_325AC(v15, v16, v17, (uint64_t)"showPostActionDialog(_:_:_:_:)");
        swift_bridgeObjectRelease();
        uint64_t v18 = (void *)swift_task_alloc();
        *(void *)(v0 + 64) = v18;
        *uint64_t v18 = v0;
        v18[1] = sub_31FF8;
        sub_32584();
        return sub_3D188();
      }
      else
      {
        sub_3264C();
        sub_B34C0(19);
        swift_bridgeObjectRelease();
        sub_32670();
        sub_325D4();
        sub_ABC4();
        sub_325AC(v11, v12, v13, (uint64_t)"showPostActionDialog(_:_:_:_:)");
        swift_bridgeObjectRelease();
        uint64_t v14 = (void *)swift_task_alloc();
        *(void *)(v0 + 56) = v14;
        *uint64_t v14 = v0;
        v14[1] = sub_31F34;
        sub_32584();
        return sub_3D318();
      }
    }
  }
  unint64_t v4 = *(void *)(v0 + 24);
  sub_3264C();
  sub_B34C0(23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD000000000000015;
  v20._object = (void *)0x80000000000B68A0;
  sub_B3020(v20);
  sub_ABC4();
  sub_8C320(v5, v4, v6, v7, 0xD00000000000001ELL, 0x80000000000B6880);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_31E70;
  sub_32584();
  return sub_3D4A8();
}

uint64_t sub_31E70()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = sub_32598();
  return v4(v3);
}

uint64_t sub_31F34()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = sub_32598();
  return v4(v3);
}

uint64_t sub_31FF8()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = sub_32598();
  return v4(v3);
}

uint64_t sub_320BC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_intent);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_aceService);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_deviceState);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender);
  return v0;
}

uint64_t sub_32190()
{
  sub_320BC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_321E8()
{
  return type metadata accessor for AddRemoveFlow();
}

uint64_t type metadata accessor for AddRemoveFlow()
{
  uint64_t result = qword_E8E90;
  if (!qword_E8E90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_32238()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_322F0()
{
  return sub_30CE0();
}

uint64_t sub_32314(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_323B0;
  return sub_30D40(a1);
}

uint64_t sub_323B0()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_32474(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AddRemoveFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_324B0()
{
  return sub_319A8(v0);
}

uint64_t sub_324B8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_324F0()
{
  return sub_31A48(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_324FC()
{
  unint64_t result = qword_E8F98;
  if (!qword_E8F98)
  {
    type metadata accessor for AddRemoveFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E8F98);
  }
  return result;
}

uint64_t sub_32570()
{
  return v0;
}

uint64_t sub_32584()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_32598()
{
  return v0;
}

void sub_325AC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_8C320(a1, v4, a2, a3, 0xD00000000000001ELL, (a4 - 32) | 0x8000000000000000);
}

void sub_325D4()
{
  v1._countAndFlagsBits = 0x2E6E69616D6F6420;
  v1._object = (void *)0xE800000000000000;
  sub_B3020(v1);
}

void *sub_325FC()
{
  return sub_7468(v0, v0[3]);
}

uint64_t sub_32620(uint64_t a1)
{
  return sub_A1178(a1, 6, 0, 0);
}

uint64_t sub_3265C()
{
  return v0;
}

void sub_32670()
{
  v3._countAndFlagsBits = v1;
  v3._object = v0;
  sub_B3020(v3);
}

uint64_t type metadata accessor for DailyBriefingCommonCATsSimple()
{
  uint64_t result = qword_E8FA0;
  if (!qword_E8FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_326D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_32718(uint64_t a1, uint64_t a2)
{
  return sub_3276C(a1, a2);
}

uint64_t sub_3276C(uint64_t a1, uint64_t a2)
{
  sub_B2CB0();
  sub_32A74();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_7A0C();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_7424(&qword_E8B80);
  __chkstk_darwin(v11 - 8);
  sub_7A0C();
  sub_329AC(a1, v13 - v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v2);
  uint64_t v14 = sub_B2C50();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  sub_32A14(a1);
  return v14;
}

uint64_t sub_32898(uint64_t a1, uint64_t a2)
{
  sub_B2CB0();
  sub_32A74();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v9 = v8 - v7;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v2);
  uint64_t v10 = sub_B2C60();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v2);
  return v10;
}

uint64_t sub_32974()
{
  uint64_t v0 = sub_B2C70();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_329A4()
{
  return type metadata accessor for DailyBriefingCommonCATsSimple();
}

uint64_t sub_329AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E8B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_32A14(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E8B80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DailyBriefingCommonCATs()
{
  uint64_t result = qword_E8FF0;
  if (!qword_E8FF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_32ADC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_32B1C(uint64_t a1)
{
  uint64_t v5 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
  Swift::String v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_32BEC;
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v5)(a1, 0xD000000000000025, 0x80000000000B69B0, _swiftEmptyArrayStorage);
}

uint64_t sub_32BEC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_32CE0(uint64_t a1, uint64_t a2)
{
  return sub_32D34(a1, a2);
}

uint64_t sub_32D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2CB0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_7424(&qword_E8B80);
  __chkstk_darwin(v8 - 8);
  sub_329AC(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_B2BD0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_32A14(a1);
  return v10;
}

uint64_t sub_32E9C()
{
  uint64_t v0 = sub_B2BF0();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_32ECC()
{
  return type metadata accessor for DailyBriefingCommonCATs();
}

uint64_t sub_32ED4()
{
  sub_7FDC();
  *(unsigned char *)(v1 + 96) = v2;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v0;
  *(void *)(v1 + 32) = type metadata accessor for DBCalendarState();
  *(void *)(v1 + 40) = swift_task_alloc();
  uint64_t v4 = sub_B2D30();
  *(void *)(v1 + 48) = v4;
  sub_FC60(v4);
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 64) = swift_task_alloc();
  sub_B2F90();
  *(void *)(v1 + 72) = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_32FC8()
{
  sub_B1490();
  swift_allocObject();
  sub_B1480();
  sub_34C98();
  uint64_t v3 = sub_B1470();
  unint64_t v5 = v4;
  swift_release();
  sub_B2F80();
  sub_B2F70();
  uint64_t v7 = v6;
  *(void *)(v0 + 80) = v6;
  sub_34C40(v3, v5);
  if (v7)
  {
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_33280;
    return sub_E7C8();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_ABD0();
    return v1();
  }
}

uint64_t sub_33280()
{
  sub_34FFC();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_333C0(uint64_t a1, char a2, char a3, double a4)
{
  *(void *)(v5 + 64) = v4;
  *(unsigned char *)(v5 + 33) = a3;
  uint64_t v9 = sub_B2D30();
  *(void *)(v5 + 72) = v9;
  *(void *)(v5 + 80) = *(void *)(v9 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  sub_B2F90();
  *(void *)(v5 + 96) = swift_task_alloc();
  *(double *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a1;
  *(unsigned char *)(v5 + 32) = a2 & 1;
  return _swift_task_switch(sub_334D4, 0, 0);
}

uint64_t sub_334D4()
{
  sub_B1490();
  swift_allocObject();
  sub_B1480();
  sub_34BF4();
  uint64_t v3 = sub_B1470();
  unint64_t v5 = v4;
  swift_release();
  sub_B2F80();
  sub_B2F70();
  uint64_t v7 = v6;
  *(void *)(v0 + 104) = v6;
  sub_34C40(v3, v5);
  if (v7)
  {
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_33780;
    return sub_E7C8();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_ABD0();
    return v1();
  }
}

uint64_t sub_33780()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_33864()
{
  sub_7FDC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v0();
}

uint64_t sub_338C4()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_F5030);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_F5030);
  if (qword_E6D90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F5408);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_3398C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a3;
  *(unsigned char *)(v3 + 130) = a1;
  uint64_t v5 = sub_B2D30();
  *(void *)(v3 + 56) = v5;
  sub_FC60(v5);
  *(void *)(v3 + 64) = v6;
  *(void *)(v3 + 72) = sub_350B8();
  *(void *)(v3 + 80) = swift_task_alloc();
  uint64_t v7 = sub_B17F0();
  *(void *)(v3 + 88) = v7;
  sub_FC60(v7);
  *(void *)(v3 + 96) = v8;
  *(void *)(v3 + 104) = sub_350B8();
  *(void *)(v3 + 112) = swift_task_alloc();
  uint64_t v9 = (void *)sub_35128();
  *(void *)(v3 + 120) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_33AB0;
  return v11(a1);
}

uint64_t sub_33AB0()
{
  sub_7FDC();
  sub_7FC4();
  sub_35070(v1, v2, v3);
  uint64_t v4 = *v0;
  sub_AB94();
  *uint64_t v5 = v4;
  *(_WORD *)(v7 + 128) = v6;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_33B78()
{
  __int16 v1 = *(_WORD *)(v0 + 128);
  if ((v1 & 0x100) != 0)
  {
    if (qword_E6C30 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)(v0 + 80);
    uint64_t v19 = *(void *)(v0 + 56);
    uint64_t v20 = *(void *)(v0 + 64);
    char v21 = *(unsigned char *)(v0 + 130);
    uint64_t v22 = sub_B378(v19, (uint64_t)qword_F5030);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v22, v19);
    sub_1DDDC();
    sub_B34C0(33);
    sub_CE84(v21);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 0xD00000000000001FLL;
    sub_35054(v25, (uint64_t)" not found, mention the warning");
    sub_ABC4();
    sub_8C320(v26, v24, 0xD00000000000002CLL, v27, v28, 0x80000000000B6A30);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  sub_B1790();
  sub_B1730();
  char v5 = sub_57E58();
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v61(v2, v3);
  if (v5)
  {
    if (qword_E6C30 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    char v9 = *(unsigned char *)(v0 + 130);
    sub_B378(v7, (uint64_t)qword_F5030);
    uint64_t v10 = sub_3503C();
    v11(v10);
    sub_1DDDC();
    sub_B34C0(58);
    sub_CE84(v9);
    sub_B3020(v63);
    swift_bridgeObjectRelease();
    v12._countAndFlagsBits = 0xD000000000000038;
    sub_35054(v12, (uint64_t)" was mentioned less than 8 mins ago, repeat the warning.");
    sub_ABC4();
    sub_35014(v13, v14, v15, (uint64_t)"isWarningAvailable(forKey:knowledgeStore:now:)");
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    uint64_t v16 = sub_35088();
    v17(v16);
LABEL_9:
    char v29 = 1;
    goto LABEL_10;
  }
  if (v1)
  {
    if (qword_E6C30 != -1) {
      swift_once();
    }
    uint64_t v59 = *(void *)(v0 + 112);
    uint64_t v60 = *(void *)(v0 + 88);
    uint64_t v44 = *(void *)(v0 + 64);
    uint64_t v45 = *(void *)(v0 + 72);
    uint64_t v46 = *(void *)(v0 + 56);
    char v47 = *(unsigned char *)(v0 + 130);
    sub_B378(v46, (uint64_t)qword_F5030);
    uint64_t v48 = sub_3503C();
    v49(v48);
    sub_1DDDC();
    sub_B34C0(43);
    swift_bridgeObjectRelease();
    sub_CE84(v47);
    sub_B3020(v64);
    swift_bridgeObjectRelease();
    v50._countAndFlagsBits = 0xD000000000000025;
    sub_35054(v50, (uint64_t)" been mentioned in the last 24 hours:");
    char v51 = sub_57770();
    BOOL v52 = (v51 & 1) == 0;
    if (v51) {
      v53._countAndFlagsBits = 1702195828;
    }
    else {
      v53._countAndFlagsBits = 0x65736C6166;
    }
    if (v52) {
      uint64_t v54 = (void *)0xE500000000000000;
    }
    else {
      uint64_t v54 = (void *)0xE400000000000000;
    }
    v53._object = v54;
    sub_B3020(v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v65._countAndFlagsBits = 32;
    v65._object = (void *)0xE100000000000000;
    sub_B3020(v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_35014(v55, v56, v57, (uint64_t)"isWarningAvailable(forKey:knowledgeStore:now:)");
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
    char v58 = sub_57770();
    v61(v59, v60);
    char v29 = v58 ^ 1;
  }
  else
  {
    if (qword_E6C30 != -1) {
      swift_once();
    }
    uint64_t v32 = *(void *)(v0 + 80);
    uint64_t v33 = *(void *)(v0 + 56);
    uint64_t v34 = *(void *)(v0 + 64);
    char v35 = *(unsigned char *)(v0 + 130);
    sub_B378(v33, (uint64_t)qword_F5030);
    uint64_t v36 = sub_3503C();
    v37(v36);
    sub_1DDDC();
    sub_B34C0(50);
    sub_CE84(v35);
    swift_bridgeObjectRelease();
    v38._countAndFlagsBits = 0xD000000000000030;
    sub_35054(v38, (uint64_t)" has already been mentioned twice, skip warning.");
    sub_ABC4();
    sub_35014(v39, v40, v41, (uint64_t)"isWarningAvailable(forKey:knowledgeStore:now:)");
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    uint64_t v42 = sub_35088();
    v43(v42);
    char v29 = 0;
  }
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30(v29 & 1);
}

uint64_t sub_3411C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 56) = a3;
  *(unsigned char *)(v3 + 122) = a1;
  uint64_t v5 = sub_B17F0();
  *(void *)(v3 + 64) = v5;
  sub_FC60(v5);
  *(void *)(v3 + 72) = v6;
  *(void *)(v3 + 80) = sub_350B8();
  *(void *)(v3 + 88) = swift_task_alloc();
  uint64_t v7 = (void *)sub_35128();
  *(void *)(v3 + 96) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_34204;
  return v9(a1);
}

uint64_t sub_34204()
{
  sub_7FDC();
  sub_7FC4();
  sub_35070(v1, v2, v3);
  uint64_t v4 = *v0;
  sub_AB94();
  *uint64_t v5 = v4;
  *(_WORD *)(v7 + 120) = v6;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_342CC()
{
  if ((*(_WORD *)(v0 + 120) & 0x100) != 0)
  {
    uint64_t v10 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 64);
    sub_B17E0();
    sub_B17A0();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    uint64_t v12 = (void *)sub_35108();
    *(void *)(v0 + 112) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_345F8;
    v13.n128_f64[0] = sub_35168();
    uint64_t v14 = 0;
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v1 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    sub_B1790();
    sub_B1730();
    char v5 = sub_57E58();
    __int16 v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v6(v2, v3);
    v6(v1, v3);
    if (v5)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      sub_ABD0();
      return v7();
    }
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 64);
    sub_B17E0();
    sub_B17A0();
    uint64_t v19 = v18;
    v6(v16, v17);
    uint64_t v20 = (void *)sub_35108();
    *(void *)(v0 + 104) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_344FC;
    v13.n128_f64[0] = sub_35168();
    uint64_t v14 = v19;
    uint64_t v15 = 0;
  }
  return v21(v14, v15, v13);
}

uint64_t sub_344FC()
{
  sub_7FDC();
  sub_34FFC();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_345F8()
{
  sub_7FDC();
  sub_34FFC();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_346F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x63634F7473726966 && a2 == 0xEF65636E65727275;
  if (v2 || (sub_B37E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000000B6BA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_B37E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_34808(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x63634F7473726966;
  }
}

uint64_t sub_34850(void *a1)
{
  uint64_t v4 = sub_7424(&qword_E9088);
  sub_7870();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_C914();
  sub_7468(a1, a1[3]);
  sub_34DBC();
  sub_B3900();
  sub_B3770();
  if (!v1) {
    sub_B3720();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_34994(void *a1)
{
  sub_7424(&qword_E9078);
  sub_7870();
  __chkstk_darwin(v3);
  sub_C914();
  uint64_t v4 = (uint64_t)sub_7468(a1, a1[3]);
  sub_34DBC();
  sub_B38F0();
  if (!v1)
  {
    sub_B36F0();
    uint64_t v4 = sub_B36A0();
    uint64_t v6 = sub_350D4();
    v7(v6);
  }
  sub_74F8((uint64_t)a1);
  return v4;
}

uint64_t sub_34AF0()
{
  return sub_34808(*v0);
}

uint64_t sub_34AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_346F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_34B20(uint64_t a1)
{
  unint64_t v2 = sub_34DBC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_34B5C(uint64_t a1)
{
  unint64_t v2 = sub_34DBC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_34B98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_34994(a1);
  if (!v2)
  {
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = result;
    *(unsigned char *)(a2 + 16) = v5 & 1;
  }
  return result;
}

uint64_t sub_34BD0(void *a1)
{
  return sub_34850(a1);
}

unint64_t sub_34BF4()
{
  unint64_t result = qword_E9060;
  if (!qword_E9060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9060);
  }
  return result;
}

uint64_t sub_34C40(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_34C98()
{
  unint64_t result = qword_E9070;
  if (!qword_E9070)
  {
    type metadata accessor for DBCalendarState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9070);
  }
  return result;
}

uint64_t sub_34CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DBCalendarState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

__n128 initializeBufferWithCopyOfBuffer for RequestOriginInfo(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WarningHistory(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WarningHistory(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WarningHistory()
{
  return &type metadata for WarningHistory;
}

unint64_t sub_34DBC()
{
  unint64_t result = qword_E9080;
  if (!qword_E9080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9080);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WarningHistory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x34ED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WarningHistory.CodingKeys()
{
  return &type metadata for WarningHistory.CodingKeys;
}

unint64_t sub_34F10()
{
  unint64_t result = qword_E9090;
  if (!qword_E9090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9090);
  }
  return result;
}

unint64_t sub_34F60()
{
  unint64_t result = qword_E9098;
  if (!qword_E9098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9098);
  }
  return result;
}

unint64_t sub_34FB0()
{
  unint64_t result = qword_E90A0;
  if (!qword_E90A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E90A0);
  }
  return result;
}

void sub_35014(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_8C320(a1, v4, 0xD00000000000002CLL, a2, a3, (a4 - 32) | 0x8000000000000000);
}

uint64_t sub_3503C()
{
  return v0;
}

void sub_35054(Swift::String a1@<X1:X0>, uint64_t a2@<X8>)
{
  a1._object = (void *)((a2 - 32) | 0x8000000000000000);
  sub_B3020(a1);
}

uint64_t sub_35070(uint64_t result, uint64_t a2, __int16 a3)
{
  *(_WORD *)(v3 + 40) = a3;
  *(void *)(v3 + 24) = result;
  *(void *)(v3 + 32) = a2;
  *(void *)(v3 + 16) = v4;
  return result;
}

uint64_t sub_35088()
{
  return v0;
}

uint64_t sub_350A0()
{
  return v0;
}

uint64_t sub_350B8()
{
  return swift_task_alloc();
}

uint64_t sub_350D4()
{
  return v0;
}

void sub_350E8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_8C2F0(a1, v5, a2, a3, a4, (a5 - 32) | 0x8000000000000000);
}

uint64_t sub_35108()
{
  return swift_task_alloc();
}

uint64_t sub_35128()
{
  return swift_task_alloc();
}

void sub_35148()
{
  sub_B34C0(30);
}

double sub_35168()
{
  return v0;
}

id sub_3517C()
{
  return sub_351F4();
}

id sub_351F4()
{
  NSString v0 = sub_B2F20();
  swift_bridgeObjectRelease();
  NSString v1 = sub_B2F20();
  swift_bridgeObjectRelease();
  id v2 = [(id)swift_getObjCClassFromMetadata() bagForProfile:v0 profileVersion:v1];

  return v2;
}

void *sub_35288()
{
  type metadata accessor for AMSSearchService();
  swift_allocObject();
  unint64_t result = sub_352C4();
  qword_F5048 = (uint64_t)result;
  return result;
}

void *sub_352C4()
{
  unint64_t result = v0;
  v0[2] = 0xD000000000000011;
  v0[3] = 0x80000000000B5180;
  v0[4] = 0xD000000000000012;
  v0[5] = 0x80000000000B6C50;
  v0[6] = 0x7374736163646F50;
  v0[7] = 0xE800000000000000;
  v0[8] = 49;
  v0[9] = 0xE100000000000000;
  v0[11] = 0;
  v0[12] = 0;
  v0[10] = 0;
  return result;
}

uint64_t sub_3532C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_B2D30();
  sub_7870();
  uint64_t v50 = v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_B2D00();
  sub_7870();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v15 = v2[11];
  if (!v15) {
    goto LABEL_8;
  }
  uint64_t v16 = v2[12];
  if (v2[10] == a1 && v15 == a2)
  {
    swift_bridgeObjectRetain();
    return v16;
  }
  char v18 = sub_B37E0();
  swift_bridgeObjectRetain();
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v44 = v10;
    uint64_t v46 = v6;
    uint64_t v51 = a1;
    uint64_t v48 = v13;
    uint64_t v49 = v11;
    id v19 = sub_3517C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v20 = sub_35E24(v19);
    if (qword_E6D50 != -1) {
      swift_once();
    }
    id v21 = (id)qword_F5358;
    sub_B2CE0();
    sub_B3300();
    sub_35EEC();
    sub_B2CD0();
    sub_7424(&qword_E7F38);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_BEC70;
    *(void *)(v22 + 32) = v51;
    *(void *)(v22 + 40) = a2;
    swift_bridgeObjectRetain();
    id v47 = v20;
    id v23 = sub_35D88((uint64_t)_swiftEmptyArrayStorage, v22, v20);
    id v52 = 0;
    id v45 = v23;
    id v24 = [v23 resultWithError:&v52];
    if (v24)
    {
      Swift::String v25 = v24;
      id v26 = v52;
      sub_B32F0();
      sub_35F04();
      sub_35EEC();
      sub_B2CC0();
      if (qword_E6D70 != -1) {
        swift_once();
      }
      sub_B378(v46, (uint64_t)qword_F53A8);
      sub_8C320(0xD000000000000020, 0x80000000000B6CE0, 0xD00000000000002ELL, 0x80000000000B6C90, 0xD000000000000013, 0x80000000000B6CC0);
      id v27 = [v25 allItems];
      sub_3085C(0, &qword_E9198);
      uint64_t v28 = sub_B30A0();

      uint64_t v29 = v3[10];
      uint64_t v30 = v3[11];
      v3[10] = v51;
      v3[11] = a2;
      v3[12] = v28;
      swift_bridgeObjectRetain();
      sub_35D44(v29, v30);
      id v31 = [v25 allItems];
      uint64_t v16 = sub_B30A0();

      uint64_t v32 = sub_35ED4();
      v33(v32);
    }
    else
    {
      id v34 = v52;
      sub_B1690();

      swift_willThrow();
      if (qword_E6DF8 != -1) {
        swift_once();
      }
      sub_84ED0(0, qword_F5598, unk_F55A0, byte_F55A8, (void *)qword_F55B0);
      uint64_t v35 = v46;
      if (qword_E6D70 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_B378(v35, (uint64_t)qword_F53A8);
      uint64_t v37 = v50;
      Swift::String v38 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v44, v36, v35);
      id v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      sub_B34C0(33);
      swift_bridgeObjectRelease();
      id v52 = (id)0xD00000000000001FLL;
      unint64_t v53 = 0x80000000000B6C70;
      swift_getErrorValue();
      v54._countAndFlagsBits = sub_B3860();
      sub_B3020(v54);
      swift_bridgeObjectRelease();
      sub_8C2F0((uint64_t)v52, v53, 0xD00000000000002ELL, 0x80000000000B6C90, 0xD000000000000013, 0x80000000000B6CC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v35);
      sub_B32F0();
      sub_35F04();
      sub_B2CC0();

      swift_errorRelease();
      uint64_t v39 = sub_35ED4();
      v40(v39);
      uint64_t v41 = v3[10];
      uint64_t v42 = v3[11];
      v3[10] = v51;
      v3[11] = a2;
      v3[12] = 0;
      swift_bridgeObjectRetain();
      sub_35D44(v41, v42);
      return 0;
    }
  }
  return v16;
}

uint64_t sub_3599C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  v0[11] = 0;
  v0[12] = 0;
  v0[10] = 0;
  return sub_35D44(v1, v2);
}

uint64_t sub_359B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_35D44(*(void *)(v0 + 80), *(void *)(v0 + 88));
  return v0;
}

uint64_t sub_359F4()
{
  sub_359B0();

  return _swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for AMSSearchService()
{
  return self;
}

unint64_t destroy for AMSSearchService.AMSSearchResult(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23DailyBriefingFlowPlugin16AMSSearchServiceC15AMSSearchResultOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for AMSSearchService.AMSSearchResult(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AMSSearchService.AMSSearchResult(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AMSSearchService.AMSSearchResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AMSSearchService.AMSSearchResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_35D10(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSSearchService.AMSSearchResult()
{
  return &type metadata for AMSSearchService.AMSSearchResult;
}

uint64_t sub_35D44(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_35D88(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa = sub_B3090().super.isa;
  swift_bridgeObjectRelease();
  Class v5 = sub_B3090().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [a3 performLookupWithBundleIdentifiers:isa itemIdentifiers:v5];

  return v6;
}

id sub_35E24(void *a1)
{
  id v2 = objc_allocWithZone((Class)AMSLookup);
  NSString v3 = sub_B2F20();
  swift_bridgeObjectRelease();
  NSString v4 = sub_B2F20();
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithBag:a1 caller:v3 keyProfile:v4];

  return v5;
}

uint64_t sub_35ED4()
{
  return v0;
}

uint64_t sub_35F18()
{
  return sub_B1C80();
}

uint64_t sub_35FA8(uint64_t a1)
{
  *(void *)(v2 + 368) = a1;
  *(void *)(v2 + 376) = v1;
  return sub_FCA0((uint64_t)sub_35FC0);
}

uint64_t sub_35FC0()
{
  uint64_t v1 = v0[47];
  sub_B34C0(33);
  swift_bridgeObjectRelease();
  uint64_t v2 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_state;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_state)) {
    v3._countAndFlagsBits = 0x6574656C706D6F63;
  }
  else {
    v3._countAndFlagsBits = 0x6572676F72506E69;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_state)) {
    NSString v4 = (void *)0xE900000000000064;
  }
  else {
    NSString v4 = (void *)0xEA00000000007373;
  }
  v3._object = v4;
  sub_B3020(v3);
  swift_bridgeObjectRelease();
  sub_38174(0xD00000000000001FLL, 0x80000000000B5E10);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + v2))
  {
    uint64_t v5 = v0[47];
    sub_38174(0xD00000000000001ALL, 0x80000000000B7000);
    id v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_specExecutionStatus);
    swift_beginAccess();
    uint64_t v7 = *v6;
    sub_1F7B4(v5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_flowParams, (uint64_t)(v0 + 2));
    type metadata accessor for DBSiriKitEventSender();
    swift_bridgeObjectRetain();
    uint64_t inited = swift_initStaticObject();
    type metadata accessor for ConclusionFlow();
    uint64_t v9 = swift_allocObject();
    v0[45] = sub_37EC0(v7, v0 + 2, inited, v9);
    sub_38044(&qword_E8510, (void (*)(uint64_t))type metadata accessor for ConclusionFlow);
    sub_B1F90();
    swift_release();
    sub_ABD0();
    return v10();
  }
  else
  {
    uint64_t v12 = v0[47];
    sub_7468((void *)(v12 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender), *(void *)(v12 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender + 24));
    uint64_t v13 = sub_38230((void *)(v12 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name));
    sub_381AC((uint64_t)v13, 0x11u);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[48] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_362C4;
    uint64_t v15 = v0[46];
    return sub_36384(v15);
  }
}

uint64_t sub_362C4()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

uint64_t sub_36384(uint64_t a1)
{
  *(void *)(v2 + 392) = a1;
  *(void *)(v2 + 400) = v1;
  return sub_FCA0((uint64_t)sub_3639C);
}

uint64_t sub_3639C()
{
  sub_7FDC();
  *(void *)(v0 + 408) = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_flowParams;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_36440;
  return sub_F26C(1);
}

uint64_t sub_36440()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 424) = v3;
  *(void *)(v1 + 432) = v4;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_36510()
{
  uint64_t v1 = v0[50] + v0[51];
  char v2 = sub_7A28(v0[53], v0[54]);
  char v3 = sub_7E78(v2);
  sub_7468((void *)(v1 + 280), *(void *)(v1 + 304));
  if (sub_8EAE8() & 1) != 0 && (v3)
  {
    sub_381D0();
    sub_380F8(v4 - 9, (uint64_t)"Adding news to unavailable specs");
    swift_beginAccess();
    sub_37B88(2, 4);
    swift_endAccess();
  }
  uint64_t v5 = (uint64_t *)(v0[50] + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_specExecutionStatus);
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_37D54(v6)[2];
  swift_release();
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_7468((void *)(v1 + 280), *(void *)(v1 + 304));
    if ((sub_8EAE8() & 1) != 0
      && (uint64_t v8 = swift_bridgeObjectRetain(), sub_24F28(v8), v10 = v9, swift_bridgeObjectRelease(), (v10 & 1) != 0))
    {
      uint64_t v11 = v0[50];
      uint64_t v12 = v11 + v0[51];
      sub_381D0();
      sub_3808C(v13 + 9, (uint64_t)"None of the enabled domains are available offline.");
      sub_7468((void *)(v11 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender), *(void *)(v11 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender + 24));
      uint64_t v14 = sub_38230((void *)(v11 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name));
      sub_381AC((uint64_t)v14, 1u);
      sub_7468((void *)(v12 + 160), *(void *)(v12 + 184));
      v0[55] = sub_67E90();
      uint64_t v15 = (void *)swift_task_alloc();
      v0[56] = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_36ACC;
    }
    else
    {
      uint64_t v16 = v0[50] + v0[51];
      uint64_t v17 = swift_bridgeObjectRetain();
      sub_25044(v17);
      char v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v20 = v0[50];
      sub_381D0();
      if (v19)
      {
        sub_3808C(v21 - 4, (uint64_t)"All flow specs failed or unavailable.");
        uint64_t v22 = *sub_7468((void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender), *(void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender + 24));
        uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name + 24);
        uint64_t v24 = *(void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name + 32);
        Swift::String v25 = sub_7468((void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name), v23);
        sub_A2360((uint64_t)v25, 1u, 0, 0, v22, v23, v24);
        sub_7468((void *)(v16 + 160), *(void *)(v16 + 184));
        v0[58] = sub_67E90();
        id v26 = (void *)swift_task_alloc();
        v0[59] = v26;
        *id v26 = v0;
        v26[1] = sub_36C1C;
      }
      else
      {
        sub_3808C(v21 - 8, (uint64_t)"Returning detailed offline dialog");
        uint64_t v41 = sub_7468((void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender), *(void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender + 24));
        uint64_t v42 = (void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name);
        uint64_t v43 = *v41;
        uint64_t v44 = *(void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name + 24);
        uint64_t v45 = *(void *)(v20 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name + 32);
        uint64_t v46 = sub_7468(v42, v44);
        sub_A2360((uint64_t)v46, 1u, 0, 0, v43, v44, v45);
        sub_7468((void *)(v16 + 160), *(void *)(v16 + 184));
        v0[61] = sub_67E90();
        swift_bridgeObjectRetain();
        v0[62] = sub_25164();
        swift_bridgeObjectRelease();
        id v47 = (void *)swift_task_alloc();
        v0[63] = v47;
        *id v47 = v0;
        v47[1] = sub_36D6C;
      }
    }
    return sub_3DA6C();
  }
  else
  {
    uint64_t v27 = v0[50];
    uint64_t v28 = v27 + v0[51];
    sub_381D0();
    sub_380F8(v29 + 12, (uint64_t)"No unavailable or failed specs. Returning conclusion.");
    uint64_t v30 = sub_7468((void *)(v27 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender), *(void *)(v27 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender + 24));
    id v31 = (void *)(v27 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name);
    uint64_t v32 = *v30;
    uint64_t v33 = *(void *)(v27 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name + 24);
    uint64_t v34 = v31[4];
    uint64_t v35 = sub_7468(v31, v33);
    sub_A2360((uint64_t)v35, 0x3Au, 0, 0, v32, v33, v34);
    uint64_t v36 = *v5;
    sub_1F7B4(v28, (uint64_t)(v0 + 2));
    type metadata accessor for DBSiriKitEventSender();
    swift_bridgeObjectRetain();
    uint64_t inited = swift_initStaticObject();
    type metadata accessor for ConclusionFlow();
    uint64_t v38 = swift_allocObject();
    v0[48] = sub_37EC0(v36, v0 + 2, inited, v38);
    sub_38044(&qword_E8510, (void (*)(uint64_t))type metadata accessor for ConclusionFlow);
    sub_B1F90();
    swift_release();
    sub_ABD0();
    return v39();
  }
}

uint64_t sub_36ACC()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *char v2 = v1;
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  *(void *)(v6 + 456) = v5;
  swift_task_dealloc();
  swift_release();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_36BB4()
{
  sub_7FDC();
  sub_36ED8();
  swift_release();
  sub_ABD0();
  return v0();
}

uint64_t sub_36C1C()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  *(void *)(v6 + 480) = v5;
  swift_task_dealloc();
  swift_release();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_36D04()
{
  sub_7FDC();
  sub_36ED8();
  swift_release();
  sub_ABD0();
  return v0();
}

uint64_t sub_36D6C()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  *(void *)(v6 + 512) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_36E70()
{
  sub_7FDC();
  sub_36ED8();
  swift_release();
  sub_ABD0();
  return v0();
}

uint64_t sub_36ED8()
{
  uint64_t v1 = *sub_7468((void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender), *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender + 24));
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name + 32);
  uint64_t v4 = sub_7468((void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name), v2);
  sub_A2368((uint64_t)v4, 0x11u, 0, 0, v1, v2, v3);
  swift_retain();
  sub_B1F50();

  return swift_release();
}

uint64_t sub_36F9C(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_state) = 1;
  uint64_t v2 = sub_7468((void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender), *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender + 24));
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name);
  uint64_t v4 = *v2;
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = sub_7468(v3, v5);

  return sub_A2368((uint64_t)v7, 1u, 0, 0, v4, v5, v6);
}

uint64_t sub_37030(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_DB8A8;
  v7._object = a2;
  Swift::Int v4 = sub_B3680(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_37084()
{
  return sub_8444C(*v0);
}

uint64_t sub_3708C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_37030(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_370BC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name);
  swift_bridgeObjectRelease();
  sub_1FA58(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_flowParams);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender);
  return v0;
}

uint64_t sub_37160()
{
  sub_370BC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_371B8()
{
  return type metadata accessor for OfflineFlow();
}

uint64_t type metadata accessor for OfflineFlow()
{
  uint64_t result = qword_E91E0;
  if (!qword_E91E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_37208()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OfflineFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x37398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineFlow.State()
{
  return &type metadata for OfflineFlow.State;
}

unint64_t sub_373D4()
{
  unint64_t result = qword_E92F8[0];
  if (!qword_E92F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_E92F8);
  }
  return result;
}

uint64_t sub_37420()
{
  return sub_35F18();
}

uint64_t sub_37444(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_A7BC;
  return sub_35FA8(a1);
}

uint64_t sub_374E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OfflineFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

void sub_3751C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v40 = a3;
  uint64_t v5 = sub_B2D30();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(void))(**(void **)a1 + 240);
  sub_3821C();
  v9();
  sub_7424(&qword_E76E8);
  if (swift_dynamicCast())
  {
    uint64_t v10 = v41;
    if (sub_ABE54(v41, a2) != 4) {
      return;
    }
    uint64_t v11 = (void *)sub_8E410();
    if (HIBYTE(v12) == 255)
    {
LABEL_6:
      if (sub_69B68(v10) == 1936744813 && v15 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        char v19 = v40;
      }
      else
      {
        char v17 = sub_B37E0();
        uint64_t v18 = swift_bridgeObjectRelease();
        char v19 = v40;
        if ((v17 & 1) == 0) {
          goto LABEL_20;
        }
      }
      uint64_t v18 = sub_ABE54(0, *v19);
      if (v18 == 1)
      {
        if (qword_E6D58 != -1) {
          swift_once();
        }
        sub_B378(v5, (uint64_t)qword_F5360);
        sub_8C320(0xD00000000000004BLL, 0x80000000000B6DE0, 0xD000000000000029, 0x80000000000B6D70, 0x5F28657461647075, 0xEF293A687469773ALL);
        char v28 = 1;
        goto LABEL_23;
      }
LABEL_20:
      if (qword_E6D58 != -1) {
        uint64_t v18 = swift_once();
      }
      sub_380D0(v18, (uint64_t)qword_F5360);
      sub_B34C0(51);
      sub_38250();
      v46._countAndFlagsBits = 0xD000000000000013;
      v46._object = (void *)0x80000000000B6DA0;
      sub_B3020(v46);
      LOBYTE(v41) = v10;
      sub_B35C0();
      v47._countAndFlagsBits = 0xD00000000000001ELL;
      v47._object = (void *)0x80000000000B6DC0;
      sub_B3020(v47);
      sub_3813C();
      sub_8C2F0(v29, v30, v31, v32, v33, v34);
      swift_bridgeObjectRelease();
      char v28 = 3;
LABEL_23:
      sub_37B88(v28, v10);
      return;
    }
    uint64_t v13 = v11;
    __int16 v14 = v12;
    if ((v12 & 0x100) == 0)
    {
      sub_A880(v11, v12);
      goto LABEL_6;
    }
    sub_381DC();
    sub_7424(&qword_E7F40);
    if ((sub_381FC() & 1) == 0 || (_BYTE)v41)
    {
      sub_381DC();
      if (sub_381FC())
      {
        uint64_t v38 = sub_37B88(1, v10);
        if (qword_E6D58 != -1) {
          uint64_t v38 = swift_once();
        }
        sub_380D0(v38, (uint64_t)qword_F5360);
        sub_B34C0(55);
        sub_38250();
        v36._countAndFlagsBits = 0xD000000000000034;
        uint64_t v37 = "executionResult failure, marked as skipped. Domain: ";
      }
      else
      {
        uint64_t v39 = sub_37B88(3, v10);
        if (qword_E6D58 != -1) {
          uint64_t v39 = swift_once();
        }
        sub_380D0(v39, (uint64_t)qword_F5360);
        sub_B34C0(54);
        sub_38250();
        v36._countAndFlagsBits = 0xD000000000000033;
        uint64_t v37 = "executionResult failure, marked as failed. Domain: ";
      }
    }
    else
    {
      uint64_t v35 = sub_37B88(2, v10);
      if (qword_E6D58 != -1) {
        uint64_t v35 = swift_once();
      }
      sub_380D0(v35, (uint64_t)qword_F5360);
      sub_B34C0(63);
      sub_38250();
      v36._countAndFlagsBits = 0xD00000000000003CLL;
      uint64_t v37 = "executionResult failure, unavailableInOffline mode. Domain: ";
    }
    v36._object = (void *)((unint64_t)(v37 - 32) | 0x8000000000000000);
    sub_B3020(v36);
    LOBYTE(v41) = v10;
    sub_B35C0();
    v48._countAndFlagsBits = 46;
    v48._object = (void *)0xE100000000000000;
    sub_B3020(v48);
    sub_8C2F0(v43, v44, 0xD000000000000029, 0x80000000000B6D70, 0x5F28657461647075, 0xEF293A687469773ALL);
    swift_bridgeObjectRelease();
    sub_A880(v13, v14);
  }
  else
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_B378(v5, (uint64_t)qword_F5360);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v20, v5);
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_B34C0(32);
    uint64_t v41 = v43;
    unint64_t v42 = v44;
    sub_3821C();
    v9();
    sub_B35C0();
    sub_74F8((uint64_t)&v43);
    sub_381D0();
    v45._countAndFlagsBits = v21 - 11;
    v45._object = (void *)0x80000000000B6D50;
    sub_B3020(v45);
    sub_3813C();
    sub_8C2F0(v22, v23, v24, v25, v26, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_37B88(char a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_37C08(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

unint64_t sub_37C08(char a1, uint64_t a2, char a3)
{
  unsigned int v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  uint64_t v9 = sub_AF440(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_7424(&qword_E9310);
  unint64_t result = sub_B35D0(a3 & 1, v13);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_AF440(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    unint64_t result = sub_B3840();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    *(unsigned char *)(v18[7] + v14) = a1;
  }
  else
  {
    return sub_37D10(v14, a2, a1, v18);
  }
  return result;
}

unint64_t sub_37D10(unint64_t result, char a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t *sub_37D54(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    BOOL v5 = (unint64_t *)((char *)&v9 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_A0BCC(0, v4, v5);
    uint64_t v6 = sub_254B0(v5, v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (unint64_t *)swift_slowAlloc();
    sub_A0BCC(0, v4, v7);
    uint64_t v2 = sub_254B0(v7, v4, (uint64_t)v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_37EB8()
{
  return sub_36F9C(v0);
}

uint64_t sub_37EC0(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = type metadata accessor for DBSiriKitEventSender();
  char v15 = &off_DF120;
  uint64_t v16 = sub_38044(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v13 = a3;
  uint64_t v8 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_B2D30();
  uint64_t v10 = sub_B378(v9, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a4 + v8, v10, v9);
  uint64_t v11 = a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_name;
  *(void *)(v11 + 24) = &type metadata for CommonSpecs;
  *(void *)(v11 + 32) = &off_DE228;
  *(unsigned char *)uint64_t v11 = 2;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_state) = 0;
  *(void *)(a4 + 16) = a1;
  memcpy((void *)(a4 + 24), a2, 0x140uLL);
  sub_1FAAC(&v13, (_OWORD *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin14ConclusionFlow_siriKitEventSender));
  return a4;
}

uint64_t sub_38044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_3808C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8C308(a1, (a2 - 32) | 0x8000000000000000, 0xD000000000000029, (v2 - 32) | 0x8000000000000000, 0x6C616944656B616DLL, 0xEC0000002928676FLL);
}

uint64_t sub_380D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_B378(v2, a2);
  *(void *)(v3 - 120) = 0;
  *(void *)(v3 - 112) = 0xE000000000000000;
  return result;
}

void sub_380F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8C320(a1, (a2 - 32) | 0x8000000000000000, 0xD000000000000029, (v2 - 32) | 0x8000000000000000, 0x6C616944656B616DLL, 0xEC0000002928676FLL);
}

void sub_38174(uint64_t a1, unint64_t a2)
{
  sub_8C308(a1, a2, 0xD000000000000029, v2, 0x2865747563657865, 0xE900000000000029);
}

uint64_t sub_381AC(uint64_t a1, unsigned int a2)
{
  return sub_A2360(a1, a2, 0, 0, v3, v2, v4);
}

id sub_381DC()
{
  *(void *)(v2 - 120) = v1;
  return sub_A9B0(v1, v0, 1);
}

uint64_t sub_381FC()
{
  return swift_dynamicCast();
}

void *sub_38230@<X0>(void *a1@<X8>)
{
  uint64_t v2 = a1[3];
  return sub_7468(a1, v2);
}

void sub_38250()
{
  uint64_t v1 = *(void *)(v0 - 112);
  *(void *)(v0 - 120) = *(void *)(v0 - 120);
  *(void *)(v0 - 112) = v1;
}

uint64_t sub_3825C@<X0>(uint64_t *a1@<X8>)
{
  sub_B2150();
  sub_B20B0();
  sub_5BCC();
  sub_B20A0();
  uint64_t v2 = sub_B1C50();
  sub_5BCC();
  uint64_t result = sub_B1C40();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for PatternFlowProvider;
  *a1 = result;
  return result;
}

uint64_t sub_382EC@<X0>(void *a1@<X8>)
{
  if (qword_E6E20 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_F55E8;
  swift_retain();
  sub_B1DA0();
  uint64_t v3 = type metadata accessor for DailyBriefingOutputPublisher();
  v13[3] = v3;
  v13[4] = &off_DEDD0;
  v13[0] = v2;
  uint64_t v4 = type metadata accessor for AddViewsFlowProvider();
  uint64_t v5 = (void *)swift_allocObject();
  sub_A918((uint64_t)v13, v3);
  sub_2B68C();
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v9 = (uint64_t *)(v8 - v7);
  (*(void (**)(uint64_t))(v10 + 16))(v8 - v7);
  uint64_t v11 = *v9;
  v5[5] = v3;
  v5[6] = &off_DEDD0;
  uint64_t v5[2] = v11;
  sub_B3B0(&v14, (uint64_t)(v5 + 7));
  uint64_t result = sub_74F8((uint64_t)v13);
  a1[3] = v4;
  a1[4] = &off_DE470;
  *a1 = v5;
  return result;
}

void sub_3844C()
{
  qword_F5070 = (uint64_t)&off_DB8F8;
}

uint64_t sub_38460()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_B2250();
  sub_2B68C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_7A0C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_B2960();
  sub_2B68C();
  uint64_t v64 = v10;
  __chkstk_darwin(v11);
  sub_3CE90();
  uint64_t v63 = v12 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v63 - v15;
  sub_3CEF0();
  sub_B34C0(61);
  v66[0] = v67;
  v17._countAndFlagsBits = 0xD00000000000003BLL;
  sub_3CED4(v17, (uint64_t)"GuardFlow.on called, is SiriX for Add/Remove news enabled: ");
  uint64_t v68 = &type metadata for Features;
  unint64_t v69 = (_UNKNOWN **)sub_3CAA0();
  LOBYTE(v67) = 1;
  char v18 = sub_B22B0();
  sub_74F8((uint64_t)&v67);
  if (v18) {
    v19._countAndFlagsBits = 1702195828;
  }
  else {
    v19._countAndFlagsBits = 0x65736C6166;
  }
  if (v18) {
    uint64_t v20 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v20 = (void *)0xE500000000000000;
  }
  v19._object = v20;
  sub_B3020(v19);
  swift_bridgeObjectRelease();
  unint64_t v65 = (unint64_t)"Apps to search are: ";
  sub_3CD90(*(uint64_t *)&v66[0], *((unint64_t *)&v66[0] + 1), v21, 0x80000000000B7090);
  swift_bridgeObjectRelease();
  sub_B2210();
  int v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v8, v2);
  if (v22 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v24 = sub_3CDC4();
    v25(v24);
LABEL_11:
    uint64_t v28 = v1;
    uint64_t v29 = v64;
    unint64_t v30 = *(void (**)(uint64_t))(v64 + 32);
    sub_3CE80();
    v30(v31);
    sub_3CEF0();
    sub_B34C0(71);
    sub_7A1C();
    sub_B3020(v70);
    uint64_t v32 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent)) {
      v33._countAndFlagsBits = 1702195828;
    }
    else {
      v33._countAndFlagsBits = 0x65736C6166;
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent)) {
      unint64_t v34 = (void *)0xE400000000000000;
    }
    else {
      unint64_t v34 = (void *)0xE500000000000000;
    }
    v33._object = v34;
    sub_B3020(v33);
    swift_bridgeObjectRelease();
    sub_3CD90(v67, *((unint64_t *)&v67 + 1), v35, v65 | 0x8000000000000000);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v1 + v32) != 1)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v9);
      return 1;
    }
    sub_3CE80();
    v30(v36);
    uint64_t v37 = type metadata accessor for DailyBriefingNLv3Intent();
    uint64_t v38 = sub_5BCC();
    sub_3CE80();
    v30(v39);
    uint64_t v68 = (ValueMetadata *)v37;
    unint64_t v69 = &off_DE308;
    *(void *)&long long v67 = v38;
    sub_B3B0(&v67, (uint64_t)v66);
    uint64_t v40 = (void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_dbIntent);
    swift_beginAccess();
    sub_74F8((uint64_t)v40);
    sub_B3B0(v66, (uint64_t)v40);
    swift_endAccess();
    uint64_t v42 = v40[3];
    uint64_t v41 = v40[4];
    sub_7468(v40, v42);
    sub_2B68C();
    uint64_t v44 = v43;
    __chkstk_darwin(v45);
    Swift::String v47 = (char *)&v63 - v46;
    (*(void (**)(char *))(v44 + 16))((char *)&v63 - v46);
    LOBYTE(v41) = sub_5E190(v42, v41);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v42);
    if (v41)
    {
      *(void *)&long long v67 = 0;
      *((void *)&v67 + 1) = 0xE000000000000000;
      sub_B34C0(42);
      sub_3CF2C();
      v49._countAndFlagsBits = v48 + 1;
      sub_3CED4(v49, (uint64_t)"New nlv3 intent after server execution: ");
      sub_A8B4((uint64_t)v40, (uint64_t)&v67);
      sub_7424(&qword_E95E0);
      sub_B35C0();
      sub_74F8((uint64_t)&v67);
      sub_3CDDC(*(uint64_t *)&v66[0], *((unint64_t *)&v66[0] + 1), v50, v65 | 0x8000000000000000);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v28 + v32) = 0;
      return 1;
    }
    *(void *)&long long v67 = 0;
    *((void *)&v67 + 1) = 0xE000000000000000;
    sub_B34C0(71);
    sub_3CF2C();
    v55._countAndFlagsBits = v54 + 30;
    sub_3CED4(v55, (uint64_t)"Nlv3 intent after server execution is unsupported, rejecting intent: ");
    sub_A8B4((uint64_t)v40, (uint64_t)&v67);
    sub_7424(&qword_E95E0);
    sub_B35C0();
    sub_74F8((uint64_t)&v67);
    sub_3CDDC(*(uint64_t *)&v66[0], *((unint64_t *)&v66[0] + 1), v56, v65 | 0x8000000000000000);
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v22 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v26 = sub_3CDC4();
    v27(v26);
    sub_7424(&qword_E7FA0);
    swift_release();
    goto LABEL_11;
  }
  if (v22 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v52 = sub_3CDC4();
    v53(v52);
    swift_unknownObjectRelease();
LABEL_27:
    sub_3CE44();
    sub_3CD90(v59 - 15, 0x80000000000B76D0, v60, v65 | 0x8000000000000000);
    uint64_t result = 1;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent) = 1;
    return result;
  }
  if (v22 == enum case for Parse.uso(_:))
  {
    uint64_t v57 = sub_3CF18();
    v58(v57);
    goto LABEL_27;
  }
  sub_3CD90(0xD000000000000028, 0x80000000000B75D0, v23, v65 | 0x8000000000000000);
  uint64_t v61 = sub_3CF18();
  v62(v61);
  return 0;
}

uint64_t sub_38AA4()
{
  return sub_B1C80();
}

uint64_t sub_38B30()
{
  sub_7FDC();
  v1[58] = v2;
  v1[59] = v0;
  uint64_t v3 = sub_B1CE0();
  v1[60] = v3;
  sub_FC60(v3);
  v1[61] = v4;
  v1[62] = sub_131EC();
  return _swift_task_switch(sub_38BC0, 0, 0);
}

uint64_t sub_38BC0()
{
  if ((sub_3A810() & 1) == 0)
  {
    uint64_t v21 = *(void *)(v0 + 472);
    if (*(unsigned char *)(v21 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent) == 1)
    {
      sub_7A1C();
      sub_ABC4();
      sub_8C320(0xD000000000000027, v22, 0xD000000000000027, v23, 0x2865747563657865, 0xE900000000000029);
      sub_A8B4(v21 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState, v0 + 16);
      if (qword_E6C10 != -1) {
        swift_once();
      }
      sub_A8B4((uint64_t)&unk_F4F58, v0 + 56);
      sub_B2150();
      uint64_t v24 = sub_FEC0();
      sub_A918(v24, v25);
      sub_2B68C();
      uint64_t v27 = v26;
      sub_131EC();
      (*(void (**)(void))(v27 + 16))();
      *(void *)(v0 + 160) = &type metadata for CATProvider;
      *(void *)(v0 + 168) = &off_DD378;
      type metadata accessor for UnsupportedFlow();
      uint64_t v28 = sub_5BCC();
      sub_A918(v0 + 136, (uint64_t)&type metadata for CATProvider);
      sub_2B68C();
      uint64_t v30 = v29;
      sub_131EC();
      (*(void (**)(void))(v30 + 16))();
      *(void *)(v0 + 200) = &type metadata for CATProvider;
      *(void *)(v0 + 208) = &off_DD378;
      uint64_t v31 = v28 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_logger;
      if (qword_E6D58 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_B2D30();
      uint64_t v33 = sub_B378(v32, (uint64_t)qword_F5360);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v31, v33, v32);
      sub_B3B0((long long *)(v0 + 176), v28 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_catProvider);
      sub_B3B0((long long *)(v0 + 16), v28 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_deviceState);
      sub_B3B0((long long *)(v0 + 96), v28 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_outputPublisherAsync);
      sub_74F8(v0 + 136);
      swift_task_dealloc();
      sub_74F8(v0 + 56);
      swift_task_dealloc();
      *(void *)(v0 + 440) = v28;
      sub_3CCF4((unint64_t *)&qword_E95B8, (void (*)(uint64_t))type metadata accessor for UnsupportedFlow);
      sub_B1C70();
      swift_release();
      sub_B1FA0();
LABEL_41:
      swift_release();
    }
    else
    {
      sub_3AEA8(0xD00000000000002BLL, 0x80000000000B7330);
    }
    goto LABEL_42;
  }
  uint64_t v1 = *(void *)(v0 + 472);
  type metadata accessor for AddRemoveFlow();
  uint64_t v2 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_dbIntent;
  swift_beginAccess();
  uint64_t v49 = v2;
  sub_A8B4(v2, v0 + 256);
  uint64_t v48 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState;
  sub_A8B4(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState, v0 + 336);
  char v3 = sub_30C34((void *)(v0 + 256));
  sub_74F8(v0 + 336);
  sub_74F8(v0 + 256);
  *(void *)(v0 + 400) = &type metadata for Features;
  *(void *)(v0 + 408) = sub_3CAA0();
  *(unsigned char *)(v0 + 376) = 1;
  char v4 = sub_B22B0();
  sub_74F8(v0 + 376);
  sub_B34C0(20);
  swift_bridgeObjectRelease();
  int v50 = v4 & 1;
  if (v4) {
    v5._countAndFlagsBits = 1702195828;
  }
  else {
    v5._countAndFlagsBits = 0x65736C6166;
  }
  if (v4) {
    uint64_t v6 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v6 = (void *)0xE500000000000000;
  }
  v5._object = v6;
  sub_B3020(v5);
  swift_bridgeObjectRelease();
  v52._countAndFlagsBits = 8236;
  v52._object = (void *)0xE200000000000000;
  sub_B3020(v52);
  v53._countAndFlagsBits = 0xD000000000000010;
  v53._object = (void *)0x80000000000B7390;
  sub_B3020(v53);
  swift_bridgeObjectRelease();
  sub_B34C0(39);
  swift_bridgeObjectRelease();
  if (v3) {
    v7._countAndFlagsBits = 1702195828;
  }
  else {
    v7._countAndFlagsBits = 0x65736C6166;
  }
  if (v3) {
    uint64_t v8 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v8 = (void *)0xE500000000000000;
  }
  v7._object = v8;
  sub_B3020(v7);
  swift_bridgeObjectRelease();
  sub_7A1C();
  v54._countAndFlagsBits = 0xD000000000000010;
  sub_B3020(v54);
  uint64_t v9 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent)) {
    v10._countAndFlagsBits = 1702195828;
  }
  else {
    v10._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent)) {
    uint64_t v11 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v11 = (void *)0xE500000000000000;
  }
  v10._object = v11;
  sub_B3020(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v55._countAndFlagsBits = 0xD000000000000013;
  v55._object = (void *)0x80000000000B73D0;
  sub_B3020(v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_3CE10(0xD00000000000001FLL, 0x80000000000B73B0, v12, 0x80000000000B7090);
  swift_bridgeObjectRelease();
  if (!v50 && (v3 & 1) != 0 && *(unsigned char *)(v1 + v9) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 488);
    uint64_t v13 = *(void *)(v0 + 496);
    uint64_t v15 = *(void *)(v0 + 480);
    sub_3CE44();
    sub_3CE10(v16 - 14, 0x80000000000B7510, v17, 0x80000000000B7090);
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, enum case for FlowUnhandledReason.needsServerExecution(_:), v15);
    sub_B1FC0();
    sub_3CF0C();
    v20(v18, v19);
LABEL_42:
    swift_task_dealloc();
    sub_ABD0();
    return v47();
  }
  uint64_t v34 = *(void *)(v0 + 472);
  uint64_t v35 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_state;
  switch(*(unsigned char *)(v34 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_state))
  {
    case 1:
      type metadata accessor for CancellationFlow();
      sub_A8B4(v49, v0 + 296);
      sub_A8B4(v48, v0 + 216);
      char v38 = sub_2B910((void *)(v0 + 296));
      sub_74F8(v0 + 216);
      sub_74F8(v0 + 296);
      if ((v38 & 1) == 0)
      {
        uint64_t v43 = *(void *)(v0 + 472);
        sub_3CE44();
        sub_3CD50(v44 - 9, (uint64_t)"Activity Notification: Posting");
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = sub_3CAEC;
        *(void *)(v45 + 24) = v43;
        sub_B1BD0();
        sub_5BCC();
        swift_retain();
        *(void *)(v0 + 448) = sub_B1BC0();
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = sub_3CCC4;
        *(void *)(v46 + 24) = v43;
        swift_retain();
        sub_B1F40();
        swift_release();
        goto LABEL_41;
      }
      sub_3CE44();
      sub_3CD50(v39 + 12, (uint64_t)"Activity Notification: Skipped for CancellationFlow");
      *(unsigned char *)(v34 + v35) = 2;
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 504) = v40;
      *uint64_t v40 = v0;
      uint64_t v41 = sub_39600;
LABEL_36:
      v40[1] = v41;
      uint64_t result = sub_399C0();
      break;
    case 2:
      sub_3CD50(0xD000000000000026, (uint64_t)"Finished GuardFlow, starting next flow");
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 512) = v40;
      *uint64_t v40 = v0;
      uint64_t v41 = sub_396E0;
      goto LABEL_36;
    case 3:
      sub_3CD50(0xD000000000000026, (uint64_t)"Finished GuardFlow. Returning complete");
      sub_B1FB0();
      goto LABEL_42;
    default:
      sub_3CE44();
      sub_3CD50(v36 + 17, (uint64_t)"Running SiriKit GuardFlow: With checks for app unlocking");
      sub_3B00C();
      uint64_t v37 = sub_B1BB0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 456) = v37;
      sub_B1BF0();
      swift_retain();
      sub_B1F40();
      swift_release();
      goto LABEL_41;
  }
  return result;
}

uint64_t sub_39600()
{
  sub_7FDC();
  sub_34FFC();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  char v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_396E0()
{
  sub_7FDC();
  sub_34FFC();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  char v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void sub_397C0(unsigned char *a1, uint64_t a2)
{
  if (*a1)
  {
    sub_8C308(0xD000000000000018, 0x80000000000B7530, 0xD000000000000027, 0x80000000000B7090, 0x2865747563657865, 0xE900000000000029);
    char v3 = 3;
  }
  else
  {
    sub_8C308(0xD00000000000001BLL, 0x80000000000B7550, 0xD000000000000027, 0x80000000000B7090, 0x2865747563657865, 0xE900000000000029);
    char v3 = 1;
  }
  *(unsigned char *)(a2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_state) = v3;
}

uint64_t sub_398A4(uint64_t (*a1)(void))
{
  uint64_t v3 = a1();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  return sub_3CCDC(v4, v1, v3, v2);
}

void sub_39934(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_state) = 2;
}

uint64_t sub_399C0()
{
  sub_7FDC();
  v1[70] = v0;
  v1[69] = v2;
  uint64_t v3 = sub_B1FD0();
  v1[71] = v3;
  sub_FC60(v3);
  v1[72] = v4;
  v1[73] = sub_131EC();
  uint64_t v5 = sub_B2CB0();
  sub_13294(v5);
  v1[74] = sub_131EC();
  uint64_t v6 = sub_7424(&qword_E95A0);
  sub_13294(v6);
  v1[75] = swift_task_alloc();
  v1[76] = swift_task_alloc();
  v1[77] = swift_task_alloc();
  return _swift_task_switch(sub_39ABC, 0, 0);
}

uint64_t sub_39ABC()
{
  uint64_t v58 = v0;
  uint64_t v1 = *(void *)(v0 + 560);
  sub_AA40(*(void *)(v0 + 616), 1, 1, *(void *)(v0 + 568));
  uint64_t v55 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState;
  sub_A8B4(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState, v0 + 384);
  uint64_t v56 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_aceService;
  sub_A8B4(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_aceService, v0 + 64);
  type metadata accessor for BriefingCatExecutor(0);
  sub_B2CA0();
  uint64_t v2 = sub_B2BE0();
  sub_3825C((uint64_t *)v57);
  sub_382EC((void *)(v0 + 104));
  type metadata accessor for DBSiriKitEventSender();
  uint64_t inited = swift_initStaticObject();
  sub_B2BC0();
  uint64_t v4 = sub_B2BB0();
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = sub_A918(v0 + 104, v5);
  sub_2B68C();
  uint64_t v8 = v7;
  uint64_t v9 = (uint64_t *)sub_131EC();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v9, v6, v5);
  uint64_t v10 = sub_3BD98(v0 + 384, v2, v0 + 64, (uint64_t)v57, *v9, inited, (void *)v4);
  *(void *)(v0 + 624) = v10;
  sub_74F8(v0 + 104);
  swift_task_dealloc();
  type metadata accessor for CancellationFlow();
  uint64_t v11 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_dbIntent;
  swift_beginAccess();
  sub_A8B4(v11, v0 + 144);
  sub_A8B4(v55, v0 + 224);
  LOBYTE(v4) = sub_2B910((void *)(v0 + 144));
  sub_74F8(v0 + 224);
  sub_74F8(v0 + 144);
  if (v4)
  {
    sub_A8B4(v56, v0 + 184);
    sub_A8B4(v55, v0 + 344);
    uint64_t v12 = swift_initStaticObject();
    uint64_t v13 = swift_allocObject();
    swift_retain();
    uint64_t v14 = (long long *)sub_FEC0();
    *(void *)(v0 + 544) = sub_3BA04(v14, v15, v10, v12, v13);
    sub_3CCF4((unint64_t *)&qword_E8D18, (void (*)(uint64_t))type metadata accessor for CancellationFlow);
    sub_B1C70();
    int v16 = 5;
  }
  else
  {
    type metadata accessor for AddRemoveFlow();
    sub_A8B4(v11, v0 + 264);
    sub_A8B4(v55, v0 + 304);
    char v17 = sub_30C34((void *)(v0 + 264));
    sub_74F8(v0 + 304);
    sub_74F8(v0 + 264);
    if (v17)
    {
      uint64_t v18 = *(void *)(v0 + 560);
      uint64_t v19 = sub_FEC0();
      sub_A8B4(v19, v20);
      uint64_t v21 = *(void *)(v18 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_knowledgeStore);
      sub_A8B4(v56, v0 + 464);
      swift_retain();
      swift_retain();
      sub_B2260();
      uint64_t v22 = swift_initStaticObject();
      uint64_t v23 = swift_allocObject();
      *(void *)(v0 + 528) = sub_3BBB0((long long *)(v0 + 424), v21, (long long *)(v0 + 464), v10, v57, v22, v23);
      sub_3CCF4((unint64_t *)&qword_E8F98, (void (*)(uint64_t))type metadata accessor for AddRemoveFlow);
      sub_B1C70();
      int v16 = 144;
    }
    else
    {
      if (qword_E6DE0 != -1) {
        swift_once();
      }
      sub_84ED0(0, qword_F5538, unk_F5540, byte_F5548, (void *)qword_F5550);
      sub_3A5B8();
      swift_retain();
      sub_3A468();
      sub_B1DA0();
      sub_B2260();
      uint64_t v24 = swift_initStaticObject();
      type metadata accessor for OfflineStateProvider();
      swift_allocObject();
      uint64_t v25 = sub_FEC0();
      *(void *)(v0 + 536) = sub_3BFA4(v25, v26, v27, v28, v24, v10, v29);
      type metadata accessor for InitialFlow();
      sub_3CCF4(&qword_E95A8, (void (*)(uint64_t))type metadata accessor for InitialFlow);
      sub_B1C70();
      int v16 = 143;
    }
  }
  swift_release();
  uint64_t v30 = *(void *)(v0 + 616);
  uint64_t v31 = *(void *)(v0 + 608);
  uint64_t v32 = *(void *)(v0 + 600);
  uint64_t v33 = *(void *)(v0 + 568);
  sub_B1FA0();
  swift_release();
  sub_3C100(v30);
  sub_AA40(v31, 0, 1, v33);
  sub_3C160(v31, v30);
  sub_3C1C8(v30, v32);
  if (sub_C844(v32, 1, v33) == 1)
  {
    uint64_t v34 = *(void *)(v0 + 616);
    sub_3C100(*(void *)(v0 + 600));
    sub_3CE44();
    sub_7A1C();
    sub_3AEA8(v35, v36);
    swift_release();
    sub_3C100(v34);
LABEL_15:
    sub_3CEA0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_ABD0();
    return v54();
  }
  uint64_t v37 = *(void *)(v0 + 600);
  uint64_t v38 = *(void *)(v0 + 584);
  uint64_t v39 = *(void *)(v0 + 576);
  uint64_t v40 = *(void *)(v0 + 568);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
  *(void *)(v0 + 632) = v41;
  *(void *)(v0 + 640) = (v39 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v41(v38, v37, v40);
  uint64_t v42 = sub_B1F20();
  *(void *)(v0 + 648) = v42;
  if (!v42)
  {
    sub_3C100(*(void *)(v0 + 616));
    swift_release();
    uint64_t v52 = sub_3CE68();
    v53(v52);
    goto LABEL_15;
  }
  uint64_t v43 = *(void *)(v0 + 560);
  *(void *)&v57[0] = 0;
  *((void *)&v57[0] + 1) = 0xE000000000000000;
  sub_B34C0(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v57, "Running flow: ");
  HIBYTE(v57[0]) = -18;
  v60._countAndFlagsBits = sub_B1BE0();
  sub_B3020(v60);
  swift_bridgeObjectRelease();
  unint64_t v44 = *((void *)&v57[0] + 1);
  sub_ABC4();
  sub_8C308(v45, v44, 0xD000000000000027, v46, 0x78654E7472617473, 0xEF2928776F6C4674);
  swift_bridgeObjectRelease();
  sub_3C230(v43 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_siriKitEventSender, v0 + 16);
  sub_7468((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v47 = sub_B1BE0();
  uint64_t v49 = v48;
  *(void *)(v0 + 656) = v48;
  int v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v50;
  *int v50 = v0;
  v50[1] = sub_3A2CC;
  return sub_A1D7C(v16, v47, v49);
}

uint64_t sub_3A2CC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_3A3B4, 0, 0);
}

uint64_t sub_3A3B4()
{
  uint64_t v1 = *(void *)(v0 + 616);
  swift_release();
  swift_release();
  sub_3C100(v1);
  sub_74F8(v0 + 16);
  uint64_t v2 = sub_3CE68();
  v3(v2);
  sub_3CEA0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v4();
}

uint64_t sub_3A468()
{
  uint64_t v1 = sub_B32B0();
  sub_2B68C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_C92C();
  uint64_t v5 = sub_B32A0();
  uint64_t v6 = sub_13294(v5);
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v7 = sub_B2E10();
  uint64_t v8 = sub_13294(v7);
  __chkstk_darwin(v8);
  sub_7A0C();
  sub_3C478();
  sub_B2DE0();
  sub_B3290();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  sub_7A1C();
  return sub_B32E0();
}

uint64_t sub_3A5B8()
{
  sub_3B7F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_C0800;
  *(void *)(v0 + 32) = type metadata accessor for WeatherSpec(0);
  *(void *)(v0 + 40) = type metadata accessor for CalendarSpec();
  *(void *)(v0 + 48) = type metadata accessor for MapsSpec();
  *(void *)(v0 + 56) = type metadata accessor for RemindersSpec(0);
  return v0;
}

uint64_t sub_3A638()
{
  sub_B1880();
  sub_2B68C();
  __chkstk_darwin(v0);
  sub_C92C();
  id v1 = [self sharedInstance];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for DailyBriefingFlowPlugin();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = [self bundleForClass:ObjCClassFromMetadata];
  sub_B1870();
  sub_B1840();
  sub_3CF0C();
  v5();
  sub_12E9C();
  uint64_t v6 = sub_B33E0();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_7A1C();
  sub_ABC4();
  uint64_t v12 = sub_3B88C(v9, v10, 0xD000000000000010, v11, (uint64_t)v4, v6, v8, v2);
  uint64_t v14 = v13;

  if (!v14) {
    return 0;
  }
  return v12;
}

uint64_t sub_3A810()
{
  uint64_t v76 = sub_B1500();
  sub_2B68C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_3CE90();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_B1880();
  sub_2B68C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_7A0C();
  uint64_t v11 = v10 - v9;
  uint64_t v71 = v0;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState + 24);
  uint64_t v66 = (void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState);
  sub_7468((void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState), v12);
  sub_2B68C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  char v17 = (char *)v65 - v16;
  uint64_t v18 = sub_3CE50();
  v19(v18);
  sub_B1DD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
  uint64_t v20 = sub_B1840();
  uint64_t v22 = v21;
  unint64_t v69 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v70 = v11;
  uint64_t v67 = v7 + 8;
  uint64_t v68 = v5;
  sub_3CF0C();
  v23();
  v77[0] = v20;
  v77[1] = v22;
  sub_B14E0();
  sub_B14F0();
  uint64_t v24 = *(void (**)(void))(v2 + 8);
  sub_3CF00();
  v24();
  unint64_t v74 = sub_12E9C();
  uint64_t v25 = sub_B33C0();
  sub_3CF00();
  v24();
  swift_bridgeObjectRelease();
  v77[0] = v25;
  uint64_t v26 = sub_7424(&qword_E85C0);
  unint64_t v72 = sub_3B980();
  uint64_t v73 = v26;
  sub_B2ED0();
  swift_bridgeObjectRelease();
  v75._countAndFlagsBits = sub_B2FB0();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  if (qword_E6C40 != -1) {
    swift_once();
  }
  v75._object = v28;
  uint64_t v29 = qword_F5070;
  uint64_t v30 = *(void *)(qword_F5070 + 16);
  if (v30)
  {
    swift_bridgeObjectRetain_n();
    v65[1] = v29;
    uint64_t v31 = (uint64_t *)(v29 + 40);
    while (1)
    {
      uint64_t v32 = *v31;
      v77[0] = *(v31 - 1);
      v77[1] = v32;
      swift_bridgeObjectRetain();
      sub_B14E0();
      sub_B14F0();
      sub_3CF00();
      v24();
      uint64_t v33 = sub_B33C0();
      sub_3CF00();
      v24();
      v77[0] = v33;
      sub_B2ED0();
      swift_bridgeObjectRelease();
      uint64_t v34 = sub_B2FB0();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      if (v34 == v75._countAndFlagsBits && v36 == v75._object)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      char v38 = sub_B37E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v38) {
        break;
      }
      v31 += 2;
      if (!--v30)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    uint64_t v39 = 1;
  }
  else
  {
LABEL_12:
    uint64_t v39 = 0;
  }
  uint64_t v40 = v68;
  uint64_t v41 = v66;
  v77[0] = 0;
  v77[1] = 0xE000000000000000;
  sub_B34C0(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v77, "siriLocale: ");
  BYTE5(v77[1]) = 0;
  HIWORD(v77[1]) = -5120;
  sub_7468(v41, v41[3]);
  sub_2B68C();
  __chkstk_darwin(v42);
  sub_C92C();
  uint64_t v43 = sub_3CE50();
  v44(v43);
  uint64_t v45 = v70;
  sub_B1DD0();
  sub_3CF0C();
  v46();
  uint64_t v47 = sub_B1840();
  uint64_t v49 = v48;
  v69(v45, v40);
  v78._countAndFlagsBits = v47;
  v78._object = v49;
  sub_B3020(v78);
  swift_bridgeObjectRelease();
  v79._countAndFlagsBits = 8236;
  v79._object = (void *)0xE200000000000000;
  sub_B3020(v79);
  uint64_t v51 = v77[0];
  uint64_t v50 = v77[1];
  v77[0] = 0;
  v77[1] = 0xE000000000000000;
  sub_B34C0(25);
  swift_bridgeObjectRelease();
  v77[0] = 0xD000000000000016;
  v77[1] = 0x80000000000B7100;
  sub_B3020(v75);
  swift_bridgeObjectRelease();
  v80._countAndFlagsBits = 44;
  v80._object = (void *)0xE100000000000000;
  sub_B3020(v80);
  uint64_t v52 = v77[0];
  Swift::String v53 = (void *)v77[1];
  v77[0] = v51;
  v77[1] = v50;
  swift_bridgeObjectRetain();
  v81._countAndFlagsBits = v52;
  v81._object = v53;
  sub_B3020(v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v77[0];
  uint64_t v54 = v77[1];
  v77[0] = 0;
  v77[1] = 0xE000000000000000;
  sub_B34C0(33);
  swift_bridgeObjectRelease();
  v77[0] = 0xD00000000000001FLL;
  v77[1] = 0x80000000000B7120;
  if (v39) {
    v56._countAndFlagsBits = 1702195828;
  }
  else {
    v56._countAndFlagsBits = 0x65736C6166;
  }
  if (v39) {
    uint64_t v57 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v57 = (void *)0xE500000000000000;
  }
  v56._object = v57;
  sub_B3020(v56);
  swift_bridgeObjectRelease();
  uint64_t v58 = v77[0];
  uint64_t v59 = (void *)v77[1];
  v77[0] = v55;
  v77[1] = v54;
  swift_bridgeObjectRetain();
  v82._countAndFlagsBits = v58;
  v82._object = v59;
  sub_B3020(v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v60 = v77[1];
  sub_ABC4();
  sub_8C320(v61, v60, v62, v63, 0xD000000000000011, 0x80000000000B7140);
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t sub_3AEA8(uint64_t a1, unint64_t a2)
{
  sub_7468((void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_siriKitEventSender), *(void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_siriKitEventSender + 24));
  swift_bridgeObjectRetain();
  sub_A1178(4, 7, a1, a2);
  sub_A1D18();
  swift_release();
  sub_ABC4();
  sub_8C2F0(a1, a2, v5, v6, 0xD000000000000018, 0x80000000000B70E0);
  type metadata accessor for NoOpFlow();
  swift_allocObject();
  sub_3CCF4(&qword_E9580, (void (*)(uint64_t))type metadata accessor for NoOpFlow);
  sub_B1C70();
  swift_release();
  sub_B1FA0();
  return swift_release();
}

uint64_t sub_3B00C()
{
  sub_B1C30();
  sub_2B68C();
  uint64_t v1 = v0;
  __chkstk_darwin(v2);
  sub_3CE90();
  uint64_t v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  if (qword_E6C00 != -1) {
    swift_once();
  }
  sub_24430();
  sub_3CEF0();
  sub_B34C0(22);
  swift_bridgeObjectRelease();
  v17[0] = 0xD000000000000014;
  v17[1] = 0x80000000000B7070;
  v18._countAndFlagsBits = sub_B3210();
  sub_B3020(v18);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_8C320(v5, 0x80000000000B7070, v6, v7, 0xD000000000000012, 0x80000000000B70C0);
  swift_bridgeObjectRelease();
  sub_2D898();
  swift_bridgeObjectRelease();
  v17[3] = &type metadata for DefaultProtectedAppCheckStrategy;
  v17[4] = sub_3B840();
  sub_B1C00();
  swift_release();
  sub_74F8((uint64_t)v17);
  uint64_t v8 = sub_5F074(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_5F074(v9 > 1, v10 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v10 + 1;
  uint64_t v11 = *(void (**)(void))(v1 + 32);
  sub_3CEC4();
  v11();
  sub_B1C20();
  unint64_t v13 = *(void *)(v8 + 16);
  unint64_t v12 = *(void *)(v8 + 24);
  if (v13 >= v12 >> 1) {
    uint64_t v8 = sub_5F074(v12 > 1, v13 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v13 + 1;
  sub_3CEC4();
  v11();
  sub_B1C10();
  unint64_t v15 = *(void *)(v8 + 16);
  unint64_t v14 = *(void *)(v8 + 24);
  if (v15 >= v14 >> 1) {
    uint64_t v8 = sub_5F074(v14 > 1, v15 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v15 + 1;
  sub_3CEC4();
  v11();
  return v8;
}

uint64_t sub_3B32C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_dbIntent);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_aceService);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_featureFlags);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_siriKitEventSender);
  return v0;
}

uint64_t sub_3B3F0()
{
  sub_3B32C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_3B448()
{
  return type metadata accessor for GuardFlow();
}

uint64_t type metadata accessor for GuardFlow()
{
  uint64_t result = qword_E9380;
  if (!qword_E9380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3B498()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GuardFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuardFlow.State()
{
  return &type metadata for GuardFlow.State;
}

unint64_t sub_3B66C()
{
  unint64_t result = qword_E9560[0];
  if (!qword_E9560[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_E9560);
  }
  return result;
}

uint64_t sub_3B6B8()
{
  return sub_38460() & 1;
}

uint64_t sub_3B6E0()
{
  return sub_38AA4();
}

uint64_t sub_3B704()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_A7BC;
  return sub_38B30();
}

uint64_t sub_3B7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GuardFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_3B7F0()
{
  uint64_t v0 = sub_7424(&qword_E9590);
  if (sub_3B9D4(v0)) {
    unint64_t v1 = &qword_E7F20;
  }
  else {
    unint64_t v1 = (uint64_t *)&unk_E9598;
  }

  return sub_7424(v1);
}

unint64_t sub_3B840()
{
  unint64_t result = qword_E9578;
  if (!qword_E9578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9578);
  }
  return result;
}

uint64_t sub_3B88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  NSString v10 = sub_B2F20();
  swift_bridgeObjectRelease();
  NSString v11 = sub_B2F20();
  swift_bridgeObjectRelease();
  NSString v12 = sub_B2F20();
  swift_bridgeObjectRelease();
  id v13 = [a8 localizedStringForKey:v10 table:v11 bundle:a5 languageCode:v12];

  if (!v13) {
    return 0;
  }
  uint64_t v14 = sub_B2F50();

  return v14;
}

unint64_t sub_3B980()
{
  unint64_t result = qword_E9588;
  if (!qword_E9588)
  {
    sub_20D6C(&qword_E85C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9588);
  }
  return result;
}

uint64_t sub_3B9D4(uint64_t a1)
{
  if (swift_isClassType()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_3BA04(long long *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = type metadata accessor for DBSiriKitEventSender();
  char v17 = &off_DF120;
  uint64_t v18 = sub_3CCF4(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v15 = a4;
  uint64_t v10 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_B2D30();
  uint64_t v12 = sub_B378(v11, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a5 + v10, v12, v11);
  uint64_t v13 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_dialogService;
  sub_B1ED0();
  swift_allocObject();
  *(void *)(a5 + v13) = sub_B1EC0();
  sub_B3B0(a1, a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_aceService);
  sub_B3B0(a2, a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_deviceState);
  *(void *)(a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_templatingService) = a3;
  sub_1FAAC(&v15, (_OWORD *)(a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin16CancellationFlow_siriKitEventSender));
  return a5;
}

uint64_t sub_3BBB0(long long *a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = type metadata accessor for DBSiriKitEventSender();
  uint64_t v21 = &off_DF120;
  uint64_t v22 = sub_3CCF4(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v19 = a6;
  uint64_t v14 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_B2D30();
  uint64_t v16 = sub_B378(v15, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a7 + v14, v16, v15);
  uint64_t v17 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_dialogService;
  sub_B1ED0();
  swift_allocObject();
  *(void *)(a7 + v17) = sub_B1EC0();
  sub_B3B0(a1, a7 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_intent);
  *(void *)(a7 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_knowledgeStore) = a2;
  sub_B3B0(a3, a7 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_aceService);
  *(void *)(a7 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_templatingService) = a4;
  sub_B3B0(a5, a7 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_deviceState);
  sub_1FAAC(&v19, (_OWORD *)(a7 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13AddRemoveFlow_siriKitEventSender));
  return a7;
}

uint64_t sub_3BD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v27 = type metadata accessor for AddViewsFlowProvider();
  uint64_t v28 = &off_DE470;
  v26[0] = a5;
  uint64_t v24 = &type metadata for SiriDBFeatureFlagsImpl;
  uint64_t v25 = &off_DDF70;
  type metadata accessor for TemplatingService(0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_A918((uint64_t)v26, v27);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)&v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = sub_A918((uint64_t)v23, (uint64_t)v24);
  __chkstk_darwin(v19);
  (*(void (**)(void))(v20 + 16))();
  uint64_t v21 = sub_3C4B8(a1, a2, a3, a4, *v17, a6, a7, v14);
  sub_74F8((uint64_t)v23);
  sub_74F8((uint64_t)v26);
  return v21;
}

uint64_t sub_3BFA4(uint64_t a1, uint64_t a2, long long *a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v23 = type metadata accessor for OfflineStateProvider();
  uint64_t v24 = &off_DEAE0;
  v22[0] = a7;
  type metadata accessor for InitialFlow();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_A918((uint64_t)v22, v23);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)&v22[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = sub_3C294(a1, a2, a3, a4, a5, a6, *v17, v14);
  sub_74F8((uint64_t)v22);
  return v19;
}

uint64_t sub_3C100(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E95A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3C160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E95A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_3C1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E95A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3C230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_3C294(uint64_t a1, uint64_t a2, long long *a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = type metadata accessor for DBSiriKitEventSender();
  uint64_t v25 = &off_DF120;
  uint64_t v26 = sub_3CCF4(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v23 = a5;
  uint64_t v21 = type metadata accessor for OfflineStateProvider();
  uint64_t v22 = &off_DEAE0;
  *(void *)&long long v20 = a7;
  uint64_t v16 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_B2D30();
  uint64_t v18 = sub_B378(v17, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a8 + v16, v18, v17);
  *(void *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_queue) = a1;
  sub_B3B0(a4, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_deviceState);
  sub_B3B0(a3, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_aceService);
  *(void *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_flowSpecs) = a2;
  sub_1FAAC(&v23, (_OWORD *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_siriKitEventSender));
  *(void *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_templatingService) = a6;
  sub_B3B0(&v20, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11InitialFlow_offlineStateProvider);
  return a8;
}

unint64_t sub_3C478()
{
  unint64_t result = qword_E95B0;
  if (!qword_E95B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_E95B0);
  }
  return result;
}

uint64_t sub_3C4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  id v37 = a7;
  uint64_t v42 = a4;
  uint64_t v43 = a3;
  uint64_t v41 = a2;
  uint64_t v44 = a1;
  uint64_t v40 = sub_B32B0();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v38 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_B32A0();
  __chkstk_darwin(v12 - 8);
  unint64_t v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_B2E10();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_B2D30();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v51[3] = type metadata accessor for DBSiriKitEventSender();
  v51[4] = &off_DF120;
  v51[5] = sub_3CCF4(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  v51[0] = a6;
  v50[3] = type metadata accessor for AddViewsFlowProvider();
  v50[4] = &off_DE470;
  v50[0] = a5;
  uint64_t v48 = &type metadata for SiriDBFeatureFlagsImpl;
  uint64_t v49 = &off_DDF70;
  uint64_t v19 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_logger;
  if (qword_E6D98 != -1) {
    swift_once();
  }
  uint64_t v20 = a8 + v19;
  uint64_t v21 = sub_B378(v15, (uint64_t)qword_F5420);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v22(v20, v21, v15);
  v22((uint64_t)v18, v20, v15);
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_B34C0(32);
  swift_bridgeObjectRelease();
  uint64_t v45 = 0xD00000000000001ELL;
  unint64_t v46 = 0x80000000000B7210;
  id v23 = v37;
  id v24 = [v37 description];
  uint64_t v25 = sub_B2F50();
  uint64_t v27 = v26;

  v52._countAndFlagsBits = v25;
  v52._object = v27;
  sub_B3020(v52);
  swift_bridgeObjectRelease();
  sub_8C308(v45, v46, 0xD000000000000033, 0x80000000000B7230, 0xD00000000000007DLL, 0x80000000000B7270);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v29 = [self bundleForClass:ObjCClassFromMetadata];
  *(void *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_bundle) = v29;
  *(void *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_catGlobals) = v23;
  *(void *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_catExecutor) = v41;
  uint64_t v30 = v43;
  sub_A8B4(v43, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_aceService);
  uint64_t v31 = v44;
  sub_A8B4(v44, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_deviceState);
  uint64_t v32 = v42;
  sub_A8B4(v42, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_patternFlowProvider);
  sub_A8B4((uint64_t)v50, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_addViewsFlowProvider);
  sub_3C230((uint64_t)v51, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_siriKitEventSender);
  sub_A8B4((uint64_t)v47, a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_featureFlags);
  sub_3C478();
  id v33 = v23;
  swift_retain();
  sub_B2DE0();
  sub_B3290();
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v40);
  uint64_t v34 = sub_B32E0();
  swift_release();

  sub_74F8((uint64_t)v47);
  sub_74F8((uint64_t)v51);
  sub_74F8((uint64_t)v50);
  sub_74F8(v32);
  sub_74F8(v30);
  sub_74F8(v31);
  *(void *)(a8 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_queue) = v34;
  return a8;
}

unint64_t sub_3CAA0()
{
  unint64_t result = qword_E95C0;
  if (!qword_E95C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E95C0);
  }
  return result;
}

uint64_t sub_3CAEC()
{
  return sub_3A638();
}

uint64_t sub_3CB04()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3CB3C()
{
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_3CBE8;
  uint64_t v4 = (uint64_t (*)(uint64_t (*)(void)))((char *)&dword_E95C8 + dword_E95C8);
  return v4(v2);
}

uint64_t sub_3CBE8()
{
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = sub_FEC0();
  return v4(v3);
}

void sub_3CCC4()
{
  sub_39934(v0);
}

uint64_t sub_3CCCC(uint64_t a1)
{
  return sub_98A54(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_3CCD4(unsigned char *a1)
{
  sub_397C0(a1, v1);
}

uint64_t sub_3CCDC(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_3CCF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultProtectedAppCheckStrategy()
{
  return &type metadata for DefaultProtectedAppCheckStrategy;
}

void sub_3CD50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_8C308(a1, (a2 - 32) | 0x8000000000000000, 0xD000000000000027, v2 | 0x8000000000000000, 0x2865747563657865, 0xE900000000000029);
}

void sub_3CD90(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_8C320(a1, a2, 0xD000000000000027, a4, 0x7475706E69286E6FLL, 0xEA0000000000293ALL);
}

uint64_t sub_3CDC4()
{
  return v0;
}

void sub_3CDDC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_8C320(a1, a2, 0xD000000000000027, a4, 0x7475706E69286E6FLL, 0xEA0000000000293ALL);
}

void sub_3CE10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_8C320(a1, a2, 0xD000000000000027, a4, 0x2865747563657865, 0xE900000000000029);
}

uint64_t sub_3CE50()
{
  return v0;
}

uint64_t sub_3CE68()
{
  return *(void *)(v0 + 552);
}

uint64_t sub_3CEA0()
{
  return swift_task_dealloc();
}

void sub_3CED4(Swift::String a1@<X1:X0>, uint64_t a2@<X8>)
{
  a1._object = (void *)((a2 - 32) | 0x8000000000000000);
  sub_B3020(a1);
}

void sub_3CEF0()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
}

uint64_t sub_3CF18()
{
  return v0;
}

void sub_3CF2C()
{
  uint64_t v1 = *(void *)(v0 - 112);
  *(void *)(v0 - 160) = *(void *)(v0 - 120);
  *(void *)(v0 - 152) = v1;
}

uint64_t sub_3CF40()
{
  sub_7FDC();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = sub_7424(&qword_E76E0);
  sub_13294(v2);
  *(void *)(v1 + 24) = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_3CFC0()
{
  sub_AC48();
  uint64_t v0 = sub_3E010();
  sub_3DFCC(v0);
  uint64_t v1 = sub_35108();
  uint64_t v2 = (void *)sub_3E068(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_3DF78;
  sub_3E05C();
  return v4();
}

uint64_t sub_3D064()
{
  sub_7FDC();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = sub_7424(&qword_E76E0);
  sub_13294(v2);
  *(void *)(v1 + 24) = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_3D0E4()
{
  sub_AC48();
  uint64_t v0 = sub_3E010();
  sub_3DFCC(v0);
  uint64_t v1 = sub_35108();
  uint64_t v2 = (void *)sub_3E068(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_3DF78;
  sub_3E05C();
  return v4();
}

uint64_t sub_3D188()
{
  sub_7FDC();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = sub_7424(&qword_E76E0);
  sub_13294(v4);
  v1[5] = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_3D20C()
{
  sub_7424(&qword_E7D20);
  uint64_t v2 = (__n128 *)swift_allocObject();
  *(void *)(v0 + 48) = v2;
  v2[4].n128_u64[1] = sub_3DF9C(v2, (__n128)xmmword_BEC70);
  sub_7590(v1);
  swift_bridgeObjectRetain();
  sub_3DFEC();
  uint64_t v3 = sub_B2090();
  sub_3E02C(v3);
  uint64_t v4 = (void *)sub_35108();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_3DF7C;
  sub_3E04C();
  return v5();
}

uint64_t sub_3D318()
{
  sub_7FDC();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = sub_7424(&qword_E76E0);
  sub_13294(v4);
  v1[5] = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_3D39C()
{
  sub_7424(&qword_E7D20);
  uint64_t v2 = (__n128 *)swift_allocObject();
  *(void *)(v0 + 48) = v2;
  v2[4].n128_u64[1] = sub_3DF9C(v2, (__n128)xmmword_BEC70);
  sub_7590(v1);
  swift_bridgeObjectRetain();
  sub_3DFEC();
  uint64_t v3 = sub_B2090();
  sub_3E02C(v3);
  uint64_t v4 = (void *)sub_35108();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_3DF7C;
  sub_3E04C();
  return v5();
}

uint64_t sub_3D4A8()
{
  sub_7FDC();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = sub_7424(&qword_E76E0);
  sub_13294(v4);
  v1[5] = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_3D52C()
{
  sub_7424(&qword_E7D20);
  uint64_t v2 = (__n128 *)swift_allocObject();
  *(void *)(v0 + 48) = v2;
  v2[4].n128_u64[1] = sub_3DF9C(v2, (__n128)xmmword_BEC70);
  sub_7590(v1);
  swift_bridgeObjectRetain();
  sub_3DFEC();
  uint64_t v3 = sub_B2090();
  sub_3E02C(v3);
  uint64_t v4 = (void *)sub_35108();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_3D638;
  sub_3E04C();
  return v5();
}

uint64_t sub_3D638()
{
  sub_AC48();
  sub_3DF80();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_A9D8(v2);
  swift_task_dealloc();
  uint64_t v5 = sub_FCEC();
  return v6(v5);
}

uint64_t sub_3D740()
{
  sub_7FDC();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = sub_7424(&qword_E76E0);
  sub_13294(v2);
  *(void *)(v1 + 24) = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_3D7C0()
{
  sub_AC48();
  uint64_t v0 = sub_3E010();
  sub_3DFCC(v0);
  uint64_t v1 = sub_35108();
  uint64_t v2 = (void *)sub_3E068(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_3D864;
  sub_3E05C();
  return v4();
}

uint64_t sub_3D864()
{
  sub_7FDC();
  sub_3DF80();
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_A9D8(v2);
  swift_task_dealloc();
  uint64_t v5 = sub_FCEC();
  return v6(v5);
}

uint64_t sub_3D948()
{
  sub_7FDC();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = sub_7424(&qword_E76E0);
  sub_13294(v2);
  *(void *)(v1 + 24) = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_3D9C8()
{
  sub_AC48();
  uint64_t v0 = sub_3E010();
  sub_3DFCC(v0);
  uint64_t v1 = sub_35108();
  uint64_t v2 = (void *)sub_3E068(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_3DF78;
  sub_3E05C();
  return v4();
}

uint64_t sub_3DA6C()
{
  sub_7FDC();
  *(unsigned char *)(v1 + 81) = v2;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v0;
  *(unsigned char *)(v1 + 80) = v4;
  uint64_t v5 = sub_B2C40();
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = *(void *)(v5 - 8);
  *(void *)(v1 + 48) = sub_131EC();
  uint64_t v6 = sub_7424(&qword_E76E0);
  sub_13294(v6);
  *(void *)(v1 + 56) = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_3DB48()
{
  char v1 = *(unsigned char *)(v0 + 81);
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 80);
  sub_7424(&qword_E7D20);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 64) = v4;
  strcpy((char *)(v4 + 32), "noneAvailable");
  *(_WORD *)(v4 + 46) = -4864;
  *(_OWORD *)(v4 + 16) = xmmword_C0800;
  *(unsigned char *)(v4 + 48) = v3;
  *(void *)(v4 + 72) = &type metadata for Bool;
  *(void *)(v4 + 80) = 0x656C6961466C6C61;
  *(void *)(v4 + 88) = 0xE900000000000064;
  *(unsigned char *)(v4 + 96) = v1;
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(void *)(v4 + 128) = 0xD000000000000012;
  *(void *)(v4 + 136) = 0x80000000000B7730;
  int64_t v5 = *(void *)(v2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 40);
    sub_85970(0, v5, 0);
    uint64_t v7 = v2 + 40;
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5;
    int64_t v8 = v5;
    do
    {
      swift_bridgeObjectRetain();
      sub_B2C20();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_85970(v9 > 1, v10 + 1, 1);
      }
      uint64_t v11 = *(void *)(v0 + 48);
      uint64_t v12 = *(void *)(v0 + 32);
      _swiftEmptyArrayStorage[2] = v10 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v10, v11, v12);
      v7 += 16;
      --v8;
    }
    while (v8);
  }
  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v14 = sub_7424(&qword_E7D28);
  *(void *)(v4 + 144) = _swiftEmptyArrayStorage;
  *(void *)(v4 + 168) = v14;
  *(void *)(v4 + 176) = 0xD000000000000017;
  *(void *)(v4 + 184) = 0x80000000000B7750;
  *(void *)(v4 + 216) = &type metadata for Double;
  *(double *)(v4 + 192) = (double)v5;
  uint64_t v15 = *(void *)(v13 + 16);
  uint64_t v16 = sub_B2090();
  sub_3DFCC(v16);
  uint64_t v17 = (void *)sub_35108();
  *(void *)(v0 + 72) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_3DDF8;
  uint64_t v18 = *(void *)(v0 + 56);
  return v20(11, v4, v18, v15);
}

uint64_t sub_3DDF8()
{
  sub_AC48();
  sub_3DF80();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_A9D8(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = sub_FCEC();
  return v6(v5);
}

uint64_t sub_3DF1C()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for CommonTemplatingService()
{
  return self;
}

uint64_t sub_3DF9C(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6E69616D6F64;
  a1[2].n128_u64[1] = 0xE600000000000000;
  return sub_B2C40();
}

uint64_t sub_3DFCC(uint64_t a1)
{
  return sub_AA40(v1, 1, 1, a1);
}

uint64_t sub_3DFEC()
{
  return sub_B2C20();
}

uint64_t sub_3E010()
{
  return sub_B2090();
}

uint64_t sub_3E02C(uint64_t a1)
{
  return sub_AA40(v1, 1, 1, a1);
}

uint64_t sub_3E068(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t sub_3E074(void *a1)
{
  id v43 = a1;
  uint64_t v2 = sub_7424(&qword_E7D38);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v40 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = sub_B17F0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v40 - v20;
  __chkstk_darwin(v19);
  id v23 = (char *)&v40 - v22;
  uint64_t v42 = v1;
  id v24 = [v1 startDate];
  if (!v24)
  {
    sub_3E510((uint64_t)v13, 1);
    uint64_t v11 = v13;
    goto LABEL_6;
  }
  uint64_t v25 = v24;
  uint64_t v40 = v5;
  sub_B17C0();

  uint64_t v41 = v15;
  uint64_t v26 = *(void (**)(void))(v15 + 32);
  sub_3E500();
  v26();
  sub_3E510((uint64_t)v13, 0);
  sub_3E528((uint64_t)v13);
  if (v27)
  {
    uint64_t v11 = v13;
    uint64_t v5 = v40;
    uint64_t v15 = v41;
LABEL_6:
    uint64_t v28 = v42;
    p_ivar_base_size = (_DWORD *)(&BaseFlowSpec + 8);
    goto LABEL_12;
  }
  sub_3E500();
  v26();
  p_ivar_base_size = &BaseFlowSpec.ivar_base_size;
  id v30 = [v43 startDate];
  if (!v30)
  {
    sub_3E510((uint64_t)v11, 1);
    goto LABEL_11;
  }
  uint64_t v31 = v30;
  sub_B17C0();

  sub_3E500();
  v26();
  sub_3E510((uint64_t)v11, 0);
  sub_3E528((uint64_t)v11);
  if (v27)
  {
LABEL_11:
    uint64_t v15 = v41;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v14);
    uint64_t v5 = v40;
    uint64_t v28 = v42;
LABEL_12:
    sub_3E4A0((uint64_t)v11);
    id v34 = objc_msgSend(v28, *((SEL *)p_ivar_base_size + 331));
    if (v34)
    {
      uint64_t v35 = v34;
      sub_B17C0();

      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v8, v21, v14);
      sub_3E510((uint64_t)v8, 0);
      sub_3E528((uint64_t)v8);
      if (!v27)
      {
        sub_3E4A0((uint64_t)v8);
        return -1;
      }
    }
    else
    {
      sub_3E510((uint64_t)v8, 1);
    }
    sub_3E4A0((uint64_t)v8);
    id v36 = objc_msgSend(v43, *((SEL *)p_ivar_base_size + 331));
    if (v36)
    {
      id v37 = v36;
      sub_B17C0();

      sub_3E500();
      v38();
      sub_3E510((uint64_t)v5, 0);
      sub_3E528((uint64_t)v5);
      if (!v27)
      {
        sub_3E4A0((uint64_t)v5);
        return 1;
      }
    }
    else
    {
      sub_3E510((uint64_t)v5, 1);
    }
    sub_3E4A0((uint64_t)v5);
    return 0;
  }
  sub_3E500();
  v26();
  uint64_t v32 = sub_B17D0();
  id v33 = *(void (**)(char *, uint64_t))(v41 + 8);
  v33(v18, v14);
  v33(v23, v14);
  return v32;
}

uint64_t sub_3E4A0(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E7D38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3E510(uint64_t a1, uint64_t a2)
{
  return sub_AA40(a1, a2, 1, v2);
}

uint64_t sub_3E528(uint64_t a1)
{
  return sub_C844(a1, 1, v1);
}

void sub_3E548(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for SupportedFeatures;
  *(void *)(a1 + 32) = &off_DE210;
  *(unsigned char *)a1 = 3;
}

double sub_3E568@<D0>(_OWORD *a1@<X8>)
{
  sub_7424(&qword_E7D08);
  sub_B32C0();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_3E5E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = (void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value);
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = (void *)v2[7];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v9;
  a2[7] = (uint64_t)v10;
  return sub_2A7AC(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_3E638(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(NSObject **)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  sub_12DD0(a1, v5 + 24);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_403B4;
  *(void *)(v6 + 24) = v5;
  void v9[4] = sub_2B604;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_5922C;
  void v9[3] = &unk_DD9B8;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  sub_40080((void *)a1, (void (*)(void, void, void, void, void, void, void, void))sub_2A7AC);
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  sub_40080((void *)a1, (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
  _Block_release(v7);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_3E7DC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value + 8);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value + 16);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value + 24);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value + 32);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value + 40);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value + 48);
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value + 56);
  sub_12DD0((uint64_t)a2, a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value);
  sub_40080(a2, (void (*)(void, void, void, void, void, void, void, void))sub_2A7AC);

  return sub_2A57C(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_3E88C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = swift_allocObject();
  sub_A918(a9, *(void *)(a9 + 24));
  sub_2B68C();
  __chkstk_darwin(v16);
  sub_7A0C();
  uint64_t v19 = (uint64_t *)(v18 - v17);
  (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
  uint64_t v21 = sub_400C4(a1, a2, a3, a4, a5, a6, a7, a8, *v19, v15);
  sub_74F8(a9);
  return v21;
}

uint64_t sub_3E9AC()
{
  sub_7FDC();
  *(void *)(v1 + 296) = v0;
  sub_7424(&qword_E76E0);
  *(void *)(v1 + 304) = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_3EA38()
{
  sub_7468((void *)(v0[37] + 168), *(void *)(v0[37] + 192));
  if (sub_8EAE8())
  {
    sub_7A1C();
    sub_40404(v1, v2, (uint64_t)"DailyBriefingFlowPlugin/MapsSpec.swift");
    char v3 = 0;
    goto LABEL_10;
  }
  int v4 = *(unsigned __int8 *)(v0[37] + 104);
  v0[39] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_logger;
  if (v4 != 1)
  {
    sub_7A1C();
    sub_40404(v11, v12, (uint64_t)"DailyBriefingFlowPlugin/MapsSpec.swift");
    char v3 = 1;
LABEL_10:
    sub_2A760();
    uint64_t v13 = (void *)sub_4043C();
    *uint64_t v14 = v3;
    sub_8E480(v13, 256);
    sub_4043C();
    *uint64_t v15 = v3;
    swift_task_dealloc();
    sub_40470();
    sub_40484();
    __asm { BRAA            X3, X16 }
  }
  sub_7A1C();
  sub_40404(v5, v6, (uint64_t)"DailyBriefingFlowPlugin/MapsSpec.swift");
  if (qword_E6CD8 != -1) {
    swift_once();
  }
  v0[40] = qword_F51C8;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[41] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_3EC3C;
  sub_40484();
  return sub_864FC(v8);
}

uint64_t sub_3EC3C()
{
  uint64_t v1 = (void *)*v0;
  unint64_t v2 = (void *)*v0;
  sub_AB94();
  void *v3 = v2;
  void *v3 = *v0;
  swift_task_dealloc();
  v2[42] = v1[28];
  v2[43] = v1[31];
  v2[44] = v1[33];
  swift_release();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_3ED98()
{
  sub_12DD0(v0 + 208, v0 + 144);
  uint64_t v1 = *(void *)(v0 + 160);
  *(void *)(v0 + 360) = v1;
  if (!v1) {
    goto LABEL_4;
  }
  long long v2 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 96) = v2;
  long long v3 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 128) = v3;
  long long v4 = *(_OWORD *)(v0 + 144);
  *(_DWORD *)(v0 + 464) = *(_DWORD *)(v0 + 168);
  long long v5 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 368) = v4;
  *(_OWORD *)(v0 + 384) = v5;
  uint64_t v6 = *(void *)(v0 + 200);
  *(void *)(v0 + 400) = *(void *)(v0 + 192);
  *(void *)(v0 + 408) = v6;
  if (*(void *)(v0 + 128) == 3)
  {
    sub_40080((void *)(v0 + 208), (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
LABEL_4:
    sub_7A1C();
    sub_40404(v7, v8, (uint64_t)"DailyBriefingFlowPlugin/MapsSpec.swift");
    sub_2A760();
    uint64_t v9 = (void *)sub_4043C();
    *uint64_t v10 = 2;
    sub_8E480(v9, 256);
    sub_4043C();
    *uint64_t v11 = 2;
    swift_task_dealloc();
    sub_40470();
    sub_40484();
    __asm { BRAA            X3, X16 }
  }
  sub_7A1C();
  sub_40404(v14, v15, (uint64_t)"DailyBriefingFlowPlugin/MapsSpec.swift");
  if (qword_E6BA8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 416) = qword_F4E78;
  swift_retain();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_3EFB8;
  sub_40484();
  return sub_F26C(v17);
}

uint64_t sub_3EFB8()
{
  sub_7FDC();
  sub_7FC4();
  v2[34] = v0;
  v2[35] = v1;
  v2[36] = v3;
  uint64_t v4 = *v0;
  sub_AB94();
  *long long v5 = v4;
  *(void *)(v7 + 432) = v6;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_3F08C()
{
  uint64_t v1 = *(void *)(v0 + 432);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 280);
    sub_2A720();
    id v3 = sub_3FFB0(v2, v1, 1);
  }
  else
  {
    id v3 = 0;
  }
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v6 = *(unsigned int *)(v0 + 464);
  long long v20 = *(_OWORD *)(v0 + 368);
  long long v21 = *(_OWORD *)(v0 + 384);
  uint64_t v8 = *(void **)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v22 = *(void *)(v0 + 304);
  swift_release();
  uint64_t v10 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_previousEntry;
  uint64_t v11 = *(void **)(v9 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_previousEntry);
  *(void *)(v9 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_previousEntry) = v3;

  *(_OWORD *)(v0 + 16) = v20;
  *(void *)(v0 + 32) = v7;
  *(void *)(v0 + 40) = v6;
  *(_OWORD *)(v0 + 48) = v21;
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = v4;
  swift_bridgeObjectRetain();
  id v12 = v8;
  swift_bridgeObjectRetain();
  sub_3E638(v0 + 16);
  *(void *)(v0 + 440) = *(void *)(v9 + 224);
  uint64_t v13 = *(void **)(v9 + v10);
  sub_40080((void *)(v0 + 208), (void (*)(void, void, void, void, void, void, void, void))sub_2A7AC);
  id v14 = v13;
  swift_retain();
  char v15 = sub_68764(v13, v0 + 16);
  sub_40080((void *)(v0 + 208), (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);

  uint64_t v16 = sub_B2090();
  sub_AA40(v22, 1, 1, v16);
  char v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v17;
  *char v17 = v0;
  v17[1] = sub_3F28C;
  uint64_t v18 = *(void *)(v0 + 304);
  return sub_6B96C(v0 + 80, v15 & 1, v18);
}

uint64_t sub_3F28C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v2 = *(void *)(v1 + 304);
  uint64_t v3 = *v0;
  sub_AB94();
  *uint64_t v4 = v3;
  *(void *)(v6 + 456) = v5;
  swift_task_dealloc();
  swift_release();
  sub_3FF60(v2, &qword_E76E0);
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_3F39C()
{
  uint64_t v1 = (void *)swift_retain();
  sub_8E480(v1, 1);
  swift_release();
  sub_40080((void *)(v0 + 208), (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
  return v2(1, 0);
}

uint64_t sub_3F44C()
{
  *(void *)(v1 + 144) = v0;
  sub_AC10();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_3F470()
{
  sub_3E568((_OWORD *)(v0 + 80));
  sub_12DD0(v0 + 80, v0 + 16);
  if (!*(void *)(v0 + 32))
  {
LABEL_7:
    sub_40484();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = *(void **)(*(void *)(v0 + 144) + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_previousEntry);
  *(void *)(v0 + 152) = v2;
  id v3 = v2;
  sub_4001C(v1);
  *(void *)(v0 + 160) = v4;
  if (!v4)
  {

    sub_40080((void *)(v0 + 80), (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
    goto LABEL_7;
  }
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_3F5CC;
  sub_40484();
  return sub_E7C8();
}

uint64_t sub_3F5CC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_3F6B0()
{
  sub_7FDC();

  sub_40080((void *)(v0 + 80), (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3F72C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_7424(&qword_E8B68);
  __chkstk_darwin(v2 - 8);
  sub_7A0C();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_B2D90();
  sub_2B68C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_7A0C();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_7424(&qword_E76E0);
  __chkstk_darwin(v13 - 8);
  sub_7A0C();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_B2090();
  sub_2B68C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_7A0C();
  uint64_t v23 = v22 - v21;
  sub_3E568(v31);
  sub_12DD0((uint64_t)v31, (uint64_t)v32);
  if (v33)
  {
    sub_8E2FC(v16);
    if (sub_C844(v16, 1, v17) == 1)
    {
      sub_40080(v31, (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
      sub_3FF60(v16, &qword_E76E0);
      uint64_t v24 = 1;
    }
    else
    {
      uint64_t v25 = v16;
      uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
      v26(v23, v25, v17);
      sub_7A1C();
      sub_5378C(0xD000000000000019, v27, 0, 1, v5);
      if (sub_C844(v5, 1, v6) == 1)
      {
        sub_40080(v31, (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
        sub_3FF60(v5, &qword_E8B68);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v5, v6);
        sub_7424(&qword_E9970);
        unint64_t v28 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_BEC70;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v29 + v28, v12, v6);
        sub_B1FE0();
        sub_40080(v31, (void (*)(void, void, void, void, void, void, void, void))sub_2A57C);
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
      }
      v26(a1, v23, v17);
      uint64_t v24 = 0;
    }
  }
  else
  {
    uint64_t v24 = 1;
  }
  return sub_AA40(a1, v24, 1, v17);
}

uint64_t sub_3FA90()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_logger;
  sub_B2D30();
  sub_FC8C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);

  uint64_t v3 = sub_4045C(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value);

  return sub_2A57C(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_3FB1C()
{
  uint64_t v0 = sub_8E3A8();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_logger;
  sub_B2D30();
  sub_FC8C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);

  uint64_t v3 = sub_4045C(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value);
  sub_2A57C(v3, v4, v5, v6, v7, v8, v9, v10);
  return v0;
}

uint64_t sub_3FBA8()
{
  uint64_t v0 = sub_3FB1C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_3FBFC()
{
  return type metadata accessor for MapsSpec();
}

uint64_t type metadata accessor for MapsSpec()
{
  uint64_t result = qword_E9760;
  if (!qword_E9760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3FC4C()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void destroy for MapsPreprocessingResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for MapsPreprocessingResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for MapsPreprocessingResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void **)(a2 + 56);
  id v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for MapsPreprocessingResult(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MapsPreprocessingResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;

  return a1;
}

uint64_t getEnumTagSinglePayload for MapsPreprocessingResult(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapsPreprocessingResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapsPreprocessingResult()
{
  return &type metadata for MapsPreprocessingResult;
}

uint64_t sub_3FF60(uint64_t a1, uint64_t *a2)
{
  sub_7424(a2);
  sub_FC8C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

id sub_3FFB0(uint64_t a1, uint64_t a2, char a3)
{
  NSString v4 = sub_B2F20();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() entryFromSerializedBase64String:v4 hasPrefix:a3 & 1];

  return v5;
}

uint64_t sub_4001C(void *a1)
{
  id v1 = [a1 serializedBase64String];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = sub_B2F50();

  return v3;
}

void *sub_40080(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_400C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v29 = a7;
  int v28 = a4;
  v34[3] = type metadata accessor for OfflineStateProvider();
  v34[4] = &off_DEAE0;
  v34[0] = a9;
  uint64_t v16 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_logger;
  uint64_t v17 = qword_E6D80;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_B2D30();
  uint64_t v19 = sub_B378(v18, (uint64_t)qword_F53D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a10 + v16, v19, v18);
  *(void *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_previousEntry) = 0;
  uint64_t v20 = (_OWORD *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin8MapsSpec_topSuggestion_Value);
  *uint64_t v20 = 0u;
  v20[1] = 0u;
  v20[2] = 0u;
  v20[3] = 0u;
  sub_A8B4(a6, (uint64_t)v33);
  type metadata accessor for MapsTemplatingService();
  swift_allocObject();
  swift_retain();
  *(void *)(a10 + 224) = sub_6BD6C((uint64_t)v33, a8);
  swift_release();
  sub_A8B4(a5, (uint64_t)v33);
  sub_A8B4(a6, (uint64_t)v32);
  sub_A8B4((uint64_t)v34, (uint64_t)v30);
  uint64_t v21 = sub_A918((uint64_t)v30, v31);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_8F900(a1, a2, a3, v28, v33, v32, v29, a8, *v23, a10);
  sub_74F8((uint64_t)v30);
  sub_74F8((uint64_t)v34);
  sub_74F8(a6);
  sub_74F8(a5);
  return v25;
}

uint64_t sub_40360()
{
  swift_release();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_403B4()
{
  return sub_3E7DC(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_403C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_403D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_403E0()
{
  return swift_release();
}

uint64_t sub_403E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_3E5E4(v1, a1);
}

void sub_40404(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_8C308(a1, a2, 0xD000000000000026, (a3 - 32) | 0x8000000000000000, 0x2865747563657865, 0xE900000000000029);
}

uint64_t sub_4043C()
{
  return swift_allocError();
}

uint64_t sub_4045C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t sub_40470()
{
  return v0;
}

uint64_t sub_40498()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_B1AC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for WeatherCondition.blizzard(_:)) {
    return 3;
  }
  if (v6 == enum case for WeatherCondition.blowingDust(_:)) {
    return 11;
  }
  if (v6 == enum case for WeatherCondition.blowingSnow(_:)) {
    return 8;
  }
  if (v6 == enum case for WeatherCondition.breezy(_:)) {
    return 12;
  }
  if (v6 == enum case for WeatherCondition.clear(_:)) {
    return 17;
  }
  if (v6 == enum case for WeatherCondition.cloudy(_:)) {
    return 15;
  }
  if (v6 == enum case for WeatherCondition.drizzle(_:)) {
    return 9;
  }
  if (v6 == enum case for WeatherCondition.flurries(_:)) {
    return 7;
  }
  if (v6 == enum case for WeatherCondition.foggy(_:)) {
    return 13;
  }
  if (v6 == enum case for WeatherCondition.freezingDrizzle(_:) || v6 == enum case for WeatherCondition.freezingRain(_:)) {
    return 6;
  }
  if (v6 == enum case for WeatherCondition.frigid(_:)) {
    return 18;
  }
  if (v6 == enum case for WeatherCondition.hail(_:)) {
    return 4;
  }
  if (v6 != enum case for WeatherCondition.haze(_:))
  {
    if (v6 == enum case for WeatherCondition.heavyRain(_:)) {
      return 9;
    }
    if (v6 != enum case for WeatherCondition.heavySnow(_:))
    {
      if (v6 == enum case for WeatherCondition.hot(_:)) {
        return 19;
      }
      if (v6 == enum case for WeatherCondition.hurricane(_:)) {
        return 0;
      }
      if (v6 == enum case for WeatherCondition.isolatedThunderstorms(_:)) {
        return 5;
      }
      if (v6 == enum case for WeatherCondition.mostlyClear(_:)) {
        return 17;
      }
      if (v6 == enum case for WeatherCondition.mostlyCloudy(_:)) {
        return 15;
      }
      if (v6 == enum case for WeatherCondition.partlyCloudy(_:)) {
        return 16;
      }
      if (v6 == enum case for WeatherCondition.rain(_:)) {
        return 9;
      }
      if (v6 == enum case for WeatherCondition.scatteredThunderstorms(_:)) {
        return 5;
      }
      if (v6 == enum case for WeatherCondition.sleet(_:)) {
        return 6;
      }
      if (v6 == enum case for WeatherCondition.smoky(_:)) {
        return 10;
      }
      if (v6 != enum case for WeatherCondition.snow(_:))
      {
        if (v6 == enum case for WeatherCondition.strongStorms(_:)) {
          return 5;
        }
        if (v6 != enum case for WeatherCondition.sunFlurries(_:))
        {
          if (v6 != enum case for WeatherCondition.sunShowers(_:))
          {
            if (v6 != enum case for WeatherCondition.thunderstorms(_:))
            {
              if (v6 == enum case for WeatherCondition.tropicalStorm(_:)) {
                return 2;
              }
              if (v6 == enum case for WeatherCondition.windy(_:)) {
                return 12;
              }
              if (v6 != enum case for WeatherCondition.wintryMix(_:))
              {
                (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
                return 22;
              }
              return 6;
            }
            return 5;
          }
          return 9;
        }
      }
    }
    return 7;
  }
  return 14;
}

uint64_t getEnumTagSinglePayload for RequestOriginInfo(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestOriginInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_40954(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_4096C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RequestOriginInfo()
{
  return &type metadata for RequestOriginInfo;
}

uint64_t sub_40994()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_F5080);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_F5080);
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F5360);
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_40A5C()
{
  return sub_FCA0((uint64_t)sub_40A70);
}

uint64_t sub_40A70()
{
  sub_7FDC();
  unsigned int v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_E9990 + dword_E9990);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_40B40;
  return v3((uint64_t)&unk_E9988, 0, 0x3A5F286863746566, 0xE900000000000029, 2.0);
}

uint64_t sub_40B40()
{
  sub_AC48();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *id v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_AC10();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = sub_4728C();
    return v11(v10);
  }
}

uint64_t sub_40C54()
{
  sub_AC48();
  *(void *)(v0 + 16) = *(void *)(v0 + 32);
  swift_errorRetain();
  sub_7424(&qword_E7F40);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_errorRelease();
    if (qword_E6C48 == -1) {
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  swift_errorRelease();
  if (qword_E6C48 != -1) {
LABEL_8:
  }
    swift_once();
LABEL_5:
  uint64_t v1 = sub_B2D30();
  sub_B378(v1, (uint64_t)qword_F5080);
  sub_7A1C();
  sub_46F00(v2, v3, (uint64_t)"DailyBriefingFlowPlugin/RequestOriginUtil.swift");
  swift_errorRelease();
  uint64_t v4 = sub_47194();
  return v5(v4);
}

uint64_t sub_40DD8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_40E68;
  return sub_40FF4();
}

uint64_t sub_40E68()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v4;
  *(unsigned char *)(v1 + 48) = v5;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_40F3C()
{
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 32);
  *(unsigned char *)(v2 + 16) = v1;
  sub_ABD0();
  return v3();
}

uint64_t sub_40F68()
{
  sub_7FDC();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DEA8(v2);
  void *v3 = v4;
  v3[1] = sub_A7BC;
  return sub_40DD8(v1);
}

uint64_t sub_40FF4()
{
  return sub_FCA0((uint64_t)sub_41008);
}

uint64_t sub_41008()
{
  sub_7FDC();
  sub_B2260();
  sub_B1DA0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_410AC;
  sub_4714C();
  return sub_41934();
}

uint64_t sub_410AC()
{
  sub_46E44();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 16;
  uint64_t v4 = v1 + 56;
  uint64_t v5 = *v0;
  sub_AB94();
  void *v6 = v5;
  swift_task_dealloc();
  sub_74F8(v4);
  sub_74F8(v3);
  uint64_t v7 = sub_4728C();
  return v8(v7);
}

uint64_t sub_411A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 64) = a3;
  *(void *)(v5 + 72) = a4;
  *(double *)(v5 + 56) = a5;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  return _swift_task_switch(sub_411C8, 0, 0);
}

uint64_t sub_411C8()
{
  sub_46E44();
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  long long v5 = *(_OWORD *)(v0 + 40);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  void *v6 = v0;
  v6[1] = sub_412B8;
  uint64_t v7 = sub_47060();
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v7);
}

uint64_t sub_412B8()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_AC10();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = *(void *)(v3 + 16);
    uint64_t v11 = *(void *)(v3 + 24);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
    uint64_t v13 = *(unsigned __int8 *)(v3 + 32);
    return v12(v10, v11, v13);
  }
}

uint64_t sub_413C4()
{
  sub_7FDC();
  swift_task_dealloc();
  sub_ABD0();
  return v0();
}

uint64_t sub_41420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 64) = a4;
  *(double *)(v5 + 48) = a5;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return sub_FCA0((uint64_t)sub_41440);
}

uint64_t sub_41440()
{
  sub_46E44();
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_7424(&qword_E9AF0);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  void *v6 = v0;
  v6[1] = sub_41554;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16);
}

uint64_t sub_41554()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_AC10();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = *(void *)(v3 + 16);
    uint64_t v11 = *(unsigned __int8 *)(v3 + 24);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v12(v10, v11);
  }
}

uint64_t sub_41660()
{
  sub_7FDC();
  swift_task_dealloc();
  sub_ABD0();
  return v0();
}

uint64_t sub_416BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(double *)(v5 + 32) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return sub_FCA0((uint64_t)sub_416DC);
}

uint64_t sub_416DC()
{
  sub_46E44();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_47140(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_417C8;
  uint64_t v9 = sub_47060();
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v9);
}

uint64_t sub_417C8()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_AC10();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v11(v10);
  }
}

uint64_t sub_418D0()
{
  sub_7FDC();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_41934()
{
  sub_7FDC();
  v0[6] = v1;
  v0[7] = v2;
  uint64_t v3 = sub_B2D30();
  v0[8] = v3;
  sub_FC60(v3);
  v0[9] = v4;
  v0[10] = sub_131EC();
  uint64_t v5 = sub_B2D00();
  v0[11] = v5;
  sub_FC60(v5);
  v0[12] = v6;
  v0[13] = sub_131EC();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_419F0()
{
  sub_2B7FC();
  if (qword_E6D28 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[6];
  uint64_t v1 = (void *)v0[7];
  id v3 = (id)qword_F52B8;
  sub_B2CE0();
  sub_B3300();
  sub_B2CD0();
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  sub_7468(v1, v4);
  id v6 = sub_42450();
  v0[14] = v6;
  sub_7468(v2, v2[3]);
  char v7 = sub_B1E50();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  uint64_t v9 = sub_3085C(0, &qword_E9A00);
  *uint64_t v8 = v0;
  v8[1] = sub_41B90;
  return dispatch thunk of AceServiceInvokerAsync.submit<A>(_:setRefId:)(v6, (v7 & 1) == 0, v9, v4, v5);
}

uint64_t sub_41B90()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 128) = v5;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  if (!v0) {

  }
  sub_AC10();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_41C7C()
{
  sub_425FC(*(void **)(v0 + 128));
  if (!v1)
  {
LABEL_30:
    id v20 = *(id *)(v0 + 128);
    sub_42524(v20);
    sub_AC10();
LABEL_31:
    sub_852C8(v21, v22, v23, v24);
    uint64_t v31 = 0;
    goto LABEL_32;
  }
  uint64_t v2 = v1;
  sub_B2F50();
  sub_47280();
  BOOL v4 = v4 && v2 == v3;
  if (v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  char v5 = sub_46F38();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    if (qword_E6C48 != -1) {
      swift_once();
    }
    uint64_t v25 = *(void **)(v0 + 128);
    sub_B378(*(void *)(v0 + 64), (uint64_t)qword_F5080);
    sub_7A1C();
    sub_8C308(v26, v27, v28, 0x80000000000B7910, 0xD000000000000015, 0x80000000000B7A30);
    id v29 = [v25 preciseLocationEnabled];
    if (v29)
    {
      id v30 = v29;
      sub_B3100();
    }
    goto LABEL_30;
  }
  sub_B2F50();
  sub_47280();
  if (v4 && v2 == v6) {
    goto LABEL_35;
  }
  char v8 = sub_46F38();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_36;
  }
  sub_B2F50();
  sub_47280();
  if (v4 && v2 == v9)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  char v11 = sub_46F38();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    sub_B2F50();
    sub_47280();
    if (v4 && v2 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = sub_46F38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        if (qword_E6C48 != -1) {
          swift_once();
        }
        uint64_t v15 = *(void **)(v0 + 128);
        sub_B378(*(void *)(v0 + 64), (uint64_t)qword_F5080);
        sub_7A1C();
        sub_ABC4();
        sub_47090(v16, v17, v18, v19, (uint64_t)"fetchWithDevice(_:_:)");
        id v20 = v15;
        sub_42524(v20);
        sub_AC10();
        goto LABEL_31;
      }
    }
    if (qword_E6C48 != -1) {
      swift_once();
    }
    id v20 = *(id *)(v0 + 128);
    uint64_t v39 = *(void *)(v0 + 104);
    sub_B378(*(void *)(v0 + 64), (uint64_t)qword_F5080);
    sub_7A1C();
    sub_ABC4();
    sub_47090(v40, v41, v42, v43, (uint64_t)"fetchWithDevice(_:_:)");
    uint64_t v21 = v39;
    uint64_t v22 = 0x74756F656D6954;
    uint64_t v23 = 0xE700000000000000;
    unsigned int v24 = 36864;
    goto LABEL_31;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  if (qword_E6C48 != -1) {
    swift_once();
  }
  id v20 = *(id *)(v0 + 128);
  uint64_t v34 = *(void *)(v0 + 104);
  sub_B378(*(void *)(v0 + 64), (uint64_t)qword_F5080);
  sub_7A1C();
  sub_ABC4();
  sub_47090(v35, v36, v37, v38, (uint64_t)"fetchWithDevice(_:_:)");
  uint64_t v31 = 1;
  sub_852C8(v34, 1, 0, 0x5402u);
LABEL_32:

  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(uint64_t, void, uint64_t))(v0 + 8);
  return v32(v31, 0, 2);
}

uint64_t sub_42244()
{
  if (qword_E6C48 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = sub_B378(v4, (uint64_t)qword_F5080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  sub_B34C0(26);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v16._countAndFlagsBits = sub_B3860();
  sub_B3020(v16);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_8C2F0(v6, 0x80000000000B7A10, v7, v8, 0xD000000000000015, 0x80000000000B7A30);
  swift_bridgeObjectRelease();
  sub_47168();
  v9();
  sub_852C8(v1, 0xD000000000000017, 0x80000000000B7A50, 0x9000u);
  swift_errorRelease();
  uint64_t v10 = sub_46E50();
  v11(v10);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = sub_47194();
  return v13(v12);
}

id sub_42450()
{
  id v0 = [objc_allocWithZone((Class)SAGetRequestOrigin) init];
  uint64_t v1 = sub_B2F50();
  sub_4569C(v1, v2, v0);
  sub_3085C(0, &qword_E9A08);
  Class isa = sub_B3350(21600).super.super.isa;
  [v0 setMaxAge:isa];

  id v4 = [objc_allocWithZone((Class)NSNumber) initWithDouble:2.0];
  [v0 setSearchTimeout:v4];

  return v0;
}

uint64_t sub_42524(void *a1)
{
  sub_45700(a1);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (!v3 && (([a1 latitude], v5 == 0.0) || (objc_msgSend(a1, "longitude"), v6 == 0.0)))
  {
    [a1 latitude];
    if (v7 == 0.0 && ([a1 longitude], v8 == 0.0))
    {

      return 1;
    }
    else
    {
      [a1 latitude];
      double v10 = v9;

      if (v10 == 0.0) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
  else
  {

    return 0;
  }
}

uint64_t sub_425FC(void *a1)
{
  uint64_t result = sub_45700(a1);
  if (!v3)
  {
    [a1 latitude];
    if (v4 == 0.0 && ([a1 longitude], v5 == 0.0)) {
      return 0;
    }
    else {
      return sub_B2F50();
    }
  }
  return result;
}

uint64_t sub_42670()
{
  sub_7FDC();
  sub_47308(v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = sub_7424(&qword_E9A70);
  sub_13294(v8);
  v0[9] = sub_131EC();
  uint64_t v9 = sub_7424(&qword_E76F0);
  sub_13294(v9);
  v0[10] = sub_131EC();
  uint64_t v10 = sub_B17F0();
  v0[11] = v10;
  sub_FC60(v10);
  v0[12] = v11;
  v0[14] = sub_472E8(*(void *)(v12 + 64));
  v0[15] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v13, v14, v15);
}

#error "427D0: call analysis failed (funcsize=85)"

uint64_t sub_428B8()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_42994()
{
  sub_2B7FC();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_7424(&qword_E9AA0);
  uint64_t result = sub_C844(v1, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_4726C();
    sub_46830(v1, v4, &qword_E9AA0);
    sub_7424(&qword_E7F40);
    sub_B31E0();
    sub_47168();
    v5();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_47158();
    return v6();
  }
  return result;
}

uint64_t sub_42A98()
{
  sub_AC48();
  uint64_t v1 = sub_46E50();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_42B2C()
{
  sub_7FDC();
  sub_47308(v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = sub_7424(&qword_E9AB0);
  sub_13294(v8);
  v0[9] = sub_131EC();
  uint64_t v9 = sub_7424(&qword_E76F0);
  sub_13294(v9);
  v0[10] = sub_131EC();
  uint64_t v10 = sub_B17F0();
  v0[11] = v10;
  sub_FC60(v10);
  v0[12] = v11;
  v0[14] = sub_472E8(*(void *)(v12 + 64));
  v0[15] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v13, v14, v15);
}

#error "42C8C: call analysis failed (funcsize=85)"

uint64_t sub_42D74()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_42E50()
{
  sub_2B7FC();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_7424(&qword_E9AE0);
  uint64_t result = sub_C844(v1, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_4726C();
    sub_46830(v1, v4, &qword_E9AE0);
    sub_7424(&qword_E7F40);
    sub_B31E0();
    sub_47168();
    v5();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_47158();
    return v6();
  }
  return result;
}

uint64_t sub_42F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 80) = a5;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a3;
  *(double *)(v6 + 48) = a6;
  *(void *)(v6 + 40) = a1;
  sub_7424(&qword_E76F0);
  *(void *)(v6 + 88) = swift_task_alloc();
  uint64_t v7 = sub_B17F0();
  *(void *)(v6 + 96) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v6 + 104) = v8;
  *(void *)(v6 + 112) = *(void *)(v8 + 64);
  *(void *)(v6 + 120) = swift_task_alloc();
  *(void *)(v6 + 128) = swift_task_alloc();
  return _swift_task_switch(sub_43068, 0, 0);
}

#error "43110: call analysis failed (funcsize=87)"

uint64_t sub_431D4()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

void sub_432B0()
{
  sub_FD60();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v0 + 24);
    sub_7424(&qword_E7F40);
    sub_B31E0();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
    v7(v6, v5, v1);
  }
}

uint64_t sub_433B4()
{
  sub_AC48();
  uint64_t v0 = sub_46E50();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v2();
}

uint64_t sub_4343C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  *(void *)(v6 + 64) = a4;
  *(void *)(v6 + 72) = a5;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = a3;
  *(double *)(v6 + 40) = a6;
  *(void *)(v6 + 32) = a1;
  sub_7424(&qword_E76F0);
  *(void *)(v6 + 80) = swift_task_alloc();
  uint64_t v7 = sub_B17F0();
  *(void *)(v6 + 88) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v6 + 96) = v8;
  *(void *)(v6 + 104) = *(void *)(v8 + 64);
  *(void *)(v6 + 112) = swift_task_alloc();
  *(void *)(v6 + 120) = swift_task_alloc();
  return _swift_task_switch(sub_43550, 0, 0);
}

#error "43604: call analysis failed (funcsize=93)"

uint64_t sub_436D4()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

void sub_437B0()
{
  sub_FD60();
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 16);
    uint64_t v6 = v1 & 1;
    sub_7424(&qword_E9AF0);
    sub_7424(&qword_E7F40);
    sub_B31E0();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
    v7(v5, v6);
  }
}

uint64_t sub_438C0()
{
  sub_AC48();
  uint64_t v1 = sub_46E50();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_4394C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(double *)(v6 + 24) = a6;
  *(void *)(v6 + 16) = a1;
  sub_7424(&qword_E76F0);
  *(void *)(v6 + 64) = swift_task_alloc();
  uint64_t v7 = sub_B17F0();
  *(void *)(v6 + 72) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v6 + 80) = v8;
  *(void *)(v6 + 88) = *(void *)(v8 + 64);
  *(void *)(v6 + 96) = swift_task_alloc();
  *(void *)(v6 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_43A60, 0, 0);
}

#error "43B08: call analysis failed (funcsize=88)"

uint64_t sub_43BCC()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

void sub_43CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_47240();
  sub_2B7FC();
  if (*(unsigned char *)(v10 + 128) == 2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(v10 + 104);
    uint64_t v12 = *(void *)(v10 + 72);
    uint64_t v13 = *(void *)(v10 + 80);
    sub_7424(&qword_E7F40);
    sub_B31E0();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_471E8();
    v16(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
  }
}

uint64_t sub_43D90()
{
  sub_AC48();
  uint64_t v1 = sub_46E50();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3(0);
}

uint64_t sub_43E20(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  void *v6 = v4;
  v6[1] = sub_43EFC;
  return v8(a1);
}

uint64_t sub_43EFC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_47158();
  return v3();
}

uint64_t sub_43FBC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  void *v6 = v4;
  v6[1] = sub_46BE4;
  return v8(a1);
}

uint64_t sub_44098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 40) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_44174;
  return v6(v3 + 16);
}

uint64_t sub_44174()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_4423C()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_4425C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_44338;
  return v6(v3 + 16);
}

uint64_t sub_44338()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_44400()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_44420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_444FC;
  return v6(v3 + 24);
}

uint64_t sub_444FC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_445C4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_445E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_7424(&qword_E76F0);
  uint64_t v8 = sub_13294(v7);
  __chkstk_darwin(v8);
  sub_470CC(v9, v14);
  uint64_t v10 = sub_B3160();
  if (sub_C844(v4, 1, v10) == 1)
  {
    sub_1DC94(v4);
  }
  else
  {
    sub_B3150();
    sub_472D4();
    uint64_t v11 = sub_47258();
    v12(v11);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_B3110();
    swift_unknownObjectRelease();
  }
  sub_7424(a4);
  swift_task_create();
  return swift_release();
}

uint64_t sub_4475C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_7424(&qword_E76F0);
  uint64_t v6 = sub_13294(v5);
  __chkstk_darwin(v6);
  sub_470CC(v7, v12);
  uint64_t v8 = sub_B3160();
  if (sub_C844(v3, 1, v8) == 1)
  {
    sub_1DC94(v3);
  }
  else
  {
    sub_B3150();
    sub_472D4();
    uint64_t v9 = sub_47258();
    v10(v9);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_B3110();
    swift_unknownObjectRelease();
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_448D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = sub_B2D30();
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  return _swift_task_switch(sub_44994, 0, 0);
}

uint64_t sub_44994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_46E18();
  sub_FD60();
  sub_B1780();
  if (v12 <= 0.0)
  {
    sub_B31A0();
    if (qword_E6D58 == -1)
    {
LABEL_10:
      sub_46DBC();
      uint64_t v28 = sub_46BE8(v27, (uint64_t)qword_F5360);
      v29(v28);
      sub_46CAC();
      swift_bridgeObjectRelease();
      sub_46C4C();
      v30._countAndFlagsBits = sub_46D90();
      sub_46DA0(v30, (uint64_t)"] Asynchronous Task has TimedOut!");
      sub_ABC4();
      sub_46C1C(v31, v32, (uint64_t)"withTimeout(_:timeoutAfter:functionName:)");
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_46C74();
      v34(v33);
      sub_45CAC();
      sub_46FF4();
      sub_46F58();
      swift_task_dealloc();
      sub_ABD0();
      sub_46CCC();
      return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12);
    }
LABEL_16:
    swift_once();
    goto LABEL_10;
  }
  sub_46E30(v12, 1000000000.0);
  if (v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_47188();
  if (v14 ^ v15 | v13)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_46F70();
  if (!v14) {
    goto LABEL_15;
  }
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)sub_47140(v16);
  *uint64_t v17 = v18;
  v17[1] = sub_44B54;
  sub_4714C();
  sub_46CCC();
  return static Task<>.sleep(nanoseconds:)(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12);
}

uint64_t sub_44B54()
{
  sub_AC48();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_47080();
    return v7();
  }
  else
  {
    sub_AC10();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_44C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_46E18();
  sub_FD60();
  uint64_t v13 = *(void *)(v12 + 72);
  sub_B31A0();
  if (!v13)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_46DBC();
    uint64_t v15 = sub_46BE8(v14, (uint64_t)qword_F5360);
    v16(v15);
    sub_46CAC();
    swift_bridgeObjectRelease();
    sub_46C4C();
    v17._countAndFlagsBits = sub_46D90();
    sub_46DA0(v17, (uint64_t)"] Asynchronous Task has TimedOut!");
    sub_ABC4();
    sub_46C1C(v18, v19, (uint64_t)"withTimeout(_:timeoutAfter:functionName:)");
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_46C74();
    v21(v20);
    sub_45CAC();
    sub_46FF4();
    sub_46F58();
  }
  swift_task_dealloc();
  sub_ABD0();
  sub_46CCC();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12);
}

uint64_t sub_44D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = sub_B2D30();
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  return _swift_task_switch(sub_44E40, 0, 0);
}

uint64_t sub_44E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_46E18();
  sub_FD60();
  sub_B1780();
  if (v12 <= 0.0)
  {
    sub_B31A0();
    if (qword_E6D58 == -1)
    {
LABEL_10:
      sub_46DBC();
      uint64_t v28 = sub_46BE8(v27, (uint64_t)qword_F5360);
      v29(v28);
      sub_46CAC();
      swift_bridgeObjectRelease();
      sub_46C4C();
      v30._countAndFlagsBits = sub_46D90();
      sub_46DA0(v30, (uint64_t)"] Asynchronous Task has TimedOut!");
      sub_ABC4();
      sub_46C1C(v31, v32, (uint64_t)"withTimeout(_:timeoutAfter:functionName:)");
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_46C74();
      v34(v33);
      sub_45CAC();
      sub_46FF4();
      sub_46F58();
      swift_task_dealloc();
      sub_ABD0();
      sub_46CCC();
      return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12);
    }
LABEL_16:
    swift_once();
    goto LABEL_10;
  }
  sub_46E30(v12, 1000000000.0);
  if (v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_47188();
  if (v14 ^ v15 | v13)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_46F70();
  if (!v14) {
    goto LABEL_15;
  }
  uint64_t v16 = swift_task_alloc();
  Swift::String v17 = (void *)sub_47140(v16);
  *Swift::String v17 = v18;
  v17[1] = sub_45000;
  sub_4714C();
  sub_46CCC();
  return static Task<>.sleep(nanoseconds:)(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12);
}

uint64_t sub_45000()
{
  sub_AC48();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_47080();
    return v7();
  }
  else
  {
    sub_AC10();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_45110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v5[2] = a3;
  uint64_t v6 = sub_B2D30();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_44994, 0, 0);
}

uint64_t sub_451D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v5[2] = a3;
  uint64_t v6 = sub_B2D30();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_45298, 0, 0);
}

uint64_t sub_45298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_46E18();
  sub_FD60();
  sub_B1780();
  if (v12 <= 0.0)
  {
    sub_B31A0();
    if (qword_E6D58 == -1)
    {
LABEL_10:
      sub_46DBC();
      uint64_t v28 = sub_46BE8(v27, (uint64_t)qword_F5360);
      v29(v28);
      sub_46CAC();
      swift_bridgeObjectRelease();
      sub_46C4C();
      v30._countAndFlagsBits = sub_46D90();
      sub_46DA0(v30, (uint64_t)"] Asynchronous Task has TimedOut!");
      sub_ABC4();
      sub_46C1C(v31, v32, (uint64_t)"withTimeout(_:timeoutAfter:functionName:)");
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_46C74();
      v34(v33);
      sub_45CAC();
      sub_46FF4();
      sub_46F58();
      swift_task_dealloc();
      sub_46CCC();
      return v37(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12);
    }
LABEL_16:
    swift_once();
    goto LABEL_10;
  }
  sub_46E30(v12, 1000000000.0);
  if (v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_47188();
  if (v14 ^ v15 | v13)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_46F70();
  if (!v14) {
    goto LABEL_15;
  }
  uint64_t v16 = swift_task_alloc();
  Swift::String v17 = (void *)sub_47140(v16);
  *Swift::String v17 = v18;
  v17[1] = sub_45460;
  sub_4714C();
  sub_46CCC();
  return static Task<>.sleep(nanoseconds:)(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12);
}

uint64_t sub_45460()
{
  sub_AC48();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7(0);
  }
  else
  {
    sub_AC10();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_4557C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_46E18();
  sub_FD60();
  uint64_t v13 = *(void *)(v12 + 72);
  sub_B31A0();
  if (!v13)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_46DBC();
    uint64_t v15 = sub_46BE8(v14, (uint64_t)qword_F5360);
    v16(v15);
    sub_46CAC();
    swift_bridgeObjectRelease();
    sub_46C4C();
    v17._countAndFlagsBits = sub_46D90();
    sub_46DA0(v17, (uint64_t)"] Asynchronous Task has TimedOut!");
    sub_ABC4();
    sub_46C1C(v18, v19, (uint64_t)"withTimeout(_:timeoutAfter:functionName:)");
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_46C74();
    v21(v20);
    sub_45CAC();
    sub_46FF4();
    sub_46F58();
  }
  swift_task_dealloc();
  sub_46CCC();
  return v24(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12);
}

void sub_4569C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_B2F20();
  swift_bridgeObjectRelease();
  [a3 setDesiredAccuracy:v4];
}

uint64_t sub_45700(void *a1)
{
  id v1 = [a1 status];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_B2F50();

  return v3;
}

uint64_t sub_45764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_45834;
  return sub_42F54(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_45834()
{
  sub_4731C();
  sub_46E44();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_7FC4();
  uint64_t v9 = v8;
  sub_2B6A4();
  *uint64_t v10 = v9;
  uint64_t v11 = *v1;
  sub_AB94();
  *uint64_t v12 = v11;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v13 = *(void *)(v9 + 16);
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v5;
    *(unsigned char *)(v13 + 16) = v3;
  }
  sub_472C0();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21);
}

uint64_t sub_4591C()
{
  sub_2B7FC();
  sub_46FCC();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_1DEA8(v0);
  *id v1 = v2;
  v1[1] = sub_A7BC;
  v4.n128_f64[0] = sub_46D64();
  return v3(v4);
}

uint64_t sub_459C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_46BD4;
  return sub_44098(a2, a3, a4);
}

uint64_t sub_45A7C()
{
  sub_4731C();
  sub_46E44();
  sub_46FE4();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_1DEA8(v0);
  *id v1 = v2;
  v1[1] = sub_AB58;
  sub_46D48();
  sub_472C0();
  return v8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_45B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_46BD4;
  return sub_45110(a2, a3, a4, a5, a6);
}

uint64_t sub_45BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_47240();
  sub_2B7FC();
  uint64_t v10 = sub_47200();
  sub_FC60(v10);
  sub_46CE4();
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)sub_1DEA8(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_AB58;
  sub_46C8C();
  sub_471E8();
  return v20(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
}

unint64_t sub_45CAC()
{
  unint64_t result = qword_E99E0;
  if (!qword_E99E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_E99E0);
  }
  return result;
}

uint64_t sub_45CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_45DC8;
  return sub_4343C(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_45DC8()
{
  sub_46E44();
  char v3 = v2;
  uint64_t v5 = v4;
  sub_7FC4();
  uint64_t v7 = v6;
  sub_2B6A4();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_AB94();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v11 = *(void *)(v7 + 16);
    *(void *)uint64_t v11 = v5;
    *(unsigned char *)(v11 + 8) = v3 & 1;
  }
  uint64_t v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

uint64_t sub_45EB8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_46BD0;
  return sub_4425C(a2, a3, a4);
}

uint64_t sub_45F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_46BD0;
  return sub_45110(a2, a3, a4, a5, a6);
}

uint64_t sub_46038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_46108;
  return sub_4394C(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_46108()
{
  sub_AC48();
  char v3 = v2;
  sub_7FC4();
  uint64_t v5 = v4;
  sub_2B6A4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_AB94();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(unsigned char **)(v5 + 16) = v3 & 1;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_461E8()
{
  sub_2B7FC();
  sub_46FCC();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_1DEA8(v0);
  *id v1 = v2;
  v1[1] = sub_AB58;
  v4.n128_f64[0] = sub_46D64();
  return v3(v4);
}

uint64_t sub_4628C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_46BD8;
  return sub_44420(a2, a3, a4);
}

uint64_t sub_46348()
{
  sub_4731C();
  sub_46E44();
  sub_46FE4();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_1DEA8(v0);
  *id v1 = v2;
  v1[1] = sub_AB58;
  sub_46D48();
  sub_472C0();
  return v8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_463E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_46BD8;
  return sub_451D4(a2, a3, a4, a5, a6);
}

uint64_t sub_464B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_47240();
  sub_2B7FC();
  uint64_t v10 = sub_47200();
  sub_FC60(v10);
  sub_46CE4();
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)sub_1DEA8(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_AB58;
  sub_46C8C();
  sub_471E8();
  return v20(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
}

uint64_t sub_4657C()
{
  sub_46E44();
  sub_46FE4();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_1DEA8(v0);
  *id v1 = v2;
  v1[1] = sub_AB58;
  uint64_t v3 = sub_46D48();
  return sub_43E20(v3, v4, v5, v6);
}

uint64_t sub_46618()
{
  sub_4731C();
  sub_46E44();
  uint64_t v0 = sub_47200();
  sub_FC60(v0);
  sub_46CE4();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DEA8(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_AB58;
  sub_46C8C();
  sub_472C0();
  return sub_448D0(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_466D8()
{
  sub_46E44();
  sub_46FE4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DEA8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_AB58;
  uint64_t v3 = sub_46D48();
  return sub_43FBC(v3, v4, v5, v6);
}

uint64_t sub_46774()
{
  sub_4731C();
  sub_46E44();
  uint64_t v0 = sub_47200();
  sub_FC60(v0);
  sub_46CE4();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DEA8(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_AB58;
  sub_46C8C();
  sub_472C0();
  return sub_44D7C(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_46830(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_7424(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_46894()
{
  sub_2B7FC();
  sub_46FCC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DEA8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_AB58;
  v4.n128_f64[0] = sub_46D64();
  return v3(v4);
}

uint64_t sub_4693C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_4697C()
{
  sub_4731C();
  sub_46E44();
  sub_46FE4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DEA8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_AB58;
  sub_46D48();
  sub_472C0();
  return v8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_46A1C()
{
  uint64_t v1 = sub_B17F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_46B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_47240();
  sub_2B7FC();
  uint64_t v10 = sub_47200();
  sub_FC60(v10);
  sub_46CE4();
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)sub_1DEA8(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_AB58;
  sub_46C8C();
  sub_471E8();
  return v20(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
}

uint64_t sub_46BE8(uint64_t a1, uint64_t a2)
{
  sub_B378(v3, a2);
  return v2;
}

void sub_46C1C(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  sub_8C2F0(a1, v3, 0xD000000000000029, a2, 0xD000000000000029, (a3 - 32) | 0x8000000000000000);
}

void sub_46C4C()
{
  v3._countAndFlagsBits = v1;
  v3._object = v0;
  sub_B3020(v3);
}

uint64_t sub_46C74()
{
  return v0;
}

uint64_t sub_46C8C()
{
  return v0;
}

void sub_46CAC()
{
  sub_B34C0(36);
}

uint64_t sub_46D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_AA40(v9, 1, 1, v10);
  return a9;
}

uint64_t sub_46D48()
{
  return v0;
}

double sub_46D64()
{
  return v0;
}

unint64_t sub_46D90()
{
  return 0xD000000000000021;
}

void sub_46DA0(Swift::String a1@<X1:X0>, uint64_t a2@<X8>)
{
  a1._object = (void *)((a2 - 32) | 0x8000000000000000);
  sub_B3020(a1);
}

uint64_t sub_46DF4(uint64_t a1)
{
  uint64_t result = a1 + v1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

double sub_46E30(double a1, double a2)
{
  return a1 * a2;
}

uint64_t sub_46E50()
{
  return v0;
}

uint64_t sub_46E64()
{
  return sub_B1770();
}

uint64_t sub_46EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_AA40(v10, 1, 1, v11);
  return a10;
}

void sub_46F00(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_8C2F0(a1, a2, 0xD00000000000002FLL, (a3 - 32) | 0x8000000000000000, 0x3A5F286863746566, 0xE900000000000029);
}

uint64_t sub_46F38()
{
  return sub_B37E0();
}

uint64_t sub_46F58()
{
  return swift_willThrow();
}

uint64_t sub_46FA8(uint64_t a1)
{
  return sub_AA40(v1, 1, 1, a1);
}

uint64_t sub_46FF4()
{
  return swift_allocError();
}

unint64_t sub_4700C@<X0>(int a1@<W0>, int a2@<W8>)
{
  return sub_852C8(v4, v2, v3, a2 | (a1 << 8));
}

uint64_t sub_4703C(uint64_t a1)
{
  uint64_t result = a1 + v1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_47060()
{
  return v0;
}

uint64_t sub_47080()
{
  return v0 + 8;
}

void sub_47090(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_8C308(a1, a2, a3, a4, 0xD000000000000015, (a5 - 32) | 0x8000000000000000);
}

uint64_t sub_470B0(uint64_t a1, uint64_t a2)
{
  return sub_4475C(v2, a2, v3);
}

uint64_t sub_470CC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_1DC2C(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t sub_470F8(void *a1)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v1;
  a1[5] = v2;
  return swift_retain();
}

void sub_47118(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_8C308(a1, (a3 - 32) | 0x8000000000000000, a2, v3 | 0x8000000000000000, 0xD000000000000015, v4 | 0x8000000000000000);
}

uint64_t sub_47140(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t sub_4714C()
{
  return v0;
}

uint64_t sub_47158()
{
  return v0 + 8;
}

uint64_t sub_47194()
{
  return 0;
}

uint64_t sub_471AC()
{
  return swift_allocObject();
}

uint64_t sub_471C4(uint64_t a1)
{
  return sub_AA40(v1, 1, 1, a1);
}

uint64_t sub_47200()
{
  return sub_B17F0();
}

uint64_t sub_47224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = (void *)(v12 + v13);
  *uint64_t v15 = a11;
  v15[1] = a12;
  return swift_bridgeObjectRetain();
}

uint64_t sub_47258()
{
  return v0;
}

uint64_t sub_4728C()
{
  return v0;
}

uint64_t sub_472A0(void *a1)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v1;
  a1[5] = v2;
  return swift_retain();
}

uint64_t sub_472E8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 104) = a1;
  return swift_task_alloc();
}

uint64_t sub_47308(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  *(void *)(v7 + 56) = a5;
  *(void *)(v7 + 64) = a6;
  *(void *)(v7 + 40) = a3;
  *(void *)(v7 + 48) = a4;
  *(double *)(v7 + 32) = a7;
  *(void *)(v7 + 16) = result;
  *(void *)(v7 + 24) = a2;
  return result;
}

void *sub_47330(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      unint64_t v4 = v1 & 0xC000000000000001;
      uint64_t v5 = v1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v19 = v1;
      p_ivar_base_size = &BaseFlowSpec.ivar_base_size;
      while (v4)
      {
        id v7 = (id)sub_B34F0();
LABEL_7:
        uint64_t v8 = v7;
        unint64_t v9 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_25;
        }
        if (!objc_msgSend(v7, *((SEL *)p_ivar_base_size + 347)))
        {
          uint64_t v10 = v2;
          uint64_t v11 = sub_5618(v8, (SEL *)&selRef_selfParticipantStatus);
          uint64_t v13 = v12;
          uint64_t v14 = sub_B2F50();
          if (v13)
          {
            if (v11 == v14 && v13 == v15)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_20;
            }
            char v17 = sub_B37E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17)
            {

LABEL_20:
              uint64_t v2 = v10;
              unint64_t v1 = v19;
              p_ivar_base_size = (_DWORD *)(&BaseFlowSpec + 8);
              goto LABEL_21;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          sub_B3530();
          sub_B3560();
          sub_B3570();
          sub_B3540();
          goto LABEL_20;
        }

LABEL_21:
        ++v3;
        if (v9 == v2) {
          goto LABEL_27;
        }
      }
      if (v3 < *(void *)(v5 + 16)) {
        break;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      uint64_t v2 = sub_B3620();
      if (!v2) {
        goto LABEL_27;
      }
    }
    id v7 = *(id *)(v1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_47534(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      unint64_t v8 = a1 & 0xC000000000000001;
      while (v8)
      {
        id v9 = (id)sub_B34F0();
LABEL_7:
        uint64_t v10 = v9;
        unint64_t v11 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_17;
        }
        uint64_t v15 = v9;
        char v12 = sub_51210(&v15, a2);
        if (v3)
        {
          swift_bridgeObjectRelease();

          uint64_t v13 = v16;
          swift_release();
          return v13;
        }
        if (v12)
        {
          sub_B3530();
          sub_B3560();
          uint64_t v3 = 0;
          sub_B3570();
          sub_B3540();
          unint64_t v8 = a1 & 0xC000000000000001;
        }
        else
        {
        }
        ++v7;
        if (v11 == v6)
        {
          uint64_t v13 = v16;
          goto LABEL_20;
        }
      }
      if (v7 < *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8))) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v6 = sub_B3620();
      if (!v6) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(a1 + 8 * v7 + 32);
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v13 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();

  return v13;
}

uint64_t sub_476E8()
{
  sub_AC48();
  v0[219] = v1;
  v0[213] = v2;
  v0[207] = v3;
  v0[201] = v4;
  type metadata accessor for DBCalendarState();
  v0[220] = swift_task_alloc();
  sub_7424(&qword_E7D10);
  v0[221] = sub_527CC();
  v0[222] = swift_task_alloc();
  uint64_t v5 = sub_B17F0();
  v0[223] = v5;
  sub_FC60(v5);
  v0[224] = v6;
  v0[225] = *(void *)(v7 + 64);
  v0[226] = sub_527CC();
  v0[227] = swift_task_alloc();
  uint64_t v8 = sub_7424(&qword_E9B68);
  sub_FC60(v8);
  v0[228] = v9;
  v0[229] = *(void *)(v10 + 64);
  v0[230] = sub_527CC();
  uint64_t v11 = swift_task_alloc();
  v0[231] = v11;
  uint64_t v14 = (char *)&dword_ED090 + dword_ED090;
  char v12 = (void *)swift_task_alloc();
  v0[232] = v12;
  *char v12 = v0;
  v12[1] = sub_47894;
  return ((uint64_t (*)(uint64_t, void))v14)(v11, 0);
}

uint64_t sub_47894()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_2B6A4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_47960()
{
  if (qword_E6C50 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)(v0 + 1848);
  uint64_t v23 = *(void *)(v0 + 1824);
  uint64_t v24 = *(void *)(v0 + 1832);
  uint64_t v1 = *(void *)(v0 + 1816);
  uint64_t v19 = v1;
  uint64_t v20 = *(void *)(v0 + 1840);
  uint64_t v27 = *(void *)(v0 + 1808);
  uint64_t v22 = *(void *)(v0 + 1800);
  uint64_t v2 = *(void *)(v0 + 1792);
  uint64_t v3 = *(void *)(v0 + 1784);
  uint64_t v28 = *(void **)(v0 + 1752);
  uint64_t v4 = *(void *)(v0 + 1704);
  uint64_t v5 = *(void *)(v0 + 1656);
  uint64_t v6 = sub_B2D30();
  *(void *)(v0 + 1864) = sub_B378(v6, (uint64_t)qword_E9B48);
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C308(0xD000000000000019, v7, v8, v9, v10, v11);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v26(v1, v5, v3);
  sub_2AF80(v21, v20, &qword_E9B68);
  sub_A8B4(v4, v0 + 1480);
  unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v13 = (v12 + v22 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v14 = (v24 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 1872) = v15;
  uint64_t v25 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  v25(v15 + v12, v19, v3);
  sub_2B53C(v20, v15 + v13, &qword_E9B68);
  sub_B3B0((long long *)(v0 + 1480), v15 + v14);
  swift_retain();
  sub_20D6C(&qword_E9B80);
  swift_asyncLet_begin();
  v26(v27, v5, v3);
  uint64_t v16 = swift_allocObject();
  *(void *)(v0 + 1880) = v16;
  v25(v16 + v12, v27, v3);
  *(void *)(v16 + ((v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
  id v17 = v28;
  swift_retain();
  sub_20D6C(&qword_E9B98);
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 656, v0 + 1336, sub_47CB8, v0 + 1520);
}

uint64_t sub_47CB8()
{
  return sub_FCA0((uint64_t)sub_47CCC);
}

uint64_t sub_47CCC()
{
  uint64_t v1 = *(void *)(v0 + 1336);
  *(void *)(v0 + 1888) = v1;
  if (*(unsigned char *)(v0 + 1381) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 1608);
    swift_errorRetain();
    sub_7A1C();
    sub_ABC4();
    sub_52868(v3, v4, v5, v6, (uint64_t)"getNextEvents(now:aceServiceInvoker:knowledgeStore:ppEventStore:)");
    *uint64_t v2 = v1;
    sub_7424(&qword_E8B98);
    swift_storeEnumTagMultiPayload();
    return _swift_asyncLet_finish(v0 + 16, v0 + 1560, sub_47EE8, v0 + 1712);
  }
  else
  {
    uint64_t v7 = *(unsigned __int8 *)(v0 + 1380);
    uint64_t v8 = *(unsigned int *)(v0 + 1376);
    unint64_t v9 = v8 | (v7 << 32);
    *(unsigned char *)(v0 + 1900) = v7;
    *(_DWORD *)(v0 + 1896) = v8;
    uint64_t v10 = *(void *)(v0 + 1368);
    *(void *)(v0 + 1904) = v10;
    uint64_t v11 = *(void *)(v0 + 1360);
    *(void *)(v0 + 1912) = v11;
    uint64_t v12 = *(void *)(v0 + 1352);
    *(void *)(v0 + 1920) = v12;
    uint64_t v13 = *(void *)(v0 + 1344);
    *(void *)(v0 + 1928) = v13;
    *(void *)(v0 + 1432) = v1;
    *(void *)(v0 + 1440) = v13;
    *(void *)(v0 + 1448) = v12;
    *(void *)(v0 + 1456) = v11;
    *(void *)(v0 + 1464) = v10;
    *(unsigned char *)(v0 + 1472) = v8 & 1;
    v14.i64[0] = 0xFFFFFFFFFFLL;
    v14.i64[1] = 0xFFFFFFFFFFLL;
    uint64x2_t v15 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v9), v14);
    int16x8_t v16 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v15, (uint64x2_t)xmmword_BE9F0), (int32x4_t)vshlq_u64(v15, (uint64x2_t)xmmword_BE9E0));
    *(int8x8_t *)v16.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v16), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v0 + 1473) = vmovn_s16(v16).u32[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_7A1C();
    sub_ABC4();
    sub_52868(v17, v18, v19, v20, (uint64_t)"getNextEvents(now:aceServiceInvoker:knowledgeStore:ppEventStore:)");
    return _swift_asyncLet_get(v0 + 16, v0 + 1560, sub_47F8C, v0 + 1296);
  }
}

uint64_t sub_47EE8()
{
  return sub_FCA0((uint64_t)sub_47EFC);
}

uint64_t sub_47EFC()
{
  sub_AC48();
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1336, sub_47F78, v0 + 1568);
}

uint64_t sub_47F78()
{
  return sub_FCA0((uint64_t)sub_52774);
}

uint64_t sub_47F8C()
{
  return sub_FCA0((uint64_t)sub_47FA0);
}

uint64_t sub_47FA0()
{
  uint64_t v1 = *(void *)(v0 + 1928);
  uint64_t v2 = *(void *)(v0 + 1920);
  uint64_t v3 = *(void *)(v0 + 1912);
  uint64_t v4 = *(void *)(v0 + 1904);
  uint64_t v5 = *(void *)(v0 + 1888);
  uint64_t v6 = *(char **)(v0 + 1776);
  uint64_t v21 = *(void *)(v0 + 1768);
  uint64_t v22 = *(void *)(v0 + 1760);
  unint64_t v20 = *(unsigned int *)(v0 + 1896) | ((unint64_t)*(unsigned __int8 *)(v0 + 1900) << 32);
  uint64_t v23 = *(void *)(v0 + 1608);
  uint64_t v7 = *(void *)(v0 + 1560);
  *(void *)(v0 + 1384) = v5;
  *(void *)(v0 + 1392) = v1;
  *(void *)(v0 + 1400) = v2;
  *(void *)(v0 + 1408) = v3;
  *(void *)(v0 + 1416) = v4;
  *(_DWORD *)(v0 + 1424) = v20 & 0x1010101;
  *(unsigned char *)(v0 + 1428) = (v20 & 0x101010101010101) >> 32;
  sub_4A964(v5, v1, v2, v3, v4, v20, 0);
  swift_bridgeObjectRetain();
  sub_4A008(v7, v0 + 1384, v6);
  uint64_t v8 = sub_52784();
  sub_4A9B0(v8, v9, v10, v11, v12, v20, 0);
  swift_bridgeObjectRelease();
  sub_2AF80((uint64_t)v6, v21, &qword_E7D10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4A9FC((uint64_t *)(v0 + 1432), v22);
  uint64_t v13 = sub_52784();
  sub_4A9B0(v13, v14, v15, v16, v17, v20, 0);
  sub_17644((uint64_t)v6, &qword_E7D10);
  sub_2B53C(v0 + 1384, v23, &qword_E9BA0);
  uint64_t v18 = type metadata accessor for CalendarPreprocessingResult(0);
  sub_2B53C(v21, v23 + *(int *)(v18 + 20), &qword_E7D10);
  sub_51654(v22, v23 + *(int *)(v18 + 24), (void (*)(void))type metadata accessor for DBCalendarState);
  sub_7424(&qword_E8B98);
  swift_storeEnumTagMultiPayload();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1560, sub_481DC, v0 + 1616);
}

uint64_t sub_481DC()
{
  return sub_FCA0((uint64_t)sub_481F0);
}

uint64_t sub_481F0()
{
  sub_AC48();
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1336, sub_4826C, v0 + 1664);
}

uint64_t sub_4826C()
{
  return sub_FCA0((uint64_t)sub_48280);
}

uint64_t sub_48280()
{
  sub_17644(*(void *)(v0 + 1848), &qword_E9B68);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_48378()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_E9B48);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_E9B48);
  if (qword_E6D68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F5390);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_48440()
{
  uint64_t result = sub_86264((uint64_t)&off_DB3E0);
  qword_F5098 = result;
  return result;
}

uint64_t sub_48468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 72) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_48524;
  return sub_48A0C(v4 + 16, a2, a3, a4);
}

uint64_t sub_48524()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_2B6A4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_485F0()
{
  sub_7FDC();
  sub_2B53C(v0 + 16, *(void *)(v0 + 64), &qword_E9B80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4865C()
{
  uint64_t v1 = sub_B17F0();
  sub_7870();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v7 = v5 + *(void *)(v6 + 64);
  uint64_t v8 = sub_7424(&qword_E9B68);
  sub_FC60(v8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v14(v0 + v5, v1);
  uint64_t v15 = v0 + v11;
  uint64_t v16 = type metadata accessor for DBCalendarState();
  if (!sub_C844(v0 + v11, 1, v16))
  {
    uint64_t v22 = v13;
    v14(v0 + v11, v1);
    swift_bridgeObjectRelease();
    uint64_t v17 = v15 + *(int *)(v16 + 24);
    if (!sub_C844(v17, 1, v1)) {
      v14(v17, v1);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v15 + *(int *)(v16 + 44);
    uint64_t v13 = v22;
    if (!sub_C844(v18, 1, v1)) {
      v14(v18, v1);
    }
  }
  unint64_t v19 = (v13 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 40;
  sub_74F8(v0 + v19);

  return _swift_deallocObject(v0, v20, v4 | v10 | 7);
}

uint64_t sub_48818()
{
  sub_AC48();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_B17F0();
  sub_FC60(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = v7 + *(void *)(v8 + 64);
  uint64_t v10 = sub_7424(&qword_E9B68);
  sub_FC60(v10);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = (v9 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = v0 + v7;
  uint64_t v17 = v0 + v15;
  uint64_t v18 = v0 + ((*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v19;
  *unint64_t v19 = v2;
  v19[1] = sub_48944;
  return sub_48468(v4, v16, v17, v18);
}

uint64_t sub_48944()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_2B6A4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_48A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  uint64_t v5 = sub_B1950();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v6 = sub_B17F0();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  sub_7424(&qword_E7D38);
  v4[24] = swift_task_alloc();
  uint64_t v7 = sub_B2D30();
  v4[25] = v7;
  v4[26] = *(void *)(v7 - 8);
  v4[27] = swift_task_alloc();
  return _swift_task_switch(sub_48BB8, 0, 0);
}

uint64_t sub_48BB8()
{
  sub_7FDC();
  if (qword_E6C50 != -1) {
    swift_once();
  }
  v0[28] = sub_B378(v0[25], (uint64_t)qword_E9B48);
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C308(0xD000000000000018, v1, v2, v3, v4, v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[29] = (uint64_t)v6;
  void *v6 = v0;
  v6[1] = sub_48CD8;
  return sub_72B00();
}

uint64_t sub_48CD8()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 240) = v3;
  *(unsigned char *)(v1 + 62) = v4;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_48DAC()
{
  uint64_t v3 = *(void *)(v0 + 240);
  if (*(unsigned char *)(v0 + 62))
  {
    uint64_t v27 = *(void *)(v0 + 216);
    unint64_t v6 = *(void *)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 208);
    (*(void (**)(uint64_t, void, unint64_t))(v28 + 16))(v27, *(void *)(v0 + 224), v6);
    swift_errorRetain();
    sub_B34C0(42);
    swift_bridgeObjectRelease();
    unint64_t v1 = 0xD00000000000002ALL;
    swift_getErrorValue();
    v83._countAndFlagsBits = sub_B3860();
    sub_B3020(v83);
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_8C308(v29, 0x80000000000B7FE0, 0xD00000000000002ALL, v30, v31, 0x80000000000B7F10);
    swift_bridgeObjectRelease();
    char v76 = 1;
    sub_F95C(v3, 1);
    uint64_t v32 = *(void (**)(uint64_t, unint64_t))(v28 + 8);
    uint64_t v11 = (const char *)(v28 + 8);
    v32(v27, v6);
    sub_527B4();
    uint64_t v33 = *(void *)(v0 + 240);
    goto LABEL_26;
  }
  uint64_t v4 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  sub_7A1C();
  unint64_t v5 = (unint64_t)"Fetching upcoming events.";
  unint64_t v6 = (unint64_t)"fetching upcoming events";
  sub_8C308(v7, v8, 0xD00000000000002ALL, 0x80000000000B7B60, v9, 0x80000000000B7F10);
  uint64_t v10 = sub_5283C();
  uint64_t v11 = (const char *)sub_4B1E4(v10);
  unint64_t v2 = v12;
  sub_F95C(v3, 0);
  uint64_t v13 = (void *)swift_task_alloc();
  v13[2] = v4;
  swift_bridgeObjectRetain();
  unint64_t v14 = (unint64_t)sub_6C1BC(sub_525F8, v13, (unint64_t)v11);
  swift_task_dealloc();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_B3620();
    swift_bridgeObjectRelease();
    if (v55)
    {
LABEL_4:
      sub_21550(0, (v14 & 0xC000000000000001) == 0, v14);
      unint64_t v75 = v2;
      unint64_t v68 = (unint64_t)v11;
      if ((v14 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v72 = (id)sub_B34F0();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v72 = *(id *)(v14 + 32);
      }
      uint64_t v17 = *(void *)(v0 + 216);
      uint64_t v16 = *(void *)(v0 + 224);
      uint64_t v18 = *(void *)(v0 + 200);
      uint64_t v19 = *(void *)(v0 + 208);
      uint64_t v73 = (const char *)v14;
      uint64_t v20 = sub_4B7C8(v14);
      unint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
      v69(v17, v16, v18);
      sub_527E8();
      swift_bridgeObjectRelease();
      uint64_t v66 = *(const char **)(v20 + 16);
      unint64_t v67 = v20;
      *(void *)(v0 + 88) = v66;
      v79._countAndFlagsBits = sub_B37C0();
      sub_B3020(v79);
      swift_bridgeObjectRelease();
      v80._object = (void *)0x80000000000B7F80;
      v80._countAndFlagsBits = 0xD00000000000001DLL;
      sub_B3020(v80);
      sub_8C308(0x20646E756F46, 0xE600000000000000, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B7F10);
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void (**)(uint64_t))(v19 + 8);
      uint64_t v22 = sub_52814();
      v21(v22);
      uint64_t v23 = sub_4B7C8(v75);
      swift_bridgeObjectRelease();
      v69(v17, v16, v18);
      sub_527E8();
      swift_bridgeObjectRelease();
      uint64_t v77 = v23;
      unint64_t v24 = *(void *)(v23 + 16);
      *(void *)(v0 + 96) = v24;
      v81._countAndFlagsBits = sub_B37C0();
      sub_B3020(v81);
      swift_bridgeObjectRelease();
      v82._object = (void *)0x80000000000B7FA0;
      v82._countAndFlagsBits = 0xD00000000000001DLL;
      sub_B3020(v82);
      sub_8C308(0x20646E756F46, 0xE600000000000000, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B7F10);
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_52814();
      v21(v25);
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_B3620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v26 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
      }
      id v34 = [v72 startDate];
      uint64_t v35 = *(void *)(v0 + 192);
      if (v34)
      {
        uint64_t v36 = v34;
        unint64_t v70 = v24;
        uint64_t v71 = v26;
        uint64_t v38 = *(void *)(v0 + 176);
        uint64_t v37 = *(void *)(v0 + 184);
        uint64_t v39 = *(void *)(v0 + 168);
        sub_B17C0();

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v35, v37, v39);
        sub_AA40(v35, 0, 1, v39);
        uint64_t result = sub_C844(v35, 1, v39);
        if (result != 1)
        {
          uint64_t v42 = *(void *)(v0 + 152);
          uint64_t v41 = *(void *)(v0 + 160);
          uint64_t v43 = *(void *)(v0 + 144);
          uint64_t v11 = *(const char **)(v0 + 128);
          sub_B1920();
          char v44 = sub_B18A0();
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
          sub_5283C();
          sub_52808();
          v45();
          char v46 = sub_84A80();
          unint64_t v1 = v71;
          char v47 = sub_4BE08(1, v71, (uint64_t)v11);
          swift_bridgeObjectRelease();
          if (v68 >> 62)
          {
            swift_bridgeObjectRetain();
            unint64_t v6 = sub_B3620();
            swift_bridgeObjectRelease();
            unint64_t v5 = v68;
            unint64_t v2 = v67;
          }
          else
          {
            unint64_t v6 = *(void *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFFF8));
            unint64_t v2 = v67;
            unint64_t v5 = (unint64_t)v73;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v48 = v6 - v71;
          if (!__OFSUB__(v6, v71))
          {
            uint64_t v49 = *(void *)(v0 + 240);
            uint64_t v50 = (v46 - 6) < 3u;
            uint64_t v51 = v48 > 0;
            char v52 = sub_4C700(1, v2, *(void *)(v0 + 128));
            sub_F95C(v49, 0);

            char v76 = 0;
            uint64_t v53 = 0x10000;
            if ((v47 & 1) == 0) {
              uint64_t v53 = 0;
            }
            uint64_t v54 = 0x100000000;
            if ((v52 & 1) == 0) {
              uint64_t v54 = 0;
            }
            unint64_t v6 = v53 & 0xFFFFFFFFFFFFFFFELL | v44 & 1 | (v50 << 8) | (v51 << 24) | v54;
            uint64_t v11 = v66;
            uint64_t v33 = v2;
            unint64_t v2 = v71;
            unint64_t v1 = v70;
            goto LABEL_26;
          }
          __break(1u);
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t result = sub_AA40(*(void *)(v0 + 192), 1, 1, *(void *)(v0 + 168));
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_4;
    }
  }
  if (!(v2 >> 62))
  {
    unint64_t v56 = v2;
    uint64_t v57 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    goto LABEL_23;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_B3620();
  swift_bridgeObjectRelease();
  unint64_t v56 = v2;
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v58 = *(void *)(v0 + 240);
  if (v57)
  {
    uint64_t v74 = *(void *)(v0 + 240);
    uint64_t v59 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_4B3DC(v56, v59, v0 + 16);
    uint64_t v33 = *(void *)(v0 + 16);
    uint64_t v77 = *(void *)(v0 + 24);
    uint64_t v11 = *(const char **)(v0 + 32);
    unint64_t v2 = *(void *)(v0 + 40);
    unint64_t v1 = *(void *)(v0 + 48);
    unint64_t v6 = *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int8 *)(v0 + 60) << 32);
    char v76 = *(unsigned char *)(v0 + 61);
    swift_bridgeObjectRelease();
    sub_F95C(v74, 0);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_7A1C();
    sub_8C308(v60, v61, 0xD00000000000002ALL, v5 | 0x8000000000000000, v62, v6 | 0x8000000000000000);
    sub_2A760();
    uint64_t v33 = swift_allocError();
    *uint64_t v63 = 2;
    sub_F95C(v58, 0);
    sub_527B4();
    char v76 = 1;
  }
LABEL_26:
  uint64_t v64 = *(void *)(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v64 = v33;
  *(void *)(v64 + 8) = v77;
  *(void *)(v64 + 16) = v11;
  *(void *)(v64 + 24) = v2;
  *(void *)(v64 + 32) = v1;
  *(unsigned char *)(v64 + 44) = BYTE4(v6);
  *(_DWORD *)(v64 + 40) = v6;
  *(unsigned char *)(v64 + 45) = v76;
  unint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
  return v65();
}

uint64_t sub_49684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  void *v6 = v3;
  v6[1] = sub_49724;
  return sub_498E8(a2, a3);
}

uint64_t sub_49724()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *unint64_t v2 = v1;
  *unint64_t v2 = *v0;
  *(void *)(v1 + 32) = v3;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_497F4()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_4981C()
{
  sub_AC48();
  uint64_t v1 = sub_B17F0();
  sub_FC60(v1);
  sub_5279C();
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_52778;
  uint64_t v3 = sub_52828();
  return sub_49684(v3, v4, v5);
}

uint64_t sub_498E8(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = sub_B2D30();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v4 = sub_B2A50();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v5 = sub_B17F0();
  v2[16] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[17] = v6;
  v2[18] = *(void *)(v6 + 64);
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_49A68, 0, 0);
}

uint64_t sub_49A68()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v5 = (void *)v0[9];
  uint64_t v6 = sub_13078();
  v7(v6);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v9 = (v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  v0[20] = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v8, v1, v3);
  *(void *)(v10 + v9) = v5;
  id v11 = v5;
  unint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  uint64_t v13 = sub_7424(&qword_E9B98);
  *unint64_t v12 = v0;
  v12[1] = sub_49BBC;
  v14.n128_u64[0] = 6.0;
  return withTimeout<A>(seconds:operation:)(v0 + 5, &unk_E9BB8, v10, v13, v14);
}

uint64_t sub_49BBC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_2B6A4();
  void *v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_49CA4()
{
  sub_AC48();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_49D28()
{
  uint64_t v1 = v0[22];
  swift_release();
  v0[6] = v1;
  swift_errorRetain();
  sub_7424(&qword_E7F40);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v0[10], (uint64_t)qword_E9B48);
    sub_7A1C();
    sub_ABC4();
    sub_52854();
    sub_8C2F0(v2, v3, v4, v5, v6, v7);
    uint64_t v8 = sub_5283C();
    v9(v8);
  }
  else
  {
    swift_errorRelease();
    if (qword_E6C50 != -1) {
      swift_once();
    }
    uint64_t v11 = v0[11];
    uint64_t v10 = v0[12];
    uint64_t v12 = v0[10];
    uint64_t v13 = sub_B378(v12, (uint64_t)qword_E9B48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
    sub_B34C0(39);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v22._countAndFlagsBits = sub_B3860();
    sub_B3020(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 46;
    v23._object = (void *)0xE100000000000000;
    sub_B3020(v23);
    sub_ABC4();
    sub_8C308(v14, 0x80000000000B7CA0, v15, v16, 0xD000000000000026, 0x80000000000B7CD0);
    swift_bridgeObjectRelease();
    sub_52808();
    v18(v17);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void *))v0[1];
  return v19(_swiftEmptyArrayStorage);
}

uint64_t sub_4A008@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v70 = sub_B1950();
  uint64_t v63 = *(void (***)(char *, uint64_t))(v70 - 8);
  __chkstk_darwin(v70);
  unint64_t v69 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for CalendarEvent(0);
  uint64_t v73 = *(void *)(v64 - 8);
  uint64_t v6 = __chkstk_darwin(v64);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v57 - v9;
  uint64_t v11 = sub_7424(&qword_E7D18);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v61 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v62 = (uint64_t)&v57 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v57 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v57 - v20;
  __chkstk_darwin(v19);
  Swift::String v23 = (char *)&v57 - v22;
  uint64_t v24 = sub_7424(&qword_E7D38);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_B17F0();
  uint64_t v67 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v74 = (char *)&v57 - v31;
  sub_2B53C(a2, (uint64_t)v75, &qword_E9BA0);
  if (v75[0])
  {
    id v72 = *(char **)(a1 + 16);
    if (v72)
    {
      uint64_t v60 = (void (*)(char *, uint64_t))a1;
      uint64_t v32 = &v76;
      if ((v78 & 1) == 0) {
        uint64_t v32 = &v77;
      }
      uint64_t v33 = *v32;
      if (v78)
      {
        sub_6431C(v75[0], (uint64_t)v23);
        uint64_t v35 = v64;
        if (sub_C844((uint64_t)v23, 1, v64) == 1) {
          goto LABEL_9;
        }
        uint64_t v37 = &v23[*(int *)(v35 + 20)];
        unint64_t v68 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
        v68(v26, v37, v27);
      }
      else
      {
        sub_6431C(v75[1], (uint64_t)v21);
        uint64_t v34 = v64;
        if (sub_C844((uint64_t)v21, 1, v64) == 1)
        {
          Swift::String v23 = v21;
LABEL_9:
          sub_17644((uint64_t)v23, &qword_E7D18);
          sub_AA40((uint64_t)v26, 1, 1, v27);
LABEL_13:
          sub_17644((uint64_t)v26, &qword_E7D38);
          goto LABEL_14;
        }
        uint64_t v36 = &v21[*(int *)(v34 + 20)];
        unint64_t v68 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
        v68(v26, v36, v27);
        Swift::String v23 = v21;
      }
      sub_5262C((uint64_t)v23, (void (*)(void))type metadata accessor for CalendarEvent);
      sub_AA40((uint64_t)v26, 0, 1, v27);
      if (sub_C844((uint64_t)v26, 1, v27) != 1)
      {
        uint64_t v42 = v74;
        uint64_t v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v67 + 32))(v74, v26, v27);
        if (v33 < 3)
        {
          uint64_t v58 = (char *)&_swiftEmptyArrayStorage;
          uint64_t v45 = v64;
          char v44 = v60;
        }
        else
        {
          __chkstk_darwin(v43);
          *(&v57 - 2) = (uint64_t)v42;
          char v44 = v60;
          swift_bridgeObjectRetain();
          uint64_t v26 = 0;
          uint64_t v58 = (char *)sub_6BFAC((uint64_t (*)(char *))sub_516A8, (uint64_t)(&v57 - 4), (uint64_t)v44);
          uint64_t v45 = v64;
        }
        uint64_t v59 = v18;
        sub_AA40((uint64_t)v18, 1, 1, v45);
        uint64_t v66 = (char *)v44
            + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
        uint64_t v65 = v67 + 16;
        ++v63;
        v67 += 8;
        swift_bridgeObjectRetain();
        uint64_t v46 = 0;
        while (1)
        {
          char v47 = (char *)(v46 + 1);
          if (__OFADD__(v46, 1)) {
            break;
          }
          sub_52684((uint64_t)&v66[*(void *)(v73 + 72) * v46], (uint64_t)v10, (void (*)(void))type metadata accessor for CalendarEvent);
          uint64_t v26 = v74;
          char v48 = sub_B1750();
          sub_52684((uint64_t)v10, (uint64_t)v8, (void (*)(void))type metadata accessor for CalendarEvent);
          v68(v30, v26, v27);
          if (v48)
          {
            uint64_t v26 = v69;
            sub_B1920();
            char v49 = sub_B1900();
            (*v63)(v26, v70);
          }
          else
          {
            char v49 = 0;
          }
          char v44 = *(void (**)(char *, uint64_t))v67;
          (*(void (**)(char *, uint64_t))v67)(v30, v27);
          sub_5262C((uint64_t)v8, (void (*)(void))type metadata accessor for CalendarEvent);
          if (v49)
          {
            swift_bridgeObjectRelease();
            uint64_t v50 = v62;
            sub_51654((uint64_t)v10, v62, (void (*)(void))type metadata accessor for CalendarEvent);
            uint64_t v51 = v50;
            uint64_t v52 = 0;
            goto LABEL_29;
          }
          sub_5262C((uint64_t)v10, (void (*)(void))type metadata accessor for CalendarEvent);
          ++v46;
          if (v47 == v72)
          {
            swift_bridgeObjectRelease();
            uint64_t v50 = v62;
            uint64_t v51 = v62;
            uint64_t v52 = 1;
LABEL_29:
            sub_AA40(v51, v52, 1, v45);
            uint64_t v10 = v59;
            sub_17644((uint64_t)v59, &qword_E7D18);
            sub_2B53C(v50, (uint64_t)v10, &qword_E7D18);
            uint64_t v8 = v58;
            uint64_t v26 = v71;
            char v47 = v74;
            if (!*((void *)v58 + 2))
            {
              uint64_t v53 = v61;
              sub_2AF80((uint64_t)v10, v61, &qword_E7D18);
              int v54 = sub_C844(v53, 1, v64);
              sub_17644(v53, &qword_E7D18);
              if (v54 == 1)
              {
                sub_17644((uint64_t)v10, &qword_E7D18);
                swift_bridgeObjectRelease();
                v44(v47, v27);
                uint64_t v38 = type metadata accessor for ImportantEventInfo(0);
                uint64_t v39 = (uint64_t)v26;
                goto LABEL_15;
              }
            }
            if (qword_E6C50 == -1)
            {
LABEL_33:
              uint64_t v55 = sub_B2D30();
              sub_B378(v55, (uint64_t)qword_E9B48);
              sub_8C308(0xD000000000000033, 0x80000000000B7C10, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000004FLL, 0x80000000000B7C50);
              if (qword_E6DB0 != -1) {
                swift_once();
              }
              sub_84ED0(0, qword_F5478, unk_F5480, byte_F5488, (void *)qword_F5490);
              uint64_t v56 = type metadata accessor for ImportantEventInfo(0);
              sub_2B53C((uint64_t)v10, (uint64_t)&v26[*(int *)(v56 + 20)], &qword_E7D18);
              *(void *)uint64_t v26 = v8;
              v44(v47, v27);
              uint64_t v39 = (uint64_t)v26;
              uint64_t v40 = 0;
              uint64_t v38 = v56;
              return sub_AA40(v39, v40, 1, v38);
            }
LABEL_37:
            swift_once();
            goto LABEL_33;
          }
        }
        __break(1u);
        goto LABEL_37;
      }
      goto LABEL_13;
    }
  }
LABEL_14:
  uint64_t v38 = type metadata accessor for ImportantEventInfo(0);
  uint64_t v39 = (uint64_t)v71;
LABEL_15:
  uint64_t v40 = 1;
  return sub_AA40(v39, v40, 1, v38);
}

uint64_t sub_4A964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    return swift_errorRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_4A9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_4A9FC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = type metadata accessor for CalendarEvent(0);
  uint64_t v76 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_B1700();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v83 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - v10;
  uint64_t v12 = sub_7424(&qword_E7D18);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v73 = (uint64_t)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v69 = (uint64_t)&v66 - v15;
  uint64_t v16 = sub_7424(&qword_E7D38);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v78 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v77 = (uint64_t)&v66 - v19;
  uint64_t v20 = sub_B17F0();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v23;
  uint64_t v24 = *(void (**)(void))(v23 + 16);
  uint64_t v71 = v23 + 16;
  id v72 = v22;
  uint64_t v70 = v24;
  v24();
  Swift::String v79 = a1;
  uint64_t v25 = *a1;
  int64_t v26 = *(void *)(*a1 + 16);
  uint64_t v27 = &_swiftEmptyArrayStorage;
  uint64_t v84 = v6;
  uint64_t v85 = v3;
  uint64_t v80 = v20;
  if (v26)
  {
    uint64_t v86 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_85AC4(0, v26, 0);
    unint64_t v28 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    uint64_t v68 = v25;
    uint64_t v29 = v25 + v28;
    uint64_t v30 = *(void *)(v76 + 72);
    uint64_t v81 = v7 + 32;
    uint64_t v82 = v30;
    do
    {
      sub_52684(v29, (uint64_t)v5, (void (*)(void))type metadata accessor for CalendarEvent);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, &v5[*(int *)(v3 + 24)], v6);
      sub_5262C((uint64_t)v5, (void (*)(void))type metadata accessor for CalendarEvent);
      uint64_t v27 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_85AC4(0, v27[2] + 1, 1);
        uint64_t v27 = v86;
      }
      unint64_t v32 = v27[2];
      unint64_t v31 = v27[3];
      if (v32 >= v31 >> 1)
      {
        sub_85AC4(v31 > 1, v32 + 1, 1);
        uint64_t v27 = v86;
      }
      v27[2] = v32 + 1;
      unint64_t v33 = (unint64_t)v27
          + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + *(void *)(v7 + 72) * v32;
      uint64_t v6 = v84;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v33, v11, v84);
      uint64_t v86 = v27;
      v29 += v82;
      --v26;
      uint64_t v3 = v85;
    }
    while (v26);
    uint64_t v25 = v68;
    swift_bridgeObjectRelease();
    uint64_t v34 = v77;
    uint64_t v20 = v80;
  }
  else
  {
    uint64_t v34 = v77;
  }
  uint64_t v35 = v69;
  sub_6431C(v25, v69);
  int v36 = sub_C844(v35, 1, v3);
  uint64_t v37 = v79;
  uint64_t v38 = v76;
  if (v36 == 1)
  {
    sub_17644(v35, &qword_E7D18);
    uint64_t v39 = 1;
  }
  else
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v70)(v34, v35 + *(int *)(v3 + 20), v20);
    sub_5262C(v35, (void (*)(void))type metadata accessor for CalendarEvent);
    uint64_t v39 = 0;
  }
  sub_AA40(v34, v39, 1, v20);
  LODWORD(v68) = *((unsigned __int8 *)v37 + 40);
  if (v68) {
    uint64_t v69 = v37[3];
  }
  else {
    uint64_t v69 = 0;
  }
  uint64_t v40 = v37[1];
  int64_t v41 = *(void *)(v40 + 16);
  uint64_t v42 = &_swiftEmptyArrayStorage;
  if (v41)
  {
    uint64_t v86 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_85AC4(0, v41, 0);
    unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v44 = v38;
    uint64_t v67 = v40;
    uint64_t v45 = v40 + v43;
    uint64_t v46 = *(void *)(v44 + 72);
    uint64_t v81 = v7 + 32;
    uint64_t v82 = v46;
    char v47 = v83;
    do
    {
      sub_52684(v45, (uint64_t)v5, (void (*)(void))type metadata accessor for CalendarEvent);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v47, &v5[*(int *)(v3 + 24)], v6);
      sub_5262C((uint64_t)v5, (void (*)(void))type metadata accessor for CalendarEvent);
      uint64_t v42 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_85AC4(0, v42[2] + 1, 1);
        uint64_t v42 = v86;
      }
      unint64_t v49 = v42[2];
      unint64_t v48 = v42[3];
      if (v49 >= v48 >> 1)
      {
        sub_85AC4(v48 > 1, v49 + 1, 1);
        uint64_t v42 = v86;
      }
      v42[2] = v49 + 1;
      unint64_t v50 = (unint64_t)v42
          + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + *(void *)(v7 + 72) * v49;
      char v47 = v83;
      uint64_t v6 = v84;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v50, v83, v84);
      uint64_t v86 = v42;
      v45 += v82;
      --v41;
      uint64_t v3 = v85;
    }
    while (v41);
    uint64_t v40 = v67;
    swift_bridgeObjectRelease();
    uint64_t v20 = v80;
  }
  uint64_t v51 = v73;
  sub_6431C(v40, v73);
  int v52 = sub_C844(v51, 1, v3);
  uint64_t v54 = v78;
  uint64_t v53 = v79;
  if (v52 == 1)
  {
    sub_17644(v51, &qword_E7D18);
    uint64_t v55 = 1;
  }
  else
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v70)(v78, v51 + *(int *)(v3 + 20), v20);
    sub_5262C(v51, (void (*)(void))type metadata accessor for CalendarEvent);
    uint64_t v55 = 0;
  }
  sub_AA40(v54, v55, 1, v20);
  if (v68) {
    uint64_t v56 = 0;
  }
  else {
    uint64_t v56 = v53[3];
  }
  char v57 = v68 & 1;
  BOOL v58 = (v68 & 1) == 0;
  uint64_t v59 = v53[2];
  uint64_t v60 = v53[4];
  uint64_t v61 = v75;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v75, v72, v80);
  uint64_t v62 = (int *)type metadata accessor for DBCalendarState();
  *(void *)(v61 + v62[5]) = v27;
  sub_2B53C(v77, v61 + v62[6], &qword_E7D38);
  *(void *)(v61 + v62[7]) = v59;
  uint64_t v63 = v61 + v62[8];
  *(void *)uint64_t v63 = v69;
  *(unsigned char *)(v63 + 8) = v58;
  *(void *)(v61 + v62[9]) = v60;
  *(void *)(v61 + v62[10]) = v42;
  uint64_t result = sub_2B53C(v78, v61 + v62[11], &qword_E7D38);
  uint64_t v65 = v61 + v62[12];
  *(void *)uint64_t v65 = v56;
  *(unsigned char *)(v65 + 8) = v57;
  return result;
}

void *sub_4B1E4(uint64_t a1)
{
  uint64_t v2 = sub_B17F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_57888(a1, (uint64_t)v5);
  unint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = (unint64_t)sub_47330(v6);
  if ((v7 & 0x8000000000000000) != 0 || (v7 & 0x4000000000000000) != 0)
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_2D914(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v14[0] = v8;
  sub_51C1C(v14);
  uint64_t v9 = swift_bridgeObjectRelease();
  unint64_t v10 = v14[0];
  __chkstk_darwin(v9);
  v14[-2] = (uint64_t)v5;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_6C1BC(sub_526D8, &v14[-4], v10);
  __chkstk_darwin(v11);
  v14[-2] = (uint64_t)v5;
  sub_6C1BC(sub_5270C, &v14[-4], v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

void *sub_4B3DC@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_B2D30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_84A80() - 6) <= 2u)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_B3620();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_4:
      unint64_t v25 = a1 >> 62;
      uint64_t v26 = a2;
      uint64_t v10 = sub_4B7C8(a1);
      if (qword_E6C50 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_B378(v6, (uint64_t)qword_E9B48);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_B34C0(37);
      swift_bridgeObjectRelease();
      uint64_t v28 = 0x20646E756F46;
      unint64_t v29 = 0xE600000000000000;
      uint64_t v12 = *(void *)(v10 + 16);
      uint64_t v27 = v12;
      v30._countAndFlagsBits = sub_B37C0();
      sub_B3020(v30);
      swift_bridgeObjectRelease();
      v31._countAndFlagsBits = 0xD00000000000001DLL;
      v31._object = (void *)0x80000000000B7FA0;
      sub_B3020(v31);
      sub_8C308(v28, v29, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000004FLL, 0x80000000000B8040);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if (v25)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_B3620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
      }
      uint64_t v14 = v26;
      char v15 = sub_4BE08(0, v13, v26);
      char v16 = sub_4C700(0, v10, v14);
      char v17 = 0;
      uint64_t v18 = 256;
      if (v15) {
        uint64_t v18 = 65792;
      }
      uint64_t v19 = 0x100000000;
      if ((v16 & 1) == 0) {
        uint64_t v19 = 0;
      }
      uint64_t v20 = v19 | v18;
      uint64_t result = _swiftEmptyArrayStorage;
      goto LABEL_18;
    }
  }
  if (qword_E6C50 != -1) {
    swift_once();
  }
  sub_B378(v6, (uint64_t)qword_E9B48);
  sub_8C308(0xD000000000000025, 0x80000000000B8010, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000004FLL, 0x80000000000B8040);
  sub_2A760();
  uint64_t result = (void *)swift_allocError();
  uint64_t v10 = 0;
  uint64_t v13 = 0;
  uint64_t v12 = 0;
  uint64_t v20 = 0;
  *uint64_t v23 = 2;
  char v17 = 1;
LABEL_18:
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v10;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = v12;
  *(_DWORD *)(a3 + 40) = v20;
  *(unsigned char *)(a3 + 44) = BYTE4(v20);
  *(unsigned char *)(a3 + 45) = v17;
  return result;
}

uint64_t sub_4B7C8(unint64_t a1)
{
  uint64_t v2 = sub_B1700();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v56 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_7424(&qword_E8B80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_B17F0();
  uint64_t v9 = *(void (***)(uint64_t, char *, char *))(v8 - 8);
  __chkstk_darwin(v8);
  char v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_7424(&qword_E7D38);
  __chkstk_darwin(v11 - 8);
  uint64_t v61 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CalendarEvent(0);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  __chkstk_darwin(v13);
  char v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    char v17 = _swiftEmptyArrayStorage;
    if (!v16) {
      return (uint64_t)v17;
    }
    sub_21550(0, (a1 & 0xC000000000000001) == 0, a1);
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v18 = (id)sub_B34F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v18 = *(id *)(a1 + 32);
    }
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = (unint64_t)sub_47534(a1, v19);
    a1 = v20;
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_B3620();
      swift_bridgeObjectRelease();
      if (!v21)
      {
LABEL_29:
        swift_bridgeObjectRelease();

        return (uint64_t)v17;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
      if (!v21) {
        goto LABEL_29;
      }
    }
    uint64_t v62 = _swiftEmptyArrayStorage;
    sub_85A60(0, v21 & ~(v21 >> 63), 0);
    if (v21 < 0) {
      break;
    }
    id v48 = v19;
    uint64_t v49 = v21;
    uint64_t v22 = 0;
    char v17 = v62;
    uint64_t v60 = (void (**)(uint64_t, char *, uint64_t))(v9 + 4);
    int v52 = (void (**)(uint64_t, char *, char *))(v3 + 32);
    unint64_t v53 = a1 & 0xC000000000000001;
    unint64_t v50 = a1;
    uint64_t v51 = (uint64_t *)v15;
    while (v21 != v22)
    {
      if (v53) {
        id v23 = (id)sub_B34F0();
      }
      else {
        id v23 = *(id *)(a1 + 8 * v22 + 32);
      }
      uint64_t v24 = v23;
      uint64_t v25 = sub_5618(v23, (SEL *)&selRef_title);
      if (!v26) {
        goto LABEL_32;
      }
      uint64_t v27 = v25;
      uint64_t v28 = v26;
      uint64_t v59 = v17;
      char v15 = (char *)v2;
      id v29 = [v24 startDate];
      if (!v29) {
        goto LABEL_35;
      }
      Swift::String v30 = v29;
      uint64_t v58 = v22;
      Swift::String v31 = v57;
      sub_B17C0();

      uint64_t v32 = (uint64_t)v61;
      unint64_t v33 = *v60;
      (*v60)((uint64_t)v61, v31, v8);
      sub_AA40(v32, 0, 1, v8);
      uint64_t v34 = v8;
      uint64_t result = sub_C844(v32, 1, v8);
      if (result == 1) {
        goto LABEL_36;
      }
      uint64_t v8 = (uint64_t)v7;
      int v36 = v24;
      id v37 = [v24 calendarPunchoutURI];
      if (!v37) {
        goto LABEL_33;
      }
      uint64_t v38 = v37;
      uint64_t v39 = v56;
      sub_B16C0();

      uint64_t v9 = v52;
      uint64_t v40 = *v52;
      int64_t v41 = v39;
      uint64_t v7 = (char *)v8;
      (*v52)(v8, v41, v15);
      sub_AA40(v8, 0, 1, (uint64_t)v15);
      if (sub_C844(v8, 1, (uint64_t)v15) == 1) {
        goto LABEL_34;
      }
      uint64_t v42 = v51;
      *uint64_t v51 = v27;
      v42[1] = v28;
      uint64_t v3 = (uint64_t)v42;
      uint64_t v43 = v55;
      uint64_t v8 = v34;
      v33((uint64_t)v42 + *(int *)(v55 + 20), v61, v34);
      v40(v3 + *(int *)(v43 + 24), v7, v15);

      char v17 = v59;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v62 = v17;
      uint64_t v2 = (uint64_t)v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_85A60(0, v17[2] + 1, 1);
        char v17 = v62;
      }
      uint64_t v45 = v58;
      unint64_t v47 = v17[2];
      unint64_t v46 = v17[3];
      if (v47 >= v46 >> 1)
      {
        sub_85A60(v46 > 1, v47 + 1, 1);
        char v17 = v62;
      }
      uint64_t v22 = v45 + 1;
      v17[2] = v47 + 1;
      sub_51654(v3, (uint64_t)v17+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v47, (void (*)(void))type metadata accessor for CalendarEvent);
      uint64_t v21 = v49;
      a1 = v50;
      if (v49 == v22)
      {
        swift_bridgeObjectRelease();

        return (uint64_t)v17;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  sub_AA40(v8, 1, 1, (uint64_t)v15);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_AA40((uint64_t)v61, 1, 1, v8);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_4BE08(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a2;
  int v45 = a1;
  uint64_t v46 = sub_B2D30();
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v4 = __chkstk_darwin(v46);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v41 - v7;
  uint64_t v8 = sub_B1950();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_7424(&qword_E9B68);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DBCalendarState();
  uint64_t v16 = __chkstk_darwin(v15);
  id v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v41 - v19;
  sub_2AF80(a3, (uint64_t)v14, &qword_E9B68);
  if (sub_C844((uint64_t)v14, 1, v15) == 1)
  {
    sub_17644((uint64_t)v14, &qword_E9B68);
LABEL_9:
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v46, (uint64_t)qword_E9B48);
    sub_8C320(0xD00000000000003BLL, 0x80000000000B8090, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003CLL, 0x80000000000B8250);
    return 0;
  }
  sub_51654((uint64_t)v14, (uint64_t)v20, (void (*)(void))type metadata accessor for DBCalendarState);
  if ((sub_57B38((uint64_t)v20) & 1) == 0)
  {
    sub_5262C((uint64_t)v20, (void (*)(void))type metadata accessor for DBCalendarState);
    goto LABEL_9;
  }
  if ((v45 & 1) == 0)
  {
    sub_B1920();
    char v25 = sub_B18A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_52684((uint64_t)v20, (uint64_t)v18, (void (*)(void))type metadata accessor for DBCalendarState);
    if (v25)
    {
      unsigned int v26 = (sub_84A80() - 6);
      sub_5262C((uint64_t)v18, (void (*)(void))type metadata accessor for DBCalendarState);
      if (v26 <= 2)
      {
        uint64_t v27 = &v20[*(int *)(v15 + 48)];
        BOOL v28 = (v27[8] & 1) == 0 && *(void *)v27 == v43;
        BOOL v23 = !v28;
        if (qword_E6C50 != -1) {
          swift_once();
        }
        uint64_t v35 = v46;
        uint64_t v36 = sub_B378(v46, (uint64_t)qword_E9B48);
        uint64_t v37 = v44;
        uint64_t v38 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v42, v36, v35);
        uint64_t v47 = 0;
        unint64_t v48 = 0xE000000000000000;
        sub_B34C0(46);
        swift_bridgeObjectRelease();
        uint64_t v47 = 0xD00000000000002CLL;
        unint64_t v48 = 0x80000000000B82C0;
        if (v28) {
          v39._countAndFlagsBits = 0x65736C6166;
        }
        else {
          v39._countAndFlagsBits = 1702195828;
        }
        if (v28) {
          uint64_t v40 = (void *)0xE500000000000000;
        }
        else {
          uint64_t v40 = (void *)0xE400000000000000;
        }
        v39._object = v40;
        sub_B3020(v39);
        swift_bridgeObjectRelease();
        sub_8C320(v47, v48, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003CLL, 0x80000000000B8250);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v35);
        goto LABEL_51;
      }
    }
    else
    {
      sub_5262C((uint64_t)v18, (void (*)(void))type metadata accessor for DBCalendarState);
    }
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v46, (uint64_t)qword_E9B48);
    sub_8C320(0xD00000000000002FLL, 0x80000000000B8290, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003CLL, 0x80000000000B8250);
LABEL_27:
    sub_5262C((uint64_t)v20, (void (*)(void))type metadata accessor for DBCalendarState);
    return 0;
  }
  if (sub_57D14((uint64_t)v20))
  {
    uint64_t v21 = &v20[*(int *)(v15 + 48)];
    BOOL v22 = (v21[8] & 1) == 0 && *(void *)v21 == v43;
    BOOL v23 = !v22;
    if (qword_E6C50 != -1) {
      swift_once();
    }
    uint64_t v30 = v46;
    uint64_t v31 = sub_B378(v46, (uint64_t)qword_E9B48);
    uint64_t v32 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v6, v31, v30);
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    sub_B34C0(67);
    v49._countAndFlagsBits = 0xD000000000000041;
    v49._object = (void *)0x80000000000B8350;
    sub_B3020(v49);
    if (v22) {
      v33._countAndFlagsBits = 0x65736C6166;
    }
    else {
      v33._countAndFlagsBits = 1702195828;
    }
    if (v22) {
      uint64_t v34 = (void *)0xE500000000000000;
    }
    else {
      uint64_t v34 = (void *)0xE400000000000000;
    }
    v33._object = v34;
    sub_B3020(v33);
    swift_bridgeObjectRelease();
    sub_8C320(v47, v48, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003CLL, 0x80000000000B8250);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v30);
LABEL_51:
    sub_5262C((uint64_t)v20, (void (*)(void))type metadata accessor for DBCalendarState);
    return v23;
  }
  id v29 = &v20[*(int *)(v15 + 32)];
  if ((v29[8] & 1) == 0 && *(void *)v29 == v43)
  {
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v46, (uint64_t)qword_E9B48);
    sub_8C308(0xD00000000000002BLL, 0x80000000000B8320, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003CLL, 0x80000000000B8250);
    goto LABEL_27;
  }
  if (qword_E6C50 != -1) {
    swift_once();
  }
  sub_B378(v46, (uint64_t)qword_E9B48);
  sub_8C320(0xD000000000000022, 0x80000000000B82F0, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003CLL, 0x80000000000B8250);
  sub_5262C((uint64_t)v20, (void (*)(void))type metadata accessor for DBCalendarState);
  return 1;
}

uint64_t sub_4C700(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v308 = a3;
  LODWORD(v296) = a1;
  uint64_t v286 = sub_B17F0();
  uint64_t v4 = *(void *)(v286 - 8);
  __chkstk_darwin(v286);
  v278 = (char *)&v268 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = sub_7424(&qword_E9BF0);
  uint64_t v6 = __chkstk_darwin(v285);
  uint64_t v284 = (uint64_t)&v268 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v281 = (uint64_t)&v268 - v9;
  __chkstk_darwin(v8);
  uint64_t v277 = (uint64_t)&v268 - v10;
  uint64_t v11 = sub_7424(&qword_E7D38);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v276 = (uint64_t)&v268 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v283 = (uint64_t)&v268 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v280 = (uint64_t)&v268 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v282 = (uint64_t)&v268 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v275 = (uint64_t)&v268 - v21;
  __chkstk_darwin(v20);
  uint64_t v279 = (uint64_t)&v268 - v22;
  uint64_t v23 = sub_B1700();
  uint64_t v298 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v307 = (uint64_t)&v268 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v306 = (uint64_t)&v268 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v268 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  v312 = (char *)&v268 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v304 = (char *)&v268 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v305 = (char *)&v268 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v315 = (char *)&v268 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v295 = (char *)&v268 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v311 = (char *)&v268 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v303 = (char *)&v268 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v299 = (char *)&v268 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v300 = (char *)&v268 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v302 = (char *)&v268 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  unint64_t v53 = (char *)&v268 - v52;
  __chkstk_darwin(v51);
  v316 = (char *)&v268 - v54;
  uint64_t v294 = type metadata accessor for CalendarEvent(0);
  uint64_t v293 = *(void *)(v294 - 8);
  uint64_t v55 = __chkstk_darwin(v294);
  v291 = (void (**)(uint64_t, uint64_t))((char *)&v268 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = __chkstk_darwin(v55);
  v290 = (void (**)(char *, uint64_t, uint64_t))((char *)&v268 - v58);
  __chkstk_darwin(v57);
  v288 = (void (**)(char *, uint64_t, uint64_t))((char *)&v268 - v59);
  uint64_t v60 = sub_7424(&qword_E8B80);
  uint64_t v61 = __chkstk_darwin(v60 - 8);
  uint64_t v310 = (uint64_t)&v268 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v309 = (uint64_t)&v268 - v64;
  __chkstk_darwin(v63);
  v301 = (char *)&v268 - v65;
  uint64_t v313 = sub_B2D30();
  uint64_t v292 = *(void *)(v313 - 8);
  uint64_t v66 = __chkstk_darwin(v313);
  v289 = (char *)&v268 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v287 = (char *)&v268 - v68;
  uint64_t v69 = sub_B1950();
  uint64_t v70 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  id v72 = (char *)&v268 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_7424(&qword_E9B68);
  __chkstk_darwin(v73 - 8);
  uint64_t v75 = (char *)&v268 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for DBCalendarState();
  uint64_t v77 = __chkstk_darwin(v76);
  uint64_t v78 = __chkstk_darwin(v77);
  uint64_t v79 = __chkstk_darwin(v78);
  uint64_t v80 = __chkstk_darwin(v79);
  uint64_t v82 = (char *)&v268 - v81;
  uint64_t v83 = __chkstk_darwin(v80);
  uint64_t v314 = (uint64_t)&v268 - v87;
  uint64_t v297 = a2;
  uint64_t v88 = *(char **)(a2 + 16);
  if (!v88)
  {
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v313, (uint64_t)qword_E9B48);
    uint64_t v90 = 0xD000000000000019;
    Swift::Int v91 = "No upcoming events found.";
    goto LABEL_66;
  }
  uint64_t v272 = v86;
  uint64_t v273 = v85;
  uint64_t v271 = v84;
  v270 = v88;
  uint64_t v89 = v83;
  sub_2AF80(v308, (uint64_t)v75, &qword_E9B68);
  v274 = (int *)v89;
  if (sub_C844((uint64_t)v75, 1, v89) == 1)
  {
    sub_17644((uint64_t)v75, &qword_E9B68);
LABEL_63:
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v313, (uint64_t)qword_E9B48);
    uint64_t v90 = 0xD00000000000003BLL;
    Swift::Int v91 = "No previous invocations found from today/yesterday evening.";
LABEL_66:
    sub_8C320(v90, (unint64_t)(v91 - 32) | 0x8000000000000000, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B80D0);
    return 0;
  }
  uint64_t v92 = (uint64_t)v75;
  uint64_t v93 = v314;
  sub_51654(v92, v314, (void (*)(void))type metadata accessor for DBCalendarState);
  if ((sub_57B38(v93) & 1) == 0)
  {
    sub_5262C(v314, (void (*)(void))type metadata accessor for DBCalendarState);
    goto LABEL_63;
  }
  if (v296)
  {
    char v94 = sub_57D14(v314);
    v300 = (char *)(v297
                  + ((*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80)));
    v299 = *(char **)(v293 + 72);
    v316 = (char *)(v298 + 16);
    v302 = (char *)(v298 + 32);
    v296 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
    v288 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    uint64_t v293 = v4 + 8;
    uint64_t v308 = v298 + 8;
    v301 = (char *)((v298 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    if (v94)
    {
      uint64_t v95 = (void (**)(uint64_t, uint64_t))v274[10];
      swift_bridgeObjectRetain();
      uint64_t v96 = 0;
      uint64_t v97 = v295;
      BOOL v98 = v303;
      uint64_t v99 = v309;
      v291 = v95;
LABEL_11:
      uint64_t v100 = *(uint64_t *)((char *)v95 + v314);
      uint64_t v101 = *(void *)(v100 + 16);
      uint64_t v306 = v100;
      uint64_t v307 = (uint64_t)&v300[(void)v299 * (void)v96];
      if (!v101)
      {
        swift_bridgeObjectRetain();
LABEL_181:
        sub_AA40(v99, 1, 1, v23);
LABEL_182:
        swift_bridgeObjectRelease();
        uint64_t v250 = v272;
        sub_52684(v314, v272, (void (*)(void))type metadata accessor for DBCalendarState);
        v251 = v290;
        sub_52684(v307, (uint64_t)v290, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_5262C((uint64_t)v251, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_5262C(v250, (void (*)(void))type metadata accessor for DBCalendarState);
LABEL_183:
        int v141 = 1;
LABEL_184:
        swift_bridgeObjectRelease();
        uint64_t v142 = v141 ^ 1u;
        if (qword_E6C50 != -1) {
          swift_once();
        }
        uint64_t v252 = v313;
        uint64_t v253 = sub_B378(v313, (uint64_t)qword_E9B48);
        uint64_t v254 = v292;
        v255 = v289;
        (*(void (**)(char *, uint64_t, uint64_t))(v292 + 16))(v289, v253, v252);
        uint64_t v317 = 0;
        unint64_t v318 = 0xE000000000000000;
        sub_B34C0(62);
        v319._countAndFlagsBits = 0xD00000000000003CLL;
        v319._object = (void *)0x80000000000B8210;
        sub_B3020(v319);
        if (v141) {
          v256._countAndFlagsBits = 0x65736C6166;
        }
        else {
          v256._countAndFlagsBits = 1702195828;
        }
        if (v141) {
          v257 = (void *)0xE500000000000000;
        }
        else {
          v257 = (void *)0xE400000000000000;
        }
        v256._object = v257;
        sub_B3020(v256);
        swift_bridgeObjectRelease();
        sub_8C320(v317, v318, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B80D0);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v254 + 8))(v255, v252);
        goto LABEL_212;
      }
      v304 = v96 + 1;
      v312 = &v300[(void)v299 * (void)v96 + *(int *)(v294 + 24)];
      unint64_t v102 = v100 + ((*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80));
      uint64_t v310 = *(void *)(v298 + 72);
      uint64_t v103 = *(void (**)(uint64_t, unint64_t, uint64_t))(v298 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v103(v99, v102, v23);
        sub_AA40(v99, 0, 1, v23);
        if (sub_C844(v99, 1, v23) == 1) {
          goto LABEL_182;
        }
        (*(void (**)(char *, uint64_t, uint64_t))v302)(v98, v99, v23);
        uint64_t v104 = sub_B16F0();
        uint64_t v106 = v105;
        uint64_t v107 = sub_B16F0();
        if (!v106) {
          break;
        }
        if (!v108) {
          goto LABEL_23;
        }
        if (v104 == v107 && v106 == v108)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_26:
          uint64_t v111 = v311;
          v103((uint64_t)v311, (unint64_t)v98, v23);
          v103((uint64_t)v97, (unint64_t)v312, v23);
          goto LABEL_27;
        }
        char v110 = sub_B37E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v111 = v311;
        v103((uint64_t)v311, (unint64_t)v98, v23);
        v103((uint64_t)v97, (unint64_t)v312, v23);
        if ((v110 & 1) == 0) {
          goto LABEL_24;
        }
LABEL_27:
        uint64_t v114 = sub_B16D0();
        uint64_t v115 = v111;
        uint64_t v117 = v116;
        uint64_t v118 = sub_B16D0();
        uint64_t v120 = v119;
        if (!v117)
        {
          uint64_t v112 = *(void (**)(char *, uint64_t))v308;
          (*(void (**)(char *, uint64_t))v308)(v97, v23);
          v112(v115, v23);
          if (v120)
          {
            swift_bridgeObjectRelease();
            goto LABEL_38;
          }
          uint64_t v113 = (uint64_t)v305;
          BOOL v98 = v303;
          goto LABEL_45;
        }
        if (!v119)
        {
          uint64_t v112 = *(void (**)(char *, uint64_t))v308;
          swift_bridgeObjectRetain();
          v112(v97, v23);
          v112(v311, v23);
          swift_bridgeObjectRelease_n();
LABEL_38:
          uint64_t v113 = (uint64_t)v305;
          BOOL v98 = v303;
LABEL_39:
          v103((uint64_t)v315, (unint64_t)v98, v23);
          v103(v113, (unint64_t)v312, v23);
LABEL_40:
          v112((char *)v113, v23);
          v112(v315, v23);
          v112(v98, v23);
          goto LABEL_41;
        }
        BOOL v121 = v114 == v118 && v117 == v119;
        BOOL v98 = v303;
        if (v121)
        {
          swift_bridgeObjectRelease();
          uint64_t v112 = *(void (**)(char *, uint64_t))v308;
          (*(void (**)(char *, uint64_t))v308)(v97, v23);
          v112(v311, v23);
          swift_bridgeObjectRelease();
          uint64_t v113 = (uint64_t)v305;
LABEL_45:
          v103((uint64_t)v315, (unint64_t)v98, v23);
          v103(v113, (unint64_t)v312, v23);
          goto LABEL_46;
        }
        char v122 = sub_B37E0();
        swift_bridgeObjectRelease();
        uint64_t v112 = *(void (**)(char *, uint64_t))v308;
        (*(void (**)(char *, uint64_t))v308)(v97, v23);
        v112(v311, v23);
        swift_bridgeObjectRelease();
        v103((uint64_t)v315, (unint64_t)v98, v23);
        uint64_t v113 = (uint64_t)v305;
        v103((uint64_t)v305, (unint64_t)v312, v23);
        if ((v122 & 1) == 0) {
          goto LABEL_40;
        }
LABEL_46:
        unint64_t v123 = v315;
        uint64_t v124 = sub_B16E0();
        uint64_t v125 = v113;
        uint64_t v127 = v126;
        if (v124 == sub_B16E0() && v127 == v128)
        {
          swift_bridgeObjectRelease_n();
          v112((char *)v125, v23);
          v112(v123, v23);
          BOOL v98 = v303;
          v112(v303, v23);
          uint64_t v97 = v295;
LABEL_53:
          swift_bridgeObjectRelease();
          uint64_t v131 = v272;
          sub_52684(v314, v272, (void (*)(void))type metadata accessor for DBCalendarState);
          Swift::String v132 = v290;
          sub_52684(v307, (uint64_t)v290, (void (*)(void))type metadata accessor for CalendarEvent);
          uint64_t v133 = v131 + v274[11];
          uint64_t v134 = v282;
          uint64_t v135 = v286;
          (*v296)(v282, (char *)v132 + *(int *)(v294 + 20), v286);
          sub_AA40(v134, 0, 1, v135);
          uint64_t v136 = v281;
          uint64_t v137 = v281 + *(int *)(v285 + 48);
          sub_2AF80(v133, v281, &qword_E7D38);
          sub_2AF80(v134, v137, &qword_E7D38);
          if (sub_C844(v136, 1, v135) == 1)
          {
            sub_17644(v134, &qword_E7D38);
            sub_5262C((uint64_t)v132, (void (*)(void))type metadata accessor for CalendarEvent);
            sub_5262C(v131, (void (*)(void))type metadata accessor for DBCalendarState);
            if (sub_C844(v137, 1, v135) == 1)
            {
              sub_17644(v136, &qword_E7D38);
              goto LABEL_183;
            }
LABEL_58:
            sub_17644(v136, &qword_E9BF0);
            uint64_t v95 = v291;
          }
          else
          {
            uint64_t v138 = v280;
            sub_2AF80(v136, v280, &qword_E7D38);
            if (sub_C844(v137, 1, v135) == 1)
            {
              sub_17644(v134, &qword_E7D38);
              sub_5262C((uint64_t)v132, (void (*)(void))type metadata accessor for CalendarEvent);
              sub_5262C(v272, (void (*)(void))type metadata accessor for DBCalendarState);
              (*(void (**)(uint64_t, uint64_t))v293)(v138, v135);
              goto LABEL_58;
            }
            uint64_t v139 = v278;
            (*v288)(v278, v137, v135);
            sub_5272C(&qword_E9BF8, (void (*)(uint64_t))&type metadata accessor for Date);
            LODWORD(v312) = sub_B2F10();
            uint64_t v140 = *(void (**)(uint64_t, uint64_t))v293;
            (*(void (**)(char *, uint64_t))v293)(v139, v135);
            sub_17644(v282, &qword_E7D38);
            sub_5262C((uint64_t)v132, (void (*)(void))type metadata accessor for CalendarEvent);
            sub_5262C(v272, (void (*)(void))type metadata accessor for DBCalendarState);
            v140(v280, v135);
            sub_17644(v136, &qword_E7D38);
            uint64_t v95 = v291;
            if (v312) {
              goto LABEL_183;
            }
          }
          uint64_t v96 = v304;
          uint64_t v99 = v309;
          if (v304 != v270) {
            goto LABEL_11;
          }
          int v141 = 0;
          goto LABEL_184;
        }
        char v130 = sub_B37E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v112((char *)v125, v23);
        v112(v123, v23);
        BOOL v98 = v303;
        v112(v303, v23);
        uint64_t v97 = v295;
        if (v130) {
          goto LABEL_53;
        }
LABEL_41:
        uint64_t v99 = v309;
        v102 += v310;
        if (!--v101) {
          goto LABEL_181;
        }
      }
      if (v108)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t v111 = v311;
        v103((uint64_t)v311, (unint64_t)v98, v23);
        v103((uint64_t)v97, (unint64_t)v312, v23);
LABEL_24:
        uint64_t v112 = *(void (**)(char *, uint64_t))v308;
        (*(void (**)(char *, uint64_t))v308)(v97, v23);
        v112(v111, v23);
        uint64_t v113 = (uint64_t)v305;
        goto LABEL_39;
      }
      goto LABEL_26;
    }
    uint64_t v204 = v274[5];
    swift_bridgeObjectRetain();
    v205 = 0;
    v311 = v30;
    v206 = v304;
    uint64_t v207 = v310;
    uint64_t v292 = v204;
LABEL_124:
    v208 = *(char **)(v314 + v204);
    uint64_t v209 = *((void *)v208 + 2);
    v305 = &v300[(void)v299 * (void)v205];
    v303 = v208;
    if (v209)
    {
      v295 = v205 + 1;
      v315 = &v300[(void)v299 * (void)v205 + *(int *)(v294 + 24)];
      v210 = &v208[(*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80)];
      uint64_t v309 = *(void *)(v298 + 72);
      v211 = *(void (**)(uint64_t, char *, uint64_t))(v298 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v211(v207, v210, v23);
        sub_AA40(v207, 0, 1, v23);
        if (sub_C844(v207, 1, v23) == 1) {
          goto LABEL_195;
        }
        (*(void (**)(char *, uint64_t, uint64_t))v302)(v206, v207, v23);
        uint64_t v212 = sub_B16F0();
        uint64_t v214 = v213;
        uint64_t v215 = sub_B16F0();
        if (!v214) {
          break;
        }
        if (!v216) {
          goto LABEL_136;
        }
        if (v212 == v215 && v214 == v216)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_139:
          v219 = v312;
          v211((uint64_t)v312, v206, v23);
          v211((uint64_t)v30, v315, v23);
          goto LABEL_140;
        }
        char v218 = sub_B37E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v219 = v312;
        v211((uint64_t)v312, v206, v23);
        v211((uint64_t)v30, v315, v23);
        if ((v218 & 1) == 0) {
          goto LABEL_137;
        }
LABEL_140:
        uint64_t v223 = sub_B16D0();
        uint64_t v225 = v224;
        uint64_t v226 = sub_B16D0();
        uint64_t v228 = v227;
        if (!v225)
        {
          v220 = *(void (**)(char *, uint64_t))v308;
          (*(void (**)(char *, uint64_t))v308)(v30, v23);
          v220(v219, v23);
          uint64_t v222 = v307;
          if (v228)
          {
            swift_bridgeObjectRelease();
            goto LABEL_151;
          }
          goto LABEL_157;
        }
        if (!v227)
        {
          v220 = *(void (**)(char *, uint64_t))v308;
          swift_bridgeObjectRetain();
          v220(v30, v23);
          v220(v312, v23);
          swift_bridgeObjectRelease_n();
          uint64_t v222 = v307;
LABEL_151:
          uint64_t v221 = v306;
          v206 = v304;
LABEL_152:
          v211(v221, v206, v23);
          v211(v222, v315, v23);
LABEL_153:
          v220((char *)v222, v23);
          v220((char *)v221, v23);
          v220(v206, v23);
          goto LABEL_154;
        }
        if (v223 == v226 && v225 == v227)
        {
          swift_bridgeObjectRelease();
          v220 = *(void (**)(char *, uint64_t))v308;
          (*(void (**)(char *, uint64_t))v308)(v30, v23);
          v220(v312, v23);
          swift_bridgeObjectRelease();
          uint64_t v222 = v307;
LABEL_157:
          uint64_t v221 = v306;
          v211(v306, v304, v23);
          v211(v222, v315, v23);
          goto LABEL_158;
        }
        char v230 = sub_B37E0();
        swift_bridgeObjectRelease();
        v220 = *(void (**)(char *, uint64_t))v308;
        (*(void (**)(char *, uint64_t))v308)(v30, v23);
        v220(v312, v23);
        swift_bridgeObjectRelease();
        uint64_t v221 = v306;
        v206 = v304;
        v211(v306, v304, v23);
        uint64_t v222 = v307;
        v211(v307, v315, v23);
        if ((v230 & 1) == 0) {
          goto LABEL_153;
        }
LABEL_158:
        uint64_t v231 = sub_B16E0();
        uint64_t v232 = v222;
        uint64_t v234 = v233;
        if (v231 == sub_B16E0() && v234 == v235)
        {
          swift_bridgeObjectRelease_n();
          v220((char *)v232, v23);
          v220((char *)v221, v23);
          v206 = v304;
          v220(v304, v23);
LABEL_165:
          swift_bridgeObjectRelease();
          uint64_t v238 = v273;
          sub_52684(v314, v273, (void (*)(void))type metadata accessor for DBCalendarState);
          v239 = v291;
          sub_52684((uint64_t)v305, (uint64_t)v291, (void (*)(void))type metadata accessor for CalendarEvent);
          uint64_t v240 = v238 + v274[6];
          uint64_t v241 = v283;
          uint64_t v242 = v286;
          (*v296)(v283, (char *)v239 + *(int *)(v294 + 20), v286);
          sub_AA40(v241, 0, 1, v242);
          uint64_t v243 = v284;
          uint64_t v244 = v284 + *(int *)(v285 + 48);
          sub_2AF80(v240, v284, &qword_E7D38);
          sub_2AF80(v241, v244, &qword_E7D38);
          int v245 = sub_C844(v243, 1, v242);
          uint64_t v30 = v311;
          if (v245 == 1)
          {
            sub_17644(v241, &qword_E7D38);
            sub_5262C((uint64_t)v239, (void (*)(void))type metadata accessor for CalendarEvent);
            sub_5262C(v238, (void (*)(void))type metadata accessor for DBCalendarState);
            if (sub_C844(v244, 1, v242) == 1)
            {
              sub_17644(v243, &qword_E7D38);
              goto LABEL_196;
            }
LABEL_170:
            sub_17644(v243, &qword_E9BF0);
            uint64_t v207 = v310;
            uint64_t v204 = v292;
          }
          else
          {
            uint64_t v246 = v276;
            sub_2AF80(v243, v276, &qword_E7D38);
            if (sub_C844(v244, 1, v242) == 1)
            {
              sub_17644(v241, &qword_E7D38);
              sub_5262C((uint64_t)v239, (void (*)(void))type metadata accessor for CalendarEvent);
              sub_5262C(v273, (void (*)(void))type metadata accessor for DBCalendarState);
              (*(void (**)(uint64_t, uint64_t))v293)(v246, v242);
              goto LABEL_170;
            }
            v247 = v278;
            (*v288)(v278, v244, v242);
            sub_5272C(&qword_E9BF8, (void (*)(uint64_t))&type metadata accessor for Date);
            LODWORD(v315) = sub_B2F10();
            uint64_t v248 = v246;
            v249 = *(void (**)(uint64_t, uint64_t))v293;
            (*(void (**)(char *, uint64_t))v293)(v247, v242);
            sub_17644(v283, &qword_E7D38);
            sub_5262C((uint64_t)v239, (void (*)(void))type metadata accessor for CalendarEvent);
            sub_5262C(v273, (void (*)(void))type metadata accessor for DBCalendarState);
            v249(v248, v242);
            sub_17644(v284, &qword_E7D38);
            uint64_t v207 = v310;
            uint64_t v204 = v292;
            if (v315) {
              goto LABEL_196;
            }
          }
          v205 = v295;
          if (v295 != v270) {
            goto LABEL_124;
          }
          swift_bridgeObjectRelease();
          if (qword_E6C50 != -1) {
            swift_once();
          }
          sub_B378(v313, (uint64_t)qword_E9B48);
          sub_8C320(0xD00000000000003ELL, 0x80000000000B81D0, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B80D0);
          sub_5262C(v314, (void (*)(void))type metadata accessor for DBCalendarState);
          return 1;
        }
        char v237 = sub_B37E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v220((char *)v232, v23);
        v220((char *)v221, v23);
        v206 = v304;
        v220(v304, v23);
        if (v237) {
          goto LABEL_165;
        }
LABEL_154:
        uint64_t v207 = v310;
        v210 += v309;
        --v209;
        uint64_t v30 = v311;
        if (!v209) {
          goto LABEL_194;
        }
      }
      if (v216)
      {
LABEL_136:
        swift_bridgeObjectRelease();
        v219 = v312;
        v211((uint64_t)v312, v206, v23);
        v211((uint64_t)v30, v315, v23);
LABEL_137:
        v220 = *(void (**)(char *, uint64_t))v308;
        (*(void (**)(char *, uint64_t))v308)(v30, v23);
        v220(v219, v23);
        uint64_t v221 = v306;
        uint64_t v222 = v307;
        goto LABEL_152;
      }
      goto LABEL_139;
    }
    swift_bridgeObjectRetain();
LABEL_194:
    sub_AA40(v207, 1, 1, v23);
LABEL_195:
    swift_bridgeObjectRelease();
    uint64_t v258 = v273;
    sub_52684(v314, v273, (void (*)(void))type metadata accessor for DBCalendarState);
    v259 = v291;
    sub_52684((uint64_t)v305, (uint64_t)v291, (void (*)(void))type metadata accessor for CalendarEvent);
    sub_5262C((uint64_t)v259, (void (*)(void))type metadata accessor for CalendarEvent);
    sub_5262C(v258, (void (*)(void))type metadata accessor for DBCalendarState);
LABEL_196:
    swift_bridgeObjectRelease();
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v313, (uint64_t)qword_E9B48);
    sub_8C308(0xD00000000000003BLL, 0x80000000000B8190, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B80D0);
LABEL_199:
    sub_5262C(v314, (void (*)(void))type metadata accessor for DBCalendarState);
    return 0;
  }
  uint64_t v144 = v4;
  sub_B1920();
  uint64_t v145 = v314;
  char v146 = sub_B18A0();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v69);
  sub_52684(v145, (uint64_t)v82, (void (*)(void))type metadata accessor for DBCalendarState);
  if ((v146 & 1) == 0)
  {
    sub_5262C((uint64_t)v82, (void (*)(void))type metadata accessor for DBCalendarState);
    goto LABEL_177;
  }
  unsigned int v147 = (sub_84A80() - 6);
  sub_5262C((uint64_t)v82, (void (*)(void))type metadata accessor for DBCalendarState);
  if (v147 > 2)
  {
LABEL_177:
    if (qword_E6C50 != -1) {
      swift_once();
    }
    sub_B378(v313, (uint64_t)qword_E9B48);
    sub_8C320(0xD000000000000031, 0x80000000000B8110, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B80D0);
    goto LABEL_199;
  }
  uint64_t v148 = (void (**)(uint64_t, char *, uint64_t))(v297
                                                        + ((*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80)));
  int64_t v149 = (char *)v274[10];
  v312 = (char *)(v298 + 16);
  uint64_t v150 = *(void *)(v293 + 72);
  uint64_t v309 = v298 + 32;
  uint64_t v310 = v298 + 8;
  v303 = (char *)(v144 + 16);
  v290 = (void (**)(char *, uint64_t, uint64_t))(v144 + 32);
  v291 = (void (**)(uint64_t, uint64_t))(v144 + 8);
  swift_bridgeObjectRetain();
  uint64_t v151 = 0;
  uint64_t v152 = v302;
  uint64_t v153 = v316;
  v269 = v53;
  v296 = v148;
  v295 = v149;
  uint64_t v293 = v150;
  while (2)
  {
    uint64_t v154 = (uint64_t)v148 + v150 * (void)v151;
    uint64_t v155 = *(void *)&v149[v314];
    uint64_t v156 = *(void *)(v155 + 16);
    uint64_t v157 = (uint64_t)v301;
    v305 = (char *)v155;
    uint64_t v306 = v154;
    if (!v156)
    {
      swift_bridgeObjectRetain();
LABEL_201:
      sub_AA40(v157, 1, 1, v23);
LABEL_202:
      swift_bridgeObjectRelease();
      uint64_t v260 = v271;
      sub_52684(v314, v271, (void (*)(void))type metadata accessor for DBCalendarState);
      v261 = v288;
      sub_52684(v306, (uint64_t)v288, (void (*)(void))type metadata accessor for CalendarEvent);
      sub_5262C((uint64_t)v261, (void (*)(void))type metadata accessor for CalendarEvent);
      sub_5262C(v260, (void (*)(void))type metadata accessor for DBCalendarState);
      int v203 = 1;
      goto LABEL_203;
    }
    v304 = v151 + 1;
    v311 = (char *)(v154 + *(int *)(v294 + 24));
    unint64_t v158 = v155 + ((*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80));
    uint64_t v308 = *(void *)(v298 + 72);
    v315 = *(char **)(v298 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      ((void (*)(uint64_t, unint64_t, uint64_t))v315)(v157, v158, v23);
      sub_AA40(v157, 0, 1, v23);
      if (sub_C844(v157, 1, v23) == 1) {
        goto LABEL_202;
      }
      (*(void (**)(char *, uint64_t, uint64_t))v309)(v153, v157, v23);
      uint64_t v159 = sub_B16F0();
      uint64_t v161 = v160;
      uint64_t v162 = sub_B16F0();
      if (!v161)
      {
        if (v163)
        {
LABEL_84:
          swift_bridgeObjectRelease();
          v166 = v269;
          v168 = v315;
          ((void (*)(char *, char *, uint64_t))v315)(v269, v316, v23);
          ((void (*)(char *, char *, uint64_t))v168)(v152, v311, v23);
LABEL_85:
          v169 = v152;
          v170 = *(void (**)(char *, uint64_t))v310;
          (*(void (**)(char *, uint64_t))v310)(v169, v23);
          v170(v166, v23);
          v171 = v300;
LABEL_86:
          uint64_t v153 = v316;
LABEL_87:
          v172 = v315;
          ((void (*)(char *, char *, uint64_t))v315)(v171, v153, v23);
          v173 = v299;
          ((void (*)(char *, char *, uint64_t))v172)(v299, v311, v23);
LABEL_88:
          v170(v173, v23);
          v170(v171, v23);
          v170(v153, v23);
          uint64_t v152 = v302;
          goto LABEL_89;
        }
        goto LABEL_92;
      }
      if (!v163) {
        goto LABEL_84;
      }
      if (v159 == v162 && v161 == v163)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_92:
        v166 = v269;
        v174 = v315;
        ((void (*)(char *, char *, uint64_t))v315)(v269, v316, v23);
        ((void (*)(char *, char *, uint64_t))v174)(v152, v311, v23);
        goto LABEL_93;
      }
      char v165 = sub_B37E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v166 = v269;
      v167 = v315;
      ((void (*)(char *, char *, uint64_t))v315)(v269, v316, v23);
      ((void (*)(char *, char *, uint64_t))v167)(v152, v311, v23);
      if ((v165 & 1) == 0) {
        goto LABEL_85;
      }
LABEL_93:
      uint64_t v175 = sub_B16D0();
      uint64_t v177 = v176;
      uint64_t v178 = sub_B16D0();
      uint64_t v180 = v179;
      if (!v177)
      {
        v183 = v152;
        v170 = *(void (**)(char *, uint64_t))v310;
        (*(void (**)(char *, uint64_t))v310)(v183, v23);
        v170(v166, v23);
        v171 = v300;
        if (!v180)
        {
          uint64_t v153 = v316;
          goto LABEL_106;
        }
        swift_bridgeObjectRelease();
        goto LABEL_86;
      }
      uint64_t v153 = v316;
      if (!v179)
      {
        v184 = v152;
        v170 = *(void (**)(char *, uint64_t))v310;
        swift_bridgeObjectRetain();
        v170(v184, v23);
        v170(v269, v23);
        swift_bridgeObjectRelease_n();
        v171 = v300;
        goto LABEL_87;
      }
      if (v175 == v178 && v177 == v179)
      {
        swift_bridgeObjectRelease();
        v170 = *(void (**)(char *, uint64_t))v310;
        (*(void (**)(char *, uint64_t))v310)(v302, v23);
        v170(v269, v23);
        swift_bridgeObjectRelease();
        v171 = v300;
LABEL_106:
        v185 = v315;
        ((void (*)(char *, char *, uint64_t))v315)(v171, v153, v23);
        v173 = v299;
        ((void (*)(char *, char *, uint64_t))v185)(v299, v311, v23);
        goto LABEL_107;
      }
      LODWORD(v307) = sub_B37E0();
      swift_bridgeObjectRelease();
      v170 = *(void (**)(char *, uint64_t))v310;
      (*(void (**)(char *, uint64_t))v310)(v302, v23);
      v170(v269, v23);
      swift_bridgeObjectRelease();
      v171 = v300;
      v182 = v315;
      ((void (*)(char *, char *, uint64_t))v315)(v300, v153, v23);
      v173 = v299;
      ((void (*)(char *, char *, uint64_t))v182)(v299, v311, v23);
      if ((v307 & 1) == 0) {
        goto LABEL_88;
      }
LABEL_107:
      uint64_t v186 = sub_B16E0();
      v187 = v171;
      uint64_t v189 = v188;
      if (v186 == sub_B16E0() && v189 == v190) {
        break;
      }
      char v192 = sub_B37E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v170(v173, v23);
      v170(v187, v23);
      uint64_t v153 = v316;
      v170(v316, v23);
      uint64_t v152 = v302;
      if (v192) {
        goto LABEL_114;
      }
LABEL_89:
      v158 += v308;
      --v156;
      uint64_t v157 = (uint64_t)v301;
      if (!v156) {
        goto LABEL_201;
      }
    }
    swift_bridgeObjectRelease_n();
    v170(v173, v23);
    v170(v187, v23);
    v170(v316, v23);
    uint64_t v152 = v302;
LABEL_114:
    swift_bridgeObjectRelease();
    uint64_t v193 = v271;
    sub_52684(v314, v271, (void (*)(void))type metadata accessor for DBCalendarState);
    v194 = v288;
    sub_52684(v306, (uint64_t)v288, (void (*)(void))type metadata accessor for CalendarEvent);
    uint64_t v195 = v193 + v274[11];
    uint64_t v196 = v279;
    uint64_t v197 = v286;
    (*(void (**)(uint64_t, char *, uint64_t))v303)(v279, (char *)v194 + *(int *)(v294 + 20), v286);
    sub_AA40(v196, 0, 1, v197);
    uint64_t v198 = v277;
    uint64_t v199 = v277 + *(int *)(v285 + 48);
    sub_2AF80(v195, v277, &qword_E7D38);
    sub_2AF80(v196, v199, &qword_E7D38);
    if (sub_C844(v198, 1, v197) == 1)
    {
      sub_17644(v196, &qword_E7D38);
      sub_5262C((uint64_t)v194, (void (*)(void))type metadata accessor for CalendarEvent);
      sub_5262C(v193, (void (*)(void))type metadata accessor for DBCalendarState);
      if (sub_C844(v199, 1, v197) == 1)
      {
        sub_17644(v198, &qword_E7D38);
LABEL_213:
        int v203 = 1;
        goto LABEL_203;
      }
LABEL_119:
      sub_17644(v198, &qword_E9BF0);
      uint64_t v153 = v316;
      uint64_t v148 = v296;
      int64_t v149 = v295;
    }
    else
    {
      uint64_t v200 = v275;
      sub_2AF80(v198, v275, &qword_E7D38);
      if (sub_C844(v199, 1, v197) == 1)
      {
        sub_17644(v196, &qword_E7D38);
        sub_5262C((uint64_t)v194, (void (*)(void))type metadata accessor for CalendarEvent);
        sub_5262C(v271, (void (*)(void))type metadata accessor for DBCalendarState);
        (*v291)(v200, v197);
        goto LABEL_119;
      }
      v201 = v278;
      (*v290)(v278, v199, v197);
      sub_5272C(&qword_E9BF8, (void (*)(uint64_t))&type metadata accessor for Date);
      LODWORD(v315) = sub_B2F10();
      v202 = *v291;
      (*v291)((uint64_t)v201, v197);
      sub_17644(v279, &qword_E7D38);
      sub_5262C((uint64_t)v194, (void (*)(void))type metadata accessor for CalendarEvent);
      sub_5262C(v271, (void (*)(void))type metadata accessor for DBCalendarState);
      v202(v200, v197);
      sub_17644(v198, &qword_E7D38);
      uint64_t v153 = v316;
      uint64_t v148 = v296;
      int64_t v149 = v295;
      if (v315) {
        goto LABEL_213;
      }
    }
    uint64_t v151 = v304;
    uint64_t v150 = v293;
    if (v304 != v270) {
      continue;
    }
    break;
  }
  int v203 = 0;
LABEL_203:
  swift_bridgeObjectRelease();
  uint64_t v142 = v203 ^ 1u;
  if (qword_E6C50 != -1) {
    swift_once();
  }
  uint64_t v262 = v313;
  uint64_t v263 = sub_B378(v313, (uint64_t)qword_E9B48);
  uint64_t v264 = v292;
  v265 = v287;
  (*(void (**)(char *, uint64_t, uint64_t))(v292 + 16))(v287, v263, v262);
  uint64_t v317 = 0;
  unint64_t v318 = 0xE000000000000000;
  sub_B34C0(57);
  v320._countAndFlagsBits = 0xD000000000000037;
  v320._object = (void *)0x80000000000B8150;
  sub_B3020(v320);
  if (v203) {
    v266._countAndFlagsBits = 0x65736C6166;
  }
  else {
    v266._countAndFlagsBits = 1702195828;
  }
  if (v203) {
    v267 = (void *)0xE500000000000000;
  }
  else {
    v267 = (void *)0xE400000000000000;
  }
  v266._object = v267;
  sub_B3020(v266);
  swift_bridgeObjectRelease();
  sub_8C320(v317, v318, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD00000000000003FLL, 0x80000000000B80D0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v264 + 8))(v265, v262);
LABEL_212:
  sub_5262C(v314, (void (*)(void))type metadata accessor for DBCalendarState);
  return v142;
}

uint64_t sub_4F5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_B2D30();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_4F668, 0, 0);
}

uint64_t sub_4F668()
{
  sub_7FDC();
  if (qword_E6C50 != -1) {
    swift_once();
  }
  v0[9] = sub_B378(v0[6], (uint64_t)qword_E9B48);
  sub_7A1C();
  sub_ABC4();
  sub_52854();
  sub_8C308(v1, v2, v3, v4, v5, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[10] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_4F778;
  uint64_t v9 = v0[4];
  uint64_t v8 = v0[5];
  return sub_4F9C4(v9, v8);
}

uint64_t sub_4F778()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *unint64_t v2 = v1;
  *unint64_t v2 = *v0;
  *(void *)(v1 + 88) = v3;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_4F848()
{
  uint64_t v1 = v0[11];
  unint64_t v2 = (void *)v0[3];
  uint64_t v3 = sub_13078();
  v4(v3);
  sub_B34C0(28);
  swift_bridgeObjectRelease();
  v0[2] = *(void *)(v1 + 16);
  v15._countAndFlagsBits = sub_B37C0();
  sub_B3020(v15);
  swift_bridgeObjectRelease();
  sub_7A1C();
  v16._countAndFlagsBits = 0xD000000000000012;
  sub_B3020(v16);
  sub_ABC4();
  sub_52848();
  sub_8C308(v5, 0xE800000000000000, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_5283C();
  v11(v10);
  *unint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_4F9C4(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_B2D00();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_4FA84, 0, 0);
}

uint64_t sub_4FA84()
{
  if (qword_E6D20 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 56);
  id v2 = (id)qword_F5298;
  int8x16_t v6 = *(int8x16_t *)(v0 + 24);
  sub_B2CE0();
  sub_B3300();
  sub_B2CD0();
  uint64_t v3 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  v3[1] = vextq_s8(v6, v6, 8uLL);
  v3[2].i64[0] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  sub_7424(&qword_E9B98);
  *uint64_t v4 = v0;
  v4[1] = sub_4FC20;
  sub_AC10();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_4FC20()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_2B6A4();
  void *v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_4FD08()
{
  sub_7FDC();
  uint64_t v1 = v0[2];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_4FD88()
{
  sub_7FDC();
  swift_task_dealloc();
  if (qword_E6C50 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_B2D30();
  sub_B378(v1, (uint64_t)qword_E9B48);
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C2F0(0xD000000000000015, v2, v3, v4, v5, v6);
  swift_errorRelease();
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void *))v0[1];
  return v7(_swiftEmptyArrayStorage);
}

uint64_t sub_4FEA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v50 = a2;
  uint64_t v48 = a1;
  uint64_t v4 = sub_B2DB0();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_7424(&qword_E9BC8);
  uint64_t v43 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v44 = v6;
  uint64_t v55 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_B2D00();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = v7;
  uint64_t v54 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_B17F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_B32B0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_B32A0();
  __chkstk_darwin(v15 - 8);
  uint64_t v49 = sub_B2E10();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_E6C50 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_B2D30();
  sub_B378(v18, (uint64_t)qword_E9B48);
  sub_8C308(0xD000000000000024, 0x80000000000B7E00, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD000000000000036, 0x80000000000B7DA0);
  sub_3C478();
  uint64_t v38 = v17;
  sub_B2DF0();
  sub_B3290();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v11);
  uint64_t v39 = sub_B32E0();
  uint64_t v19 = v9;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v37 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v8;
  v20(v37, v45, v8);
  uint64_t v22 = v40;
  uint64_t v23 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v54, v46, v42);
  uint64_t v24 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v55, v48, v56);
  unint64_t v25 = (*(unsigned __int8 *)(v19 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v26 = (v10 + *(unsigned __int8 *)(v22 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v27 = (v41 + *(unsigned __int8 *)(v24 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v50;
  *(void *)(v28 + 16) = v50;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v28 + v25, v37, v21);
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v28 + v26, v54, v23);
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v28 + v27, v55, v56);
  aBlock[4] = sub_519A8;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_8554C;
  aBlock[3] = &unk_DDCA0;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = v29;
  uint64_t v32 = v38;
  sub_B2DD0();
  uint64_t v57 = _swiftEmptyArrayStorage;
  sub_5272C(&qword_E9BD0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_7424(&qword_E9BD8);
  sub_51A88();
  uint64_t v33 = v51;
  uint64_t v34 = v53;
  sub_B3440();
  uint64_t v35 = (void *)v39;
  sub_B32D0();
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v49);
  return swift_release();
}

uint64_t sub_505D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a4;
  uint64_t v35 = a3;
  id v33 = a1;
  uint64_t v5 = sub_B2D30();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  __chkstk_darwin(v5);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_B2D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_B17F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
  uint64_t v29 = v14 + 16;
  v15.super.Class isa = sub_B1740().super.isa;
  if ((sub_84A80() - 6) >= 3u) {
    sub_57888(a2, (uint64_t)v13);
  }
  else {
    sub_57878(a2, (uint64_t)v13);
  }
  Class isa = sub_B1740().super.isa;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v41 = sub_51BB8;
  uint64_t v42 = v18;
  aBlock = _NSConcreteStackBlock;
  unint64_t v38 = 1107296256;
  uint64_t v39 = sub_50DF8;
  uint64_t v40 = &unk_DDD18;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v20 = [v33 iterEventHighlightsFrom:v15.super.isa to:isa options:0 error:&aBlock block:v19];
  _Block_release(v19);

  uint64_t v21 = aBlock;
  if (v20)
  {
    swift_beginAccess();
    uint64_t v36 = *(void ***)(v14 + 16);
    swift_bridgeObjectRetain();
    sub_7424(&qword_E9BC8);
    sub_B3130();
    return swift_release();
  }
  else
  {
    uint64_t v23 = v21;
    uint64_t v24 = (void **)sub_B1690();

    swift_willThrow();
    swift_release();
    if (qword_E6D20 != -1) {
      swift_once();
    }
    sub_852C8(v35, 0xD000000000000028, 0x80000000000B7E90, 0x9000u);
    if (qword_E6C50 != -1) {
      swift_once();
    }
    uint64_t v25 = v32;
    uint64_t v26 = sub_B378(v32, (uint64_t)qword_E9B48);
    uint64_t v28 = v30;
    uint64_t v27 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v26, v25);
    aBlock = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_B34C0(44);
    swift_bridgeObjectRelease();
    aBlock = (void **)0xD00000000000002ALL;
    unint64_t v38 = 0x80000000000B7EC0;
    uint64_t v36 = v24;
    swift_errorRetain();
    sub_7424(&qword_E7F40);
    v43._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v43);
    swift_bridgeObjectRelease();
    sub_8C2F0((uint64_t)aBlock, v38, 0xD00000000000002ALL, 0x80000000000B7B60, 0xD000000000000036, 0x80000000000B7DA0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v25);
    aBlock = v24;
    sub_7424(&qword_E9BC8);
    return sub_B3120();
  }
}

unint64_t sub_50B84(void *a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CalendarEvent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t *)(a3 + 16);
  if (![a1 isExtraordinary]) {
    goto LABEL_3;
  }
  id v13 = [a1 title];
  uint64_t v14 = sub_B2F50();
  uint64_t v16 = v15;

  id v17 = [a1 startDate];
  sub_B17C0();

  id v18 = [a1 externalURI];
  sub_B16C0();

  *uint64_t v11 = v14;
  v11[1] = v16;
  swift_beginAccess();
  sub_2A5C8();
  uint64_t v19 = *(void *)(*v12 + 16);
  sub_2A614(v19);
  uint64_t v20 = *v12;
  *(void *)(v20 + 16) = v19 + 1;
  sub_51654((uint64_t)v11, v20+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v19, (void (*)(void))type metadata accessor for CalendarEvent);
  uint64_t v21 = *v12;
  unint64_t result = swift_endAccess();
  if (*(void *)(v21 + 16) == 2)
  {
LABEL_3:
    *a2 = 1;
    if (qword_E6D20 != -1) {
      swift_once();
    }
    swift_beginAccess();
    return sub_852C8(a4, *(void *)(*v12 + 16), 0, 0x4000u);
  }
  return result;
}

void sub_50DF8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_50E6C(id *a1, uint64_t a2, uint64_t (*a3)(char *, uint64_t))
{
  uint64_t v6 = sub_B17F0();
  sub_7870();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_7424(&qword_E7D38);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [*a1 startDate];
  if (v15)
  {
    uint64_t v16 = v15;
    sub_B17C0();

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v11, v6);
    sub_AA40((uint64_t)v14, 0, 1, v6);
    uint64_t result = sub_C844((uint64_t)v14, 1, v6);
    if (result != 1)
    {
      char v18 = a3(v14, a2);
      sub_52808();
      v19();
      return v18 & 1;
    }
  }
  else
  {
    uint64_t result = sub_AA40((uint64_t)v14, 1, 1, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_5100C(id *a1)
{
  uint64_t v2 = sub_B17F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_7424(&qword_E7D38);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [*a1 startDate];
  if (v9)
  {
    uint64_t v10 = v9;
    sub_B17C0();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
    sub_AA40((uint64_t)v8, 0, 1, v2);
    uint64_t result = sub_C844((uint64_t)v8, 1, v2);
    if (result != 1)
    {
      sub_5272C((unint64_t *)&qword_E9C00, (void (*)(uint64_t))&type metadata accessor for Date);
      char v12 = sub_B2EE0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return (v12 & 1) == 0;
    }
  }
  else
  {
    uint64_t result = sub_AA40((uint64_t)v8, 1, 1, v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_51210(void **a1, void *a2)
{
  id v37 = a2;
  uint64_t v3 = sub_B1930();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_B17F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_7424(&qword_E7D38);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  char v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = sub_B1950();
  uint64_t v33 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  __chkstk_darwin(v15);
  id v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = *a1;
  sub_B1920();
  id v19 = [v18 startDate];
  if (!v19)
  {
    sub_AA40((uint64_t)v14, 1, 1, v5);
    goto LABEL_7;
  }
  uint64_t v20 = v19;
  sub_B17C0();

  uint64_t v31 = v6;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v21(v14, v8, v5);
  sub_AA40((uint64_t)v14, 0, 1, v5);
  if (sub_C844((uint64_t)v14, 1, v5) == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v22 = [v37 startDate];
  if (!v22)
  {
LABEL_8:
    uint64_t result = sub_AA40((uint64_t)v12, 1, 1, v5);
    goto LABEL_9;
  }
  uint64_t v23 = v22;
  sub_B17C0();

  v21(v12, v8, v5);
  sub_AA40((uint64_t)v12, 0, 1, v5);
  uint64_t result = sub_C844((uint64_t)v12, 1, v5);
  if (result != 1)
  {
    uint64_t v26 = v35;
    uint64_t v25 = v36;
    uint64_t v27 = v32;
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v32, enum case for Calendar.Component.minute(_:), v36);
    uint64_t v28 = sub_B1910();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v31 + 8);
    v29(v12, v5);
    v29(v14, v5);
    return v28 == 0;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_51604()
{
  return sub_B17B0() & 1;
}

uint64_t sub_51654(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_79FC();
  uint64_t v4 = sub_2B8A4();
  v5(v4);
  return a2;
}

uint64_t sub_516A8()
{
  return sub_51604() & 1;
}

uint64_t sub_516CC()
{
  sub_B17F0();
  sub_79FC();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_51768()
{
  sub_AC48();
  uint64_t v1 = sub_B17F0();
  sub_FC60(v1);
  sub_5279C();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_52778;
  uint64_t v3 = sub_52828();
  return sub_4F5A4(v3, v4, v5);
}

uint64_t sub_51834(uint64_t a1)
{
  return sub_4FEA4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_51840()
{
  uint64_t v23 = sub_B17F0();
  sub_7870();
  uint64_t v2 = v1;
  uint64_t v3 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  sub_B2D00();
  sub_7870();
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v6 + v8) & ~v8;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = sub_7424(&qword_E9BC8);
  sub_7870();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = (v9 + v11 + v17) & ~v17;
  uint64_t v22 = v18 + *(void *)(v16 + 64);
  uint64_t v19 = v3 | v8 | v17 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v23);
  sub_52808();
  v20();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v18, v12);

  return _swift_deallocObject(v0, v22, v19);
}

uint64_t sub_519A8()
{
  uint64_t v1 = sub_B17F0();
  sub_FC60(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = sub_B2D00();
  sub_FC60(v6);
  unint64_t v8 = (v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = sub_7424(&qword_E9BC8);
  sub_FC78(v11);
  uint64_t v13 = *(void **)(v0 + 16);
  uint64_t v14 = v0 + ((v8 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));

  return sub_505D4(v13, v0 + v3, v0 + v8, v14);
}

uint64_t sub_51A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_51A80()
{
  return swift_release();
}

unint64_t sub_51A88()
{
  unint64_t result = qword_E9BE0;
  if (!qword_E9BE0)
  {
    sub_20D6C(&qword_E9BD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_E9BE0);
  }
  return result;
}

uint64_t sub_51ADC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_51B14()
{
  uint64_t v1 = sub_B2D00();
  sub_7870();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

unint64_t sub_51BB8(void *a1, unsigned char *a2)
{
  uint64_t v5 = sub_B2D00();
  sub_FC78(v5);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_50B84(a1, a2, v7, v8);
}

uint64_t sub_51C1C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_30898(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_51C98(v6);
  return sub_B3540();
}

void sub_51C98(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = sub_B37B0(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_128;
    }
    if (v3) {
      sub_52328(0, v3, 1, a1);
    }
    return;
  }
  Swift::Int v5 = v4;
  uint64_t v6 = sub_2D660(v3 / 2);
  v109 = v7;
  uint64_t v110 = v6;
  uint64_t v105 = v3;
  unint64_t v102 = a1;
  if (v3 <= 0) {
    goto LABEL_92;
  }
  Swift::Int v104 = v5;
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v101 = *a1 - 8;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v11 = v8++;
    Swift::Int v107 = v11;
    if (v8 < v3)
    {
      uint64_t v12 = *(void **)(v9 + 8 * v11);
      id v13 = *(id *)(v9 + 8 * v8);
      id v14 = v12;
      uint64_t v15 = sub_3E074(v14);

      Swift::Int v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        Swift::Int v16 = v11;
        while (1)
        {
          uint64_t v17 = v9 + 8 * v16;
          uint64_t v18 = *(void **)(v17 + 8);
          id v19 = *(id *)(v17 + 16);
          id v20 = v18;
          uint64_t v21 = sub_3E074(v20);

          if ((v15 == -1) == (v21 != -1)) {
            break;
          }
          Swift::Int v22 = v16 + 3;
          ++v16;
          if (v22 >= v3)
          {
            Swift::Int v8 = v3;
            goto LABEL_11;
          }
        }
        Swift::Int v8 = v16 + 2;
LABEL_11:
        Swift::Int v11 = v107;
      }
      if (v15 == -1)
      {
        if (v8 < v11) {
          goto LABEL_131;
        }
        if (v11 < v8)
        {
          uint64_t v23 = (uint64_t *)(v101 + 8 * v8);
          Swift::Int v24 = v8;
          Swift::Int v25 = v11;
          uint64_t v26 = (uint64_t *)(v9 + 8 * v11);
          do
          {
            if (v25 != --v24)
            {
              if (!v9) {
                goto LABEL_135;
              }
              uint64_t v27 = *v26;
              *uint64_t v26 = *v23;
              *uint64_t v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11)) {
        goto LABEL_127;
      }
      if (v8 - v11 < v104)
      {
        if (__OFADD__(v11, v104)) {
          goto LABEL_129;
        }
        if (v11 + v104 >= v3) {
          Swift::Int v28 = v3;
        }
        else {
          Swift::Int v28 = v11 + v104;
        }
        if (v28 < v11)
        {
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (v8 != v28)
        {
          uint64_t v103 = v10;
          uint64_t v29 = v101 + 8 * v8;
          Swift::Int v106 = v28;
          do
          {
            uint64_t v30 = *(void **)(v9 + 8 * v8);
            Swift::Int v31 = v11;
            uint64_t v32 = v29;
            do
            {
              uint64_t v33 = *(void **)v32;
              id v34 = v30;
              id v35 = v33;
              uint64_t v36 = sub_3E074(v35);

              if (v36 != -1) {
                break;
              }
              if (!v9) {
                goto LABEL_133;
              }
              id v37 = *(void **)v32;
              uint64_t v30 = *(void **)(v32 + 8);
              *(void *)uint64_t v32 = v30;
              *(void *)(v32 + 8) = v37;
              v32 -= 8;
              ++v31;
            }
            while (v8 != v31);
            ++v8;
            v29 += 8;
            Swift::Int v11 = v107;
          }
          while (v8 != v106);
          Swift::Int v8 = v106;
          uint64_t v10 = v103;
        }
      }
    }
    if (v8 < v11) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_2FF00(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v39 = *((void *)v10 + 2);
    unint64_t v38 = *((void *)v10 + 3);
    unint64_t v40 = v39 + 1;
    if (v39 >= v38 >> 1) {
      uint64_t v10 = sub_2FF00((char *)(v38 > 1), v39 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v40;
    uint64_t v41 = v10 + 32;
    uint64_t v42 = &v10[16 * v39 + 32];
    *(void *)uint64_t v42 = v11;
    *((void *)v42 + 1) = v8;
    if (v39) {
      break;
    }
    unint64_t v40 = 1;
LABEL_85:
    Swift::Int v3 = v105;
    if (v8 >= v105) {
      goto LABEL_93;
    }
  }
  Swift::Int v108 = v8;
  while (1)
  {
    unint64_t v43 = v40 - 1;
    if (v40 >= 4)
    {
      uint64_t v48 = &v41[16 * v40];
      uint64_t v49 = *((void *)v48 - 8);
      uint64_t v50 = *((void *)v48 - 7);
      BOOL v54 = __OFSUB__(v50, v49);
      uint64_t v51 = v50 - v49;
      if (v54) {
        goto LABEL_111;
      }
      uint64_t v53 = *((void *)v48 - 6);
      uint64_t v52 = *((void *)v48 - 5);
      BOOL v54 = __OFSUB__(v52, v53);
      uint64_t v46 = v52 - v53;
      char v47 = v54;
      if (v54) {
        goto LABEL_112;
      }
      unint64_t v55 = v40 - 2;
      uint64_t v56 = &v41[16 * v40 - 32];
      uint64_t v58 = *(void *)v56;
      uint64_t v57 = *((void *)v56 + 1);
      BOOL v54 = __OFSUB__(v57, v58);
      uint64_t v59 = v57 - v58;
      if (v54) {
        goto LABEL_113;
      }
      BOOL v54 = __OFADD__(v46, v59);
      uint64_t v60 = v46 + v59;
      if (v54) {
        goto LABEL_115;
      }
      if (v60 >= v51)
      {
        uint64_t v78 = &v41[16 * v43];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v54 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v54) {
          goto LABEL_121;
        }
        BOOL v71 = v46 < v81;
        goto LABEL_74;
      }
    }
    else
    {
      if (v40 != 3)
      {
        uint64_t v72 = *((void *)v10 + 4);
        uint64_t v73 = *((void *)v10 + 5);
        BOOL v54 = __OFSUB__(v73, v72);
        uint64_t v65 = v73 - v72;
        char v66 = v54;
        goto LABEL_68;
      }
      uint64_t v45 = *((void *)v10 + 4);
      uint64_t v44 = *((void *)v10 + 5);
      BOOL v54 = __OFSUB__(v44, v45);
      uint64_t v46 = v44 - v45;
      char v47 = v54;
    }
    if (v47) {
      goto LABEL_114;
    }
    unint64_t v55 = v40 - 2;
    uint64_t v61 = &v41[16 * v40 - 32];
    uint64_t v63 = *(void *)v61;
    uint64_t v62 = *((void *)v61 + 1);
    BOOL v64 = __OFSUB__(v62, v63);
    uint64_t v65 = v62 - v63;
    char v66 = v64;
    if (v64) {
      goto LABEL_116;
    }
    uint64_t v67 = &v41[16 * v43];
    uint64_t v69 = *(void *)v67;
    uint64_t v68 = *((void *)v67 + 1);
    BOOL v54 = __OFSUB__(v68, v69);
    uint64_t v70 = v68 - v69;
    if (v54) {
      goto LABEL_118;
    }
    if (__OFADD__(v65, v70)) {
      goto LABEL_120;
    }
    if (v65 + v70 >= v46)
    {
      BOOL v71 = v46 < v70;
LABEL_74:
      if (v71) {
        unint64_t v43 = v55;
      }
      goto LABEL_76;
    }
LABEL_68:
    if (v66) {
      goto LABEL_117;
    }
    uint64_t v74 = &v41[16 * v43];
    uint64_t v76 = *(void *)v74;
    uint64_t v75 = *((void *)v74 + 1);
    BOOL v54 = __OFSUB__(v75, v76);
    uint64_t v77 = v75 - v76;
    if (v54) {
      goto LABEL_119;
    }
    if (v77 < v65) {
      goto LABEL_85;
    }
LABEL_76:
    unint64_t v82 = v43 - 1;
    if (v43 - 1 >= v40)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    uint64_t v83 = v9;
    if (!v9) {
      goto LABEL_134;
    }
    uint64_t v84 = v10;
    uint64_t v85 = &v41[16 * v82];
    uint64_t v86 = *(void *)v85;
    uint64_t v87 = v41;
    unint64_t v88 = v43;
    uint64_t v89 = &v41[16 * v43];
    uint64_t v90 = *((void *)v89 + 1);
    uint64_t v91 = v83;
    sub_523F0((void **)(v83 + 8 * *(void *)v85), (id *)(v83 + 8 * *(void *)v89), v83 + 8 * v90, v109);
    if (v1) {
      break;
    }
    if (v90 < v86) {
      goto LABEL_108;
    }
    if (v88 > *((void *)v84 + 2)) {
      goto LABEL_109;
    }
    *(void *)uint64_t v85 = v86;
    *(void *)&v87[16 * v82 + 8] = v90;
    unint64_t v92 = *((void *)v84 + 2);
    if (v88 >= v92) {
      goto LABEL_110;
    }
    uint64_t v10 = v84;
    unint64_t v40 = v92 - 1;
    memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
    uint64_t v41 = v87;
    *((void *)v84 + 2) = v92 - 1;
    uint64_t v9 = v91;
    Swift::Int v8 = v108;
    if (v92 <= 2) {
      goto LABEL_85;
    }
  }
LABEL_90:
  swift_bridgeObjectRelease();
  if (v105 >= -1) {
    goto LABEL_105;
  }
  __break(1u);
LABEL_92:
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  unint64_t v40 = _swiftEmptyArrayStorage[2];
LABEL_93:
  uint64_t v93 = v10;
  if (v40 >= 2)
  {
    uint64_t v94 = *v102;
    while (1)
    {
      unint64_t v95 = v40 - 2;
      if (v40 < 2) {
        break;
      }
      if (!v94) {
        goto LABEL_136;
      }
      uint64_t v96 = v93;
      uint64_t v97 = *(void *)&v93[16 * v95 + 32];
      uint64_t v98 = *(void *)&v93[16 * v40 + 24];
      sub_523F0((void **)(v94 + 8 * v97), (id *)(v94 + 8 * *(void *)&v93[16 * v40 + 16]), v94 + 8 * v98, v109);
      if (v1) {
        goto LABEL_90;
      }
      if (v98 < v97) {
        goto LABEL_123;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v96 = sub_2FFE4((uint64_t)v96);
      }
      if (v95 >= *((void *)v96 + 2)) {
        goto LABEL_124;
      }
      uint64_t v99 = &v96[16 * v95 + 32];
      *(void *)uint64_t v99 = v97;
      *((void *)v99 + 1) = v98;
      unint64_t v100 = *((void *)v96 + 2);
      if (v40 > v100) {
        goto LABEL_125;
      }
      memmove(&v96[16 * v40 + 16], &v96[16 * v40 + 32], 16 * (v100 - v40));
      uint64_t v93 = v96;
      *((void *)v96 + 2) = v100 - 1;
      unint64_t v40 = v100 - 1;
      if (v100 <= 2) {
        goto LABEL_104;
      }
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
LABEL_104:
  swift_bridgeObjectRelease();
  if (v105 >= -1)
  {
LABEL_105:
    *(void *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8)) = 0;
    sub_B30C0();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
}

void sub_52328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
    while (2)
    {
      Swift::Int v8 = *(void **)(v6 + 8 * v4);
      uint64_t v9 = a1;
      uint64_t v10 = v7;
      do
      {
        Swift::Int v11 = *(void **)v10;
        id v12 = v8;
        id v13 = v11;
        uint64_t v14 = sub_3E074(v13);

        if (v14 != -1) {
          break;
        }
        if (!v6)
        {
          __break(1u);
          return;
        }
        uint64_t v15 = *(void **)v10;
        Swift::Int v8 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v8;
        *(void *)(v10 + 8) = v15;
        v10 -= 8;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v7 += 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_523F0(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a1;
  uint64_t v7 = (char *)a2 - (char *)a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 8;
  if (v8 >= v10)
  {
    uint64_t v14 = a2;
    sub_5FDF0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    if (v6 >= v14 || v9 < 8)
    {
      id v12 = &v4[v10];
    }
    else
    {
      Swift::Int v25 = (void **)(a3 - 8);
      id v12 = &v4[v10];
      id v37 = v4;
      do
      {
        unint64_t v38 = v25 + 1;
        uint64_t v27 = v12 - 1;
        uint64_t v26 = *(v12 - 1);
        unint64_t v28 = (unint64_t)v12;
        uint64_t v29 = v14 - 1;
        uint64_t v30 = *(v14 - 1);
        id v31 = v26;
        id v32 = v30;
        uint64_t v33 = sub_3E074(v32);

        if (v33 == -1)
        {
          BOOL v34 = v38 != v14 || v25 >= v14;
          --v14;
        }
        else
        {
          BOOL v34 = v38 != (void **)v28 || (unint64_t)v25 >= v28;
          uint64_t v29 = v27;
          unint64_t v28 = (unint64_t)v27;
        }
        uint64_t v4 = v37;
        if (v34) {
          *Swift::Int v25 = *v29;
        }
        --v25;
        id v12 = (void **)v28;
      }
      while (v14 > v6 && v28 > (unint64_t)v37);
    }
  }
  else
  {
    sub_5FDF0(a1, a2 - a1, a4);
    id v12 = &v4[v8];
    if ((unint64_t)a2 < a3 && v7 >= 8)
    {
      Swift::Int v16 = a2;
      while (1)
      {
        uint64_t v17 = *v4;
        uint64_t v18 = v16;
        id v19 = *v16;
        id v20 = v17;
        uint64_t v21 = sub_3E074(v20);

        if (v21 == -1) {
          break;
        }
        Swift::Int v22 = v4;
        BOOL v23 = v6 == v4++;
        Swift::Int v16 = v18;
        if (!v23) {
          goto LABEL_16;
        }
LABEL_17:
        ++v6;
        if (v4 >= v12 || (unint64_t)v16 >= a3) {
          goto LABEL_7;
        }
      }
      Swift::Int v22 = v18;
      Swift::Int v16 = v18 + 1;
      if (v6 == v18) {
        goto LABEL_17;
      }
LABEL_16:
      void *v6 = *v22;
      goto LABEL_17;
    }
LABEL_7:
    uint64_t v14 = v6;
  }
  sub_5FDF0(v4, v12 - v4, v14);
  return 1;
}

uint64_t sub_525F8(id *a1)
{
  return sub_50E6C(a1, *(void *)(v1 + 16), (uint64_t (*)(char *, uint64_t))&static Date.> infix(_:_:)) & 1;
}

uint64_t sub_5262C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_79FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_52684(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_79FC();
  uint64_t v4 = sub_2B8B8();
  v5(v4);
  return a2;
}

uint64_t sub_526D8(id *a1)
{
  return sub_50E6C(a1, *(void *)(v1 + 16), (uint64_t (*)(char *, uint64_t))&static Date.< infix(_:_:)) & 1;
}

uint64_t sub_5270C(id *a1)
{
  return sub_5100C(a1) & 1;
}

uint64_t sub_5272C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_52784()
{
  return v0;
}

uint64_t sub_527CC()
{
  return swift_task_alloc();
}

void sub_527E8()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  sub_B34C0(37);
}

uint64_t sub_52814()
{
  return v0;
}

uint64_t sub_52828()
{
  return v0;
}

uint64_t sub_5283C()
{
  return v0;
}

void sub_52868(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_8C308(0xD000000000000022, a1, a2, a3, a4, (a5 - 32) | 0x8000000000000000);
}

uint64_t sub_52888()
{
  sub_B1880();
  sub_7870();
  uint64_t v40 = v0;
  uint64_t v41 = v1;
  __chkstk_darwin(v0);
  sub_7A0C();
  uint64_t v4 = v3 - v2;
  uint64_t v39 = sub_B1950();
  sub_7870();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_7A0C();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_7424(&qword_E9CB8);
  __chkstk_darwin(v11 - 8);
  sub_7A0C();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_B29F0();
  sub_7870();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_7A0C();
  uint64_t v21 = v20 - v19;
  if (qword_E6C68 != -1) {
    swift_once();
  }
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v21, enum case for DateTime.DateTimeRange.DefinedDateTimeRange.evening(_:), v15);
  uint64_t v38 = sub_B29B0();
  sub_AA40(v14, 1, 1, v38);
  sub_B1920();
  sub_B1870();
  sub_B2A00();
  sub_53160();
  sub_B2EA0();
  char v22 = sub_65624();
  swift_bridgeObjectRelease();
  id v37 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v37(v4, v40);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v36(v10, v39);
  sub_531B0(v14, &qword_E9CB8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
  if (v22) {
    return 2;
  }
  uint64_t v24 = sub_53228();
  v25(v24);
  uint64_t v26 = v4;
  uint64_t v23 = 1;
  sub_53258();
  sub_B1870();
  sub_B2EA0();
  sub_53240();
  char v27 = sub_65624();
  swift_bridgeObjectRelease();
  v37(v26, v40);
  v36(v10, v39);
  sub_531B0(v14, &qword_E9CB8);
  uint64_t v28 = sub_5320C();
  v29(v28);
  if ((v27 & 1) == 0)
  {
    uint64_t v30 = sub_53228();
    v31(v30);
    sub_53258();
    sub_B1870();
    sub_B2EA0();
    sub_53240();
    char v32 = sub_65624();
    swift_bridgeObjectRelease();
    v37(v26, v40);
    v36(v10, v39);
    sub_531B0(v14, &qword_E9CB8);
    uint64_t v33 = sub_5320C();
    v34(v33);
    if (v32) {
      return 0;
    }
    else {
      return 3;
    }
  }
  return v23;
}

uint64_t sub_52CB0(char a1, char a2)
{
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 49) = a2;
  *(unsigned char *)(v3 + 48) = a1;
  sub_7424(&qword_E76E0);
  *(void *)(v3 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_52D4C, 0, 0);
}

uint64_t sub_52D4C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  sub_7424(&qword_E7D20);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 32) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_C0AE0;
  *(void *)(v2 + 32) = 0x6573616850796164;
  *(void *)(v2 + 40) = 0xE800000000000000;
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 48);
  *(void *)(v2 + 72) = sub_B2C40();
  sub_7590((uint64_t *)(v3 + 48));
  sub_B2C20();
  *(void *)(v3 + 80) = 0xD000000000000011;
  *(void *)(v3 + 88) = 0x80000000000B83E0;
  *(void *)(v3 + 120) = &type metadata for Bool;
  *(unsigned char *)(v3 + 96) = v5;
  uint64_t v6 = sub_B2090();
  sub_AA40(v4, 1, 1, v6);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_EB988 + dword_EB988);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_52F64;
  uint64_t v8 = *(void *)(v0 + 24);
  return v10(v3, v8, v1);
}

uint64_t sub_52F64(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 24);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_531B0(v3, &qword_E76E0);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v6 + 8);
  return v4(a1);
}

uint64_t sub_530B0(char a1)
{
  uint64_t result = 0x4F4F4E5245544641;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1314017101;
      goto LABEL_4;
    case 2:
      unsigned int v3 = 1313166917;
LABEL_4:
      uint64_t result = v3 | 0x474E4900000000;
      break;
    case 3:
      uint64_t result = 0x524548544FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for GreetingTemplatingService()
{
  return self;
}

unint64_t sub_53160()
{
  unint64_t result = qword_E9CC0;
  if (!qword_E9CC0)
  {
    sub_B29F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9CC0);
  }
  return result;
}

uint64_t sub_531B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_7424(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_5320C()
{
  return v0;
}

uint64_t sub_53228()
{
  return v0;
}

uint64_t sub_53240()
{
  return *(void *)(v0 - 184);
}

uint64_t sub_53258()
{
  sub_AA40(v0, 1, 1, *(void *)(v1 - 136));
  return sub_B1920();
}

uint64_t sub_53290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t j = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (j << 6); ; unint64_t i = __clz(__rbit64(v14)) + (j << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    sub_ABEBC(v17, v18, a2);
    if (v19)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v17;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = j + 1;
    if (__OFADD__(j, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++j;
    if (v14) {
      goto LABEL_19;
    }
    int64_t j = v13 + 1;
    if (v13 + 1 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * j);
    if (v14) {
      goto LABEL_19;
    }
    int64_t j = v13 + 2;
    if (v13 + 2 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * j);
    if (v14) {
      goto LABEL_19;
    }
    int64_t j = v13 + 3;
    if (v13 + 3 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * j);
    if (v14) {
      goto LABEL_19;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v8)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v15);
    for (int64_t j = v15; !v14; ++v15)
    {
      int64_t j = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_27;
      }
      if (j >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v4 + 8 * j);
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_53444(unint64_t a1, void (*a2)(uint64_t, id))
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v5 = sub_7424(&qword_E8B68);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_B2D90();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  char v32 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v27 = (char *)v25 - v11;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_B3620())
  {
    v25[1] = v3;
    unint64_t v31 = a1 & 0xC000000000000001;
    uint64_t v29 = v28 + 32;
    BOOL v34 = _swiftEmptyArrayStorage;
    uint64_t v3 = 4;
    unint64_t v26 = a1;
    uint64_t v30 = v12;
    int64_t v13 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    while (1)
    {
      uint64_t v14 = v8;
      uint64_t v8 = v3 - 4;
      id v15 = v31 ? (id)sub_B34F0() : *(id *)(a1 + 8 * v3);
      uint64_t v16 = v15;
      uint64_t v17 = v3 - 3;
      if (__OFADD__(v8, 1)) {
        break;
      }
      v33(v3 - 4, v15);

      uint64_t v8 = v14;
      if (sub_C844((uint64_t)v7, 1, v14) == 1)
      {
        sub_12FE4((uint64_t)v7, &qword_E8B68);
      }
      else
      {
        uint64_t v18 = *v13;
        char v19 = v27;
        (*v13)(v27, v7, v14);
        v18(v32, v19, v14);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v20 = v34;
        }
        else {
          uint64_t v20 = (void *)sub_5EB80(0, v34[2] + 1, 1, (uint64_t)v34);
        }
        unint64_t v22 = v20[2];
        unint64_t v21 = v20[3];
        if (v22 >= v21 >> 1) {
          uint64_t v20 = (void *)sub_5EB80(v21 > 1, v22 + 1, 1, (uint64_t)v20);
        }
        v20[2] = v22 + 1;
        unint64_t v23 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        BOOL v34 = v20;
        uint64_t v8 = v14;
        v18((char *)v20 + v23 + *(void *)(v28 + 72) * v22, v32, v14);
        a1 = v26;
      }
      ++v3;
      if (v17 == v30)
      {
        swift_bridgeObjectRelease();
        return v34;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_5378C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W5>, uint64_t a5@<X8>)
{
  return sub_537A4(a1, a2, a3, a4, (void (*)(id, uint64_t, uint64_t))sub_552E8, a5);
}

uint64_t sub_537A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W5>, void (*a5)(id, uint64_t, uint64_t)@<X6>, uint64_t a6@<X8>)
{
  uint64_t v13 = sub_7424(&qword_EC820);
  __chkstk_darwin(v13 - 8);
  sub_57488();
  uint64_t v14 = sub_7424(&qword_E8B68);
  __chkstk_darwin(v14 - 8);
  sub_7A0C();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_B2D90();
  sub_2B68C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_574A0();
  id v22 = v6;
  swift_bridgeObjectRetain();
  a5(v22, a1, a2);
  if (sub_C844(v17, 1, v18) == 1)
  {
    sub_12FE4(v17, &qword_E8B68);
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_B2D30();
    sub_B378(v23, (uint64_t)qword_F5360);
    sub_ABC4();
    sub_8C2F0(0xD000000000000027, v24, v25, v26, v27, 0x80000000000B84A0);
    uint64_t v28 = 1;
    uint64_t v29 = a6;
  }
  else
  {
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    v30(v8, v17, v18);
    if (a3 && (a4 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_B2D40();
      uint64_t v31 = sub_B2D50();
      sub_AA40(v7, 0, 1, v31);
      sub_B2D80();
    }
    uint64_t v29 = a6;
    v30(a6, v8, v18);
    uint64_t v28 = 0;
  }
  return sub_AA40(v29, v28, 1, v18);
}

uint64_t sub_53A44(uint64_t *a1, uint64_t *a2)
{
  if ((sub_20E18(*a1, *a2) & 1) != 0
    && (sub_20E18(a1[1], a2[1]) & 1) != 0
    && (type metadata accessor for RemindersPreprocessingResult(0), (sub_B17B0() & 1) != 0)
    && (sub_3085C(0, &qword_E9F70), (sub_B3360() & 1) != 0))
  {
    return sub_B3360() & 1;
  }
  else
  {
    return 0;
  }
}

void sub_53B00(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for SupportedFeatures;
  *(void *)(a1 + 32) = &off_DE210;
  *(unsigned char *)a1 = 1;
}

uint64_t sub_53B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13RemindersSpec_eventDetails_Value;
  swift_beginAccess();
  return sub_12EE8(v3, a2, &qword_E9F78);
}

uint64_t sub_53B8C(uint64_t a1)
{
  uint64_t v3 = sub_7424(&qword_E9F78);
  uint64_t v4 = sub_FC60(v3);
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v4);
  uint64_t v9 = *(NSObject **)(v1 + 80);
  sub_12EE8(a1, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_E9F78);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  sub_572D0((uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_57338;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_2B604;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5922C;
  aBlock[3] = &unk_DDD90;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v13);
  _Block_release(v13);
  sub_12FE4(a1, &qword_E9F78);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_53D74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13RemindersSpec_eventDetails_Value;
  swift_beginAccess();
  sub_573C8(a2, v3);
  return swift_endAccess();
}

uint64_t sub_53DD0()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_53DF0, 0, 0);
}

uint64_t sub_53DF0()
{
  if (qword_E6C00 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F4F40;
  v0[3] = qword_F4F40;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_E9F80 + dword_E9F80);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_53EE4;
  uint64_t v3 = v0[2];
  return v5(v1, v3);
}

uint64_t sub_53EE4(uint64_t a1)
{
  sub_7FC4();
  uint64_t v3 = *v1;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v6 = v5 & 1;
  swift_task_dealloc();
  swift_release();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  return v7(a1, v6);
}

uint64_t sub_53FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1;
  uint64_t v62 = a1;
  sub_B1820();
  sub_2B68C();
  uint64_t v60 = v6;
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  sub_7A0C();
  uint64_t v59 = v8 - v7;
  uint64_t v9 = sub_7424(&qword_E76E0);
  __chkstk_darwin(v9 - 8);
  sub_7A0C();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_B2090();
  sub_2B68C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_57488();
  sub_7424(&qword_E9F78);
  sub_79FC();
  __chkstk_darwin(v17);
  sub_7A0C();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = type metadata accessor for RemindersPreprocessingResult(0);
  sub_79FC();
  __chkstk_darwin(v22);
  sub_574A0();
  sub_B32C0();
  if (sub_C844(v20, 1, v21) == 1)
  {
    uint64_t v23 = &qword_E9F78;
    uint64_t v24 = v20;
LABEL_5:
    sub_12FE4(v24, v23);
    uint64_t v25 = 1;
    uint64_t v26 = v62;
    return sub_AA40(v26, v25, 1, v13);
  }
  sub_57094(v20, (uint64_t)v3);
  sub_8E2FC(v12);
  if (sub_C844(v12, 1, v13) == 1)
  {
    sub_570F8((uint64_t)v3);
    uint64_t v23 = &qword_E76E0;
    uint64_t v24 = v12;
    goto LABEL_5;
  }
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
  uint64_t v57 = 0;
  uint64_t v58 = v15 + 32;
  uint64_t v56 = v27;
  v27(v2, v12, v13);
  sub_21D48(0);
  sub_B1FF0();
  uint64_t v28 = *(void **)((char *)v3 + *(int *)(v21 + 32));
  id v29 = *(id *)((char *)v3 + *(int *)(v21 + 28));
  id v30 = v28;
  sub_6CAB4(v29, v30);

  sub_B2020();
  unint64_t v31 = *v3;
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_92394(3, v31);
  unint64_t v36 = (unint64_t)sub_A25F0(v32, v33, v34, v35);
  if (v36 >> 62)
  {
    sub_3085C(0, (unint64_t *)&qword_E85E0);
    uint64_t v37 = sub_B3610();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_B37F0();
    sub_3085C(0, (unint64_t *)&qword_E85E0);
    uint64_t v37 = v36;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v38 = v3[1];
  swift_bridgeObjectRetain_n();
  uint64_t v39 = sub_92394(3, v38);
  unint64_t v43 = (unint64_t)sub_A25F0(v39, v40, v41, v42);
  if (v43 >> 62)
  {
    sub_3085C(0, (unint64_t *)&qword_E85E0);
    uint64_t v44 = sub_B3610();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_B37F0();
    sub_3085C(0, (unint64_t *)&qword_E85E0);
    uint64_t v44 = v43;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = v37;
  sub_55E94(v44);
  sub_7468((void *)(v4 + 112), *(void *)(v4 + 136));
  char v45 = sub_B1E20();
  if (v45) {
    unint64_t v46 = 0xD000000000000017;
  }
  else {
    unint64_t v46 = 0xD000000000000013;
  }
  if (v45) {
    unint64_t v47 = 0x80000000000B4520;
  }
  else {
    unint64_t v47 = 0x80000000000B4500;
  }
  sub_B1810();
  uint64_t v48 = sub_B1800();
  uint64_t v50 = v49;
  sub_131C8();
  uint64_t v52 = v51();
  __chkstk_darwin(v52);
  *(&v55 - 4) = v46;
  *(&v55 - 3) = v47;
  *(&v55 - 2) = v48;
  *(&v55 - 1) = v50;
  unint64_t v53 = swift_bridgeObjectRetain();
  sub_53444(v53, (void (*)(uint64_t, id))sub_57154);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_B1FE0();
  sub_570F8((uint64_t)v3);
  uint64_t v26 = v62;
  v56(v62, v2, v13);
  uint64_t v25 = 0;
  return sub_AA40(v26, v25, 1, v13);
}

uint64_t sub_54530(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = swift_allocObject();
  sub_A918(a9, *(void *)(a9 + 24));
  sub_2B68C();
  __chkstk_darwin(v16);
  sub_7A0C();
  uint64_t v19 = (uint64_t *)(v18 - v17);
  (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
  uint64_t v21 = sub_56E14(a1, a2, a3, a4, a5, a6, a7, a8, *v19, v15);
  sub_74F8(a9);
  return v21;
}

uint64_t sub_54650()
{
  sub_B2D30();
  sub_79FC();
  sub_131C8();
  v1();
  return sub_12FE4(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13RemindersSpec_eventDetails_Value, &qword_E9F78);
}

uint64_t sub_546BC()
{
  uint64_t v0 = sub_8E3A8();
  sub_B2D30();
  sub_79FC();
  sub_131C8();
  v1();
  sub_12FE4(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13RemindersSpec_eventDetails_Value, &qword_E9F78);
  uint64_t v2 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v2, v3);
}

uint64_t sub_54770()
{
  return type metadata accessor for RemindersSpec(0);
}

uint64_t type metadata accessor for RemindersSpec(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_E9D00);
}

void sub_54798()
{
  sub_B2D30();
  if (v0 <= 0x3F)
  {
    sub_54864();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_54864()
{
  if (!qword_E9D18)
  {
    type metadata accessor for RemindersPreprocessingResult(255);
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_E9D18);
    }
  }
}

uint64_t type metadata accessor for RemindersPreprocessingResult(uint64_t a1)
{
  return sub_F470(a1, qword_E9F28);
}

uint64_t *sub_548DC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_B17F0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + v13) = (uint64_t)v15;
    uint64_t v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v7 + v14) = (uint64_t)v16;
    id v17 = v15;
    id v18 = v16;
  }
  return v7;
}

void sub_549FC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_B17F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = *(void **)(a1 + a2[8]);
}

void *sub_54A9C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_B17F0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v14;
  uint64_t v15 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v15;
  id v16 = v14;
  id v17 = v15;
  return a1;
}

void *sub_54B68(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)((char *)a2 + v14);
  id v16 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v17 = v15;

  return a1;
}

_OWORD *sub_54C4C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_54CEC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);

  uint64_t v12 = a3[8];
  id v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  return a1;
}

uint64_t sub_54DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_54DCC);
}

uint64_t sub_54DCC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_B17F0();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return sub_C844(v9, a2, v8);
  }
}

uint64_t sub_54E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_54E68);
}

void *sub_54E68(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_B17F0();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)sub_AA40(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_54EE8()
{
  uint64_t result = sub_B17F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_54F94@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  return sub_537A4(a1, a2, a3, 0, (void (*)(id, uint64_t, uint64_t))sub_54FF0, a4);
}

uint64_t sub_54FE8()
{
  return sub_563A0(v0);
}

uint64_t sub_54FF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_7424(&qword_EC820);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_7424(&qword_E8B68);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = a1;
  uint64_t v11 = sub_555E4();

  if (!v11) {
    goto LABEL_5;
  }
  sub_563A0(v10);
  if (!v12)
  {
    swift_release();
LABEL_5:
    swift_bridgeObjectRelease();
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_B2D30();
    sub_B378(v14, (uint64_t)qword_F5360);
    sub_8C2F0(0xD000000000000019, 0x80000000000B84D0, 0xD000000000000036, 0x80000000000B8460, 0xD000000000000014, 0x80000000000B84F0);

    goto LABEL_10;
  }
  uint64_t v13 = sub_B2D50();
  sub_AA40((uint64_t)v6, 1, 1, v13);
  sub_3085C(0, (unint64_t *)&qword_E85E0);
  sub_B2D60();
  uint64_t v15 = sub_B2D90();
  sub_AA40((uint64_t)v9, 0, 1, v15);
  sub_B2D90();
  if (!sub_C844((uint64_t)v9, 1, v15))
  {
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(a2, v9, v15);
    uint64_t v18 = a2;
    uint64_t v19 = 0;
    uint64_t v17 = v15;
    return sub_AA40(v18, v19, 1, v17);
  }
  sub_12FE4((uint64_t)v9, &qword_E8B68);
LABEL_10:
  uint64_t v17 = sub_B2D90();
  uint64_t v18 = a2;
  uint64_t v19 = 1;
  return sub_AA40(v18, v19, 1, v17);
}

uint64_t sub_552E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_7424(&qword_EC820);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_7424(&qword_E8B68);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (sub_55890())
  {
    id v10 = [a1 uniqueIdentifier];
    sub_B2F50();

    uint64_t v11 = sub_B2D50();
    sub_AA40((uint64_t)v6, 1, 1, v11);
    sub_3085C(0, (unint64_t *)&qword_E8B78);
    sub_B2D60();
    uint64_t v13 = sub_B2D90();
    sub_AA40((uint64_t)v9, 0, 1, v13);
    sub_B2D90();
    if (!sub_C844((uint64_t)v9, 1, v13))
    {
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a2, v9, v13);
      uint64_t v16 = a2;
      uint64_t v17 = 0;
      uint64_t v15 = v13;
      return sub_AA40(v16, v17, 1, v15);
    }
    sub_12FE4((uint64_t)v9, &qword_E8B68);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_B2D30();
    sub_B378(v12, (uint64_t)qword_F5360);
    sub_8C2F0(0xD000000000000019, 0x80000000000B84D0, 0xD000000000000036, 0x80000000000B8460, 0xD000000000000014, 0x80000000000B84F0);
  }
  uint64_t v15 = sub_B2D90();
  uint64_t v16 = a2;
  uint64_t v17 = 1;
  return sub_AA40(v16, v17, 1, v15);
}

uint64_t sub_555E4()
{
  uint64_t v0 = sub_B2D30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = INTask.entityBuilder.getter();
  if (!v4)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_B378(v0, (uint64_t)qword_F5360);
    sub_8C2F0(0xD000000000000037, 0x80000000000B8510, 0xD000000000000036, 0x80000000000B8460, 0x7469746E456F7375, 0xE900000000000079);
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_B2590();
  if (!v6)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_B378(v0, (uint64_t)qword_F5360);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_B34C0(28);
    swift_bridgeObjectRelease();
    uint64_t v11 = 0xD00000000000001ALL;
    unint64_t v12 = 0x80000000000B8550;
    v10[1] = v5;
    sub_B2500();
    swift_retain();
    v13._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v13);
    swift_bridgeObjectRelease();
    sub_8C2F0(v11, v12, 0xD000000000000036, 0x80000000000B8460, 0x7469746E456F7375, 0xE900000000000079);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  uint64_t v7 = v6;
  swift_release();
  return v7;
}

uint64_t sub_55890()
{
  uint64_t v0 = sub_B2D30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = MapsSuggestionsEntry.entityBuilder.getter();
  if (!v4)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_B378(v0, (uint64_t)qword_F5360);
    sub_8C2F0(0xD000000000000037, 0x80000000000B8510, 0xD000000000000036, 0x80000000000B8460, 0x7469746E456F7375, 0xE900000000000079);
    return 0;
  }
  id v5 = v4;
  uint64_t v6 = sub_B2590();
  if (!v6)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_B378(v0, (uint64_t)qword_F5360);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_B34C0(28);
    swift_bridgeObjectRelease();
    uint64_t v11 = 0xD00000000000001ALL;
    unint64_t v12 = 0x80000000000B8550;
    v10[1] = v5;
    sub_B2500();
    swift_retain();
    v13._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v13);
    swift_bridgeObjectRelease();
    sub_8C2F0(v11, v12, 0xD000000000000036, 0x80000000000B8460, 0x7469746E456F7375, 0xE900000000000079);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  uint64_t v7 = v6;
  swift_release();
  return v7;
}

uint64_t sub_55B3C()
{
  uint64_t v0 = sub_B2D30();
  sub_2B68C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_7A0C();
  uint64_t v6 = v5 - v4;
  if (!sub_5E734())
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_B378(v0, (uint64_t)qword_F5360);
    sub_ABC4();
    sub_57430();
    sub_8C2F0(v9, v10, v11, v12, v13, v14);
    return 0;
  }
  uint64_t v7 = sub_B2590();
  if (!v7)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_B378(v0, (uint64_t)qword_F5360);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v15, v0);
    sub_B34C0(28);
    swift_bridgeObjectRelease();
    sub_B2500();
    swift_retain();
    v23._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v23);
    swift_bridgeObjectRelease();
    sub_ABC4();
    sub_57430();
    sub_8C2F0(v16, v17, v18, v19, v20, v21);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
    return 0;
  }
  uint64_t v8 = v7;
  swift_release();
  return v8;
}

uint64_t sub_55D7C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v5 > *(void *)(v3 + 24) >> 1)
  {
    if (v4 <= v5) {
      uint64_t v7 = v4 + v2;
    }
    else {
      uint64_t v7 = v4;
    }
    uint64_t result = sub_5EBC8(result, v7, 1, v3);
    uint64_t v3 = result;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = type metadata accessor for CalendarEvent(0);
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t result = v10 - 8;
  uint64_t v11 = v12;
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t result = sub_6012C(v6 + v13, v2, v3 + v13 + *(void *)(v11 + 72) * v8);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFADD__(v14, v2);
  uint64_t v16 = v14 + v2;
  if (!v15)
  {
    *(void *)(v3 + 16) = v16;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

#error "55F74: call analysis failed (funcsize=114)"

void sub_5605C(uint64_t a1)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *v1;
  uint64_t v8 = *(void *)(*v1 + 16);
  uint64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v11 = *(void *)(v7 + 24) >> 1, v11 < v9))
  {
    sub_5EE38();
    uint64_t v7 = v12;
    uint64_t v11 = *(void *)(v12 + 24) >> 1;
  }
  uint64_t v13 = *(void *)(v7 + 16);
  uint64_t v14 = v11 - v13;
  uint64_t v15 = sub_30024((uint64_t)v38, (void *)(v7 + 16 * v13 + 32), v11 - v13, a1);
  if (v15 < v6) {
    goto LABEL_12;
  }
  if (v15)
  {
    uint64_t v17 = *(void *)(v7 + 16);
    BOOL v18 = __OFADD__(v17, v15);
    uint64_t v19 = v17 + v15;
    if (v18)
    {
      __break(1u);
LABEL_46:
      int64_t v30 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_68;
      }
      int64_t v36 = (unint64_t)(v16 + 64) >> 6;
      if (v30 >= v36) {
        goto LABEL_10;
      }
      if (!*(void *)(v37 + 8 * v30))
      {
        sub_5747C();
        if (v23 == v18) {
          goto LABEL_10;
        }
        sub_57470();
        if (!v31)
        {
          sub_5747C();
          if (v23 == v18) {
            goto LABEL_10;
          }
          sub_57470();
          if (!v32)
          {
            sub_5747C();
            if (v23 == v18) {
              goto LABEL_10;
            }
            sub_57470();
            if (!v33)
            {
              sub_574EC();
              if (v23 == v18) {
                goto LABEL_10;
              }
              if (!*(void *)(v37 + 8 * v34))
              {
                while (1)
                {
                  sub_574EC();
                  if (v23 == v18) {
                    break;
                  }
                  if (*(void *)(v37 + 8 * v35)) {
                    goto LABEL_49;
                  }
                }
LABEL_10:
                sub_2B070();
                *uint64_t v1 = v7;
                return;
              }
            }
          }
        }
      }
LABEL_49:
      sub_57454();
      goto LABEL_15;
    }
    *(void *)(v7 + 16) = v19;
  }
  if (v15 != v14) {
    goto LABEL_10;
  }
LABEL_13:
  uint64_t v3 = *(void *)(v7 + 16);
  uint64_t v37 = v38[1];
  uint64_t v16 = v39;
  uint64_t v9 = v40;
  if (!v41) {
    goto LABEL_46;
  }
  uint64_t v5 = (v41 - 1) & v41;
  int64_t v36 = (unint64_t)(v39 + 64) >> 6;
LABEL_15:
  sub_574B8();
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v20 = *(void *)(v7 + 24) >> 1;
    if (v20 < v3 + 1)
    {
      sub_5EE38();
      uint64_t v7 = v29;
      uint64_t v20 = *(void *)(v29 + 24) >> 1;
    }
    if (v3 < v20) {
      break;
    }
LABEL_43:
    *(void *)(v7 + 16) = v3;
  }
  while (1)
  {
    unint64_t v21 = (void *)(v7 + 32 + 16 * v3);
    *unint64_t v21 = v4;
    v21[1] = v2;
    ++v3;
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_40;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v22 >= v36) {
      goto LABEL_44;
    }
    if (!*(void *)(v37 + 8 * v22))
    {
      sub_5747C();
      if (v23 == v18) {
        goto LABEL_44;
      }
      sub_57470();
      if (!v24)
      {
        sub_5747C();
        if (v23 == v18) {
          goto LABEL_44;
        }
        sub_57470();
        if (!v25)
        {
          sub_5747C();
          if (v23 == v18) {
            goto LABEL_44;
          }
          sub_57470();
          if (!v26)
          {
            sub_574EC();
            if (v23 == v18) {
              goto LABEL_44;
            }
            if (!*(void *)(v37 + 8 * v27))
            {
              while (1)
              {
                sub_574EC();
                if (v23 == v18) {
                  break;
                }
                if (*(void *)(v37 + 8 * v28)) {
                  goto LABEL_39;
                }
              }
LABEL_44:
              *(void *)(v7 + 16) = v3;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_39:
    sub_57454();
LABEL_40:
    sub_574B8();
    if (v3 >= v20)
    {
      swift_bridgeObjectRetain();
      goto LABEL_43;
    }
    swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_68:
  __break(1u);
}

uint64_t sub_563A0(void *a1)
{
  id v1 = [a1 identifier];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_B2F50();

  return v3;
}

uint64_t sub_56404(uint64_t a1, uint64_t a2)
{
  v2[25] = a2;
  sub_7424(&qword_E76E0);
  v2[26] = swift_task_alloc();
  sub_7424(&qword_E9F78);
  v2[27] = swift_task_alloc();
  v2[28] = type metadata accessor for RemindersPreprocessingResult(0);
  v2[29] = swift_task_alloc();
  uint64_t v4 = sub_B17F0();
  v2[30] = v4;
  v2[31] = *(void *)(v4 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = sub_7424(&qword_E9AE0);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AppDetecter();
  v2[36] = v5;
  v2[5] = v5;
  v2[6] = &off_DD2C8;
  v2[2] = a1;
  swift_retain();
  return _swift_task_switch(sub_565C4, 0, 0);
}

uint64_t sub_565C4()
{
  sub_7468(v0 + 2, v0[36]);
  if (qword_E6C80 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_F50D8;
  uint64_t v2 = sub_24430();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_53290((uint64_t)v2, v1);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  v0[37] = v5;
  if (v5)
  {
    v17._countAndFlagsBits = v3;
    v17._object = v5;
    sub_B3020(v17);
    sub_ABC4();
    sub_8C308(v6, 0xEB00000000203A70, v7, v8, 0xD000000000000016, 0x80000000000B85A0);
    swift_bridgeObjectRelease();
    sub_B17E0();
    sub_B2260();
    sub_B1DA0();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[38] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_56874;
    return sub_6C380();
  }
  else
  {
    sub_2A760();
    uint64_t v11 = (void *)sub_4043C();
    *uint64_t v12 = 3;
    sub_8E480(v11, 256);
    uint64_t v13 = sub_4043C();
    *uint64_t v14 = 3;
    sub_574CC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v15(v13, 1);
  }
}

uint64_t sub_56874()
{
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = v1 + 96;
  uint64_t v6 = v5[32];
  uint64_t v7 = v5[31];
  uint64_t v8 = v5[30];
  uint64_t v9 = *v0;
  sub_2B6A4();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_74F8(v4);
  sub_74F8(v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  return _swift_task_switch(sub_569DC, 0, 0);
}

uint64_t sub_569DC()
{
  sub_12EE8(v0[35], v0[34], &qword_E9AE0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (void **)v0[34];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[35];
    uint64_t v4 = *v2;
    swift_errorRetain();
    sub_8E480(v4, 256);
    sub_12FE4(v3, &qword_E9AE0);
    sub_574CC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void *, uint64_t))v0[1];
    return v5(v4, 1);
  }
  else
  {
    uint64_t v7 = v0[28];
    uint64_t v8 = v0[29];
    uint64_t v10 = v0[26];
    uint64_t v9 = v0[27];
    uint64_t v11 = v0[25];
    sub_57094((uint64_t)v2, v8);
    sub_57160(v8, v9);
    sub_AA40(v9, 0, 1, v7);
    sub_53B8C(v9);
    sub_B2260();
    uint64_t v12 = *(void *)(v11 + 160);
    type metadata accessor for RemindersTemplatingService();
    uint64_t inited = swift_initStackObject();
    v0[39] = inited;
    *(void *)(inited + 16) = v12;
    swift_retain();
    sub_74F8((uint64_t)(v0 + 17));
    sub_53FE4(v10);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[40] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_56BF8;
    uint64_t v15 = v0[29];
    uint64_t v16 = v0[26];
    return sub_78B20(v15, v16);
  }
}

uint64_t sub_56BF8()
{
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 208);
  uint64_t v5 = *v0;
  sub_2B6A4();
  void *v6 = v5;
  *(void *)(v8 + 328) = v7;
  swift_task_dealloc();
  swift_release();
  sub_12FE4(v4, &qword_E76E0);
  return _swift_task_switch(sub_56D10, 0, 0);
}

uint64_t sub_56D10()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[29];
  uint64_t v3 = (void *)swift_retain();
  sub_8E480(v3, 1);
  swift_release();
  sub_570F8(v2);
  sub_12FE4(v1, &qword_E9AE0);
  sub_74F8((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, void))v0[1];
  return v4(1, 0);
}

uint64_t sub_56E14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v31 = a8;
  uint64_t v30 = a7;
  v36[3] = type metadata accessor for OfflineStateProvider();
  v36[4] = &off_DEAE0;
  v36[0] = a9;
  uint64_t v16 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin13RemindersSpec_logger;
  uint64_t v17 = qword_E6D88;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = a10 + v16;
  uint64_t v19 = sub_B2D30();
  uint64_t v20 = sub_B378(v19, (uint64_t)qword_F53F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v20, v19);
  uint64_t v21 = a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin13RemindersSpec_eventDetails_Value;
  uint64_t v22 = type metadata accessor for RemindersPreprocessingResult(0);
  sub_AA40(v21, 1, 1, v22);
  swift_release();
  sub_A8B4(a5, (uint64_t)v35);
  sub_A8B4(a6, (uint64_t)v34);
  sub_A8B4((uint64_t)v36, (uint64_t)v32);
  uint64_t v23 = sub_A918((uint64_t)v32, v33);
  __chkstk_darwin(v23);
  uint64_t v25 = (uint64_t *)((char *)&v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  uint64_t v27 = sub_8F900(a1, a2, a3, a4, v35, v34, v30, v31, *v25, a10);
  sub_74F8((uint64_t)v32);
  sub_74F8((uint64_t)v36);
  sub_74F8(a6);
  sub_74F8(a5);
  return v27;
}

uint64_t sub_57078@<X0>(uint64_t a1@<X8>)
{
  return sub_53B20(v1, a1);
}

uint64_t sub_57094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemindersPreprocessingResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_570F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemindersPreprocessingResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_57154@<X0>(uint64_t a1@<X8>)
{
  return sub_54F94(v1[2], v1[3], v1[5], a1);
}

uint64_t sub_57160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemindersPreprocessingResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_571C4()
{
  uint64_t v1 = sub_7424(&qword_E9F78);
  sub_FC60(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v7 = v0 + v4;
  uint64_t v8 = type metadata accessor for RemindersPreprocessingResult(0);
  if (!sub_C844(v0 + v4, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_B17F0();
    sub_79FC();
    sub_131C8();
    v9();
  }

  return _swift_deallocObject(v0, v4 + v6, v3 | 7);
}

uint64_t sub_572D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E9F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_57338()
{
  uint64_t v1 = *(void *)(sub_7424(&qword_E9F78) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_53D74(v2, v3);
}

uint64_t sub_573A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_573B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_573C0()
{
  return swift_release();
}

uint64_t sub_573C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E9F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_574B8()
{
  return *(void *)(*(void *)(v1 + 48) + 16 * v0 + 8);
}

uint64_t sub_574CC()
{
  return sub_74F8(v0);
}

uint64_t sub_574F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_7424(&qword_E9F88);
  uint64_t v3 = sub_13294(v2);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_B1880();
  sub_7870();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [objc_allocWithZone((Class)NSDateFormatter) init];
  sub_B1830();
  Class isa = sub_B1860().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  [v12 setLocale:isa];

  sub_58568(0xD000000000000018, 0x80000000000B85C0, v12);
  sub_B1970();
  uint64_t v14 = sub_B1990();
  Class v15 = 0;
  if (sub_C844((uint64_t)v5, 1, v14) != 1)
  {
    Class v15 = sub_B1980().super.isa;
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v5, v14);
  }
  [v12 setTimeZone:v15];

  NSString v16 = sub_B2F20();
  id v17 = [v12 dateFromString:v16];

  if (v17)
  {
    sub_B17C0();

    uint64_t v18 = 0;
    id v12 = v17;
  }
  else
  {
    uint64_t v18 = 1;
  }

  uint64_t v19 = sub_B17F0();
  return sub_AA40(a1, v18, 1, v19);
}

uint64_t sub_57770()
{
  uint64_t v0 = sub_B17F0();
  sub_7870();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_3CE90();
  uint64_t v6 = (char *)(v4 - v5);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_B17E0();
  sub_B1730();
  char v10 = sub_57E58();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v6, v0);
  v11(v9, v0);
  return v10 & 1;
}

uint64_t sub_57878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_57898(a1, 2, a2);
}

uint64_t sub_57888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_57898(a1, 1, a2);
}

uint64_t sub_57898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_5894C(a1, a2, a3);
  sub_7870();
  __chkstk_darwin(v7);
  sub_58848();
  sub_7870();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_587DC();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_7424(&qword_E7D38);
  uint64_t v13 = sub_13294(v12);
  __chkstk_darwin(v13);
  sub_588C8();
  uint64_t v14 = sub_7424(&qword_E9F88);
  uint64_t v15 = sub_13294(v14);
  __chkstk_darwin(v15);
  sub_588B0();
  uint64_t v16 = sub_7424(&qword_E9FA0);
  uint64_t v17 = sub_13294(v16);
  __chkstk_darwin(v17);
  sub_587F8();
  sub_7870();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_58910();
  sub_AA40(v4, 1, 1, v19);
  sub_586EC();
  sub_589A0();
  sub_B1620();
  sub_B1920();
  sub_B1920();
  sub_B1890();
  uint64_t v20 = *(void (**)(void))(v9 + 8);
  sub_47168();
  v20();
  sub_5888C();
  uint64_t v21 = sub_58794();
  v3(v21);
  uint64_t v22 = sub_58870();
  ((void (*)(uint64_t))v20)(v22);
  if (sub_C844(v6, 1, v5) == 1)
  {
    sub_17644(v6, &qword_E7D38);
    sub_B1920();
    sub_5896C();
    uint64_t v23 = sub_588F8();
    ((void (*)(uint64_t))v20)(v23);
    sub_B1730();
    uint64_t v24 = sub_5898C();
    v3(v24);
    uint64_t v25 = sub_5877C();
  }
  else
  {
    uint64_t v28 = sub_5877C();
    v29(v28);
    uint64_t v25 = sub_588E0();
  }
  return v26(v25);
}

uint64_t sub_57B38(uint64_t a1)
{
  uint64_t v24 = sub_B17F0();
  sub_7870();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_3CE90();
  uint64_t v23 = (char *)(v6 - v7);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - v9;
  sub_B1950();
  sub_7870();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_58820();
  char v14 = sub_B18A0();
  uint64_t v15 = *(void (**)(void))(v12 + 8);
  sub_47168();
  v15();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v17 = a1;
  uint64_t v18 = v24;
  v16(v10, v17, v24);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v18);
    return 1;
  }
  else
  {
    sub_B1920();
    char v19 = sub_B18D0();
    sub_47168();
    v15();
    uint64_t v20 = v23;
    v16(v23, (uint64_t)v10, v18);
    if (v19)
    {
      sub_84A80();
      sub_589C0();
    }
    else
    {
      uint64_t v1 = 0;
    }
    uint64_t v21 = *(void (**)(char *, uint64_t))(v4 + 8);
    v21(v20, v18);
    v21(v10, v18);
  }
  return v1;
}

uint64_t sub_57D14(uint64_t a1)
{
  uint64_t v3 = sub_B17F0();
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_B1950();
  sub_7870();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_58820();
  char v13 = sub_B18D0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v3);
  if (v13)
  {
    sub_84A80();
    sub_589C0();
  }
  else
  {
    uint64_t v1 = 0;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  return v1;
}

uint64_t sub_57E58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_7424(&qword_E9F90);
  sub_79FC();
  __chkstk_darwin(v3);
  sub_3CE90();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v30 = sub_7424(&qword_E9F98);
  sub_79FC();
  __chkstk_darwin(v10);
  sub_3CE90();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v29 = (uint64_t)v27 - v15;
  uint64_t v16 = sub_B17F0();
  sub_585CC();
  uint64_t result = sub_B2F00();
  if (result)
  {
    uint64_t v18 = *(int *)(v2 + 48);
    uint64_t v28 = v1;
    char v19 = &v9[v18];
    uint64_t v20 = v6;
    uint64_t v21 = *(void **)(v16 - 8);
    uint64_t v22 = (void (*)(void))v21[2];
    v27[1] = v2;
    sub_587BC();
    v22();
    v27[2] = v19;
    sub_587BC();
    v22();
    uint64_t v23 = v20 + *(int *)(v2 + 48);
    sub_587BC();
    v22();
    sub_587BC();
    v22();
    uint64_t v24 = (void (*)(void))v21[4];
    sub_587CC();
    v24();
    uint64_t v25 = (void (*)(uint64_t, uint64_t))v21[1];
    v25(v23, v16);
    sub_587CC();
    v24();
    sub_587CC();
    v24();
    sub_587CC();
    v24();
    v25(v20, v16);
    uint64_t v26 = v29;
    sub_5861C(v13, v29);
    LOBYTE(v20) = sub_583B8(v28);
    sub_17644(v26, &qword_E9F98);
    return v20 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_58104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_58124(a1, 1, a2);
}

uint64_t sub_58114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_58124(a1, -1, a2);
}

uint64_t sub_58124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_5894C(a1, a2, a3);
  sub_7870();
  __chkstk_darwin(v7);
  sub_58848();
  sub_7870();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_587DC();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_7424(&qword_E7D38);
  uint64_t v13 = sub_13294(v12);
  __chkstk_darwin(v13);
  sub_588C8();
  uint64_t v14 = sub_7424(&qword_E9F88);
  uint64_t v15 = sub_13294(v14);
  __chkstk_darwin(v15);
  sub_588B0();
  uint64_t v16 = sub_7424(&qword_E9FA0);
  uint64_t v17 = sub_13294(v16);
  __chkstk_darwin(v17);
  sub_587F8();
  sub_7870();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_58910();
  sub_AA40(v4, 1, 1, v19);
  sub_586EC();
  sub_589A0();
  sub_B1920();
  sub_B1920();
  sub_B1890();
  uint64_t v20 = *(void (**)(void))(v9 + 8);
  sub_47168();
  v20();
  sub_5888C();
  uint64_t v21 = sub_58794();
  v3(v21);
  uint64_t v22 = sub_58870();
  ((void (*)(uint64_t))v20)(v22);
  if (sub_C844(v6, 1, v5) == 1)
  {
    sub_17644(v6, &qword_E7D38);
    sub_B1920();
    sub_5896C();
    uint64_t v23 = sub_588F8();
    ((void (*)(uint64_t))v20)(v23);
    sub_B1730();
    uint64_t v24 = sub_5898C();
    v3(v24);
    uint64_t v25 = sub_5877C();
  }
  else
  {
    uint64_t v28 = sub_5877C();
    v29(v28);
    uint64_t v25 = sub_588E0();
  }
  return v26(v25);
}

uint64_t sub_583B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_7424(&qword_E9F98);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_B17F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_585CC();
  char v11 = sub_B2EF0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_58684(v2, (uint64_t)v6);
  if (v11) {
    char v12 = sub_B2F00();
  }
  else {
    char v12 = 0;
  }
  sub_17644((uint64_t)v6, &qword_E9F98);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

void sub_58568(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_B2F20();
  swift_bridgeObjectRelease();
  [a3 setDateFormat:v4];
}

unint64_t sub_585CC()
{
  unint64_t result = qword_E9C00;
  if (!qword_E9C00)
  {
    sub_B17F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E9C00);
  }
  return result;
}

uint64_t sub_5861C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E9F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_58684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E9F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_586EC()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v0, v1, 0, 1, 0, 1, 0, 1);
}

uint64_t sub_5877C()
{
  return v0;
}

uint64_t sub_58794()
{
  *(void *)(v1 - 168) = v0;
  return v0;
}

uint64_t sub_587F8()
{
  return sub_B1650();
}

uint64_t sub_58820()
{
  return sub_B1920();
}

uint64_t sub_58848()
{
  return sub_B1950();
}

uint64_t sub_58870()
{
  uint64_t result = v1;
  *(void *)(v3 - 136) = v0;
  *(void *)(v3 - 160) = v2;
  return result;
}

uint64_t sub_5888C()
{
  return Calendar.date(byAdding:to:wrappingComponents:)(v0, v1, 0);
}

uint64_t sub_588E0()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_588F8()
{
  return v0;
}

uint64_t sub_58910()
{
  sub_AA40(v0, 1, 1, v1);
  return sub_B1990();
}

uint64_t sub_5894C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(v3 - 136) = a2;
  *(void *)(v3 - 112) = a3;
  *(void *)(v3 - 104) = a1;
  return sub_B17F0();
}

uint64_t sub_5896C()
{
  return sub_B1890();
}

uint64_t sub_5898C()
{
  return v0;
}

uint64_t sub_589A0()
{
  uint64_t v2 = *(void *)(v0 - 136);
  return ((uint64_t (*)(uint64_t, void))DateComponents.day.setter)(v2, 0);
}

uint64_t sub_589D4()
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_7424(&qword_E9FA8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - v8;
  sub_B1650();
  sub_1A364();
  uint64_t v11 = v10;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  sub_591F0();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v33 - v17;
  id v19 = [v3 temporalEventTrigger];
  if (!v19)
  {
    sub_591C4((uint64_t)v9, 1);
LABEL_8:
    sub_531B0((uint64_t)v9, &qword_E9FA8);
    return 0;
  }
  uint64_t v20 = v19;
  id v21 = [v19 dateComponentsRange];

  id v22 = [v21 startDateComponents];
  if (v22)
  {
    sub_B15A0();

    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  sub_591C4((uint64_t)v7, v23);
  sub_46830((uint64_t)v7, (uint64_t)v9, &qword_E9FA8);
  sub_591A4((uint64_t)v9);
  if (v24) {
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v9, v0);
  sub_B15D0();
  char v27 = v26;
  uint64_t v28 = *(void (**)(void))(v11 + 16);
  sub_591DC();
  v28();
  if (v27)
  {
    sub_B1600();
    uint64_t v25 = v29 & 1;
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  v30(v2, v0);
  sub_591DC();
  v28();
  if (v25)
  {
    sub_B1610();
    uint64_t v25 = v31 & 1;
  }
  v30(v15, v0);
  v30(v18, v0);
  return v25;
}

uint64_t sub_58C84(void *a1)
{
  sub_B17F0();
  sub_1A364();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_18E00();
  uint64_t v55 = v8;
  __chkstk_darwin(v9);
  uint64_t v57 = (char *)&v52 - v10;
  uint64_t v11 = sub_7424(&qword_E7D38);
  __chkstk_darwin(v11 - 8);
  sub_18E00();
  uint64_t v56 = v12;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  id v19 = (char *)&v52 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  id v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  sub_591F0();
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v52 - v27;
  id v29 = [v2 temporalEventTrigger];
  if (v29)
  {
    uint64_t v30 = v29;
    unint64_t v53 = v25;
    BOOL v54 = v16;
    char v31 = a1;
    uint64_t v32 = v6;
    id v33 = [v29 dateComponentsRange];

    id v34 = [v33 startDate];
    if (v34)
    {
      sub_B17C0();

      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 1;
    }
    uint64_t v6 = v32;
    a1 = v31;
    uint64_t v25 = v53;
    uint64_t v16 = v54;
    p_ivar_base_size = &BaseFlowSpec.ivar_base_size;
    sub_591C4(v3, v35);
    sub_46830(v3, (uint64_t)v28, &qword_E7D38);
  }
  else
  {
    sub_591C4((uint64_t)v28, 1);
    p_ivar_base_size = (_DWORD *)(&BaseFlowSpec + 8);
  }
  id v37 = objc_msgSend(a1, *((SEL *)p_ivar_base_size + 354));
  if (v37)
  {
    unint64_t v38 = v37;
    id v39 = [v37 dateComponentsRange];

    id v40 = [v39 startDate];
    if (v40)
    {
      sub_B17C0();

      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v41 = 1;
    }
    sub_591C4((uint64_t)v22, v41);
    sub_46830((uint64_t)v22, (uint64_t)v25, &qword_E7D38);
  }
  else
  {
    sub_591C4((uint64_t)v25, 1);
  }
  unint64_t v42 = v57;
  sub_5913C((uint64_t)v28, (uint64_t)v19);
  sub_591A4((uint64_t)v19);
  if (v44)
  {
    uint64_t v16 = v19;
  }
  else
  {
    unint64_t v43 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v43(v42, v19, v1);
    sub_5913C((uint64_t)v25, (uint64_t)v16);
    sub_591A4((uint64_t)v16);
    if (!v44)
    {
      uint64_t v48 = v55;
      v43(v55, v16, v1);
      uint64_t v49 = sub_B17D0();
      uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v50((uint64_t)v48, v1);
      v50((uint64_t)v42, v1);
      sub_531B0((uint64_t)v25, &qword_E7D38);
      sub_531B0((uint64_t)v28, &qword_E7D38);
      return v49;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v1);
  }
  sub_531B0((uint64_t)v16, &qword_E7D38);
  int v45 = sub_C844((uint64_t)v28, 1, v1);
  uint64_t v46 = v56;
  sub_46830((uint64_t)v25, v56, &qword_E7D38);
  if (v45 == 1 && (sub_591A4(v46), v44))
  {
    sub_531B0(v46, &qword_E7D38);
    sub_531B0((uint64_t)v28, &qword_E7D38);
    return 0;
  }
  else
  {
    sub_531B0(v46, &qword_E7D38);
    int v47 = sub_C844((uint64_t)v28, 1, v1);
    sub_531B0((uint64_t)v28, &qword_E7D38);
    if (v47 == 1) {
      return 1;
    }
    else {
      return -1;
    }
  }
}

uint64_t sub_5913C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_591A4(uint64_t a1)
{
  return sub_C844(a1, 1, v1);
}

uint64_t sub_591C4(uint64_t a1, uint64_t a2)
{
  return sub_AA40(a1, a2, 1, v2);
}

uint64_t sub_59204(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_5922C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_59254(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for SupportedFeatures;
  *(void *)(a1 + 32) = &off_DE210;
  *(unsigned char *)a1 = 2;
}

uint64_t sub_59274(uint64_t a1)
{
  uint64_t v3 = sub_7424(&qword_EA268);
  uint64_t v4 = sub_FC60(v3);
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v4);
  uint64_t v9 = *(NSObject **)(v1 + 80);
  sub_12EE8(a1, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_EA268);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  sub_5BC34((uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_5BC9C;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_5BD14;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5922C;
  aBlock[3] = &unk_DDE08;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v13);
  _Block_release(v13);
  sub_17644(a1, &qword_EA268);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_5945C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherForecast_Value;
  swift_beginAccess();
  sub_5BD54(a2, v3);
  return swift_endAccess();
}

uint64_t sub_594B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = sub_A918(a9, *(void *)(a9 + 24));
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = sub_5B7D4(a1, a2, a3, a4, a5, a6, v22, v23, *v18, v15);
  sub_74F8(a9);
  return v20;
}

uint64_t sub_59604()
{
  v1[11] = v0;
  sub_7424(&qword_EA268);
  v1[12] = swift_task_alloc();
  v1[13] = type metadata accessor for WeatherPreprocessingResult(0);
  v1[14] = swift_task_alloc();
  v1[15] = sub_7424(&qword_E9AA0);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_5970C, 0, 0);
}

uint64_t sub_5970C()
{
  uint64_t v1 = v0[11];
  v0[18] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_logger;
  sub_5BDBC(0xD00000000000001ELL, 0x80000000000B8650);
  sub_7468((void *)(v1 + 168), *(void *)(v1 + 192));
  if (sub_8EAE8())
  {
    sub_5BDBC(0xD000000000000027, 0x80000000000B8700);
    sub_2A760();
    uint64_t v2 = (void *)sub_4043C();
    unsigned char *v3 = 0;
    sub_8E480(v2, 256);
    uint64_t v4 = sub_4043C();
    *uint64_t v5 = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v6(v4, 1);
  }
  else
  {
    sub_7468((void *)(v0[11] + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherService), *(void *)(v0[11] + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherService + 24));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[19] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_598E8;
    return sub_A465C();
  }
}

uint64_t sub_598E8()
{
  sub_7FC4();
  swift_task_dealloc();
  return _swift_task_switch(sub_599C0, 0, 0);
}

id sub_599C0()
{
  sub_12EE8(v0[17], v0[16], &qword_E9AA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = v0[17];
    uint64_t v2 = *(void **)v0[16];
    swift_errorRetain();
    sub_8E480(v2, 256);
    sub_B34C0(44);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v26._countAndFlagsBits = sub_B3860();
    sub_B3020(v26);
    swift_bridgeObjectRelease();
    sub_5BDF4();
    sub_8C308(v3, v4, v5, v6, v7, v8);
    swift_bridgeObjectRelease();
    sub_17644(v1, &qword_E9AA0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void *, uint64_t))v0[1];
    return (id)v9(v2, 1);
  }
  else
  {
    uint64_t v12 = v0[13];
    uint64_t v11 = v0[14];
    uint64_t v13 = v0[12];
    sub_5B6B0(v0[16], v11);
    sub_5BDF4();
    sub_8C308(v14, v15, v16, v17, v18, v19);
    sub_5B714(v11, v13);
    sub_AA40(v13, 0, 1, v12);
    sub_59274(v13);
    if (qword_E6DA0 != -1) {
      swift_once();
    }
    uint64_t v20 = v0[11];
    sub_84ED0(1, qword_F5438, unk_F5440, byte_F5448, (void *)qword_F5450);
    sub_A8B4(v20 + 112, (uint64_t)(v0 + 2));
    uint64_t v21 = *(void *)(v20 + 160);
    type metadata accessor for WeatherTemplatingService();
    swift_allocObject();
    swift_retain();
    v0[20] = sub_60ED8((uint64_t)(v0 + 2), v21);
    id result = [self currentLocale];
    v0[21] = result;
    if (result)
    {
      uint64_t v22 = (uint64_t)result;
      uint64_t v23 = (void *)swift_task_alloc();
      v0[22] = v23;
      *uint64_t v23 = v0;
      v23[1] = sub_59D28;
      uint64_t v24 = v0[14];
      return (id)sub_6075C(v24, v22);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_59D28()
{
  sub_7FC4();
  uint64_t v1 = *(void **)(v0 + 168);
  *(void *)(v3 + 184) = v2;
  swift_task_dealloc();

  swift_release();
  return _swift_task_switch(sub_59E3C, 0, 0);
}

uint64_t sub_59E3C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = (void *)swift_retain();
  sub_8E480(v3, 1);
  swift_release();
  sub_5B778(v2);
  sub_17644(v1, &qword_E9AA0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = (uint64_t (*)(uint64_t, void))v0[1];
  return v4(1, 0);
}

uint64_t sub_59F0C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_logger;
  sub_B2D30();
  sub_79FC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherService);
  return sub_17644(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherForecast_Value, &qword_EA268);
}

uint64_t sub_59F8C()
{
  uint64_t v0 = sub_8E3A8();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_logger;
  sub_B2D30();
  sub_79FC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherService);
  sub_17644(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherForecast_Value, &qword_EA268);
  return v0;
}

uint64_t sub_5A018()
{
  uint64_t v0 = sub_59F8C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_5A06C()
{
  return type metadata accessor for WeatherSpec(0);
}

uint64_t type metadata accessor for WeatherSpec(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_E9FE8);
}

void sub_5A094()
{
  sub_B2D30();
  if (v0 <= 0x3F)
  {
    sub_5A168();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_5A168()
{
  if (!qword_EA000)
  {
    type metadata accessor for WeatherPreprocessingResult(255);
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EA000);
    }
  }
}

uint64_t type metadata accessor for WeatherPreprocessingResult(uint64_t a1)
{
  return sub_F470(a1, qword_EA228);
}

char *sub_5A1E0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_7424((uint64_t *)&unk_E7880);
    unint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for CurrentWeatherForecast();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if (sub_C844((uint64_t)&a2[v10], 1, v7))
    {
      uint64_t v13 = sub_7424(&qword_E7878);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      sub_AA40((uint64_t)v11, 0, 1, v7);
    }
    uint64_t v15 = v9[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    if (sub_C844((uint64_t)&a2[v15], 1, v7))
    {
      uint64_t v18 = sub_7424(&qword_E7878);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v8(v16, v17, v7);
      sub_AA40((uint64_t)v16, 0, 1, v7);
    }
    a1[v9[7]] = a2[v9[7]];
    uint64_t v19 = v9[8];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = sub_B17F0();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    uint64_t v24 = a3[6];
    *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
    uint64_t v25 = &a1[v24];
    Swift::String v26 = &a2[v24];
    uint64_t v27 = *(void *)&a2[v24 + 24];
    swift_bridgeObjectRetain();
    if (v27)
    {
      *uint64_t v25 = *v26;
      *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
      *((void *)v25 + 3) = v27;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((void *)v25 + 6) = *((void *)v26 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v28;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((void *)v25 + 6) = *((void *)v26 + 6);
    }
    uint64_t v29 = a3[7];
    uint64_t v30 = &a1[v29];
    char v31 = &a2[v29];
    v23(&a1[v29], v31, v22);
    uint64_t v32 = (int *)type metadata accessor for WeatherState();
    *(void *)&v30[v32[5]] = *(void *)&v31[v32[5]];
    uint64_t v33 = v32[6];
    id v34 = &v30[v33];
    uint64_t v35 = &v31[v33];
    uint64_t v37 = *(void *)v35;
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)id v34 = v37;
    *((void *)v34 + 1) = v36;
    *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_5A4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424((uint64_t *)&unk_E7880);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = (int *)type metadata accessor for CurrentWeatherForecast();
  uint64_t v7 = a1 + v6[5];
  if (!sub_C844(v7, 1, v4)) {
    v5(v7, v4);
  }
  uint64_t v8 = a1 + v6[6];
  if (!sub_C844(v8, 1, v4)) {
    v5(v8, v4);
  }
  uint64_t v9 = a1 + v6[8];
  uint64_t v10 = sub_B17F0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 24) + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11(a1 + *(int *)(a2 + 28), v10);
  type metadata accessor for WeatherState();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_5A698(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for CurrentWeatherForecast();
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if (sub_C844((uint64_t)&a2[v9], 1, v6))
  {
    uint64_t v12 = sub_7424(&qword_E7878);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    sub_AA40((uint64_t)v10, 0, 1, v6);
  }
  uint64_t v13 = v8[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (sub_C844((uint64_t)&a2[v13], 1, v6))
  {
    uint64_t v16 = sub_7424(&qword_E7878);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v7(v14, v15, v6);
    sub_AA40((uint64_t)v14, 0, 1, v6);
  }
  a1[v8[7]] = a2[v8[7]];
  uint64_t v17 = v8[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_B17F0();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  v21(v18, v19, v20);
  uint64_t v22 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(void *)&a2[v22 + 24];
  swift_bridgeObjectRetain();
  if (v25)
  {
    *uint64_t v23 = *v24;
    *(_OWORD *)(v23 + 8) = *(_OWORD *)(v24 + 8);
    *((void *)v23 + 3) = v25;
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((void *)v23 + 6) = *((void *)v24 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *((_OWORD *)v24 + 1);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v26;
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((void *)v23 + 6) = *((void *)v24 + 6);
  }
  uint64_t v27 = a3[7];
  long long v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  v21(&a1[v27], v29, v20);
  uint64_t v30 = (int *)type metadata accessor for WeatherState();
  *(void *)&v28[v30[5]] = *(void *)&v29[v30[5]];
  uint64_t v31 = v30[6];
  uint64_t v32 = &v28[v31];
  uint64_t v33 = (uint64_t *)&v29[v31];
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *(void *)uint64_t v32 = v35;
  *((void *)v32 + 1) = v34;
  *(void *)&v28[v30[7]] = *(void *)&v29[v30[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_5A95C(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for CurrentWeatherForecast();
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v5);
  int v13 = sub_C844((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v11, v5);
      sub_AA40((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_7424(&qword_E7878);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7(v10, v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = sub_C844((uint64_t)&a1[v15], 1, v5);
  int v19 = sub_C844((uint64_t)v17, 1, v5);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v16, v17, v5);
      sub_AA40((uint64_t)v16, 0, 1, v5);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
LABEL_12:
    uint64_t v20 = sub_7424(&qword_E7878);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v7(v16, v17, v5);
LABEL_13:
  a1[v8[7]] = a2[v8[7]];
  uint64_t v21 = v8[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_B17F0();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[6];
  uint64_t v27 = (uint64_t)&a1[v26];
  long long v28 = &a2[v26];
  uint64_t v29 = *(void *)&a1[v26 + 24];
  uint64_t v30 = *(void *)&a2[v26 + 24];
  if (v29)
  {
    if (v30)
    {
      *(unsigned char *)uint64_t v27 = *v28;
      *(void *)(v27 + 8) = *((void *)v28 + 1);
      *(void *)(v27 + 16) = *((void *)v28 + 2);
      *(void *)(v27 + 24) = *((void *)v28 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v27 + 32) = *((void *)v28 + 4);
      *(void *)(v27 + 40) = *((void *)v28 + 5);
      *(void *)(v27 + 48) = *((void *)v28 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_5ADCC(v27);
      long long v32 = *((_OWORD *)v28 + 1);
      long long v31 = *((_OWORD *)v28 + 2);
      long long v33 = *(_OWORD *)v28;
      *(void *)(v27 + 48) = *((void *)v28 + 6);
      *(_OWORD *)(v27 + 16) = v32;
      *(_OWORD *)(v27 + 32) = v31;
      *(_OWORD *)uint64_t v27 = v33;
    }
  }
  else if (v30)
  {
    *(unsigned char *)uint64_t v27 = *v28;
    *(void *)(v27 + 8) = *((void *)v28 + 1);
    *(void *)(v27 + 16) = *((void *)v28 + 2);
    *(void *)(v27 + 24) = *((void *)v28 + 3);
    *(void *)(v27 + 32) = *((void *)v28 + 4);
    *(void *)(v27 + 40) = *((void *)v28 + 5);
    *(void *)(v27 + 48) = *((void *)v28 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *(_OWORD *)v28;
    long long v35 = *((_OWORD *)v28 + 1);
    long long v36 = *((_OWORD *)v28 + 2);
    *(void *)(v27 + 48) = *((void *)v28 + 6);
    *(_OWORD *)(v27 + 16) = v35;
    *(_OWORD *)(v27 + 32) = v36;
    *(_OWORD *)uint64_t v27 = v34;
  }
  uint64_t v37 = a3[7];
  unint64_t v38 = &a1[v37];
  id v39 = &a2[v37];
  v25(&a1[v37], v39, v24);
  id v40 = (int *)type metadata accessor for WeatherState();
  *(void *)&v38[v40[5]] = *(void *)&v39[v40[5]];
  uint64_t v41 = v40[6];
  unint64_t v42 = &v38[v41];
  unint64_t v43 = &v39[v41];
  *(void *)unint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v38[v40[7]] = *(void *)&v39[v40[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_5ADCC(uint64_t a1)
{
  return a1;
}

char *sub_5AE20(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for CurrentWeatherForecast();
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if (sub_C844((uint64_t)&a2[v9], 1, v6))
  {
    uint64_t v12 = sub_7424(&qword_E7878);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    sub_AA40((uint64_t)v10, 0, 1, v6);
  }
  uint64_t v13 = v8[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (sub_C844((uint64_t)&a2[v13], 1, v6))
  {
    uint64_t v16 = sub_7424(&qword_E7878);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v7(v14, v15, v6);
    sub_AA40((uint64_t)v14, 0, 1, v6);
  }
  a1[v8[7]] = a2[v8[7]];
  uint64_t v17 = v8[8];
  int v18 = &a1[v17];
  int v19 = &a2[v17];
  uint64_t v20 = sub_B17F0();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  uint64_t v22 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((void *)v23 + 6) = *((void *)v24 + 6);
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v26];
  long long v28 = &a2[v26];
  v21(&a1[v26], v28, v20);
  uint64_t v29 = (int *)type metadata accessor for WeatherState();
  *(void *)&v27[v29[5]] = *(void *)&v28[v29[5]];
  *(_OWORD *)&v27[v29[6]] = *(_OWORD *)&v28[v29[6]];
  *(void *)&v27[v29[7]] = *(void *)&v28[v29[7]];
  return a1;
}

char *sub_5B088(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for CurrentWeatherForecast();
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v5);
  int v13 = sub_C844((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v11, v5);
      sub_AA40((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_7424(&qword_E7878);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7(v10, v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = sub_C844((uint64_t)&a1[v15], 1, v5);
  int v19 = sub_C844((uint64_t)v17, 1, v5);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v17, v5);
      sub_AA40((uint64_t)v16, 0, 1, v5);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
LABEL_12:
    uint64_t v20 = sub_7424(&qword_E7878);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v7(v16, v17, v5);
LABEL_13:
  a1[v8[7]] = a2[v8[7]];
  uint64_t v21 = v8[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_B17F0();
  long long v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40);
  v25(v22, v23, v24);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[6];
  uint64_t v27 = (uint64_t)&a1[v26];
  long long v28 = &a2[v26];
  if (!*(void *)&a1[v26 + 24])
  {
LABEL_17:
    long long v30 = *((_OWORD *)v28 + 1);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v30;
    *(_OWORD *)(v27 + 32) = *((_OWORD *)v28 + 2);
    *(void *)(v27 + 48) = *((void *)v28 + 6);
    goto LABEL_18;
  }
  uint64_t v29 = *((void *)v28 + 3);
  if (!v29)
  {
    sub_5ADCC(v27);
    goto LABEL_17;
  }
  *(unsigned char *)uint64_t v27 = *v28;
  *(_OWORD *)(v27 + 8) = *(_OWORD *)(v28 + 8);
  *(void *)(v27 + 24) = v29;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v27 + 32) = *((_OWORD *)v28 + 2);
  *(void *)(v27 + 48) = *((void *)v28 + 6);
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v31 = a3[7];
  long long v32 = &a1[v31];
  long long v33 = &a2[v31];
  v25(&a1[v31], v33, v24);
  long long v34 = (int *)type metadata accessor for WeatherState();
  *(void *)&v32[v34[5]] = *(void *)&v33[v34[5]];
  uint64_t v35 = v34[6];
  long long v36 = &v32[v35];
  uint64_t v37 = (uint64_t *)&v33[v35];
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *(void *)long long v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  *(void *)&v32[v34[7]] = *(void *)&v33[v34[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_5B44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5B460);
}

uint64_t sub_5B460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CurrentWeatherForecast();
  sub_176F8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return sub_C844(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for WeatherState();
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_5B510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5B524);
}

void sub_5B524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for CurrentWeatherForecast();
  sub_176F8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    uint64_t v10 = type metadata accessor for WeatherState();
    uint64_t v11 = a1 + *(int *)(a4 + 28);
  }

  sub_AA40(v11, a2, a2, v10);
}

uint64_t sub_5B5D0()
{
  uint64_t result = type metadata accessor for CurrentWeatherForecast();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_5B6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherPreprocessingResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5B714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherPreprocessingResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5B778(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherPreprocessingResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5B7D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a8;
  uint64_t v31 = a7;
  v37[3] = type metadata accessor for OfflineStateProvider();
  v37[4] = &off_DEAE0;
  v37[0] = a9;
  uint64_t v16 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_logger;
  uint64_t v17 = qword_E6D60;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = a10 + v16;
  uint64_t v19 = sub_B2D30();
  uint64_t v20 = sub_B378(v19, (uint64_t)qword_F5378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v20, v19);
  uint64_t v21 = a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherService;
  *(void *)(v21 + 24) = &type metadata for WeatherService;
  *(void *)(v21 + 32) = &off_DF270;
  uint64_t v22 = a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11WeatherSpec_weatherForecast_Value;
  uint64_t v23 = type metadata accessor for WeatherPreprocessingResult(0);
  sub_AA40(v22, 1, 1, v23);
  swift_release();
  sub_A8B4(a5, (uint64_t)v36);
  sub_A8B4(a6, (uint64_t)v35);
  sub_A8B4((uint64_t)v37, (uint64_t)v33);
  uint64_t v24 = sub_A918((uint64_t)v33, v34);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  uint64_t v28 = sub_8F900(a1, a2, a3, a4, v36, v35, v31, v32, *v26, a10);
  sub_74F8((uint64_t)v33);
  sub_74F8((uint64_t)v37);
  sub_74F8(a6);
  sub_74F8(a5);
  return v28;
}

uint64_t sub_5BA58()
{
  uint64_t v2 = sub_7424(&qword_EA268);
  sub_FC60(v2);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  swift_release();
  uint64_t v8 = type metadata accessor for WeatherPreprocessingResult(0);
  if (!sub_C844(v0 + v5, 1, v8))
  {
    uint64_t v16 = v7;
    uint64_t v9 = sub_7424((uint64_t *)&unk_E7880);
    sub_79FC();
    uint64_t v11 = *(void (**)(void))(v10 + 8);
    sub_5BE18();
    v11();
    uint64_t v12 = type metadata accessor for CurrentWeatherForecast();
    if (!sub_5BE28(*(int *)(v12 + 20))) {
      ((void (*)(uint64_t, uint64_t))v11)(v1, v9);
    }
    if (!sub_5BE28(*(int *)(v12 + 24))) {
      ((void (*)(uint64_t, uint64_t))v11)(v1, v9);
    }
    sub_B17F0();
    sub_79FC();
    uint64_t v14 = *(void (**)(void))(v13 + 8);
    sub_5BE18();
    v14();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + v5 + *(int *)(v8 + 24) + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_5BE18();
    v14();
    type metadata accessor for WeatherState();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v16;
  }

  return _swift_deallocObject(v0, v5 + v7, v4 | 7);
}

uint64_t sub_5BC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EA268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5BC9C()
{
  uint64_t v1 = *(void *)(sub_7424(&qword_EA268) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_5945C(v2, v3);
}

uint64_t sub_5BD04()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5BD14()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_5BD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_5BD4C()
{
  return swift_release();
}

uint64_t sub_5BD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EA268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_5BDBC(uint64_t a1, unint64_t a2)
{
  sub_8C308(a1, a2, 0xD000000000000029, v2, 0x2865747563657865, 0xE900000000000029);
}

uint64_t sub_5BE28@<X0>(uint64_t a1@<X8>)
{
  return sub_C844(v1 + a1, 1, v2);
}

uint64_t destroy for AirQualityEvent()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AirQualityEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AirQualityEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AirQualityEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AirQualityEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AirQualityEvent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirQualityEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityEvent()
{
  return &type metadata for AirQualityEvent;
}

uint64_t sub_5C07C()
{
  sub_B34C0(26);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)v0) {
    v2._countAndFlagsBits = 1702195828;
  }
  else {
    v2._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)v0) {
    long long v3 = (void *)0xE400000000000000;
  }
  else {
    long long v3 = (void *)0xE500000000000000;
  }
  v2._object = v3;
  sub_B3020(v2);
  swift_bridgeObjectRelease();
  sub_5C6A0();
  sub_5C6D8();
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = sub_B37C0();
  sub_B3020(v7);
  swift_bridgeObjectRelease();
  sub_5C6A0();
  swift_bridgeObjectRetain();
  sub_5C6BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_5C6D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_5C6BC();
  swift_bridgeObjectRelease();
  sub_5C6A0();
  swift_bridgeObjectRetain();
  sub_5C6BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_B34C0(19);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = sub_B37C0();
  sub_B3020(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = 0xD000000000000011;
  v9._object = (void *)0x80000000000B8750;
  sub_B3020(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v5 = *(void **)(v0 + 48);
  }
  else
  {
    uint64_t v5 = (void *)0xE300000000000000;
    uint64_t v4 = 7104878;
  }
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_B3020(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = 0x72656469766F7270;
  v11._object = (void *)0xEA0000000000203ALL;
  sub_B3020(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_5C35C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_7424(&qword_EA270);
  __chkstk_darwin(v2 - 8);
  sub_7A0C();
  uint64_t v5 = v4 - v3;
  uint64_t v31 = sub_B1B40();
  sub_7870();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_7A0C();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_B1B80();
  sub_7870();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_7A0C();
  uint64_t v18 = v17 - v16;
  if (sub_B1AD0())
  {
    if (qword_E6DA8 != -1) {
      swift_once();
    }
    sub_84ED0(1, qword_F5458, unk_F5460, byte_F5468, (void *)qword_F5470);
  }
  char v30 = sub_B1AD0();
  sub_B1AF0();
  uint64_t v19 = sub_B1B70();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
  if (v19 < 0
    || (sub_B1B10(),
        uint64_t v20 = sub_B1B30(),
        uint64_t v22 = v21,
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v31),
        uint64_t v23 = sub_B1B00(),
        v23 < 0))
  {
    uint64_t result = sub_B35F0();
    __break(1u);
  }
  else
  {
    uint64_t v24 = v23;
    sub_B1AE0();
    uint64_t v25 = sub_B1B60();
    if (sub_C844(v5, 1, v25) == 1)
    {
      uint64_t result = sub_5C640(v5);
      uint64_t v27 = 0;
      uint64_t v28 = 0;
    }
    else
    {
      uint64_t v27 = sub_B1B50();
      uint64_t v28 = v29;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v5, v25);
    }
    *(unsigned char *)a1 = v30 & 1;
    *(void *)(a1 + 8) = v19;
    *(void *)(a1 + 16) = v20;
    *(void *)(a1 + 24) = v22;
    *(void *)(a1 + 32) = v24;
    *(void *)(a1 + 40) = v27;
    *(void *)(a1 + 48) = v28;
  }
  return result;
}

uint64_t sub_5C640(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_EA270);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_5C6A0()
{
  v1._countAndFlagsBits = 10;
  v1._object = (void *)0xE100000000000000;
  sub_B3020(v1);
}

void sub_5C6BC()
{
  v3._countAndFlagsBits = v0;
  v3._object = v1;
  sub_B3020(v3);
}

void sub_5C6D8()
{
  sub_B34C0(18);
}

unsigned char *storeEnumTagSinglePayload for Features(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5C7C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Features()
{
  return &type metadata for Features;
}

ValueMetadata *type metadata accessor for SiriDBFeatureFlagsImpl()
{
  return &type metadata for SiriDBFeatureFlagsImpl;
}

unint64_t sub_5C810()
{
  unint64_t result = qword_EA278;
  if (!qword_EA278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EA278);
  }
  return result;
}

const char *sub_5C85C()
{
  return "SiriDailyBriefing";
}

const char *sub_5C870(char a1)
{
  if (a1) {
    return "SiriX";
  }
  else {
    return "RF";
  }
}

const char *sub_5C89C()
{
  return sub_5C85C();
}

const char *sub_5C8A4()
{
  return sub_5C870(*v0);
}

BOOL sub_5C8AC(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_5C8B8(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_5C8C8(char a1, char a2)
{
  unint64_t v4 = 0xD000000000000014;
  unint64_t v5 = 0x80000000000B4720;
  switch(a1)
  {
    case 1:
      unint64_t v5 = 0x80000000000B4740;
      unint64_t v4 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v4 = 0xD000000000000015;
      unint64_t v5 = 0x80000000000B4760;
      break;
    case 3:
      unint64_t v4 = 0x6E49746F4E707061;
      unint64_t v5 = 0xEF64656C6C617473;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000014;
  unint64_t v7 = 0x80000000000B4720;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0x80000000000B4740;
      unint64_t v6 = 0xD000000000000012;
      break;
    case 2:
      sub_5E56C();
      break;
    case 3:
      unint64_t v6 = 0x6E49746F4E707061;
      unint64_t v7 = 0xEF64656C6C617473;
      break;
    default:
      break;
  }
  if (v4 == v6 && v5 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5CA40(uint64_t a1, uint64_t a2)
{
  return sub_5D55C(a1, a2, (uint64_t (*)(void))sub_19008);
}

uint64_t sub_5CA58(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000015;
  unint64_t v4 = 0x80000000000B48F0;
  uint64_t v5 = a1;
  unint64_t v6 = 0xD000000000000015;
  switch(v5)
  {
    case 1:
      unint64_t v7 = "shouldSpeakAirQuality";
      goto LABEL_4;
    case 2:
      unint64_t v7 = "airQualityCategoryScale";
LABEL_4:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      unint64_t v6 = 0xD000000000000017;
      break;
    case 3:
      unint64_t v6 = 0x696C617551726961;
      unint64_t v4 = 0xEF7865646E497974;
      break;
    case 4:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x72656469766F7270;
      break;
    case 5:
      unint64_t v6 = 0xD000000000000018;
      unint64_t v4 = 0x80000000000B4970;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000000000B48F0;
  switch(a2)
  {
    case 1:
      uint64_t v9 = "shouldSpeakAirQuality";
      goto LABEL_11;
    case 2:
      uint64_t v9 = "airQualityCategoryScale";
LABEL_11:
      unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000017;
      break;
    case 3:
      unint64_t v3 = 0x696C617551726961;
      unint64_t v8 = 0xEF7865646E497974;
      break;
    case 4:
      unint64_t v8 = 0xE800000000000000;
      unint64_t v3 = 0x72656469766F7270;
      break;
    case 5:
      sub_5E56C();
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5CC28(char a1, char a2)
{
  uint64_t v3 = 1702195796;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x65736C6146;
    }
    else {
      uint64_t v4 = 0x7465736E75;
    }
    unint64_t v5 = 0xE500000000000000;
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
    uint64_t v4 = 1702195796;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x65736C6146;
    }
    else {
      uint64_t v3 = 0x7465736E75;
    }
    unint64_t v6 = 0xE500000000000000;
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v4 == v3 && v5 == v6) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5CD04()
{
  sub_5E520();
  uint64_t v4 = 0x7261646E656C6163;
  switch(v5)
  {
    case 1:
      uint64_t v4 = sub_5E504();
      break;
    case 2:
      uint64_t v4 = sub_5E554();
      break;
    case 3:
      unint64_t v0 = 0xE400000000000000;
      uint64_t v4 = 1936744813;
      break;
    case 4:
      unint64_t v0 = 0xE700000000000000;
      uint64_t v4 = 0x74736163646F70;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(v2)
  {
    case 1:
      sub_5E4E8();
      break;
    case 2:
      sub_5E53C();
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v3 = 1936744813;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v3 = 0x74736163646F70;
      break;
    default:
      break;
  }
  if (v4 == v3 && v0 == v6) {
    sub_5E484();
  }
  else {
    char v1 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_5CE44(uint64_t a1, uint64_t a2)
{
  return sub_5D55C(a1, a2, (uint64_t (*)(void))sub_CE84);
}

uint64_t sub_5CE5C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEE006E6F69746964;
  unint64_t v4 = 0x6E6F437473726966;
  uint64_t v5 = a1;
  unint64_t v6 = 0x6E6F437473726966;
  unint64_t v7 = 0xEE006E6F69746964;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x6F43646E6F636573;
      unint64_t v7 = 0xEF6E6F697469646ELL;
      break;
    case 2:
      unint64_t v7 = 0x80000000000B4470;
      unint64_t v6 = 0xD000000000000013;
      break;
    case 3:
      unint64_t v6 = 0xD000000000000014;
      unint64_t v7 = 0x80000000000B4490;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v4 = 0x6F43646E6F636573;
      unint64_t v3 = 0xEF6E6F697469646ELL;
      break;
    case 2:
      unint64_t v3 = 0x80000000000B4470;
      unint64_t v4 = 0xD000000000000013;
      break;
    case 3:
      unint64_t v4 = 0xD000000000000014;
      unint64_t v3 = 0x80000000000B4490;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_5E58C();
  }
  else {
    char v2 = sub_5E4CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5D000(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v4 = 0x80000000000B47B0;
  uint64_t v5 = a1;
  unint64_t v6 = 0xD000000000000010;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0xD000000000000019;
      unint64_t v7 = "LocationDisabled";
      goto LABEL_5;
    case 2:
      unint64_t v6 = 0xD000000000000016;
      unint64_t v7 = "LocationDisabledForDevice";
      goto LABEL_5;
    case 3:
      unint64_t v6 = 0xD00000000000001CLL;
      unint64_t v7 = "PodcastAppNotInstalled";
LABEL_5:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000000000B47B0;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xD000000000000019;
      uint64_t v9 = "LocationDisabled";
      goto LABEL_10;
    case 2:
      unint64_t v3 = 0xD000000000000016;
      uint64_t v9 = "LocationDisabledForDevice";
      goto LABEL_10;
    case 3:
      unint64_t v3 = 0xD00000000000001CLL;
      uint64_t v9 = "PodcastAppNotInstalled";
LABEL_10:
      unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5D140(char a1, char a2)
{
  unint64_t v4 = 0xD000000000000017;
  unint64_t v5 = 0x80000000000B4AA0;
  switch(a1)
  {
    case 1:
      unint64_t v5 = 0x80000000000B4AC0;
      unint64_t v4 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v4 = 0x7374736163646F50;
      unint64_t v5 = 0xEF656D614E707041;
      break;
    case 3:
      unint64_t v4 = 0x77654E656C617453;
      unint64_t v5 = 0xEF74706D6F725073;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000017;
  unint64_t v7 = 0x80000000000B4AA0;
  switch(a2)
  {
    case 1:
      sub_5E56C();
      unint64_t v6 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v6 = 0x7374736163646F50;
      unint64_t v7 = 0xEF656D614E707041;
      break;
    case 3:
      unint64_t v6 = 0x77654E656C617453;
      unint64_t v7 = 0xEF74706D6F725073;
      break;
    default:
      break;
  }
  if (v4 == v6 && v5 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5D2D8(uint64_t a1, uint64_t a2)
{
  return sub_5D55C(a1, a2, (uint64_t (*)(void))sub_646C);
}

uint64_t sub_5D2F0(char a1, char a2)
{
  unint64_t v4 = 0xD000000000000013;
  unint64_t v5 = 0x80000000000B4650;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x5264696C61766E69;
      unint64_t v5 = 0xEF65736E6F707365;
      break;
    case 2:
      unint64_t v5 = 0x80000000000B4680;
      unint64_t v4 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v4 = 0xD000000000000016;
      unint64_t v5 = 0x80000000000B46A0;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000013;
  unint64_t v7 = 0x80000000000B4650;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x5264696C61766E69;
      unint64_t v7 = 0xEF65736E6F707365;
      break;
    case 2:
      unint64_t v7 = 0x80000000000B4680;
      unint64_t v6 = 0xD000000000000010;
      break;
    case 3:
      sub_5E56C();
      break;
    default:
      break;
  }
  if (v4 == v6 && v5 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5D468(uint64_t a1, uint64_t a2)
{
  return sub_5D55C(a1, a2, (uint64_t (*)(void))sub_A3CC8);
}

uint64_t sub_5D480(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000012;
  unint64_t v4 = 0x80000000000B46C0;
  if (a1)
  {
    sub_5E490();
    if (v6 == 1) {
      unint64_t v10 = v7;
    }
    else {
      unint64_t v10 = v9;
    }
    if (v6 == 1) {
      unint64_t v11 = v8;
    }
    else {
      unint64_t v11 = (v5 - 32) | 0x8000000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xD000000000000012;
    unint64_t v11 = 0x80000000000B46C0;
  }
  if (a2)
  {
    sub_5E490();
    unint64_t v17 = (v16 - 32) | 0x8000000000000000;
    if (v12 == 1) {
      unint64_t v3 = v13;
    }
    else {
      unint64_t v3 = v15;
    }
    if (v12 == 1) {
      unint64_t v4 = v14;
    }
    else {
      unint64_t v4 = v17;
    }
  }
  if (v10 == v3 && v11 == v4) {
    sub_5E58C();
  }
  else {
    char v2 = sub_5E4CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5D544(uint64_t a1, uint64_t a2)
{
  return sub_5D55C(a1, a2, (uint64_t (*)(void))sub_AAA74);
}

uint64_t sub_5D55C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    sub_5E484();
  }
  else {
    LOBYTE(v5) = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_5D5E0(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x676E697465657267;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x676E697465657267;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x676E696E726177;
      break;
    case 2:
      uint64_t v6 = 0x6973756C636E6F63;
      unint64_t v4 = 0xEA00000000006E6FLL;
      break;
    case 3:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1702060386;
      break;
    case 4:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x6C616974696E69;
      break;
    case 5:
      uint64_t v6 = 0x6F5474706D6F7270;
      unint64_t v4 = 0xEE006B636F6C6E55;
      break;
    case 6:
      uint64_t v6 = 0x766F6D6552646461;
      unint64_t v4 = 0xED0000776F6C4665;
      break;
    case 7:
      uint64_t v6 = 0x6F6C466472617567;
      unint64_t v4 = 0xE900000000000077;
      break;
    case 8:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x656E696C66666FLL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x676E696E726177;
      break;
    case 2:
      uint64_t v3 = 0x6973756C636E6F63;
      unint64_t v7 = 0xEA00000000006E6FLL;
      break;
    case 3:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1702060386;
      break;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x6C616974696E69;
      break;
    case 5:
      uint64_t v3 = 0x6F5474706D6F7270;
      unint64_t v7 = 0xEE006B636F6C6E55;
      break;
    case 6:
      uint64_t v3 = 0x766F6D6552646461;
      unint64_t v7 = 0xED0000776F6C4665;
      break;
    case 7:
      uint64_t v3 = 0x6F6C466472617567;
      unint64_t v7 = 0xE900000000000077;
      break;
    case 8:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x656E696C66666FLL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5D894(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x656C746974;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1702125924;
    }
    else {
      uint64_t v5 = 0x7961446C6C417369;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE500000000000000;
    uint64_t v5 = 0x656C746974;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1702125924;
    }
    else {
      uint64_t v3 = 0x7961446C6C417369;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE400000000000000;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE500000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5D978(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x6665697262;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x6665697262;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE300000000000000;
      unint64_t v6 = 6579297;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v7 = 1633972341;
      goto LABEL_5;
    case 3:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v7 = 1701602660;
LABEL_5:
      unint64_t v6 = v7 & 0xFFFF0000FFFFFFFFLL | 0x657400000000;
      break;
    case 4:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v6 = 0x65676E616863;
      break;
    case 5:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 1684104562;
      break;
    case 6:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 2036427888;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xE300000000000000;
      unint64_t v3 = 6579297;
      break;
    case 2:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v9 = 1633972341;
      goto LABEL_13;
    case 3:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v9 = 1701602660;
LABEL_13:
      unint64_t v3 = v9 & 0xFFFF0000FFFFFFFFLL | 0x657400000000;
      break;
    case 4:
      unint64_t v8 = 0xE600000000000000;
      unint64_t v3 = 0x65676E616863;
      break;
    case 5:
      unint64_t v8 = 0xE400000000000000;
      unint64_t v3 = 1684104562;
      break;
    case 6:
      unint64_t v8 = 0xE400000000000000;
      unint64_t v3 = 2036427888;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5DB34(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xE900000000000065;
  unint64_t v4 = 0x736972616D6D7573;
  uint64_t v5 = a1;
  unint64_t v6 = 0x736972616D6D7573;
  unint64_t v7 = 0xE900000000000065;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x6978456B63656863;
      unint64_t v7 = 0xEE0065636E657473;
      break;
    case 2:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 1633972341;
      goto LABEL_5;
    case 3:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 1701602660;
LABEL_5:
      unint64_t v6 = v8 & 0xFFFF0000FFFFFFFFLL | 0x657400000000;
      break;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v6 = 2036427888;
      break;
    case 5:
      unint64_t v7 = 0xE600000000000000;
      unint64_t v6 = 0x746165706572;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v4 = 0x6978456B63656863;
      unint64_t v3 = 0xEE0065636E657473;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v9 = 1633972341;
      goto LABEL_12;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v9 = 1701602660;
LABEL_12:
      unint64_t v4 = v9 & 0xFFFF0000FFFFFFFFLL | 0x657400000000;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v4 = 2036427888;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v4 = 0x746165706572;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_5E58C();
  }
  else {
    char v2 = sub_5E4CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5DD00()
{
  sub_5E520();
  uint64_t v4 = 0x7261646E656C6163;
  switch(v5)
  {
    case 1:
      unint64_t v0 = 0xE400000000000000;
      uint64_t v4 = 1937204590;
      break;
    case 2:
      uint64_t v4 = sub_5E504();
      break;
    case 3:
      unint64_t v0 = 0xE700000000000000;
      uint64_t v4 = 0x63696666617274;
      break;
    case 4:
      uint64_t v4 = sub_5E554();
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(v2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v3 = 1937204590;
      break;
    case 2:
      sub_5E4E8();
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v3 = 0x63696666617274;
      break;
    case 4:
      sub_5E53C();
      break;
    default:
      break;
  }
  if (v4 == v3 && v0 == v6) {
    sub_5E484();
  }
  else {
    char v1 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_5DE40(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x657461647075;
  }
  else {
    uint64_t v4 = 0x676E696665697262;
  }
  if (v3) {
    unint64_t v5 = 0xE800000000000000;
  }
  else {
    unint64_t v5 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x657461647075;
  }
  else {
    uint64_t v6 = 0x676E696665697262;
  }
  if (a2) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xE800000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5DED0(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 7562617;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 28526;
    }
    else {
      uint64_t v5 = 0x6C65636E6163;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE200000000000000;
    }
    else {
      unint64_t v6 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE300000000000000;
    uint64_t v5 = 7562617;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 28526;
    }
    else {
      uint64_t v3 = 0x6C65636E6163;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE200000000000000;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5DFA0(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6574656C706D6F63;
  }
  else {
    uint64_t v4 = 0x6572676F72506E69;
  }
  if (v3) {
    unint64_t v5 = 0xEA00000000007373;
  }
  else {
    unint64_t v5 = 0xE900000000000064;
  }
  if (a2) {
    uint64_t v6 = 0x6574656C706D6F63;
  }
  else {
    uint64_t v6 = 0x6572676F72506E69;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000064;
  }
  else {
    unint64_t v7 = 0xEA00000000007373;
  }
  if (v4 == v6 && v5 == v7) {
    sub_5E484();
  }
  else {
    char v2 = sub_5E468();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5E03C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEE00746E65764574;
  unint64_t v4 = 0x6E6174726F706D49;
  uint64_t v5 = a1;
  unint64_t v6 = 0x6E6174726F706D49;
  unint64_t v7 = 0xEE00746E65764574;
  switch(v5)
  {
    case 1:
      uint64_t v8 = (const char *)&off_B4100;
      goto LABEL_5;
    case 2:
      uint64_t v8 = "UpcomingEventSummary";
      goto LABEL_5;
    case 3:
      uint64_t v8 = "CalendarEventSummary";
LABEL_5:
      unint64_t v7 = (unint64_t)v8 | 0x8000000000000000;
      unint64_t v6 = 0xD000000000000014;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v9 = (const char *)&off_B4100;
      goto LABEL_10;
    case 2:
      uint64_t v9 = "UpcomingEventSummary";
      goto LABEL_10;
    case 3:
      uint64_t v9 = "CalendarEventSummary";
LABEL_10:
      unint64_t v3 = (unint64_t)v9 | 0x8000000000000000;
      unint64_t v4 = 0xD000000000000014;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_5E58C();
  }
  else {
    char v2 = sub_5E4CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_5E190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  sub_5E4B8();
  int v11 = v10();
  int v12 = *(void (**)(void))(v4 + 16);
  sub_5E578();
  v12();
  BOOL v13 = v11 != 6 || (*(unsigned __int8 (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2) != 3;
  unint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v9, a1);
  sub_5E578();
  v12();
  BOOL v15 = v13 || (*(unsigned __int8 (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2) != 2;
  v14(v7, a1);
  return v15;
}

uint64_t sub_5E338()
{
  sub_5E4B8();
  char v1 = v0();
  if (v1 == 6) {
    return 0;
  }
  if (sub_220F8(v1) == 0x657461647075 && v3 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_B37E0();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t sub_5E3CC()
{
  sub_5E4B8();
  char v1 = v0();
  if (v1 == 6) {
    return 0;
  }
  if (sub_220F8(v1) == 0x6574656C6564 && v3 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_B37E0();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t sub_5E468()
{
  return sub_B37E0();
}

uint64_t sub_5E4CC()
{
  return sub_B37E0();
}

uint64_t sub_5E504()
{
  return 0x7265646E696D6572;
}

uint64_t sub_5E554()
{
  return 0x72656874616577;
}

uint64_t sub_5E598()
{
  type metadata accessor for CalendarEvent(0);
  uint64_t v0 = sub_B16D0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_B16E0();
  uint64_t v5 = v4;
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_5EE38();
    unint64_t v7 = v6;
    unint64_t v8 = v6[2];
    if (v8 >= v6[3] >> 1)
    {
      sub_5EE38();
      unint64_t v7 = v16;
    }
    v7[2] = v8 + 1;
    uint64_t v9 = (char *)&v7[2 * v8];
    *((void *)v9 + 4) = v0;
    *((void *)v9 + 5) = v2;
  }
  else
  {
    unint64_t v7 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_5EE38();
    unint64_t v7 = v14;
  }
  unint64_t v10 = v7[2];
  if (v10 >= v7[3] >> 1)
  {
    sub_5EE38();
    unint64_t v7 = v15;
  }
  v7[2] = v10 + 1;
  int v11 = (char *)&v7[2 * v10];
  *((void *)v11 + 4) = v3;
  *((void *)v11 + 5) = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_7424(&qword_E85C0);
  sub_3B980();
  uint64_t v12 = sub_B2ED0();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_5E734()
{
  sub_B2830();
  swift_allocObject();
  uint64_t v0 = sub_B2820();
  sub_B2810();
  type metadata accessor for CalendarEvent(0);
  if (sub_6A67C())
  {
    sub_B2860();
    swift_allocObject();
    sub_B2850();
    swift_retain();
    sub_B2840();
    swift_release();
    swift_retain();
    sub_B2800();
    swift_release();
    swift_release_n();
  }
  return v0;
}

uint64_t sub_5E818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_5E734();
  *a1 = result;
  return result;
}

uint64_t sub_5E840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  return sub_5E880(a2, a3, a4, a1, 0, a5);
}

uint64_t sub_5E880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  int v22 = a5;
  v20[1] = a2;
  v20[2] = a4;
  uint64_t v23 = a1;
  uint64_t v8 = sub_7424(&qword_EC820);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_B2D90();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5E598();
  if (v15)
  {
    uint64_t v21 = a6;
    if (sub_55B3C())
    {
      uint64_t v16 = sub_B2D50();
      sub_AA40((uint64_t)v10, 1, 1, v16);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_B2D70();
      if (a3)
      {
        if ((v22 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          sub_B2D40();
          sub_AA40((uint64_t)v10, 0, 1, v16);
          sub_B2D80();
        }
      }
      swift_release();
      uint64_t v17 = v21;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v21, v14, v11);
      return sub_AA40(v17, 0, 1, v11);
    }
    swift_bridgeObjectRelease();
    a6 = v21;
  }
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_B2D30();
  sub_B378(v19, (uint64_t)qword_F5360);
  sub_8C2F0(0xD000000000000033, 0x80000000000B8870, 0xD000000000000036, 0x80000000000B8460, 0xD00000000000002FLL, 0x80000000000B84A0);

  return sub_AA40(a6, 1, 1, v11);
}

uint64_t sub_5EB80(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_5EC10(a1, a2, a3, a4, &qword_E9970, (uint64_t (*)(void))&type metadata accessor for RREntity, (uint64_t (*)(void))&type metadata accessor for RREntity, (void (*)(void))&type metadata accessor for RREntity);
}

uint64_t sub_5EBC8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_5EC10(a1, a2, a3, a4, &qword_EA2E0, type metadata accessor for CalendarEvent, type metadata accessor for CalendarEvent, (void (*)(void))type metadata accessor for CalendarEvent);
}

uint64_t sub_5EC10(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_606B8();
    if (v14 != v15)
    {
      sub_60704();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_606A8();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v23 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_7424(a5);
  uint64_t v18 = a6(0);
  sub_FC60(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  size_t v24 = j__malloc_size(v23);
  if (!v20 || (v24 - v22 == 0x8000000000000000 ? (BOOL v25 = v20 == -1) : (BOOL v25 = 0), v25))
  {
LABEL_23:
    sub_6061C();
    uint64_t result = sub_B35F0();
    __break(1u);
    return result;
  }
  v23[2] = v16;
  void v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  uint64_t v26 = *(void *)(a6(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v28 = (unint64_t)v23 + v27;
  if (a1)
  {
    sub_5FE94(a4 + v27, v16, v28, a8);
    sub_606EC();
  }
  else
  {
    sub_5F820(0, v16, v28, a4, a7);
  }
  return (uint64_t)v23;
}

void sub_5EE04(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_5EE38()
{
  sub_60750();
  if (v4)
  {
    sub_606B8();
    if (v5 != v6)
    {
      sub_60704();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_606A8();
    }
  }
  sub_6072C();
  if (v3)
  {
    sub_7424(&qword_E7F38);
    unint64_t v7 = (char *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    *((void *)v7 + 2) = v2;
    *((void *)v7 + 3) = 2 * ((uint64_t)(v8 - 32) / 16);
  }
  else
  {
    unint64_t v7 = (char *)&_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_5FC84((char *)(v0 + 32), v2, v7 + 32);
    sub_606EC();
  }
  else
  {
    uint64_t v9 = sub_606DC();
    sub_5F518(v9, v10, v11, v12);
  }
}

void sub_5EEF8()
{
  sub_60750();
  if (v4)
  {
    sub_606B8();
    if (v5 != v6)
    {
      sub_60704();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_606A8();
    }
  }
  sub_6072C();
  if (v3)
  {
    sub_7424(&qword_E8350);
    unint64_t v7 = (char *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    *((void *)v7 + 2) = v2;
    *((void *)v7 + 3) = 2 * ((uint64_t)(v8 - 32) / 24);
  }
  else
  {
    unint64_t v7 = (char *)&_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_5FD3C((char *)(v0 + 32), v2, v7 + 32);
    sub_606EC();
  }
  else
  {
    uint64_t v9 = sub_606DC();
    sub_5F610(v9, v10, v11, v12);
  }
}

void sub_5EFC0()
{
  sub_60750();
  if (v4)
  {
    sub_606B8();
    if (v5 != v6)
    {
      sub_60704();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_606A8();
    }
  }
  sub_6072C();
  if (v3)
  {
    sub_7424(&qword_EA2A0);
    unint64_t v7 = (char *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    *((void *)v7 + 2) = v2;
    *((void *)v7 + 3) = 2 * v8 - 64;
  }
  else
  {
    unint64_t v7 = (char *)&_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_5FDF4((char *)(v0 + 32), v2, v7 + 32);
    sub_606EC();
  }
  else
  {
    uint64_t v9 = sub_606DC();
    sub_5F730(v9, v10, v11, v12);
  }
}

uint64_t sub_5F074(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_5EC10(a1, a2, a3, a4, &qword_EA2D8, (uint64_t (*)(void))&type metadata accessor for CommonFlowGuard, (uint64_t (*)(void))&type metadata accessor for CommonFlowGuard, (void (*)(void))&type metadata accessor for CommonFlowGuard);
}

uint64_t sub_5F0BC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_5EC10(a1, a2, a3, a4, &qword_EA2C8, (uint64_t (*)(void))&type metadata accessor for TemplatingResult, (uint64_t (*)(void))&type metadata accessor for TemplatingResult, (void (*)(void))&type metadata accessor for TemplatingResult);
}

void sub_5F104(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_5F138(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_606B8();
    if (v12 != v13)
    {
      sub_60704();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_606A8();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    sub_7424(a5);
    uint64_t v16 = (void *)swift_allocObject();
    size_t v17 = j__malloc_size(v16);
    long long v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 48);
  }
  else
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = v16 + 4;
  if (a1)
  {
    a7(a4 + 32, v14, v18);
    sub_606EC();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

uint64_t sub_5F228()
{
  sub_60750();
  if (v3)
  {
    sub_606B8();
    if (v5 != v6)
    {
      sub_60704();
      if (v5)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_606A8();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_7424(&qword_EA2B8);
  uint64_t v9 = sub_7424(&qword_EA2C0);
  sub_FC60(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  if (!v11 || (v15 - v13 == 0x8000000000000000 ? (BOOL v16 = v11 == -1) : (BOOL v16 = 0), v16))
  {
LABEL_23:
    sub_6061C();
    uint64_t result = sub_B35F0();
    __break(1u);
    return result;
  }
  uint64_t v14[2] = v7;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v11);
LABEL_18:
  uint64_t v17 = *(void *)(sub_7424(&qword_EA2C0) - 8);
  if (v1)
  {
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    sub_5FFF4(v0 + v18, v7, (unint64_t)v14 + v18);
    sub_606EC();
  }
  else
  {
    uint64_t v19 = sub_606DC();
    sub_5FA54(v19, v20, v21, v22);
  }
  return (uint64_t)v14;
}

uint64_t sub_5F3F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_7424(&qword_EA2B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_B3660();
  __break(1u);
  return result;
}

uint64_t sub_5F518(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_B3660();
  __break(1u);
  return result;
}

uint64_t sub_5F610(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_7424(&qword_E8358);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_B3660();
  __break(1u);
  return result;
}

char *sub_5F730(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_B3660();
  __break(1u);
  return result;
}

uint64_t sub_5F820(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_6061C();
    sub_60664();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a5(0) - 8);
  uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * a1;
  unint64_t v13 = a3 + v11 * v5;
  if (v12 >= v13 || v12 + v11 * v5 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v13;
  }
  sub_6061C();
  sub_60654();
LABEL_11:
  uint64_t result = sub_60674();
  __break(1u);
  return result;
}

uint64_t sub_5F954(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_B3660();
  __break(1u);
  return result;
}

uint64_t sub_5FA54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_7424(&qword_EA2C0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  uint64_t result = sub_B3660();
  __break(1u);
  return result;
}

uint64_t sub_5FBB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5FE94(a1, a2, a3, (void (*)(void))type metadata accessor for CalendarEvent);
}

char *sub_5FBD0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_B3660();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

uint64_t sub_5FC6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5FE94(a1, a2, a3, (void (*)(void))&type metadata accessor for SpeakableString);
}

char *sub_5FC84(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_6061C();
    uint64_t result = (char *)sub_60630();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_6068C(a3, result);
  }
  return result;
}

char *sub_5FCE0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_6061C();
    uint64_t result = (char *)sub_60630();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_6068C(a3, result);
  }
  return result;
}

char *sub_5FD3C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_B3660();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

uint64_t sub_5FDD4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5FE94(a1, a2, a3, (void (*)(void))&type metadata accessor for URL);
}

char *sub_5FDF4(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    sub_6061C();
    __src = (char *)sub_60630();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_5FE64(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5FE94(a1, a2, a3, (void (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_5FE7C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5FE94(a1, a2, a3, (void (*)(void))type metadata accessor for CurrentWeatherForecast);
}

uint64_t sub_5FE94(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_6061C();
    uint64_t v9 = sub_60630();
    __break(1u);
    return _swift_arrayInitWithTakeBackToFront(v9);
  }
  if (a3 < a1
    || (uint64_t result = ((uint64_t (*)(void))a4)(0), a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    a4(0);
    uint64_t v10 = sub_6073C();
    return _swift_arrayInitWithTakeFrontToBack(v10);
  }
  else if (a3 != a1)
  {
    uint64_t v9 = sub_6073C();
    return _swift_arrayInitWithTakeBackToFront(v9);
  }
  return result;
}

char *sub_5FF98(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_6061C();
    uint64_t result = (char *)sub_60630();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_6068C(a3, result);
  }
  return result;
}

uint64_t sub_5FFF4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t v7 = sub_B3660();
    __break(1u);
    return _swift_arrayInitWithTakeBackToFront(v7);
  }
  if (a3 < a1 || (uint64_t result = sub_7424(&qword_EA2C0), a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    sub_7424(&qword_EA2C0);
    return _swift_arrayInitWithTakeFrontToBack(a3);
  }
  else if (a3 != a1)
  {
    uint64_t v7 = a3;
    return _swift_arrayInitWithTakeBackToFront(v7);
  }
  return result;
}

uint64_t sub_6012C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_6053C(a1, a2, a3, type metadata accessor for CalendarEvent);
}

uint64_t sub_60144(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_6053C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_6015C(uint64_t a1, uint64_t a2)
{
  return sub_60458(a1, a2);
}

uint64_t sub_60170(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_6061C();
    sub_60664();
LABEL_11:
    uint64_t result = sub_60674();
    __break(1u);
    return result;
  }
  if (a3 + 16 * a2 > a1 && a1 + 16 * a2 > a3)
  {
    sub_6061C();
    sub_60654();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_60220(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_6061C();
    sub_60664();
LABEL_11:
    uint64_t result = sub_60674();
    __break(1u);
    return result;
  }
  if (a3 + 32 * a2 > a1 && a1 + 32 * a2 > a3)
  {
    sub_6061C();
    sub_60654();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_602D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_6053C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_602F0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_6061C();
    sub_60664();
LABEL_11:
    uint64_t result = sub_60674();
    __break(1u);
    return result;
  }
  sub_60710();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_6061C();
    sub_60654();
    goto LABEL_11;
  }
  type metadata accessor for WeatherConditionEvent();
  sub_606C8();

  return swift_arrayInitWithCopy();
}

void *sub_6039C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0)
  {
    sub_6061C();
    sub_60664();
LABEL_11:
    uint64_t result = (void *)sub_60674();
    __break(1u);
    return result;
  }
  if (&__dst[__n] > __src && &__src[__n] > __dst)
  {
    sub_6061C();
    sub_60654();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, __n);
}

uint64_t sub_60444(uint64_t a1, uint64_t a2)
{
  return sub_60458(a1, a2);
}

uint64_t sub_60458(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_6061C();
    sub_60664();
LABEL_11:
    uint64_t result = sub_60674();
    __break(1u);
    return result;
  }
  sub_60710();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_6061C();
    sub_60654();
    goto LABEL_11;
  }
  sub_3085C(0, v3);
  sub_606C8();

  return swift_arrayInitWithCopy();
}

uint64_t sub_6050C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_6053C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_60524(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_6053C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for CurrentWeatherForecast);
}

uint64_t sub_6053C(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  if (a2 < 0)
  {
    sub_6061C();
    sub_60664();
LABEL_11:
    uint64_t result = sub_60674();
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(*(void *)(a4(0) - 8) + 72) * a2;
  unint64_t v7 = a3 + v6;
  unint64_t v8 = a1 + v6;
  if (v7 > a1 && v8 > a3)
  {
    sub_6061C();
    sub_60654();
    goto LABEL_11;
  }
  sub_606C8();

  return swift_arrayInitWithCopy();
}

uint64_t sub_60630()
{
  return sub_B3660();
}

uint64_t sub_60674()
{
  return sub_B3660();
}

void *sub_6068C@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_606C8()
{
  return v0;
}

uint64_t sub_606DC()
{
  return 0;
}

uint64_t sub_606EC()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_6073C()
{
  return v0;
}

uint64_t sub_6075C(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  sub_7424(&qword_E76E0);
  v3[24] = swift_task_alloc();
  type metadata accessor for CurrentWeatherForecast();
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_B1880();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_6087C, 0, 0);
}

uint64_t sub_6087C()
{
  uint64_t v1 = *(void **)(v0 + 176);
  NSString v2 = sub_B2F20();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    sub_B3430();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }
  sub_61108(v0 + 104, v0 + 72);
  if (!*(void *)(v0 + 96))
  {
    sub_17644(v0 + 72, (uint64_t *)&unk_E7990);
    goto LABEL_8;
  }
  if (!swift_dynamicCast())
  {
LABEL_8:
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    goto LABEL_9;
  }
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 160);
LABEL_9:
  sub_B34C0(25);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v5;
  *(void *)(v0 + 144) = v4;
  swift_bridgeObjectRetain();
  sub_7424(&qword_EA3B8);
  v36._countAndFlagsBits = sub_B2FA0();
  sub_B3020(v36);
  swift_bridgeObjectRelease();
  sub_8C308(0xD000000000000017, 0x80000000000B8910, 0xD000000000000036, 0x80000000000B8930, 0xD00000000000001FLL, 0x80000000000B8970);
  swift_bridgeObjectRelease();
  if (!v4 || (v6 = sub_B2FB0(), unint64_t v8 = v7, swift_bridgeObjectRelease(), sub_611D4(v6, v8) == 3))
  {
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v11 = *(void *)(v0 + 208);
    sub_B1870();
    sub_B1850();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v13 = v12 + *(int *)(type metadata accessor for WeatherPreprocessingResult(0) + 24);
  uint64_t v14 = *(void *)(v13 + 24);
  if (v14)
  {
    uint64_t v15 = *(void *)(v13 + 48);
    long long v16 = *(_OWORD *)(v13 + 8);
    long long v17 = *(_OWORD *)(v13 + 32);
    *(unsigned char *)(v0 + 16) = *(unsigned char *)v13 & 1;
    *(_OWORD *)(v0 + 24) = v16;
    *(void *)(v0 + 40) = v14;
    *(_OWORD *)(v0 + 48) = v17;
    *(void *)(v0 + 64) = v15;
    type metadata accessor for WeatherAirQuality();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_9B574();
    uint64_t v19 = v18;
    uint64_t v12 = *(void *)(v0 + 168);
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v20 = *(void *)(v0 + 200);
  sub_7424(&qword_E7D20);
  uint64_t v21 = swift_allocObject();
  *(void *)(v0 + 232) = v21;
  *(_OWORD *)(v21 + 16) = xmmword_BEC60;
  strcpy((char *)(v21 + 32), "weatherCurrent");
  *(unsigned char *)(v21 + 47) = -18;
  uint64_t v22 = type metadata accessor for WeatherCurrent();
  sub_61170(v12, v20);
  sub_9B624();
  *(void *)(v21 + 48) = v23;
  *(void *)(v21 + 72) = v22;
  *(void *)(v21 + 80) = 0x4572656874616577;
  *(void *)(v21 + 88) = 0xEF64657463657078;
  uint64_t v24 = type metadata accessor for WeatherExpected();
  swift_bridgeObjectRetain();
  sub_9B8C0();
  *(void *)(v21 + 96) = v25;
  *(void *)(v21 + 120) = v24;
  *(void *)(v21 + 128) = 0xD000000000000011;
  *(void *)(v21 + 136) = 0x80000000000B8990;
  uint64_t v26 = 0;
  if (v19)
  {
    uint64_t v26 = type metadata accessor for WeatherAirQuality();
  }
  else
  {
    *(void *)(v21 + 152) = 0;
    *(void *)(v21 + 160) = 0;
  }
  *(void *)(v0 + 240) = v19;
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v28 = *(void *)(v0 + 192);
  *(void *)(v21 + 144) = v19;
  *(void *)(v21 + 168) = v26;
  uint64_t v29 = *(void *)(v27 + 16);
  uint64_t v30 = sub_B2090();
  sub_AA40(v28, 1, 1, v30);
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_EB970 + dword_EB970);
  swift_retain();
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v31;
  void *v31 = v0;
  v31[1] = sub_60D08;
  uint64_t v32 = *(void *)(v0 + 192);
  return v34(v21, v32, v29);
}

uint64_t sub_60D08(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 192);
  *(void *)(*(void *)v1 + 256) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_17644(v2, &qword_E76E0);
  return _swift_task_switch(sub_60E4C, 0, 0);
}

uint64_t sub_60E4C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 256);
  return v1(v2);
}

uint64_t sub_60ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin24WeatherTemplatingService_logger;
  uint64_t v6 = qword_E6D60;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_B2D30();
  uint64_t v8 = sub_B378(v7, (uint64_t)qword_F5378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v2 + v5, v8, v7);
  swift_release();
  *(void *)(v2 + 16) = a2;
  sub_74F8(a1);
  return v2;
}

uint64_t sub_60FB4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin24WeatherTemplatingService_logger;
  sub_B2D30();
  sub_79FC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);

  return v4(v1, v2);
}

uint64_t sub_61018()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin24WeatherTemplatingService_logger;
  sub_B2D30();
  sub_79FC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_610B8()
{
  return type metadata accessor for WeatherTemplatingService();
}

uint64_t type metadata accessor for WeatherTemplatingService()
{
  uint64_t result = qword_EA318;
  if (!qword_EA318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_61108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424((uint64_t *)&unk_E7990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_61170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeatherForecast();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_611D4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_DB378;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_61220(char a1)
{
  if (!a1) {
    return 0x737569736C6563;
  }
  if (a1 == 1) {
    return 0x65686E6572686166;
  }
  return 0x6E69766C656BLL;
}

uint64_t sub_61278(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return sub_FCA0((uint64_t)sub_61290);
}

uint64_t sub_61290()
{
  if (qword_E6DD8 != -1) {
    swift_once();
  }
  sub_84ED0(1, qword_F5518, unk_F5520, byte_F5528, (void *)qword_F5530);
  *(void *)(v0 + 40) = &type metadata for PodcastsDialogs;
  *(void *)(v0 + 48) = &off_DF478;
  *(unsigned char *)(v0 + 16) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_613A0;
  uint64_t v2 = *(void *)(v0 + 56);
  return sub_759B8(v2, v0 + 16, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_613A0()
{
  sub_7FC4();
  uint64_t v2 = v1 + 16;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  sub_74F8(v2);
  Swift::OpaquePointer v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_6147C()
{
  *(void *)(v1 + 16) = v0;
  return sub_FCA0((uint64_t)sub_61494);
}

uint64_t sub_61494()
{
  sub_7424(&qword_EA2D0);
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v1 + 16) = xmmword_BEC60;
  *(void *)(v1 + 56) = &type metadata for PodcastsDialogs;
  *(void *)(v1 + 64) = &off_DF478;
  *(unsigned char *)(v1 + 32) = 3;
  *(void *)(v1 + 72) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 104) = &type metadata for CommonDialogs;
  *(void *)(v1 + 112) = &off_DF1F0;
  *(unsigned char *)(v1 + 80) = 7;
  *(void *)(v1 + 120) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 152) = &type metadata for CommonDialogs;
  *(void *)(v1 + 160) = &off_DF1F0;
  *(unsigned char *)(v1 + 128) = 8;
  *(void *)(v1 + 168) = _swiftEmptyArrayStorage;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_615B8;
  return sub_7620C();
}

uint64_t sub_615B8(uint64_t a1)
{
  sub_7FC4();
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  Swift::OpaquePointer v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t type metadata accessor for PodcastTemplatingService()
{
  return self;
}

void sub_616D0()
{
  qword_F50A8 = (uint64_t)&off_DBB88;
}

uint64_t sub_616E4(Swift::UInt32 a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) < 2 || a2 == 19)
  {
    uint64_t v4 = &off_DBBC8;
LABEL_9:
    uint64_t v5 = sub_6B734((uint64_t)v4);
    sub_ABFD0(a1, v5);
    char v7 = v6;
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  if (a2 == 3)
  {
    uint64_t v4 = &off_DBBF0;
    goto LABEL_9;
  }
  return 0;
}

void *sub_6175C(unint64_t a1, uint64_t a2)
{
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_B3620())
  {
    uint64_t v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = sub_B34F0();
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5);
        swift_retain();
      }
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v12 = v6;
      sub_62500(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v8 = (void *)v13;
        swift_release();
        swift_bridgeObjectRelease();
        return v8;
      }
      swift_release();
      if (v11)
      {
        sub_B3080();
        if (*(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v13 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_B30D0();
        sub_B30F0();
        sub_B30C0();
      }
      ++v5;
      if (v7 == v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (void *)v13;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_release();
  return v8;
}

uint64_t sub_6191C(uint64_t a1)
{
  uint64_t v2 = sub_B22D0();
  sub_7870();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_7A0C();
  uint64_t v8 = v7 - v6;
  sub_B2270();
  uint64_t v9 = sub_B23A0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  if (v9)
  {
    type metadata accessor for DailyBriefingNLv4Intent();
    swift_allocObject();
    uint64_t v10 = sub_61BB8(v9);
    uint64_t v11 = sub_B2280();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    swift_retain();
    v12(a1, v11);
    if (v10) {
      swift_release();
    }
  }
  else
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_B2D30();
    sub_B378(v13, (uint64_t)qword_F5360);
    sub_7A1C();
    sub_ABC4();
    sub_8C2F0(0xD000000000000035, v14, 0xD000000000000035, v15, 0x6F72662874696E69, 0xEB00000000293A6DLL);
    uint64_t v16 = sub_B2280();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
    return 0;
  }
  return v10;
}

uint64_t sub_61B14()
{
  if (sub_6323C()) {
    return 0;
  }
  self;
  if (sub_6323C()) {
    return 0;
  }
  self;
  if (sub_6323C()) {
    return 1;
  }
  self;
  if (sub_6323C()) {
    return 1;
  }
  self;
  if (sub_6323C()) {
    return 2;
  }
  else {
    return 3;
  }
}

uint64_t sub_61BB0()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_61BB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_B2D30();
  sub_7870();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_7A0C();
  uint64_t v10 = v9 - v8;
  *(_WORD *)(v1 + 16) = 517;
  *(unsigned char *)(v1 + 32) = 6;
  *(void *)(v1 + 24) = a1;
  swift_unknownObjectRetain();
  uint64_t v11 = sub_B2560();
  uint64_t v12 = v11;
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0) {
      uint64_t v1 = v11;
    }
    else {
      uint64_t v1 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_B3620();
    if (!v13) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v13) {
      goto LABEL_22;
    }
  }
  sub_63270();
  if (v1)
  {
    uint64_t v1 = sub_B34F0();
  }
  else
  {
    uint64_t v1 = *(void *)(v12 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_B2950();
  uint64_t v16 = v15;
  swift_release();
  sub_63264();
  if (v14 != v17 - 33 || v16 != (void *)0x80000000000B8B10)
  {
    sub_ABC4();
    if ((sub_B37E0() & 1) == 0)
    {
      BOOL v18 = v14 == 0x6E456F4E5F6F7375 && v16 == (void *)0xEC00000079746974;
      if (!v18 && (sub_B37E0() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (qword_E6D58 != -1) {
          swift_once();
        }
        sub_B378(v4, (uint64_t)qword_F5360);
        uint64_t v19 = sub_63204();
        v20(v19);
        sub_63254();
        sub_B34C0(47);
        swift_bridgeObjectRelease();
        sub_63264();
        v39._countAndFlagsBits = v14;
        v39._object = v16;
        sub_B3020(v39);
        swift_bridgeObjectRelease();
        sub_ABC4();
        sub_63194(v21, 0x80000000000B8B30, v22, v23);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
        return 0;
      }
    }
  }
LABEL_22:
  swift_bridgeObjectRelease();
  if (qword_E6D58 != -1) {
    swift_once();
  }
  sub_B378(v4, (uint64_t)qword_F5360);
  sub_63254();
  sub_B34C0(17);
  v40._countAndFlagsBits = 0x6C61694472657355;
  v40._object = (void *)0xEF203A746341676FLL;
  sub_B3020(v40);
  sub_7424((uint64_t *)&unk_EA5B0);
  sub_B35C0();
  sub_631CC(v37, v38, v24, 0x80000000000B8A90);
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_63270();
    if (v1) {
      sub_B34F0();
    }
    else {
      swift_retain();
    }
    swift_bridgeObjectRelease();
    sub_B2940();
    char v25 = sub_22924();
    if (v25 == 6) {
      char v25 = 0;
    }
    *(unsigned char *)(v2 + 32) = v25;
    if (sub_220F8(v25) != 0x657461647075 || v26 != 0xE600000000000000)
    {
      char v28 = sub_B37E0();
      swift_bridgeObjectRelease();
      if (v28)
      {
LABEL_43:
        sub_63264();
        sub_7A1C();
        sub_631CC(v33, v34, v35, 0x80000000000B8A90);
        sub_621A0();
        goto LABEL_44;
      }
      int v29 = *(unsigned __int8 *)(v2 + 32);
      if (v29 == 6)
      {
LABEL_44:
        swift_release();
        swift_unknownObjectRelease();
        return v2;
      }
      if (sub_220F8(v29) != 0x6574656C6564 || v30 != 0xE600000000000000)
      {
        char v32 = sub_B37E0();
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0) {
          goto LABEL_44;
        }
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_621A0()
{
  uint64_t v1 = sub_B2D30();
  sub_7870();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_7A0C();
  uint64_t v7 = v6 - v5;
  sub_B2580();
  sub_ACF8((uint64_t)v25, (uint64_t)&v22);
  if (!v24)
  {
    sub_AD60((uint64_t)&v22);
    goto LABEL_7;
  }
  sub_B2750();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_B378(v1, (uint64_t)qword_F5360);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v11, v1);
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_B34C0(62);
    uint64_t v20 = v22;
    unint64_t v21 = v23;
    sub_7A1C();
    sub_B3020(v26);
    sub_ACF8((uint64_t)v25, (uint64_t)&v22);
    sub_7424((uint64_t *)&unk_E7990);
    v27._countAndFlagsBits = sub_B2FA0();
    sub_B3020(v27);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 0xD000000000000028;
    v28._object = (void *)0x80000000000B8BB0;
    sub_B3020(v28);
    uint64_t v22 = v20;
    unint64_t v23 = v21;
    swift_bridgeObjectRetain();
    sub_7A1C();
    sub_B3020(v29);
    swift_bridgeObjectRelease();
    unint64_t v12 = v23;
    sub_ABC4();
    sub_8C2F0(v13, v12, v14, v15, 0xD00000000000001DLL, 0x80000000000B8C20);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
    return sub_AD60((uint64_t)v25);
  }
  swift_retain();
  sub_B2710();
  swift_release();
  if (v22)
  {
    uint64_t v8 = sub_B2650();
    if (v8)
    {
      unint64_t v9 = v8;
      swift_retain();
      sub_6175C(v9, v0);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_AD60((uint64_t)v25);
      return swift_bridgeObjectRelease();
    }
    swift_release();
  }
  if (qword_E6D58 != -1) {
    swift_once();
  }
  sub_B378(v1, (uint64_t)qword_F5360);
  sub_7A1C();
  sub_ABC4();
  sub_8C2F0(v16, v17, v18, v19, 0xD00000000000001DLL, 0x80000000000B8C20);
  swift_release();
  return sub_AD60((uint64_t)v25);
}

void sub_62500(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v6 = sub_B2D30();
  uint64_t v46 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v45 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_B2460();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v43 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = sub_B24E0();
  if (!v16)
  {
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_B378(v6, (uint64_t)qword_F5360);
    sub_8C2F0(0xD000000000000068, 0x80000000000B8CC0, 0xD000000000000035, 0x80000000000B8A90, 0xD00000000000001DLL, 0x80000000000B8C20);
    goto LABEL_44;
  }
  v43[1] = v15;
  uint64_t v47 = v6;
  uint64_t v48 = a3;
  uint64_t v49 = v3;
  uint64_t v50 = v16;
  uint64_t v17 = sub_B2510();
  uint64_t v19 = v18;
  char v44 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  v44(v14, enum case for ListOperators.addToSet(_:), v8);
  uint64_t v20 = sub_B2450();
  uint64_t v22 = v21;
  unint64_t v23 = v14;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v23, v8);
  if (v19)
  {
    if (v20 == v17 && v19 == v22)
    {
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      uint64_t v32 = v51;
      *(unsigned char *)(v51 + 32) = 2;
      a3 = v48;
      uint64_t v31 = v47;
      goto LABEL_25;
    }
    char v26 = sub_B37E0();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_21;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v44(v12, enum case for ListOperators.removeFromSet(_:), v8);
  uint64_t v27 = sub_B2450();
  uint64_t v29 = v28;
  v24(v12, v8);
  if (v19)
  {
    BOOL v30 = v27 == v17 && v19 == v29;
    uint64_t v31 = v47;
    a3 = v48;
    uint64_t v32 = v51;
    if (v30)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v33 = sub_B37E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0) {
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v32 + 32) = 3;
  }
  else
  {
    swift_bridgeObjectRelease();
    a3 = v48;
    uint64_t v31 = v47;
    uint64_t v32 = v51;
  }
LABEL_25:
  sub_B2520();
  if (!v52) {
    goto LABEL_41;
  }
  uint64_t v34 = sub_B2530();
  swift_release();
  if (!v34) {
    goto LABEL_41;
  }
  uint64_t v35 = sub_62B74();
  if (!v35)
  {
    swift_release();
LABEL_41:
    if (qword_E6D58 != -1) {
      swift_once();
    }
    sub_B378(v31, (uint64_t)qword_F5360);
    sub_8C2F0(0xD00000000000003FLL, 0x80000000000B8D30, 0xD000000000000035, 0x80000000000B8A90, 0xD00000000000001DLL, 0x80000000000B8C20);
    swift_release();
LABEL_44:
    *a3 = 0;
    return;
  }
  *(unsigned char *)(v32 + 16) = 5;
  uint64_t v36 = *((void *)v35 + 2);
  if (v36)
  {
    uint64_t v37 = v35 + 40;
    do
    {
      BOOL v38 = *(v37 - 1) == 0x6C7070612E6D6F63 && *v37 == 0xEE007377656E2E65;
      if (v38 || (sub_B37E0() & 1) != 0) {
        *(unsigned char *)(v32 + 16) = 1;
      }
      v37 += 2;
      --v36;
    }
    while (v36);
  }
  swift_bridgeObjectRelease();
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v39 = v47;
  uint64_t v40 = sub_B378(v47, (uint64_t)qword_F5360);
  unint64_t v42 = v45;
  uint64_t v41 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v40, v39);
  uint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_B34C0(51);
  v55._countAndFlagsBits = 0xD000000000000031;
  v55._object = (void *)0x80000000000B8D70;
  sub_B3020(v55);
  char v54 = *(unsigned char *)(v32 + 16);
  sub_7424(&qword_EA5C0);
  v56._countAndFlagsBits = sub_B2FA0();
  sub_B3020(v56);
  swift_bridgeObjectRelease();
  sub_8C320(v52, v53, 0xD000000000000035, 0x80000000000B8A90, 0xD00000000000001DLL, 0x80000000000B8C20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
  sub_B24F0();
  swift_release();
  swift_release();
}

char *sub_62B74()
{
  uint64_t v1 = sub_B2D30();
  sub_7870();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_7A0C();
  unint64_t v7 = v6 - v5;
  uint64_t v8 = sub_B2490();
  sub_7870();
  uint64_t v69 = v9;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v59 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v59 - v16;
  uint64_t v18 = sub_B2540();
  if (!v18)
  {
    uint64_t v0 = 0;
    goto LABEL_32;
  }
  unint64_t v59 = v7;
  uint64_t v60 = v3;
  uint64_t v61 = v1;
  BOOL v71 = (char *)_swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(v18 + 16);
  uint64_t v1 = v18;
  if (!v3)
  {
    uint64_t v34 = (void (**)(char *, uint64_t))_swiftEmptyArrayStorage;
LABEL_22:
    swift_bridgeObjectRelease();
    int64_t v35 = (int64_t)v34[2];
    if (v35)
    {
      BOOL v71 = (char *)_swiftEmptyArrayStorage;
      sub_859F4(0, v35, 0);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      uint64_t v37 = *(unsigned __int8 *)(v69 + 80);
      uint64_t v65 = v34;
      BOOL v38 = (char *)v34 + ((v37 + 32) & ~v37);
      char v66 = *(void (***)(char *, char *, uint64_t))(v69 + 72);
      uint64_t v67 = v36;
      v69 += 16;
      uint64_t v39 = (void (**)(char *, uint64_t))(v69 - 8);
      do
      {
        uint64_t v40 = v68;
        v67(v68, v38, v8);
        uint64_t v41 = sub_B2470();
        uint64_t v43 = v42;
        (*v39)(v40, v8);
        uint64_t v0 = v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v44 = (char *)sub_63290();
          sub_859F4(v44, v45, v46);
          uint64_t v0 = v71;
        }
        unint64_t v48 = *((void *)v0 + 2);
        unint64_t v47 = *((void *)v0 + 3);
        if (v48 >= v47 >> 1)
        {
          BOOL v50 = sub_63224(v47);
          sub_859F4((char *)v50, v51, v52);
          uint64_t v0 = v71;
        }
        *((void *)v0 + 2) = v48 + 1;
        uint64_t v49 = &v0[16 * v48];
        *((void *)v49 + 4) = v41;
        *((void *)v49 + 5) = v43;
        BOOL v38 = (char *)v66 + (void)v38;
        --v35;
      }
      while (v35);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v0 = (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v3 = v60;
    uint64_t v1 = v61;
    unint64_t v7 = v59;
LABEL_32:
    if (qword_E6D58 != -1) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  unint64_t v7 = 0;
  char v66 = (void (**)(char *, char *, uint64_t))(v69 + 32);
  uint64_t v67 = (void (*)(char *, char *, uint64_t))(v69 + 16);
  BOOL v64 = v15;
  uint64_t v65 = (void (**)(char *, uint64_t))(v69 + 8);
  uint64_t v62 = v3;
  uint64_t v63 = v18;
  while (v7 < *(void *)(v1 + 16))
  {
    unint64_t v19 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    uint64_t v0 = *(char **)(v69 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v17, v1 + v19 + (void)v0 * v7, v8);
    uint64_t v20 = sub_B2480();
    if (v21)
    {
      if (v20 == 0x656D614E707061 && v21 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_13:
        uint64_t v24 = *v66;
        (*v66)(v15, v17, v8);
        char v25 = v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          size_t v26 = sub_63290();
          sub_85BC8(v26, v27, v28);
          char v25 = v71;
        }
        unint64_t v30 = *((void *)v25 + 2);
        unint64_t v29 = *((void *)v25 + 3);
        if (v30 >= v29 >> 1)
        {
          size_t v31 = sub_63224(v29);
          sub_85BC8(v31, v32, v33);
          char v25 = v71;
        }
        *((void *)v25 + 2) = v30 + 1;
        uint64_t v15 = v64;
        v24(&v25[v19 + v30 * (void)v0], v64, v8);
        BOOL v71 = v25;
        uint64_t v3 = v62;
        uint64_t v1 = v63;
        goto LABEL_18;
      }
      char v23 = sub_B37E0();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_13;
      }
    }
    (*v65)(v17, v8);
LABEL_18:
    if (v3 == ++v7)
    {
      uint64_t v34 = (void (**)(char *, uint64_t))v71;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_38:
  swift_once();
LABEL_33:
  uint64_t v53 = sub_B378(v1, (uint64_t)qword_F5360);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v53, v1);
  BOOL v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  sub_B34C0(42);
  swift_bridgeObjectRelease();
  BOOL v71 = (char *)0xD000000000000028;
  unint64_t v72 = 0x80000000000B8DB0;
  uint64_t v70 = v0;
  swift_bridgeObjectRetain();
  sub_7424(&qword_EA5C8);
  v73._countAndFlagsBits = sub_B2FA0();
  sub_B3020(v73);
  swift_bridgeObjectRelease();
  unint64_t v54 = v72;
  sub_ABC4();
  sub_8C308(v55, v54, v56, v57, 0x746163696C707061, 0xEE007364496E6F69);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v7, v1);
  if (v0 && !*((void *)v0 + 2))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v0;
}

uint64_t sub_630D8()
{
  swift_unknownObjectRelease();

  return _swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for DailyBriefingNLv4Intent()
{
  return self;
}

uint64_t sub_63134()
{
  return sub_61B14();
}

uint64_t sub_63158()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16);
}

uint64_t sub_63164()
{
  return *(unsigned __int8 *)(*(void *)v0 + 17);
}

uint64_t sub_63170()
{
  return sub_61BB0();
}

void sub_63194(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_8C2F0(a1, a2, 0xD000000000000035, a4, 0x6F72662874696E69, 0xEB00000000293A6DLL);
}

void sub_631CC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_8C320(a1, a2, 0xD000000000000035, a4, 0x6F72662874696E69, 0xEB00000000293A6DLL);
}

uint64_t sub_63204()
{
  return v0;
}

BOOL sub_63224@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_6323C()
{
  return swift_dynamicCastObjCClass();
}

void sub_63254()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
}

unint64_t sub_63270()
{
  return sub_21550(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t sub_63290()
{
  return 0;
}

char *sub_632A4(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_7424((uint64_t *)&unk_E7880);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (sub_C844((uint64_t)&a2[v9], 1, v7))
    {
      uint64_t v12 = sub_7424(&qword_E7878);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      sub_AA40((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    if (sub_C844((uint64_t)&a2[v14], 1, v7))
    {
      uint64_t v17 = sub_7424(&qword_E7878);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v8(v15, v16, v7);
      sub_AA40((uint64_t)v15, 0, 1, v7);
    }
    uint64_t v18 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    unint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_B17F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return a1;
}

uint64_t sub_634C4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_7424((uint64_t *)&unk_E7880);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  if (!sub_C844(v6, 1, v4)) {
    v5(v6, v4);
  }
  uint64_t v7 = a1 + a2[6];
  if (!sub_C844(v7, 1, v4)) {
    v5(v7, v4);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_B17F0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

char *sub_635E4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_C844((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_7424(&qword_E7878);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_AA40((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (sub_C844((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_7424(&qword_E7878);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7(v13, v14, v6);
    sub_AA40((uint64_t)v13, 0, 1, v6);
  }
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

char *sub_637B4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_C844((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      sub_AA40((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_7424(&qword_E7878);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = sub_C844((uint64_t)&a1[v15], 1, v6);
  int v19 = sub_C844((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v8(v16, v17, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_7424(&qword_E7878);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
  sub_AA40((uint64_t)v16, 0, 1, v6);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  char v23 = &a2[v21];
  uint64_t v24 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

char *sub_63A6C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_C844((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_7424(&qword_E7878);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_AA40((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (sub_C844((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_7424(&qword_E7878);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7(v13, v14, v6);
    sub_AA40((uint64_t)v13, 0, 1, v6);
  }
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v17 = &a1[v16];
  int v18 = &a2[v16];
  uint64_t v19 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

char *sub_63C3C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_7424((uint64_t *)&unk_E7880);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_C844((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      sub_AA40((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_7424(&qword_E7878);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = sub_C844((uint64_t)&a1[v15], 1, v6);
  int v19 = sub_C844((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v8(v16, v17, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_7424(&qword_E7878);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
  sub_AA40((uint64_t)v16, 0, 1, v6);
LABEL_13:
  uint64_t v21 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v22 = &a1[v21];
  char v23 = &a2[v21];
  uint64_t v24 = sub_B17F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t sub_63EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_63F04);
}

uint64_t sub_63F04(uint64_t a1, uint64_t a2, int *a3)
{
  sub_7424((uint64_t *)&unk_E7880);
  sub_655A0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_7424(&qword_E7878);
    sub_655A0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      if (a2 == 233)
      {
        unsigned int v13 = *(unsigned __int8 *)(a1 + a3[7]);
        if (v13 >= 0x17) {
          return v13 - 22;
        }
        else {
          return 0;
        }
      }
      uint64_t v8 = sub_B17F0();
      uint64_t v12 = a3[8];
    }
    uint64_t v9 = a1 + v12;
  }

  return sub_C844(v9, a2, v8);
}

uint64_t sub_63FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_63FF4);
}

void sub_63FF4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_7424((uint64_t *)&unk_E7880);
  sub_655A0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_7424(&qword_E7878);
    sub_655A0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 233)
      {
        *(unsigned char *)(a1 + a4[7]) = a2 + 22;
        return;
      }
      uint64_t v10 = sub_B17F0();
      uint64_t v14 = a4[8];
    }
    uint64_t v11 = a1 + v14;
  }

  sub_AA40(v11, a2, a2, v10);
}

uint64_t type metadata accessor for CurrentWeatherForecast()
{
  uint64_t result = qword_EA628;
  if (!qword_EA628) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_64118()
{
  sub_64228();
  if (v0 <= 0x3F)
  {
    sub_642C0();
    if (v1 <= 0x3F)
    {
      sub_B17F0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_64228()
{
  if (!qword_EA638)
  {
    sub_64280();
    unint64_t v0 = sub_B14C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EA638);
    }
  }
}

unint64_t sub_64280()
{
  unint64_t result = qword_EA640;
  if (!qword_EA640)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_EA640);
  }
  return result;
}

void sub_642C0()
{
  if (!qword_EA648)
  {
    sub_20D6C((uint64_t *)&unk_E7880);
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EA648);
    }
  }
}

uint64_t sub_6431C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for CalendarEvent(0);
  if (v4)
  {
    sub_655A0();
    sub_12E38(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }

  return sub_AA40(a2, v7, 1, v5);
}

uint64_t sub_643A4@<X0>(uint64_t a1@<X8>)
{
  sub_7424(&qword_EA6A8);
  sub_238F4(&qword_EA6B0, &qword_EA6A8);
  sub_B3230();
  sub_B3250();
  if (v10[4] == v10[0])
  {
    uint64_t v2 = sub_B19C0();
    uint64_t v3 = a1;
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v5 = (void (*)(void *, void))sub_B3270();
    uint64_t v7 = v6;
    uint64_t v8 = sub_B19C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, v7, v8);
    v5(v10, 0);
    uint64_t v3 = a1;
    uint64_t v4 = 0;
    uint64_t v2 = v8;
  }
  return sub_AA40(v3, v4, 1, v2);
}

uint64_t sub_644EC()
{
  uint64_t v1 = sub_7424(&qword_E7878);
  __chkstk_darwin(v1);
  sub_7A0C();
  uint64_t v4 = v3 - v2;
  sub_B34C0(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v8, "temperature: ");
  sub_7424((uint64_t *)&unk_E7880);
  sub_238F4(&qword_EA688, (uint64_t *)&unk_E7880);
  v9._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v9);
  swift_bridgeObjectRelease();
  sub_655C0();
  uint64_t countAndFlagsBits = v8._countAndFlagsBits;
  sub_B34C0(20);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0xD000000000000011;
  v8._object = (void *)0x80000000000B8DE0;
  uint64_t v6 = type metadata accessor for CurrentWeatherForecast();
  sub_C7DC(v0 + *(int *)(v6 + 20), v4);
  v10._uint64_t countAndFlagsBits = sub_B2FA0();
  sub_B3020(v10);
  swift_bridgeObjectRelease();
  sub_655C0();
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = 0xD000000000000011;
  v11._object = (void *)0x80000000000B8DE0;
  sub_B3020(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_B34C0(19);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0xD000000000000010;
  v8._object = (void *)0x80000000000B8E00;
  sub_C7DC(v0 + *(int *)(v6 + 24), v4);
  v12._uint64_t countAndFlagsBits = sub_B2FA0();
  sub_B3020(v12);
  swift_bridgeObjectRelease();
  sub_655C0();
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = 0xD000000000000010;
  v13._object = (void *)0x80000000000B8E00;
  sub_B3020(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14._object = (void *)0xEB00000000203A6ELL;
  v14._uint64_t countAndFlagsBits = 0x6F697469646E6F63;
  sub_B3020(v14);
  sub_B35C0();
  sub_655C0();
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  sub_B3020(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)&v8, "startTime: ");
  HIDWORD(v8._object) = -352321536;
  sub_B17F0();
  sub_307BC();
  v16._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_B3020(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_64858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v89 = a3;
  sub_B1AC0();
  sub_7870();
  uint64_t v87 = v5;
  uint64_t v88 = v4;
  __chkstk_darwin(v4);
  sub_17768();
  uint64_t v86 = v6;
  uint64_t v7 = sub_7424(&qword_EA6A0);
  __chkstk_darwin(v7 - 8);
  sub_18E00();
  uint64_t v72 = v8;
  sub_655B4();
  __chkstk_darwin(v9);
  uint64_t v70 = (uint64_t)&v70 - v10;
  uint64_t v76 = sub_B19C0();
  sub_7870();
  uint64_t v74 = v11;
  __chkstk_darwin(v12);
  sub_17768();
  uint64_t v71 = v13;
  uint64_t v14 = sub_7424(&qword_E7878);
  __chkstk_darwin(v14 - 8);
  sub_18E00();
  uint64_t v85 = v15;
  sub_655B4();
  __chkstk_darwin(v16);
  uint64_t v84 = (uint64_t)&v70 - v17;
  sub_655B4();
  __chkstk_darwin(v18);
  uint64_t v83 = (char *)&v70 - v19;
  sub_655B4();
  __chkstk_darwin(v20);
  uint64_t v81 = (char *)&v70 - v21;
  uint64_t v75 = sub_7424((uint64_t *)&unk_E7880);
  sub_7870();
  uint64_t v78 = v22;
  __chkstk_darwin(v23);
  sub_18E00();
  uint64_t v79 = v24;
  sub_655B4();
  __chkstk_darwin(v25);
  int64_t v27 = (char *)&v70 - v26;
  uint64_t v28 = sub_B2D30();
  sub_7870();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_7A0C();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_B17F0();
  sub_7870();
  uint64_t v37 = v36;
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v70 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v70 - v42;
  uint64_t v90 = a1;
  sub_B1A20();
  if (qword_E6D60 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_B378(v28, (uint64_t)qword_F5378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v34, v44, v28);
  v91[0] = 0;
  v91[1] = 0xE000000000000000;
  sub_B34C0(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v91, "current date: ");
  HIBYTE(v91[1]) = -18;
  sub_307BC();
  v92._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v92);
  swift_bridgeObjectRelease();
  sub_8C308(v91[0], v91[1], 0xD000000000000034, 0x80000000000B8E20, 0xD00000000000001CLL, 0x80000000000B8E60);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v28);
  int64_t v45 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  Swift::String v73 = v43;
  uint64_t v80 = v35;
  v45(v41, v43, v35);
  int v46 = sub_7256C();
  sub_B1A10();
  unint64_t v47 = v27;
  uint64_t v77 = v37;
  if (v46 == 1)
  {
    sub_7424(&qword_EA6A8);
    uint64_t v48 = v71;
    sub_B1BA0();
    uint64_t v49 = (uint64_t)v81;
    sub_B19B0();
    BOOL v50 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    uint64_t v51 = v76;
    v50(v48, v76);
    uint64_t v52 = v75;
    sub_AA40(v49, 0, 1, v75);
    sub_7424(&qword_EA6A8);
    sub_B1BA0();
    uint64_t v53 = (uint64_t)v83;
    sub_B19A0();
    v50(v48, v51);
    uint64_t v54 = 0;
  }
  else
  {
    uint64_t v55 = v70;
    sub_643A4(v70);
    uint64_t v56 = v76;
    int v57 = sub_C844(v55, 1, v76);
    uint64_t v53 = (uint64_t)v83;
    uint64_t v58 = (uint64_t)v81;
    uint64_t v52 = v75;
    if (v57 == 1)
    {
      sub_65548(v55, &qword_EA6A0);
      uint64_t v59 = 1;
    }
    else
    {
      sub_B19B0();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v55, v56);
      uint64_t v59 = 0;
    }
    sub_AA40(v58, v59, 1, v52);
    uint64_t v60 = v72;
    sub_643A4(v72);
    if (sub_C844(v60, 1, v56) == 1)
    {
      sub_65548(v60, &qword_EA6A0);
      uint64_t v54 = 1;
    }
    else
    {
      sub_B19A0();
      sub_131C8();
      v61();
      uint64_t v54 = 0;
    }
    uint64_t v49 = v58;
  }
  sub_AA40(v53, v54, 1, v52);
  sub_B1A30();
  uint64_t v63 = v78;
  uint64_t v62 = v79;
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v79, v47, v52);
  uint64_t v64 = v84;
  sub_C7DC(v49, v84);
  uint64_t v65 = v85;
  sub_C7DC(v53, v85);
  LODWORD(v90) = sub_40498();
  sub_131C8();
  v66();
  sub_65548(v53, &qword_E7878);
  sub_65548(v49, &qword_E7878);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v52);
  uint64_t v67 = v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v89, v62, v52);
  uint64_t v68 = (int *)type metadata accessor for CurrentWeatherForecast();
  sub_6547C(v64, v67 + v68[5]);
  sub_6547C(v65, v67 + v68[6]);
  *(unsigned char *)(v67 + v68[7]) = v90;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v77 + 32))(v67 + v68[8], v73, v80);
}

uint64_t sub_64FE4(uint64_t a1)
{
  uint64_t v56 = sub_B1AC0();
  sub_7870();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_17768();
  uint64_t v55 = v5;
  uint64_t v6 = sub_7424(&qword_E7878);
  __chkstk_darwin(v6 - 8);
  sub_18E00();
  uint64_t v54 = v7;
  sub_655B4();
  __chkstk_darwin(v8);
  uint64_t v53 = (uint64_t)v40 - v9;
  uint64_t v52 = sub_7424((uint64_t *)&unk_E7880);
  sub_7870();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_17768();
  uint64_t v51 = v13;
  uint64_t v50 = sub_B1A00();
  sub_7870();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_17768();
  uint64_t v49 = v17;
  type metadata accessor for CurrentWeatherForecast();
  sub_7870();
  uint64_t v47 = v19;
  uint64_t v48 = v18;
  __chkstk_darwin(v18);
  sub_7A0C();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_7424(&qword_EA690);
  uint64_t v24 = sub_238F4(&qword_EA698, &qword_EA690);
  uint64_t v25 = sub_B3240();
  uint64_t v26 = _swiftEmptyArrayStorage;
  if (!v25) {
    return (uint64_t)v26;
  }
  uint64_t v27 = v25;
  uint64_t v59 = _swiftEmptyArrayStorage;
  sub_85C2C(0, v25 & ~(v25 >> 63), 0);
  uint64_t result = sub_B3230();
  if ((v27 & 0x8000000000000000) == 0)
  {
    uint64_t v43 = (void (**)(uint64_t))(v15 + 16);
    uint64_t v42 = v3 + 8;
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
    v40[1] = v15 + 8;
    uint64_t v45 = v23;
    uint64_t v46 = a1;
    uint64_t v44 = v24;
    uint64_t v29 = v51;
    uint64_t v30 = v52;
    do
    {
      uint64_t v57 = v27;
      uint64_t v31 = (void (*)(char *, void))sub_B3270();
      (*v43)(v49);
      v31(v58, 0);
      sub_B19D0();
      uint64_t v32 = v53;
      sub_AA40(v53, 1, 1, v30);
      uint64_t v33 = v54;
      sub_AA40(v54, 1, 1, v30);
      sub_B19F0();
      LOBYTE(v31) = sub_40498();
      sub_131C8();
      v34();
      uint64_t v35 = v48;
      sub_B19E0();
      (*v41)(v22, v29, v30);
      sub_6547C(v32, v22 + v35[5]);
      sub_6547C(v33, v22 + v35[6]);
      *(unsigned char *)(v22 + v35[7]) = (_BYTE)v31;
      sub_131C8();
      v36();
      uint64_t v26 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_85C2C(0, v26[2] + 1, 1);
        uint64_t v26 = v59;
      }
      unint64_t v38 = v26[2];
      unint64_t v37 = v26[3];
      uint64_t v39 = v57;
      if (v38 >= v37 >> 1)
      {
        sub_85C2C(v37 > 1, v38 + 1, 1);
        uint64_t v26 = v59;
      }
      v26[2] = v38 + 1;
      sub_654E4(v22, (uint64_t)v26+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v38);
      sub_B3260();
      uint64_t v27 = v39 - 1;
    }
    while (v27);
    return (uint64_t)v26;
  }
  __break(1u);
  return result;
}

uint64_t sub_6547C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E7878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_654E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeatherForecast();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_65548(uint64_t a1, uint64_t *a2)
{
  sub_7424(a2);
  sub_131C8();
  v3();
  return a1;
}

void sub_655C0()
{
  v1._uint64_t countAndFlagsBits = 10;
  v1._object = (void *)0xE100000000000000;
  sub_B3020(v1);
}

uint64_t sub_655D8()
{
  type metadata accessor for DBDateTimeRangeStore();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_B29D0();
  qword_F50B0 = v0;
  return result;
}

uint64_t sub_65624()
{
  uint64_t v0 = sub_7424(&qword_E9CB8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_B29B0();
  sub_AA40((uint64_t)v2, 1, 1, v3);
  sub_B29F0();
  sub_B2A00();
  sub_53160();
  sub_B2EA0();
  char v4 = sub_B29C0();
  swift_bridgeObjectRelease();
  sub_658C8((uint64_t)v2);
  return v4 & 1;
}

uint64_t sub_65748()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin20DBDateTimeRangeStore_store;
  uint64_t v2 = sub_B29E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_657E8()
{
  return type metadata accessor for DBDateTimeRangeStore();
}

uint64_t type metadata accessor for DBDateTimeRangeStore()
{
  uint64_t result = qword_EA6E8;
  if (!qword_EA6E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_65838()
{
  uint64_t result = sub_B29E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_658C8(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E9CB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_65928(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v8 setCentered:a4 & 1];
  id v9 = [objc_allocWithZone((Class)SASTCommandTemplateAction) init];
  sub_65A1C(a3, v9);
  [v8 setAction:v9];

  id v10 = [objc_allocWithZone((Class)SAUIDecoratedText) init];
  sub_65A94(a1, a2, v10);
  [v8 setDecoratedLabel:v10];

  return v8;
}

void sub_65A1C(uint64_t a1, void *a2)
{
  sub_7424((uint64_t *)&unk_EA7E0);
  Class isa = sub_B3090().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCommands:isa];
}

void sub_65A94(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_B2F20();
  swift_bridgeObjectRelease();
  [a3 setText:v4];
}

uint64_t sub_65AF8()
{
  *(void *)(v1 + 16) = v0;
  return sub_FCA0((uint64_t)sub_65B10);
}

uint64_t sub_65B10()
{
  sub_7FDC();
  sub_7424(&qword_EA2D0);
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v1 + 16) = xmmword_BEC60;
  *(void *)(v1 + 56) = &type metadata for WarningsDialogs;
  *(void *)(v1 + 64) = &off_DF108;
  *(unsigned char *)(v1 + 32) = 2;
  *(void *)(v1 + 72) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 104) = &type metadata for PodcastsDialogs;
  *(void *)(v1 + 112) = &off_DF478;
  *(unsigned char *)(v1 + 80) = 1;
  *(void *)(v1 + 120) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 152) = &type metadata for PodcastsDialogs;
  *(void *)(v1 + 160) = &off_DF478;
  *(unsigned char *)(v1 + 128) = 2;
  *(void *)(v1 + 168) = _swiftEmptyArrayStorage;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_65C24;
  return sub_7620C();
}

uint64_t sub_65C24()
{
  sub_7FDC();
  uint64_t v2 = v1;
  sub_7FC4();
  uint64_t v3 = *v0;
  sub_2B6A4();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_65D10()
{
  sub_7FDC();
  v1[29] = v2;
  v1[30] = v0;
  v1[28] = v3;
  sub_7424(&qword_EA2C0);
  v1[31] = swift_task_alloc();
  uint64_t v4 = sub_B20D0();
  v1[32] = v4;
  v1[33] = *(void *)(v4 - 8);
  v1[34] = swift_task_alloc();
  return _swift_task_switch(sub_65E00, 0, 0);
}

uint64_t sub_65E00()
{
  *(_OWORD *)(v0 + 64) = 0u;
  uint64_t v1 = *(void **)(v0 + 232);
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = 0;
  sub_7468(v1, v1[3]);
  if (sub_B1DB0())
  {
    *(unsigned char *)(v0 + 184) = 1;
    *(void *)(v0 + 208) = &type metadata for WarningsDialogs;
    *(void *)(v0 + 216) = &off_DF108;
    sub_66748(v0 + 64);
    sub_667C8(v0 + 184, v0 + 64, &qword_EA8D8);
  }
  sub_666E0(v0 + 64, v0 + 144);
  if (*(void *)(v0 + 168))
  {
    sub_B3B0((long long *)(v0 + 144), v0 + 104);
  }
  else
  {
    *(void *)(v0 + 128) = &type metadata for WarningsDialogs;
    *(void *)(v0 + 136) = &off_DF108;
    *(unsigned char *)(v0 + 104) = 0;
    sub_66748(v0 + 144);
  }
  sub_B3B0((long long *)(v0 + 104), v0 + 16);
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  sub_5F104(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v3 = v2;
  unint64_t v5 = *(void *)(v2 + 16);
  unint64_t v4 = *(void *)(v2 + 24);
  if (v5 >= v4 >> 1)
  {
    sub_67174(v4);
    uint64_t v3 = v15;
  }
  uint64_t v6 = *(void **)(v0 + 232);
  *(void *)(v3 + 16) = v5 + 1;
  uint64_t v7 = (_OWORD *)(v3 + 48 * v5);
  long long v8 = *(_OWORD *)(v0 + 16);
  long long v9 = *(_OWORD *)(v0 + 48);
  v7[3] = *(_OWORD *)(v0 + 32);
  v7[4] = v9;
  v7[2] = v8;
  sub_7468(v6, v1[3]);
  if (sub_B1E10())
  {
    unint64_t v11 = *(void *)(v3 + 16);
    unint64_t v10 = *(void *)(v3 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_67174(v10);
      uint64_t v3 = v16;
    }
    *(void *)(v3 + 16) = v11 + 1;
    uint64_t v12 = v3 + 48 * v11;
    *(unsigned char *)(v12 + 32) = 6;
    *(void *)(v12 + 48) = *(void *)&v17[15];
    *(void *)(v12 + 56) = &type metadata for CommonDialogs;
    *(_OWORD *)(v12 + 33) = *(_OWORD *)v17;
    *(void *)(v12 + 64) = &off_DF1F0;
    *(void *)(v12 + 72) = _swiftEmptyArrayStorage;
  }
  *(void *)(v0 + 280) = v3;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_66054;
  return sub_7620C();
}

uint64_t sub_66054()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_2B6A4();
  *unint64_t v4 = v3;
  *(void *)(v6 + 296) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_66144, 0, 0);
}

void sub_66144()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[33];
    unint64_t v4 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v4(v0[34], v5, v0[32]);
    if (v2 == 1)
    {
      sub_66748((uint64_t)(v0 + 8));
      swift_bridgeObjectRelease();
      uint64_t v6 = 1;
    }
    else
    {
      v4(v0[31], v5 + *(void *)(v0[33] + 72), v0[32]);
      swift_bridgeObjectRelease();
      sub_66748((uint64_t)(v0 + 8));
      uint64_t v6 = 0;
    }
    uint64_t v8 = v0[33];
    uint64_t v7 = v0[34];
    uint64_t v10 = v0[31];
    uint64_t v9 = v0[32];
    uint64_t v11 = v0[28];
    sub_AA40(v10, v6, 1, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v7, v9);
    uint64_t v12 = type metadata accessor for LocationWarningTemplatingResult(0);
    sub_667C8(v10, v11 + *(int *)(v12 + 20), &qword_EA2C0);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (void (*)(void))v0[1];
    v13();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_662A8(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 88) = a2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v2;
  return sub_FCA0((uint64_t)sub_662C4);
}

uint64_t sub_662C4()
{
  char v1 = *(unsigned char *)(v0 + 88);
  *(void *)(v0 + 40) = &type metadata for WarningsDialogs;
  *(void *)(v0 + 48) = &off_DF108;
  *(unsigned char *)(v0 + 16) = 3;
  sub_7424(&qword_E7D20);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 72) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_BEC70;
  *(void *)(v2 + 32) = 0xD000000000000014;
  *(void *)(v2 + 40) = 0x80000000000B8F00;
  *(void *)(v2 + 72) = &type metadata for Bool;
  *(unsigned char *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  void *v3 = v0;
  v3[1] = sub_663EC;
  uint64_t v4 = *(void *)(v0 + 56);
  return sub_759B8(v4, v0 + 16, v2);
}

uint64_t sub_663EC()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 16;
  uint64_t v4 = *v0;
  sub_2B6A4();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_74F8(v3);
  uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
  return v6();
}

uint64_t sub_664D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin25WarningsTemplatingService_logger;
  uint64_t v6 = qword_E6D90;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_B2D30();
  uint64_t v8 = sub_B378(v7, (uint64_t)qword_F5408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v2 + v5, v8, v7);
  swift_release();
  *(void *)(v2 + 16) = a2;
  sub_74F8(a1);
  return v2;
}

uint64_t sub_665B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin25WarningsTemplatingService_logger;
  sub_B2D30();
  sub_79FC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);

  return v4(v1, v2);
}

uint64_t sub_66618()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin25WarningsTemplatingService_logger;
  sub_B2D30();
  sub_79FC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_666B8()
{
  return type metadata accessor for WarningsTemplatingService(0);
}

uint64_t type metadata accessor for WarningsTemplatingService(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_EA818);
}

uint64_t sub_666E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EA8D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_66748(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_EA8D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for LocationWarningTemplatingResult(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_EA938);
}

uint64_t sub_667C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_7424(a3);
  sub_79FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t *sub_66824(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_B20D0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    if (sub_C844((uint64_t)v11, 1, v7))
    {
      uint64_t v12 = sub_7424(&qword_EA2C0);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      sub_AA40((uint64_t)v10, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_6696C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B20D0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v7(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = sub_C844(v5, 1, v4);
  if (!result)
  {
    return v7(v5, v4);
  }
  return result;
}

char *sub_66A34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_B20D0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_C844((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_7424(&qword_EA2C0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_AA40((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_66B2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_B20D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_C844((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_7424(&qword_EA2C0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  sub_AA40((uint64_t)v10, 0, 1, v6);
  return a1;
}

char *sub_66CAC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_B20D0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_C844((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_7424(&qword_EA2C0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_AA40((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_66DA4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_B20D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_C844((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_7424(&qword_EA2C0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  sub_AA40((uint64_t)v10, 0, 1, v6);
  return a1;
}

uint64_t sub_66F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_66F38);
}

uint64_t sub_66F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_B20D0();
  sub_176F8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_7424(&qword_EA2C0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return sub_C844(v9, a2, v8);
}

uint64_t sub_66FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_66FCC);
}

uint64_t sub_66FCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_B20D0();
  sub_176F8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_7424(&qword_EA2C0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return sub_AA40(v11, a2, a2, v10);
}

void sub_67054()
{
  sub_B20D0();
  if (v0 <= 0x3F)
  {
    sub_6711C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_6711C()
{
  if (!qword_EA948)
  {
    sub_B20D0();
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EA948);
    }
  }
}

void sub_67174(unint64_t a1@<X8>)
{
  sub_5F104(a1 > 1, v1, 1, v2);
}

uint64_t sub_67198()
{
  return sub_B1C80();
}

uint64_t sub_671F8()
{
  sub_7FDC();
  v1[13] = v2;
  v1[14] = v0;
  sub_7424(&qword_E76E0);
  v1[15] = sub_131EC();
  uint64_t v3 = sub_B22A0();
  v1[16] = v3;
  sub_FC60(v3);
  v1[17] = v4;
  v1[18] = sub_131EC();
  sub_B2CB0();
  v1[19] = sub_131EC();
  uint64_t v5 = sub_B20D0();
  v1[20] = v5;
  sub_FC60(v5);
  v1[21] = v6;
  v1[22] = sub_131EC();
  return _swift_task_switch(sub_67304, 0, 0);
}

uint64_t sub_67304()
{
  sub_7FDC();
  v0[23] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_logger;
  sub_8C308(0xD000000000000025, 0x80000000000B8F90, 0xD00000000000002DLL, 0x80000000000B8FC0, 0x2865747563657865, 0xE900000000000029);
  type metadata accessor for DailyBriefingCommonCATs();
  sub_B2CA0();
  v0[24] = sub_B2BE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[25] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_67424;
  uint64_t v2 = v0[22];
  return sub_32B1C(v2);
}

uint64_t sub_67424()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_67878;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_67510;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_67510()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  sub_7468((void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_deviceState), *(void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_deviceState + 24));
  sub_B1DE0();
  uint64_t v5 = sub_B2090();
  sub_AA40(v3, 1, 1, v5);
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  sub_B1F10();
  sub_3FF60(v0 + 16, &qword_EAA78);
  sub_3FF60(v3, &qword_E76E0);
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_outputPublisherAsync + 24);
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_outputPublisherAsync + 32);
  sub_7468((void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_outputPublisherAsync), v6);
  *(void *)(v0 + 80) = v11;
  *(void *)(v0 + 88) = &protocol witness table for AceOutput;
  uint64_t v8 = sub_7590((uint64_t *)(v0 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(v8, v2, v11);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_676E4;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 56, v6, v7);
}

uint64_t sub_676E4()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v3 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_67980;
  }
  else
  {
    sub_74F8(v3 + 56);
    uint64_t v6 = sub_677D0;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_677D0()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v4 = sub_67E78();
  v5(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_67E04();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v6();
}

uint64_t sub_67878()
{
  swift_release();
  sub_67E24();
  swift_bridgeObjectRelease();
  sub_67E50();
  sub_7424(&qword_E7F40);
  v4._uint64_t countAndFlagsBits = sub_B2FA0();
  sub_B3020(v4);
  swift_bridgeObjectRelease();
  sub_67DCC(v2, 0xD00000000000002DLL, (uint64_t)"DailyBriefingFlowPlugin/UnsupportedFlow.swift");
  swift_bridgeObjectRelease();
  swift_errorRelease();
  sub_67E04();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v0();
}

uint64_t sub_67980()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v4 = sub_67E78();
  v5(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_74F8((uint64_t)(v0 + 7));
  sub_67E24();
  swift_bridgeObjectRelease();
  sub_67E50();
  sub_7424(&qword_E7F40);
  v10._uint64_t countAndFlagsBits = sub_B2FA0();
  sub_B3020(v10);
  swift_bridgeObjectRelease();
  sub_67DCC(v8, 0xD00000000000002DLL, (uint64_t)"DailyBriefingFlowPlugin/UnsupportedFlow.swift");
  swift_bridgeObjectRelease();
  swift_errorRelease();
  sub_67E04();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v6();
}

uint64_t sub_67AB4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_logger;
  sub_B2D30();
  sub_FC8C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_catProvider);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_deviceState);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin15UnsupportedFlow_outputPublisherAsync);
  return v0;
}

uint64_t sub_67B3C()
{
  sub_67AB4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_67B94()
{
  return type metadata accessor for UnsupportedFlow();
}

uint64_t type metadata accessor for UnsupportedFlow()
{
  uint64_t result = qword_EA9A8;
  if (!qword_EA9A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_67BE4()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_67C80()
{
  return sub_67198();
}

uint64_t sub_67CA4()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_A7BC;
  return sub_671F8();
}

uint64_t sub_67D40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UnsupportedFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t sub_67D7C()
{
  unint64_t result = qword_E95B8;
  if (!qword_E95B8)
  {
    type metadata accessor for UnsupportedFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_E95B8);
  }
  return result;
}

void sub_67DCC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_8C2F0(a1, v3, a2, (a3 - 32) | 0x8000000000000000, 0x2865747563657865, 0xE900000000000029);
}

uint64_t sub_67E04()
{
  return sub_B1FB0();
}

void sub_67E24()
{
  sub_B34C0(38);
}

uint64_t sub_67E50()
{
  *(void *)(v1 + 96) = v0;
  return swift_errorRetain();
}

uint64_t sub_67E78()
{
  return *(void *)(v0 + 144);
}

uint64_t sub_67E90()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 64);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 56);
    type metadata accessor for CommonTemplatingService();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    *(void *)(v0 + 64) = v1;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_67F00()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 72);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 56);
    type metadata accessor for GreetingTemplatingService();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    *(void *)(v0 + 72) = v1;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_67F70()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void *)(v0 + 80);
  }
  else
  {
    uint64_t v2 = v0;
    sub_A8B4(v0 + 16, (uint64_t)v5);
    uint64_t v3 = *(void *)(v0 + 56);
    type metadata accessor for WarningsTemplatingService(0);
    swift_allocObject();
    swift_retain();
    uint64_t v1 = sub_664D8((uint64_t)v5, v3);
    *(void *)(v2 + 80) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_68018()
{
  if (*(void *)(v0 + 112))
  {
    uint64_t v1 = *(void *)(v0 + 112);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 56);
    type metadata accessor for PodcastTemplatingService();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    *(void *)(v0 + 112) = v1;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_68088(long long *a1, uint64_t a2)
{
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  sub_B3B0(a1, v2 + 16);
  *(void *)(v2 + 56) = a2;
  return v2;
}

uint64_t sub_680C4()
{
  sub_74F8(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_6812C()
{
  sub_680C4();

  return _swift_deallocClassInstance(v0, 128, 7);
}

uint64_t type metadata accessor for TemplatingProvider()
{
  return self;
}

uint64_t sub_68184(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_B2D30();
  sub_7870();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_7A0C();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_7424(&qword_E8B80);
  __chkstk_darwin(v13 - 8);
  sub_7A0C();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_B1700();
  sub_7870();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_7A0C();
  uint64_t v23 = v22 - v21;
  sub_12DD0(a3, (uint64_t)v71);
  if (!v72 || !a2) {
    goto LABEL_5;
  }
  uint64_t v24 = v73;
  sub_329AC(a1, v16);
  if (sub_C844(v16, 1, v17) == 1)
  {
    sub_531B0(v16, &qword_E8B80);
LABEL_5:
    if (qword_E6D68 != -1) {
      swift_once();
    }
    sub_B378(v6, (uint64_t)qword_F5390);
    sub_68E98();
    sub_7A1C();
    sub_ABC4();
    sub_68E44(v25, v26, v27, v28, (uint64_t)"hasTrafficInfoChanged(calendarId:previousEntry:result:)");
    return 0;
  }
  uint64_t v69 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v23, v16, v17);
  id v31 = v24;
  id v32 = a2;
  sub_B16E0();
  unint64_t v70 = v33;
  id v34 = [v32 uniqueIdentifier];
  sub_B2F50();

  sub_12E9C();
  LOBYTE(v34) = sub_B3410();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0
    || (id v35 = [v32 ETAForKey:@"MapsSuggestionsETAKey"]) == 0
    || (uint64_t v36 = v35,
        [v35 seconds],
        v36,
        (id v37 = [v31 ETAForKey:@"MapsSuggestionsETAKey"]) == 0))
  {
    if (qword_E6D68 != -1) {
      swift_once();
    }
    sub_B378(v6, (uint64_t)qword_F5390);
    sub_68E98();
    sub_7A1C();
    sub_ABC4();
    sub_68E44(v44, v45, v46, v47, (uint64_t)"hasTrafficInfoChanged(calendarId:previousEntry:result:)");

    uint64_t v48 = sub_68E28();
    v49(v48);
    return 0;
  }
  unint64_t v38 = v37;
  [v37 seconds];

  id v39 = [v32 geoMapItem];
  id v40 = [v31 geoMapItem];
  uint64_t v41 = v40;
  if (!v39)
  {
    if (!v40) {
      goto LABEL_21;
    }
LABEL_34:

LABEL_35:
    if (qword_E6D68 != -1) {
      swift_once();
    }
    sub_B378(v6, (uint64_t)qword_F5390);
    sub_7A1C();
    sub_ABC4();
    sub_8C308(v63, v64, 0xD000000000000029, v65, v66, 0x80000000000B92B0);

    uint64_t v67 = sub_68E28();
    v68(v67);
    return 1;
  }
  if (!v40)
  {
    uint64_t v41 = v39;
    goto LABEL_34;
  }
  sub_68DE8();
  id v42 = v39;
  char v43 = sub_B3360();

  if ((v43 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_21:
  sub_68E64();
  if (v52 ^ v53 | v51) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = 1;
  }
  if (qword_E6D68 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_B378(v6, (uint64_t)qword_F5390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v12, v50, v6);
  sub_68EA8();
  swift_bridgeObjectRelease();
  sub_68E80((uint64_t)"Has ETA changed: ");
  uint64_t v55 = v54 | 0x65750000u;
  if (v52 ^ v53 | v51) {
    v56._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  else {
    v56._uint64_t countAndFlagsBits = v55;
  }
  if (v52 ^ v53 | v51) {
    uint64_t v57 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v57 = (void *)0xE400000000000000;
  }
  v56._object = v57;
  sub_B3020(v56);
  swift_bridgeObjectRelease();
  sub_68E98();
  sub_ABC4();
  sub_8C320(v58, v70, 0xD000000000000029, v59, v60, 0x80000000000B92B0);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v12, v6);
  uint64_t v61 = sub_68E28();
  v62(v61);
  return v29;
}

uint64_t sub_68764(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_B2D30();
  sub_7870();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_7A0C();
  uint64_t v10 = v9 - v8;
  sub_12DD0(a2, (uint64_t)v49);
  if (!v50 || !a1)
  {
    if (qword_E6D68 != -1) {
      swift_once();
    }
    sub_B378(v4, (uint64_t)qword_F5390);
    sub_68EC8();
    sub_7A1C();
    sub_ABC4();
    sub_68E44(v23, v24, v25, v26, (uint64_t)"hasTrafficInfoChanged(previousEntry:result:)");
    return 0;
  }
  id v11 = v51;
  id v12 = a1;
  id v13 = [v12 uniqueIdentifier];
  uint64_t v14 = sub_B2F50();
  uint64_t v16 = v15;

  id v17 = [v11 uniqueIdentifier];
  uint64_t v18 = sub_B2F50();
  uint64_t v20 = v19;

  BOOL v21 = v14 == v18 && v16 == v20;
  if (v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_B37E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
LABEL_27:
      if (qword_E6D68 != -1) {
        swift_once();
      }
      sub_B378(v4, (uint64_t)qword_F5390);
      sub_68EC8();
      sub_7A1C();
      sub_ABC4();
      sub_68E44(v43, v44, v45, v46, (uint64_t)"hasTrafficInfoChanged(previousEntry:result:)");

      return 0;
    }
  }
  id v27 = [v12 ETAForKey:@"MapsSuggestionsETAKey"];
  if (!v27) {
    goto LABEL_27;
  }
  uint64_t v28 = v27;
  [v27 seconds];

  id v29 = [v11 ETAForKey:@"MapsSuggestionsETAKey"];
  if (!v29) {
    goto LABEL_27;
  }
  uint64_t v30 = v29;
  [v29 seconds];

  sub_68E64();
  if (v34 ^ v35 | v21) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = 1;
  }
  if (qword_E6D68 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_B378(v4, (uint64_t)qword_F5390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v32, v4);
  sub_68EA8();
  swift_bridgeObjectRelease();
  sub_68E80((uint64_t)"Has ETA changed: ");
  uint64_t v37 = v36 | 0x65750000u;
  if (v34 ^ v35 | v33) {
    v38._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  else {
    v38._uint64_t countAndFlagsBits = v37;
  }
  if (v34 ^ v35 | v33) {
    id v39 = (void *)0xE500000000000000;
  }
  else {
    id v39 = (void *)0xE400000000000000;
  }
  v38._object = v39;
  sub_B3020(v38);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_8C320(v40, v48, 0xD000000000000029, v41, v42, 0x80000000000B9200);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  return v31;
}

BOOL sub_68B44(void *a1)
{
  uint64_t v2 = sub_7424(&qword_E7D38);
  __chkstk_darwin(v2 - 8);
  sub_7A0C();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_B17F0();
  sub_7870();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  id v15 = [a1 geoMapItem];

  if (!v15) {
    return 0;
  }
  if (qword_E6C60 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_F50A8;
  swift_bridgeObjectRetain();
  char v17 = sub_8645C((uint64_t)[a1 type], v16);
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0) {
    return 0;
  }
  if ([a1 type] == (char *)&dword_0 + 3)
  {
    id v18 = [a1 dateForKey:@"MapsSuggestionsScheduledTimeKey"];
    if (v18)
    {
      uint64_t v19 = v18;
      sub_B17C0();

      uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
      v20(v5, v12, v6);
      sub_AA40(v5, 0, 1, v6);
      if (sub_C844(v5, 1, v6) != 1)
      {
        v20((uint64_t)v14, (char *)v5, v6);
        sub_B17E0();
        char v21 = sub_B1760();
        char v22 = *(void (**)(char *, uint64_t))(v8 + 8);
        v22(v12, v6);
        v22(v14, v6);
        return (v21 & 1) == 0;
      }
    }
    else
    {
      sub_AA40(v5, 1, 1, v6);
    }
    sub_531B0(v5, &qword_E7D38);
  }
  return 1;
}

unint64_t sub_68DE8()
{
  unint64_t result = qword_EAC70;
  if (!qword_EAC70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_EAC70);
  }
  return result;
}

uint64_t sub_68E28()
{
  return v0;
}

void sub_68E44(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_8C320(a1, a2, 0xD000000000000029, a3, a4, (a5 - 32) | 0x8000000000000000);
}

double sub_68E64()
{
  return vabdd_f64(v1, v0);
}

void sub_68E80(uint64_t a1@<X8>)
{
  *(void *)(v2 - 176) = v1;
  *(void *)(v2 - 168) = (a1 - 32) | 0x8000000000000000;
}

void sub_68EA8()
{
  *(void *)(v0 - 176) = 0;
  *(void *)(v0 - 168) = 0xE000000000000000;
  sub_B34C0(19);
}

unint64_t sub_68EDC()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_68EF8()
{
  return 0x676E697465657247;
}

BOOL sub_68F10(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBC20;
  v6._object = a2;
  Swift::Int v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_68F64@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_68F10(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_68F9C(void *a1@<X8>)
{
  *a1 = 0x676E697465657247;
  a1[1] = 0xE800000000000000;
}

unint64_t sub_68FB8()
{
  return 0xD00000000000001ELL;
}

unsigned char *storeEnumTagSinglePayload for GreetingDialogs(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *BOOL result = a2;
        return result;
      case 2:
        *(_WORD *)BOOL result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)BOOL result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *BOOL result = 0;
      break;
    case 2:
      *(_WORD *)BOOL result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x69074);
    case 4:
      *(_DWORD *)BOOL result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GreetingDialogs()
{
  return &type metadata for GreetingDialogs;
}

unint64_t sub_690B0()
{
  unint64_t result = qword_EAC78;
  if (!qword_EAC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EAC78);
  }
  return result;
}

uint64_t INTask.entityBuilder.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_7424(&qword_E9FA8);
  __chkstk_darwin(v2 - 8);
  sub_18E00();
  uint64_t v57 = v3;
  sub_655B4();
  __chkstk_darwin(v4);
  unsigned __int16 v54 = (char *)&v51 - v5;
  sub_655B4();
  __chkstk_darwin(v6);
  uint64_t v56 = (uint64_t)&v51 - v7;
  uint64_t v8 = sub_B1650();
  sub_7870();
  uint64_t v55 = v9;
  __chkstk_darwin(v10);
  sub_18E00();
  uint64_t v51 = v11;
  sub_655B4();
  __chkstk_darwin(v12);
  char v53 = (char *)&v51 - v13;
  sub_655B4();
  uint64_t v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  char v52 = (char *)&v51 - v16;
  uint64_t v17 = sub_B23E0();
  sub_7870();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  char v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B27F0();
  swift_allocObject();
  uint64_t v23 = sub_B27E0();
  id v24 = [v0 title];
  id v25 = [v24 spokenPhrase];

  sub_B2F50();
  sub_B27D0();
  swift_bridgeObjectRelease();
  sub_B2410();
  swift_allocObject();
  sub_B2400();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, enum case for UsoEntity_commonNotebook_NotebookItemType.DefinedValues.commonNotebook_NotebookItemType_Reminder(_:), v17);
  sub_B23F0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v17);
  swift_retain();
  uint64_t v58 = v23;
  sub_B2790();
  swift_release();
  id v26 = [v1 createdDateComponents];
  if (!v26)
  {
    uint64_t v29 = v56;
    uint64_t v31 = v8;
    sub_AA40(v56, 1, 1, v8);
    uint64_t v28 = v55;
    uint64_t v33 = v57;
    goto LABEL_7;
  }
  id v27 = v26;
  sub_B15A0();

  uint64_t v28 = v55;
  uint64_t v29 = v56;
  uint64_t v30 = *(void (**)(void))(v55 + 32);
  sub_69840();
  v30();
  sub_AA40(v29, 0, 1, v8);
  uint64_t v31 = v8;
  int v32 = sub_C844(v29, 1, v8);
  uint64_t v33 = v57;
  if (v32 == 1)
  {
LABEL_7:
    sub_69790(v29);
    goto LABEL_8;
  }
  char v34 = v52;
  sub_69840();
  v30();
  if (sub_6A8E4())
  {
    sub_B27B0();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v31);
LABEL_8:
  uint64_t v35 = (uint64_t)v54;
  id v36 = [v1 modifiedDateComponents];
  if (!v36)
  {
    uint64_t v39 = v31;
    sub_AA40(v35, 1, 1, v31);
    goto LABEL_14;
  }
  uint64_t v37 = v36;
  sub_B15A0();

  Swift::String v38 = *(void (**)(void))(v28 + 32);
  uint64_t v39 = v31;
  sub_69840();
  v38();
  sub_AA40(v35, 0, 1, v31);
  if (sub_C844(v35, 1, v31) == 1)
  {
LABEL_14:
    sub_69790(v35);
    goto LABEL_15;
  }
  uint64_t v40 = v53;
  sub_69840();
  v38();
  if (sub_6A8E4())
  {
    sub_B27C0();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v40, v39);
LABEL_15:
  id v41 = [v1 temporalEventTrigger];
  if (!v41)
  {
LABEL_23:
    swift_release();
    return v58;
  }
  uint64_t v42 = v41;
  id v43 = [v41 dateComponentsRange];
  id v44 = [v43 startDateComponents];

  if (!v44)
  {
    sub_AA40(v33, 1, 1, v39);
    goto LABEL_21;
  }
  sub_B15A0();

  uint64_t v45 = *(void (**)(void))(v28 + 32);
  sub_69840();
  v45();
  sub_AA40(v33, 0, 1, v39);
  if (sub_C844(v33, 1, v39) == 1)
  {
LABEL_21:
    swift_release();

    sub_69790(v33);
    return v58;
  }
  sub_69840();
  v45();
  if (!sub_6A8E4())
  {
    uint64_t v48 = sub_6984C();
    v49(v48);

    goto LABEL_23;
  }
  sub_B2780();
  swift_allocObject();
  sub_B2770();
  swift_retain();
  sub_B2760();
  swift_release();
  swift_retain();
  sub_B27A0();
  swift_release();
  swift_release();
  swift_release_n();

  uint64_t v46 = sub_6984C();
  v47(v46);
  return v58;
}

uint64_t sub_69790(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E9FA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_697F0()
{
  return sub_54FE8();
}

uint64_t sub_69814@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = INTask.entityBuilder.getter();
  *a1 = result;
  return result;
}

uint64_t sub_6984C()
{
  return v0;
}

uint64_t getEnumTagSinglePayload for CommonSpecs(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for CommonSpecs(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x699B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonSpecs()
{
  return &type metadata for CommonSpecs;
}

unsigned char *storeEnumTagSinglePayload for SupportedFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x69ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SupportedFeatures()
{
  return &type metadata for SupportedFeatures;
}

unint64_t sub_69AF8()
{
  unint64_t result = qword_EACA0;
  if (!qword_EACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EACA0);
  }
  return result;
}

BOOL sub_69B44(char a1, char a2)
{
  return qword_C14B0[a1] < qword_C14B0[a2];
}

uint64_t sub_69B68(char a1)
{
  uint64_t result = 0x7261646E656C6163;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7265646E696D6572;
      break;
    case 2:
      uint64_t result = 0x72656874616577;
      break;
    case 3:
      uint64_t result = 1936744813;
      break;
    case 4:
      uint64_t result = 0x74736163646F70;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_69C14(char a1, char a2)
{
  return qword_C14B0[a1] >= qword_C14B0[a2];
}

uint64_t sub_69C38(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBC58;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

uint64_t sub_69C84(char a1)
{
  uint64_t result = 0x676E697465657267;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x676E696E726177;
      break;
    case 2:
      uint64_t result = 0x6973756C636E6F63;
      break;
    case 3:
      uint64_t result = 1702060386;
      break;
    case 4:
      uint64_t result = 0x6C616974696E69;
      break;
    case 5:
      uint64_t result = 0x6F5474706D6F7270;
      break;
    case 6:
      uint64_t result = 0x766F6D6552646461;
      break;
    case 7:
      uint64_t result = 0x6F6C466472617567;
      break;
    case 8:
      uint64_t result = 0x656E696C66666FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_69DBC(unsigned __int8 *a1, char *a2)
{
  return sub_5D5E0(*a1, *a2);
}

Swift::Int sub_69DC8()
{
  return sub_7F320(*v0);
}

uint64_t sub_69DD0()
{
  return sub_7FE10();
}

Swift::Int sub_69DD8(uint64_t a1)
{
  return sub_80630(a1, *v1);
}

uint64_t sub_69DE0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_69C38(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_69E10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_69C84(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_69E3C()
{
  return sub_69C84(*v0);
}

uint64_t sub_69E44(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBD50;
  v6._object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

Swift::Int sub_69E90()
{
  return sub_7F338(*v0);
}

uint64_t sub_69E98()
{
  return sub_7F7C8();
}

Swift::Int sub_69EA0(uint64_t a1)
{
  return sub_80824(a1, *v1);
}

uint64_t sub_69EA8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_69E44(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_69ED8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_69B68(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_69F04()
{
  return sub_69B68(*v0);
}

uint64_t sub_69F0C()
{
  return sub_B3070();
}

uint64_t sub_69F6C()
{
  return sub_B3060();
}

uint64_t sub_69FBC()
{
  return sub_5CD04();
}

BOOL sub_69FC8(char *a1, char *a2)
{
  return sub_69B44(*a1, *a2);
}

BOOL sub_69FD4(char *a1, char *a2)
{
  return sub_69FE0(*a1, *a2);
}

BOOL sub_69FE0(char a1, char a2)
{
  return qword_C14B0[a2] >= qword_C14B0[a1];
}

BOOL sub_6A004(char *a1, char *a2)
{
  return sub_69C14(*a1, *a2);
}

BOOL sub_6A010(char *a1, char *a2)
{
  return sub_6A0B8(*a1, *a2);
}

unint64_t sub_6A020()
{
  unint64_t result = qword_EACA8;
  if (!qword_EACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EACA8);
  }
  return result;
}

unint64_t sub_6A06C()
{
  unint64_t result = qword_EACB0;
  if (!qword_EACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EACB0);
  }
  return result;
}

BOOL sub_6A0B8(char a1, char a2)
{
  return qword_C14B0[a2] < qword_C14B0[a1];
}

id sub_6A0DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_B32B0();
  sub_7870();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_7A0C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_B32A0();
  __chkstk_darwin(v9);
  sub_7A0C();
  uint64_t v10 = sub_B2E10();
  __chkstk_darwin(v10 - 8);
  sub_7A0C();
  sub_3C478();
  sub_B2DC0();
  sub_6A544();
  sub_7424(&qword_EAD68);
  sub_6A594();
  sub_B3440();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  uint64_t v11 = (void *)sub_B32E0();
  id v12 = objc_allocWithZone((Class)AFNotifyObserver);
  id result = sub_6A5E8(0xD000000000000021, 0x80000000000B93D0, 1, v11, 0);
  if (result)
  {
    *(void *)(v1 + 16) = result;
    return (id)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_6A2EC()
{
  uint64_t v1 = sub_B2D30();
  sub_7870();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_7A0C();
  uint64_t v7 = v6 - v5;
  id v8 = [*(id *)(v0 + 16) state];
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_B378(v1, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v9, v1);
  sub_B34C0(25);
  swift_bridgeObjectRelease();
  BOOL v10 = v8 == 0;
  BOOL v11 = v8 == 0;
  if (v10) {
    v12._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v12._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v10) {
    uint64_t v13 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v13 = (void *)0xE500000000000000;
  }
  v12._object = v13;
  sub_B3020(v12);
  swift_bridgeObjectRelease();
  sub_8C5B4(0xD000000000000017, 0x80000000000B9430, 0xD00000000000002ELL, 0x80000000000B9450, 0x746E656C69537369, 0xEE00292865646F4DLL);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v11;
}

uint64_t sub_6A4C0()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for ModeInfoProvider()
{
  return self;
}

BOOL sub_6A51C()
{
  return sub_6A2EC();
}

unint64_t sub_6A544()
{
  unint64_t result = qword_EAD60;
  if (!qword_EAD60)
  {
    sub_B32A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EAD60);
  }
  return result;
}

unint64_t sub_6A594()
{
  unint64_t result = qword_EAD70;
  if (!qword_EAD70)
  {
    sub_20D6C(&qword_EAD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EAD70);
  }
  return result;
}

id sub_6A5E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (a2)
  {
    NSString v10 = sub_B2F20();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v11 = [v6 initWithName:v10 options:a3 queue:a4 delegate:a5];

  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_6A67C()
{
  uint64_t v19 = sub_B1650();
  sub_7870();
  uint64_t v1 = v0;
  __chkstk_darwin(v2);
  sub_7A0C();
  uint64_t v5 = v4 - v3;
  uint64_t v18 = sub_B1950();
  sub_7870();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_7A0C();
  uint64_t v11 = v10 - v9;
  sub_B1920();
  sub_7424(&qword_EAD78);
  sub_B1930();
  sub_7870();
  uint64_t v13 = v12;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_C1550;
  uint64_t v15 = *(void (**)(void))(v13 + 104);
  sub_6B8EC();
  v15();
  sub_6B8EC();
  v15();
  sub_6B8EC();
  v15();
  sub_6B8EC();
  v15();
  sub_6B8EC();
  v15();
  sub_6B8EC();
  v15();
  sub_6B8EC();
  v15();
  sub_6AD94(v14);
  sub_B18C0();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_6A8E4();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v5, v19);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v18);
  return v16;
}

uint64_t sub_6A8E4()
{
  sub_B17F0();
  sub_7870();
  uint64_t v22 = v1;
  uint64_t v23 = v0;
  __chkstk_darwin(v0);
  sub_7A0C();
  uint64_t v21 = v3 - v2;
  uint64_t v4 = sub_7424(&qword_E9F88);
  __chkstk_darwin(v4 - 8);
  sub_7A0C();
  uint64_t v7 = v6 - v5;
  sub_B2680();
  sub_5BCC();
  sub_B2670();
  uint64_t v8 = sub_B15E0();
  sub_6B960(v8, v9);
  sub_B2660();
  sub_6B8FC();
  sub_B2670();
  sub_B15F0();
  sub_B2660();
  sub_B2740();
  sub_5BCC();
  sub_B2730();
  swift_retain();
  sub_B2720();
  swift_release();
  sub_6B8FC();
  sub_B2670();
  sub_B15B0();
  sub_B2660();
  sub_B25E0();
  sub_5BCC();
  sub_B25D0();
  swift_retain();
  sub_B25C0();
  swift_release();
  swift_retain();
  sub_B25B0();
  swift_release();
  swift_retain();
  sub_B25A0();
  swift_release();
  sub_6B8FC();
  sub_B2670();
  uint64_t v10 = sub_B15D0();
  sub_6B960(v10, v11);
  sub_B2660();
  sub_6B8FC();
  sub_B2670();
  uint64_t v12 = sub_B1600();
  sub_6B960(v12, v13);
  sub_B2660();
  sub_6B8FC();
  sub_B2670();
  uint64_t v14 = sub_B1610();
  sub_6B960(v14, v15);
  sub_B2660();
  sub_B2700();
  sub_5BCC();
  sub_B26F0();
  sub_B1640();
  uint64_t v16 = sub_B1990();
  if (sub_C844(v7, 1, v16) == 1)
  {
    sub_6B88C(v7);
LABEL_4:
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_B17E0();
  sub_B1960();
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v7, v16);
  if (!v18) {
    goto LABEL_4;
  }
LABEL_5:
  sub_B3040();
  sub_B26E0();
  swift_bridgeObjectRelease();
  sub_B2640();
  sub_5BCC();
  sub_B2630();
  swift_retain();
  sub_B2600();
  swift_release();
  swift_retain();
  sub_B2610();
  swift_release();
  swift_retain();
  sub_B2620();
  swift_release();
  swift_retain();
  sub_B25F0();
  swift_release();
  sub_B26D0();
  sub_5BCC();
  uint64_t v19 = sub_B26C0();
  swift_retain();
  sub_B26B0();
  swift_release();
  swift_retain();
  sub_B26A0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  return v19;
}

uint64_t sub_6AD94(uint64_t a1)
{
  uint64_t v2 = sub_B1930();
  sub_7870();
  uint64_t v32 = v3;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v36 = (char *)&v27 - v8;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_7424(&qword_EAD80);
  uint64_t result = sub_6B918();
  uint64_t v10 = (unsigned char *)result;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  unint64_t v11 = 0;
  uint64_t v30 = a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v34 = v32 + 16;
  uint64_t v35 = result + 56;
  uint64_t v12 = (void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v28 = a1;
  uint64_t v29 = (uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32);
  while (v11 < *(void *)(a1 + 16))
  {
    uint64_t v13 = *(void *)(v32 + 72);
    uint64_t v14 = *(void (**)(void))(v32 + 16);
    sub_6B94C();
    v14();
    sub_6B04C(&qword_EAD88);
    uint64_t v15 = sub_B2EC0() & ~(-1 << v10[32]);
    sub_6B934();
    if ((v18 & v17) != 0)
    {
      unint64_t v33 = v11;
      uint64_t v20 = ~v19;
      while (1)
      {
        sub_6B94C();
        v14();
        sub_6B04C(&qword_EAD90);
        char v21 = sub_B2F10();
        uint64_t v22 = *v12;
        (*v12)(v7, v2);
        if (v21) {
          break;
        }
        uint64_t v15 = (v15 + 1) & v20;
        sub_6B934();
        if ((v17 & v18) == 0)
        {
          a1 = v28;
          unint64_t v11 = v33;
          goto LABEL_10;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v36, v2);
      a1 = v28;
      unint64_t v11 = v33;
    }
    else
    {
LABEL_10:
      uint64_t v23 = v36;
      *(void *)(v35 + 8 * v16) = v18 | v17;
      uint64_t result = (*v29)(*((void *)v10 + 6) + v15 * v13, v23, v2);
      uint64_t v24 = *((void *)v10 + 2);
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_18;
      }
      *((void *)v10 + 2) = v26;
    }
    if (++v11 == v31) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_6B04C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_B1930();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_6B090(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_7424(&qword_EADA0);
    uint64_t v2 = sub_6B918();
    uint64_t v3 = (unsigned char *)v2;
    uint64_t v31 = *(void *)(v1 + 16);
    if (v31)
    {
      unint64_t v4 = 0;
      uint64_t v5 = v2 + 56;
      uint64_t v29 = v1;
      uint64_t v30 = v1 + 32;
      do
      {
        if (v4 >= *(void *)(v1 + 16))
        {
          __break(1u);
LABEL_72:
          __break(1u);
          JUMPOUT(0x6B67CLL);
        }
        uint64_t v6 = *(unsigned __int8 *)(v30 + v4);
        sub_B38B0();
        sub_19008(v6);
        sub_B2FF0();
        swift_bridgeObjectRelease();
        Swift::Int v7 = sub_B38E0();
        uint64_t v8 = ~(-1 << v3[32]);
        unint64_t v9 = v7 & v8;
        unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
        uint64_t v11 = *(void *)(v5 + 8 * v10);
        uint64_t v12 = 1 << (v7 & v8);
        if ((v12 & v11) != 0)
        {
          while (1)
          {
            unint64_t v13 = 0xE900000000000065;
            unint64_t v14 = 0x6E61636972727568;
            switch(*(unsigned char *)(*((void *)v3 + 6) + v9))
            {
              case 1:
                unint64_t v13 = 0xE700000000000000;
                unint64_t v14 = 0x6F64616E726F74;
                break;
              case 2:
                unint64_t v14 = 0x6C616369706F7274;
                unint64_t v13 = 0xED00006D726F7453;
                break;
              case 3:
                unint64_t v13 = 0xE800000000000000;
                unint64_t v14 = 0x6472617A7A696C62;
                break;
              case 4:
                unint64_t v13 = 0xE400000000000000;
                unint64_t v14 = 1818845544;
                break;
              case 5:
                unint64_t v14 = 0x737265646E756874;
                uint64_t v15 = 1836216180;
                goto LABEL_31;
              case 6:
                unint64_t v13 = 0xE500000000000000;
                unint64_t v14 = 0x7465656C73;
                break;
              case 7:
                unint64_t v13 = 0xE500000000000000;
                uint64_t v16 = 2003791475;
                goto LABEL_20;
              case 8:
                unint64_t v14 = 0x53676E69776F6C62;
                uint64_t v17 = 7827310;
                goto LABEL_28;
              case 9:
                unint64_t v13 = 0xE500000000000000;
                uint64_t v16 = 1852399986;
                goto LABEL_20;
              case 0xA:
                unint64_t v13 = 0xE500000000000000;
                uint64_t v16 = 1802464627;
                goto LABEL_20;
              case 0xB:
                unint64_t v13 = 0xE400000000000000;
                unint64_t v14 = 1953723748;
                break;
              case 0xC:
                unint64_t v13 = 0xE500000000000000;
                uint64_t v16 = 1684957559;
                goto LABEL_20;
              case 0xD:
                unint64_t v13 = 0xE500000000000000;
                uint64_t v16 = 1734831974;
LABEL_20:
                unint64_t v14 = v16 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
                break;
              case 0xE:
                unint64_t v13 = 0xE400000000000000;
                unint64_t v14 = 1702519144;
                break;
              case 0xF:
                unint64_t v13 = 0xE600000000000000;
                unint64_t v14 = 0x7964756F6C63;
                break;
              case 0x10:
                unint64_t v14 = 0x6C43796C74726170;
                uint64_t v15 = 2036626799;
                goto LABEL_31;
              case 0x11:
                unint64_t v13 = 0xE500000000000000;
                unint64_t v14 = 0x7261656C63;
                break;
              case 0x12:
                unint64_t v13 = 0xE400000000000000;
                unint64_t v14 = 1684828003;
                break;
              case 0x13:
                unint64_t v13 = 0xE300000000000000;
                unint64_t v14 = 7630696;
                break;
              case 0x14:
                unint64_t v14 = 0x6F6C43646578696DLL;
                uint64_t v17 = 7955573;
LABEL_28:
                unint64_t v13 = v17 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                break;
              case 0x15:
                unint64_t v14 = 0x656C43646578696DLL;
                unint64_t v13 = 0xEA00000000007261;
                break;
              case 0x16:
                unint64_t v14 = 0x6C69617641746F6ELL;
                uint64_t v15 = 1701601889;
LABEL_31:
                unint64_t v13 = v15 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                break;
              default:
                break;
            }
            unint64_t v18 = 0x6E61636972727568;
            unint64_t v19 = 0xE900000000000065;
            switch(v6)
            {
              case 1:
                unint64_t v19 = 0xE700000000000000;
                unint64_t v18 = 0x6F64616E726F74;
                break;
              case 2:
                unint64_t v18 = 0x6C616369706F7274;
                unint64_t v19 = 0xED00006D726F7453;
                break;
              case 3:
                unint64_t v19 = 0xE800000000000000;
                unint64_t v18 = 0x6472617A7A696C62;
                break;
              case 4:
                unint64_t v19 = 0xE400000000000000;
                unint64_t v18 = 1818845544;
                break;
              case 5:
                unint64_t v18 = 0x737265646E756874;
                uint64_t v20 = 1836216180;
                goto LABEL_57;
              case 6:
                unint64_t v19 = 0xE500000000000000;
                unint64_t v18 = 0x7465656C73;
                break;
              case 7:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v21 = 2003791475;
                goto LABEL_46;
              case 8:
                unint64_t v18 = 0x53676E69776F6C62;
                uint64_t v22 = 7827310;
                goto LABEL_54;
              case 9:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v21 = 1852399986;
                goto LABEL_46;
              case 10:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v21 = 1802464627;
                goto LABEL_46;
              case 11:
                unint64_t v19 = 0xE400000000000000;
                unint64_t v18 = 1953723748;
                break;
              case 12:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v21 = 1684957559;
                goto LABEL_46;
              case 13:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v21 = 1734831974;
LABEL_46:
                unint64_t v18 = v21 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
                break;
              case 14:
                unint64_t v19 = 0xE400000000000000;
                unint64_t v18 = 1702519144;
                break;
              case 15:
                unint64_t v19 = 0xE600000000000000;
                unint64_t v18 = 0x7964756F6C63;
                break;
              case 16:
                unint64_t v18 = 0x6C43796C74726170;
                uint64_t v20 = 2036626799;
                goto LABEL_57;
              case 17:
                unint64_t v19 = 0xE500000000000000;
                unint64_t v18 = 0x7261656C63;
                break;
              case 18:
                unint64_t v19 = 0xE400000000000000;
                unint64_t v18 = 1684828003;
                break;
              case 19:
                unint64_t v19 = 0xE300000000000000;
                unint64_t v18 = 7630696;
                break;
              case 20:
                unint64_t v18 = 0x6F6C43646578696DLL;
                uint64_t v22 = 7955573;
LABEL_54:
                unint64_t v19 = v22 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                break;
              case 21:
                unint64_t v18 = 0x656C43646578696DLL;
                unint64_t v19 = 0xEA00000000007261;
                break;
              case 22:
                unint64_t v18 = 0x6C69617641746F6ELL;
                uint64_t v20 = 1701601889;
LABEL_57:
                unint64_t v19 = v20 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                break;
              default:
                break;
            }
            if (v14 == v18 && v13 == v19) {
              break;
            }
            char v24 = sub_B37E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v24) {
              goto LABEL_67;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_64;
            }
          }
          swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_64:
          *(void *)(v5 + 8 * v10) = v12 | v11;
          *(unsigned char *)(*((void *)v3 + 6) + v9) = v6;
          uint64_t v25 = *((void *)v3 + 2);
          BOOL v26 = __OFADD__(v25, 1);
          uint64_t v27 = v25 + 1;
          if (v26) {
            goto LABEL_72;
          }
          *((void *)v3 + 2) = v27;
        }
LABEL_67:
        ++v4;
        uint64_t v1 = v29;
      }
      while (v4 != v31);
    }
  }
  else
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_6B734(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_7424(&qword_EAD98);
  uint64_t result = sub_6B918();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  while (v5 < *(void *)(a1 + 16))
  {
    Swift::UInt32 v7 = *(_DWORD *)(a1 + 32 + 4 * v5);
    sub_B38B0();
    sub_B38D0(v7);
    uint64_t result = sub_B38E0();
    uint64_t v8 = -1 << v3[32];
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
    uint64_t v12 = 1 << v9;
    uint64_t v13 = *((void *)v3 + 6);
    if (((1 << v9) & v11) != 0)
    {
      if (*(_DWORD *)(v13 + 4 * v9) == v7) {
        goto LABEL_13;
      }
      uint64_t v14 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v14;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          break;
        }
        if (*(_DWORD *)(v13 + 4 * v9) == v7) {
          goto LABEL_13;
        }
      }
    }
    *(void *)(v6 + 8 * v10) = v12 | v11;
    *(_DWORD *)(v13 + 4 * v9) = v7;
    uint64_t v15 = *((void *)v3 + 2);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_18;
    }
    *((void *)v3 + 2) = v17;
LABEL_13:
    if (++v5 == v4) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_6B88C(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_E9F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6B8FC()
{
  return swift_allocObject();
}

uint64_t sub_6B918()
{
  return static _SetStorage.allocate(capacity:)(v0);
}

uint64_t sub_6B960(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  return result;
}

uint64_t sub_6B96C(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 56) = a2;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_6B994, 0, 0);
}

uint64_t sub_6B994()
{
  char v1 = *(unsigned char *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_7424(&qword_E7D20);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 40) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_C1560;
  strcpy((char *)(v3 + 32), "transportType");
  *(_WORD *)(v3 + 46) = -4864;
  int v4 = *(_DWORD *)(v2 + 24);
  *(double *)(v3 + 48) = (double)v4;
  *(void *)(v3 + 72) = &type metadata for Double;
  strcpy((char *)(v3 + 80), "suggestionType");
  *(unsigned char *)(v3 + 95) = -18;
  *(double *)(v3 + 96) = (double)*(uint64_t *)(v2 + 48);
  *(void *)(v3 + 120) = &type metadata for Double;
  *(void *)(v3 + 128) = 6386789;
  *(void *)(v3 + 136) = 0xE300000000000000;
  uint64_t v5 = sub_B2B90();
  *(void *)(v3 + 144) = sub_9B250();
  *(void *)(v3 + 168) = v5;
  *(void *)(v3 + 176) = 0x6E6F697461636F6CLL;
  *(void *)(v3 + 184) = 0xE800000000000000;
  *(void *)(v3 + 216) = sub_B2C40();
  sub_7590((uint64_t *)(v3 + 192));
  swift_bridgeObjectRetain();
  sub_B2C20();
  strcpy((char *)(v3 + 224), "hasETAUpdated");
  *(_WORD *)(v3 + 238) = -4864;
  *(void *)(v3 + 264) = &type metadata for Bool;
  *(unsigned char *)(v3 + 240) = v1;
  if (v4 == 1)
  {
    uint64_t v6 = qword_E6DD0;
    Swift::UInt32 v7 = &qword_F54F8;
  }
  else if (v4)
  {
    uint64_t v6 = qword_E6DE8;
    Swift::UInt32 v7 = &qword_F5558;
  }
  else
  {
    uint64_t v6 = qword_E6DC8;
    Swift::UInt32 v7 = &qword_F54D8;
  }
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 32);
  sub_84ED0(1, *v7, v7[1], *((unsigned char *)v7 + 16), (void *)v7[3]);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_EB958 + dword_EB958);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v10;
  *unint64_t v10 = v0;
  v10[1] = sub_6BC54;
  uint64_t v11 = *(void *)(v0 + 24);
  return v13(v3, v11, v9);
}

uint64_t sub_6BC54(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_6BD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21MapsTemplatingService_logger;
  uint64_t v6 = qword_E6D80;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_B2D30();
  uint64_t v8 = sub_B378(v7, (uint64_t)qword_F53D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v2 + v5, v8, v7);
  swift_release();
  *(void *)(v2 + 16) = a2;
  sub_74F8(a1);
  return v2;
}

uint64_t sub_6BE48()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21MapsTemplatingService_logger;
  uint64_t v2 = sub_B2D30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_6BEB4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21MapsTemplatingService_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_6BF5C()
{
  return type metadata accessor for MapsTemplatingService();
}

uint64_t type metadata accessor for MapsTemplatingService()
{
  uint64_t result = qword_EADD8;
  if (!qword_EADD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_6BFAC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for CalendarEvent(0);
  uint64_t v8 = sub_FC60(v7);
  uint64_t v26 = v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v25 = (uint64_t)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v22 - v13;
  uint64_t v15 = &_swiftEmptyArrayStorage;
  uint64_t v27 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v24 = *(void *)(a3 + 16);
  if (v24)
  {
    unint64_t v16 = 0;
    uint64_t v17 = (unint64_t *)&_swiftEmptyArrayStorage;
    v22[1] = a2;
    uint64_t v23 = a3;
    v22[0] = a1;
    while (v16 < *(void *)(a3 + 16))
    {
      unint64_t v18 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v15 = *(void **)(v26 + 72);
      sub_12E38(a3 + v18 + (void)v15 * v16, (uint64_t)v14);
      char v19 = a1(v14);
      if (v3)
      {
        sub_70C94((uint64_t)v14);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v15;
      }
      if (v19)
      {
        sub_70CF0((uint64_t)v14, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_85A60(0, v17[2] + 1, 1);
        }
        uint64_t v17 = v27;
        unint64_t v21 = v27[2];
        unint64_t v20 = v27[3];
        if (v21 >= v20 >> 1)
        {
          sub_85A60(v20 > 1, v21 + 1, 1);
          uint64_t v17 = v27;
        }
        v17[2] = v21 + 1;
        uint64_t result = sub_70CF0(v25, (uint64_t)v17 + v18 + v21 * (void)v15);
        a3 = v23;
        a1 = (uint64_t (*)(char *))v22[0];
      }
      else
      {
        uint64_t result = sub_70C94((uint64_t)v14);
      }
      if (v24 == ++v16)
      {
        uint64_t v15 = v27;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  return result;
}

void *sub_6C1BC(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  return sub_6C1D4(a1, a2, a3);
}

void *sub_6C1D4(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  char v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)sub_B34F0();
LABEL_7:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_B3530();
          sub_B3560();
          unint64_t v4 = v15;
          sub_B3570();
          sub_B3540();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_B3620();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_6C380()
{
  sub_7FDC();
  v0[16] = v1;
  v0[17] = v2;
  v0[14] = v3;
  v0[15] = v4;
  v0[12] = v5;
  v0[13] = v6;
  uint64_t v7 = sub_B17F0();
  v0[18] = v7;
  sub_FC60(v7);
  v0[19] = v8;
  v0[20] = *(void *)(v9 + 64);
  v0[21] = swift_task_alloc();
  v0[22] = sub_7424(&qword_E9AE0);
  v0[23] = swift_task_alloc();
  uint64_t v10 = sub_B2D00();
  v0[24] = v10;
  sub_FC60(v10);
  v0[25] = v11;
  v0[26] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v12, v13, v14);
}

uint64_t sub_6C490()
{
  if (qword_E6C78 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 136);
  uint64_t v17 = *(void *)(v0 + 160);
  uint64_t v15 = *(void *)(v0 + 128);
  uint64_t v20 = *(void *)(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 112);
  uint64_t v13 = *(void *)(v0 + 104);
  id v3 = (id)qword_EAEA8;
  sub_B2CE0();
  sub_B3300();
  sub_B2CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v13, v14);
  sub_A8B4(v15, v0 + 16);
  sub_A8B4(v16, v0 + 56);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (v17 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 216) = v7;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v7 + v4, v1, v14);
  uint64_t v8 = (void *)(v7 + v5);
  *uint64_t v8 = v18;
  v8[1] = v20;
  sub_B3B0((long long *)(v0 + 16), v7 + v6);
  sub_B3B0((long long *)(v0 + 56), v7 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v9;
  v9[2] = 0x4018000000000000;
  void v9[3] = &unk_EAEC0;
  void v9[4] = v7;
  v9[5] = 0xD000000000000036;
  void v9[6] = 0x80000000000B94C0;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_6C744;
  uint64_t v11 = *(void *)(v0 + 184);
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v11);
}

uint64_t sub_6C744()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_2B6A4();
  void *v6 = v5;
  *(void *)(v3 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_6C834()
{
  sub_7FDC();
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[12];
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  sub_46830(v1, v2, &qword_E9AE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

uint64_t sub_6C8D4()
{
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v0 + 248) = 3;
  sub_70AAC();
  uint64_t v1 = sub_B3860();
  sub_70EB0(v1, v2);
  swift_bridgeObjectRelease();
  if (qword_E6C70 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 192);
  unint64_t v6 = *(uint64_t **)(v0 + 96);
  uint64_t v7 = sub_B2D30();
  sub_B378(v7, (uint64_t)qword_EAE78);
  sub_ABC4();
  sub_52848();
  sub_8C2F0(0xD000000000000026, v8, v9, v10, v11, v12);
  uint64_t v13 = swift_allocError();
  *uint64_t v14 = 3;
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t *v6 = v13;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v15();
}

id sub_6CAB4(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)SAReminderSiriKitInteraction) init];
  id v5 = [objc_allocWithZone((Class)SAIntentGroupProtobufMessage) init];
  uint64_t v6 = sub_706AC([a1 backingStore]);
  if (v7 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v9 = v6;
    unint64_t v10 = v7;
    Class isa = sub_B1710().super.isa;
    sub_70728(v9, v10);
  }
  [v5 setData:isa];

  id v11 = [a1 typeName];
  uint64_t v12 = sub_B2F50();
  uint64_t v14 = v13;

  sub_188A4(v12, v14, v5, (SEL *)&selRef_setTypeName_);
  id v15 = [objc_allocWithZone((Class)SAIntentGroupProtobufMessage) init];
  id result = [a2 backingStore];
  if (result)
  {
    uint64_t v17 = sub_706AC(result);
    if (v18 >> 60 == 15)
    {
      Class v19 = 0;
    }
    else
    {
      uint64_t v20 = v17;
      unint64_t v21 = v18;
      Class v19 = sub_B1710().super.isa;
      sub_70728(v20, v21);
    }
    [v15 setData:v19];

    sub_5618(a2, (SEL *)&selRef__payloadResponseTypeName);
    if (v22)
    {
      NSString v23 = sub_B2F20();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v23 = 0;
    }
    [v15 setTypeName:v23];

    [v4 setIntent:v5];
    [v4 setIntentResponse:v15];
    sub_7424(&qword_E7F20);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_BEC80;
    *(void *)(v24 + 32) = v4;
    uint64_t v25 = v24;
    sub_B30C0();

    return (id)v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_6CD0C()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_EAE78);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_EAE78);
  if (qword_E6D88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F53F0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_6CDD4()
{
  if (qword_E6D08 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_F5238;
  xmmword_EAE90 = xmmword_F5220;
  byte_EAEA0 = byte_F5230;
  qword_EAEA8 = qword_F5238;

  return v0;
}

uint64_t sub_6CE50()
{
  uint64_t result = sub_86264((uint64_t)&off_DB420);
  qword_F50D8 = result;
  return result;
}

uint64_t sub_6CE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_70EAC;
  return sub_6CF48(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_6CF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a3;
  v6[5] = a4;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  sub_7424(&qword_E9F88);
  v6[6] = swift_task_alloc();
  sub_7424(&qword_E9FA0);
  v6[7] = swift_task_alloc();
  sub_7424(&qword_E7D38);
  v6[8] = swift_task_alloc();
  v6[9] = swift_task_alloc();
  uint64_t v12 = sub_B17F0();
  v6[10] = v12;
  v6[11] = *(void *)(v12 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  uint64_t v13 = (void *)swift_task_alloc();
  v6[14] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_6D120;
  return sub_6D698(a2, a3, a4, a5, a6);
}

uint64_t sub_6D120()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 120) = v3;
  *(unsigned char *)(v1 + 128) = v4;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_6D1F4()
{
  unint64_t v1 = *(void *)(v0 + 120);
  if (*(unsigned char *)(v0 + 128))
  {
    sub_70AAC();
    id v27 = (id)swift_allocError();
    *uint64_t v30 = v1;
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 24);
  unint64_t v6 = sub_6E334(v5, *(void *)(v0 + 120));
  sub_57888(v5, v2);
  unint64_t v7 = sub_6E67C(v5, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_B3620();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_6;
    }
    goto LABEL_4;
  }
  if (!*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_4:
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_B3620();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_6;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_E6C70 != -1) {
      swift_once();
    }
    uint64_t v35 = *(void *)(v0 + 120);
    uint64_t v36 = sub_B2D30();
    sub_B378(v36, (uint64_t)qword_EAE78);
    sub_ABC4();
    sub_52848();
    sub_8C308(v37, v38, v39, v40, v41, v42);
    sub_2A760();
    id v27 = (id)swift_allocError();
    *id v43 = 2;
    sub_70C48(v35, 0);
LABEL_10:
    uint64_t v29 = *(void **)(v0 + 16);
    goto LABEL_11;
  }
LABEL_6:
  unint64_t v47 = v6;
  (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 16))(*(void *)(v0 + 96), *(void *)(v0 + 24), *(void *)(v0 + 80));
  id v8 = [objc_allocWithZone((Class)_INPBIntentMetadata) init];
  if (v8)
  {
    sub_B3020(*(Swift::String *)(v0 + 32));
    sub_188A4(0xD000000000000013, 0x80000000000B9560, v8, (SEL *)&selRef_setLaunchId_);
  }
  uint64_t v46 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v44 = *(void *)(v0 + 120);
  uint64_t v45 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v10 = *(void *)(v0 + 72);
  uint64_t v12 = *(void *)(v0 + 48);
  uint64_t v13 = *(unint64_t **)(v0 + 16);
  uint64_t v14 = *(void *)(v0 + 24);
  sub_58114(v14, v10);
  sub_AA40(v10, 0, 1, v9);
  sub_57888(v14, v11);
  uint64_t v15 = sub_70F04();
  uint64_t v16 = sub_70F64(v15);
  sub_AA40(v12, 1, 1, v16);
  id v17 = objc_allocWithZone((Class)INDateComponentsRange);
  uint64_t v18 = sub_70F50();
  sub_6F604(v18, v19, v20, v12);
  sub_3085C(0, &qword_EAEE8);
  uint64_t v21 = sub_70EE8();
  id v26 = sub_72758(v21, v22, v23, v24, v25, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_55E94(v47);
  id v27 = [objc_allocWithZone((Class)INSearchForNotebookItemsIntentResponse) initWithCode:3 userActivity:0];
  sub_70BCC(v7, v27);
  sub_70C48(v44, 0);
  swift_bridgeObjectRelease();
  *uint64_t v13 = v7;
  v13[1] = v47;
  uint64_t v28 = (int *)type metadata accessor for RemindersPreprocessingResult(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))((char *)v13 + v28[6], v46, v9);
  *(unint64_t *)((char *)v13 + v28[7]) = (unint64_t)v26;
  uint64_t v29 = (unint64_t *)((char *)v13 + v28[8]);
LABEL_11:
  *uint64_t v29 = v27;
  sub_7424(&qword_E9AE0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v31();
}

uint64_t sub_6D698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a3;
  v5[10] = a5;
  v5[7] = a1;
  v5[8] = a2;
  uint64_t v6 = sub_B2D30();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  sub_7424(&qword_E9F88);
  v5[15] = swift_task_alloc();
  sub_7424(&qword_E9FA0);
  v5[16] = swift_task_alloc();
  sub_7424(&qword_E7D38);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  uint64_t v7 = sub_B2D00();
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  return _swift_task_switch(sub_6D868, 0, 0);
}

uint64_t sub_6D868()
{
  if (qword_E6C78 != -1) {
    swift_once();
  }
  uint64_t countAndFlagsBits = (void *)v0[5]._countAndFlagsBits;
  id v2 = (id)qword_EAEA8;
  sub_B2CE0();
  sub_B3300();
  sub_B2CD0();
  uint64_t v27 = countAndFlagsBits[4];
  uint64_t v28 = countAndFlagsBits[3];
  sub_7468(countAndFlagsBits, v28);
  id v3 = [objc_allocWithZone((Class)_INPBIntentMetadata) init];
  if (v3)
  {
    sub_B3020(v0[4]);
    sub_188A4(0xD000000000000013, 0x80000000000B9560, v3, (SEL *)&selRef_setLaunchId_);
  }
  uint64_t object = (uint64_t)v0[8]._object;
  uint64_t v4 = v0[9]._countAndFlagsBits;
  uint64_t v6 = (uint64_t)v0[7]._object;
  uint64_t v8 = v0[4]._countAndFlagsBits;
  uint64_t v7 = (uint64_t)v0[4]._object;
  uint64_t v9 = (uint64_t)v0[3]._object;
  sub_58114(v9, v4);
  uint64_t v10 = sub_B17F0();
  sub_AA40(v4, 0, 1, v10);
  sub_57888(v9, object);
  uint64_t v11 = sub_70F04();
  uint64_t v12 = sub_70F64(v11);
  sub_AA40(v6, 1, 1, v12);
  id v13 = objc_allocWithZone((Class)INDateComponentsRange);
  uint64_t v14 = sub_70F50();
  sub_6F604(v14, v15, v16, v6);
  sub_3085C(0, &qword_EAEE8);
  uint64_t v17 = sub_70EE8();
  id v22 = sub_72758(v17, v18, v19, v20, v21, v3);
  sub_3085C(0, &qword_EAEF0);
  swift_bridgeObjectRetain();
  id v23 = sub_72810(v22, v8, v7);
  v0[11]._uint64_t countAndFlagsBits = (uint64_t)v23;
  uint64_t v24 = (void *)swift_task_alloc();
  v0[11]._uint64_t object = v24;
  uint64_t v25 = sub_3085C(0, &qword_EAEF8);
  *uint64_t v24 = v0;
  v24[1] = sub_6DB24;
  return AceServiceInvokerAsync.submit<A>(_:)(v23, v28, v25, v27);
}

uint64_t sub_6DB24()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 192) = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (!v0) {

  }
  sub_AC10();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_6DC10()
{
  id v1 = sub_6E9C8(*(void **)(v0 + 192));
  if (!v1) {
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {

LABEL_10:
    uint64_t v21 = *(void *)(v0 + 168);
    *(unsigned char *)(v0 + 209) = 1;
    sub_70AAC();
    uint64_t v22 = sub_B3860();
    sub_852C8(v21, v22, v23, 0x9000u);
    swift_bridgeObjectRelease();
    if (qword_E6C70 != -1) {
      swift_once();
    }
    id v13 = *(void **)(v0 + 192);
    sub_B378(*(void *)(v0 + 88), (uint64_t)qword_EAE78);
    sub_ABC4();
    sub_70F9C();
    sub_8C2F0(v24, v25, v26, v27, v28, v29);
    goto LABEL_13;
  }
  uint64_t v4 = (void *)v3;
  id v5 = v2;
  uint64_t v6 = sub_70B5C(v4);
  if (!v6)
  {
    *(unsigned char *)(v0 + 210) = 2;
    sub_70AAC();
    uint64_t v35 = sub_B3860();
    sub_70EB0(v35, v36);
    swift_bridgeObjectRelease();
    if (qword_E6C70 != -1) {
      swift_once();
    }
    id v13 = *(void **)(v0 + 192);
    sub_B378(*(void *)(v0 + 88), (uint64_t)qword_EAE78);
    sub_ABC4();
    sub_70F9C();
    sub_8C308(v37, v38, v39, v40, v41, v42);

LABEL_13:
    unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  unint64_t v7 = v6;
  if (qword_E6C70 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 96);
  uint64_t v11 = sub_B378(v10, (uint64_t)qword_EAE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v11, v10);
  sub_B34C0(45);
  swift_bridgeObjectRelease();
  uint64_t v44 = v5;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
  }
  id v13 = *(void **)(v0 + 192);
  uint64_t v43 = *(void *)(v0 + 168);
  uint64_t v14 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v16 = *(void *)(v0 + 96);
  *(void *)(v0 + 48) = v12;
  v46._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v46);
  swift_bridgeObjectRelease();
  v47._uint64_t countAndFlagsBits = 0x65646E696D657220;
  v47._uint64_t object = (void *)0xEB000000002E7372;
  sub_B3020(v47);
  sub_ABC4();
  sub_52848();
  sub_8C308(v17, 0x80000000000B9740, 0xD00000000000002BLL, v18, v19, v20);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  sub_852C8(v43, v12, 0, 0x6000u);

LABEL_14:
  BOOL v30 = *(void *)(v0 + 200) != 0;
  uint64_t v31 = sub_70F3C();
  v32(v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(unint64_t, BOOL))(v0 + 8);
  return v33(v7, v30);
}

uint64_t sub_6E0D8()
{
  if (qword_E6C70 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = sub_B378(v3, (uint64_t)qword_EAE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_B34C0(28);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v18._uint64_t countAndFlagsBits = sub_B3860();
  sub_B3020(v18);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_52848();
  sub_8C2F0(v5, 0x80000000000B9690, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(unsigned char *)(v0 + 208) = 0;
  sub_70AAC();
  uint64_t v10 = sub_B3860();
  sub_70EB0(v10, v11);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  BOOL v12 = *(void *)(v0 + 200) != 0;
  uint64_t v13 = sub_70F3C();
  v14(v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void, BOOL))(v0 + 8);
  return v15(0, v12);
}

uint64_t sub_6E334(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_B2D30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[2] = a1;
  swift_bridgeObjectRetain();
  unint64_t v8 = (unint64_t)sub_6C1D4(sub_70C74, v17, a2);
  unint64_t v9 = v8;
  unint64_t v10 = v8 >> 62;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_B3620();
    swift_bridgeObjectRelease();
    if (!v16) {
      goto LABEL_6;
    }
  }
  else if (!*(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_6;
  }
  if (qword_E6DC0 != -1) {
    swift_once();
  }
  sub_84ED0(1, qword_F54B8, unk_F54C0, byte_F54C8, (void *)qword_F54D0);
LABEL_6:
  if (qword_E6C70 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_B378(v4, (uint64_t)qword_EAE78);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_B34C0(27);
  swift_bridgeObjectRelease();
  uint64_t v18 = 0x20646E756F46;
  unint64_t v19 = 0xE600000000000000;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
  }
  v17[4] = v12;
  v20._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t object = (void *)0x80000000000B9640;
  v21._uint64_t countAndFlagsBits = 0xD000000000000013;
  sub_B3020(v21);
  sub_8C308(v18, v19, 0xD00000000000002BLL, 0x80000000000B9530, 0xD000000000000022, 0x80000000000B9660);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_2D950(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = v13;
  sub_6F864(&v18);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_6E67C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_B2D30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[2] = a1;
  v19[3] = a2;
  swift_bridgeObjectRetain();
  unint64_t v10 = (unint64_t)sub_6C1D4(sub_70C54, v19, a3);
  unint64_t v11 = v10;
  unint64_t v12 = v10 >> 62;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_B3620();
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_6;
    }
  }
  else if (!*(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_6;
  }
  if (qword_E6DB8 != -1) {
    swift_once();
  }
  sub_84ED0(1, qword_F5498, unk_F54A0, byte_F54A8, (void *)qword_F54B0);
LABEL_6:
  if (qword_E6C70 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_B378(v6, (uint64_t)qword_EAE78);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_B34C0(28);
  swift_bridgeObjectRelease();
  uint64_t v20 = 0x20646E756F46;
  unint64_t v21 = 0xE600000000000000;
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
  }
  v19[4] = v14;
  v22._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t object = (void *)0x80000000000B95F0;
  v23._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_B3020(v23);
  sub_8C308(v20, v21, 0xD00000000000002BLL, 0x80000000000B9530, 0xD000000000000025, 0x80000000000B9610);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12)
  {
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_2D950(v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v20 = v15;
  sub_6F864(&v20);
  swift_bridgeObjectRelease();
  return v20;
}

id sub_6E9C8(void *a1)
{
  id v1 = [a1 intentResponse];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_5618(v1, (SEL *)&selRef_typeName);
    if (v3)
    {
      NSString v4 = sub_B2F20();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v4 = 0;
    }
    uint64_t v7 = sub_70AF8(v2);
    if (v8 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      uint64_t v10 = v7;
      unint64_t v11 = v8;
      Class isa = sub_B1710().super.isa;
      sub_70728(v10, v11);
    }
    id v6 = (id)INIntentResponseCreate();
  }
  else
  {
    if (qword_E6C70 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_B2D30();
    sub_B378(v5, (uint64_t)qword_EAE78);
    sub_8C2F0(0xD000000000000059, 0x80000000000B9770, 0xD00000000000002BLL, 0x80000000000B9530, 0xD000000000000029, 0x80000000000B97D0);
    return 0;
  }
  return v6;
}

uint64_t sub_6EB38(id *a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v4 = sub_B1950();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_7424(&qword_E7D38);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = sub_B17F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v32 - v17;
  id v19 = [*a1 temporalEventTrigger];
  if (!v19)
  {
    sub_AA40((uint64_t)v11, 1, 1, v12);
LABEL_7:
    sub_3E4A0((uint64_t)v11);
    char v24 = 0;
    return v24 & 1;
  }
  uint64_t v20 = v19;
  uint64_t v35 = v2;
  id v21 = [v19 dateComponentsRange];

  id v22 = [v21 startDate];
  if (v22)
  {
    sub_B17C0();

    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  sub_AA40((uint64_t)v9, v23, 1, v12);
  sub_46830((uint64_t)v9, (uint64_t)v11, &qword_E7D38);
  if (sub_C844((uint64_t)v11, 1, v12) == 1) {
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  char v25 = sub_589D4();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  if (v25)
  {
    uint64_t v26 = v32;
    sub_B1920();
    char v27 = sub_B18A0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v34);
    char v28 = v27 ^ 1;
  }
  else
  {
    char v28 = 1;
  }
  unint64_t v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v16, v12);
  char v30 = sub_B1760();
  v29(v18, v12);
  char v24 = v30 & v28;
  return v24 & 1;
}

uint64_t sub_6EEC0(id *a1, unsigned char *a2, unsigned char *a3)
{
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v5 = sub_B1950();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v44 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_7424(&qword_E7D38);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v42[-v11];
  uint64_t v13 = sub_B17F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v49 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v48 = &v42[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::String v47 = &v42[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = &v42[-v22];
  __chkstk_darwin(v21);
  char v25 = &v42[-v24];
  id v26 = [*a1 temporalEventTrigger];
  if (!v26)
  {
    sub_AA40((uint64_t)v12, 1, 1, v13);
LABEL_7:
    sub_3E4A0((uint64_t)v12);
    char v31 = 0;
    return v31 & 1;
  }
  char v27 = v26;
  uint64_t v52 = v3;
  id v28 = [v26 dateComponentsRange];

  id v29 = [v28 startDate];
  if (v29)
  {
    sub_B17C0();

    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
  }
  sub_AA40((uint64_t)v10, v30, 1, v13);
  sub_46830((uint64_t)v10, (uint64_t)v12, &qword_E7D38);
  if (sub_C844((uint64_t)v12, 1, v13) == 1) {
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v25, v12, v13);
  char v32 = sub_589D4();
  uint64_t v33 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16);
  v33(v23, v25, v13);
  if (v32)
  {
    uint64_t v34 = v44;
    sub_B1920();
    int v43 = sub_B18A0();
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v34, v46);
  }
  else
  {
    int v43 = 0;
  }
  uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  v35(v23, v13);
  uint64_t v36 = v47;
  v33(v47, v25, v13);
  uint64_t v37 = v48;
  v33(v48, v50, v13);
  unint64_t v38 = v49;
  v33(v49, v51, v13);
  if (v43)
  {
    uint64_t v39 = v38;
    char v31 = 1;
  }
  else
  {
    char v40 = sub_57E58();
    uint64_t v39 = v38;
    char v31 = v40;
  }
  v35(v39, v13);
  v35(v37, v13);
  v35(v36, v13);
  v35(v25, v13);
  return v31 & 1;
}

uint64_t sub_6F358(char a1)
{
  sub_B34C0(17);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0xD000000000000013;
  uint64_t v3 = (void *)0x80000000000B4650;
  switch(a1)
  {
    case 1:
      uint64_t v3 = (void *)0xEF65736E6F707365;
      v2._uint64_t countAndFlagsBits = 0x5264696C61766E69;
      break;
    case 2:
      uint64_t v3 = (void *)0x80000000000B4680;
      v2._uint64_t countAndFlagsBits = 0xD000000000000010;
      break;
    case 3:
      v2._uint64_t countAndFlagsBits = 0xD000000000000016;
      uint64_t v3 = (void *)0x80000000000B46A0;
      break;
    default:
      break;
  }
  v2._uint64_t object = v3;
  sub_B3020(v2);
  swift_bridgeObjectRelease();
  return 0x7265646E696D6552;
}

unint64_t sub_6F484(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5264696C61766E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_6F530(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBDE8;
  v6._uint64_t object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_6F57C(char *a1, char *a2)
{
  return sub_5D2F0(*a1, *a2);
}

Swift::Int sub_6F588()
{
  return sub_7F350(*v0);
}

uint64_t sub_6F590()
{
  return sub_7FC18();
}

Swift::Int sub_6F598(uint64_t a1)
{
  return sub_80730(a1, *v1);
}

uint64_t sub_6F5A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_6F530(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_6F5D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_6F484(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_6F5FC()
{
  return sub_6F358(*v0);
}

id sub_6F604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_B17F0();
  Class isa = 0;
  if (sub_C844(a1, 1, v10) != 1)
  {
    Class isa = sub_B1740().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  }
  if (sub_C844(a2, 1, v10) == 1)
  {
    Class v12 = 0;
  }
  else
  {
    Class v12 = sub_B1740().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a2, v10);
  }
  uint64_t v13 = sub_B1950();
  Class v14 = 0;
  if (sub_C844(a3, 1, v13) != 1)
  {
    Class v14 = sub_B18E0().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a3, v13);
  }
  uint64_t v15 = sub_B1990();
  Class v16 = 0;
  if (sub_C844(a4, 1, v15) != 1)
  {
    Class v16 = sub_B1980().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a4, v15);
  }
  id v17 = [v5 initWithStartDate:isa endDate:v12 onCalendar:v14 inTimeZone:v16];

  return v17;
}

uint64_t sub_6F808()
{
  return 0;
}

uint64_t sub_6F810(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

BOOL sub_6F818(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_6F844(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_6F854(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t sub_6F864(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_30898(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_6F8E0(v6);
  return sub_B3540();
}

void sub_6F8E0(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = sub_B37B0(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        sub_701C4(0, v3, 1, a1);
      }
      return;
    }
    goto LABEL_165;
  }
  Swift::Int v5 = v4;
  uint64_t v6 = sub_2D52C(v3 / 2);
  uint64_t v117 = v7;
  uint64_t v119 = v6;
  uint64_t v112 = a1;
  if (v3 <= 0)
  {
LABEL_129:
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    unint64_t v42 = _swiftEmptyArrayStorage[2];
LABEL_130:
    uint64_t v103 = v9;
    if (v42 < 2)
    {
LABEL_141:
      swift_bridgeObjectRelease();
      if (v3 >= -1) {
        goto LABEL_142;
      }
      goto LABEL_169;
    }
    uint64_t v104 = *v112;
    while (1)
    {
      unint64_t v105 = v42 - 2;
      if (v42 < 2) {
        break;
      }
      if (!v104) {
        goto LABEL_173;
      }
      uint64_t v106 = *(void *)&v103[16 * v105 + 32];
      uint64_t v107 = *(void *)&v103[16 * v42 + 24];
      sub_70338((void **)(v104 + 8 * v106), (id *)(v104 + 8 * *(void *)&v103[16 * v42 + 16]), v104 + 8 * v107, v117);
      if (v1) {
        goto LABEL_127;
      }
      if (v107 < v106) {
        goto LABEL_160;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v103 = sub_2FFE4((uint64_t)v103);
      }
      if (v105 >= *((void *)v103 + 2)) {
        goto LABEL_161;
      }
      Swift::Int v108 = &v103[16 * v105 + 32];
      *(void *)Swift::Int v108 = v106;
      *((void *)v108 + 1) = v107;
      unint64_t v109 = *((void *)v103 + 2);
      if (v42 > v109) {
        goto LABEL_162;
      }
      memmove(&v103[16 * v42 + 16], &v103[16 * v42 + 32], 16 * (v109 - v42));
      *((void *)v103 + 2) = v109 - 1;
      unint64_t v42 = v109 - 1;
      if (v109 <= 2) {
        goto LABEL_141;
      }
    }
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
    return;
  }
  Swift::Int v113 = v5;
  Swift::Int v8 = 0;
  uint64_t v118 = *a1;
  uint64_t v111 = *a1 - 8;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v115 = v3;
  while (1)
  {
    Swift::Int v10 = v8++;
    Swift::Int v116 = v10;
    if (v8 >= v3) {
      goto LABEL_46;
    }
    uint64_t v11 = *(void **)(v118 + 8 * v10);
    id v12 = *(id *)(v118 + 8 * v8);
    id v13 = v11;
    id v14 = [v12 priority];
    if (v14 == [v13 priority])
    {
      if (sub_589D4() & 1) != 0 || (sub_589D4())
      {
        int v15 = sub_589D4();

        int v16 = v15 ^ 1;
      }
      else
      {
        uint64_t v21 = sub_58C84(v13);

        int v16 = v21 == -1;
      }
      Swift::Int v3 = v115;
      Swift::Int v20 = v116 + 2;
      p_ivar_base_size = &BaseFlowSpec.ivar_base_size;
      if (v116 + 2 < v115) {
        goto LABEL_19;
      }
      goto LABEL_36;
    }
    p_ivar_base_size = &BaseFlowSpec.ivar_base_size;
    if ([v12 priority] == (char *)&dword_0 + 2)
    {
      uint64_t v18 = (char *)[v13 priority];

      BOOL v19 = v18 == (unsigned char *)&dword_0 + 2;
      p_ivar_base_size = (_DWORD *)(&BaseFlowSpec + 8);
      int v16 = !v19;
      Swift::Int v3 = v115;
      Swift::Int v20 = v116 + 2;
      if (v116 + 2 < v115) {
        goto LABEL_19;
      }
LABEL_36:
      Swift::Int v8 = v20;
      Swift::Int v10 = v116;
      if (v16)
      {
LABEL_37:
        if (v20 < v10) {
          goto LABEL_168;
        }
        if (v10 < v20)
        {
          uint64_t v33 = (uint64_t *)(v111 + 8 * v20);
          Swift::Int v34 = v20;
          Swift::Int v35 = v10;
          uint64_t v36 = (uint64_t *)(v118 + 8 * v10);
          do
          {
            if (v35 != --v34)
            {
              if (!v118) {
                goto LABEL_172;
              }
              uint64_t v37 = *v36;
              *uint64_t v36 = *v33;
              *uint64_t v33 = v37;
            }
            ++v35;
            --v33;
            ++v36;
          }
          while (v35 < v34);
        }
        Swift::Int v8 = v20;
      }
      goto LABEL_46;
    }

    Swift::Int v3 = v115;
    Swift::Int v20 = v116 + 2;
    if (v116 + 2 < v115)
    {
      int v16 = 0;
LABEL_19:
      Swift::Int v22 = v20;
      while (1)
      {
        Swift::Int v20 = v22;
        uint64_t v23 = *(void **)(v118 + 8 * v8);
        id v24 = *(id *)(v118 + 8 * v22);
        id v25 = v23;
        id v26 = p_ivar_base_size;
        id v27 = objc_msgSend(v24, *((SEL *)p_ivar_base_size + 384));
        if (v27 == [v25 *((SEL *)v26 + 384)])
        {
          if (sub_589D4() & 1) != 0 || (sub_589D4())
          {
            int v28 = sub_589D4();

            int v29 = v28 ^ 1;
          }
          else
          {
            uint64_t v32 = sub_58C84(v25);

            int v29 = v32 == -1;
          }
          Swift::Int v3 = v115;
          p_ivar_base_size = (_DWORD *)(&BaseFlowSpec + 8);
          if ((v16 ^ v29)) {
            goto LABEL_36;
          }
        }
        else
        {
          p_ivar_base_size = v26;
          if ([v24 *((SEL *)v26 + 384)] == (char *)&dword_0 + 2)
          {
            uint64_t v30 = (char *)[v25 *((SEL *)v26 + 384)];

            BOOL v19 = v30 == (unsigned char *)&dword_0 + 2;
            p_ivar_base_size = (_DWORD *)(&BaseFlowSpec + 8);
            int v31 = v19;
            Swift::Int v3 = v115;
            if (((v16 ^ v31) & 1) == 0) {
              goto LABEL_36;
            }
          }
          else
          {

            Swift::Int v3 = v115;
            if (v16)
            {
              Swift::Int v10 = v116;
              goto LABEL_37;
            }
          }
        }
        Swift::Int v22 = v20 + 1;
        Swift::Int v8 = v20;
        if (v20 + 1 >= v3)
        {
          ++v20;
          goto LABEL_36;
        }
      }
    }
    Swift::Int v8 = v116 + 2;
    Swift::Int v10 = v116;
LABEL_46:
    if (v8 >= v3) {
      goto LABEL_55;
    }
    if (__OFSUB__(v8, v10)) {
      goto LABEL_164;
    }
    if (v8 - v10 >= v113) {
      goto LABEL_55;
    }
    if (__OFADD__(v10, v113)) {
      goto LABEL_166;
    }
    if (v10 + v113 >= v3) {
      Swift::Int v38 = v3;
    }
    else {
      Swift::Int v38 = v10 + v113;
    }
    if (v38 < v10) {
      goto LABEL_167;
    }
    if (v8 == v38)
    {
LABEL_55:
      uint64_t v39 = v118;
      goto LABEL_56;
    }
    uint64_t v110 = v9;
    uint64_t v92 = v111 + 8 * v8;
    uint64_t v39 = v118;
    Swift::Int v114 = v38;
    do
    {
      uint64_t v93 = *(void **)(v118 + 8 * v8);
      uint64_t v94 = v92;
      while (1)
      {
        unint64_t v95 = *(void **)v94;
        id v96 = v93;
        id v97 = v95;
        id v98 = [v96 priority];
        if (v98 == [v97 priority])
        {
          if (sub_589D4() & 1) != 0 || (sub_589D4())
          {
            char v99 = sub_589D4();

            if (v99) {
              goto LABEL_121;
            }
          }
          else
          {
            uint64_t v101 = sub_58C84(v97);

            if (v101 != -1) {
              goto LABEL_121;
            }
          }
          goto LABEL_117;
        }
        if ([v96 priority] != (char *)&dword_0 + 2) {
          break;
        }
        unint64_t v100 = (char *)[v97 priority];

        if (v100 == (unsigned char *)&dword_0 + 2) {
          goto LABEL_121;
        }
LABEL_117:
        if (!v118) {
          goto LABEL_170;
        }
        unint64_t v102 = *(void **)v94;
        uint64_t v93 = *(void **)(v94 + 8);
        *(void *)uint64_t v94 = v93;
        *(void *)(v94 + 8) = v102;
        v94 -= 8;
        if (v8 == ++v10) {
          goto LABEL_121;
        }
      }

LABEL_121:
      ++v8;
      v92 += 8;
      Swift::Int v10 = v116;
    }
    while (v8 != v114);
    Swift::Int v8 = v114;
    uint64_t v9 = v110;
LABEL_56:
    if (v8 < v10) {
      goto LABEL_163;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_2FF00(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v41 = *((void *)v9 + 2);
    unint64_t v40 = *((void *)v9 + 3);
    unint64_t v42 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v9 = sub_2FF00((char *)(v40 > 1), v41 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v42;
    int v43 = v9 + 32;
    uint64_t v44 = &v9[16 * v41 + 32];
    *(void *)uint64_t v44 = v116;
    *((void *)v44 + 1) = v8;
    if (v41) {
      break;
    }
    unint64_t v42 = 1;
LABEL_104:
    Swift::Int v3 = v115;
    if (v8 >= v115) {
      goto LABEL_130;
    }
  }
  while (1)
  {
    unint64_t v45 = v42 - 1;
    if (v42 >= 4)
    {
      uint64_t v50 = &v43[16 * v42];
      uint64_t v51 = *((void *)v50 - 8);
      uint64_t v52 = *((void *)v50 - 7);
      BOOL v56 = __OFSUB__(v52, v51);
      uint64_t v53 = v52 - v51;
      if (v56) {
        goto LABEL_148;
      }
      uint64_t v55 = *((void *)v50 - 6);
      uint64_t v54 = *((void *)v50 - 5);
      BOOL v56 = __OFSUB__(v54, v55);
      uint64_t v48 = v54 - v55;
      char v49 = v56;
      if (v56) {
        goto LABEL_149;
      }
      unint64_t v57 = v42 - 2;
      uint64_t v58 = &v43[16 * v42 - 32];
      uint64_t v60 = *(void *)v58;
      uint64_t v59 = *((void *)v58 + 1);
      BOOL v56 = __OFSUB__(v59, v60);
      uint64_t v61 = v59 - v60;
      if (v56) {
        goto LABEL_150;
      }
      BOOL v56 = __OFADD__(v48, v61);
      uint64_t v62 = v48 + v61;
      if (v56) {
        goto LABEL_152;
      }
      if (v62 >= v53)
      {
        uint64_t v80 = &v43[16 * v45];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v56 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v56) {
          goto LABEL_158;
        }
        BOOL v73 = v48 < v83;
        goto LABEL_93;
      }
    }
    else
    {
      if (v42 != 3)
      {
        uint64_t v74 = *((void *)v9 + 4);
        uint64_t v75 = *((void *)v9 + 5);
        BOOL v56 = __OFSUB__(v75, v74);
        uint64_t v67 = v75 - v74;
        char v68 = v56;
        goto LABEL_87;
      }
      uint64_t v47 = *((void *)v9 + 4);
      uint64_t v46 = *((void *)v9 + 5);
      BOOL v56 = __OFSUB__(v46, v47);
      uint64_t v48 = v46 - v47;
      char v49 = v56;
    }
    if (v49) {
      goto LABEL_151;
    }
    unint64_t v57 = v42 - 2;
    uint64_t v63 = &v43[16 * v42 - 32];
    uint64_t v65 = *(void *)v63;
    uint64_t v64 = *((void *)v63 + 1);
    BOOL v66 = __OFSUB__(v64, v65);
    uint64_t v67 = v64 - v65;
    char v68 = v66;
    if (v66) {
      goto LABEL_153;
    }
    uint64_t v69 = &v43[16 * v45];
    uint64_t v71 = *(void *)v69;
    uint64_t v70 = *((void *)v69 + 1);
    BOOL v56 = __OFSUB__(v70, v71);
    uint64_t v72 = v70 - v71;
    if (v56) {
      goto LABEL_155;
    }
    if (__OFADD__(v67, v72)) {
      goto LABEL_157;
    }
    if (v67 + v72 >= v48)
    {
      BOOL v73 = v48 < v72;
LABEL_93:
      if (v73) {
        unint64_t v45 = v57;
      }
      goto LABEL_95;
    }
LABEL_87:
    if (v68) {
      goto LABEL_154;
    }
    uint64_t v76 = &v43[16 * v45];
    uint64_t v78 = *(void *)v76;
    uint64_t v77 = *((void *)v76 + 1);
    BOOL v56 = __OFSUB__(v77, v78);
    uint64_t v79 = v77 - v78;
    if (v56) {
      goto LABEL_156;
    }
    if (v79 < v67) {
      goto LABEL_104;
    }
LABEL_95:
    unint64_t v84 = v45 - 1;
    if (v45 - 1 >= v42)
    {
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
      goto LABEL_159;
    }
    if (!v39) {
      goto LABEL_171;
    }
    uint64_t v85 = v9;
    uint64_t v86 = v39;
    uint64_t v87 = &v43[16 * v84];
    uint64_t v88 = *(void *)v87;
    uint64_t v89 = &v43[16 * v45];
    uint64_t v90 = *((void *)v89 + 1);
    sub_70338((void **)(v86 + 8 * *(void *)v87), (id *)(v86 + 8 * *(void *)v89), v86 + 8 * v90, v117);
    if (v1) {
      break;
    }
    if (v90 < v88) {
      goto LABEL_145;
    }
    if (v45 > *((void *)v85 + 2)) {
      goto LABEL_146;
    }
    *(void *)uint64_t v87 = v88;
    *(void *)&v43[16 * v84 + 8] = v90;
    unint64_t v91 = *((void *)v85 + 2);
    if (v45 >= v91) {
      goto LABEL_147;
    }
    uint64_t v9 = v85;
    unint64_t v42 = v91 - 1;
    memmove(&v43[16 * v45], v89 + 16, 16 * (v91 - 1 - v45));
    *((void *)v85 + 2) = v91 - 1;
    uint64_t v39 = v118;
    if (v91 <= 2) {
      goto LABEL_104;
    }
  }
  Swift::Int v3 = v115;
LABEL_127:
  swift_bridgeObjectRelease();
  if (v3 < -1)
  {
    __break(1u);
    goto LABEL_129;
  }
LABEL_142:
  *(void *)((char *)&dword_10 + (v119 & 0xFFFFFFFFFFFFFF8)) = 0;
  sub_B30C0();
  swift_bridgeObjectRelease();
}

void sub_701C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 == a2) {
    return;
  }
  uint64_t v4 = a3;
  uint64_t v5 = *a4;
  uint64_t v6 = *a4 + 8 * a3 - 8;
  while (2)
  {
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v9 = v6;
    while (1)
    {
      Swift::Int v10 = *(void **)v9;
      id v11 = v7;
      id v12 = v10;
      id v13 = [v11 priority];
      if (v13 == [v12 priority])
      {
        if (sub_589D4() & 1) != 0 || (sub_589D4())
        {
          char v14 = sub_589D4();

          if (v14) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v16 = sub_58C84(v12);

          if (v16 != -1) {
            goto LABEL_17;
          }
        }
        goto LABEL_13;
      }
      if ([v11 priority] != (char *)&dword_0 + 2) {
        break;
      }
      int v15 = (char *)[v12 priority];

      if (v15 == (unsigned char *)&dword_0 + 2) {
        goto LABEL_17;
      }
LABEL_13:
      if (!v5)
      {
        __break(1u);
        return;
      }
      id v17 = *(void **)v9;
      uint64_t v7 = *(void **)(v9 + 8);
      *(void *)uint64_t v9 = v7;
      *(void *)(v9 + 8) = v17;
      v9 -= 8;
      if (v4 == ++v8) {
        goto LABEL_17;
      }
    }

LABEL_17:
    ++v4;
    v6 += 8;
    if (v4 != a2) {
      continue;
    }
    break;
  }
}

uint64_t sub_70338(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_5FDF0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    id v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_60;
    }
    unint64_t v40 = v4;
    int v15 = (id *)(a3 - 8);
    while (1)
    {
      unint64_t v41 = v12;
      uint64_t v16 = v12 - 1;
      id v17 = *(v6 - 1);
      id v18 = *(v12 - 1);
      id v19 = v17;
      id v20 = [v18 priority];
      if (v20 == [v19 priority])
      {
        if (sub_589D4() & 1) != 0 || (sub_589D4())
        {
          char v21 = sub_589D4();

          id v12 = v41;
          uint64_t v4 = v40;
          Swift::Int v22 = v15 + 1;
          if ((v21 & 1) == 0) {
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v24 = sub_58C84(v19);

          id v12 = v41;
          uint64_t v4 = v40;
          Swift::Int v22 = v15 + 1;
          if (v24 == -1)
          {
LABEL_34:
            BOOL v27 = v22 != v6 || v15 >= v6;
            uint64_t v16 = --v6;
            if (!v27) {
              goto LABEL_29;
            }
            goto LABEL_28;
          }
        }
      }
      else if ([v18 priority] == (char *)&dword_0 + 2)
      {
        uint64_t v23 = (char *)[v19 priority];

        id v12 = v41;
        uint64_t v4 = v40;
        Swift::Int v22 = v15 + 1;
        if (v23 != (unsigned char *)&dword_0 + 2) {
          goto LABEL_34;
        }
      }
      else
      {

        id v12 = v41;
        uint64_t v4 = v40;
        Swift::Int v22 = v15 + 1;
      }
      BOOL v25 = v22 != v12 || v15 >= v12;
      id v12 = v16;
      if (!v25) {
        goto LABEL_29;
      }
LABEL_28:
      *int v15 = *v16;
LABEL_29:
      --v15;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_60;
      }
    }
  }
  sub_5FDF0(a1, a2 - a1, a4);
  id v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      int v28 = v12;
      int v29 = *v4;
      id v30 = *v6;
      id v31 = v29;
      id v32 = [v30 priority];
      if (v32 == [v31 priority])
      {
        if (sub_589D4() & 1) != 0 || (sub_589D4())
        {
          char v33 = sub_589D4();

          id v12 = v28;
          if ((v33 & 1) == 0) {
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v35 = sub_58C84(v31);

          id v12 = v28;
          if (v35 == -1)
          {
LABEL_57:
            uint64_t v36 = v6;
            BOOL v37 = v7 == v6++;
            if (v37) {
              goto LABEL_51;
            }
LABEL_50:
            *uint64_t v7 = *v36;
            goto LABEL_51;
          }
        }
      }
      else if ([v30 priority] == (char *)&dword_0 + 2)
      {
        Swift::Int v34 = (char *)[v31 priority];

        id v12 = v28;
        if (v34 != (unsigned char *)&dword_0 + 2) {
          goto LABEL_57;
        }
      }
      else
      {

        id v12 = v28;
      }
      uint64_t v36 = v4;
      BOOL v37 = v7 == v4++;
      if (!v37) {
        goto LABEL_50;
      }
LABEL_51:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
      {
        uint64_t v6 = v7;
        goto LABEL_60;
      }
    }
  }
  uint64_t v6 = v7;
LABEL_60:
  sub_5FDF0(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_706AC(void *a1)
{
  id v2 = [a1 data];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_B1720();

  return v3;
}

void sub_7071C(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_70728(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_34C40(a1, a2);
  }
  return a1;
}

uint64_t sub_7073C()
{
  uint64_t v1 = sub_B17F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  sub_74F8(v0 + v6);
  sub_74F8(v0 + v7);

  return _swift_deallocObject(v0, v7 + 40, v5);
}

uint64_t sub_7080C()
{
  uint64_t v1 = sub_B17F0();
  sub_FC60(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_7091C;
  sub_70FB0();
  return sub_6CE78(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_7091C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_2B6A4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

uint64_t sub_709E0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_7091C;
  sub_70FB0();
  return sub_42B2C();
}

unint64_t sub_70AAC()
{
  unint64_t result = qword_EAED0;
  if (!qword_EAED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_EAED0);
  }
  return result;
}

uint64_t sub_70AF8(void *a1)
{
  id v1 = [a1 data];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_B1720();

  return v3;
}

uint64_t sub_70B5C(void *a1)
{
  id v1 = [a1 tasks];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_3085C(0, (unint64_t *)&qword_E85E0);
  uint64_t v3 = sub_B30A0();

  return v3;
}

void sub_70BCC(uint64_t a1, void *a2)
{
  sub_3085C(0, (unint64_t *)&qword_E85E0);
  Class isa = sub_B3090().super.isa;
  [a2 setTasks:isa];
}

uint64_t sub_70C48(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_70C54(id *a1)
{
  return sub_6EEC0(a1, *(unsigned char **)(v1 + 16), *(unsigned char **)(v1 + 24)) & 1;
}

uint64_t sub_70C74(id *a1)
{
  return sub_6EB38(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_70C94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_70CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for RemindersError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x70E20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemindersError()
{
  return &type metadata for RemindersError;
}

unint64_t sub_70E60()
{
  unint64_t result = qword_EAF00;
  if (!qword_EAF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EAF00);
  }
  return result;
}

unint64_t sub_70EB0(uint64_t a1, uint64_t a2)
{
  return sub_852C8(v2, a1, a2, 0x9000u);
}

uint64_t sub_70EE8()
{
  return 3;
}

uint64_t sub_70F04()
{
  sub_AA40(v1, 0, 1, v0);
  return sub_B1950();
}

uint64_t sub_70F3C()
{
  return v0;
}

uint64_t sub_70F50()
{
  return v0;
}

uint64_t sub_70F64(uint64_t a1)
{
  sub_AA40(v1, 1, 1, a1);
  return sub_B1990();
}

uint64_t sub_70FC4()
{
  return sub_70FCC(*v0);
}

uint64_t sub_70FCC(unsigned __int8 a1)
{
  if (a1 > 5u) {
    return 0;
  }
  else {
    return dword_C1700[(char)a1];
  }
}

uint64_t sub_70FF4()
{
  return sub_70FFC(*v0);
}

uint64_t sub_70FFC(char a1)
{
  return dword_C1718[a1];
}

uint64_t sub_71010()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28WeatherConditionsInterpreter_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_710B0()
{
  return type metadata accessor for WeatherConditionsInterpreter();
}

uint64_t type metadata accessor for WeatherConditionsInterpreter()
{
  uint64_t result = qword_EAF38;
  if (!qword_EAF38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_71100()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_71190()
{
  if (qword_E6BF8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_711EC()
{
  return sub_71234(&qword_E6BC0);
}

uint64_t sub_71210()
{
  return sub_71234(&qword_E6BD8);
}

uint64_t sub_71234(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  type metadata accessor for DailyBriefingNLv3Intent();
  sub_717A4(&qword_EB0C8);
  sub_717E8();
  return v2;
}

uint64_t sub_712B8()
{
  return sub_71234(&qword_E6BE0);
}

unint64_t sub_712DC()
{
  if (qword_E6BD0 != -1) {
    swift_once();
  }
  type metadata accessor for DailyBriefingNLv3Intent();
  sub_717A4(&qword_EB0C8);
  sub_717E8();
  return 0x600000203000200uLL >> (8 * v1);
}

uint64_t sub_71390()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingNLv3Intent_intent;
  uint64_t v2 = sub_B2960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_71430()
{
  return type metadata accessor for DailyBriefingNLv3Intent();
}

uint64_t type metadata accessor for DailyBriefingNLv3Intent()
{
  uint64_t result = qword_EAFF8;
  if (!qword_EAFF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_71480()
{
  uint64_t result = sub_B2960();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_71510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingNLv3Intent_intent;
  uint64_t v4 = sub_B2960();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_71588()
{
  return sub_71190();
}

uint64_t sub_715A0()
{
  return sub_711EC();
}

uint64_t sub_715C4()
{
  return sub_71210();
}

uint64_t sub_715E8()
{
  return sub_712B8();
}

unint64_t sub_7160C()
{
  return sub_712DC();
}

uint64_t sub_71630(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return NLIntentWrapper.traversableIntentNode.getter(a1, WitnessTable);
}

uint64_t sub_71694(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return NLIntentWrapper.traversableOntologyNode.getter(a1, WitnessTable);
}

uint64_t sub_716E8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return NLIntentWrapper.description.getter(a1, WitnessTable);
}

uint64_t sub_7173C()
{
  return sub_717A4(&qword_EB0C8);
}

uint64_t sub_71770()
{
  return sub_717A4(&qword_EB0D0);
}

uint64_t sub_717A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DailyBriefingNLv3Intent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_717E8()
{
  return sub_B2570();
}

void sub_7180C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_71878(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_7189C, 0, 0);
}

uint64_t sub_7189C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  v2[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2[2].i64[0] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  void *v3 = v0;
  v3[1] = sub_719A4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 56, 0, 0, 0xD00000000000001BLL, 0x80000000000B98C0, sub_72344, v2, &type metadata for Bool);
}

uint64_t sub_719A4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_71ABC, 0, 0);
}

uint64_t sub_71ABC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_71AD4(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v41 = a3;
  uint64_t v39 = a1;
  uint64_t v43 = sub_7424(&qword_EB1C0);
  uint64_t v38 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v40 = v6;
  unint64_t v42 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_B2D00();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v37 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - v10;
  if (qword_E6D18 != -1) {
    swift_once();
  }
  id v12 = (id)qword_F5278;
  sub_B2CE0();
  sub_B3300();
  sub_B2CD0();
  uint64_t v34 = a2;
  sub_8C320(0xD000000000000010, 0x80000000000B98E0, 0xD000000000000031, 0x80000000000B9900, 0xD00000000000001BLL, 0x80000000000B98C0);
  id v13 = *(void **)(a2 + 16);
  sub_7424(&qword_E7F20);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_BEC80;
  *(void *)(v14 + 32) = a4;
  aBlock[0] = v14;
  sub_B30C0();
  sub_2A720();
  id v36 = v13;
  id v33 = a4;
  Class isa = sub_B3090().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v15 = v37;
  uint64_t v16 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v16, v11, v7);
  uint64_t v17 = v38;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v42, v39, v43);
  uint64_t v18 = v7;
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v20 = (v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v39 = v11;
  uint64_t v22 = v34;
  uint64_t v23 = (v21 + v20 + 8) & ~v21;
  unint64_t v24 = (v40 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v25 + v19, v16, v18);
  *(void *)(v25 + v20) = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v25 + v23, v42, v43);
  id v26 = v33;
  *(void *)(v25 + v24) = v33;
  aBlock[4] = sub_72488;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_7180C;
  aBlock[3] = &unk_DE390;
  BOOL v27 = _Block_copy(aBlock);
  id v28 = v26;
  swift_retain();
  swift_release();
  Class v30 = isa;
  id v29 = v36;
  [v36 ETAsFromLocation:v41 toEntries:isa completion:v27];
  _Block_release(v27);

  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v39, v18);
}

uint64_t sub_71F40(uint64_t a1, uint64_t a2, int a3, int a4, id a5)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_E6D18 != -1) {
      swift_once();
    }
    sub_852C8(a2, 0xD000000000000014, 0x80000000000B9960, 0x9000u);
    sub_B34C0(34);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v11._uint64_t countAndFlagsBits = sub_B3860();
    sub_B3020(v11);
    swift_bridgeObjectRelease();
    sub_8C2F0(0xD000000000000020, 0x80000000000B9980, 0xD000000000000031, 0x80000000000B9900, 0xD00000000000001BLL, 0x80000000000B98C0);
    swift_bridgeObjectRelease();
    sub_7424(&qword_EB1C0);
    sub_B3130();
    return swift_errorRelease();
  }
  else
  {
    id v7 = [a5 ETAForKey:@"MapsSuggestionsETAKey"];
    if (v7)
    {
      uint64_t v8 = v7;
      [v7 seconds];
      uint64_t v10 = v9;

      if (qword_E6D18 != -1) {
        swift_once();
      }
      sub_852C8(a2, v10, 0, 0x8000u);
      sub_B34C0(25);
      v12._uint64_t countAndFlagsBits = 0xD000000000000017;
      v12._uint64_t object = (void *)0x80000000000B9940;
      sub_B3020(v12);
      sub_B31F0();
      sub_8C320(0, 0xE000000000000000, 0xD000000000000031, 0x80000000000B9900, 0xD00000000000001BLL, 0x80000000000B98C0);
      swift_bridgeObjectRelease();
    }
    sub_7424(&qword_EB1C0);
    return sub_B3130();
  }
}

uint64_t sub_7224C()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin19ETARequesterService_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_722F4()
{
  return type metadata accessor for ETARequesterService();
}

uint64_t type metadata accessor for ETARequesterService()
{
  uint64_t result = qword_EB108;
  if (!qword_EB108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_72344(char *a1)
{
  return sub_71AD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_72350()
{
  uint64_t v1 = sub_B2D00();
  sub_7870();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = sub_7424(&qword_EB1C0);
  sub_7870();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v7 + v13 + 8) & ~v13;
  uint64_t v17 = v4 | v13 | 7;
  unint64_t v15 = (*(void *)(v12 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v14, v8);

  return _swift_deallocObject(v0, v15 + 8, v17);
}

uint64_t sub_72488(uint64_t a1)
{
  uint64_t v3 = sub_B2D00();
  sub_FC60(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = sub_7424(&qword_EB1C0);
  sub_FC60(v8);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v13 = (v7 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(v1 + v7);
  unint64_t v15 = *(void **)(v1 + ((*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_71F40(a1, v1 + v5, v14, (int)v1 + (int)v13, v15);
}

uint64_t sub_72554(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_72564()
{
  return swift_release();
}

uint64_t sub_7256C()
{
  uint64_t v0 = sub_B1930();
  sub_7870();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_B1950();
  sub_7870();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B1920();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for Calendar.Component.hour(_:), v0);
  uint64_t v12 = sub_B1940();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  if ((unint64_t)v12 <= 0xB)
  {
    sub_B17F0();
    sub_FC8C();
    uint64_t v15 = sub_2B82C();
    v16(v15);
    return 0;
  }
  if (v12 <= 18)
  {
    sub_B17F0();
    sub_FC8C();
    uint64_t v13 = sub_2B82C();
    v14(v13);
    return 2;
  }
  sub_B17F0();
  sub_FC8C();
  uint64_t v18 = sub_2B82C();
  v19(v18);
  if ((unint64_t)v12 >= 0x18) {
    return 2;
  }
  return 1;
}

id sub_72758(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTitle:0 content:0 itemType:a1 status:a2 location:0 locationSearchType:0 dateTime:a3 dateSearchType:a4 temporalEventTriggerTypes:a5 taskPriority:0 notebookItemIdentifier:0];
  [v8 _setMetadata:a6];

  return v8;
}

id sub_72810(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_B1820();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_B1810();
  uint64_t v10 = sub_B1800();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_18898(v10, v12, v9);

  id v13 = v9;
  if (a3)
  {
    NSString v14 = sub_B2F20();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v14 = 0;
  }
  [v9 setAppId:v14];

  sub_72AC0();
  id v15 = a1;
  id v16 = sub_729C4(v15);
  [v9 setIntent:v16];

  return v9;
}

id sub_729C4(void *a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = sub_706AC([a1 backingStore]);
  if (v4 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v6 = v3;
    unint64_t v7 = v4;
    Class isa = sub_B1710().super.isa;
    sub_70728(v6, v7);
  }
  [v2 setData:isa];

  id v8 = [a1 typeName];
  uint64_t v9 = sub_B2F50();
  uint64_t v11 = v10;

  sub_7071C(v9, v11, v2);
  return v2;
}

unint64_t sub_72AC0()
{
  unint64_t result = qword_EB1C8;
  if (!qword_EB1C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_EB1C8);
  }
  return result;
}

uint64_t sub_72B00()
{
  sub_7FDC();
  v0[7] = v1;
  v0[8] = v2;
  uint64_t v3 = sub_B17F0();
  v0[9] = v3;
  sub_FC60(v3);
  v0[10] = v4;
  v0[11] = *(void *)(v5 + 64);
  v0[12] = swift_task_alloc();
  uint64_t v6 = sub_B2D00();
  v0[13] = v6;
  sub_FC60(v6);
  v0[14] = v7;
  v0[15] = *(void *)(v8 + 64);
  v0[16] = swift_task_alloc();
  v0[17] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_72BEC()
{
  if (qword_E6C90 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 128);
  uint64_t v18 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 64);
  id v6 = (id)qword_EB200;
  sub_B2CE0();
  sub_B3300();
  sub_B2CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v14, v5);
  sub_A8B4(v15, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v17, v1, v16);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v8 = (v18 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + v8 + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 144) = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v7, v3, v5);
  sub_B3B0((long long *)(v0 + 16), v10 + v8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v10 + v9, v17, v16);
  unint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_E9AE8 + dword_E9AE8);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_72E68;
  sub_ABC4();
  return v19((uint64_t)&unk_EB218, v10, 0xD000000000000023, v12, 6.0);
}

uint64_t sub_72E68(uint64_t a1, char a2)
{
  sub_7FC4();
  uint64_t v7 = v6;
  sub_2B6A4();
  *unint64_t v8 = v7;
  uint64_t v9 = *v3;
  sub_2B6A4();
  *uint64_t v10 = v9;
  *(void *)(v7 + 160) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    swift_release();
    *(unsigned char *)(v7 + 176) = a2;
    *(void *)(v7 + 168) = a1;
  }
  sub_AC10();
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_72F78()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(unsigned char *)(v0 + 176) & 1;
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_7302C()
{
  swift_release();
  if (qword_E6C88 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  uint64_t v2 = sub_B2D30();
  sub_B378(v2, (uint64_t)qword_EB1D0);
  sub_ABC4();
  sub_8C2F0(v3, v4, v5, v6, 0xD000000000000023, 0x80000000000B99B0);
  sub_852C8(v1, 0xD000000000000039, 0x80000000000B9A50, 0x9000u);
  sub_73704();
  uint64_t v7 = sub_46FF4();
  *unint64_t v8 = 2;
  swift_errorRelease();
  (*(void (**)(void, void))(v0[14] + 8))(v0[17], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v9(v7, 1);
}

uint64_t sub_731C8()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_EB1D0);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_EB1D0);
  if (qword_E6D68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F5390);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_73290()
{
  if (qword_E6D00 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_F5218;
  xmmword_EB1E8 = xmmword_F5200;
  byte_EB1F8 = byte_F5210;
  qword_EB200 = qword_F5218;

  return v0;
}

uint64_t sub_7330C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *unint64_t v8 = v4;
  v8[1] = sub_733BC;
  return sub_73750(a2, a3, a4);
}

uint64_t sub_733BC()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = v4;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_73490()
{
  char v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  *(void *)uint64_t v2 = *(void *)(v0 + 32);
  *(unsigned char *)(v2 + 8) = v1 & 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_734BC()
{
  uint64_t v1 = sub_B17F0();
  sub_7870();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = sub_B2D00();
  sub_7870();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v7 + v13 + 40) & ~v13;
  uint64_t v15 = v14 + *(void *)(v12 + 64);
  uint64_t v16 = v4 | v13 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  sub_74F8(v0 + v7);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v14, v8);

  return _swift_deallocObject(v0, v15, v16);
}

uint64_t sub_735D0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_B17F0();
  sub_FC60(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = (*(void *)(v8 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_B2D00() - 8) + 80);
  uint64_t v11 = v9 + v10 + 40;
  uint64_t v12 = v1 + v7;
  uint64_t v13 = v1 + v9;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_48944;
  return sub_7330C(a1, v12, v13, v14);
}

unint64_t sub_73704()
{
  unint64_t result = qword_EB220;
  if (!qword_EB220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_EB220);
  }
  return result;
}

uint64_t sub_73750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_B1950();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_B17F0();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_73880, 0, 0);
}

uint64_t sub_73880()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v6 = v0[5];
  id v7 = [objc_allocWithZone((Class)SACalendarEventSearch) init];
  v0[12] = v7;
  sub_B1920();
  sub_B1890();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  Class isa = sub_B1740().super.isa;
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v1, v2);
  [v7 setStartDate:isa];

  unsigned int v10 = (sub_84A80() - 6);
  uint64_t v11 = v0[10];
  uint64_t v12 = v0[2];
  if (v10 >= 3) {
    sub_57888(v12, v11);
  }
  else {
    sub_57878(v12, v11);
  }
  uint64_t v13 = v0[10];
  uint64_t v14 = v0[8];
  uint64_t v15 = (void *)v0[3];
  Class v16 = sub_B1740().super.isa;
  v9(v13, v14);
  [v7 setEndDate:v16];

  uint64_t v17 = v15[3];
  uint64_t v18 = v15[4];
  sub_7468(v15, v17);
  unint64_t v19 = (void *)swift_task_alloc();
  v0[13] = v19;
  uint64_t v20 = sub_3085C(0, &qword_EB230);
  *unint64_t v19 = v0;
  v19[1] = sub_73A74;
  return AceServiceInvokerAsync.submit<A>(_:)(v7, v17, v20, v18);
}

uint64_t sub_73A74()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  void *v3 = *v1;
  *(void *)(v2 + 112) = v4;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

id sub_73B58()
{
  id result = [*(id *)(v0 + 112) dictionary];
  if (result) {
    id result = (id)sub_B2E70();
  }
  else {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_73F94()
{
  if (qword_E6C88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_B2D30();
  sub_B378(v1, (uint64_t)qword_EB1D0);
  sub_ABC4();
  sub_8C2F0(0xD000000000000020, v2, v3, v4, v5, 0x80000000000B9AC0);
  if (qword_E6C90 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)v0[12];
  sub_852C8(v0[4], 0xD00000000000003DLL, 0x80000000000B9AF0, 0x9000u);
  sub_73704();
  uint64_t v7 = sub_46FF4();
  *uint64_t v8 = 0;
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v9(v7, 1);
}

uint64_t sub_7413C(char a1)
{
  uint64_t v2 = 0xD000000000000012;
  sub_B34C0(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "CalendarError.");
  HIBYTE(v8[1]) = -18;
  if (a1)
  {
    sub_74584();
    if (v3 == 1) {
      uint64_t v2 = v5;
    }
    else {
      uint64_t v2 = 0xD000000000000014;
    }
    if (v3 == 1) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = (void *)0x80000000000B46E0;
    }
  }
  else
  {
    uint64_t v6 = (void *)0x80000000000B46C0;
  }
  v9._uint64_t countAndFlagsBits = v2;
  v9._uint64_t object = v6;
  sub_B3020(v9);
  swift_bridgeObjectRelease();
  return v8[0];
}

unint64_t sub_74210(char a1)
{
  unint64_t result = 0xD000000000000012;
  if (a1)
  {
    sub_74584();
    if (v5 == 1) {
      return v4;
    }
    else {
      return v3 + 2;
    }
  }
  return result;
}

uint64_t sub_74268(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBE68;
  v6._uint64_t object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_742B4(char *a1, char *a2)
{
  return sub_5D480(*a1, *a2);
}

Swift::Int sub_742C0()
{
  return sub_7F368(*v0);
}

uint64_t sub_742C8(uint64_t a1)
{
  return sub_7FD00(a1, *v1);
}

Swift::Int sub_742D0(uint64_t a1)
{
  return sub_80680(a1, *v1);
}

uint64_t sub_742D8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_74268(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_74308@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_74210(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_74334()
{
  return sub_7413C(*v0);
}

id sub_7433C(uint64_t a1)
{
  if (a1)
  {
    v2.super.Class isa = sub_B2E60().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  id v3 = [v1 initWithDictionary:v2.super.isa];

  return v3;
}

uint64_t sub_743BC(void *a1)
{
  id v1 = [a1 results];
  if (!v1) {
    return 0;
  }
  NSDictionary v2 = v1;
  sub_3085C(0, &qword_E8E58);
  uint64_t v3 = sub_B30A0();

  return v3;
}

unsigned char *storeEnumTagSinglePayload for CalendarError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x744F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarError()
{
  return &type metadata for CalendarError;
}

unint64_t sub_74538()
{
  unint64_t result = qword_EB238;
  if (!qword_EB238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EB238);
  }
  return result;
}

void sub_745A8(uint64_t a1, unint64_t a2)
{
  sub_8C308(a1, a2, v2, v3, 0xD00000000000002FLL, v4);
}

uint64_t sub_745CC()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_F50E8);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_F50E8);
  if (qword_E6D60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F5378);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_74694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = sub_74B34(a1, a2, a3);
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_74AE8();
  sub_7870();
  __chkstk_darwin(v7);
  sub_74AC0();
  sub_7870();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_74A60();
  sub_57888(v9, v10);
  sub_B1920();
  sub_7424(&qword_EAD78);
  sub_B1930();
  sub_7870();
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_BEC70;
  sub_74B54();
  v14();
  sub_6AD94(v13);
  sub_74B10();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v20);
  sub_B15D0();
  uint64_t v15 = sub_74AA0();
  v16(v15);
  uint64_t v17 = sub_74A80();
  v18(v17);
  return v12;
}

uint64_t sub_74860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = sub_74B34(a1, a2, a3);
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_74AE8();
  sub_7870();
  __chkstk_darwin(v7);
  sub_74AC0();
  sub_7870();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_74A60();
  sub_58104(v9, v10);
  sub_B1920();
  sub_7424(&qword_EAD78);
  sub_B1930();
  sub_7870();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_BEC70;
  sub_74B54();
  v12();
  sub_6AD94(v11);
  sub_74B10();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v18);
  sub_B15D0();
  uint64_t v13 = sub_74AA0();
  v14(v13);
  uint64_t v15 = sub_74A80();
  v16(v15);
  return v5 + 8;
}

uint64_t sub_74A2C()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for WeatherFilteredConditionsProvider()
{
  return self;
}

uint64_t sub_74A60()
{
  return v0;
}

uint64_t sub_74A80()
{
  return v0;
}

uint64_t sub_74AA0()
{
  return v0;
}

uint64_t sub_74AC0()
{
  return sub_B17F0();
}

uint64_t sub_74AE8()
{
  return sub_B1650();
}

uint64_t sub_74B10()
{
  return sub_B18B0();
}

uint64_t sub_74B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 88) = a3;
  *(void *)(v3 - 104) = a1;
  return sub_B1950();
}

uint64_t sub_74B68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_7424(&qword_E76E0);
  __chkstk_darwin(v5 - 8);
  sub_7A0C();
  uint64_t v8 = v7 - v6;
  sub_B20D0();
  sub_2B68C();
  __chkstk_darwin(v9);
  sub_7A0C();
  uint64_t v12 = v11 - v10;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v11 - v10, a1);
  sub_755C8(a2, v8);
  sub_A8B4(v2 + 16, (uint64_t)v22);
  sub_B1DA0();
  sub_A918((uint64_t)v22, v23);
  sub_2B68C();
  __chkstk_darwin(v14);
  sub_7A0C();
  uint64_t v17 = (uint64_t *)(v16 - v15);
  (*(void (**)(uint64_t))(v18 + 16))(v16 - v15);
  uint64_t v19 = sub_7581C(v12, v8, &v21, *v17);
  sub_74F8((uint64_t)v22);
  return v19;
}

uint64_t sub_74CF8()
{
  sub_74F8(v0 + 16);
  sub_74F8(v0 + 56);

  return _swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for AddViewsFlowProvider()
{
  return self;
}

uint64_t sub_74D5C()
{
  return sub_B1C80();
}

uint64_t sub_74DBC()
{
  sub_7FDC();
  v1[2] = v2;
  v1[3] = v0;
  sub_7424(&qword_E76E0);
  v1[4] = swift_task_alloc();
  uint64_t v3 = sub_B22A0();
  v1[5] = v3;
  v1[6] = *(void *)(v3 - 8);
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_74EA8, 0, 0);
}

uint64_t sub_74EA8()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  sub_8C308(0xD00000000000001ALL, 0x80000000000B9CC0, 0xD000000000000033, 0x80000000000B9CE0, 0x2865747563657865, 0xE900000000000029);
  uint64_t v3 = (void *)sub_B1EB0();
  v0[8] = v3;
  sub_7424(&qword_E7F20);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_BEC80;
  *(void *)(v4 + 32) = v3;
  sub_B30C0();
  sub_755C8(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_nlContext, v1);
  id v5 = v3;
  sub_B2290();
  sub_7468((void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_dailyBriefingOutputPublisher), *(void *)(v2 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_dailyBriefingOutputPublisher + 24));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  void *v6 = v0;
  v6[1] = sub_7506C;
  uint64_t v7 = v0[7];
  return sub_949C4(v7);
}

uint64_t sub_7506C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_75138, 0, 0);
}

uint64_t sub_75138()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  sub_B1FB0();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_751E0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_logger;
  sub_B2D30();
  sub_FC8C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_dailyBriefingOutputPublisher);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_templatingResult;
  sub_B20D0();
  sub_FC8C();
  (*(void (**)(uint64_t))(v4 + 8))(v3);
  sub_A9D8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_nlContext);
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_aceService);
  return v0;
}

uint64_t sub_752B0()
{
  sub_751E0();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_75308()
{
  return type metadata accessor for AddViewsPublisherFlow();
}

uint64_t type metadata accessor for AddViewsPublisherFlow()
{
  uint64_t result = qword_EB3D8;
  if (!qword_EB3D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_75358()
{
  sub_B2D30();
  if (v0 <= 0x3F)
  {
    sub_B20D0();
    if (v1 <= 0x3F)
    {
      sub_75474();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_75474()
{
  if (!qword_EB3F0)
  {
    sub_B2090();
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EB3F0);
    }
  }
}

uint64_t sub_754CC()
{
  return sub_74D5C();
}

uint64_t sub_754F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_323B0;
  return sub_74DBC();
}

uint64_t sub_7558C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AddViewsPublisherFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_755C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E76E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_75630()
{
  unint64_t result = qword_EB4D8;
  if (!qword_EB4D8)
  {
    type metadata accessor for AddViewsPublisherFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EB4D8);
  }
  return result;
}

uint64_t sub_75680(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = type metadata accessor for DailyBriefingOutputPublisher();
  uint64_t v19 = &off_DEDD0;
  *(void *)&long long v17 = a4;
  uint64_t v10 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_B2D30();
  uint64_t v12 = sub_B378(v11, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a5 + v10, v12, v11);
  uint64_t v13 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_dialogService;
  sub_B1ED0();
  swift_allocObject();
  *(void *)(a5 + v13) = sub_B1EC0();
  sub_B3B0(&v17, a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_dailyBriefingOutputPublisher);
  uint64_t v14 = a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_templatingResult;
  uint64_t v15 = sub_B20D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a1, v15);
  sub_75950(a2, a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_nlContext);
  sub_B3B0(a3, a5 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21AddViewsPublisherFlow_aceService);
  return a5;
}

uint64_t sub_7581C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v17 = type metadata accessor for DailyBriefingOutputPublisher();
  uint64_t v18 = &off_DEDD0;
  v16[0] = a4;
  type metadata accessor for AddViewsPublisherFlow();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = sub_A918((uint64_t)v16, v17);
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = sub_75680(a1, a2, a3, *v11, v8);
  sub_74F8((uint64_t)v16);
  return v13;
}

uint64_t sub_75950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E76E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_759B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[16] = a3;
  v4[17] = v3;
  v4[14] = a1;
  v4[15] = a2;
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_759E0()
{
  uint64_t v1 = (void *)v0[15];
  sub_B34C0(41);
  swift_bridgeObjectRelease();
  uint64_t v2 = v1[3];
  v0[18] = v2;
  uint64_t v3 = v1[4];
  v0[19] = v3;
  v0[20] = sub_7468(v1, v2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 16);
  v0[21] = v4;
  v0[22] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xEFBB000000000000;
  uint64_t v5 = sub_78764();
  v19._uint64_t countAndFlagsBits = v4(v5);
  sub_B3020(v19);
  swift_bridgeObjectRelease();
  sub_7A1C();
  sub_B3020(v20);
  sub_ABC4();
  sub_8C308(v6, 0xED0000203A544143, v7, v8, 0xD000000000000018, 0x80000000000B9FA0);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_78764();
  uint64_t v10 = v4(v9);
  uint64_t v12 = v11;
  v0[23] = v11;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                   + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v13 = (void *)swift_task_alloc();
  v0[24] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_75BEC;
  uint64_t v14 = v0[16];
  uint64_t v15 = v0[14];
  return v17(v15, v10, v12, v14);
}

uint64_t sub_75BEC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_AC10();
    return _swift_task_switch(v6, v7, v8);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_ABD0();
    return v9();
  }
}

void sub_75CF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[25];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[21];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[17];
  swift_bridgeObjectRelease();
  sub_7468((void *)(v6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_siriKitEventSender), *(void *)(v6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_siriKitEventSender + 24));
  sub_B34C0(79);
  v0[5] = 0;
  v0[6] = 0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v26._uint64_t object = (void *)0x80000000000B9FC0;
  sub_B3020(v26);
  v27._uint64_t countAndFlagsBits = v3(v5, v4);
  sub_B3020(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v28._uint64_t object = (void *)0x80000000000B9FF0;
  sub_B3020(v28);
  v0[12] = v2;
  sub_7424(&qword_E7F40);
  sub_B35C0();
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  swift_bridgeObjectRetain();
  sub_A1178(4, 3, v7, v8);
  sub_A1D18();
  swift_release();
  swift_bridgeObjectRelease();
  sub_B34C0(48);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = v3(v5, v4);
  sub_B3020(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 8238;
  v30._uint64_t object = (void *)0xE200000000000000;
  sub_B3020(v30);
  sub_B34C0(31);
  v1[9] = 0;
  v1[10] = 0xE000000000000000;
  sub_7A1C();
  uint64_t object = v31._object;
  uint64_t countAndFlagsBits = v31._countAndFlagsBits;
  sub_B3020(v31);
  v1[11] = v2;
  sub_B35C0();
  uint64_t v9 = v1[9];
  uint64_t v10 = (void *)v1[10];
  swift_bridgeObjectRetain();
  v32._uint64_t countAndFlagsBits = v9;
  v32._uint64_t object = v10;
  sub_B3020(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v22 = v1[25];
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v1[21];
  uint64_t v12 = v1[19];
  uint64_t v13 = v1[18];
  uint64_t v14 = sub_B2D30();
  sub_B378(v14, (uint64_t)qword_F5360);
  swift_bridgeObjectRetain();
  sub_ABC4();
  sub_52848();
  sub_8C2F0(0xD00000000000002CLL, 0x80000000000B9FC0, v15, v16, v17, v18);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  long long v21 = static FatalError.fatalErrorClosure;
  sub_B34C0(48);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = v11(v13, v12);
  sub_B3020(v33);
  swift_bridgeObjectRelease();
  v34._uint64_t countAndFlagsBits = 8238;
  v34._uint64_t object = (void *)0xE200000000000000;
  sub_B3020(v34);
  sub_B34C0(31);
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v35._uint64_t object = object;
  v35._uint64_t countAndFlagsBits = countAndFlagsBits;
  sub_B3020(v35);
  v1[13] = v22;
  sub_B35C0();
  uint64_t v19 = v1[7];
  Swift::String v20 = (void *)v1[8];
  swift_bridgeObjectRetain();
  v36._uint64_t countAndFlagsBits = v19;
  v36._uint64_t object = v20;
  sub_B3020(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21();
}

uint64_t sub_76188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_E76E0);
  __chkstk_darwin(v4 - 8);
  sub_588B0();
  sub_12EE8(a2, v2, &qword_E76E0);
  return sub_B21B0();
}

uint64_t sub_7620C()
{
  sub_7FDC();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = sub_B20D0();
  v1[7] = v3;
  sub_FC60(v3);
  v1[8] = v4;
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  uint64_t v5 = sub_7424(&qword_EA2C0);
  sub_FC60(v5);
  v1[11] = v6;
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_762F8()
{
  sub_7FDC();
  if (qword_E6CA0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  v0[14] = qword_F5108;
  v0[15] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v2 = sub_78754();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_763A0()
{
  sub_7FDC();
  sub_774F8(*(void *)(v0 + 120));
  swift_release();
  sub_AC10();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_76408()
{
  sub_7FDC();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_764E8;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_764E8()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_765CC()
{
  sub_7FDC();
  *(void *)(v0 + 144) = qword_F5108;
  swift_retain();
  uint64_t v1 = sub_78754();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_76638()
{
  sub_7FDC();
  uint64_t v1 = *(void *)(v0 + 144);
  swift_beginAccess();
  *(void *)(v0 + 152) = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  swift_release();
  sub_AC10();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_766BC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[11];
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    uint64_t v25 = v0[8];
    uint64_t v6 = (void (**)(char *, char *, uint64_t))(v25 + 32);
    swift_bridgeObjectRetain();
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = v0[12];
      uint64_t v8 = v0[13];
      uint64_t v10 = v0[7];
      sub_12EE8(v4, v8, &qword_EA2C0);
      sub_667C8(v8, v9, &qword_EA2C0);
      if (sub_C844(v9, 1, v10) == 1)
      {
        sub_17644(v0[12], &qword_EA2C0);
      }
      else
      {
        uint64_t v12 = (char *)v0[9];
        uint64_t v11 = (char *)v0[10];
        uint64_t v13 = v0[7];
        uint64_t v14 = *v6;
        (*v6)(v11, (char *)v0[12], v13);
        v14(v12, v11, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = (char *)sub_5F0BC(0, *((void *)v7 + 2) + 1, 1, (uint64_t)v7);
        }
        unint64_t v16 = *((void *)v7 + 2);
        unint64_t v15 = *((void *)v7 + 3);
        if (v16 >= v15 >> 1) {
          uint64_t v7 = (char *)sub_5F0BC(v15 > 1, v16 + 1, 1, (uint64_t)v7);
        }
        uint64_t v17 = (char *)v0[9];
        uint64_t v18 = v0[7];
        *((void *)v7 + 2) = v16 + 1;
        v14(&v7[((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v16], v17, v18);
      }
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  }
  v27._uint64_t countAndFlagsBits = sub_B30B0();
  sub_B3020(v27);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_52848();
  sub_8C308(v19, 0xEA00000000002067, v20, v21, 0xD000000000000014, v22);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(char *))v0[1];
  return v23(v7);
}

uint64_t sub_76980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a3;
  v4[32] = a4;
  v4[30] = a2;
  sub_7424(&qword_E76F0);
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  return _swift_task_switch(sub_76A28, 0, 0);
}

uint64_t sub_76A28()
{
  uint64_t v1 = v0 + 72;
  uint64_t v2 = *(void *)(v0 + 248);
  unint64_t v3 = *(void *)(v2 + 16);
  uint64_t v28 = v2 + 32;
  Swift::String v27 = (_OWORD *)(v0 + 136);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  unint64_t v29 = v3;
  while (1)
  {
    if (v5 == v3)
    {
      *(void *)(v1 + 48) = 0;
      *(_OWORD *)(v1 + 16) = 0u;
      *(_OWORD *)(v1 + 32) = 0u;
      unint64_t v6 = v3;
      *(_OWORD *)uint64_t v1 = 0u;
    }
    else
    {
      if (v5 >= v3)
      {
        __break(1u);
        return result;
      }
      sub_781B4(v28 + 48 * v5, (uint64_t)v27);
      *(void *)uint64_t v1 = v5;
      long long v7 = *(_OWORD *)(v0 + 152);
      *(_OWORD *)(v0 + 80) = *v27;
      *(_OWORD *)(v0 + 96) = v7;
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 168);
      unint64_t v6 = v5 + 1;
    }
    sub_667C8(v1, v0 + 16, &qword_EB838);
    uint64_t v8 = *(void *)(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 272);
    if (!*(void *)(v0 + 48)) {
      break;
    }
    unint64_t v30 = v6;
    uint64_t v10 = v1;
    uint64_t v12 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 16);
    uint64_t v14 = sub_B3160();
    sub_AA40(v9, 1, 1, v14);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v13;
    *(void *)(v15 + 48) = v12;
    long long v16 = *(_OWORD *)(v0 + 40);
    *(_OWORD *)(v15 + 56) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v15 + 72) = v16;
    *(_OWORD *)(v15 + 88) = *(_OWORD *)(v0 + 56);
    sub_12EE8(v9, v8, &qword_E76F0);
    int v17 = sub_C844(v8, 1, v14);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v18 = *(void *)(v0 + 264);
    if (v17 == 1)
    {
      sub_17644(*(void *)(v0 + 264), &qword_E76F0);
    }
    else
    {
      sub_B3150();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v18, v14);
    }
    uint64_t v1 = v10;
    unint64_t v3 = v29;
    if (*(void *)(v15 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_B3110();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v21 = 0;
    }
    uint64_t v22 = **(void **)(v0 + 240);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = &unk_EB848;
    *(void *)(v23 + 24) = v15;
    uint64_t v24 = v21 | v19;
    if (v21 | v19)
    {
      uint64_t v24 = v0 + 184;
      *(void *)(v0 + 184) = 0;
      *(void *)(v0 + 192) = 0;
      *(void *)(v0 + 200) = v19;
      *(void *)(v0 + 208) = v21;
    }
    unint64_t v5 = v30;
    uint64_t v25 = *(void *)(v0 + 272);
    *(void *)(v0 + 216) = 1;
    *(void *)(v0 + 224) = v24;
    *(void *)(v0 + 232) = v22;
    swift_task_create();
    swift_release();
    uint64_t result = sub_17644(v25, &qword_E76F0);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v26();
}

uint64_t sub_76D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  uint64_t v8 = sub_B20D0();
  v7[8] = v8;
  v7[9] = *(void *)(v8 - 8);
  v7[10] = swift_task_alloc();
  return _swift_task_switch(sub_76E3C, 0, 0);
}

uint64_t sub_76E3C()
{
  uint64_t v1 = v0[5];
  sub_B34C0(32);
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = v0[6];
    uint64_t v3 = v0[7];
    v0[2] = v1 + 1;
    v15._uint64_t countAndFlagsBits = sub_B37C0();
    sub_B3020(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = 543584032;
    v16._uint64_t object = (void *)0xE400000000000000;
    sub_B3020(v16);
    v0[3] = *(void *)(v4 + 16);
    v17._uint64_t countAndFlagsBits = sub_B37C0();
    sub_B3020(v17);
    swift_bridgeObjectRelease();
    sub_7A1C();
    v18._uint64_t countAndFlagsBits = 0xD000000000000013;
    sub_B3020(v18);
    sub_ABC4();
    sub_52848();
    sub_8C308(v5, 0xE500000000000000, v6, v7, v8, v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v3 + 40);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[11] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_77020;
    uint64_t v12 = v0[10];
    uint64_t v13 = v0[7];
    return sub_759B8(v12, v13, v10);
  }
  return result;
}

uint64_t sub_77020()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_770E8()
{
  sub_7FDC();
  if (qword_E6CA0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 96) = qword_F5108;
  swift_retain();
  uint64_t v1 = sub_78754();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_77184()
{
  sub_7FDC();
  sub_77894(*(void *)(v0 + 80), *(void *)(v0 + 40));
  swift_release();
  sub_AC10();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_771F4()
{
  sub_7FDC();
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  sub_ABD0();
  return v1();
}

uint64_t sub_77268()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_logger;
  sub_B2D30();
  sub_79FC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);

  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_siriKitEventSender);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_deviceState);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_patternFlowProvider);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_addViewsFlowProvider);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_aceService);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_featureFlags);
  return v0;
}

uint64_t sub_77364()
{
  sub_77268();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_773BC()
{
  return type metadata accessor for TemplatingService(0);
}

uint64_t type metadata accessor for TemplatingService(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_EB520);
}

uint64_t sub_773E4()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_774B0()
{
  type metadata accessor for ExecutedCATsState();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
  qword_F5108 = v0;
  return result;
}

uint64_t sub_774F8(uint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_7424(&qword_EA2C0);
  __chkstk_darwin(v6 - 8);
  sub_588B0();
  uint64_t v7 = sub_B2D30();
  sub_7870();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_C914();
  if (qword_E6D98 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_B378(v7, (uint64_t)qword_F5420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, v11, v7);
  sub_B34C0(51);
  v18._uint64_t countAndFlagsBits = 0xD000000000000030;
  v18._uint64_t object = (void *)0x80000000000B9EE0;
  sub_B3020(v18);
  v19._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 46;
  v20._uint64_t object = (void *)0xE100000000000000;
  sub_B3020(v20);
  sub_ABC4();
  sub_8C320(v12, 0xE000000000000000, v13, v14, 0xD00000000000001FLL, 0x80000000000B9F20);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v7);
  uint64_t v15 = sub_B20D0();
  sub_AA40(v2, 1, 1, v15);
  uint64_t v16 = sub_77738(v2, a1);
  swift_beginAccess();
  *(void *)(v4 + 112) = v16;
  return swift_bridgeObjectRelease();
}

uint64_t sub_77738(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_B35F0();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_7424(&qword_EA2C0);
      uint64_t v4 = (void *)sub_B30E0();
      v4[2] = a2;
      uint64_t v5 = *(void *)(sub_7424(&qword_EA2C0) - 8);
      unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      sub_12EE8(a1, (uint64_t)v4 + v6, &qword_EA2C0);
      uint64_t v7 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v8 = *(void *)(v5 + 72);
        uint64_t v9 = (uint64_t)v4 + v8 + v6;
        do
        {
          sub_12EE8(a1, v9, &qword_EA2C0);
          v9 += v8;
          --v7;
        }
        while (v7);
      }
    }
    else
    {
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    sub_17644(a1, &qword_EA2C0);
    return (uint64_t)v4;
  }
  return result;
}

void sub_77894(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = sub_B2D30();
  sub_7870();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_7424(&qword_EA2C0);
  uint64_t v13 = sub_FC60(v12);
  uint64_t v15 = v14;
  __chkstk_darwin(v13);
  sub_C914();
  uint64_t v16 = (uint64_t *)(v2 + 112);
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 112) + 16) > (int64_t)a2)
  {
    uint64_t v17 = sub_B20D0();
    sub_79FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v3, a1, v17);
    sub_AA40(v3, 0, 1, v17);
    swift_beginAccess();
    uint64_t v19 = *v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v16 = v19;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((a2 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v19 = sub_7808C();
      *uint64_t v16 = v19;
      if ((a2 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (*(void *)(v19 + 16) > a2)
        {
          sub_780A0(v3, v19+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * a2);
          swift_endAccess();
          if (qword_E6D98 == -1)
          {
LABEL_6:
            uint64_t v21 = sub_B378(v6, (uint64_t)qword_F5420);
            (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v21, v6);
            v34[0] = 0;
            v34[1] = 0xE000000000000000;
            sub_B34C0(21);
            swift_bridgeObjectRelease();
            strcpy((char *)v34, "Added result ");
            HIWORD(v34[1]) = -4864;
            unint64_t v33 = a2 + 1;
            v35._uint64_t countAndFlagsBits = sub_B37C0();
            sub_B3020(v35);
            swift_bridgeObjectRelease();
            v36._uint64_t countAndFlagsBits = 543584032;
            v36._uint64_t object = (void *)0xE400000000000000;
            sub_B3020(v36);
            unint64_t v33 = *(void *)(*v16 + 16);
            v37._uint64_t countAndFlagsBits = sub_B37C0();
            sub_B3020(v37);
            swift_bridgeObjectRelease();
            unint64_t v22 = v34[1];
            sub_ABC4();
            sub_52848();
            sub_8C320(v23, v22, v24, v25, 0xD00000000000001BLL, v26);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
            return;
          }
LABEL_13:
          swift_once();
          goto LABEL_6;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  if (qword_E6D98 != -1) {
    swift_once();
  }
  sub_B378(v6, (uint64_t)qword_F5420);
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C2F0(v27, v28, v29, v30, 0xD00000000000001BLL, v31);
}

uint64_t sub_77C60()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ExecutedCATsState()
{
  return self;
}

uint64_t type metadata accessor for BriefingCatExecutor(uint64_t a1)
{
  return sub_F470(a1, (uint64_t *)&unk_EB738);
}

uint64_t sub_77CDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_77D1C(uint64_t a1, uint64_t a2)
{
  return sub_77D70(a1, a2);
}

uint64_t sub_77D70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_B2CB0();
  sub_7870();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_C914();
  uint64_t v9 = sub_7424(&qword_E8B80);
  __chkstk_darwin(v9 - 8);
  sub_12EE8(a1, (uint64_t)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_E8B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a2, v5);
  uint64_t v11 = sub_B2BD0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v5);
  sub_17644(a1, &qword_E8B80);
  return v11;
}

uint64_t sub_77EB4()
{
  return type metadata accessor for BriefingCatExecutor(0);
}

uint64_t type metadata accessor for BaseTemplating()
{
  return self;
}

uint64_t sub_77EE0(uint64_t a1, int *a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1DEA8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_77FB4;
  return v7(a1);
}

uint64_t sub_77FB4()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_ABD0();
  return v3();
}

void sub_78078()
{
}

uint64_t sub_7808C()
{
  return sub_5F228();
}

uint64_t sub_780A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EA2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_78108(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_1DEA8(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_A7BC;
  return sub_76980(a1, a2, v6, v5);
}

uint64_t sub_781B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_781EC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_74F8(v0 + 56);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_78244(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_1DEA8(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_AB58;
  return sub_76D78(a1, v3, v4, v5, v6, v7, (uint64_t)(v1 + 7));
}

uint64_t sub_78314()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for CATArgs(uint64_t a1)
{
  sub_74F8(a1);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CATArgs(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for CATArgs(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_78430(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for CATArgs(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CATArgs(uint64_t a1, uint64_t a2)
{
  sub_74F8(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CATArgs(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CATArgs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CATArgs()
{
  return &type metadata for CATArgs;
}

uint64_t sub_78754()
{
  return v0;
}

uint64_t sub_78764()
{
  return v0;
}

void *sub_78778(uint64_t a1, void (*a2)(long long *__return_ptr, void, void, unsigned char *))
{
  void (*v21)(long long *__return_ptr, void, void, unsigned char *);

  uint64_t v21 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = a1 + 32;
  swift_bridgeObjectRetain();
  long long v4 = _swiftEmptyArrayStorage;
  do
  {
    sub_7CE8C(v3, (uint64_t)&v14, &qword_EB940);
    long long v5 = v14;
    long long v17 = v14;
    sub_61108((uint64_t)&v15, (uint64_t)v18);
    long long v19 = v5;
    sub_7CE8C((uint64_t)v18, (uint64_t)v20, (uint64_t *)&unk_E7990);
    swift_bridgeObjectRetain();
    sub_531B0((uint64_t)&v17, &qword_EB948);
    v21(&v17, v19, *((void *)&v19 + 1), v20);
    sub_531B0((uint64_t)&v19, &qword_EB948);
    if (*((void *)&v17 + 1))
    {
      long long v14 = v17;
      long long v15 = v18[0];
      long long v16 = v18[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_5EE04(0, v4[2] + 1, 1, (uint64_t)v4);
        long long v4 = v11;
      }
      unint64_t v7 = v4[2];
      unint64_t v6 = v4[3];
      if (v7 >= v6 >> 1)
      {
        sub_5EE04(v6 > 1, v7 + 1, 1, (uint64_t)v4);
        long long v4 = v12;
      }
      v4[2] = v7 + 1;
      uint64_t v8 = &v4[6 * v7];
      long long v9 = v14;
      long long v10 = v16;
      v8[3] = v15;
      v8[4] = v10;
      void v8[2] = v9;
    }
    else
    {
      sub_531B0((uint64_t)&v17, &qword_EB950);
    }
    v3 += 48;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_78950(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_7424(&qword_EB930);
    uint64_t v1 = (void *)sub_B3650();
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
  }
  long long v4 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_791FC(v2, 1, &v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_789FC(unint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_92394(3, a1);
  long long v4 = _swiftEmptyArrayStorage;
  uint64_t v21 = (uint64_t)_swiftEmptyArrayStorage;
  int64_t v6 = v5 >> 1;
  if (v5 >> 1 == v3)
  {
LABEL_8:
    swift_unknownObjectRelease();
    return (uint64_t)v4;
  }
  uint64_t v7 = v2;
  uint64_t v8 = v3;
  uint64_t result = type metadata accessor for DBReminder();
  uint64_t v10 = v6 - v8;
  if (v6 > v8)
  {
    swift_unknownObjectRetain();
    uint64_t v11 = (id *)(v7 + 8 * v8);
    do
    {
      id v12 = *v11;
      sub_9B2C0((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, vars0,
        vars8);
      sub_B3080();
      if (*(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                     + (v21 & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_B30D0();
      sub_B30F0();
      sub_B30C0();
      ++v11;
      --v10;
    }
    while (v10);
    swift_unknownObjectRelease();
    long long v4 = (void *)v21;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_78B20(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_FCA0((uint64_t)sub_78B3C);
}

void sub_78B3C()
{
  sub_FD60();
  uint64_t v1 = (unint64_t *)v0[2];
  sub_7424(&qword_E7D20);
  uint64_t v2 = swift_allocObject();
  v0[5] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_C1560;
  sub_13150();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v4;
  unint64_t v6 = *v1;
  uint64_t v7 = sub_789FC(v6);
  uint64_t v8 = sub_7424(&qword_EB908);
  *(void *)(v2 + 48) = v7;
  *(void *)(v2 + 72) = v8;
  *(void *)(v2 + 80) = 0xD000000000000016;
  sub_13150();
  *(void *)(v2 + 88) = v9;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v11 = v0[2];
  *(double *)(v2 + 96) = (double)v10;
  *(void *)(v2 + 120) = &type metadata for Double;
  *(void *)(v2 + 128) = 0xD000000000000010;
  *(void *)(v2 + 136) = 0x80000000000BA170;
  unint64_t v12 = *(void *)(v11 + 8);
  *(void *)(v2 + 144) = sub_789FC(v12);
  *(void *)(v2 + 168) = v8;
  *(void *)(v2 + 176) = 0xD000000000000015;
  sub_13150();
  *(void *)(v2 + 184) = v13;
  unint64_t v14 = v12 >> 62;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_B3620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8));
  }
  *(double *)(v2 + 192) = (double)v15;
  *(void *)(v2 + 216) = &type metadata for Double;
  *(void *)(v2 + 224) = 0xD000000000000013;
  sub_13150();
  *(void *)(v2 + 232) = v16;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_B3620();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
    if (v14)
    {
LABEL_7:
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_B3620();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  uint64_t v18 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8));
LABEL_10:
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = v0[4];
    *(void *)(v2 + 264) = &type metadata for Double;
    *(double *)(v2 + 240) = (double)(v17 + v18);
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v23 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_EB910 + dword_EB910);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[6] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_78DFC;
    uint64_t v22 = v0[3];
    v23(v2, v22, v20);
  }
}

uint64_t sub_78DFC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_FCEC();
  return v4(v3);
}

uint64_t type metadata accessor for RemindersTemplatingService()
{
  return self;
}

uint64_t sub_78F00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_7424(&qword_EB930);
  uint64_t v6 = sub_B3640();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    Swift::String v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * i);
      if (a2)
      {
        sub_ADC0(v22, v35);
      }
      else
      {
        sub_B218((uint64_t)v22, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_B38B0();
      sub_B2FF0();
      uint64_t result = sub_B38E0();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) == 0)
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          BOOL v29 = v25 == v28;
          if (v25 == v28) {
            unint64_t v25 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v25);
          if (v30 != -1)
          {
            unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      unint64_t v31 = (void *)(*(void *)(v7 + 48) + 16 * v26);
      void *v31 = v21;
      v31[1] = v20;
      uint64_t result = (uint64_t)sub_ADC0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v26));
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v16 >= v33) {
        goto LABEL_33;
      }
      unint64_t v17 = v34[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v33) {
          goto LABEL_33;
        }
        unint64_t v17 = v34[v13];
        if (!v17)
        {
          int64_t v18 = v16 + 2;
          if (v18 >= v33)
          {
LABEL_33:
            swift_release();
            uint64_t v3 = v2;
            if (a2)
            {
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                sub_A0BCC(0, (unint64_t)(v32 + 63) >> 6, v34);
              }
              else {
                void *v34 = -1 << v32;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v17 = v34[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v13 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_41;
              }
              if (v13 >= v33) {
                goto LABEL_33;
              }
              unint64_t v17 = v34[v13];
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v18;
        }
      }
LABEL_18:
      unint64_t v10 = (v17 - 1) & v17;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_791FC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_7CE8C(v6, (uint64_t)&v28, &qword_EA2B0);
    uint64_t v8 = v28;
    uint64_t v7 = v29;
    uint64_t v26 = v28;
    uint64_t v27 = v29;
    sub_ADC0(&v30, v25);
    uint64_t v9 = (void *)*a3;
    unint64_t v11 = sub_AF3C8(v8, v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_B3840();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_7424(&qword_EB938);
      sub_B35E0();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    int64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v19 = (uint64_t *)(v18[6] + 16 * v11);
    *uint64_t v19 = v8;
    v19[1] = v7;
    sub_ADC0(v25, (_OWORD *)(v18[7] + 32 * v11));
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    _OWORD v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_78F00(v14, a2 & 1);
  unint64_t v16 = sub_AF3C8(v8, v7);
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v23 = swift_allocError();
  swift_willThrow();
  uint64_t v31 = v23;
  swift_errorRetain();
  sub_7424(&qword_E7F40);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_74F8((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
LABEL_20:
  sub_B34C0(30);
  v32._uint64_t object = (void *)0x80000000000BA300;
  v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  sub_B3020(v32);
  sub_B35C0();
  v33._uint64_t countAndFlagsBits = 39;
  v33._uint64_t object = (void *)0xE100000000000000;
  sub_B3020(v33);
  uint64_t result = sub_B3600();
  __break(1u);
  return result;
}

uint64_t sub_794F0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a3;
  *(void *)(v4 + 80) = a4;
  *(void *)(v4 + 64) = a2;
  *(unsigned char *)(v4 + 120) = a1;
  return sub_FCA0((uint64_t)sub_79510);
}

uint64_t sub_79510()
{
  sub_7DD18();
  sub_46E44();
  sub_7D70C();
  *(void *)(v1 + 40) = &type metadata for Features;
  unint64_t v2 = sub_3CAA0();
  sub_7D514(v2);
  sub_7DA00();
  if (v0)
  {
    sub_7D9D0();
    sub_ABC4();
    sub_7D458(v3, v4, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = sub_7D9E8(v5);
    sub_7D6AC(v6, (void (*)(long long *__return_ptr, void, void, unsigned char *))sub_7D410);
    sub_7D978();
    uint64_t v7 = sub_78950(v0);
    sub_7D9F4((uint64_t)v7);
    uint64_t v8 = sub_35128();
    uint64_t v9 = (void *)sub_7D948(v8);
    *uint64_t v9 = v10;
    v9[1] = sub_7D404;
    sub_7DAF4();
  }
  else
  {
    sub_ABC4();
    sub_7D418(v11, v12, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v13 = sub_35128();
    uint64_t v14 = (void *)sub_7D954(v13);
    *uint64_t v14 = v15;
    v14[1] = sub_7967C;
    sub_7DADC();
  }
  sub_7DC2C();
  return v20(v16, v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_7967C()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *unint64_t v2 = v1;
  *unint64_t v2 = *v0;
  sub_7D960(v3);
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_79744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return sub_FCA0((uint64_t)sub_79760);
}

uint64_t sub_79760()
{
  sub_7DD18();
  sub_46E44();
  sub_7D70C();
  *(void *)(v1 + 40) = &type metadata for Features;
  unint64_t v2 = sub_3CAA0();
  sub_7D514(v2);
  sub_7DA00();
  if (v0)
  {
    sub_7D9D0();
    sub_ABC4();
    sub_7D458(v3, v4, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = sub_7D9E8(v5);
    sub_7D6AC(v6, (void (*)(long long *__return_ptr, void, void, unsigned char *))sub_7D410);
    sub_7D978();
    uint64_t v7 = sub_78950(v0);
    sub_7D9F4((uint64_t)v7);
    uint64_t v8 = sub_35128();
    uint64_t v9 = (void *)sub_7D948(v8);
    *uint64_t v9 = v10;
    v9[1] = sub_7D404;
    sub_7D888();
  }
  else
  {
    sub_ABC4();
    sub_7D418(v11, v12, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v13 = sub_35128();
    uint64_t v14 = (void *)sub_7D954(v13);
    *uint64_t v14 = v15;
    v14[1] = sub_7967C;
    sub_7D760();
  }
  sub_7DC2C();
  return v19(v16, v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_798CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return _swift_task_switch(sub_798F0, 0, 0);
}

uint64_t sub_798F0()
{
  sub_7DD18();
  sub_46E44();
  sub_7D70C();
  *(void *)(v1 + 40) = &type metadata for Features;
  unint64_t v2 = sub_3CAA0();
  sub_7D514(v2);
  sub_7DA00();
  if (v0)
  {
    sub_7D9D0();
    sub_ABC4();
    sub_7D458(v3, v4, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = sub_7D9E8(v5);
    sub_7D6AC(v6, (void (*)(long long *__return_ptr, void, void, unsigned char *))sub_7CE7C);
    sub_7D978();
    uint64_t v7 = sub_78950(v0);
    sub_7D9F4((uint64_t)v7);
    uint64_t v8 = sub_35128();
    uint64_t v9 = (void *)sub_7D948(v8);
    *uint64_t v9 = v10;
    v9[1] = sub_7D404;
    sub_7D888();
  }
  else
  {
    sub_ABC4();
    sub_7D418(v11, v12, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v13 = sub_35128();
    uint64_t v14 = (void *)sub_7D954(v13);
    *uint64_t v14 = v15;
    v14[1] = sub_7967C;
    sub_7D760();
  }
  sub_7DC2C();
  return v19(v16, v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_79A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return sub_FCA0((uint64_t)sub_79A78);
}

uint64_t sub_79A78()
{
  sub_7DD18();
  sub_46E44();
  sub_7D70C();
  *(void *)(v1 + 40) = &type metadata for Features;
  unint64_t v2 = sub_3CAA0();
  sub_7D514(v2);
  sub_7DA00();
  if (v0)
  {
    sub_7D9D0();
    sub_ABC4();
    sub_7D458(v3, v4, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = sub_7D9E8(v5);
    sub_7D6AC(v6, (void (*)(long long *__return_ptr, void, void, unsigned char *))sub_7D410);
    sub_7D978();
    uint64_t v7 = sub_78950(v0);
    sub_7D9F4((uint64_t)v7);
    uint64_t v8 = sub_35128();
    uint64_t v9 = (void *)sub_7D948(v8);
    *uint64_t v9 = v10;
    v9[1] = sub_79BE4;
    sub_7D888();
  }
  else
  {
    sub_ABC4();
    sub_7D418(v11, v12, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v13 = sub_35128();
    uint64_t v14 = (void *)sub_7D954(v13);
    *uint64_t v14 = v15;
    v14[1] = sub_79CC4;
    sub_7D760();
  }
  sub_7DC2C();
  return v19(v16, v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_79BE4()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *unint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_FCEC();
  return v4(v3);
}

uint64_t sub_79CC4()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *unint64_t v2 = v1;
  *unint64_t v2 = *v0;
  sub_7D960(v3);
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_79D8C()
{
  *(void *)(v0 + 56) = *(void *)(v0 + 112);
  type metadata accessor for AddViewsPublisherFlow();
  sub_75630();
  sub_B1C70();
  swift_release();
  uint64_t v1 = sub_FCEC();
  return v2(v1);
}

uint64_t sub_79E1C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a3;
  *(void *)(v4 + 80) = a4;
  *(void *)(v4 + 64) = a2;
  *(unsigned char *)(v4 + 120) = a1;
  return sub_FCA0((uint64_t)sub_79E3C);
}

uint64_t sub_79E3C()
{
  sub_7DD18();
  sub_46E44();
  sub_7D70C();
  *(void *)(v1 + 40) = &type metadata for Features;
  unint64_t v2 = sub_3CAA0();
  sub_7D514(v2);
  sub_7DA00();
  if (v0)
  {
    sub_7D9D0();
    sub_ABC4();
    sub_7D458(v3, v4, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = sub_7D9E8(v5);
    sub_7D6AC(v6, (void (*)(long long *__return_ptr, void, void, unsigned char *))sub_7D410);
    sub_7D978();
    uint64_t v7 = sub_78950(v0);
    sub_7D9F4((uint64_t)v7);
    uint64_t v8 = sub_35128();
    uint64_t v9 = (void *)sub_7D948(v8);
    *uint64_t v9 = v10;
    v9[1] = sub_7D404;
    sub_7DAF4();
  }
  else
  {
    sub_ABC4();
    sub_7D418(v11, v12, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v13 = sub_35128();
    uint64_t v14 = (void *)sub_7D954(v13);
    *uint64_t v14 = v15;
    v14[1] = sub_7967C;
    sub_7DADC();
  }
  sub_7DC2C();
  return v20(v16, v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_79FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return sub_FCA0((uint64_t)sub_79FC4);
}

uint64_t sub_79FC4()
{
  sub_7DD18();
  sub_46E44();
  sub_7D70C();
  *(void *)(v1 + 40) = &type metadata for Features;
  unint64_t v2 = sub_3CAA0();
  sub_7D514(v2);
  sub_7DA00();
  if (v0)
  {
    sub_7D9D0();
    sub_ABC4();
    sub_7D458(v3, v4, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = sub_7D9E8(v5);
    sub_7D6AC(v6, (void (*)(long long *__return_ptr, void, void, unsigned char *))sub_7D410);
    sub_7D978();
    uint64_t v7 = sub_78950(v0);
    sub_7D9F4((uint64_t)v7);
    uint64_t v8 = sub_35128();
    uint64_t v9 = (void *)sub_7D948(v8);
    *uint64_t v9 = v10;
    v9[1] = sub_7D404;
    sub_7D888();
  }
  else
  {
    sub_ABC4();
    sub_7D418(v11, v12, (uint64_t)"execute(cat:parameters:nlContextUpdate:)");
    uint64_t v13 = sub_35128();
    uint64_t v14 = (void *)sub_7D954(v13);
    *uint64_t v14 = v15;
    v14[1] = sub_7967C;
    sub_7D760();
  }
  sub_7DC2C();
  return v19(v16, v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_7A130(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 256) = a3;
  *(void *)(v4 + 264) = a4;
  *(void *)(v4 + 248) = a2;
  sub_B1E90();
  *(void *)(v4 + 272) = swift_task_alloc();
  uint64_t v6 = sub_B21C0();
  *(void *)(v4 + 280) = v6;
  *(void *)(v4 + 288) = *(void *)(v6 - 8);
  *(void *)(v4 + 296) = swift_task_alloc();
  uint64_t v7 = sub_B2CB0();
  *(void *)(v4 + 304) = v7;
  *(void *)(v4 + 312) = *(void *)(v7 - 8);
  *(void *)(v4 + 320) = swift_task_alloc();
  *(void *)(v4 + 40) = &type metadata for CalendarDialogs;
  *(void *)(v4 + 48) = &off_DC678;
  *(unsigned char *)(v4 + 16) = a1;
  return _swift_task_switch(sub_7A298, 0, 0);
}

uint64_t sub_7A298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_7D610();
  sub_7D7FC();
  v15[10] = &type metadata for Features;
  unint64_t v16 = sub_3CAA0();
  sub_7DCE0(v16);
  sub_7D668();
  if ((v14 & 1) == 0)
  {
    uint64_t v17 = sub_7DA58();
    sub_7D82C(v17, v18, (uint64_t)"makeResponseFlow called with RF Disabled.");
  }
  sub_7D534();
  swift_bridgeObjectRelease();
  sub_7D4CC();
  uint64_t v19 = (char *)sub_7468(v15 + 2, (uint64_t)&type metadata for CalendarDialogs);
  v15[41] = v19;
  v37._uint64_t countAndFlagsBits = sub_5BF0(*((unsigned char *)v15 + 16));
  sub_B3020(v37);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_46DA0(v20, (uint64_t)" using RF. CATGlobals = ");
  sub_B2BA0();
  v38._uint64_t countAndFlagsBits = sub_B2E90();
  sub_7D990(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_7D9A8(v21, v22, v23, (uint64_t)"makeResponseFlow(cat:parameters:nlContextUpdate:)");
  swift_bridgeObjectRelease();
  sub_B2C10();
  sub_7D4B4();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15[42] = [self bundleForClass:ObjCClassFromMetadata];
  unint64_t v25 = sub_5BF0(*v19);
  sub_7D7C8(v25, v26);
  uint64_t v27 = (void *)swift_task_alloc();
  v15[44] = v27;
  *uint64_t v27 = v15;
  v27[1] = sub_7A498;
  sub_7D808();
  sub_1FBE8();
  return static CATResponse.executePattern(bundle:patternId:parameters:globals:callback:options:)(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_7A498()
{
  sub_2B7FC();
  sub_7D498();
  uint64_t v5 = v4;
  sub_AB94();
  void *v6 = v5;
  sub_7D6A0();
  uint64_t v7 = *(void **)(v3 + 336);
  *uint64_t v8 = *v2;
  *(void *)(v5 + 360) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  sub_7D6A0();
  if (!v1) {
    *(void *)(v5 + 368) = v0;
  }
  sub_7D55C();
  v9();
  sub_531B0(v5 + 96, &qword_EB928);
  sub_AC10();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_7A630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_7D610();
  sub_7D7FC();
  sub_7D794(v17);
  uint64_t v18 = swift_task_alloc();
  uint64_t v19 = sub_7D9DC(v18);
  sub_7D71C(v19, (uint64_t)sub_7D40C);
  swift_task_dealloc();
  sub_A8B4(v14 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_patternFlowProvider, v15);
  sub_7D904();

  uint64_t v20 = sub_7DBC4();
  v21(v20);
  sub_74F8(v15);
  sub_74F8(a10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_FCEC();
  sub_1FBE8();
  return v24(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14);
}

#error "7A748: call analysis failed (funcsize=100)"

uint64_t sub_7A8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  sub_B1E90();
  v3[29] = swift_task_alloc();
  uint64_t v4 = sub_B21C0();
  v3[30] = v4;
  v3[31] = *(void *)(v4 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v5 = sub_B2CB0();
  v3[33] = v5;
  v3[34] = *(void *)(v5 - 8);
  v3[35] = swift_task_alloc();
  return _swift_task_switch(sub_7AA14, 0, 0);
}

uint64_t sub_7AA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_7D610();
  sub_7D7FC();
  *(void *)(v15 + 40) = &type metadata for Features;
  unint64_t v16 = sub_3CAA0();
  sub_7D514(v16);
  sub_7D668();
  if ((v14 & 1) == 0)
  {
    sub_7D878();
    sub_7D62C(0xD000000000000029, 0xD000000000000033, 0xD000000000000031, (uint64_t)"makeResponseFlow called with RF Disabled.");
  }
  sub_7D534();
  swift_bridgeObjectRelease();
  sub_7D4CC();
  sub_7D8B4();
  sub_7DC94(35);
  v17._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_46DA0(v17, (uint64_t)" using RF. CATGlobals = ");
  sub_7DBDC();
  v36._uint64_t countAndFlagsBits = sub_B2E90();
  sub_7D990(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_7D774(v18, v19, v20, v21, (uint64_t)"makeResponseFlow(cat:parameters:nlContextUpdate:)");
  swift_bridgeObjectRelease();
  sub_B2C10();
  sub_7D4B4();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v23 = [self bundleForClass:ObjCClassFromMetadata];
  sub_7D5B0((uint64_t)v23);
  uint64_t v24 = swift_task_alloc();
  uint64_t v25 = (void *)sub_7DBF4(v24);
  *uint64_t v25 = v26;
  v25[1] = sub_7ABEC;
  sub_7D74C();
  sub_7D738();
  sub_1FBE8();
  return static CATResponse.executePattern(bundle:patternId:parameters:globals:callback:options:)(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_7ABEC()
{
  sub_47240();
  sub_2B7FC();
  sub_7D498();
  uint64_t v5 = v4;
  sub_AB94();
  void *v6 = v5;
  sub_7D6A0();
  uint64_t v7 = *(void **)(v3 + 288);
  *uint64_t v8 = *v2;
  *(void *)(v5 + 304) = v1;
  swift_task_dealloc();

  sub_7D6A0();
  if (!v1) {
    *(void *)(v5 + 312) = v0;
  }
  sub_7D55C();
  v9();
  sub_531B0(v5 + 56, &qword_EB928);
  sub_AC10();
  sub_471E8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_7AD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_7D85C();
  sub_FD60();
  sub_7D5E0(v13);
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = sub_7D9DC(v14);
  sub_7D71C(v15, (uint64_t)sub_7D40C);
  swift_task_dealloc();
  sub_7DD00(OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_patternFlowProvider);
  sub_7D56C();

  uint64_t v16 = sub_7D688();
  v17(v16);
  sub_7DAA0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_FCEC();
  sub_FCFC();
  return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

#error "7AE50: call analysis failed (funcsize=91)"

uint64_t sub_7AFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  sub_B1E90();
  v3[29] = swift_task_alloc();
  uint64_t v4 = sub_B21C0();
  v3[30] = v4;
  v3[31] = *(void *)(v4 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v5 = sub_B2CB0();
  v3[33] = v5;
  v3[34] = *(void *)(v5 - 8);
  v3[35] = swift_task_alloc();
  return _swift_task_switch(sub_7B100, 0, 0);
}

uint64_t sub_7B100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_7D610();
  sub_7D7FC();
  *(void *)(v15 + 40) = &type metadata for Features;
  unint64_t v16 = sub_3CAA0();
  sub_7D514(v16);
  sub_7D668();
  if ((v14 & 1) == 0)
  {
    sub_7D878();
    sub_7D62C(0xD000000000000029, 0xD000000000000033, 0xD000000000000031, (uint64_t)"makeResponseFlow called with RF Disabled.");
  }
  sub_7D534();
  swift_bridgeObjectRelease();
  sub_7D4CC();
  sub_7D8B4();
  sub_7DC94(39);
  v17._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_46DA0(v17, (uint64_t)" using RF. CATGlobals = ");
  sub_7DBDC();
  v36._uint64_t countAndFlagsBits = sub_B2E90();
  sub_7D990(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_7D774(v18, v19, v20, v21, (uint64_t)"makeResponseFlow(cat:parameters:nlContextUpdate:)");
  swift_bridgeObjectRelease();
  sub_B2C10();
  sub_7D4B4();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v23 = [self bundleForClass:ObjCClassFromMetadata];
  sub_7D5B0((uint64_t)v23);
  uint64_t v24 = swift_task_alloc();
  uint64_t v25 = (void *)sub_7DBF4(v24);
  *uint64_t v25 = v26;
  v25[1] = sub_7B2D8;
  sub_7D74C();
  sub_7D738();
  sub_1FBE8();
  return static CATResponse.executePattern(bundle:patternId:parameters:globals:callback:options:)(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_7B2D8()
{
  sub_47240();
  sub_2B7FC();
  sub_7D498();
  uint64_t v5 = v4;
  sub_AB94();
  void *v6 = v5;
  sub_7D6A0();
  uint64_t v7 = *(void **)(v3 + 288);
  *uint64_t v8 = *v2;
  *(void *)(v5 + 304) = v1;
  swift_task_dealloc();

  sub_7D6A0();
  if (!v1) {
    *(void *)(v5 + 312) = v0;
  }
  sub_7D55C();
  v9();
  sub_531B0(v5 + 56, &qword_EB928);
  sub_AC10();
  sub_471E8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_7B444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_7D85C();
  sub_FD60();
  sub_7D5E0(v13);
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = sub_7D9DC(v14);
  sub_7D71C(v15, (uint64_t)sub_7CE84);
  swift_task_dealloc();
  sub_7DD00(OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_patternFlowProvider);
  sub_7D56C();

  uint64_t v16 = sub_7D688();
  v17(v16);
  sub_7DAA0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_FCEC();
  sub_FCFC();
  return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

#error "7B53C: call analysis failed (funcsize=91)"

uint64_t sub_7B6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  sub_B1E90();
  v3[29] = swift_task_alloc();
  uint64_t v4 = sub_B21C0();
  v3[30] = v4;
  v3[31] = *(void *)(v4 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v5 = sub_B2CB0();
  v3[33] = v5;
  v3[34] = *(void *)(v5 - 8);
  v3[35] = swift_task_alloc();
  return _swift_task_switch(sub_7B7EC, 0, 0);
}

uint64_t sub_7B7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_7D610();
  sub_7D7FC();
  *(void *)(v15 + 40) = &type metadata for Features;
  unint64_t v16 = sub_3CAA0();
  sub_7D514(v16);
  sub_7D668();
  if ((v14 & 1) == 0)
  {
    sub_7D878();
    sub_7D62C(0xD000000000000029, 0xD000000000000033, 0xD000000000000031, (uint64_t)"makeResponseFlow called with RF Disabled.");
  }
  sub_7D534();
  swift_bridgeObjectRelease();
  sub_7D4CC();
  sub_7D8B4();
  sub_7DC94(31);
  v17._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_46DA0(v17, (uint64_t)" using RF. CATGlobals = ");
  sub_7DBDC();
  v36._uint64_t countAndFlagsBits = sub_B2E90();
  sub_7D990(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_7D774(v18, v19, v20, v21, (uint64_t)"makeResponseFlow(cat:parameters:nlContextUpdate:)");
  swift_bridgeObjectRelease();
  sub_B2C10();
  sub_7D4B4();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v23 = [self bundleForClass:ObjCClassFromMetadata];
  sub_7D5B0((uint64_t)v23);
  uint64_t v24 = swift_task_alloc();
  uint64_t v25 = (void *)sub_7DBF4(v24);
  *uint64_t v25 = v26;
  v25[1] = sub_7B9C4;
  sub_7D74C();
  sub_7D738();
  sub_1FBE8();
  return static CATResponse.executePattern(bundle:patternId:parameters:globals:callback:options:)(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_7B9C4()
{
  sub_47240();
  sub_2B7FC();
  sub_7D498();
  uint64_t v5 = v4;
  sub_AB94();
  void *v6 = v5;
  sub_7D6A0();
  uint64_t v7 = *(void **)(v3 + 288);
  *uint64_t v8 = *v2;
  *(void *)(v5 + 304) = v1;
  swift_task_dealloc();

  sub_7D6A0();
  if (!v1) {
    *(void *)(v5 + 312) = v0;
  }
  sub_7D55C();
  v9();
  sub_531B0(v5 + 56, &qword_EB928);
  sub_AC10();
  sub_471E8();
  return _swift_task_switch(v10, v11, v12);
}

#error "7BB68: call analysis failed (funcsize=107)"

uint64_t sub_7BD14(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 256) = a3;
  *(void *)(v4 + 264) = a4;
  *(void *)(v4 + 248) = a2;
  sub_B1E90();
  *(void *)(v4 + 272) = swift_task_alloc();
  uint64_t v6 = sub_B21C0();
  *(void *)(v4 + 280) = v6;
  *(void *)(v4 + 288) = *(void *)(v6 - 8);
  *(void *)(v4 + 296) = swift_task_alloc();
  uint64_t v7 = sub_B2CB0();
  *(void *)(v4 + 304) = v7;
  *(void *)(v4 + 312) = *(void *)(v7 - 8);
  *(void *)(v4 + 320) = swift_task_alloc();
  *(void *)(v4 + 40) = &type metadata for CommonDialogs;
  *(void *)(v4 + 48) = &off_DF1F0;
  *(unsigned char *)(v4 + 16) = a1;
  return _swift_task_switch(sub_7BE7C, 0, 0);
}

uint64_t sub_7BE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_7D610();
  sub_7D7FC();
  v15[10] = &type metadata for Features;
  unint64_t v16 = sub_3CAA0();
  sub_7DCE0(v16);
  sub_7D668();
  if ((v14 & 1) == 0)
  {
    uint64_t v17 = sub_7DA58();
    sub_7D82C(v17, v18, (uint64_t)"makeResponseFlow called with RF Disabled.");
  }
  sub_7D534();
  swift_bridgeObjectRelease();
  sub_7D4CC();
  uint64_t v19 = (char *)sub_7468(v15 + 2, (uint64_t)&type metadata for CommonDialogs);
  v15[41] = v19;
  v37._uint64_t countAndFlagsBits = sub_A3C6C(*((unsigned char *)v15 + 16));
  sub_B3020(v37);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_46DA0(v20, (uint64_t)" using RF. CATGlobals = ");
  sub_B2BA0();
  v38._uint64_t countAndFlagsBits = sub_B2E90();
  sub_7D990(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_7D9A8(v21, v22, v23, (uint64_t)"makeResponseFlow(cat:parameters:nlContextUpdate:)");
  swift_bridgeObjectRelease();
  sub_B2C10();
  sub_7D4B4();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15[42] = [self bundleForClass:ObjCClassFromMetadata];
  unint64_t v25 = sub_A3C6C(*v19);
  sub_7D7C8(v25, v26);
  uint64_t v27 = (void *)swift_task_alloc();
  v15[44] = v27;
  *uint64_t v27 = v15;
  v27[1] = sub_7C07C;
  sub_7D808();
  sub_1FBE8();
  return static CATResponse.executePattern(bundle:patternId:parameters:globals:callback:options:)(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_7C07C()
{
  sub_2B7FC();
  sub_7D498();
  uint64_t v5 = v4;
  sub_AB94();
  void *v6 = v5;
  sub_7D6A0();
  uint64_t v7 = *(void **)(v3 + 336);
  *uint64_t v8 = *v2;
  *(void *)(v5 + 360) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  sub_7D6A0();
  if (!v1) {
    *(void *)(v5 + 368) = v0;
  }
  sub_7D55C();
  v9();
  sub_531B0(v5 + 96, &qword_EB928);
  sub_AC10();
  return _swift_task_switch(v10, v11, v12);
}

#error "7C250: call analysis failed (funcsize=100)"

uint64_t sub_7C3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  sub_B1E90();
  v3[29] = swift_task_alloc();
  uint64_t v4 = sub_B21C0();
  v3[30] = v4;
  v3[31] = *(void *)(v4 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v5 = sub_B2CB0();
  v3[33] = v5;
  v3[34] = *(void *)(v5 - 8);
  v3[35] = swift_task_alloc();
  return _swift_task_switch(sub_7C51C, 0, 0);
}

uint64_t sub_7C51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_7D610();
  sub_7D7FC();
  *(void *)(v15 + 40) = &type metadata for Features;
  unint64_t v16 = sub_3CAA0();
  sub_7D514(v16);
  sub_7D668();
  if ((v14 & 1) == 0)
  {
    sub_7D878();
    sub_7D62C(0xD000000000000029, 0xD000000000000033, 0xD000000000000031, (uint64_t)"makeResponseFlow called with RF Disabled.");
  }
  sub_7D534();
  swift_bridgeObjectRelease();
  sub_7D4CC();
  sub_7D8B4();
  sub_7DC94(30);
  v17._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_46DA0(v17, (uint64_t)" using RF. CATGlobals = ");
  sub_7DBDC();
  v36._uint64_t countAndFlagsBits = sub_B2E90();
  sub_7D990(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_7D774(v18, v19, v20, v21, (uint64_t)"makeResponseFlow(cat:parameters:nlContextUpdate:)");
  swift_bridgeObjectRelease();
  sub_B2C10();
  sub_7D4B4();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v23 = [self bundleForClass:ObjCClassFromMetadata];
  sub_7D5B0((uint64_t)v23);
  uint64_t v24 = swift_task_alloc();
  unint64_t v25 = (void *)sub_7DBF4(v24);
  *unint64_t v25 = v26;
  v25[1] = sub_7C6F4;
  sub_7D74C();
  sub_7D738();
  sub_1FBE8();
  return static CATResponse.executePattern(bundle:patternId:parameters:globals:callback:options:)(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_7C6F4()
{
  sub_47240();
  sub_2B7FC();
  sub_7D498();
  uint64_t v5 = v4;
  sub_AB94();
  void *v6 = v5;
  sub_7D6A0();
  uint64_t v7 = *(void **)(v3 + 288);
  *uint64_t v8 = *v2;
  *(void *)(v5 + 304) = v1;
  swift_task_dealloc();

  sub_7D6A0();
  if (!v1) {
    *(void *)(v5 + 312) = v0;
  }
  sub_7D55C();
  v9();
  sub_531B0(v5 + 56, &qword_EB928);
  sub_AC10();
  sub_471E8();
  return _swift_task_switch(v10, v11, v12);
}

#error "7C898: call analysis failed (funcsize=101)"

uint64_t sub_7CA2C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a3;
  *(void *)(v4 + 64) = a4;
  uint64_t v7 = sub_B20D0();
  *(void *)(v4 + 72) = v7;
  *(void *)(v4 + 80) = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 88) = v8;
  *(void *)(v4 + 40) = &type metadata for CalendarDialogs;
  *(void *)(v4 + 48) = &off_DC678;
  *(unsigned char *)(v4 + 16) = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_7CB64;
  return sub_759B8(v8, v4 + 16, a2);
}

uint64_t sub_7CB64()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *unint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_7CC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  uint64_t v5 = sub_B20D0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v3[11] = v6;
  v3[5] = &type metadata for WeatherDialogs;
  v3[6] = &off_DD548;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[12] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_7CB64;
  return sub_759B8(v6, (uint64_t)(v3 + 2), a1);
}

uint64_t sub_7CD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  uint64_t v5 = sub_B20D0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v3[11] = v6;
  v3[5] = &type metadata for RemindersDialogs;
  v3[6] = &off_DD418;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[12] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_7CB64;
  return sub_759B8(v6, (uint64_t)(v3 + 2), a1);
}

double sub_7CE7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_AC54(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_7CE84(uint64_t a1)
{
  return sub_76188(a1, *(void *)(v1 + 16));
}

uint64_t sub_7CE8C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_7424(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_7CEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  uint64_t v5 = sub_B20D0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v3[11] = v6;
  v3[5] = &type metadata for MapsDialogs;
  v3[6] = &off_DEF08;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[12] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_7D018;
  return sub_759B8(v6, (uint64_t)(v3 + 2), a1);
}

uint64_t sub_7D018()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *unint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_7D0E0()
{
  sub_46E44();
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  sub_7468((void *)(v0[8] + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_addViewsFlowProvider), *(void *)(v0[8] + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17TemplatingService_addViewsFlowProvider + 24));
  sub_74B68(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_74F8((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v5 = sub_FCEC();
  return v6(v5);
}

uint64_t sub_7D1A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a3;
  *(void *)(v4 + 64) = a4;
  uint64_t v7 = sub_B20D0();
  *(void *)(v4 + 72) = v7;
  *(void *)(v4 + 80) = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 88) = v8;
  *(void *)(v4 + 40) = &type metadata for CommonDialogs;
  *(void *)(v4 + 48) = &off_DF1F0;
  *(unsigned char *)(v4 + 16) = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_7CB64;
  return sub_759B8(v8, v4 + 16, a2);
}

uint64_t sub_7D2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  uint64_t v5 = sub_B20D0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v3[11] = v6;
  v3[5] = &type metadata for GreetingDialogs;
  v3[6] = &off_DE0C8;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[12] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_7CB64;
  return sub_759B8(v6, (uint64_t)(v3 + 2), a1);
}

void sub_7D418(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  sub_8C308(0x6964207369204652, 0xEF2E64656C626173, a1, a2, 0xD000000000000028, (a3 - 32) | 0x8000000000000000);
}

void sub_7D458(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  sub_8C308(0x6E65207369204652, 0xEE002E64656C6261, a1, a2, 0xD000000000000028, (a3 - 32) | 0x8000000000000000);
}

void sub_7D4F4()
{
  sub_B34C0(81);
}

uint64_t sub_7D514(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = 0;
  *(void *)(v1 + 48) = a1;
  return sub_B22B0();
}

void sub_7D534()
{
  sub_B34C0(41);
}

uint64_t sub_7D56C()
{
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t v5 = *(void *)(v1 + 128);
  sub_7468(v2, v4);
  return dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)(v3, v0, v4, v5);
}

uint64_t sub_7D5B0(uint64_t a1)
{
  *(void *)(v1 + 288) = a1;
  *(_OWORD *)(v1 + 72) = 0u;
  *(void *)(v1 + 88) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  return sub_B2CA0();
}

uint64_t sub_7D5E0(uint64_t a1)
{
  return static DialogPhase.completion.getter(a1);
}

void sub_7D62C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_8C2F0(a1, (a4 - 32) | 0x8000000000000000, a2, (v5 - 32) | 0x8000000000000000, a3, (v4 - 32) | 0x8000000000000000);
}

uint64_t sub_7D668()
{
  return sub_74F8(v0);
}

uint64_t sub_7D688()
{
  return v0;
}

void *sub_7D6AC(uint64_t a1, void (*a2)(long long *__return_ptr, void, void, unsigned char *))
{
  return sub_78778(v2, a2);
}

void sub_7D6C8()
{
  v2._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t object = v0;
  sub_B3020(v2);
}

void sub_7D6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v14 + 176) = a12;
  *(void *)(v14 + 184) = a13;
  v16._uint64_t countAndFlagsBits = a11;
  v16._uint64_t object = v13;
  sub_B3020(v16);
}

uint64_t sub_7D71C(uint64_t a1, uint64_t a2)
{
  return OutputGenerationManifest.init(dialogPhase:_:)(v2, a2, v3);
}

uint64_t sub_7D74C()
{
  return v0;
}

uint64_t sub_7D760()
{
  return *(void *)(v0 + 64);
}

void sub_7D774(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_8C308(a1, v5, a2, a3, a4, (a5 - 32) | 0x8000000000000000);
}

uint64_t sub_7D794(uint64_t a1)
{
  return static DialogPhase.completion.getter(a1);
}

uint64_t sub_7D7C8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 344) = a2;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = 0;
  *(_OWORD *)(v2 + 96) = 0u;
  return sub_B2CA0();
}

uint64_t sub_7D808()
{
  return v0;
}

void sub_7D82C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_8C2F0(a1, (a3 - 32) | 0x8000000000000000, a2, (v4 - 32) | 0x8000000000000000, 0xD000000000000031, (v3 - 32) | 0x8000000000000000);
}

uint64_t sub_7D888()
{
  return v0;
}

void sub_7D898()
{
  v2._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t object = v0;
  sub_B3020(v2);
}

void sub_7D8C4(Swift::String a1@<X1:X0>, uint64_t a2@<X8>)
{
  a1._uint64_t object = (void *)((a2 - 32) | 0x8000000000000000);
  sub_B3020(a1);
}

void sub_7D8E4(uint64_t a1@<X8>)
{
  v3._uint64_t countAndFlagsBits = v1;
  v3._uint64_t object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_B3020(v3);
}

uint64_t sub_7D904()
{
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v4 = *(void *)(v1 + 168);
  sub_7468(v2, v5);
  return dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)(v3, v0, v5, v4);
}

uint64_t sub_7D948(uint64_t result)
{
  *(void *)(v1 + 96) = result;
  return result;
}

uint64_t sub_7D954(uint64_t result)
{
  *(void *)(v1 + 104) = result;
  return result;
}

uint64_t sub_7D960(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  return swift_task_dealloc();
}

uint64_t sub_7D978()
{
  return swift_task_dealloc();
}

void sub_7D990(Swift::String a1)
{
  sub_B3020(a1);
}

void sub_7D9A8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_8C308(a1, v4, a2, a3, 0xD000000000000031, (a4 - 32) | 0x8000000000000000);
}

uint64_t sub_7D9DC(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_7D9E8(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_7D9F4(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

uint64_t sub_7DA00()
{
  return sub_74F8(v0);
}

void sub_7DA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v15 + 216) = a12;
  *(void *)(v15 + 224) = a13;
  v17._uint64_t countAndFlagsBits = v13;
  v17._uint64_t object = v14;
  sub_B3020(v17);
}

uint64_t sub_7DA40()
{
  return swift_beginAccess();
}

uint64_t sub_7DA58()
{
  return v0 - 8;
}

uint64_t sub_7DAA0()
{
  sub_74F8(v0);
  return swift_task_dealloc();
}

uint64_t sub_7DACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 200) = a10;
  return v10 + 200;
}

uint64_t sub_7DADC()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t sub_7DAF4()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t sub_7DB0C()
{
  return sub_B2D30();
}

uint64_t sub_7DB30()
{
  return sub_B2D30();
}

void sub_7DB4C(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_8C2F0(v4, v5, a1, a2, a3, (a4 - 32) | 0x8000000000000000);
}

void sub_7DB70(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_8C2F0(v4, v5, a1, a2, a3, (a4 - 32) | 0x8000000000000000);
}

uint64_t sub_7DB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v13 + 160) = a12;
  *(void *)(v13 + 168) = a13;
  return v14 + 15;
}

void sub_7DBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v13 + 200) = a12;
  *(void *)(v13 + 208) = a13;
}

uint64_t sub_7DBC4()
{
  return v0;
}

uint64_t sub_7DBDC()
{
  return sub_B2BA0();
}

uint64_t sub_7DBF4(uint64_t result)
{
  *(void *)(v1 + 296) = result;
  return result;
}

void sub_7DC00()
{
  v3._uint64_t countAndFlagsBits = v0;
  v3._uint64_t object = v1;
  sub_B3020(v3);
}

uint64_t sub_7DC40()
{
  return *(void *)v0;
}

uint64_t sub_7DC4C()
{
  return sub_B35C0();
}

uint64_t sub_7DC64()
{
  return sub_B35C0();
}

uint64_t sub_7DC7C()
{
  return sub_B35C0();
}

void sub_7DC94(uint64_t a1)
{
  v3._uint64_t countAndFlagsBits = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  v3._uint64_t object = v1;
  sub_B3020(v3);
}

void sub_7DCAC(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_8C2F0(v4, v5, a1, a2, a3, (a4 - 32) | 0x8000000000000000);
}

void sub_7DCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v13 + 160) = a12;
  *(void *)(v13 + 168) = a13;
}

uint64_t sub_7DCE0(uint64_t a1)
{
  *(unsigned char *)(v1 + 56) = 0;
  *(void *)(v1 + 88) = a1;
  return sub_B22B0();
}

uint64_t sub_7DD00@<X0>(uint64_t a1@<X8>)
{
  return sub_A8B4(v2 + a1, v1);
}

id sub_7DD2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_7468(a1, a1[3]);
  if (sub_B1E20())
  {
    return sub_7DDF0(a2, a3, a4);
  }
  else
  {
    id v8 = [objc_allocWithZone((Class)SAUIButton) init];
    sub_7EDD4(a4, v8);
    sub_7EE44(a2, a3, v8);
    return v8;
  }
}

id sub_7DDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)SASTItemGroup) init];
  sub_3085C(0, (unint64_t *)&unk_EB9D0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = sub_65928(a1, a2, a3, 1);
  sub_7424(&qword_E7F20);
  uint64_t v8 = sub_7F190();
  *(_OWORD *)(v8 + 16) = xmmword_BEC80;
  *(void *)(v8 + 32) = v7;
  uint64_t v10 = v8;
  sub_B30C0();
  sub_7EFCC(v10, v6, &qword_EBA40, (SEL *)&selRef_setTemplateItems_);
  return v6;
}

uint64_t sub_7DEE0(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_B1F00();
  sub_7870();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_7A0C();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_B20F0();
  sub_7870();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_588C8();
  id v14 = [objc_allocWithZone((Class)SASettingOpenLocationServicesSettings) init];
  sub_7424(&qword_E7F20);
  uint64_t v15 = sub_7F190();
  *(_OWORD *)(v15 + 16) = xmmword_BEC80;
  uint64_t result = sub_B20C0();
  if (*(void *)(result + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v2, result + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v10);
    swift_bridgeObjectRelease();
    sub_B20E0();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v10);
    uint64_t v17 = sub_B1EF0();
    uint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
    uint64_t v20 = sub_7F190();
    *(_OWORD *)(v20 + 16) = xmmword_BEC80;
    *(void *)(v20 + 32) = v14;
    uint64_t v24 = v20;
    sub_B30C0();
    id v21 = v14;
    id v22 = sub_7DD2C(a2, v17, v19, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v15 + 32) = v22;
    sub_B30C0();

    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_7E0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  id v11 = [objc_allocWithZone((Class)SASTItemGroup) init];
  sub_3085C(0, (unint64_t *)&unk_EB9D0);
  sub_7424(&qword_E7F20);
  uint64_t v12 = sub_7F190();
  *(_OWORD *)(v12 + 16) = xmmword_BEC80;
  swift_bridgeObjectRetain();
  sub_FECC(a5);
  uint64_t v13 = sub_B1EE0();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = v13;
  sub_B30C0();
  id v14 = sub_65928(a1, a2, v12, 1);
  uint64_t v15 = sub_7F190();
  *(_OWORD *)(v15 + 16) = xmmword_BEC80;
  swift_bridgeObjectRetain();
  sub_FECC(a6);
  uint64_t v16 = sub_B1EE0();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 32) = v16;
  sub_B30C0();
  id v17 = sub_65928(a3, a4, v15, 1);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_C1CB0;
  *(void *)(v18 + 32) = v14;
  *(void *)(v18 + 40) = v17;
  uint64_t v24 = v18;
  sub_B30C0();
  id v19 = v14;
  id v20 = v17;
  sub_7EFCC(v24, v11, &qword_EBA40, (SEL *)&selRef_setTemplateItems_);
  uint64_t v21 = sub_7F190();
  *(_OWORD *)(v21 + 16) = xmmword_BEC80;
  *(void *)(v21 + 32) = v11;
  uint64_t v25 = v21;
  sub_B30C0();

  return v25;
}

uint64_t sub_7E2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v10 = [objc_allocWithZone((Class)SAUIConfirmationView) init];
  sub_7EF1C(a1, a2, v10);
  sub_7EF74(a3, a4, v10);
  sub_7424(&qword_E7F20);
  uint64_t v11 = sub_7F190();
  *(_OWORD *)(v11 + 16) = xmmword_BEC80;
  uint64_t v12 = self;
  sub_3085C(0, &qword_EBA48);
  id v13 = sub_7ED60();
  sub_7424((uint64_t *)&unk_EBA50);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_7F1A8(inited, (__n128)xmmword_BEC70);
  sub_B3480();
  inited[6].n128_u64[0] = (unint64_t)&type metadata for String;
  inited[4].n128_u64[1] = 0x6D7269666E6F43;
  inited[5].n128_u64[0] = 0xE700000000000000;
  uint64_t v15 = sub_B2EA0();
  sub_7EE9C(v15, v13);
  sub_7468(a5, a5[3]);
  uint64_t v16 = (void *)sub_B1E60();
  id v17 = [v12 runSiriKitExecutorCommandWithContext:v16 payload:v13];

  id v18 = [v12 wrapCommandInStartLocalRequest:v17];
  *(void *)(v11 + 32) = v18;
  sub_B30C0();
  sub_7EFCC(v11, v10, (uint64_t *)&unk_EA7E0, (SEL *)&selRef_setConfirmCommands_);
  uint64_t v19 = sub_7F190();
  *(_OWORD *)(v19 + 16) = xmmword_BEC80;
  id v20 = sub_7ED60();
  uint64_t v21 = (__n128 *)swift_initStackObject();
  sub_7F1A8(v21, (__n128)xmmword_BEC70);
  sub_B3480();
  v21[6].n128_u64[0] = (unint64_t)&type metadata for String;
  v21[4].n128_u64[1] = 0x656E696C636544;
  v21[5].n128_u64[0] = 0xE700000000000000;
  uint64_t v22 = sub_B2EA0();
  sub_7EE9C(v22, v20);
  sub_7468(a5, a5[3]);
  id v23 = (void *)sub_B1E60();
  id v24 = [v12 runSiriKitExecutorCommandWithContext:v23 payload:v20];

  id v25 = [v12 wrapCommandInStartLocalRequest:v24];
  *(void *)(v19 + 32) = v25;
  sub_B30C0();
  sub_7EFCC(v19, v10, (uint64_t *)&unk_EA7E0, (SEL *)&selRef_setDenyCommands_);
  id v26 = [objc_allocWithZone((Class)SAUIConfirmationOption) init];
  sub_5618(v10, (SEL *)&selRef_confirmText);
  if (v27)
  {
    NSString v28 = sub_B2F20();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v28 = 0;
  }
  objc_msgSend(v26, "setLabel:", v28, 1, 2);

  uint64_t v29 = sub_B2F50();
  sub_7F048(v29, v30, v26);
  if (sub_7F0AC(v10, (SEL *)&selRef_confirmCommands))
  {
    sub_7424((uint64_t *)&unk_EA7E0);
    v31.super.Class isa = sub_B3090().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v31.super.Class isa = 0;
  }
  [v26 setCommands:v31.super.isa];

  id v32 = [objc_allocWithZone((Class)SAUIConfirmationOption) init];
  sub_5618(v10, (SEL *)&selRef_denyText);
  if (v33)
  {
    NSString v34 = sub_B2F20();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v34 = 0;
  }
  [v32 setLabel:v34];

  uint64_t v35 = sub_B2F50();
  sub_7F048(v35, v36, v32);
  if (sub_7F0AC(v10, (SEL *)&selRef_denyCommands))
  {
    sub_7424((uint64_t *)&unk_EA7E0);
    v37.super.Class isa = sub_B3090().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v37.super.Class isa = 0;
  }
  [v32 setCommands:v37.super.isa];

  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_C1CB0;
  *(void *)(v38 + 32) = v26;
  *(void *)(v38 + 40) = v32;
  uint64_t v43 = v38;
  sub_B30C0();
  id v39 = v26;
  id v40 = v32;
  sub_7F10C(v43, v10);
  uint64_t v41 = sub_7F190();
  *(_OWORD *)(v41 + 16) = xmmword_BEC80;
  *(void *)(v41 + 32) = v10;
  uint64_t v44 = v41;
  sub_B30C0();

  return v44;
}

uint64_t sub_7E8CC(void *a1)
{
  uint64_t v35 = sub_B1F00();
  sub_7870();
  uint64_t v33 = v2;
  __chkstk_darwin(v3);
  sub_7A0C();
  uint64_t v31 = v5 - v4;
  uint64_t v30 = sub_B20F0();
  sub_7870();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_588C8();
  uint64_t v9 = sub_7424(&qword_E8B80);
  __chkstk_darwin(v9 - 8);
  sub_7A0C();
  uint64_t v12 = v11 - v10;
  uint64_t v34 = sub_B1590();
  sub_7870();
  uint64_t v32 = v13;
  __chkstk_darwin(v14);
  sub_7A0C();
  uint64_t v17 = v16 - v15;
  id v37 = [objc_allocWithZone((Class)SAUIAppPunchOut) init];
  sub_B1580();
  sub_B1570();
  sub_B1560();
  sub_7424((uint64_t *)&unk_EBA70);
  sub_B1530();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_C0AE0;
  sub_B1520();
  swift_bridgeObjectRetain();
  sub_B1520();
  swift_bridgeObjectRelease();
  sub_B1540();
  sub_B1550();
  uint64_t v18 = sub_B1700();
  id v20 = 0;
  if (sub_C844(v12, 1, v18) != 1)
  {
    sub_B16A0(v19);
    id v20 = v21;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v12, v18);
  }
  [v37 setPunchOutUri:v20];

  sub_7424(&qword_E7F20);
  uint64_t v22 = sub_7F190();
  *(_OWORD *)(v22 + 16) = xmmword_BEC80;
  uint64_t result = sub_B20C0();
  if (*(void *)(result + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v1, result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v30);
    swift_bridgeObjectRelease();
    sub_B20E0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v30);
    uint64_t v24 = sub_B1EF0();
    uint64_t v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v35);
    uint64_t v27 = sub_7F190();
    *(_OWORD *)(v27 + 16) = xmmword_BEC80;
    *(void *)(v27 + 32) = v37;
    uint64_t v38 = v27;
    sub_B30C0();
    id v28 = v37;
    id v29 = sub_7DD2C(a1, v24, v26, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v22 + 32) = v29;
    sub_B30C0();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v17, v34);
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_7ED60()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_B2F20();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithIdentifier:v1];

  return v2;
}

void sub_7EDD4(uint64_t a1, void *a2)
{
  sub_7424((uint64_t *)&unk_EA7E0);
  Class isa = sub_B3090().super.isa;
  [a2 setCommands:isa];
}

void sub_7EE44(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_B2F20();
  [a3 setText:v4];
}

void sub_7EE9C(uint64_t a1, void *a2)
{
  Class isa = sub_B2E60().super.isa;
  swift_bridgeObjectRelease();
  [a2 setUserData:isa];
}

void sub_7EF1C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_B2F20();
  [a3 setConfirmText:v4];
}

void sub_7EF74(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_B2F20();
  [a3 setDenyText:v4];
}

void sub_7EFCC(uint64_t a1, void *a2, uint64_t *a3, SEL *a4)
{
  sub_7424(a3);
  Class isa = sub_B3090().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a4, isa);
}

void sub_7F048(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_B2F20();
  swift_bridgeObjectRelease();
  [a3 setType:v4];
}

uint64_t sub_7F0AC(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  sub_7424((uint64_t *)&unk_EA7E0);
  uint64_t v4 = sub_B30A0();

  return v4;
}

void sub_7F10C(uint64_t a1, void *a2)
{
  sub_3085C(0, (unint64_t *)&unk_EBA60);
  Class isa = sub_B3090().super.isa;
  swift_bridgeObjectRelease();
  [a2 setAllConfirmationOptions:isa];
}

uint64_t sub_7F190()
{
  return swift_allocObject();
}

__n128 *sub_7F1A8(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

Swift::Int sub_7F1C4(uint64_t a1)
{
  return sub_7F510(a1, (void (*)(unsigned char *, uint64_t))sub_7FB3C);
}

Swift::Int sub_7F1DC(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_646C);
}

Swift::Int sub_7F1F4()
{
  return sub_805B8();
}

Swift::Int sub_7F200(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_CE84);
}

Swift::Int sub_7F218(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_19008);
}

Swift::Int sub_7F230(uint64_t a1)
{
  return sub_7F510(a1, (void (*)(unsigned char *, uint64_t))sub_7F89C);
}

Swift::Int sub_7F248()
{
  return sub_80414();
}

Swift::Int sub_7F268()
{
  return sub_8048C();
}

Swift::Int sub_7F274(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_220F8);
}

Swift::Int sub_7F28C(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_229BC);
}

Swift::Int sub_7F2A4(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_2218C);
}

Swift::Int sub_7F2BC()
{
  return sub_80504();
}

Swift::Int sub_7F2C8()
{
  return sub_84514();
}

Swift::Int sub_7F2E4()
{
  return sub_7F400();
}

Swift::Int sub_7F308()
{
  return sub_7F400();
}

Swift::Int sub_7F320(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_69C84);
}

Swift::Int sub_7F338(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_69B68);
}

Swift::Int sub_7F350(uint64_t a1)
{
  return sub_7F510(a1, (void (*)(unsigned char *, uint64_t))sub_7FC18);
}

Swift::Int sub_7F368(char a1)
{
  return sub_80680(0, a1);
}

Swift::Int sub_7F374()
{
  return sub_84514();
}

Swift::Int sub_7F390(uint64_t a1)
{
  return sub_7F510(a1, (void (*)(unsigned char *, uint64_t))sub_7F5E4);
}

Swift::Int sub_7F3A8()
{
  return sub_844E0();
}

Swift::Int sub_7F3C8()
{
  return sub_844D8();
}

Swift::Int sub_7F3D4()
{
  return sub_844D8();
}

Swift::Int sub_7F3E0()
{
  return sub_844E0();
}

Swift::Int sub_7F400()
{
  return sub_B38E0();
}

Swift::Int sub_7F448(uint64_t a1)
{
  return sub_7F510(a1, (void (*)(unsigned char *, uint64_t))sub_7F980);
}

Swift::Int sub_7F460(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_A3CC8);
}

Swift::Int sub_7F478(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_A9624);
}

Swift::Int sub_7F490(uint64_t a1)
{
  return sub_7F4A8(a1, (void (*)(uint64_t))sub_AAA74);
}

Swift::Int sub_7F4A8(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_B38E0();
}

Swift::Int sub_7F4F8(uint64_t a1)
{
  return sub_7F510(a1, (void (*)(unsigned char *, uint64_t))sub_7FA38);
}

Swift::Int sub_7F510(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_84638();
  a2(v5, a1);
  return sub_B38E0();
}

Swift::Int sub_7F558(Swift::UInt32 a1)
{
  return sub_B38E0();
}

void sub_7F598(uint64_t a1, Swift::UInt32 a2)
{
}

uint64_t sub_7F5C0()
{
  return sub_844D0();
}

uint64_t sub_7F5CC()
{
  return sub_844C0();
}

uint64_t sub_7F5E4()
{
  sub_84534();
  switch(v0)
  {
    case 1:
    case 2:
      sub_8446C();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7F6B4(uint64_t a1, uint64_t a2)
{
  return sub_7FD98(a1, a2, (void (*)(uint64_t))sub_19008);
}

uint64_t sub_7F6CC()
{
  sub_84534();
  switch(v0)
  {
    case 1:
    case 2:
    case 5:
      sub_8446C();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7F7C8()
{
  sub_84478();
  switch(v0)
  {
    case 1:
      sub_844F8();
      break;
    case 2:
      sub_84590();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7F86C(uint64_t a1, uint64_t a2)
{
  return sub_7FD98(a1, a2, (void (*)(uint64_t))sub_CE84);
}

uint64_t sub_7F884()
{
  return sub_844C0();
}

uint64_t sub_7F89C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
    case 3:
      sub_8446C();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7F980(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
      sub_8446C();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FA38(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_84650();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FB18()
{
  return sub_844D0();
}

uint64_t sub_7FB24()
{
  return sub_B2FF0();
}

uint64_t sub_7FB3C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
      sub_84650();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FBF0()
{
  return sub_B2FF0();
}

uint64_t sub_7FC00(uint64_t a1, uint64_t a2)
{
  return sub_7FD98(a1, a2, (void (*)(uint64_t))sub_646C);
}

uint64_t sub_7FC18()
{
  sub_84534();
  switch(v0)
  {
    case 2:
    case 3:
      sub_8446C();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FCE8(uint64_t a1, uint64_t a2)
{
  return sub_7FD98(a1, a2, (void (*)(uint64_t))sub_A3CC8);
}

uint64_t sub_7FD00(uint64_t a1, char a2)
{
  if (a2) {
    sub_74584();
  }
  else {
    sub_8446C();
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FD80(uint64_t a1, uint64_t a2)
{
  return sub_7FD98(a1, a2, (void (*)(uint64_t))sub_AAA74);
}

uint64_t sub_7FD98(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FDF0()
{
  return sub_844F0();
}

uint64_t sub_7FE10()
{
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FF7C(uint64_t a1, char a2)
{
  if (!a2) {
    sub_8460C();
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7FFF0()
{
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_800E0()
{
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_801D8()
{
  sub_84478();
  switch(v0)
  {
    case 2:
      sub_844F8();
      break;
    case 4:
      sub_84590();
      break;
    default:
      break;
  }
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_8027C()
{
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_802E4()
{
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_8035C()
{
  return sub_844F0();
}

uint64_t sub_8037C()
{
  sub_B2FF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_803F4()
{
  return sub_844E8();
}

Swift::Int sub_80414()
{
  return sub_B38E0();
}

Swift::Int sub_8048C()
{
  return sub_B38E0();
}

Swift::Int sub_80504()
{
  return sub_B38E0();
}

Swift::Int sub_80570(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_2218C);
}

Swift::Int sub_80588(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_220F8);
}

Swift::Int sub_805A0(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_229BC);
}

Swift::Int sub_805B8()
{
  sub_845D0();
  if (!v0) {
    sub_8460C();
  }
  sub_84620();
  swift_bridgeObjectRelease();
  return sub_B38E0();
}

Swift::Int sub_80630(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_69C84);
}

Swift::Int sub_80648()
{
  return sub_844E8();
}

Swift::Int sub_80668(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_AAA74);
}

Swift::Int sub_80680(uint64_t a1, char a2)
{
  if (a2) {
    sub_74584();
  }
  sub_B2FF0();
  swift_bridgeObjectRelease();
  return sub_B38E0();
}

Swift::Int sub_80718(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_A3CC8);
}

Swift::Int sub_80730(uint64_t a1, uint64_t a2)
{
  return sub_808D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_7FC18);
}

Swift::Int sub_80748(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_646C);
}

Swift::Int sub_80760()
{
  return sub_80948();
}

Swift::Int sub_80770(uint64_t a1, uint64_t a2)
{
  return sub_808D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_7FB3C);
}

Swift::Int sub_80788()
{
  return sub_80948();
}

Swift::Int sub_807A0()
{
  return sub_844C8();
}

Swift::Int sub_807AC(uint64_t a1, uint64_t a2)
{
  return sub_808D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_7FA38);
}

Swift::Int sub_807C4(uint64_t a1, uint64_t a2)
{
  return sub_808D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_7F980);
}

Swift::Int sub_807DC(uint64_t a1, uint64_t a2)
{
  return sub_808D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_7F89C);
}

Swift::Int sub_807F4()
{
  return sub_844B8();
}

Swift::Int sub_8080C(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_CE84);
}

Swift::Int sub_80824(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_69B68);
}

Swift::Int sub_8083C(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_A9624);
}

Swift::Int sub_80854(uint64_t a1, uint64_t a2)
{
  return sub_8086C(a1, a2, (void (*)(uint64_t))sub_19008);
}

Swift::Int sub_8086C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return sub_B38E0();
}

Swift::Int sub_808C0(uint64_t a1, uint64_t a2)
{
  return sub_808D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_7F5E4);
}

Swift::Int sub_808D8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_B38B0();
  a3(v6, a2);
  return sub_B38E0();
}

Swift::Int sub_80924()
{
  return sub_844B8();
}

Swift::Int sub_8093C()
{
  return sub_844C8();
}

Swift::Int sub_80948()
{
  return sub_B38E0();
}

Swift::Int sub_80994()
{
  sub_845D0();
  sub_B38D0(v0);
  return sub_B38E0();
}

uint64_t sub_809D0(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_B3620())
  {
    uint64_t v8 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = sub_B34F0();
      }
      else
      {
        uint64_t v9 = *(void *)(a1 + 8 * v8);
        swift_retain();
      }
      uint64_t v10 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      uint64_t v12 = v9;
      sub_3751C((uint64_t)&v12, a2, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      ++v8;
      if (v10 == v7) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_80B00(uint64_t a1, void *a2)
{
  v7._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBED0;
  v7._uint64_t object = a2;
  Swift::Int v4 = sub_B3680(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_80B54()
{
  return sub_8037C();
}

Swift::Int sub_80B70()
{
  return sub_80414();
}

uint64_t sub_80B8C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_80B00(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_80BBC()
{
  return sub_B1C80();
}

uint64_t sub_80C4C()
{
  sub_7FDC();
  v1[2] = v2;
  v1[3] = v0;
  sub_7424(&qword_E76F0);
  v1[4] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_80CD8()
{
  uint64_t v1 = v0[3];
  sub_845C0();
  sub_B34C0(33);
  swift_bridgeObjectRelease();
  uint64_t v2 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_state;
  v0[5] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_state;
  if (*(unsigned char *)(v1 + v2)) {
    v3._uint64_t countAndFlagsBits = 0x6574656C706D6F63;
  }
  else {
    v3._uint64_t countAndFlagsBits = 0x6572676F72506E69;
  }
  if (*(unsigned char *)(v1 + v2)) {
    uint64_t v4 = (void *)0xE900000000000064;
  }
  else {
    uint64_t v4 = (void *)0xEA00000000007373;
  }
  v0[6] = OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_logger;
  v3._uint64_t object = v4;
  sub_B3020(v3);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_AB5C();
  sub_8C308(v5, v6, v7, v8, v9, v10);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + v2))
  {
    uint64_t v11 = v0[3];
    uint64_t v12 = sub_B3160();
    sub_3DFCC(v12);
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = 0;
    v13[3] = 0;
    v13[4] = v11;
    swift_retain();
    uint64_t v14 = sub_987A0();
    v0[11] = v14;
    uint64_t v15 = (void *)swift_task_alloc();
    v0[12] = v15;
    uint64_t v16 = sub_B1FD0();
    *uint64_t v15 = v0;
    v15[1] = sub_81560;
    uint64_t v17 = v0[2];
    return Task<>.value.getter(v17, v14, v16);
  }
  else
  {
    uint64_t v18 = (void *)swift_task_alloc();
    v0[7] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_80F58;
    return sub_7CB0();
  }
}

uint64_t sub_80F58()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 104) = v3;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_81028()
{
  sub_7FDC();
  if (*(unsigned char *)(v0 + 104) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_8112C;
    return sub_819A0();
  }
  else
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_executor)
                   + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_callbackState);
    *(void *)(v0 + 72) = v3;
    swift_retain();
    return _swift_task_switch(sub_812B4, v3, 0);
  }
}

uint64_t sub_8112C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_811F4()
{
  sub_AC48();
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + *(void *)(v0 + 40)) = 1;
  type metadata accessor for DBSiriKitEventSender();
  swift_initStaticObject();
  sub_A1178(132, *(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_name), 0, 0);
  sub_A1D18();
  swift_release();
  swift_task_dealloc();
  sub_ABD0();
  return v2();
}

uint64_t sub_812B4()
{
  sub_7FDC();
  *(unsigned char *)(v0 + 105) = *(unsigned char *)(*(void *)(v0 + 72)
                                  + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_didCallback);
  swift_release();
  sub_AC10();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_81328()
{
  sub_7FDC();
  if (*(unsigned char *)(v0 + 105))
  {
    sub_8308C();
    swift_task_dealloc();
    sub_ABD0();
    return v1();
  }
  else
  {
    sub_7A1C();
    sub_ABC4();
    sub_AB5C();
    sub_8C308(v3, v4, v5, v6, v7, v8);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_81438;
    return sub_8233C();
  }
}

uint64_t sub_81438()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_81500()
{
  sub_7FDC();
  sub_8308C();
  swift_task_dealloc();
  sub_ABD0();
  return v0();
}

uint64_t sub_81560()
{
  sub_AC48();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_81688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a1;
  *(void *)(v4 + 56) = a4;
  return _swift_task_switch(sub_816A8, 0, 0);
}

uint64_t sub_816A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_7FDC();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v12 + 64) = v13;
  *uint64_t v13 = v12;
  v13[1] = sub_8173C;
  return static Task<>.sleep(nanoseconds:)(60000000, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_8173C()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_AB94();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_81818()
{
  sub_7FDC();
  sub_8308C();
  sub_ABD0();
  return v0();
}

uint64_t sub_81870()
{
  sub_845C0();
  sub_B34C0(36);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v9._uint64_t countAndFlagsBits = sub_B3860();
  sub_B3020(v9);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_AB5C();
  sub_8C308(v0, v1, v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  sub_8308C();
  swift_errorRelease();
  sub_ABD0();
  return v6();
}

uint64_t sub_819A0()
{
  sub_7FDC();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_B17F0();
  sub_84450(v3);
  v1[5] = v4;
  v1[6] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_81A30()
{
  sub_7FDC();
  uint64_t v1 = v0[3];
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C308(v2, v3, v4, v5, 0xD000000000000019, v6);
  sub_7468((void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_templatingProvider), *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_templatingProvider + 24));
  v0[7] = sub_67F00();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_81B38;
  return sub_7CB0();
}

uint64_t sub_81B38()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 88) = v3;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_81C08()
{
  sub_AC48();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_B17E0();
  char v4 = sub_52888();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_81CDC;
  char v6 = *(unsigned char *)(v0 + 88);
  return sub_52CB0(v6, v4);
}

uint64_t sub_81CDC()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_AB94();
  *char v4 = v3;
  *(void *)(v6 + 80) = v5;
  swift_task_dealloc();
  swift_release();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_81DC4()
{
  sub_46E44();
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for DBSiriKitEventSender();
  swift_initStaticObject();
  sub_A1178(132, *(unsigned char *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_name), 0, 0);
  sub_A1D18();
  swift_release();
  sub_B1F60();
  swift_release();
  swift_task_dealloc();
  sub_ABD0();
  return v2();
}

uint64_t sub_81EA0(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C308(v5, v6, v7, v8, 0xD000000000000011, v9);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_allFlowSpecs);
  uint64_t v11 = v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_flowParams;
  sub_A8B4(v3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_flowParams + 24, (uint64_t)v33);
  sub_A8B4(v11 + 160, (uint64_t)v31);
  sub_A8B4(v11 + 240, (uint64_t)v29);
  uint64_t v12 = qword_E6BA8;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_F4E78;
  sub_83C8C();
  swift_retain();
  uint64_t v14 = sub_B2EA0();
  type metadata accessor for DBSiriKitEventSender();
  uint64_t inited = swift_initStaticObject();
  type metadata accessor for OfflineStateProvider();
  uint64_t v16 = swift_allocObject();
  sub_A918((uint64_t)v31, v32);
  sub_2B68C();
  __chkstk_darwin(v17);
  sub_7A0C();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  sub_A918((uint64_t)v29, v30);
  sub_2B68C();
  __chkstk_darwin(v22);
  uint64_t v24 = sub_84498(v23, v28);
  v25(v24);
  uint64_t v26 = sub_83E74(a1, v10, v33, v13, v14, *v20, *v2, inited, v16);
  sub_74F8((uint64_t)v29);
  sub_74F8((uint64_t)v31);
  *(void *)&v33[0] = v26;
  type metadata accessor for DailyBriefingFlow();
  sub_84404(&qword_E76D8, (void (*)(uint64_t))type metadata accessor for DailyBriefingFlow);
  sub_B1F90();
  return swift_release();
}

uint64_t sub_821A0()
{
  uint64_t v1 = v0;
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C308(v2, v3, v4, v5, 0xD000000000000012, v6);
  sub_83C8C();
  uint64_t v7 = sub_B2EA0();
  unint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_allFlowSpecs);
  v13[0] = v7;
  swift_bridgeObjectRetain_n();
  sub_809D0(v8, v7, v13);
  swift_bridgeObjectRelease();
  uint64_t v9 = v13[0];
  sub_1F7B4(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_flowParams, (uint64_t)v13);
  type metadata accessor for DBSiriKitEventSender();
  uint64_t inited = swift_initStaticObject();
  type metadata accessor for OfflineFlow();
  uint64_t v11 = swift_allocObject();
  v13[0] = sub_83CD8(v9, v13, inited, v11);
  sub_84404(&qword_E76D0, (void (*)(uint64_t))type metadata accessor for OfflineFlow);
  sub_B1F90();
  return swift_release();
}

uint64_t sub_8233C()
{
  sub_7FDC();
  v1[3] = v0;
  uint64_t v2 = sub_B2A50();
  sub_84450(v2);
  v1[5] = v3;
  v1[6] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_823CC()
{
  sub_46E44();
  uint64_t v1 = v0[3];
  sub_7A1C();
  NSString v2 = sub_B2F20();
  v0[7] = v2;
  uint64_t v3 = swift_allocObject();
  v0[8] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_824EC;
  v6.n128_u64[0] = 8.0;
  return withTimeout<A>(seconds:operation:)(v0 + 11, &unk_EBC00, v3, &type metadata for Bool, v6);
}

uint64_t sub_824EC()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_825D0()
{
  sub_7FDC();

  uint64_t v1 = *(unsigned __int8 *)(v0 + 88);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_8263C()
{
  uint64_t v1 = v0[10];
  swift_release();
  v0[2] = v1;
  swift_errorRetain();
  sub_7424(&qword_E7F40);
  char v2 = swift_dynamicCast();
  uint64_t v3 = (void *)v0[7];
  if (v2)
  {
    uint64_t v5 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v6 = v0[4];
    swift_errorRelease();
    sub_3264C();
    sub_B34C0(26);
    swift_bridgeObjectRelease();
    v20._uint64_t countAndFlagsBits = sub_B2F50();
    sub_B3020(v20);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 0x6F2064656D697420;
    v21._uint64_t object = (void *)0xEB000000002E7475;
    sub_B3020(v21);
    sub_ABC4();
    sub_52848();
    sub_8C308(v7, 0xED0000206E6F6974, v8, v9, 0xD000000000000026, v10);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_3264C();
    sub_B34C0(28);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = sub_B2F50();
    sub_B3020(v22);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0x6465726F72726520;
    v23._uint64_t object = (void *)0xED00002E74756F20;
    sub_B3020(v23);
    sub_ABC4();
    sub_845A8();
    sub_8C308(v11, v12, v13, v14, v15, v16);

    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17(0);
}

uint64_t sub_828C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_7424(&qword_EBC08);
  v3[6] = swift_task_alloc();
  uint64_t v4 = sub_B3330();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_829B4, 0, 0);
}

uint64_t sub_829B4()
{
  sub_46E44();
  id v1 = [self defaultCenter];
  sub_B3340();

  sub_B3320();
  uint64_t v4 = (uint64_t (*)(void))((char *)&dword_EBC10 + dword_EBC10);
  char v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *char v2 = v0;
  v2[1] = sub_82AC0;
  sub_AC10();
  return v4();
}

uint64_t sub_82AC0()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *char v2 = v1;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_82B88()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = sub_B1510();
  if (sub_C844(v1, 1, v2) == 1)
  {
    uint64_t v3 = sub_8451C();
    v4(v3);
    sub_3264C();
    sub_B34C0(32);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = sub_B2F50();
    sub_B3020(v21);
    swift_bridgeObjectRelease();
    sub_7A1C();
    sub_B3020(v22);
    sub_ABC4();
    sub_52848();
    sub_8C308(v5, 0xED0000206E6F6974, v6, v7, 0xD000000000000026, v8);
    swift_bridgeObjectRelease();
    char v9 = 0;
  }
  else
  {
    sub_3264C();
    sub_B34C0(25);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = sub_B2F50();
    sub_B3020(v23);
    swift_bridgeObjectRelease();
    v24._uint64_t countAndFlagsBits = 0x7265676769727420;
    v24._uint64_t object = (void *)0xEA00000000006465;
    sub_B3020(v24);
    sub_ABC4();
    sub_845A8();
    sub_8C308(v10, v11, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_8451C();
    v17(v16);
    sub_83C2C(v1);
    char v9 = 1;
  }
  **(unsigned char **)(v0 + 24) = v9;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_ABD0();
  return v18();
}

uint64_t sub_82DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v5 = sub_B3330();
  uint64_t v6 = sub_84404(&qword_EBC18, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_82EB8;
  return dispatch thunk of AsyncIteratorProtocol.next()(a1, v5, v6);
}

uint64_t sub_82EB8()
{
  sub_AC48();
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_AB94();
  void *v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (*(void *)(v3 + 24))
    {
      swift_getObjectType();
      uint64_t v7 = sub_B3110();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    return _swift_task_switch(sub_82FF0, v7, v9);
  }
  else
  {
    sub_ABD0();
    return v10();
  }
}

uint64_t sub_82FF0()
{
  sub_7FDC();
  *(void *)(v0 + 16) = *(void *)(v0 + 48);
  sub_7424(&qword_E7F40);
  swift_dynamicCast();
  swift_willThrowTypedImpl();
  sub_ABD0();
  return v1();
}

uint64_t sub_8308C()
{
  uint64_t v1 = sub_7424(&qword_E76F0);
  __chkstk_darwin(v1 - 8);
  sub_7A0C();
  uint64_t v2 = sub_B3160();
  sub_3DFCC(v2);
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v0;
  swift_retain();
  sub_98660();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_executor)
                 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_nextFlowSpec);
  if (v4)
  {
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    swift_retain();
    sub_B34C0(34);
    uint64_t v5 = swift_bridgeObjectRelease();
    unint64_t v21 = 0xD00000000000001ALL;
    unint64_t v22 = 0x80000000000BA410;
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v4 + 240))(v18, v5);
    uint64_t v6 = v19;
    uint64_t v7 = v20;
    sub_7468(v18, v19);
    v23._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    sub_B3020(v23);
    swift_bridgeObjectRelease();
    sub_74F8((uint64_t)v18);
    v24._uint64_t countAndFlagsBits = 0x2E776F6C6620;
    v24._uint64_t object = (void *)0xE600000000000000;
    sub_B3020(v24);
    unint64_t v8 = v22;
    sub_ABC4();
    sub_8C308(v9, v8, v10, v11, 0xD000000000000013, 0x80000000000BA3F0);
    swift_bridgeObjectRelease();
    sub_81EA0(v4);
    return swift_release();
  }
  else
  {
    sub_7A1C();
    sub_ABC4();
    sub_52848();
    sub_8C308(v13, v14, v15, v16, 0xD000000000000013, v17);
    return sub_821A0();
  }
}

uint64_t sub_83310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  uint64_t v5 = sub_B2D30();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return _swift_task_switch(sub_833D0, 0, 0);
}

uint64_t sub_833D0()
{
  sub_AC48();
  uint64_t v1 = v0[4];
  (*(void (**)(void, uint64_t, void))(v0[6] + 16))(v0[7], v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_logger, v0[5]);
  sub_845C0();
  sub_B34C0(25);
  swift_bridgeObjectRelease();
  v0[2] = 0xD000000000000016;
  v0[3] = 0x80000000000BA430;
  uint64_t v2 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_executor)
                 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin10DBExecutor_callbackState);
  v0[8] = v2;
  swift_retain();
  return _swift_task_switch(sub_834B4, v2, 0);
}

uint64_t sub_834B4()
{
  sub_7FDC();
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(*(void *)(v0 + 64)
                                 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21ExecutorCallbackState_didCallback);
  swift_release();
  sub_AC10();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_83528()
{
  sub_46E44();
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v0 + 72)) {
    v4._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v4._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 72)) {
    uint64_t v5 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v5 = (void *)0xE500000000000000;
  }
  v4._uint64_t object = v5;
  sub_B3020(v4);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 46;
  v14._uint64_t object = (void *)0xE100000000000000;
  sub_B3020(v14);
  unint64_t v6 = *(void *)(v0 + 24);
  sub_ABC4();
  sub_52848();
  sub_8C308(v7, v6, v8, v9, 0xD000000000000013, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  sub_ABD0();
  return v11();
}

uint64_t sub_83640()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1FA58(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_flowParams);
  swift_bridgeObjectRelease();
  swift_release();
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin12GreetingFlow_templatingProvider);
  return v0;
}

uint64_t sub_836E4()
{
  sub_83640();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_8373C()
{
  return type metadata accessor for GreetingFlow();
}

uint64_t type metadata accessor for GreetingFlow()
{
  uint64_t result = qword_EBAA8;
  if (!qword_EBAA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_8378C()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GreetingFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8392CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GreetingFlow.State()
{
  return &type metadata for GreetingFlow.State;
}

unint64_t sub_83968()
{
  unint64_t result = qword_EBBD0[0];
  if (!qword_EBBD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_EBBD0);
  }
  return result;
}

uint64_t sub_839B4()
{
  return sub_80BBC();
}

uint64_t sub_839D8()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_A7BC;
  return sub_80C4C();
}

uint64_t sub_83A74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GreetingFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_83AB4()
{
  sub_AC48();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DEA8(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_AB58;
  uint64_t v3 = sub_84544();
  return sub_83310(v3, v4, v5, v6);
}

uint64_t sub_83B4C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_83B8C()
{
  sub_AC48();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_1DEA8(v5);
  void *v6 = v7;
  v6[1] = sub_A7BC;
  return sub_828C0(v2, v4, v3);
}

uint64_t sub_83C2C(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_EBC08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_83C8C()
{
  unint64_t result = qword_EBC20;
  if (!qword_EBC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_EBC20);
  }
  return result;
}

uint64_t sub_83CD8(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = type metadata accessor for DBSiriKitEventSender();
  uint64_t v15 = &off_DF120;
  uint64_t v16 = sub_84404(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v13 = a3;
  uint64_t v8 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_B2D30();
  uint64_t v10 = sub_B378(v9, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a4 + v8, v10, v9);
  *(unsigned char *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_state) = 0;
  uint64_t v11 = a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_name;
  *(void *)(v11 + 24) = &type metadata for CommonSpecs;
  *(void *)(v11 + 32) = &off_DE228;
  *(unsigned char *)uint64_t v11 = 8;
  memcpy((void *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_flowParams), a2, 0x140uLL);
  sub_1FAAC(&v13, (_OWORD *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_siriKitEventSender));
  *(void *)(a4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin11OfflineFlow_specExecutionStatus) = a1;
  return a4;
}

uint64_t sub_83E74(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v39 = type metadata accessor for TemplatingProvider();
  id v40 = &off_DDFE8;
  v38[0] = a6;
  uint64_t v36 = type metadata accessor for DailyBriefingOutputPublisher();
  id v37 = &off_DEDD0;
  v35[0] = a7;
  uint64_t v33 = type metadata accessor for OfflineStateProvider();
  uint64_t v34 = &off_DEAE0;
  v32[0] = a9;
  type metadata accessor for DailyBriefingFlow();
  uint64_t v17 = swift_allocObject();
  sub_A918((uint64_t)v38, v39);
  sub_2B68C();
  __chkstk_darwin();
  sub_7A0C();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  sub_84580();
  v21();
  sub_A918((uint64_t)v35, v36);
  sub_2B68C();
  __chkstk_darwin();
  sub_84498(v22, a8);
  sub_84580();
  v23();
  sub_A918((uint64_t)v32, v33);
  sub_2B68C();
  __chkstk_darwin();
  sub_7A0C();
  uint64_t v26 = (uint64_t *)(v25 - v24);
  sub_84580();
  v27();
  uint64_t v28 = sub_840A8(a1, a2, a3, a4, a5, *v20, *v9, v31, *v26, v17);
  sub_74F8((uint64_t)v32);
  sub_74F8((uint64_t)v35);
  sub_74F8((uint64_t)v38);
  return v28;
}

uint64_t sub_840A8(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = type metadata accessor for DBSiriKitEventSender();
  uint64_t v34 = &off_DF120;
  uint64_t v35 = sub_84404(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v32 = a8;
  uint64_t v30 = type metadata accessor for TemplatingProvider();
  uint64_t v31 = &off_DDFE8;
  *(void *)&long long v29 = a6;
  uint64_t v27 = type metadata accessor for DailyBriefingOutputPublisher();
  uint64_t v28 = &off_DEDD0;
  *(void *)&long long v26 = a7;
  uint64_t v24 = type metadata accessor for OfflineStateProvider();
  uint64_t v25 = &off_DEAE0;
  *(void *)&long long v23 = a9;
  uint64_t v18 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_B2D30();
  uint64_t v20 = sub_B378(v19, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a10 + v18, v20, v19);
  *(unsigned char *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_state) = 0;
  uint64_t v21 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_dialogService;
  sub_B1ED0();
  swift_allocObject();
  *(void *)(a10 + v21) = sub_B1EC0();
  *(void *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_currentFlowSpec) = a1;
  *(void *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_allFlowSpecs) = a2;
  sub_B3B0(a3, a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_aceService);
  *(void *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_knowledgeStore) = a4;
  *(void *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_specExecutionStatus) = a5;
  sub_B3B0(&v29, a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_templatingProvider);
  sub_B3B0(&v26, a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_outputPublisher);
  sub_1FAAC(&v32, (_OWORD *)(a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_siriKitEventSender));
  sub_B3B0(&v23, a10 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin17DailyBriefingFlow_offlineStateProvider);
  return a10;
}

uint64_t sub_8432C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_8436C()
{
  sub_AC48();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DEA8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_AB58;
  uint64_t v3 = sub_84544();
  return sub_81688(v3, v4, v5, v6);
}

uint64_t sub_84404(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_84450(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return a1 - 8;
}

char *sub_84498@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

Swift::Int sub_844B8()
{
  return sub_80948();
}

uint64_t sub_844C0()
{
  return sub_B2FF0();
}

Swift::Int sub_844C8()
{
  return sub_80948();
}

uint64_t sub_844D0()
{
  return sub_B2FF0();
}

Swift::Int sub_844D8()
{
  return sub_7F400();
}

Swift::Int sub_844E0()
{
  return sub_7F400();
}

Swift::Int sub_844E8()
{
  return sub_80948();
}

uint64_t sub_844F0()
{
  return sub_B2FF0();
}

Swift::Int sub_84514()
{
  return sub_7F400();
}

uint64_t sub_8451C()
{
  return v0;
}

uint64_t sub_84544()
{
  return v0;
}

uint64_t sub_8455C()
{
  return sub_B2FF0();
}

uint64_t sub_845D0()
{
  return sub_B38B0();
}

uint64_t sub_84620()
{
  return sub_B2FF0();
}

uint64_t sub_84638()
{
  return sub_B38B0();
}

const char *sub_84664(uint64_t a1, uint64_t a2, unsigned int a3)
{
  switch((unsigned __int16)a3 >> 12)
  {
    case 1:
      sub_7424(&qword_EBC40);
      uint64_t v7 = sub_84A68();
      *(_OWORD *)(v7 + 16) = xmmword_C0AE0;
      *(void *)(v7 + 32) = a1;
      *(void *)(v7 + 88) = &type metadata for Int;
      *(void *)(v7 + 56) = &type metadata for Int;
      *(void *)(v7 + 64) = a2;
      uint64_t result = "UpcomingRemindersCount=%{signpost.telemetry:number1,public}@ OverdueRemindersCount=%{signpost.telemetry:n"
               "umber2,public}@ enableTelemetry=YES";
      break;
    case 2:
      sub_7424(&qword_EBC40);
      uint64_t v8 = sub_84A68();
      *(_OWORD *)(v8 + 16) = xmmword_C0AE0;
      *(void *)(v8 + 32) = a1 & 1;
      *(void *)(v8 + 88) = &type metadata for Int;
      *(void *)(v8 + 56) = &type metadata for Int;
      *(void *)(v8 + 64) = a2;
      uint64_t result = "ShouldMentionAQI=%{signpost.telemetry:number1,public}@ CountOfExpectedConditions=%{signpost.telemetry:num"
               "ber2,public}@ enableTelemetry=YES";
      break;
    case 3:
      sub_7424(&qword_EBC40);
      uint64_t v9 = (__n128 *)sub_84A50();
      sub_84A40(v9, (unint64_t)&type metadata for Int, (__n128)xmmword_BEC70);
      uint64_t result = "CalendarEventCount=%{signpost.telemetry:number1,public}@ enableTelemetry=YES";
      break;
    case 4:
      sub_7424(&qword_EBC40);
      uint64_t v10 = (__n128 *)sub_84A50();
      sub_84A40(v10, (unint64_t)&type metadata for Int, (__n128)xmmword_BEC70);
      uint64_t result = "ImportantEventCount=%{signpost.telemetry:number1,public}@ enableTelemetry=YES";
      break;
    case 5:
      char v13 = a3;
      int v14 = (a3 >> 8) & 0xF;
      sub_7424(&qword_EBC40);
      uint64_t v15 = sub_84A68();
      *(_OWORD *)(v15 + 16) = xmmword_C0AE0;
      if (v13)
      {
        uint64_t v16 = 0x65736963657270;
        uint64_t v17 = 0x64656C6261736964;
        if (!(a1 | a2)) {
          uint64_t v17 = 0x6E776F6E6B6E75;
        }
        unint64_t v18 = 0xE800000000000000;
        if (!(a1 | a2)) {
          unint64_t v18 = 0xE700000000000000;
        }
        if (v13 == 1)
        {
          unint64_t v19 = 0xE700000000000000;
        }
        else
        {
          uint64_t v16 = v17;
          unint64_t v19 = v18;
        }
      }
      else
      {
        unint64_t v19 = 0xE600000000000000;
        uint64_t v16 = 0x657372616F63;
      }
      *(void *)(v15 + 32) = v16;
      *(void *)(v15 + 40) = v19;
      *(void *)(v15 + 88) = &type metadata for Int;
      *(void *)(v15 + 56) = &type metadata for String;
      *(void *)(v15 + 64) = (v14 + 1);
      uint64_t result = "LocationAccess=%{signpost.telemetry:string1,public}@ CoordinateStatus=%{signpost.telemetry:number1,public"
               "}@ enableTelemetry=YES";
      break;
    case 6:
      sub_7424(&qword_EBC40);
      uint64_t v20 = (__n128 *)sub_84A50();
      sub_84A40(v20, (unint64_t)&type metadata for Int, (__n128)xmmword_BEC70);
      uint64_t result = "RemindersCount=%{signpost.telemetry:number1,public}@ enableTelemetry=YES";
      break;
    case 7:
      sub_7424(&qword_EBC40);
      uint64_t v11 = (__n128 *)sub_84A50();
      sub_84A40(v11, (unint64_t)&type metadata for Int, (__n128)xmmword_BEC70);
      uint64_t result = "CountOfEntries=%{signpost.telemetry:number1,public}@ enableTelemetry=YES";
      break;
    case 8:
      sub_7424(&qword_EBC40);
      uint64_t v21 = (__n128 *)sub_84A50();
      sub_84A40(v21, (unint64_t)&type metadata for Double, (__n128)xmmword_BEC70);
      uint64_t result = "ETA=%{signpost.telemetry:number1,public}@ enableTelemetry=YES";
      break;
    case 9:
      sub_7424(&qword_EBC40);
      uint64_t v12 = sub_84A50();
      *(_OWORD *)(v12 + 16) = xmmword_BEC70;
      *(void *)(v12 + 56) = &type metadata for String;
      *(void *)(v12 + 32) = a1;
      *(void *)(v12 + 40) = a2;
      swift_bridgeObjectRetain();
      uint64_t result = "Error=%{signpost.telemetry:string1,public}@ enableTelemetry=YES";
      break;
    case 10:
      sub_7424(&qword_EBC40);
      uint64_t v22 = sub_84A50();
      *(_OWORD *)(v22 + 16) = xmmword_BEC70;
      *(void *)(v22 + 56) = &type metadata for String;
      *(void *)(v22 + 32) = 0x73736563637553;
      *(void *)(v22 + 40) = 0xE700000000000000;
      uint64_t result = "Status=%{signpost.telemetry:string1,public}@ enableTelemetry=YES";
      break;
    default:
      sub_7424(&qword_EBC40);
      uint64_t v5 = sub_84A68();
      *(_OWORD *)(v5 + 16) = xmmword_C0AE0;
      *(void *)(v5 + 32) = a1;
      *(void *)(v5 + 88) = &type metadata for Int;
      *(void *)(v5 + 56) = &type metadata for Int;
      *(void *)(v5 + 64) = a2 + 1;
      uint64_t result = "UpcomingEventsCount=%{signpost.telemetry:number1,public}@ CalendarPreprocessingResultType=%{signpost.tele"
               "metry:number2,public}@ enableTelemetry=YES";
      break;
  }
  return result;
}

__n128 *sub_84A40@<X0>(__n128 *result@<X0>, unint64_t a2@<X8>, __n128 a3@<Q0>)
{
  result[1] = a3;
  result[3].n128_u64[1] = a2;
  result[2].n128_u64[0] = v3;
  return result;
}

uint64_t sub_84A50()
{
  return swift_allocObject();
}

uint64_t sub_84A68()
{
  return swift_allocObject();
}

uint64_t sub_84A80()
{
  uint64_t v0 = sub_B1930();
  sub_7870();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_B1950();
  sub_7870();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B1920();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for Calendar.Component.hour(_:), v0);
  uint64_t v12 = sub_B1940();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  if ((unint64_t)v12 < 4) {
    return 0;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
  if ((v12 & 0xFFFFFFFFFFFFFFFELL) == 4) {
    return 1;
  }
  if ((unint64_t)(v12 - 6) < 4) {
    return 2;
  }
  if (v14 == 10) {
    return 3;
  }
  if ((v12 & 0xFFFFFFFFFFFFFFFCLL) == 0xC) {
    return 4;
  }
  if (v14 == 16) {
    return 5;
  }
  if (v12 < 18) {
    goto LABEL_20;
  }
  if ((unint64_t)v12 < 0x14) {
    return 6;
  }
  if (v12 == 20) {
    return 7;
  }
  if ((unint64_t)(v12 - 21) >= 3)
  {
LABEL_20:
    if (qword_E6D58 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_B2D30();
    sub_B378(v15, (uint64_t)qword_F5360);
    sub_8C2F0(0xD000000000000021, 0x80000000000BAAA0, 0xD000000000000021, 0x80000000000BA0A0, 0xD000000000000018, 0x80000000000BA0D0);
    swift_beginAccess();
    static FatalError.fatalErrorClosure();
  }
  return 8;
}

void destroy for DBSignpost(uint64_t a1)
{
}

uint64_t initializeWithCopy for DBSignpost(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DBSignpost(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void **)(a2 + 24);
  id v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v3;
  id v5 = v3;

  return a1;
}

__n128 initializeWithTake for DBSignpost(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for DBSignpost(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v3 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for DBSignpost(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DBSignpost(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DBSignpost()
{
  return &type metadata for DBSignpost;
}

uint64_t sub_84ED0(char a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  sub_B2DB0();
  sub_7870();
  uint64_t v35 = v5;
  uint64_t v36 = v6;
  __chkstk_darwin(v5);
  sub_7A0C();
  uint64_t v34 = v8 - v7;
  uint64_t v9 = sub_B32B0();
  sub_7870();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_7A0C();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_B32A0();
  __chkstk_darwin(v16);
  sub_7A0C();
  sub_B2E10();
  sub_7870();
  uint64_t v32 = v18;
  uint64_t v33 = v17;
  __chkstk_darwin(v17);
  sub_7A0C();
  uint64_t v21 = v20 - v19;
  sub_3085C(0, (unint64_t *)&qword_E95B0);
  sub_B2E00();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_85EBC((unint64_t *)&qword_EAD60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_7424(&qword_EAD68);
  sub_85F04((unint64_t *)&qword_EAD70, &qword_EAD68);
  sub_B3440();
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v15, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v9);
  sub_7A1C();
  uint64_t v22 = (void *)sub_B32E0();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a3;
  *(unsigned char *)(v23 + 32) = a4;
  *(void *)(v23 + 40) = a5;
  *(unsigned char *)(v23 + 48) = a1;
  aBlock[4] = sub_85E90;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_8554C;
  aBlock[3] = &unk_DE720;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = a5;
  sub_B2DD0();
  sub_85EBC(&qword_E9BD0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_7424(&qword_E9BD8);
  sub_85F04(&qword_E9BE0, &qword_E9BD8);
  sub_B3440();
  sub_B32D0();
  _Block_release(v24);

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v21, v33);
  return swift_release();
}

unint64_t sub_852C8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4 = a4;
  sub_84664(a2, a3, a4);
  uint64_t v8 = v7;
  int64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    unsigned int v25 = v4;
    uint64_t v28 = _swiftEmptyArrayStorage;
    sub_859F4(0, v9, 0);
    uint64_t v10 = v8 + 32;
    do
    {
      sub_B218(v10, (uint64_t)v27);
      sub_B218((uint64_t)v27, (uint64_t)v26);
      uint64_t v11 = sub_B2FA0();
      uint64_t v13 = v12;
      sub_74F8((uint64_t)v27);
      uint64_t v14 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_859F4(0, v14[2] + 1, 1);
        uint64_t v14 = v28;
      }
      unint64_t v16 = v14[2];
      unint64_t v15 = v14[3];
      if (v16 >= v15 >> 1)
      {
        sub_859F4((char *)(v15 > 1), v16 + 1, 1);
        uint64_t v14 = v28;
      }
      uint64_t v14[2] = v16 + 1;
      uint64_t v17 = &v14[2 * v16];
      v17[4] = v11;
      void v17[5] = v13;
      v10 += 32;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    unsigned int v4 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
  sub_B32F0();
  sub_84664(a2, a3, v4);
  swift_bridgeObjectRelease();
  sub_7424(&qword_EBC48);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_C0AE0;
  *(void *)(v18 + 56) = &type metadata for String;
  unint64_t v19 = sub_85A14();
  *(void *)(v18 + 64) = v19;
  unint64_t v20 = v14[2];
  if (v20)
  {
    uint64_t v21 = v14[4];
    unint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t result = 0xE000000000000000;
  }
  *(void *)(v18 + 32) = v21;
  *(void *)(v18 + 40) = result;
  *(void *)(v18 + 96) = &type metadata for String;
  *(void *)(v18 + 104) = v19;
  if (v20 <= 1)
  {
    uint64_t v24 = 0;
    unint64_t v23 = 0xE000000000000000;
    goto LABEL_17;
  }
  if (v14[2] >= 2uLL)
  {
    uint64_t v24 = v14[6];
    unint64_t v23 = v14[7];
    swift_bridgeObjectRetain();
LABEL_17:
    swift_bridgeObjectRelease();
    *(void *)(v18 + 72) = v24;
    *(void *)(v18 + 80) = v23;
    sub_B2CC0();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_8554C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_85590()
{
  uint64_t v0 = sub_B2D00();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B3310();
  sub_B2CF0();
  sub_B2CC0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_856EC()
{
  sub_3085C(0, &qword_EBC58);
  sub_7A1C();
  uint64_t result = sub_B3370();
  qword_F5198 = result;
  return result;
}

uint64_t sub_85764()
{
  sub_3085C(0, &qword_EBC58);
  sub_7A1C();
  uint64_t result = sub_B3370();
  qword_F51A0 = result;
  return result;
}

uint64_t sub_857D8()
{
  sub_3085C(0, &qword_EBC58);
  sub_86250();
  sub_7A1C();
  uint64_t result = sub_86230();
  qword_F51A8 = result;
  return result;
}

uint64_t sub_85830()
{
  sub_3085C(0, &qword_EBC58);
  sub_7A1C();
  uint64_t result = sub_B3370();
  qword_F51B0 = result;
  return result;
}

uint64_t sub_858A4()
{
  sub_3085C(0, &qword_EBC58);
  sub_7A1C();
  uint64_t result = sub_B3370();
  qword_F51B8 = result;
  return result;
}

uint64_t sub_85918()
{
  sub_3085C(0, &qword_EBC58);
  sub_86250();
  sub_7A1C();
  uint64_t result = sub_86230();
  qword_F51C0 = result;
  return result;
}

size_t sub_85970(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_86074(a1, a2, a3, *v3, &qword_EBC70, (uint64_t (*)(void))&type metadata accessor for SpeakableString, (void (*)(uint64_t, uint64_t, char *))sub_5FC6C, (void (*)(uint64_t, uint64_t, char *))sub_60144);
  uint64_t *v3 = result;
  return result;
}

char *sub_859D4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_85C90(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_859F4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_85D74(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

unint64_t sub_85A14()
{
  unint64_t result = qword_EBC50;
  if (!qword_EBC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EBC50);
  }
  return result;
}

size_t sub_85A60(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_86074(a1, a2, a3, *v3, &qword_EA2E0, type metadata accessor for CalendarEvent, (void (*)(uint64_t, uint64_t, char *))sub_5FBB8, (void (*)(uint64_t, uint64_t, char *))sub_6012C);
  uint64_t *v3 = result;
  return result;
}

size_t sub_85AC4(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_86074(a1, a2, a3, *v3, &qword_EBC78, (uint64_t (*)(void))&type metadata accessor for URL, (void (*)(uint64_t, uint64_t, char *))sub_5FDD4, (void (*)(uint64_t, uint64_t, char *))sub_602D4);
  uint64_t *v3 = result;
  return result;
}

void *sub_85B28(void *a1, int64_t a2, char a3)
{
  size_t result = sub_85F88(a1, a2, a3, *v3, &qword_EA2A0, (void (*)(uint64_t, uint64_t, void *))sub_5FDEC, (void (*)(uint64_t, uint64_t, void *))sub_602EC);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

void *sub_85B78(void *a1, int64_t a2, char a3)
{
  size_t result = sub_85F88(a1, a2, a3, *v3, &qword_EBC68, (void (*)(uint64_t, uint64_t, void *))sub_5FDEC, (void (*)(uint64_t, uint64_t, void *))sub_602EC);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

size_t sub_85BC8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_86074(a1, a2, a3, *v3, &qword_EBC60, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier, (void (*)(uint64_t, uint64_t, char *))sub_5FE64, (void (*)(uint64_t, uint64_t, char *))sub_6050C);
  uint64_t *v3 = result;
  return result;
}

size_t sub_85C2C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_86074(a1, a2, a3, *v3, &qword_E8E28, (uint64_t (*)(void))type metadata accessor for CurrentWeatherForecast, (void (*)(uint64_t, uint64_t, char *))sub_5FE7C, (void (*)(uint64_t, uint64_t, char *))sub_60524);
  uint64_t *v3 = result;
  return result;
}

char *sub_85C90(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_7424(&qword_EBC40);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_5FCE0(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_60220((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_85D74(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_7424(&qword_E7F38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_5FC84(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_60170((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_85E58()
{
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_85E90()
{
  return sub_85590();
}

uint64_t sub_85EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_85EB4()
{
  return swift_release();
}

uint64_t sub_85EBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_85F04(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20D6C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_85F54(void *a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_85F88(a1, a2, a3, a4, &qword_EA2A0, (void (*)(uint64_t, uint64_t, void *))sub_5FDEC, (void (*)(uint64_t, uint64_t, void *))sub_602EC);
}

void *sub_85F88(void *result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *), void (*a7)(uint64_t, uint64_t, void *))
{
  char v10 = (char)result;
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    sub_7424(a5);
    unint64_t v15 = (void *)swift_allocObject();
    size_t v16 = j__malloc_size(v15);
    v15[2] = v13;
    v15[3] = 2 * v16 - 64;
  }
  else
  {
    unint64_t v15 = &_swiftEmptyArrayStorage;
  }
  uint64_t v17 = v15 + 4;
  uint64_t v18 = a4 + 32;
  if (v10)
  {
    a6(v18, v13, v17);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a7(v18, v13, v17);
  }
  swift_release();
  return v15;
}

size_t sub_86074(size_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(uint64_t, uint64_t, char *), void (*a8)(uint64_t, uint64_t, char *))
{
  char v12 = result;
  if (a3)
  {
    unint64_t v13 = *(void *)(a4 + 24);
    int64_t v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v14 = a2;
      }
    }
  }
  else
  {
    int64_t v14 = a2;
  }
  uint64_t v15 = *(void *)(a4 + 16);
  if (v14 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = v14;
  }
  if (!v16)
  {
    unint64_t v20 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_7424(a5);
  uint64_t v17 = *(void *)(a6(0) - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v20 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v20);
  if (!v18)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v19 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_24;
  }
  v20[2] = v15;
  void v20[3] = 2 * ((uint64_t)(result - v19) / v18);
LABEL_19:
  uint64_t v22 = *(void *)(a6(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (char *)v20 + v23;
  uint64_t v25 = a4 + v23;
  if (v12)
  {
    a7(v25, v15, v24);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a8(v25, v15, v24);
  }
  swift_release();
  return (size_t)v20;
}

uint64_t sub_86230()
{
  return sub_B3370();
}

unint64_t sub_86250()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_86264(uint64_t a1)
{
  uint64_t v2 = sub_B3220();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unsigned int v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_895A8(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_86318(uint64_t a1)
{
  sub_8C120();
  uint64_t v2 = sub_B3220();
  uint64_t v9 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = a1 + i;
      sub_89758(&v8, *(unsigned __int8 *)(v5 + 32));
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v6 = v2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_863B4(uint64_t a1)
{
  uint64_t v2 = sub_B3220();
  uint64_t v9 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_8C070(v4, (uint64_t)v7);
      sub_89DE8((uint64_t)v8, (uint64_t)v7);
      sub_8C0CC((uint64_t)v8);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v5 = v2;
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_8645C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v3 = v6;
    BOOL v6 = v6 || v5 == v2;
    if (v6) {
      return v3;
    }
  }
  __break(1u);
  return result;
}

char *sub_864BC()
{
  type metadata accessor for MapsSuggestionFetcher();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_86AE0();
  qword_F51C8 = v0;
  return result;
}

uint64_t sub_864FC(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = v1;
  return _swift_task_switch(sub_8651C, v1, 0);
}

uint64_t sub_8651C()
{
  sub_AC48();
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = v1[14];
  if (!v2)
  {
    sub_7468(v1 + 15, v1[18]);
    uint64_t v2 = sub_87054();
  }
  v1[14] = v2;
  swift_retain();
  swift_release();
  uint64_t v3 = v1[14];
  v0[12] = v3;
  if (v3)
  {
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    uint64_t v5 = sub_7424(&qword_E7D08);
    uint64_t v6 = sub_7424(&qword_E7F40);
    *uint64_t v4 = v0;
    v4[1] = sub_86680;
    return Task.value.getter(v0 + 2, v3, v5, v6, &protocol self-conformance witness table for Error);
  }
  else
  {
    uint64_t v7 = (_OWORD *)v0[10];
    v7[2] = 0u;
    v7[3] = 0u;
    *uint64_t v7 = 0u;
    v7[1] = 0u;
    sub_ABD0();
    return v8();
  }
}

uint64_t sub_86680()
{
  sub_AC48();
  uint64_t v2 = *v1;
  sub_2B6A4();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v6 = sub_867EC;
  }
  else {
    uint64_t v6 = sub_867C0;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_867C0()
{
  long long v1 = *(_OWORD *)(v0 + 32);
  long long v2 = *(_OWORD *)(v0 + 48);
  long long v3 = *(_OWORD *)(v0 + 64);
  uint64_t v4 = *(_OWORD **)(v0 + 80);
  *uint64_t v4 = *(_OWORD *)(v0 + 16);
  v4[1] = v1;
  v4[2] = v2;
  v4[3] = v3;
  sub_ABD0();
  return v5();
}

uint64_t sub_867EC()
{
  sub_7FDC();
  sub_7A1C();
  sub_ABC4();
  sub_8C2F0(v1, v2, 0xD000000000000034, v3, 0x29286863746566, 0xE700000000000000);
  swift_errorRelease();
  uint64_t v4 = *(_OWORD **)(v0 + 80);
  v4[2] = 0u;
  v4[3] = 0u;
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  sub_ABD0();
  return v5();
}

uint64_t sub_868AC()
{
  if (*(void *)(v0 + 112))
  {
    swift_retain();
    sub_7424(&qword_E7D08);
    sub_7424(&qword_E7F40);
    sub_B3180();
    swift_release();
  }
  *(void *)(v0 + 112) = 0;

  return swift_release();
}

uint64_t sub_8693C()
{
  swift_release();
  sub_74F8(v0 + 120);
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin21MapsSuggestionFetcher_logger;
  sub_B2D30();
  sub_1DECC();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_869B4()
{
  sub_8693C();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_869E0()
{
  return type metadata accessor for MapsSuggestionFetcher();
}

uint64_t type metadata accessor for MapsSuggestionFetcher()
{
  uint64_t result = qword_EBCB0;
  if (!qword_EBCB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_86A30()
{
  uint64_t result = sub_B2D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_86AE0()
{
  swift_defaultActor_initialize();
  *((void *)v0 + 14) = 0;
  *((void *)v0 + 18) = &unk_DE8B0;
  *((void *)v0 + 19) = &off_DE8C0;
  uint64_t v1 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin21MapsSuggestionFetcher_logger;
  if (qword_E6D80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B2D30();
  sub_B378(v2, (uint64_t)qword_F53D8);
  sub_1DECC();
  (*(void (**)(char *))(v3 + 16))(&v0[v1]);
  return v0;
}

void sub_86BAC()
{
  id v0 = [self forDevice];
  id v1 = [v0 withoutTracker];

  sub_7424(&qword_EBDE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_BEC70;
  id v3 = objc_allocWithZone((Class)MapsSuggestionsBlockFilter);
  id v8 = sub_893B4((uint64_t)sub_86D44, 0);
  sub_3085C(0, &qword_EBDE8);
  sub_8C010();
  id v4 = v8;
  sub_B3480();

  sub_863B4(inited);
  Class isa = sub_B3200().super.isa;
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v1, "withPreFilters:", isa, v8);

  id v7 = [v6 build];
  if (v7) {
    qword_F51D0 = (uint64_t)v7;
  }
  else {
    __break(1u);
  }
}

id sub_86D48()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for DailyBriefingMapsSink()) init];
  qword_F51D8 = (uint64_t)result;
  return result;
}

uint64_t sub_86D7C()
{
  uint64_t v0 = sub_B32B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_B32A0();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_B2E10();
  __chkstk_darwin(v5 - 8);
  sub_3085C(0, (unint64_t *)&qword_E95B0);
  sub_B2DE0();
  v7[1] = _swiftEmptyArrayStorage;
  sub_6A544();
  sub_7424(&qword_EAD68);
  sub_6A594();
  sub_B3440();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = sub_B32E0();
  qword_F51E0 = result;
  return result;
}

uint64_t sub_86F8C()
{
  uint64_t v0 = sub_B2D30();
  sub_18970(v0, qword_F51E8);
  uint64_t v1 = sub_B378(v0, (uint64_t)qword_F51E8);
  if (qword_E6D80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B378(v0, (uint64_t)qword_F53D8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_87054()
{
  uint64_t v0 = sub_7424(&qword_E76F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_B3160();
  sub_AA40((uint64_t)v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  if (sub_C844((uint64_t)v2, 1, v3) == 1)
  {
    sub_1DC94((uint64_t)v2);
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    sub_B3150();
    sub_1DECC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v2, v3);
    if (*(void *)(v4 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v5 = sub_B3110();
      uint64_t v6 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }
  }
  sub_7424(&qword_E7D08);
  if (v6 | v5)
  {
    v10[0] = 0;
    v10[1] = 0;
    void v10[2] = v5;
    v10[3] = v6;
  }
  return swift_task_create();
}

uint64_t sub_87218(uint64_t a1)
{
  v1[13] = a1;
  uint64_t v2 = sub_B2D00();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_872D8, 0, 0);
}

uint64_t sub_872D8()
{
  if (qword_E6CF8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_B2D30();
  *(void *)(v0 + 136) = sub_B378(v1, (uint64_t)qword_F51E8);
  sub_7A1C();
  sub_ABC4();
  sub_8C2A4();
  sub_8C308(v2, v3, v4, v5, v6, v7);
  if (qword_E6D40 != -1) {
    swift_once();
  }
  id v8 = (id)qword_F5318;
  sub_B2CE0();
  sub_B3300();
  sub_B2CD0();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v9;
  sub_7424(&qword_EBDB0);
  *uint64_t v9 = v0;
  v9[1] = sub_874C4;
  sub_AC10();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_874C4()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_2B6A4();
  *uint64_t v5 = v4;
  *(void *)(v6 + 152) = v0;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_875A4()
{
  unint64_t v1 = v0[12];
  v0[20] = v1;
  if (v1)
  {
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_B3620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  sub_852C8(v0[16], v2, 0, 0x7000u);
  v0[21] = sub_88000();
  unint64_t v3 = (void *)swift_task_alloc();
  v0[22] = v3;
  void *v3 = v0;
  v3[1] = sub_876F0;
  return sub_880CC();
}

uint64_t sub_876F0()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v2 = *(void **)(v1 + 168);
  uint64_t v3 = *v0;
  sub_2B6A4();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_877F0()
{
  sub_AC48();
  uint64_t v1 = v0[13];
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  sub_12DD0((uint64_t)(v0 + 2), v1);
  swift_task_dealloc();
  sub_ABD0();
  return v2();
}

uint64_t sub_87880()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  sub_B34C0(42);
  v0[10] = 0;
  v0[11] = 0xE000000000000000;
  sub_7A1C();
  v16._uint64_t countAndFlagsBits = 0xD000000000000028;
  sub_B3020(v16);
  sub_B35C0();
  sub_ABC4();
  sub_8C2A4();
  sub_8C2F0(v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  sub_AC10();
  sub_852C8(v10, v11, v12, 0x7000u);
  sub_89368();
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  sub_ABD0();
  return v13();
}

void sub_87A08(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_EBDD8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  if (qword_E6CE0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_E6CE8;
  id v6 = (id)qword_F51D0;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (id)qword_F51D8;
  GEOGetUserTransportTypePreference();
  uint64_t v8 = GEOTransportTypeFromGEOTransportTypePreference();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_8BF74;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_87F5C;
  aBlock[3] = &unk_DE7C0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  if (qword_E6CF0 != -1) {
    swift_once();
  }
  [v6 oneShotTopSuggestionsForSink:v7 count:3 transportType:v8 callback:v11 onQueue:qword_F51E0];
  _Block_release(v11);
}

uint64_t sub_87C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2D30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    if (qword_E6CF8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_B378(v4, (uint64_t)qword_F51E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_B34C0(42);
    swift_bridgeObjectRelease();
    uint64_t v11 = 0xD000000000000028;
    unint64_t v12 = 0x80000000000BAF20;
    swift_getErrorValue();
    v13._uint64_t countAndFlagsBits = sub_B3860();
    sub_B3020(v13);
    swift_bridgeObjectRelease();
    sub_8C2F0(v11, v12, 0xD000000000000034, 0x80000000000BAC90, 0x6B736154656B616DLL, 0xEA00000000002928);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v11 = a2;
    sub_7424(&qword_EBDD8);
    return sub_B3120();
  }
  else
  {
    if (qword_E6CF8 != -1) {
      swift_once();
    }
    sub_B378(v4, (uint64_t)qword_F51E8);
    sub_8C308(0xD00000000000002DLL, 0x80000000000BAEF0, 0xD000000000000034, 0x80000000000BAC90, 0x6B736154656B616DLL, 0xEA00000000002928);
    uint64_t v11 = a1;
    swift_bridgeObjectRetain();
    sub_7424(&qword_EBDD8);
    return sub_B3130();
  }
}

uint64_t sub_87F5C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_3085C(0, (unint64_t *)&qword_E8B78);
    uint64_t v4 = sub_B30A0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_88000()
{
  id v0 = [objc_allocWithZone((Class)MapsSuggestionsRealNetworkRequester) init];
  id v1 = [self sharedPredictor];
  id v2 = [objc_allocWithZone((Class)MapsSuggestionsETARequirements) initWithMaxAge:300.0 maxDistance:150.0 minAccuracy:150.0];
  id v3 = [objc_allocWithZone((Class)MapsSuggestionsETARequester) initWithNetworkRequester:v0 transportModePredictor:v1 requirements:v2];

  return v3;
}

uint64_t sub_880CC()
{
  sub_7FDC();
  v0[12] = v1;
  v0[13] = v2;
  v0[11] = v3;
  uint64_t v4 = sub_B2D30();
  v0[14] = v4;
  v0[15] = *(void *)(v4 - 8);
  v0[16] = swift_task_alloc();
  v0[17] = swift_task_alloc();
  sub_AC10();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_88198()
{
  if (qword_E6CF8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = sub_B378(v3, (uint64_t)qword_F51E8);
  v0[18] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[19] = v6;
  v0[20] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v3);
  sub_B34C0(43);
  swift_bridgeObjectRelease();
  if (v4)
  {
    unint64_t v7 = v0[12];
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_B3620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v0[17];
  uint64_t v11 = v0[14];
  uint64_t v10 = v0[15];
  v0[10] = v8;
  v44._uint64_t countAndFlagsBits = sub_B37C0();
  sub_B3020(v44);
  swift_bridgeObjectRelease();
  sub_7A1C();
  sub_B3020(v45);
  sub_8C2D8();
  sub_8C320(v12, v13, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v0[21] = v18;
  v0[22] = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v18(v9, v11);
  if (!v4) {
    goto LABEL_20;
  }
  unint64_t v19 = v0[12];
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_B3620()) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v20)
  {
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    sub_7A1C();
    sub_8C2D8();
    sub_8C308(v34, v35, v36, v37, v38, v39);
    goto LABEL_21;
  }
LABEL_10:
  unint64_t v21 = v0[12] & 0xC000000000000001;
  sub_21550(0, v21 == 0, v19);
  if (v21) {
    id v22 = (id)sub_B34F0();
  }
  else {
    id v22 = *(id *)(v19 + 32);
  }
  unint64_t v23 = v22;
  v0[23] = v22;
  swift_bridgeObjectRelease();
  id v24 = (id)MapsSuggestionsMostRecentLocation();
  v0[24] = v24;
  if (v24)
  {
    uint64_t v25 = v24;
    long long v26 = (void *)v0[13];
    uint64_t v27 = (void *)swift_allocObject();
    v0[25] = v27;
    v27[2] = v26;
    void v27[3] = v23;
    v27[4] = v25;
    unint64_t v42 = (char *)&dword_E9A10 + dword_E9A10;
    id v28 = v26;
    id v29 = v23;
    id v30 = v25;
    uint64_t v31 = (void *)swift_task_alloc();
    v0[26] = v31;
    void *v31 = v0;
    v31[1] = sub_885AC;
    v32.n128_u64[0] = 2.0;
    return ((uint64_t (*)(void *, void *, unint64_t, unint64_t, __n128))v42)(&unk_EBDD0, v27, 0xD000000000000022, 0x80000000000BAD60, v32);
  }

LABEL_21:
  id v40 = (_OWORD *)v0[11];
  swift_task_dealloc();
  swift_task_dealloc();
  void v40[2] = 0u;
  v40[3] = 0u;
  *id v40 = 0u;
  v40[1] = 0u;
  sub_ABD0();
  return v41();
}

uint64_t sub_885AC()
{
  sub_AC48();
  char v3 = v2;
  sub_7FC4();
  uint64_t v5 = v4;
  sub_2B6A4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_2B6A4();
  *uint64_t v8 = v7;
  *(void *)(v5 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(unsigned char *)(v5 + 224) = v3 & 1;
  }
  sub_AC10();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_886AC()
{
  int v1 = *(unsigned __int8 *)(v0 + 224);
  char v2 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 152))(v3, *(void *)(v0 + 144), v4);
  sub_B34C0(47);
  swift_bridgeObjectRelease();
  if (v1) {
    v5._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v5._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v1) {
    uint64_t v6 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v6 = (void *)0xE500000000000000;
  }
  v5._uint64_t object = v6;
  sub_B3020(v5);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_8C320(v7, 0x80000000000BADD0, v8, v9, 0xD000000000000022, 0x80000000000BAD60);
  swift_bridgeObjectRelease();
  v2(v3, v4);
  uint64_t v10 = *(void **)(v0 + 184);
  uint64_t v11 = *(void **)(v0 + 192);
  sub_88C58(v10, v0 + 16);
  sub_8C2C0();
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v13 = *(void *)(v0 + 72);

  uint64_t v14 = *(void *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v14 = v19;
  *(_OWORD *)(v14 + 16) = v18;
  *(_OWORD *)(v14 + 32) = v17;
  *(void *)(v14 + 48) = v12;
  *(void *)(v14 + 56) = v13;
  sub_ABD0();
  return v15();
}

uint64_t sub_88858()
{
  swift_release();
  sub_7A1C();
  sub_ABC4();
  sub_8C2F0(0xD000000000000016, v1, v2, v3, v4, 0x80000000000BAD60);
  if (qword_E6E00 != -1) {
    swift_once();
  }
  sub_84ED0(1, qword_F55B8, unk_F55C0, byte_F55C8, (void *)qword_F55D0);
  swift_errorRelease();
  Swift::String v5 = (void *)v0[23];
  uint64_t v6 = (void *)v0[24];
  sub_88C58(v5, (uint64_t)(v0 + 2));
  sub_8C2C0();
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[9];

  uint64_t v9 = v0[11];
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v9 = v14;
  *(_OWORD *)(v9 + 16) = v13;
  *(_OWORD *)(v9 + 32) = v12;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  sub_ABD0();
  return v10();
}

uint64_t sub_889B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_889D8, 0, 0);
}

uint64_t sub_889D8()
{
  sub_AC48();
  unint64_t v1 = (void *)v0[3];
  type metadata accessor for ETARequesterService();
  uint64_t v2 = swift_allocObject();
  v0[6] = v2;
  uint64_t v3 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin19ETARequesterService_logger;
  uint64_t v4 = qword_E6D80;
  id v5 = v1;
  if (v4 == -1)
  {
    id v6 = v5;
  }
  else
  {
    swift_once();
    id v6 = (id)v0[3];
  }
  uint64_t v7 = sub_B2D30();
  sub_B378(v7, (uint64_t)qword_F53D8);
  sub_1DECC();
  (*(void (**)(uint64_t))(v8 + 16))(v2 + v3);
  *(void *)(v2 + 16) = v6;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_88B24;
  uint64_t v11 = v0[4];
  uint64_t v10 = v0[5];
  return sub_71878(v11, v10);
}

uint64_t sub_88B24()
{
  sub_7FDC();
  sub_7FC4();
  sub_2B6A4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 64) = v3;
  swift_task_dealloc();
  sub_AC10();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_88BF4()
{
  sub_7FDC();
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  sub_ABD0();
  return v3();
}

void sub_88C58(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  id v4 = [a1 ETAForKey:@"MapsSuggestionsETAKey"];
  if (!v4)
  {
    if (qword_E6CF8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_B2D30();
    sub_B378(v21, (uint64_t)qword_F51E8);
    uint64_t v22 = 0x6620746F6E6E6143;
    unint64_t v23 = 0xEF41544520646E69;
    goto LABEL_23;
  }
  uint64_t v5 = v4;
  [v4 seconds];
  double v7 = v6;

  if (v7 <= 600.0)
  {
    if (qword_E6CF8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_B2D30();
    sub_B378(v24, (uint64_t)qword_F51E8);
    sub_B34C0(45);
    v30._uint64_t countAndFlagsBits = 0x20666F20415445;
    v30._uint64_t object = (void *)0xE700000000000000;
    sub_B3020(v30);
    sub_B31F0();
    v31._uint64_t countAndFlagsBits = 0x7365726874203C20;
    v31._uint64_t object = (void *)0xEE00203A646C6F68;
    sub_B3020(v31);
    sub_B31F0();
    v32._uint64_t countAndFlagsBits = 0xD000000000000014;
    v32._uint64_t object = (void *)0x80000000000BAE20;
    sub_B3020(v32);
    sub_8C2F0(0, 0xE000000000000000, 0xD000000000000034, 0x80000000000BAC90, 0xD000000000000016, 0x80000000000BAE00);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (qword_E6C60 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_F50A8;
  swift_bridgeObjectRetain();
  char v9 = sub_8645C((uint64_t)[v2 type], v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    if (qword_E6CF8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_B2D30();
    sub_B378(v25, (uint64_t)qword_F51E8);
    uint64_t v22 = 0xD000000000000015;
    long long v26 = "EntryType not allowed";
    goto LABEL_22;
  }
  id v10 = [v2 ETAForKey:@"MapsSuggestionsETAKey"];
  if (!v10
    || (uint64_t v11 = v10,
        LODWORD(v12) = [v10 transportType],
        v11,
        (sub_616E4(v12, (uint64_t)[v2 type]) & 1) == 0))
  {
    if (qword_E6CF8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_B2D30();
    sub_B378(v27, (uint64_t)qword_F51E8);
    uint64_t v22 = 0xD000000000000024;
    long long v26 = "TransportType not present or allowed";
LABEL_22:
    unint64_t v23 = (unint64_t)(v26 - 32) | 0x8000000000000000;
LABEL_23:
    sub_8C2F0(v22, v23, 0xD000000000000034, 0x80000000000BAC90, 0xD000000000000016, 0x80000000000BAE00);
LABEL_24:
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    uint64_t v12 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    id v28 = 0;
    uint64_t v2 = 0;
    double v7 = 0.0;
    goto LABEL_25;
  }
  id v13 = [v2 undecoratedTitle];
  uint64_t v14 = sub_B2F50();
  uint64_t v16 = v15;

  id v17 = [v2 ETAForKey:@"MapsSuggestionsETAKey"];
  if (v17)
  {
    uint64_t v18 = sub_8BE74(v17);
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  id v28 = [v2 type];
  uint64_t v12 = v12;
  id v29 = v2;
LABEL_25:
  *(double *)a2 = v7;
  *(void *)(a2 + 8) = v14;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v28;
  *(void *)(a2 + 56) = v2;
}

unint64_t sub_89138()
{
  return 0xD000000000000035;
}

unint64_t sub_8918C()
{
  return 0xD00000000000001ALL;
}

BOOL sub_891AC(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBF20;
  v6._uint64_t object = a2;
  Swift::Int v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_89200@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_891AC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_89238@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_8918C();
  *a1 = 0xD00000000000001ALL;
  a1[1] = v3;
  return result;
}

unint64_t sub_89268()
{
  return 0xD000000000000035;
}

uint64_t sub_89288()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_892C0()
{
  sub_AC48();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  void *v3 = v0;
  v3[1] = sub_7091C;
  return sub_87218(v2);
}

unint64_t sub_89368()
{
  unint64_t result = qword_EBDB8;
  if (!qword_EBDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_EBDB8);
  }
  return result;
}

id sub_893B4(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_89458;
  v6[3] = &unk_DE7E8;
  uint64_t v3 = _Block_copy(v6);
  id v4 = [v2 initWithBlock:v3];
  _Block_release(v3);
  swift_release();
  return v4;
}

uint64_t sub_89458(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_894B0()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_894F8()
{
  sub_AC48();
  uint64_t v3 = v2;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *double v7 = v1;
  v7[1] = sub_7091C;
  return sub_889B4(v3, v4, v5, v6);
}

uint64_t sub_895A8(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_B38B0();
  swift_bridgeObjectRetain();
  sub_B2FF0();
  Swift::Int v8 = sub_B38E0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_B37E0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_B37E0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_8A7DC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_89758(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_B38B0();
  sub_19008(a2);
  swift_bridgeObjectRetain();
  sub_B2FF0();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_B38E0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      unint64_t v9 = 0xE900000000000065;
      unint64_t v10 = 0x6E61636972727568;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x6F64616E726F74;
          break;
        case 2:
          unint64_t v10 = 0x6C616369706F7274;
          unint64_t v9 = 0xED00006D726F7453;
          break;
        case 3:
          unint64_t v9 = 0xE800000000000000;
          unint64_t v10 = 0x6472617A7A696C62;
          break;
        case 4:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1818845544;
          break;
        case 5:
          unint64_t v10 = 0x737265646E756874;
          uint64_t v11 = 1836216180;
          goto LABEL_28;
        case 6:
          unint64_t v9 = 0xE500000000000000;
          unint64_t v10 = 0x7465656C73;
          break;
        case 7:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v12 = 2003791475;
          goto LABEL_17;
        case 8:
          unint64_t v10 = 0x53676E69776F6C62;
          uint64_t v13 = 7827310;
          goto LABEL_25;
        case 9:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v12 = 1852399986;
          goto LABEL_17;
        case 0xA:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v12 = 1802464627;
          goto LABEL_17;
        case 0xB:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1953723748;
          break;
        case 0xC:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v12 = 1684957559;
          goto LABEL_17;
        case 0xD:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v12 = 1734831974;
LABEL_17:
          unint64_t v10 = v12 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
          break;
        case 0xE:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1702519144;
          break;
        case 0xF:
          unint64_t v9 = 0xE600000000000000;
          unint64_t v10 = 0x7964756F6C63;
          break;
        case 0x10:
          unint64_t v10 = 0x6C43796C74726170;
          uint64_t v11 = 2036626799;
          goto LABEL_28;
        case 0x11:
          unint64_t v9 = 0xE500000000000000;
          unint64_t v10 = 0x7261656C63;
          break;
        case 0x12:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1684828003;
          break;
        case 0x13:
          unint64_t v9 = 0xE300000000000000;
          unint64_t v10 = 7630696;
          break;
        case 0x14:
          unint64_t v10 = 0x6F6C43646578696DLL;
          uint64_t v13 = 7955573;
LABEL_25:
          unint64_t v9 = v13 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0x15:
          unint64_t v10 = 0x656C43646578696DLL;
          unint64_t v9 = 0xEA00000000007261;
          break;
        case 0x16:
          unint64_t v10 = 0x6C69617641746F6ELL;
          uint64_t v11 = 1701601889;
LABEL_28:
          unint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          break;
      }
      unint64_t v14 = 0x6E61636972727568;
      unint64_t v15 = 0xE900000000000065;
      switch((char)a2)
      {
        case 1:
          unint64_t v15 = 0xE700000000000000;
          unint64_t v14 = 0x6F64616E726F74;
          break;
        case 2:
          unint64_t v14 = 0x6C616369706F7274;
          unint64_t v15 = 0xED00006D726F7453;
          break;
        case 3:
          unint64_t v15 = 0xE800000000000000;
          unint64_t v14 = 0x6472617A7A696C62;
          break;
        case 4:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v14 = 1818845544;
          break;
        case 5:
          unint64_t v14 = 0x737265646E756874;
          uint64_t v16 = 1836216180;
          goto LABEL_54;
        case 6:
          unint64_t v15 = 0xE500000000000000;
          unint64_t v14 = 0x7465656C73;
          break;
        case 7:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v17 = 2003791475;
          goto LABEL_43;
        case 8:
          unint64_t v14 = 0x53676E69776F6C62;
          uint64_t v18 = 7827310;
          goto LABEL_51;
        case 9:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v17 = 1852399986;
          goto LABEL_43;
        case 10:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v17 = 1802464627;
          goto LABEL_43;
        case 11:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v14 = 1953723748;
          break;
        case 12:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v17 = 1684957559;
          goto LABEL_43;
        case 13:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v17 = 1734831974;
LABEL_43:
          unint64_t v14 = v17 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
          break;
        case 14:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v14 = 1702519144;
          break;
        case 15:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v14 = 0x7964756F6C63;
          break;
        case 16:
          unint64_t v14 = 0x6C43796C74726170;
          uint64_t v16 = 2036626799;
          goto LABEL_54;
        case 17:
          unint64_t v15 = 0xE500000000000000;
          unint64_t v14 = 0x7261656C63;
          break;
        case 18:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v14 = 1684828003;
          break;
        case 19:
          unint64_t v15 = 0xE300000000000000;
          unint64_t v14 = 7630696;
          break;
        case 20:
          unint64_t v14 = 0x6F6C43646578696DLL;
          uint64_t v18 = 7955573;
LABEL_51:
          unint64_t v15 = v18 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 21:
          unint64_t v14 = 0x656C43646578696DLL;
          unint64_t v15 = 0xEA00000000007261;
          break;
        case 22:
          unint64_t v14 = 0x6C69617641746F6ELL;
          uint64_t v16 = 1701601889;
LABEL_54:
          unint64_t v15 = v16 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          break;
      }
      if (v10 == v14 && v9 == v15) {
        break;
      }
      char v20 = sub_B37E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_63;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_61;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_63:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_61:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_8A978(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v24;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_89DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  Swift::Int v7 = *(void *)(*v2 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v8 = sub_B3460(v7);
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      sub_8C070(*(void *)(v6 + 48) + 40 * v10, (uint64_t)v17);
      char v12 = sub_B3470();
      sub_8C0CC((uint64_t)v17);
      if (v12) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_8C0CC(a2);
    sub_8C070(*(void *)(*v3 + 48) + 40 * v10, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_8C070(a2, (uint64_t)v17);
    uint64_t v16 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_8B010((Swift::Int)v17, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v16;
    swift_bridgeObjectRelease();
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_89F64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_7424(&qword_EBE08);
  uint64_t v3 = sub_B34A0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    Swift::String v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_B38B0();
      sub_B2FF0();
      uint64_t result = sub_B38E0();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      id v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *id v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_A0BCC(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *Swift::String v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_8A240()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_7424(&qword_EADA0);
  uint64_t v3 = sub_B34A0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
      sub_B38B0();
      sub_19008(v18);
      sub_B2FF0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_B38E0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_A0BCC(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                void *v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_8A514()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_7424(&qword_EBDF8);
  uint64_t v3 = sub_B34A0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      uint64_t v18 = *(void *)(v2 + 48) + 40 * i;
      long long v29 = *(_OWORD *)v18;
      long long v30 = *(_OWORD *)(v18 + 16);
      uint64_t v31 = *(void *)(v18 + 32);
      uint64_t result = sub_B3460(*(void *)(v4 + 40));
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      uint64_t v27 = *(void *)(v4 + 48) + 40 * v22;
      *(_OWORD *)uint64_t v27 = v29;
      *(_OWORD *)(v27 + 16) = v30;
      *(void *)(v27 + 32) = v31;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
              if (v28 > 63) {
                sub_A0BCC(0, (unint64_t)(v28 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                void *v6 = -1 << v28;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_8A7DC(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_89F64();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_8B17C();
      goto LABEL_22;
    }
    sub_8B698();
  }
  uint64_t v11 = *v4;
  sub_B38B0();
  sub_B2FF0();
  uint64_t result = sub_B38E0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_B37E0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_B3830();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_B37E0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_8A978(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_8A240();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_8B330();
        goto LABEL_68;
      }
      sub_8B944();
    }
    uint64_t v8 = *v3;
    sub_B38B0();
    sub_19008(v5);
    sub_B2FF0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_B38E0();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        unint64_t v11 = 0xE900000000000065;
        unint64_t v12 = 0x6E61636972727568;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE700000000000000;
            unint64_t v12 = 0x6F64616E726F74;
            break;
          case 2:
            unint64_t v12 = 0x6C616369706F7274;
            unint64_t v11 = 0xED00006D726F7453;
            break;
          case 3:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x6472617A7A696C62;
            break;
          case 4:
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1818845544;
            break;
          case 5:
            unint64_t v12 = 0x737265646E756874;
            uint64_t v13 = 1836216180;
            goto LABEL_34;
          case 6:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x7465656C73;
            break;
          case 7:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v14 = 2003791475;
            goto LABEL_28;
          case 8:
            unint64_t v12 = 0x53676E69776F6C62;
            uint64_t v15 = 7827310;
            goto LABEL_31;
          case 9:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v14 = 1852399986;
            goto LABEL_28;
          case 0xA:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v14 = 1802464627;
            goto LABEL_28;
          case 0xB:
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1953723748;
            break;
          case 0xC:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v14 = 1684957559;
            goto LABEL_28;
          case 0xD:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v14 = 1734831974;
LABEL_28:
            unint64_t v12 = v14 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
            break;
          case 0xE:
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1702519144;
            break;
          case 0xF:
            unint64_t v11 = 0xE600000000000000;
            unint64_t v12 = 0x7964756F6C63;
            break;
          case 0x10:
            unint64_t v12 = 0x6C43796C74726170;
            uint64_t v13 = 2036626799;
            goto LABEL_34;
          case 0x11:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x7261656C63;
            break;
          case 0x12:
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1684828003;
            break;
          case 0x13:
            unint64_t v11 = 0xE300000000000000;
            unint64_t v12 = 7630696;
            break;
          case 0x14:
            unint64_t v12 = 0x6F6C43646578696DLL;
            uint64_t v15 = 7955573;
LABEL_31:
            unint64_t v11 = v15 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 0x15:
            unint64_t v12 = 0x656C43646578696DLL;
            unint64_t v11 = 0xEA00000000007261;
            break;
          case 0x16:
            unint64_t v12 = 0x6C69617641746F6ELL;
            uint64_t v13 = 1701601889;
LABEL_34:
            unint64_t v11 = v13 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0x6E61636972727568;
        unint64_t v17 = 0xE900000000000065;
        switch(v5)
        {
          case 1:
            unint64_t v17 = 0xE700000000000000;
            unint64_t v16 = 0x6F64616E726F74;
            break;
          case 2:
            unint64_t v16 = 0x6C616369706F7274;
            unint64_t v17 = 0xED00006D726F7453;
            break;
          case 3:
            unint64_t v17 = 0xE800000000000000;
            unint64_t v16 = 0x6472617A7A696C62;
            break;
          case 4:
            unint64_t v17 = 0xE400000000000000;
            unint64_t v16 = 1818845544;
            break;
          case 5:
            unint64_t v16 = 0x737265646E756874;
            uint64_t v18 = 1836216180;
            goto LABEL_60;
          case 6:
            unint64_t v17 = 0xE500000000000000;
            unint64_t v16 = 0x7465656C73;
            break;
          case 7:
            unint64_t v17 = 0xE500000000000000;
            uint64_t v19 = 2003791475;
            goto LABEL_54;
          case 8:
            unint64_t v16 = 0x53676E69776F6C62;
            uint64_t v20 = 7827310;
            goto LABEL_57;
          case 9:
            unint64_t v17 = 0xE500000000000000;
            uint64_t v19 = 1852399986;
            goto LABEL_54;
          case 10:
            unint64_t v17 = 0xE500000000000000;
            uint64_t v19 = 1802464627;
            goto LABEL_54;
          case 11:
            unint64_t v17 = 0xE400000000000000;
            unint64_t v16 = 1953723748;
            break;
          case 12:
            unint64_t v17 = 0xE500000000000000;
            uint64_t v19 = 1684957559;
            goto LABEL_54;
          case 13:
            unint64_t v17 = 0xE500000000000000;
            uint64_t v19 = 1734831974;
LABEL_54:
            unint64_t v16 = v19 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
            break;
          case 14:
            unint64_t v17 = 0xE400000000000000;
            unint64_t v16 = 1702519144;
            break;
          case 15:
            unint64_t v17 = 0xE600000000000000;
            unint64_t v16 = 0x7964756F6C63;
            break;
          case 16:
            unint64_t v16 = 0x6C43796C74726170;
            uint64_t v18 = 2036626799;
            goto LABEL_60;
          case 17:
            unint64_t v17 = 0xE500000000000000;
            unint64_t v16 = 0x7261656C63;
            break;
          case 18:
            unint64_t v17 = 0xE400000000000000;
            unint64_t v16 = 1684828003;
            break;
          case 19:
            unint64_t v17 = 0xE300000000000000;
            unint64_t v16 = 7630696;
            break;
          case 20:
            unint64_t v16 = 0x6F6C43646578696DLL;
            uint64_t v20 = 7955573;
LABEL_57:
            unint64_t v17 = v20 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 21:
            unint64_t v16 = 0x656C43646578696DLL;
            unint64_t v17 = 0xEA00000000007261;
            break;
          case 22:
            unint64_t v16 = 0x6C69617641746F6ELL;
            uint64_t v18 = 1701601889;
LABEL_60:
            unint64_t v17 = v18 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          default:
            break;
        }
        if (v12 == v16 && v11 == v17) {
          break;
        }
        char v22 = sub_B37E0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_72;
        }
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_68;
        }
      }
LABEL_71:
      swift_bridgeObjectRelease_n();
LABEL_72:
      sub_B3830();
      __break(1u);
      JUMPOUT(0x8AF58);
    }
  }
LABEL_68:
  uint64_t v23 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v23 + 48) + a2) = v5;
  uint64_t v24 = *(void *)(v23 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
    goto LABEL_71;
  }
  *(void *)(v23 + 16) = v26;
  return result;
}

Swift::Int sub_8B010(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  Swift::Int v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_8A514();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_8B4C8();
      goto LABEL_12;
    }
    sub_8BBE4();
  }
  uint64_t v9 = *v3;
  uint64_t result = sub_B3460(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_8C070(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      char v12 = sub_B3470();
      uint64_t result = sub_8C0CC((uint64_t)v19);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_B3830();
  __break(1u);
  return result;
}

void *sub_8B17C()
{
  uint64_t v1 = v0;
  sub_7424(&qword_EBE08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_B3490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    char v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *char v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_8B330()
{
  uint64_t v1 = v0;
  sub_7424(&qword_EADA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_B3490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(unsigned char *)(*(void *)(v4 + 48) + i) = *(unsigned char *)(*(void *)(v2 + 48) + i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_8B4C8()
{
  uint64_t v1 = v0;
  sub_7424(&qword_EBDF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_B3490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 5 * i;
    uint64_t result = (void *)sub_8C070(*(void *)(v2 + 48) + 40 * i, (uint64_t)v24);
    uint64_t v21 = *(void *)(v4 + 48) + 8 * v20;
    long long v22 = v24[0];
    long long v23 = v24[1];
    *(void *)(v21 + 32) = v25;
    *(_OWORD *)uint64_t v21 = v22;
    *(_OWORD *)(v21 + 16) = v23;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_8B698()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_7424(&qword_EBE08);
  uint64_t v3 = sub_B34A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_B38B0();
    swift_bridgeObjectRetain();
    sub_B2FF0();
    uint64_t result = sub_B38E0();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_8B944()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_7424(&qword_EADA0);
  uint64_t v3 = sub_B34A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
    sub_B38B0();
    sub_19008(v18);
    sub_B2FF0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_B38E0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_8BBE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_7424(&qword_EBDF8);
  uint64_t v3 = sub_B34A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    sub_8C070(*(void *)(v2 + 48) + 40 * i, (uint64_t)v29);
    uint64_t result = sub_B3460(*(void *)(v4 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v10 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v10 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v10 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = *(void *)(v4 + 48) + 40 * v21;
    long long v27 = v29[0];
    long long v28 = v29[1];
    *(void *)(v26 + 32) = v30;
    *(_OWORD *)uint64_t v26 = v27;
    *(_OWORD *)(v26 + 16) = v28;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_8BE74(void *a1)
{
  id v2 = [a1 longTrafficString];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_B2F50();

  return v3;
}

uint64_t sub_8BEE4()
{
  sub_7424(&qword_EBDD8);
  sub_1DECC();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_8BF74(uint64_t a1, uint64_t a2)
{
  sub_7424(&qword_EBDD8);

  return sub_87C8C(a1, a2);
}

uint64_t sub_8BFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_8C008()
{
  return swift_release();
}

unint64_t sub_8C010()
{
  unint64_t result = qword_EBDF0;
  if (!qword_EBDF0)
  {
    sub_3085C(255, &qword_EBDE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EBDF0);
  }
  return result;
}

uint64_t sub_8C070(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_8C0CC(uint64_t a1)
{
  return a1;
}

unint64_t sub_8C120()
{
  unint64_t result = qword_EBE00;
  if (!qword_EBE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EBE00);
  }
  return result;
}

unsigned char *sub_8C16C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x8C208);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for MapsSuggestionFetcherError()
{
}

void type metadata accessor for MapsSuggestionFetcherHelper()
{
}

unint64_t sub_8C250()
{
  unint64_t result = qword_EBE10;
  if (!qword_EBE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EBE10);
  }
  return result;
}

__n128 sub_8C2C0()
{
  return v0[3];
}

void sub_8C2F0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
}

void sub_8C308(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
}

void sub_8C320(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
}

void sub_8C338(uint64_t a1, unint64_t a2)
{
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_B2D30();
  sub_B378(v4, (uint64_t)qword_F5360);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_B2D10();
  os_log_type_t v6 = sub_B3280();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_8DA04(a1, a2, v12);
    sub_B33A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v5, v6, "%s", v7, 0xCu);
    swift_arrayDestroy();
    sub_8E284();
    sub_8E284();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v8 = sub_B2D10();
  os_log_type_t v9 = sub_B3280();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "FatalError", v10, 2u);
    sub_8E284();
  }

  swift_bridgeObjectRetain();
  sub_8C5CC(a1, a2, 0xD000000000000021, 0x80000000000BA0A0, 0xD000000000000018, 0x80000000000BA0D0, (uint64_t (*)(uint64_t))&static os_log_type_t.error.getter);
  sub_8E2DC();
  int64_t v11 = static FatalError.fatalErrorClosure;
  swift_bridgeObjectRetain();
  v11();
}

void sub_8C5B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
}

void sub_8C5CC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t (*a7)(uint64_t))
{
  sub_7424(&qword_EBE28);
  uint64_t v13 = __chkstk_darwin();
  int64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = a7(v13);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v51 = sub_B2D10();
  if (os_log_type_enabled(v51, (os_log_type_t)v16))
  {
    unint64_t v45 = a2;
    uint64_t v50 = a5;
    int v47 = v16;
    uint64_t v48 = a1;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v58 = v46;
    *(_DWORD *)uint64_t v17 = 136315650;
    NSString v18 = sub_B2F20();
    id v19 = [v18 lastPathComponent];

    uint64_t v20 = sub_B2F50();
    uint64_t v49 = a4;
    unint64_t v22 = v21;

    uint64_t v56 = v20;
    unint64_t v57 = v22;
    uint64_t v54 = v20;
    unint64_t v55 = v22;
    uint64_t v52 = 46;
    unint64_t v53 = 0xE100000000000000;
    sub_B1880();
    sub_8E29C();
    sub_12E9C();
    uint64_t v23 = swift_bridgeObjectRetain_n();
    unint64_t v29 = sub_8E238(v23, v24, v25, v26, v27, v28, (uint64_t)&type metadata for String);
    LOBYTE(v18) = v30;
    sub_8E1BC((uint64_t)v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      uint64_t v31 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v31 = v20 & 0xFFFFFFFFFFFFLL;
      }
      if (4 * v31 < v29 >> 14)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        return;
      }
      sub_B2FE0();
    }
    uint64_t v56 = sub_8DA04(v56, v57, &v58);
    sub_8E268();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v32 = v50;
    uint64_t v56 = v50;
    unint64_t v57 = a6;
    uint64_t v54 = v50;
    unint64_t v55 = a6;
    uint64_t v52 = 40;
    unint64_t v53 = 0xE100000000000000;
    sub_8E29C();
    uint64_t v33 = swift_bridgeObjectRetain_n();
    unint64_t v39 = sub_8E238(v33, v34, v35, v36, v37, v38, (uint64_t)&type metadata for String);
    char v41 = v40;
    sub_8E1BC((uint64_t)v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v41)
    {
LABEL_12:
      uint64_t v56 = sub_8DA04(v56, v57, &v58);
      sub_8E268();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2080;
      unint64_t v43 = v45;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_8DA04(v48, v43, &v58);
      sub_8E268();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v51, (os_log_type_t)v47, "[%s#%s] %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      sub_8E284();
      sub_8E284();

      return;
    }
    uint64_t v42 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v42 = v32 & 0xFFFFFFFFFFFFLL;
    }
    if (4 * v42 >= v39 >> 14)
    {
      sub_B2FE0();
      goto LABEL_12;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  Swift::String v44 = v51;
}

void fatalError(_:file:line:)(uint64_t (*a1)(void))
{
  uint64_t v2 = a1();
  unint64_t v4 = v3;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_B2D30();
  sub_B378(v5, (uint64_t)qword_F5360);
  swift_bridgeObjectRetain();
  sub_8C5CC(v2, v4, 0xD000000000000021, 0x80000000000BA0A0, 0xD000000000000018, 0x80000000000BA0D0, (uint64_t (*)(uint64_t))&static os_log_type_t.error.getter);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_8E2DC();
  uint64_t v7 = static FatalError.fatalErrorClosure;
  ((void (*)(uint64_t))a1)(v6);
  v7();
}

id sub_8CB48()
{
  if (qword_E6CB8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51A8, (uint64_t)&xmmword_F5200);

  return v0;
}

id sub_8CBBC()
{
  if (qword_E6CC8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B8, (uint64_t)&xmmword_F5220);

  return v0;
}

id sub_8CC30()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&xmmword_F5240);

  return v0;
}

id sub_8CCA4()
{
  if (qword_E6CC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B0, (uint64_t)&qword_F5260);

  return v0;
}

id sub_8CD18()
{
  if (qword_E6CB8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51A8, (uint64_t)&qword_F5280);

  return v0;
}

id sub_8CD8C()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&qword_F52A0);

  return v0;
}

id sub_8CE00()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&qword_F52C0);

  return v0;
}

id sub_8CE74()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&qword_F52E0);

  return v0;
}

id sub_8CEE8()
{
  if (qword_E6CC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B0, (uint64_t)&qword_F5300);

  return v0;
}

id sub_8CF5C()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&qword_F5320);

  return v0;
}

id sub_8CFD0()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&qword_F5340);

  return v0;
}

uint64_t sub_8D044(uint64_t a1)
{
  return sub_8D170(a1, qword_F5360);
}

uint64_t sub_8D070(uint64_t a1)
{
  return sub_8E230(a1, qword_F5378);
}

uint64_t sub_8D090(uint64_t a1)
{
  return sub_8E230(a1, qword_F5390);
}

uint64_t sub_8D0B0(uint64_t a1)
{
  return sub_8E230(a1, qword_F53A8);
}

uint64_t sub_8D0D0(uint64_t a1)
{
  return sub_8E230(a1, qword_F53C0);
}

uint64_t sub_8D0F0(uint64_t a1)
{
  return sub_8E230(a1, qword_F53D8);
}

uint64_t sub_8D110(uint64_t a1)
{
  return sub_8E230(a1, qword_F53F0);
}

uint64_t sub_8D130(uint64_t a1)
{
  return sub_8E230(a1, qword_F5408);
}

uint64_t sub_8D150(uint64_t a1)
{
  return sub_8E230(a1, qword_F5420);
}

uint64_t sub_8D170(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_B2D30();
  sub_18970(v3, a2);
  sub_B378(v3, (uint64_t)a2);
  return sub_B2D20();
}

id sub_8D1E8()
{
  if (qword_E6CB0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51A0, (uint64_t)&qword_F5438);

  return v0;
}

id sub_8D25C()
{
  if (qword_E6CB0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51A0, (uint64_t)&qword_F5458);

  return v0;
}

id sub_8D2D0()
{
  if (qword_E6CB8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51A8, (uint64_t)&qword_F5478);

  return v0;
}

id sub_8D344()
{
  if (qword_E6CC8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B8, (uint64_t)&qword_F5498);

  return v0;
}

id sub_8D3B8()
{
  if (qword_E6CC8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B8, (uint64_t)&qword_F54B8);

  return v0;
}

id sub_8D42C()
{
  if (qword_E6CC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B0, (uint64_t)&qword_F54D8);

  return v0;
}

id sub_8D4A0()
{
  if (qword_E6CC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B0, (uint64_t)&qword_F54F8);

  return v0;
}

id sub_8D514()
{
  if (qword_E6CD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51C0, (uint64_t)&qword_F5518);

  return v0;
}

id sub_8D588()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&qword_F5538);

  return v0;
}

id sub_8D5FC()
{
  if (qword_E6CC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B0, (uint64_t)&qword_F5558);

  return v0;
}

id sub_8D670()
{
  if (qword_E6CC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B0, (uint64_t)&qword_F5578);

  return v0;
}

id sub_8D6E4()
{
  if (qword_E6CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F5198, (uint64_t)&qword_F5598);

  return v0;
}

id sub_8D758()
{
  if (qword_E6CC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)sub_8E21C(qword_F51B0, (uint64_t)&qword_F55B8);

  return v0;
}

void (**FatalError.fatalErrorClosure.unsafeMutableAddressor())()
{
  return &static FatalError.fatalErrorClosure;
}

void (**FatalError.defaultFatalErrorClosure.unsafeMutableAddressor())()
{
  return &static FatalError.defaultFatalErrorClosure;
}

void (*static FatalError.fatalErrorClosure.getter())()
{
  swift_beginAccess();
  uint64_t v0 = static FatalError.fatalErrorClosure;
  swift_retain();
  return v0;
}

uint64_t static FatalError.fatalErrorClosure.setter(void (*a1)(), uint64_t a2)
{
  static FatalError.fatalErrorClosure = a1;
  qword_EBE20 = a2;
  return swift_release();
}

uint64_t (*static FatalError.fatalErrorClosure.modify())()
{
  return j__swift_endAccess;
}

void sub_8D8DC()
{
}

void (*static FatalError.defaultFatalErrorClosure.getter())()
{
  return sub_8D8DC;
}

uint64_t static FatalError.replaceFatalError(closure:)(void (*a1)(), uint64_t a2)
{
  static FatalError.fatalErrorClosure = a1;
  qword_EBE20 = a2;
  swift_retain();
  return swift_release();
}

uint64_t static FatalError.restoreFatalError()()
{
  static FatalError.fatalErrorClosure = sub_8D8DC;
  qword_EBE20 = 0;
  return swift_release();
}

ValueMetadata *type metadata accessor for FatalError()
{
  return &type metadata for FatalError;
}

uint64_t sub_8DA04(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_8DAD8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_B218((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_B218((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_74F8((uint64_t)v12);
  return v7;
}

uint64_t sub_8DAD8(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_8DC30((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_B33B0();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_8DD08(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_B3510();
    if (!v8)
    {
      uint64_t result = sub_B35F0();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_8DC30(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_B3660();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_8DD08(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_8DDA0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_8DF7C(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_8DF7C((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_8DDA0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = sub_B3030();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_8DF14(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_B34D0();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  sub_B3660();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)sub_B35F0();
  __break(1u);
  return result;
}

void *sub_8DF14(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_7424(&qword_EBE30);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_8DF7C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_7424(&qword_EBE30);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_8E12C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_8E054(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_8E054(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_B3660();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_8E12C(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_B3660();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_8E1BC(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_EBE28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_8E21C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 2;
  *(void *)(a2 + 24) = result;
  return result;
}

uint64_t sub_8E230(uint64_t a1, uint64_t *a2)
{
  return sub_8D170(a1, a2);
}

uint64_t sub_8E238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return StringProtocol.range<A>(of:options:range:locale:)(v8 - 136, 0, 0, 0, 1, v7, a7, a7);
}

uint64_t sub_8E268()
{
  return sub_B33A0();
}

uint64_t sub_8E284()
{
  return swift_slowDealloc();
}

uint64_t sub_8E29C()
{
  return sub_AA40(v0, 1, 1, v1);
}

uint64_t sub_8E2BC()
{
  return swift_beginAccess();
}

uint64_t sub_8E2DC()
{
  return swift_beginAccess();
}

uint64_t sub_8E2FC@<X0>(uint64_t a1@<X8>)
{
  char v3 = (*(uint64_t (**)(void))(*(void *)v1 + 232))();
  if (v3 == 6)
  {
    uint64_t v4 = 1;
  }
  else
  {
    char v5 = v3;
    sub_B2080();
    sub_FECC(v5);
    sub_B2070();
    sub_21D48(0);
    sub_B1FF0();
    uint64_t v4 = 0;
  }
  uint64_t v6 = sub_B2090();

  return sub_AA40(a1, v4, 1, v6);
}

uint64_t sub_8E3A8()
{
  sub_74F8(v0 + 16);
  swift_release();
  sub_A9CC(*(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  sub_74F8(v0 + 112);
  swift_release();
  swift_release();
  sub_74F8(v0 + 168);
  sub_A880(*(void **)(v0 + 208), *(_WORD *)(v0 + 216));
  return v0;
}

uint64_t sub_8E410()
{
  sub_7424(&qword_EC0D0);
  sub_B32C0();
  return v1;
}

uint64_t sub_8E480(void *a1, __int16 a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = a1;
  *(_WORD *)(v7 + 32) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_8FA6C;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_2B604;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_5922C;
  v11[3] = &unk_DEB40;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  sub_8FAA0(a1, a2);
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  sub_A880(a1, a2);
  _Block_release(v9);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_8E600()
{
  *(void *)(v1 + 16) = v0;
  return sub_FCA0((uint64_t)sub_8E618);
}

uint64_t sub_8E618()
{
  uint64_t v1 = sub_8E410();
  if (BYTE1(v2) == 255)
  {
    sub_2A760();
    uint64_t v1 = swift_allocError();
    uint64_t v3 = v2;
    LOBYTE(v2) = 0;
    unsigned char *v3 = 2;
    unsigned int v4 = 1;
  }
  else
  {
    unsigned int v4 = (v2 >> 8) & 1;
  }
  uint64_t v5 = v2 | (v4 << 8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v6(v1, v5);
}

uint64_t sub_8E6C4()
{
  return sub_8FA10(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_8E6F8(char a1)
{
  sub_B34C0(28);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0xD000000000000014;
  uint64_t v3 = (void *)0x80000000000B4720;
  switch(a1)
  {
    case 1:
      uint64_t v3 = (void *)0x80000000000B4740;
      v2._uint64_t countAndFlagsBits = 0xD000000000000012;
      break;
    case 2:
      v2._uint64_t countAndFlagsBits = 0xD000000000000015;
      uint64_t v3 = (void *)0x80000000000B4760;
      break;
    case 3:
      uint64_t v3 = (void *)0xEF64656C6C617473;
      v2._uint64_t countAndFlagsBits = 0x6E49746F4E707061;
      break;
    default:
      break;
  }
  v2._uint64_t object = v3;
  sub_B3020(v2);
  swift_bridgeObjectRelease();
  return 0xD00000000000001ALL;
}

unint64_t sub_8E818(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x6E49746F4E707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_8E8C4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBF58;
  v6._uint64_t object = a2;
  unint64_t v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

Swift::Int sub_8E910()
{
  return sub_7F390(*v0);
}

uint64_t sub_8E918()
{
  return sub_7F5E4();
}

Swift::Int sub_8E920(uint64_t a1)
{
  return sub_808C0(a1, *v1);
}

uint64_t sub_8E928@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_8E8C4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_8E958@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_8E818(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_8E984()
{
  return sub_8E6F8(*v0);
}

uint64_t sub_8E98C(char *a1, char *a2)
{
  return sub_5C8C8(*a1, *a2);
}

unint64_t sub_8E998()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_8E9F0()
{
  return 0x6D656C706D696E75;
}

BOOL sub_8EA14(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_DBFD8;
  v6._uint64_t object = a2;
  Swift::Int v4 = sub_B3680(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_8EA68@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_8EA14(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_8EAA0(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

unint64_t sub_8EAC8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_8EAE8()
{
  uint64_t v0 = sub_B2A80();
  sub_2B68C();
  uint64_t v2 = v1;
  uint64_t v4 = __chkstk_darwin(v3);
  unint64_t v22 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = sub_B2D30();
  sub_2B68C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  size_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_B378(v6, (uint64_t)qword_F5360);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v6);
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_B34C0(31);
  swift_bridgeObjectRelease();
  uint64_t v23 = 0xD00000000000001DLL;
  unint64_t v24 = 0x80000000000BB620;
  uint64_t v21 = sub_B2A30();
  sub_B2A20();
  sub_B2A10();
  swift_release();
  sub_B2A90();
  swift_release();
  uint64_t v13 = sub_B2A60();
  int64_t v15 = v14;
  uint64_t v20 = v6;
  int v16 = *(void (**)(void))(v2 + 8);
  sub_8FD50();
  v16();
  v25._uint64_t countAndFlagsBits = v13;
  v25._uint64_t object = v15;
  sub_B3020(v25);
  swift_bridgeObjectRelease();
  sub_8C308(v23, v24, 0xD00000000000002ALL, 0x80000000000BB640, 0xD000000000000011, 0x80000000000BB670);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v20);
  sub_B2A20();
  sub_B2A10();
  swift_release();
  sub_B2A90();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v22, enum case for NetworkAvailability.Status.unavailable(_:), v0);
  char v17 = sub_B2A70();
  sub_8FD50();
  v16();
  sub_8FD50();
  v16();
  return v17 & 1;
}

uint64_t type metadata accessor for OfflineStateProvider()
{
  return self;
}

id sub_8EE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 208);
  *(void *)a2 = v2;
  __int16 v3 = *(_WORD *)(a1 + 216);
  *(_WORD *)(a2 + 8) = v3;
  return sub_8FAA0(v2, v3);
}

void sub_8EE58(uint64_t a1, void *a2, __int16 a3)
{
  __int16 v3 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = a2;
  __int16 v4 = *(_WORD *)(a1 + 216);
  *(_WORD *)(a1 + 216) = a3;
  sub_8FAA0(a2, a3);

  sub_A880(v3, v4);
}

uint64_t sub_8EEA8()
{
  return 6;
}

void sub_8EEB0(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for CommonSpecs;
  *(void *)(a1 + 32) = &off_DE228;
  *(unsigned char *)a1 = 3;
}

uint64_t sub_8EED0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, long long *a5, long long *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  uint64_t v15 = swift_allocObject();
  sub_A918(a9, *(void *)(a9 + 24));
  sub_2B68C();
  __chkstk_darwin(v16);
  NSString v18 = (uint64_t *)((char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = sub_8F900(a1, a2, a3, a4, a5, a6, v22, v23, *v18, v15);
  sub_74F8(a9);
  return v20;
}

uint64_t sub_8EFF8()
{
  return sub_FCA0((uint64_t)sub_8F00C);
}

uint64_t sub_8F00C()
{
  sub_8F8B4();
  uint64_t v1 = swift_allocError();
  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v2(v1, 1);
}

uint64_t sub_8F084()
{
  sub_8E3A8();

  return _swift_deallocClassInstance(v0, 218, 7);
}

uint64_t type metadata accessor for BaseFlowSpec()
{
  return self;
}

uint64_t sub_8F0DC(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_A9C0(*(void **)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void sub_8F124(uint64_t a1)
{
}

uint64_t sub_8F134(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_A9C0(*(void **)a2, v4);
  uint64_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_A8A8(v5, v6);
  return a1;
}

uint64_t sub_8F188(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)BOOL result = v2;
  return result;
}

uint64_t sub_8F19C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_A8A8(v5, v6);
  return a1;
}

uint64_t sub_8F1DC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_8F21C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)BOOL result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_8F260(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_8F268(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for SpecExecutionResult()
{
}

void type metadata accessor for NonePreprocessResultType()
{
}

uint64_t sub_8F28C(uint64_t a1)
{
  sub_74F8(a1 + 24);
  sub_74F8(a1 + 64);
  sub_74F8(a1 + 104);
  swift_release();
  swift_release();
  sub_74F8(a1 + 160);
  sub_74F8(a1 + 200);
  sub_74F8(a1 + 240);

  return sub_74F8(a1 + 280);
}

uint64_t sub_8F300(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 64, a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 128) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 104, a2 + 104);
  uint64_t v7 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v7;
  long long v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  swift_retain();
  v10(a1 + 160, a2 + 160, v9);
  long long v11 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 200, a2 + 200);
  uint64_t v12 = *(void *)(a2 + 264);
  uint64_t v13 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v12;
  *(void *)(a1 + 272) = v13;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 240, a2 + 240);
  long long v14 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 280, a2 + 280);
  return a1;
}

uint64_t sub_8F588(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v4;
  sub_78430((uint64_t *)(a1 + 24), (uint64_t *)a2 + 3);
  sub_78430((uint64_t *)(a1 + 64), (uint64_t *)a2 + 8);
  sub_78430((uint64_t *)(a1 + 104), (uint64_t *)a2 + 13);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  swift_retain();
  swift_release();
  sub_78430((uint64_t *)(a1 + 160), (uint64_t *)a2 + 20);
  sub_78430((uint64_t *)(a1 + 200), (uint64_t *)a2 + 25);
  sub_78430((uint64_t *)(a1 + 240), (uint64_t *)a2 + 30);
  sub_78430((uint64_t *)(a1 + 280), (uint64_t *)a2 + 35);
  return a1;
}

void *sub_8F648(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x140uLL);
}

uint64_t sub_8F650(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_74F8(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_74F8(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_74F8(a1 + 104);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v5 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v5;
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  sub_74F8(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  sub_74F8(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  sub_74F8(a1 + 240);
  long long v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  sub_74F8(a1 + 280);
  long long v8 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  return a1;
}

uint64_t sub_8F770(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 320))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_8F7B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 320) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 320) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DBFlowParams()
{
}

void type metadata accessor for SpecExecutionStatus()
{
}

unint64_t sub_8F868()
{
  unint64_t result = qword_EC080;
  if (!qword_EC080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC080);
  }
  return result;
}

unint64_t sub_8F8B4()
{
  unint64_t result = qword_EC0C8;
  if (!qword_EC0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC0C8);
  }
  return result;
}

uint64_t sub_8F900(uint64_t a1, uint64_t a2, uint64_t a3, char a4, long long *a5, long long *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v20 = type metadata accessor for OfflineStateProvider();
  uint64_t v21 = &off_DEAE0;
  *(void *)&long long v19 = a9;
  sub_B1ED0();
  swift_allocObject();
  *(void *)(a10 + 56) = sub_B1EC0();
  sub_8F8B4();
  *(void *)(a10 + 64) = swift_allocError();
  *(unsigned char *)(a10 + 72) = 1;
  *(void *)(a10 + 208) = 0;
  *(_WORD *)(a10 + 216) = -256;
  *(void *)(a10 + 80) = a1;
  *(void *)(a10 + 88) = a2;
  *(void *)(a10 + 96) = a3;
  *(unsigned char *)(a10 + 104) = a4;
  sub_B3B0(a5, a10 + 16);
  sub_B3B0(a6, a10 + 112);
  *(void *)(a10 + 152) = a7;
  *(void *)(a10 + 160) = a8;
  sub_B3B0(&v19, a10 + 168);
  return a10;
}

uint64_t sub_8FA10(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_8FA18()
{
  swift_release();
  unsigned int v1 = *(unsigned __int16 *)(v0 + 32);
  if (v1 >> 8 <= 0xFE) {
    sub_A898(*(void **)(v0 + 24), v1, BYTE1(v1) & 1);
  }

  return _swift_deallocObject(v0, 34, 7);
}

void sub_8FA6C()
{
  sub_8EE58(*(void *)(v0 + 16), *(void **)(v0 + 24), *(_WORD *)(v0 + 32));
}

uint64_t sub_8FA78()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_8FA88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_8FA98()
{
  return swift_release();
}

id sub_8FAA0(id result, __int16 a2)
{
  if (HIBYTE(a2) != 255) {
    return sub_A9B0(result, a2, HIBYTE(a2) & 1);
  }
  return result;
}

id sub_8FAB8@<X0>(uint64_t a1@<X8>)
{
  return sub_8EE1C(v1, a1);
}

unsigned char *sub_8FAD4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8FBA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for PreprocessingSkippedError()
{
}

unsigned char *sub_8FBD4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x8FC70);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for BaseFlowError()
{
}

unint64_t sub_8FCAC()
{
  unint64_t result = qword_EC0D8;
  if (!qword_EC0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC0D8);
  }
  return result;
}

unint64_t sub_8FD00()
{
  unint64_t result = qword_EC0E0;
  if (!qword_EC0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC0E0);
  }
  return result;
}

BOOL sub_8FD60()
{
  if (sub_712DC() == 6)
  {
    swift_retain();
    if (sub_711EC() == 3)
    {
      int v0 = sub_712B8();
      swift_release();
      return v0 != 2;
    }
    swift_release();
  }
  return 1;
}

uint64_t sub_8FDCC()
{
  uint64_t v0 = swift_allocObject();
  sub_8FE04();
  return v0;
}

uint64_t sub_8FE04()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_B2D30();
  uint64_t v3 = sub_B378(v2, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1, v3, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_signpostId;
  uint64_t v5 = sub_B2D00();
  sub_AA40(v4, 1, 1, v5);
  uint64_t v6 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_signPost;
  if (qword_E6D10 != -1) {
    swift_once();
  }
  uint64_t v7 = v0 + v6;
  char v8 = byte_F5250;
  uint64_t v9 = (void *)qword_F5258;
  *(_OWORD *)uint64_t v7 = xmmword_F5240;
  *(unsigned char *)(v7 + 16) = v8;
  *(void *)(v7 + 24) = v9;
  id v10 = v9;
  return v0;
}

uint64_t sub_8FF3C()
{
  sub_9029C();
  if (v0)
  {
    sub_B1CD0();
    return swift_release();
  }
  else
  {
    return static FlowSearchResult.noFlow.getter();
  }
}

void sub_8FFA4()
{
  sub_920F0();
  uint64_t v1 = sub_7424(&qword_EC2C0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_B2D00();
  sub_2B68C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_7A0C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_signpostId;
  swift_beginAccess();
  sub_91A88(v14, (uint64_t)v6);
  if (sub_C844((uint64_t)v6, 1, v7) == 1)
  {
    sub_91AF0((uint64_t)v6);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v13, v6, v7);
    uint64_t v21 = v4;
    sub_B32F0();
    sub_B2CC0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v21;
    sub_AA40((uint64_t)v21, 1, 1, v7);
    swift_beginAccess();
    sub_91BB8(v15, v14);
    swift_endAccess();
  }
  sub_9029C();
  if (!v16)
  {
    sub_9217C();
    sub_7A1C();
    sub_8C2F0(0xD000000000000013, v17, v18, 0x80000000000BB790, 0xD000000000000013, 0x80000000000BB9B0);
    type metadata accessor for NoOpFlow();
    uint64_t v22 = swift_allocObject();
    sub_92024(&qword_E9580, v19, (void (*)(uint64_t))type metadata accessor for NoOpFlow);
    sub_B1C70();
    swift_release();
  }
  sub_92108();
}

void sub_9029C()
{
  sub_920F0();
  uint64_t v102 = v1;
  sub_B2280();
  sub_2B68C();
  uint64_t v93 = v2;
  uint64_t v94 = v3;
  __chkstk_darwin(v2);
  sub_18E00();
  uint64_t v91 = v4;
  __chkstk_darwin(v5);
  uint64_t v92 = (char *)&v90 - v6;
  uint64_t v97 = sub_B2960();
  sub_2B68C();
  uint64_t v95 = v7;
  __chkstk_darwin(v8);
  sub_18E00();
  uint64_t v96 = v9;
  __chkstk_darwin(v10);
  unint64_t v100 = (char *)&v90 - v11;
  uint64_t v12 = sub_B2250();
  sub_2B68C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_7A0C();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_logger;
  sub_920E0();
  sub_B34C0(49);
  swift_bridgeObjectRelease();
  unint64_t v103 = 0xD00000000000002FLL;
  unint64_t v104 = 0x80000000000BB7F0;
  sub_B2260();
  sub_7468(&v105, v107);
  v108._uint64_t countAndFlagsBits = sub_FD74();
  sub_B3020(v108);
  swift_bridgeObjectRelease();
  sub_74F8((uint64_t)&v105);
  id v98 = "ld never be called.";
  char v99 = "iefing plugin for deviceState: ";
  sub_92120();
  uint64_t v20 = v19;
  sub_8C308(v21, v22, v23, v24, v25, v26);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, v102, v12);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 88);
  uint64_t v101 = v12;
  int v28 = v27(v18, v12);
  if (v28 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v29 = sub_92098();
    v30(v29);
    uint64_t v31 = v18;
    uint64_t v32 = v95;
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
    uint64_t v34 = v100;
    uint64_t v35 = v97;
    v33(v100, v31, v97);
    sub_63264();
    sub_7A1C();
    sub_92120();
    sub_8C320(v36, v37, v38, v39, v40, v41);
    uint64_t v42 = v96;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v96, v34, v35);
    type metadata accessor for DailyBriefingNLv3Intent();
    uint64_t v43 = swift_allocObject();
    v33((char *)(v43 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingNLv3Intent_intent), v42, v35);
    swift_retain();
    BOOL v44 = sub_8FD60();
    swift_release();
    if (v44)
    {
      swift_retain();
      sub_B2260();
      sub_B1DA0();
      if (qword_E6BA8 != -1) {
        swift_once();
      }
      type metadata accessor for DBSiriKitEventSender();
      swift_retain();
      swift_initStaticObject();
      sub_91D20();
      unint64_t v105 = v45;
      type metadata accessor for GuardFlow();
      sub_92024(&qword_E95D8, 255, (void (*)(uint64_t))type metadata accessor for GuardFlow);
      sub_B1C70();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v35);
    }
    else
    {
      type metadata accessor for DBSiriKitEventSender();
      swift_initStaticObject();
      unint64_t v105 = 0;
      unint64_t v106 = 0xE000000000000000;
      uint64_t v96 = v20;
      sub_B34C0(36);
      sub_92138();
      v109._uint64_t countAndFlagsBits = 0xD000000000000022;
      v109._uint64_t object = (void *)0x80000000000BB960;
      sub_B3020(v109);
      sub_B35C0();
      uint64_t v54 = v105;
      uint64_t v55 = v106;
      swift_bridgeObjectRetain();
      LOBYTE(v105) = 0;
      sub_A1178(4, 3, v54, v55);
      sub_A1D18();
      swift_bridgeObjectRelease();
      swift_release();
      sub_921B0();
      swift_bridgeObjectRelease();
      unint64_t v105 = 0xD000000000000022;
      unint64_t v106 = 0x80000000000BB960;
      sub_92024(&qword_EC2D8, 255, (void (*)(uint64_t))&type metadata accessor for NLIntent);
      uint64_t v56 = v100;
      v110._uint64_t countAndFlagsBits = sub_B37C0();
      sub_B3020(v110);
      swift_bridgeObjectRelease();
      unint64_t v57 = v106;
      sub_921F0();
      sub_8C320(v58, v57, 0xD000000000000035, v59, 0xD00000000000001DLL, v60);
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v56, v35);
    }
  }
  else if (v28 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v46 = sub_92098();
    v47(v46);
    sub_92070();
    sub_8C320(v48, v49, v50, v51, 0xD00000000000001DLL, 0x80000000000BB790);
    type metadata accessor for DailyBriefingNLv4Intent();
    swift_allocObject();
    uint64_t v52 = swift_unknownObjectRetain();
    if (sub_61BB8(v52))
    {
      swift_retain();
      sub_B2260();
      sub_B1DA0();
      if (qword_E6BA8 != -1) {
        swift_once();
      }
      type metadata accessor for DBSiriKitEventSender();
      swift_retain();
      swift_initStaticObject();
      sub_92190();
      unint64_t v105 = v53;
      type metadata accessor for GuardFlow();
      sub_92024(&qword_E95D8, 255, (void (*)(uint64_t))type metadata accessor for GuardFlow);
      sub_B1C70();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      sub_920E0();
      sub_B34C0(45);
      sub_92138();
      v113._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v113._uint64_t object = (void *)0x80000000000BB870;
      sub_B3020(v113);
      sub_9215C();
      uint64_t v80 = sub_92144();
      sub_8C2F0(v80, v81, v82, v83, 0xD00000000000001DLL, 0x80000000000BB790);
      swift_bridgeObjectRelease();
      type metadata accessor for DBSiriKitEventSender();
      swift_initStaticObject();
      sub_921B0();
      sub_63264();
      v114._uint64_t countAndFlagsBits = v84 - 19;
      v114._uint64_t object = (void *)0x80000000000BB8A0;
      sub_B3020(v114);
      sub_9215C();
      swift_bridgeObjectRetain();
      sub_920B0();
      sub_A1D18();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
  }
  else if (v28 == enum case for Parse.uso(_:))
  {
    uint64_t v61 = sub_92098();
    v62(v61);
    uint64_t v64 = v93;
    uint64_t v63 = v94;
    uint64_t v65 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v92, v18, v93);
    sub_63264();
    sub_92070();
    BOOL v66 = v65;
    sub_8C320(v67, v68, v69, v70, 0xD00000000000001DLL, 0x80000000000BB790);
    type metadata accessor for DailyBriefingNLv4Intent();
    uint64_t v71 = v91;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v91, v66, v64);
    if (sub_6191C(v71))
    {
      swift_retain();
      sub_B2260();
      sub_B1DA0();
      if (qword_E6BA8 != -1) {
        swift_once();
      }
      type metadata accessor for DBSiriKitEventSender();
      swift_retain();
      swift_initStaticObject();
      sub_92190();
      unint64_t v105 = v72;
      type metadata accessor for GuardFlow();
      sub_92024(&qword_E95D8, 255, (void (*)(uint64_t))type metadata accessor for GuardFlow);
      sub_B1C70();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v66, v64);
    }
    else
    {
      sub_920E0();
      sub_B34C0(55);
      sub_92138();
      sub_7A1C();
      v115._uint64_t countAndFlagsBits = 0xD000000000000035;
      sub_B3020(v115);
      sub_B35C0();
      uint64_t v85 = sub_92144();
      sub_8C2F0(v85, v86, v87, v88, 0xD00000000000001DLL, 0x80000000000BB790);
      swift_bridgeObjectRelease();
      type metadata accessor for DBSiriKitEventSender();
      swift_initStaticObject();
      sub_920E0();
      sub_B34C0(46);
      sub_63264();
      v116._uint64_t countAndFlagsBits = v89 - 9;
      v116._uint64_t object = (void *)0x80000000000BB930;
      sub_B3020(v116);
      sub_B35C0();
      swift_bridgeObjectRetain();
      sub_920B0();
      sub_A1D18();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v92, v93);
    }
  }
  else
  {
    sub_921D0();
    sub_92138();
    v111._uint64_t countAndFlagsBits = 0xD000000000000027;
    v111._uint64_t object = (void *)0x80000000000BB840;
    sub_B3020(v111);
    uint64_t v73 = v101;
    sub_B35C0();
    unint64_t v74 = v106;
    sub_921F0();
    sub_8C2F0(v75, v74, 0xD000000000000035, v76, 0xD00000000000001DLL, v77);
    swift_bridgeObjectRelease();
    type metadata accessor for DBSiriKitEventSender();
    swift_initStaticObject();
    sub_921D0();
    sub_92138();
    v112._uint64_t countAndFlagsBits = 0xD000000000000027;
    v112._uint64_t object = (void *)0x80000000000BB840;
    sub_B3020(v112);
    sub_B35C0();
    uint64_t v78 = v105;
    uint64_t v79 = v106;
    swift_bridgeObjectRetain();
    LOBYTE(v105) = 0;
    sub_A1178(4, 3, v78, v79);
    sub_A1D18();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v73);
  }
  sub_92108();
}

void sub_90F38()
{
  sub_920F0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_7424(&qword_E76F0);
  __chkstk_darwin(v6 - 8);
  sub_7A0C();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_7424(&qword_EC2C0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v28 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v28 - v17;
  sub_9217C();
  sub_7A1C();
  sub_8C308(0xD000000000000013, v19, v20, 0x80000000000BB790, 0x722870756D726177, 0xEE00293A64496665);
  uint64_t v21 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_signpostId;
  swift_beginAccess();
  sub_91A88(v21, (uint64_t)v18);
  uint64_t v22 = sub_B2D00();
  int v23 = sub_C844((uint64_t)v18, 1, v22);
  sub_91AF0((uint64_t)v18);
  if (v23 == 1)
  {
    id v24 = *(id *)(v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_signPost + 24);
    uint64_t v29 = v13;
    sub_B2CE0();
    sub_B3300();
    sub_B2CD0();
    sub_AA40((uint64_t)v16, 0, 1, v22);
    uint64_t v25 = (uint64_t)v29;
    sub_91B50((uint64_t)v16, (uint64_t)v29);
    swift_beginAccess();
    sub_91BB8(v25, v21);
    swift_endAccess();
  }
  uint64_t v26 = sub_B3160();
  sub_AA40(v9, 1, 1, v26);
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = 0;
  void v27[3] = 0;
  v27[4] = v5;
  v27[5] = v3;
  swift_bridgeObjectRetain();
  sub_98660();
  swift_release();
  if (qword_E6C00 != -1) {
    swift_once();
  }
  sub_2497C(v5, v3);
  if (qword_E6C38 != -1) {
    swift_once();
  }
  sub_3599C();
  sub_92108();
}

uint64_t sub_9128C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_912AC, 0, 0);
}

uint64_t sub_912AC()
{
  if (qword_E6BA0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 32) = qword_F4E70;
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_9139C;
  return sub_D6EC();
}

uint64_t sub_9139C()
{
  sub_7FDC();
  sub_7FC4();
  uint64_t v1 = *v0;
  sub_AB94();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_91488()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_91AF0(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin23DailyBriefingFlowPlugin_signpostId);

  return v0;
}

uint64_t sub_91510()
{
  sub_91488();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_91568()
{
  return type metadata accessor for DailyBriefingFlowPlugin();
}

uint64_t type metadata accessor for DailyBriefingFlowPlugin()
{
  uint64_t result = qword_EC118;
  if (!qword_EC118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_915B8()
{
  sub_B2D30();
  if (v0 <= 0x3F)
  {
    sub_9168C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_9168C()
{
  if (!qword_EC128)
  {
    sub_B2D00();
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EC128);
    }
  }
}

uint64_t sub_916E4()
{
  return sub_8FF3C();
}

uint64_t sub_91708@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_8FDCC();
  *a1 = result;
  return result;
}

void sub_91734()
{
}

void sub_9175C()
{
}

uint64_t sub_91784(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_917A4, 0, 0);
}

uint64_t sub_917A4()
{
  sub_7FDC();
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_B2D30();
  sub_B378(v1, (uint64_t)qword_F5360);
  sub_7A1C();
  sub_8C2F0(0xD000000000000023, v2, v3, 0x80000000000BB790, 0x2865747563657865, 0xE900000000000029);
  sub_B1FB0();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_91898()
{
  type metadata accessor for NoOpFlow();
  sub_92024(&qword_E9580, v0, (void (*)(uint64_t))type metadata accessor for NoOpFlow);
  return sub_B1C80();
}

uint64_t type metadata accessor for NoOpFlow()
{
  return self;
}

uint64_t sub_91948()
{
  return sub_91898();
}

uint64_t sub_9196C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_323B0;
  return sub_91784(a1);
}

uint64_t sub_91A04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for NoOpFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_91A3C()
{
  return sub_92024(&qword_EC2B8, 255, (void (*)(uint64_t))type metadata accessor for DailyBriefingFlowPlugin);
}

uint64_t sub_91A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_91AF0(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_EC2C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_91B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_91BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EC2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_91C20()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_91C60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_9206C;
  return sub_9128C(a1, v4, v5, v7, v6);
}

void sub_91D20()
{
  sub_920F0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  v17[3] = &type metadata for SiriDBFeatureFlagsImpl;
  v17[4] = &off_DDF70;
  type metadata accessor for GuardFlow();
  uint64_t v14 = swift_allocObject();
  sub_A918((uint64_t)v17, (uint64_t)&type metadata for SiriDBFeatureFlagsImpl);
  sub_2B68C();
  __chkstk_darwin(v15);
  sub_7A0C();
  (*(void (**)(void))(v16 + 16))();
  sub_91E34(v13, v11, v9, v7, v5, v14, v3, v1);
  sub_74F8((uint64_t)v17);
  sub_92108();
}

uint64_t sub_91E34(uint64_t a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t a8)
{
  uint64_t v27 = type metadata accessor for DBSiriKitEventSender();
  uint64_t v28 = &off_DF120;
  uint64_t v29 = sub_92024(&qword_E8500, 255, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v26 = a5;
  uint64_t v24 = a7(0);
  uint64_t v25 = a8;
  *(void *)&long long v23 = a1;
  uint64_t v21 = &type metadata for SiriDBFeatureFlagsImpl;
  uint64_t v22 = &off_DDF70;
  uint64_t v16 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_B2D30();
  uint64_t v18 = sub_B378(v17, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a6 + v16, v18, v17);
  *(unsigned char *)(a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_state) = 0;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_isNLv4Intent) = 0;
  sub_B3B0(&v23, a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_dbIntent);
  sub_B3B0(a2, a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_deviceState);
  sub_B3B0(a3, a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_aceService);
  *(void *)(a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_knowledgeStore) = a4;
  sub_B3B0(&v20, a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_featureFlags);
  sub_1FAAC(&v26, (_OWORD *)(a6 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin9GuardFlow_siriKitEventSender));
  return a6;
}

uint64_t sub_92024(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_92098()
{
  return v0;
}

uint64_t sub_920B0()
{
  *(unsigned char *)(v2 - 128) = 0;
  return sub_A1178(4, 3, v0, v1);
}

void sub_920E0()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
}

void sub_92138()
{
  uint64_t v1 = *(void *)(v0 - 120);
  *(void *)(v0 - 128) = *(void *)(v0 - 128);
  *(void *)(v0 - 120) = v1;
}

uint64_t sub_92144()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_9215C()
{
  return sub_B35C0();
}

void sub_92190()
{
  sub_91D20();
}

void sub_921B0()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  sub_B34C0(36);
}

void sub_921D0()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  sub_B34C0(41);
}

uint64_t sub_92204(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_922D4(1);
  uint64_t v4 = sub_B3390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_92534(1uLL, a1, a2);
  sub_92608();
  swift_bridgeObjectRetain();
  sub_B3010();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_922D4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_B3000();
    uint64_t v1 = sub_B3050();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_92394(uint64_t a1, unint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = a1;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_B3620();
  swift_bridgeObjectRelease();
LABEL_4:
  uint64_t result = sub_92654(0, v3, v5);
  if (v7) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = result;
  }
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_B3620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v10 < 0)
    {
LABEL_25:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_B3620();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  }
  if (v9 < v8)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((v2 & 0xC000000000000001) != 0 && v8)
  {
    sub_21554();
    Swift::Int v11 = 0;
    do
    {
      Swift::Int v12 = v11 + 1;
      sub_B34E0(v11);
      Swift::Int v11 = v12;
    }
    while (v8 != v12);
  }
  if (!v4) {
    return v2 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_B3630();
  swift_bridgeObjectRelease_n();
  return v13;
}

unint64_t sub_92534(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    uint64_t result = sub_B3000();
    if (v6) {
      uint64_t result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_B3050();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_92608()
{
  unint64_t result = qword_EC2E0;
  if (!qword_EC2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC2E0);
  }
  return result;
}

uint64_t sub_92654(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_926A0()
{
  uint64_t v1 = type metadata accessor for MediaPlayerIntent();
  __chkstk_darwin(v1);
  uint64_t v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_E6E10 != -1) {
    swift_once();
  }
  sub_9366C(&qword_EC300);
  sub_B2570();
  char v4 = v7[15];
  sub_92DD4(v0, (uint64_t)v3);
  if (v4)
  {
    char v5 = 0;
  }
  else
  {
    if (qword_E6E18 != -1) {
      swift_once();
    }
    sub_B2570();
    char v5 = v7[14] ^ 1;
  }
  sub_19EC0((uint64_t)v3);
  return v5 & 1;
}

uint64_t sub_9280C()
{
  if (qword_E6E08 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_92868()
{
  sub_7424(&qword_E86E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_C0AE0;
  if (qword_E6E10 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_EC2F0;
  *(void *)(v0 + 56) = sub_7424(&qword_EC310);
  *(void *)(v0 + 64) = sub_238F4(&qword_EC438, &qword_EC310);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = qword_E6E18;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_EC2F8;
  *(void *)(v0 + 96) = sub_7424(&qword_EC308);
  *(void *)(v0 + 104) = sub_238F4(&qword_EC440, &qword_EC308);
  *(void *)(v0 + 72) = v3;
  sub_B2430();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_B2420();
  qword_EC2E8 = result;
  return result;
}

uint64_t sub_92A00(uint64_t a1)
{
  return sub_222D4(a1, &qword_EC310, 0x616C50616964656DLL, 0xEF62726556726579, &qword_EC2F0);
}

uint64_t sub_92A34(uint64_t a1)
{
  return sub_222D4(a1, &qword_EC308, 0x707954616964656DLL, 0xE900000000000065, &qword_EC2F8);
}

uint64_t sub_92A60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_B2960();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_92AC8()
{
  return sub_9280C();
}

uint64_t sub_92AE0(uint64_t a1)
{
  uint64_t v2 = sub_9366C(&qword_EC400);

  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_92B48(uint64_t a1)
{
  uint64_t v2 = sub_9366C(&qword_EC400);

  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_92BA0(uint64_t a1)
{
  uint64_t v2 = sub_9366C(&qword_EC400);

  return NLIntentWrapper.description.getter(a1, v2);
}

BOOL sub_92BF8(uint64_t a1, void *a2)
{
  v2._rawValue = &off_DC010;
  return sub_92CD4(a1, a2, v2);
}

_UNKNOWN **sub_92C04()
{
  return &off_DC048;
}

uint64_t sub_92C10()
{
  return 2036427888;
}

BOOL sub_92C2C@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_DC010;
  BOOL result = sub_92CD4(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_92C6C(void *a1@<X8>)
{
}

void sub_92C78(void *a1@<X8>)
{
  *a1 = &off_DC048;
}

uint64_t sub_92C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_933D4(a1, a2, a3, (uint64_t (*)(void))sub_936B0, (uint64_t (*)(void))sub_936FC, (uint64_t (*)(void))sub_93748);
}

BOOL sub_92CC8(uint64_t a1, void *a2)
{
  v2._rawValue = &off_DC070;
  return sub_92CD4(a1, a2, v2);
}

BOOL sub_92CD4(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._uint64_t countAndFlagsBits = a1;
  v7._uint64_t object = a2;
  Swift::Int v5 = sub_B3680(a3, v7);
  swift_bridgeObjectRelease();
  return v5 != 0;
}

_UNKNOWN **sub_92D18()
{
  return &off_DC0A8;
}

uint64_t sub_92D24()
{
  return 1937204590;
}

BOOL sub_92D40@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_DC070;
  BOOL result = sub_92CD4(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_92D80(void *a1@<X8>)
{
}

uint64_t type metadata accessor for MediaPlayerIntent()
{
  uint64_t result = qword_EC370;
  if (!qword_EC370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_92DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaPlayerIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for MediaPlayerVerb()
{
  return &type metadata for MediaPlayerVerb;
}

unsigned char *_s23DailyBriefingFlowPlugin15MediaPlayerVerbOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x92EECLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaType()
{
  return &type metadata for MediaType;
}

uint64_t sub_92F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2960();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_92F90(uint64_t a1)
{
  uint64_t v2 = sub_B2960();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_92FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_93058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_930BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_93120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_93184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_93198);
}

uint64_t sub_93198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2960();

  return sub_C844(a1, a2, v4);
}

uint64_t sub_931E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_931F4);
}

uint64_t sub_931F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B2960();

  return sub_AA40(a1, a2, a2, v4);
}

uint64_t sub_93240()
{
  uint64_t result = sub_B2960();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_932CC()
{
  return sub_9366C(&qword_EC300);
}

uint64_t sub_93300()
{
  return sub_9366C(&qword_EC3A8);
}

unint64_t sub_93338()
{
  unint64_t result = qword_EC3B0;
  if (!qword_EC3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC3B0);
  }
  return result;
}

void sub_93384(void *a1@<X8>)
{
  *a1 = &off_DC0A8;
}

uint64_t sub_93394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_933D4(a1, a2, a3, (uint64_t (*)(void))sub_93794, (uint64_t (*)(void))sub_937E0, (uint64_t (*)(void))sub_9382C);
}

uint64_t sub_933D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a4();
  uint64_t v11 = a5();
  uint64_t v12 = a6();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v10, v11, v12);
}

uint64_t sub_93464()
{
  return sub_238F4(&qword_EC3B8, &qword_EC3C0);
}

unint64_t sub_934A4()
{
  unint64_t result = qword_EC3C8;
  if (!qword_EC3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC3C8);
  }
  return result;
}

unint64_t sub_934F4()
{
  unint64_t result = qword_EC3D0;
  if (!qword_EC3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC3D0);
  }
  return result;
}

unint64_t sub_93544()
{
  unint64_t result = qword_EC3D8;
  if (!qword_EC3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC3D8);
  }
  return result;
}

uint64_t sub_93590()
{
  return sub_238F4(&qword_EC3E0, &qword_EC3E8);
}

unint64_t sub_935D0()
{
  unint64_t result = qword_EC3F0;
  if (!qword_EC3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC3F0);
  }
  return result;
}

unint64_t sub_93620()
{
  unint64_t result = qword_EC3F8;
  if (!qword_EC3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC3F8);
  }
  return result;
}

uint64_t sub_9366C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MediaPlayerIntent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_936B0()
{
  unint64_t result = qword_EC408;
  if (!qword_EC408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC408);
  }
  return result;
}

unint64_t sub_936FC()
{
  unint64_t result = qword_EC410;
  if (!qword_EC410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC410);
  }
  return result;
}

unint64_t sub_93748()
{
  unint64_t result = qword_EC418;
  if (!qword_EC418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC418);
  }
  return result;
}

unint64_t sub_93794()
{
  unint64_t result = qword_EC420;
  if (!qword_EC420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC420);
  }
  return result;
}

unint64_t sub_937E0()
{
  unint64_t result = qword_EC428;
  if (!qword_EC428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC428);
  }
  return result;
}

unint64_t sub_9382C()
{
  unint64_t result = qword_EC430;
  if (!qword_EC430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_EC430);
  }
  return result;
}

void sub_93878(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_93884()
{
  type metadata accessor for DBSiriKitEventSender();
  uint64_t inited = swift_initStaticObject();
  sub_B2150();
  type metadata accessor for DailyBriefingOutputPublisher();
  uint64_t v1 = swift_allocObject();
  uint64_t result = sub_9568C(inited, &v3, v1);
  qword_F55E8 = result;
  return result;
}

uint64_t sub_938F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 216) = a4;
  *(void *)(v5 + 224) = v4;
  *(unsigned char *)(v5 + 145) = a2;
  *(void *)(v5 + 200) = a1;
  *(void *)(v5 + 208) = a3;
  uint64_t v6 = sub_7424(&qword_E76E0);
  sub_13294(v6);
  *(void *)(v5 + 232) = sub_131EC();
  uint64_t v7 = sub_B22A0();
  *(void *)(v5 + 240) = v7;
  sub_FC60(v7);
  *(void *)(v5 + 248) = v8;
  *(void *)(v5 + 256) = sub_131EC();
  uint64_t v9 = sub_B35B0();
  *(void *)(v5 + 264) = v9;
  sub_FC60(v9);
  *(void *)(v5 + 272) = v10;
  *(void *)(v5 + 280) = sub_131EC();
  uint64_t v11 = sub_B35A0();
  *(void *)(v5 + 288) = v11;
  sub_FC60(v11);
  *(void *)(v5 + 296) = v12;
  *(void *)(v5 + 304) = swift_task_alloc();
  *(void *)(v5 + 312) = swift_task_alloc();
  uint64_t v13 = sub_B2E50();
  *(void *)(v5 + 320) = v13;
  sub_FC60(v13);
  *(void *)(v5 + 328) = v14;
  *(void *)(v5 + 336) = sub_131EC();
  uint64_t v15 = sub_7424(&qword_EC570);
  sub_13294(v15);
  *(void *)(v5 + 344) = swift_task_alloc();
  *(void *)(v5 + 352) = swift_task_alloc();
  *(void *)(v5 + 360) = swift_task_alloc();
  uint64_t v16 = sub_B2D30();
  *(void *)(v5 + 368) = v16;
  sub_FC60(v16);
  *(void *)(v5 + 376) = v17;
  *(void *)(v5 + 384) = sub_131EC();
  return _swift_task_switch(sub_93AD4, 0, 0);
}

uint64_t sub_93AD4()
{
  uint64_t v1 = v0;
  uint64_t v4 = v0 + 376;
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v4 + 8);
  uint64_t v5 = *(void *)(v1 + 360);
  uint64_t v39 = *(void *)(v1 + 368);
  uint64_t v41 = *(void *)(v1 + 320);
  uint64_t v6 = *(void *)(v1 + 224);
  uint64_t v7 = *(void **)(v1 + 208);
  uint64_t v8 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_logger;
  *(void *)(v1 + 392) = OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_logger;
  uint64_t v9 = v6 + v8;
  sub_B34C0(36);
  swift_bridgeObjectRelease();
  uint64_t v10 = v7[3];
  uint64_t v11 = v7[4];
  sub_7468(v7, v10);
  v44._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  sub_B3020(v44);
  swift_bridgeObjectRelease();
  sub_7A1C();
  sub_B3020(v45);
  sub_8C308(91, 0xE100000000000000, 0xD00000000000003ALL, 0x80000000000BBA90, 0xD00000000000003BLL, 0x80000000000BBBB0);
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_94D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v9, v39);
  uint64_t v12 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_previousDialogRenderingCompletedAt;
  *(void *)(v1 + 400) = OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_previousDialogRenderingCompletedAt;
  uint64_t v13 = v6 + v12;
  swift_beginAccess();
  sub_7CE8C(v13, v5, &qword_EC570);
  int v14 = sub_C844(v5, 1, v41);
  uint64_t v15 = *(void *)(v1 + 360);
  if (v14)
  {
    sub_958C0(*(void *)(v1 + 360));
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v17 = *(void *)(v1 + 328);
    uint64_t v18 = *(void *)(v1 + 336);
    uint64_t v19 = *(void *)(v1 + 320);
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v18, *(void *)(v1 + 360), v19);
    sub_958C0(v15);
    uint64_t v16 = sub_B2E40();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
  }
  uint64_t v20 = *(void *)(v1 + 376);
  uint64_t v21 = *(void *)(v1 + 384);
  uint64_t v22 = *(void *)(v1 + 368);
  uint64_t v23 = *(void *)(v1 + 304);
  uint64_t v24 = *(void *)(v1 + 296);
  uint64_t v40 = *(void *)(v1 + 288);
  uint64_t v37 = *(void *)(v1 + 224);
  uint64_t v38 = *(void **)(v1 + 208);
  *(void *)(v1 + 168) = v16;
  *(unsigned char *)(v1 + 176) = v14 != 0;
  sub_7424(&qword_EC578);
  v46._uint64_t countAndFlagsBits = sub_B2FA0();
  sub_B3020(v46);
  swift_bridgeObjectRelease();
  v47._uint64_t countAndFlagsBits = 0;
  v47._uint64_t object = (void *)0xE000000000000000;
  sub_B3020(v47);
  swift_bridgeObjectRelease();
  sub_8C320(0xD00000000000002CLL, 0x80000000000BBBF0, 0xD00000000000003ALL, 0x80000000000BBA90, 0xD00000000000003BLL, 0x80000000000BBBB0);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
  uint64_t v25 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_siriKitEventSender;
  *(void *)(v1 + 408) = OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_siriKitEventSender;
  uint64_t v26 = *sub_7468((void *)(v37 + v25), *(void *)(v37 + v25 + 24));
  uint64_t v28 = v7[3];
  uint64_t v27 = v7[4];
  uint64_t v29 = sub_7468(v38, v28);
  sub_A2368((uint64_t)v29, 0x11u, 0, 0, v26, v28, v27);
  sub_B3580();
  sub_9C0F0(v42);
  sub_B3590();
  char v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  *(void *)(v1 + 416) = v30;
  *(void *)(v1 + 424) = (v24 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v30(v23, v40);
  *(void *)(v1 + 136) = 0;
  *(void *)(v1 + 128) = 0;
  *(unsigned char *)(v1 + 144) = 1;
  sub_B3850();
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v1 + 432) = v31;
  uint64_t v32 = sub_95920(&qword_EC580, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  void *v31 = v1;
  v31[1] = sub_93F54;
  uint64_t v33 = *(void *)(v1 + 312);
  uint64_t v34 = *(void *)(v1 + 280);
  uint64_t v35 = *(void *)(v1 + 264);
  return static Task<>.sleep<A>(until:tolerance:clock:)(v33, v1 + 128, v34, v35, v32);
}

uint64_t sub_93F54()
{
  sub_7FC4();
  sub_2B6A4();
  void *v3 = v2;
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v4[52];
  uint64_t v6 = v4[39];
  uint64_t v7 = v4[36];
  uint64_t v8 = v4[35];
  uint64_t v9 = v4[34];
  uint64_t v10 = v4[33];
  uint64_t v11 = *v1;
  sub_2B6A4();
  *uint64_t v12 = v11;
  *(void *)(v13 + 440) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v5(v6, v7);
  if (v0) {
    int v14 = sub_9466C;
  }
  else {
    int v14 = sub_94104;
  }
  return _swift_task_switch(v14, 0, 0);
}

uint64_t sub_94104()
{
  if (*(unsigned char *)(v0 + 145))
  {
    sub_7A1C();
    sub_ABC4();
    sub_959E8(v16, v17, v18, v19, (uint64_t)"publishWithDelay(specExecutionResult:name:nlContextUpdate:)");
    sub_95994();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = sub_959C0();
    return v21(v20);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 232);
    uint64_t v1 = *(void *)(v0 + 240);
    uint64_t v3 = *(void *)(v0 + 216);
    uint64_t v4 = *(void *)(v0 + 224);
    id v5 = *(id *)(v0 + 200);
    sub_7A1C();
    sub_ABC4();
    sub_959E8(v6, v7, v8, v9, (uint64_t)"publishWithDelay(specExecutionResult:name:nlContextUpdate:)");
    sub_7424(&qword_E7F20);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_BEC80;
    *(void *)(v10 + 32) = v5;
    sub_B30C0();
    sub_7CE8C(v3, v2, &qword_E76E0);
    id v11 = v5;
    sub_B2290();
    uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_publisher + 24);
    uint64_t v13 = *(void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_publisher + 32);
    sub_7468((void *)(v4 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_publisher), v12);
    *(void *)(v0 + 40) = v1;
    *(void *)(v0 + 48) = &protocol witness table for AceOutput;
    sub_7590((uint64_t *)(v0 + 16));
    sub_959D4();
    v14();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_94394;
    return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 16, v12, v13);
  }
}

uint64_t sub_94394()
{
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_2B6A4();
  void *v6 = v5;
  *(void *)(v3 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v7 = sub_94804;
  }
  else
  {
    sub_74F8(v3 + 16);
    unint64_t v7 = sub_94484;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_94484()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[31];
  uint64_t v23 = v0[32];
  uint64_t v22 = v0[30];
  uint64_t v5 = v0[28];
  uint64_t v6 = (void *)v0[26];
  uint64_t v21 = (void *)v0[25];
  unint64_t v7 = (void *)(v5 + v0[51]);
  uint64_t v8 = v5 + v0[50];
  sub_7A1C();
  sub_ABC4();
  sub_52848();
  sub_8C308(0xD00000000000001DLL, v9, v10, v11, v12, v13);
  sub_B2E20();
  sub_AA40(v2, 0, 1, v3);
  sub_957F0(v2, v1);
  swift_beginAccess();
  sub_95858(v1, v8);
  swift_endAccess();
  uint64_t v14 = *sub_7468(v7, v7[3]);
  uint64_t v15 = v6[3];
  uint64_t v16 = v6[4];
  unint64_t v17 = sub_7468(v6, v15);
  sub_A2368((uint64_t)v17, 1u, 0, 0, v14, v15, v16);
  sub_A8A8(v21, 0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v23, v22);
  sub_95994();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = sub_959C0();
  return v19(v18);
}

uint64_t sub_9466C()
{
  uint64_t v1 = v0[55];
  sub_B34C0(47);
  v0[19] = 0;
  v0[20] = 0xE000000000000000;
  sub_7A1C();
  v10._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  sub_B3020(v10);
  v0[24] = v1;
  sub_7424(&qword_E7F40);
  sub_B35C0();
  unint64_t v2 = v0[20];
  sub_ABC4();
  sub_8C2F0(v3, v2, v4, v5, v6, 0x80000000000BBBB0);
  swift_bridgeObjectRelease();
  sub_95968();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v7(v1, 1);
}

uint64_t sub_94804()
{
  uint64_t v1 = v0[31];
  uint64_t v11 = v0[32];
  uint64_t v12 = v0[57];
  uint64_t v2 = v0[30];
  uint64_t v3 = (void *)v0[25];
  sub_74F8((uint64_t)(v0 + 2));
  sub_B34C0(40);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v14._uint64_t countAndFlagsBits = sub_B3860();
  sub_B3020(v14);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_52848();
  sub_8C2F0(v4, 0x80000000000BBB30, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  sub_A8A8(v3, 0);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  sub_95968();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v9(v12, 1);
}

uint64_t sub_949C4(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  return _swift_task_switch(sub_949E4, 0, 0);
}

uint64_t sub_949E4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (void *)(v0[12] + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_publisher);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_7468(v2, v3);
  uint64_t v5 = sub_B22A0();
  v0[5] = v5;
  v0[6] = (uint64_t)&protocol witness table for AceOutput;
  uint64_t v6 = sub_7590(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v6, v1, v5);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = sub_94B08;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 2, v3, v4);
}

uint64_t sub_94B08()
{
  sub_7FC4();
  uint64_t v3 = v2;
  sub_2B6A4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_2B6A4();
  void *v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_94C18, 0, 0);
  }
  else
  {
    sub_74F8(v3 + 16);
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
}

uint64_t sub_94C18()
{
  sub_74F8(v0 + 16);
  sub_B34C0(40);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v7._uint64_t countAndFlagsBits = sub_B3860();
  sub_B3020(v7);
  swift_bridgeObjectRelease();
  sub_ABC4();
  sub_8C2F0(v1, 0x80000000000BBB30, v2, v3, 0xD000000000000010, 0x80000000000BBB60);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_94D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_B2DA0();
  sub_7870();
  uint64_t v52 = v3;
  __chkstk_darwin(v4);
  sub_3CE90();
  uint64_t v51 = (uint64_t *)(v5 - v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = sub_7424(&qword_EC570);
  uint64_t v11 = sub_13294(v10);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_B2E50();
  sub_7870();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_3CE90();
  uint64_t v20 = v18 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_previousDialogRenderingCompletedAt;
  swift_beginAccess();
  sub_7CE8C(v24, (uint64_t)v13, &qword_EC570);
  if (sub_C844((uint64_t)v13, 1, v14) == 1)
  {
    sub_958C0((uint64_t)v13);
    sub_7A1C();
    sub_ABC4();
    sub_52848();
    sub_8C320(v25, v26, v27, v28, 0xD000000000000014, v29);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v13, v14);
  sub_B2E20();
  sub_B2E30();
  unint64_t v49 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v49(v20, v14);
  uint64_t v31 = sub_1A0A0();
  uint64_t v32 = v52;
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
  uint64_t result = v33(v9, v2);
  uint64_t v50 = v23;
  uint64_t v48 = (void (*)(uint64_t *, uint64_t))v33;
  if (v31 > 0)
  {
    uint64_t v34 = 0;
    goto LABEL_6;
  }
  uint64_t v34 = -v31;
  if (!__OFSUB__(0, v31))
  {
LABEL_6:
    uint64_t v35 = v51;
    *uint64_t v51 = v34;
    (*(void (**)(uint64_t *, void, uint64_t))(v32 + 104))(v35, enum case for DispatchTimeInterval.milliseconds(_:), v2);
    uint64_t v47 = v1 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_logger;
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    sub_B34C0(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v54, "Time elapsed: ");
    HIBYTE(v54[1]) = -18;
    uint64_t v53 = v31;
    v55._uint64_t countAndFlagsBits = sub_B37C0();
    sub_B3020(v55);
    swift_bridgeObjectRelease();
    v56._uint64_t countAndFlagsBits = 44;
    v56._uint64_t object = (void *)0xE100000000000000;
    sub_B3020(v56);
    uint64_t v36 = v54[0];
    uint64_t v37 = v54[1];
    strcpy((char *)v54, "Delay time: ");
    BYTE5(v54[1]) = 0;
    HIWORD(v54[1]) = -5120;
    sub_959D4();
    v38();
    v57._uint64_t countAndFlagsBits = sub_B2FA0();
    sub_B3020(v57);
    swift_bridgeObjectRelease();
    uint64_t v39 = v54[0];
    uint64_t v40 = (void *)v54[1];
    v54[0] = v36;
    v54[1] = v37;
    swift_bridgeObjectRetain();
    v58._uint64_t countAndFlagsBits = v39;
    v58._uint64_t object = v40;
    sub_B3020(v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v41 = v54[1];
    sub_ABC4();
    sub_52848();
    sub_8C320(v42, v41, v43, v44, 0xD000000000000014, v45);
    swift_bridgeObjectRelease();
    double v46 = sub_1A1EC();
    v48(v35, v2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v49)(v50, v14);
    if ((~*(void *)&v46 & 0x7FF0000000000000) != 0)
    {
      if (v46 > -9.22337204e18)
      {
        if (v46 < 9.22337204e18) {
          return (uint64_t)v46;
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_95210()
{
  uint64_t v1 = sub_7424(&qword_EC570);
  uint64_t v2 = sub_13294(v1);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_B2E50();
  sub_AA40((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_previousDialogRenderingCompletedAt;
  swift_beginAccess();
  sub_95858((uint64_t)v4, v6);
  swift_endAccess();
  sub_7A1C();
  sub_ABC4();
  sub_8C308(0xD000000000000033, v7, v8, v9, 0x5368736572666572, 0xEE00292865746174);
}

uint64_t sub_9532C()
{
  uint64_t v1 = sub_7424(&qword_EC570);
  uint64_t v2 = sub_13294(v1);
  __chkstk_darwin(v2);
  sub_3CE90();
  uint64_t v5 = v3 - v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - v7;
  sub_B2E20();
  uint64_t v9 = sub_B2E50();
  sub_AA40((uint64_t)v8, 0, 1, v9);
  sub_957F0((uint64_t)v8, v5);
  uint64_t v10 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_previousDialogRenderingCompletedAt;
  swift_beginAccess();
  sub_95858(v5, v10);
  return swift_endAccess();
}

uint64_t sub_95418()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_logger;
  uint64_t v2 = sub_B2D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_publisher);
  sub_74F8(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_siriKitEventSender);
  sub_958C0(v0 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_previousDialogRenderingCompletedAt);
  return v0;
}

uint64_t sub_954AC()
{
  sub_95418();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_95504()
{
  return type metadata accessor for DailyBriefingOutputPublisher();
}

uint64_t type metadata accessor for DailyBriefingOutputPublisher()
{
  uint64_t result = qword_EC478;
  if (!qword_EC478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_95554()
{
  sub_B2D30();
  if (v0 <= 0x3F)
  {
    sub_95634();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_95634()
{
  if (!qword_EC498)
  {
    sub_B2E50();
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EC498);
    }
  }
}

uint64_t sub_9568C(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v13 = type metadata accessor for DBSiriKitEventSender();
  uint64_t v14 = &off_DF120;
  uint64_t v15 = sub_95920(&qword_E8500, (void (*)(uint64_t))type metadata accessor for DBSiriKitEventSender);
  *(void *)&long long v12 = a1;
  uint64_t v6 = OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_logger;
  if (qword_E6D58 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_B2D30();
  uint64_t v8 = sub_B378(v7, (uint64_t)qword_F5360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3 + v6, v8, v7);
  uint64_t v9 = a3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_previousDialogRenderingCompletedAt;
  uint64_t v10 = sub_B2E50();
  sub_AA40(v9, 1, 1, v10);
  sub_1FAAC(&v12, (_OWORD *)(a3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_siriKitEventSender));
  sub_B3B0(a2, a3 + OBJC_IVAR____TtC23DailyBriefingFlowPlugin28DailyBriefingOutputPublisher_publisher);
  return a3;
}

uint64_t sub_957F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EC570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_95858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7424(&qword_EC570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_958C0(uint64_t a1)
{
  uint64_t v2 = sub_7424(&qword_EC570);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_95920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_95968()
{
  return swift_task_dealloc();
}

uint64_t sub_95994()
{
  return swift_task_dealloc();
}

uint64_t sub_959C0()
{
  return 0;
}

void sub_959E8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_8C308(a1, a2, 0xD00000000000003ALL, a3, a4, (a5 - 32) | 0x8000000000000000);
}

char *sub_95A08(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_B17F0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = a3[6];
    *(void *)&a1[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    if (sub_C844((uint64_t)v11, 1, v7))
    {
      uint64_t v12 = sub_7424(&qword_E7D38);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      sub_AA40((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v14 = a3[8];
    *(void *)&a1[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (char *)a2 + v14;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = a3[10];
    *(void *)&a1[a3[9]] = *(uint64_t *)((char *)a2 + a3[9]);
    *(void *)&a1[v17] = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[11];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    if (sub_C844((uint64_t)v20, 1, v7))
    {
      uint64_t v21 = sub_7424(&qword_E7D38);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v8(v19, v20, v7);
      sub_AA40((uint64_t)v19, 0, 1, v7);
    }
    uint64_t v22 = a3[12];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = (char *)a2 + v22;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
  }
  return a1;
}

uint64_t sub_95C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B17F0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (!sub_C844(v5, 1, v4)) {
    v8(v5, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  uint64_t result = sub_C844(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *sub_95D4C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  swift_bridgeObjectRetain();
  if (sub_C844((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_7424(&qword_E7D38);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_AA40((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  swift_bridgeObjectRetain();
  if (sub_C844((uint64_t)v18, 1, v6))
  {
    uint64_t v19 = sub_7424(&qword_E7D38);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v7(v17, v18, v6);
    sub_AA40((uint64_t)v17, 0, 1, v6);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  return a1;
}

char *sub_95F2C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_C844((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      sub_AA40((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_7424(&qword_E7D38);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[11];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  int v22 = sub_C844((uint64_t)&a1[v19], 1, v6);
  int v23 = sub_C844((uint64_t)v21, 1, v6);
  if (!v22)
  {
    if (!v23)
    {
      v8(v20, v21, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = sub_7424(&qword_E7D38);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
  sub_AA40((uint64_t)v20, 0, 1, v6);
LABEL_13:
  uint64_t v25 = a3[12];
  unint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)unint64_t v26 = v28;
  return a1;
}

char *sub_96214(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_C844((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_7424(&qword_E7D38);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    sub_AA40((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)int v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (sub_C844((uint64_t)&a2[v16], 1, v6))
  {
    uint64_t v19 = sub_7424(&qword_E7D38);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v7(v17, v18, v6);
    sub_AA40((uint64_t)v17, 0, 1, v6);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = &a1[v20];
  int v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  return a1;
}

char *sub_963EC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_B17F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = sub_C844((uint64_t)&a1[v9], 1, v6);
  int v13 = sub_C844((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      sub_AA40((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_7424(&qword_E7D38);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  uint64_t v15 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[11];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  int v22 = sub_C844((uint64_t)&a1[v19], 1, v6);
  int v23 = sub_C844((uint64_t)v21, 1, v6);
  if (!v22)
  {
    if (!v23)
    {
      v8(v20, v21, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = sub_7424(&qword_E7D38);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
  sub_AA40((uint64_t)v20, 0, 1, v6);
LABEL_13:
  uint64_t v25 = a3[12];
  unint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)unint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

uint64_t sub_966BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_966D0);
}

uint64_t sub_966D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_B17F0();
  sub_176F8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return sub_C844(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_7424(&qword_E7D38);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_96784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_96798);
}

void sub_96798(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_B17F0();
  sub_176F8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    uint64_t v10 = sub_7424(&qword_E7D38);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  sub_AA40(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DBCalendarState()
{
  uint64_t result = qword_EC5E0;
  if (!qword_EC5E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_96890()
{
  sub_B17F0();
  if (v0 <= 0x3F)
  {
    sub_96984();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_96984()
{
  if (!qword_EC5F0)
  {
    sub_B17F0();
    unint64_t v0 = sub_B3380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_EC5F0);
    }
  }
}

uint64_t sub_969DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_B17F0();
  sub_7870();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_17768();
  uint64_t v64 = v8;
  uint64_t v9 = sub_7424(&qword_E9BF0);
  sub_79FC();
  __chkstk_darwin(v10);
  sub_18E00();
  uint64_t v62 = v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = sub_7424(&qword_E7D38);
  __chkstk_darwin(v15 - 8);
  sub_18E00();
  uint64_t v61 = v16;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v63 = (uint64_t)&v55 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v55 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v55 - v27;
  __chkstk_darwin(v26);
  char v30 = (char *)&v55 - v29;
  if ((sub_B17B0() & 1) == 0) {
    return 0;
  }
  uint64_t v60 = v4;
  uint64_t v31 = type metadata accessor for DBCalendarState();
  if ((sub_21288(*(void *)(a1 + *(int *)(v31 + 20)), *(void *)(a2 + *(int *)(v31 + 20))) & 1) == 0) {
    return 0;
  }
  uint64_t v59 = v6;
  sub_5913C(a1 + *(int *)(v31 + 24), (uint64_t)v30);
  Swift::String v58 = (int *)v31;
  sub_5913C(a2 + *(int *)(v31 + 24), (uint64_t)v28);
  uint64_t v32 = (uint64_t)&v14[*(int *)(v9 + 48)];
  sub_5913C((uint64_t)v30, (uint64_t)v14);
  sub_5913C((uint64_t)v28, v32);
  uint64_t v33 = v60;
  if (sub_C844((uint64_t)v14, 1, v60) == 1)
  {
    sub_17644((uint64_t)v28, &qword_E7D38);
    sub_17644((uint64_t)v30, &qword_E7D38);
    if (sub_C844(v32, 1, v33) == 1)
    {
      sub_17644((uint64_t)v14, &qword_E7D38);
      goto LABEL_11;
    }
LABEL_8:
    uint64_t v34 = (uint64_t)v14;
LABEL_9:
    sub_17644(v34, &qword_E9BF0);
    return 0;
  }
  sub_5913C((uint64_t)v14, (uint64_t)v25);
  if (sub_C844(v32, 1, v33) == 1)
  {
    sub_17644((uint64_t)v28, &qword_E7D38);
    sub_17644((uint64_t)v30, &qword_E7D38);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v25, v33);
    goto LABEL_8;
  }
  uint64_t v35 = *(void (**)(void))(v59 + 32);
  Swift::String v56 = v20;
  v35();
  sub_980DC(&qword_E9BF8, (void (*)(uint64_t))&type metadata accessor for Date);
  int v57 = sub_B2F10();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v36(v64, v33);
  sub_17644((uint64_t)v28, &qword_E7D38);
  sub_17644((uint64_t)v30, &qword_E7D38);
  v36((uint64_t)v25, v33);
  uint64_t v20 = v56;
  sub_17644((uint64_t)v14, &qword_E7D38);
  if ((v57 & 1) == 0) {
    return 0;
  }
LABEL_11:
  uint64_t v37 = v58;
  if (*(void *)(a1 + v58[7]) != *(void *)(a2 + v58[7])) {
    return 0;
  }
  sub_98414();
  if (v39)
  {
    uint64_t v40 = v59;
    if (!v38) {
      return 0;
    }
  }
  else
  {
    sub_983EC();
    uint64_t v40 = v59;
    if (v41) {
      return 0;
    }
  }
  if (*(void *)(a1 + v37[9]) != *(void *)(a2 + v37[9])
    || (sub_21288(*(void *)(a1 + v37[10]), *(void *)(a2 + v37[10])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v42 = v63;
  sub_5913C(a1 + v37[11], v63);
  sub_5913C(a2 + v37[11], (uint64_t)v20);
  uint64_t v43 = v62;
  uint64_t v44 = v62 + *(int *)(v9 + 48);
  sub_5913C(v42, v62);
  sub_5913C((uint64_t)v20, v44);
  uint64_t v45 = (uint64_t)v20;
  uint64_t v46 = v60;
  if (sub_C844(v43, 1, v60) == 1)
  {
    sub_17644(v45, &qword_E7D38);
    sub_17644(v42, &qword_E7D38);
    if (sub_C844(v44, 1, v46) == 1)
    {
      sub_17644(v43, &qword_E7D38);
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  uint64_t v47 = v61;
  sub_5913C(v43, v61);
  if (sub_C844(v44, 1, v46) == 1)
  {
    sub_17644(v45, &qword_E7D38);
    sub_17644(v63, &qword_E7D38);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v47, v46);
LABEL_23:
    uint64_t v34 = v43;
    goto LABEL_9;
  }
  uint64_t v48 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v64, v44, v46);
  sub_980DC(&qword_E9BF8, (void (*)(uint64_t))&type metadata accessor for Date);
  char v49 = sub_B2F10();
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v50(v48, v46);
  sub_17644(v45, &qword_E7D38);
  sub_17644(v63, &qword_E7D38);
  v50(v47, v46);
  sub_17644(v43, &qword_E7D38);
  if ((v49 & 1) == 0) {
    return 0;
  }
LABEL_25:
  sub_98414();
  if (v52)
  {
    if ((v51 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    sub_983EC();
    if (v54) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_97070(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697461636F766E69 && a2 == 0xEE00657461446E6FLL;
  if (v2 || (sub_B37E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7261646E656C6163 && a2 == 0xEB00000000734449;
    if (v6 || (sub_B37E0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
      if (v7 || (sub_B37E0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
        if (v8 || (sub_B37E0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x756F436C61746F74 && a2 == 0xEA0000000000746ELL;
          if (v9 || (sub_B37E0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000018 && a2 == 0x80000000000BBCB0 || (sub_B37E0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000016 && a2 == 0x80000000000BBCD0 || (sub_B37E0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x80000000000BBCF0 || (sub_B37E0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x80000000000BBD10)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            char v10 = sub_B37E0();
            swift_bridgeObjectRelease();
            if (v10) {
              return 8;
            }
            else {
              return 9;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_9743C()
{
  return 9;
}